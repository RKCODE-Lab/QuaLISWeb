{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddInstrumentValidation=function AddInstrumentValidation(props){var _React$createElement,_React$createElement2;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INSTRUMENTID\"}),name:\"ninstrumentcode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.instrumentid,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,(_React$createElement={name:\"dvalidationdate\",label:props.intl.formatMessage({id:\"IDS_VALIDATIONDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dvalidationdate\"]?props.selectedRecord[\"dvalidationdate\"]:new Date(),dateFormat:\"MM/dd/yyyy\",isClearable:false,isMandatory:false,required:true},_defineProperty(_React$createElement,\"isMandatory\",true),_defineProperty(_React$createElement,\"maxTime\",props.currentTime),_defineProperty(_React$createElement,\"onChange\",function onChange(date){return props.handleDateChange(\"dvalidationdate\",date);}),_defineProperty(_React$createElement,\"value\",props.selectedRecord[\"dvalidationdate\"]),_React$createElement))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzvalidationdate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzvalidationdate\"],defaultValue:props.selectedRecord[\"ntzvalidationdate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzvalidationdate',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,(_React$createElement2={name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.ValidationStatus,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMandatory:false,isMulti:false,isSearchable:true},_defineProperty(_React$createElement2,\"isMandatory\",true),_defineProperty(_React$createElement2,\"isDisabled\",false),_defineProperty(_React$createElement2,\"closeMenuOnSelect\",true),_defineProperty(_React$createElement2,\"alphabeticalSort\",true),_defineProperty(_React$createElement2,\"onChange\",function onChange(event){return props.onComboChange(event,'ntranscode',1);}),_React$createElement2))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),name:\"sremarks\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"}),value:props.selectedRecord?props.selectedRecord[\"sremarks\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"})));};export default injectIntl(AddInstrumentValidation);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentValidation.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","FormTextarea","AddInstrumentValidation","props","intl","formatMessage","id","event","onInputOnChange","instrumentid","selectedRecord","Date","currentTime","date","handleDateChange","TimeZoneList","onComboChange","ValidationStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentValidation = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                name={\"ninstrumentcode\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                value={props.instrumentid}                   \r\n                isDisabled={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dvalidationdate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_VALIDATIONDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dvalidationdate\"]?props.selectedRecord[\"dvalidationdate\"]:new Date()}\r\n                             dateFormat={\"MM/dd/yyyy\"}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dvalidationdate\", date)}\r\n                             value={props.selectedRecord[\"dvalidationdate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzvalidationdate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzvalidationdate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzvalidationdate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzvalidationdate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n                <Col md={12}>\r\n                          <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.ValidationStatus}\r\n                         \r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                               defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMandatory={false}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                               onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    name={\"sremarks\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n\r\n    </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentValidation);"]},"metadata":{},"sourceType":"module"}