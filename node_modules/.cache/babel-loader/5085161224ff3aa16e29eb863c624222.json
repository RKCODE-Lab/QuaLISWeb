{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddSubSample.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nclass AddSubSample extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_COMPONENT\"\n      }),\n      isSearchable: true,\n      name: \"ncomponentcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: this.props.Component,\n      alphabeticalSort: \"true\",\n      optionId: \"ncomponentcode\",\n      optionValue: \"scomponentname\",\n      value: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComponentChange(event, 'ncomponentcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLENAME\"\n      }),\n      name: \"ssubsamplename\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: true,\n      value: this.props.selectComponent ? this.props.selectComponent[\"ssubsamplename\"] : \"\",\n      onChange: event => this.props.onInputComponentOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_MANUFACTURERSITE\"\n      }),\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: '6',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TOTALQUANTITY\"\n      }),\n      name: \"ssampleqty\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: true,\n      value: this.props.selectComponent ? this.props.selectComponent[\"ssampleqty\"] : \"\",\n      onChange: event => this.props.onInputComponentOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_TOTALQUANTITY\"\n      }),\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: '6',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_UNIT\"\n      }),\n      isSearchable: true,\n      name: \"nunitcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_UNIT\"\n      }),\n      isMandatory: true,\n      options: this.props.Unit || [],\n      alphabeticalSort: \"true\",\n      optionId: \"nunitcode\",\n      optionValue: \"sunitname\",\n      value: this.props.selectComponent ? this.props.selectComponent[\"nunitcode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"nunitcode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComponentChange(event, 'nunitcode', true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      name: \"scomments\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: true,\n      value: this.props.selectComponent ? this.props.selectComponent[\"scomments\"] : \"\",\n      onChange: event => this.props.onInputComponentOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(AddSubSample);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/AddSubSample.jsx"],"names":["React","Component","Col","Row","injectIntl","FormInput","FormSelectSearch","AddSubSample","render","props","intl","formatMessage","id","selectComponent","event","onComponentChange","onInputComponentOnChange","Unit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nclass AddSubSample extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" })}\r\n                        isSearchable={true}\r\n                        name={\"ncomponentcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={true}\r\n                        options={this.props.Component}\r\n                        alphabeticalSort=\"true\"\r\n                        optionId=\"ncomponentcode\"\r\n                        optionValue=\"scomponentname\"\r\n                        value={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        defaultValue={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        //  showOption={true}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => this.props.onComponentChange(event, 'ncomponentcode')}>\r\n                    </FormSelectSearch>\r\n                    <FormInput\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLENAME\" })}\r\n                        name=\"ssubsamplename\"\r\n                        type=\"text\"\r\n                        maxLength=\"100\"\r\n                        isMandatory={true}\r\n                        value={this.props.selectComponent ? this.props.selectComponent[\"ssubsamplename\"] : \"\"}\r\n                        onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_MANUFACTURERSITE\" })}\r\n                        isDisabled={false}\r\n                    />\r\n\r\n\r\n                    <Row>\r\n                        <Col md={'6'}>\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_TOTALQUANTITY\" })}\r\n                                name=\"ssampleqty\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={true}\r\n                                value={this.props.selectComponent ? this.props.selectComponent[\"ssampleqty\"] : \"\"}\r\n                                onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_TOTALQUANTITY\" })}\r\n                                isDisabled={false}\r\n                            />\r\n                        </Col>\r\n                        <Col md={'6'}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                                isSearchable={true}\r\n                                name={\"nunitcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                                isMandatory={true}\r\n                                options={this.props.Unit || []}\r\n                                alphabeticalSort=\"true\"\r\n                                optionId=\"nunitcode\"\r\n                                optionValue=\"sunitname\"\r\n                                value={this.props.selectComponent ? this.props.selectComponent[\"nunitcode\"] : \"\"}\r\n                                defaultValue={this.props.selectComponent ? this.props.selectComponent[\"nunitcode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComponentChange(event, 'nunitcode', true)}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormInput\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        name=\"scomments\"\r\n                        type=\"text\"\r\n                        maxLength=\"100\"\r\n                        isMandatory={true}\r\n                        value={this.props.selectComponent ? this.props.selectComponent[\"scomments\"] : \"\"}\r\n                        onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        isDisabled={false}\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(AddSubSample);"]},"metadata":{},"sourceType":"module"}