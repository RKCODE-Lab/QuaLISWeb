{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\PredefinedParameterTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Row, Col, Card, Nav, ListGroup, Media, FormLabel } from 'react-bootstrap';\nimport { HeaderText, ContactHeader } from './testmaster-styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { ProductList } from '../product/product.styled';\nimport { ClientList } from '../../components/App.styles';\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component'; // import ReactTooltip from 'react-tooltip';\n\nconst PredefinedParameterTab = props => {\n  const {\n    predefinedParameterList,\n    selectedParameter,\n    userInfo,\n    addId,\n    editId,\n    deleteId,\n    userRoleControlRights,\n    optionalData,\n    methodUrl,\n    primaryKeyName\n  } = props;\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_CODEDRESULT\"\n  })), /*#__PURE__*/React.createElement(Nav.Item, {\n    className: \"add-txt-btn\",\n    name: \"addcodedresultname\",\n    hidden: userRoleControlRights.indexOf(addId) === -1,\n    onClick: () => props.openModal(\"create\", selectedParameter, userInfo, addId, optionalData, props.masterData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    as: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, predefinedParameterList && predefinedParameterList.map((predefitem, predefindex) => {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: predefindex,\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ContactHeader, {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }\n    }, predefitem.spredefinedname), /*#__PURE__*/React.createElement(ProductList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 53\n      }\n    }, predefitem.sdisplaystatus), /*#__PURE__*/React.createElement(ProductList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 53\n      }\n    }, predefitem.sresultparacomment)), /*#__PURE__*/React.createElement(ClientList, {\n      className: \"mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 53\n      }\n    }, props.intl.formatMessage({\n      id: \"IDS_SETASDEFAULT\"\n    })), /*#__PURE__*/React.createElement(CustomSwitch, {\n      name: `predefinedswitch_${predefitem[primaryKeyName]}`,\n      checked: predefitem[\"ndefaultstatus\"] === 4 ? false : true,\n      onChange: event => props.onSwitchChange(predefitem, methodUrl.toLowerCase(), methodUrl, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(ClientList, {\n      className: \"mr-3 action-icons-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"a\",\n      className: \"mr-3\",\n      name: \"editcodedresultname\",\n      hidden: userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => props.openModal(\"update\", predefitem, userInfo, editId, optionalData, props.masterData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      className: \"ActionIconColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"a\",\n      className: \"mr-3 action-icons-wrap\",\n      name: \"deletecodedresultname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ConfirmDialog, {\n      name: \"deleteMessage\",\n      message: props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }),\n      doLabel: props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }),\n      doNotLabel: props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }),\n      icon: faTrashAlt //dataforprops=\"tooltip_list_wrap\"\n      //data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\n      ,\n      title: props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1,\n      handleClickDelete: () => props.deleteAction(predefitem, \"delete\", deleteId, methodUrl, \"openChildModal\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 57\n      }\n    })))));\n  }))))));\n};\n\nexport default injectIntl(PredefinedParameterTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/PredefinedParameterTab.jsx"],"names":["React","injectIntl","FormattedMessage","Row","Col","Card","Nav","ListGroup","Media","FormLabel","HeaderText","ContactHeader","FontAwesomeIcon","faPlus","faPencilAlt","faTrashAlt","ProductList","ClientList","ConfirmDialog","CustomSwitch","PredefinedParameterTab","props","predefinedParameterList","selectedParameter","userInfo","addId","editId","deleteId","userRoleControlRights","optionalData","methodUrl","primaryKeyName","intl","formatMessage","id","indexOf","openModal","masterData","map","predefitem","predefindex","spredefinedname","sdisplaystatus","sresultparacomment","event","onSwitchChange","toLowerCase","deleteAction"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, ListGroup, Media, FormLabel } from 'react-bootstrap';\r\nimport { HeaderText, ContactHeader } from './testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { ClientList } from '../../components/App.styles';\r\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst PredefinedParameterTab = (props) => {\r\n    const { predefinedParameterList, selectedParameter, userInfo, addId, editId, deleteId,\r\n        userRoleControlRights, optionalData, methodUrl, primaryKeyName } = props;\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        <HeaderText>{props.intl.formatMessage({ id: \"IDS_CODEDRESULT\" })}</HeaderText>\r\n                        <Nav.Item className=\"add-txt-btn\" name=\"addcodedresultname\"\r\n                            hidden={userRoleControlRights.indexOf(addId) === -1}\r\n                            onClick={() => props.openModal(\"create\", selectedParameter, userInfo, addId, optionalData,props.masterData)}>\r\n                            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>{\" \"}\r\n                            <FormattedMessage id=\"IDS_ADD\" defaultMessage=\"Add\" />\r\n                        </Nav.Item>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-0\">\r\n                        <ListGroup as=\"ul\">\r\n                            {predefinedParameterList &&\r\n                                predefinedParameterList.map((predefitem, predefindex) => {\r\n                                    return (\r\n                                        <ListGroup.Item key={predefindex} as=\"li\">\r\n                                            <Media>\r\n                                                <Media.Body>\r\n                                                    <ContactHeader className=\"mt-0\">{predefitem.spredefinedname}</ContactHeader>\r\n                                                    <ProductList>{predefitem.sdisplaystatus}</ProductList>\r\n                                                    <ProductList>{predefitem.sresultparacomment}</ProductList>\r\n                                                </Media.Body>\r\n                                                <ClientList className=\"mr-1\">\r\n                                                    <FormLabel>{props.intl.formatMessage({ id: \"IDS_SETASDEFAULT\" })}</FormLabel>\r\n                                                    <CustomSwitch\r\n                                                        name={`predefinedswitch_${predefitem[primaryKeyName]}`}\r\n                                                        checked={predefitem[\"ndefaultstatus\"] === 4 ? false : true}\r\n                                                        onChange={(event) => props.onSwitchChange(predefitem, methodUrl.toLowerCase(), methodUrl,event)}\r\n                                                    />\r\n                                                </ClientList>\r\n                                                <ClientList className=\"mr-3 action-icons-wrap\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                    <Nav.Item as=\"a\" className=\"mr-3\" name=\"editcodedresultname\"\r\n                                                        hidden={userRoleControlRights.indexOf(editId) === -1}\r\n                                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                      //  data-for=\"tooltip_list_wrap\"\r\n                                                        onClick={() => props.openModal(\"update\", predefitem, userInfo, editId, optionalData,props.masterData)}>\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\"></FontAwesomeIcon>\r\n                                                    </Nav.Item>\r\n\r\n                                                    <Nav.Item as=\"a\" className=\"mr-3 action-icons-wrap\" name=\"deletecodedresultname\">\r\n                                                        <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            //dataforprops=\"tooltip_list_wrap\"\r\n                                                            //data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            handleClickDelete={() => props.deleteAction(predefitem, \"delete\", deleteId, methodUrl, \"openChildModal\")}\r\n                                                        />\r\n                                                    </Nav.Item>\r\n                                                </ClientList>\r\n                                            </Media>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(PredefinedParameterTab);"]},"metadata":{},"sourceType":"module"}