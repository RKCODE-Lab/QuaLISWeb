{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN,REQUEST_FAILURE}from'./LoginTypes';import{sortData,searchData,constructOptionList,fillRecordBasedOnCheckBoxSelection}from'../components/CommonScript';//getComboLabelValue,, searchData\nimport{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';export function initialcombochangeget(nuserrolecode,data,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/userscreenhide/getUserScreenhidecomboo\",{nuserrolecode:nuserrolecode,\"userinfo\":userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},data),response.data),{},{searchedData:undefined});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}export function getUserScreenhideComboService(screenName,operation,userInfo,selectedcombo,selectedcombouser,ncontrolCode){return function(dispatch){if(operation===\"create\"){var urlArray=[];var AvaliableScreen=[];var ScreenRightsAvaliablescreen=rsapi.post(\"userscreenhide/getAvailableUserScreenhide\",{\"nuserrolecode\":selectedcombo[\"nuserrolecode\"]?selectedcombo[\"nuserrolecode\"].value:null,\"nusercode\":selectedcombouser[\"nusercode\"]?selectedcombouser[\"nusercode\"].value:null,\"userinfo\":userInfo});urlArray=[ScreenRightsAvaliablescreen];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){// selectedRecord = response[0].data;\nAvaliableScreen=response[0].data;dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,AvaliableScreen:AvaliableScreen,openModal:true,selectedcombo:selectedcombo,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function comboChangeUserRoleScreenRightsHide(selectedcombo,selectedcombouser,data,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/userscreenhide/createUserScreenhide\",{nuserrolecode:selectedcombo['nuserrolecode'].value,nusercode:selectedcombouser[\"nusercode\"].value,\"userinfo\":userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},data),response.data),{},{searchedData:undefined});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,skip:0,take:20}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}export function getUserScreenhideDetail(inputData,isServiceRequired){return function(dispatch){//console.log(\"inputData:\", inputData, isServiceRequired);\nif(isServiceRequired){dispatch(initRequest(true));console.log('rrfggg',inputData);return rsapi.post(\"userscreenhide/getSingleSelectUserScreenhide\",{\"screenrights\":inputData.SelectedScreenRights,\"SelectedUserName\":inputData.masterData.SelectedUserName.nusercode,\"userinfo\":inputData.userinfo,\"nuserrolescreencode\":inputData.nusersrolehidescreencode}).then(function(response){var dataState=inputData.dataState;if(response.data.ControlRights.length<dataState.skip){dataState['skip']=0;}var masterData=inputData.masterData;// sortData(masterData);\nvar controlRights=[];controlRights.push.apply(controlRights,_toConsumableArray(response.data.ControlRights));sortData(controlRights);// if ( inputData[\"checkBoxOperation\"] === 1 || inputData[\"checkBoxOperation\"] === 6){\n//     controlRights.push(...masterData[\"ControlRights\"]);\n// }\nmasterData[\"ControlRights\"]=controlRights;masterData[\"SelectedScreenRights\"]=inputData.SelectedScreenRights;//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:dataState,skip:inputData.skip,take:inputData.take}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response}));}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.SelectedScreenRights,inputData.childTabsKey,inputData.checkBoxOperation,\"nformcode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{SelectedScreenRights:inputData.SelectedScreenRights});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined}});}};}export function ListSwitchUpdate(inputParam,data,userInfo){return function(dispatch){dispatch(initRequest(true));var Avaliabledate=[];rsapi.post(\"/userscreenhide/updateListControlRights\",{\"needrights\":inputParam.needrights,\"nusersrolehidescreencode\":inputParam.nusersrolehidescreencode,'nuserrolecode':inputParam.nuserrolecode,\"nusercode\":inputParam.nusercodemain,\"userinfo\":userInfo,\"SelectedScreenRights\":data.SelectedScreenRights}).then(function(response){//   let masterData = inputData.masterData;\nvar masterData=_objectSpread(_objectSpread(_objectSpread({},data),response.data),{},{searchedData:undefined});sortData(masterData);// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/UserRoleScreenHideAction.js"],"names":["rsapi","DEFAULT_RETURN","REQUEST_FAILURE","sortData","searchData","constructOptionList","fillRecordBasedOnCheckBoxSelection","toast","Axios","initRequest","intl","initialcombochangeget","nuserrolecode","data","userInfo","dispatch","post","then","response","masterData","searchedData","undefined","type","payload","loading","catch","error","formatMessage","id","message","getUserScreenhideComboService","screenName","operation","selectedcombo","selectedcombouser","ncontrolCode","urlArray","AvaliableScreen","ScreenRightsAvaliablescreen","value","all","openModal","status","warn","comboChangeUserRoleScreenRightsHide","nusercode","skip","take","getUserScreenhideDetail","inputData","isServiceRequired","console","log","SelectedScreenRights","SelectedUserName","userinfo","nusersrolehidescreencode","dataState","ControlRights","length","controlRights","push","childTabsKey","checkBoxOperation","removeElementFromArray","ListSwitchUpdate","inputParam","Avaliabledate","needrights","nusercodemain"],"mappings":"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","sourcesContent":["\r\nimport rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN, REQUEST_FAILURE } from './LoginTypes';\r\nimport { sortData, searchData, constructOptionList, fillRecordBasedOnCheckBoxSelection } from '../components/CommonScript'//getComboLabelValue,, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nexport function initialcombochangeget(nuserrolecode,data,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/userscreenhide/getUserScreenhidecomboo\", { nuserrolecode,\"userinfo\": userInfo})\r\n            .then(response => {\r\n                const masterData = {...data,...response.data ,searchedData: undefined}\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,loading:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getUserScreenhideComboService(screenName, operation, userInfo, selectedcombo,selectedcombouser, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\") {\r\n            let urlArray = [];\r\n            let AvaliableScreen = [];\r\n            const ScreenRightsAvaliablescreen = rsapi.post(\"userscreenhide/getAvailableUserScreenhide\",\r\n             { \"nuserrolecode\": selectedcombo[\"nuserrolecode\"] ?\r\n              selectedcombo[\"nuserrolecode\"].value : null, \"nusercode\": selectedcombouser[\"nusercode\"] ?\r\n              selectedcombouser[\"nusercode\"].value : null, \"userinfo\": userInfo });\r\n            urlArray = [ScreenRightsAvaliablescreen];\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    // selectedRecord = response[0].data;\r\n                    AvaliableScreen = response[0].data;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation, screenName, AvaliableScreen, openModal: true, selectedcombo,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function comboChangeUserRoleScreenRightsHide(selectedcombo,selectedcombouser, data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/userscreenhide/createUserScreenhide\", { nuserrolecode: selectedcombo['nuserrolecode'].value,nusercode: selectedcombouser[\"nusercode\"].value, \"userinfo\": userInfo })\r\n            .then(response => {\r\n                const masterData = { ...data, ...response.data ,searchedData: undefined}\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false,skip:0,take:20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function getUserScreenhideDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        //console.log(\"inputData:\", inputData, isServiceRequired);\r\n        if (isServiceRequired) {\r\n            dispatch(initRequest(true));\r\n            console.log('rrfggg',inputData)\r\n            return rsapi.post(\"userscreenhide/getSingleSelectUserScreenhide\", {\r\n                \"screenrights\": inputData.SelectedScreenRights,\r\n              \"SelectedUserName\":inputData.masterData.SelectedUserName.nusercode,\r\n                \"userinfo\": inputData.userinfo,\r\n                \"nuserrolescreencode\":inputData.nusersrolehidescreencode\r\n            })\r\n                .then(response => {\r\n                    let dataState = inputData.dataState\r\n                    if (response.data.ControlRights.length < dataState.skip) {\r\n                        dataState['skip']=0\r\n                    }\r\n                    let masterData = inputData.masterData;\r\n                   // sortData(masterData);\r\n                    let controlRights = [];\r\n                  \r\n                    controlRights.push(...response.data.ControlRights);\r\n                    sortData(controlRights);\r\n                    // if ( inputData[\"checkBoxOperation\"] === 1 || inputData[\"checkBoxOperation\"] === 6){\r\n                    //     controlRights.push(...masterData[\"ControlRights\"]);\r\n                    // }\r\n                    masterData[\"ControlRights\"] = controlRights;\r\n                    masterData[\"SelectedScreenRights\"] = inputData.SelectedScreenRights;\r\n                    //sortData(masterData);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState,skip:inputData.skip,take:inputData.take } });\r\n                }).catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: error.response }));\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.SelectedScreenRights, inputData.childTabsKey, inputData.checkBoxOperation, \"nformcode\",inputData.removeElementFromArray);\r\n            let masterData={...inputData.masterData,SelectedScreenRights:inputData.SelectedScreenRights}\r\n            dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState: undefined } });\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function ListSwitchUpdate(inputParam,data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let Avaliabledate = [];\r\n        rsapi.post(\"/userscreenhide/updateListControlRights\", {\"needrights\":inputParam.needrights,\r\n        \"nusersrolehidescreencode\":inputParam.nusersrolehidescreencode,'nuserrolecode': inputParam.nuserrolecode,\r\n        \"nusercode\": inputParam.nusercodemain,\"userinfo\": userInfo,\"SelectedScreenRights\":data.SelectedScreenRights  })\r\n            .then(response => {\r\n             //   let masterData = inputData.masterData;\r\n             const masterData = { ...data, ...response.data ,searchedData: undefined}\r\n            \r\n             sortData(masterData);\r\n               // sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}