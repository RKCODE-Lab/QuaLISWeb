{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\DateFilterProperties.jsx\";\nimport React from 'react';\nimport { faChevronDown, faChevronUp, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Accordion, AccordionCollapse, Col, Form, InputGroup, Nav, Row, useAccordionToggle } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { condition } from '../Enumeration';\nimport FormInput from '../form-input/form-input.component';\nimport { ContentPanel, MediaHeader, MediaLabel } from '../App.styles';\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\n\nconst CustomToggle = ({\n  children,\n  eventKey\n}) => {\n  const currentEventKey = React.useContext(AccordionContext);\n  const isCurrentEventKey = currentEventKey === eventKey;\n  const decoratedOnClick = useAccordionToggle(eventKey, \"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between accordion-button\",\n    onClick: decoratedOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, children, isCurrentEventKey ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown //onClick={children.props.onExpandCall}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }\n  })));\n};\n\nconst DateFilterProperties = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AtAccordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomToggle, {\n    eventKey: \"DateValidation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_DATEVALIDATION\"\n  })), /*#__PURE__*/React.createElement(AccordionCollapse, {\n    eventKey: \"DateValidation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      'margin-top': '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PERIOD\"\n    }),\n    isSearchable: true,\n    name: \"period\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: true,\n    options: props.period,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] ? props.selectedFieldRecord[\"period\"] : \"\",\n    onChange: value => props.onComboChange(value, \"period\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] && /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEVALUE\"\n    }),\n    name: \"windowperiod\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DATEVALUE\"\n    }),\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"windowperiod\"] ? props.selectedFieldRecord[\"windowperiod\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }))), props.selectedFieldRecord[\"period\"] ? props.selectedFieldRecord[\"period\"].value === 6 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MONTH\"\n    }),\n    name: \"nmonth\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MONTH\"\n    }),\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"nmonth\"] ? props.selectedFieldRecord[\"nmonth\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DAYS\"\n    }),\n    name: \"nday\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DAYS\"\n    }),\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ? props.selectedFieldRecord[\"nday\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  })) : \"\" : \"\", props.selectedFieldRecord[\"period\"] ? props.selectedFieldRecord[\"period\"].value === 5 ? /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DAYS\"\n    }),\n    name: \"nday\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DAYS\"\n    }),\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ? props.selectedFieldRecord[\"nday\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }) : \"\" : \"\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_HIDEBEFOREDATE\"\n    }),\n    type: \"switch\",\n    name: \"hidebeforedate\",\n    onChange: event => props.onInputOnChange(event) // defaultValue={props.selectedFieldRecord[\"readonly\"]}\n    ,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"hidebeforedate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_HIDEAFTERDATE\"\n    }),\n    type: \"switch\",\n    name: \"hideafterdate\",\n    onChange: event => props.onInputOnChange(event) // defaultValue={props.selectedFieldRecord[\"readonly\"]}\n    ,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"hideafterdate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    type: \"checkbox\",\n    name: 'loadselecteddate',\n    label: props.intl.formatMessage({\n      id: \"IDS_LOADSELECTEDDATE\"\n    }),\n    onChange: event => props.onInputOnChange(event),\n    id: \"loadselecteddate\",\n    checked: props.selectedFieldRecord[\"loadselecteddate\"] // isMandatory={control.mandatory}\n    // required={control.mandatory}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CONDITION\"\n    }),\n    isSearchable: true,\n    name: \"condition\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: false,\n    options: props.dateConditions,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\",\n    onChange: value => props.onComboChange(value, \"condition\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FILTERVALUE\"\n    }),\n    isSearchable: true,\n    name: \"filtervalue\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: false,\n    options: props.dateComponents,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\",\n    onChange: value => props.onComboChange(value, \"filtervalue\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: props.addDateConstraints,\n    className: \"add-txt-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }))), props.selectedFieldRecord.dateConstraintArrayUI && props.selectedFieldRecord.dateConstraintArrayUI.map((condition, index) => {\n    return /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      style: {\n        border: \".5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, condition), /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => props.deleteCondition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      className: \"pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    })));\n  }));\n};\n\nexport default injectIntl(DateFilterProperties);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/droparea/DateFilterProperties.jsx"],"names":["React","faChevronDown","faChevronUp","faPlus","faTrashAlt","FontAwesomeIcon","Accordion","AccordionCollapse","Col","Form","InputGroup","Nav","Row","useAccordionToggle","FormattedMessage","injectIntl","condition","FormInput","ContentPanel","MediaHeader","MediaLabel","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","AtAccordion","AccordionContext","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","DateFilterProperties","props","intl","formatMessage","id","period","selectedFieldRecord","value","onComboChange","event","onNumericInputChange","onInputOnChange","dateConditions","dateComponents","addDateConstraints","dateConstraintArrayUI","map","index","border","deleteCondition"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faChevronDown, faChevronUp, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Accordion, AccordionCollapse, Col, Form, InputGroup, Nav, Row, useAccordionToggle ,} from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { condition } from '../Enumeration';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { ContentPanel, MediaHeader, MediaLabel } from '../App.styles';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\n\r\nconst CustomToggle = ({ children, eventKey }) => {\r\n    const currentEventKey = React.useContext(AccordionContext);\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    const decoratedOnClick = useAccordionToggle(eventKey, \"\");\r\n\r\n    return (\r\n        <div\r\n          className=\"d-flex justify-content-between accordion-button\"\r\n          onClick={decoratedOnClick}>\r\n          {children}\r\n          {isCurrentEventKey ?\r\n            <span className=\"pr-2\"><FontAwesomeIcon icon={faChevronUp} /></span>\r\n            : <span className=\"pr-2\"><FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n            /></span>}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const DateFilterProperties = (props) => {\r\n        return (\r\n            <>\r\n                <AtAccordion>\r\n                    <Accordion >\r\n                        <CustomToggle eventKey={\"DateValidation\"}>\r\n                        {props.intl.formatMessage({ id: \"IDS_DATEVALIDATION\" })}\r\n                            {/* <MediaHeader className=\"pl-2\">{props.intl.formatMessage({ id: \"IDS_DATEVALIDATION\" })}</MediaHeader> */}\r\n                        </CustomToggle>\r\n                        <AccordionCollapse eventKey={\"DateValidation\"}>\r\n                            <>\r\n                            <Row style={{'margin-top':'25px'}}>\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"period\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={false}\r\n                                        isClearable={true}\r\n                                        options={props.period}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] ?\r\n                                            props.selectedFieldRecord[\"period\"] : \"\"}\r\n                                        onChange={value => props.onComboChange(value, \"period\")}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    {props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] &&\r\n                                    <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" })}\r\n                                        name={\"windowperiod\"}\r\n                                        type=\"numeric\"\r\n                                        onChange={(event) => props.onNumericInputChange(event)}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" })}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"windowperiod\"] ?\r\n                                            props.selectedFieldRecord[\"windowperiod\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={\"7\"}\r\n                                    />\r\n        }\r\n\r\n                                    {/* <FormNumericInput\r\n                        name={\"windowperiod\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" }) }\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        strict={true}\r\n                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"windowperiod\"] ?\r\n                        props.selectedFieldRecord[\"windowperiod\"] : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        //maxLength={control.sfieldlength}\r\n\r\n                        // isDisabled={control.readonly ?\r\n                        //     control.readonly : checkReadOnly}\r\n\r\n                        onChange={(event) => props.onNumericInputChange(event, \"windowperiod\")}\r\n                        // precision={control.precision || 0}\r\n                        // max={control.max}\r\n                        // min={control.min}\r\n                        noStyle={true}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    /> */}\r\n                                </Col>\r\n                            </Row>\r\n                            {props.selectedFieldRecord[\"period\"] ?\r\n                                props.selectedFieldRecord[\"period\"].value === 6 ?\r\n                                    <>\r\n                                        <FormInput\r\n                                            label={props.intl.formatMessage({ id: \"IDS_MONTH\" })}\r\n                                            name={\"nmonth\"}\r\n                                            type=\"numeric\"\r\n                                            onChange={(event) => props.onNumericInputChange(event)}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_MONTH\" })}\r\n                                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"nmonth\"] ?\r\n                                                props.selectedFieldRecord[\"nmonth\"] : \"\"}\r\n                                            isMandatory={false}\r\n                                            required={true}\r\n                                            maxLength={\"7\"}\r\n                                        />\r\n                                        <FormInput\r\n                                            label={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                            name={\"nday\"}\r\n                                            type=\"numeric\"\r\n                                            onChange={(event) => props.onNumericInputChange(event)}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ?\r\n                                                props.selectedFieldRecord[\"nday\"] : \"\"}\r\n                                            isMandatory={false}\r\n                                            required={true}\r\n                                            maxLength={\"7\"}\r\n                                        />\r\n                                    </>\r\n                                    : \"\" : \"\"\r\n\r\n                            }\r\n                            {props.selectedFieldRecord[\"period\"] ?\r\n                                props.selectedFieldRecord[\"period\"].value === 5 ?\r\n                                    <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                        name={\"nday\"}\r\n                                        type=\"numeric\"\r\n                                        onChange={(event) => props.onNumericInputChange(event)}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ?\r\n                                            props.selectedFieldRecord[\"nday\"] : \"\"}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        maxLength={\"7\"}\r\n                                    />\r\n                                    : \"\" : \"\"\r\n\r\n                            }\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_HIDEBEFOREDATE\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"hidebeforedate\"}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={props.selectedFieldRecord[\"hidebeforedate\"]}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_HIDEAFTERDATE\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"hideafterdate\"}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={props.selectedFieldRecord[\"hideafterdate\"]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* <Col md={12}> */}\r\n                            <InputGroup>\r\n                                <Form.Group>\r\n                                    {/* <Form.Label as=\"legend\" htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label> */}\r\n                                    <Form.Check\r\n                                        inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={'loadselecteddate'}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_LOADSELECTEDDATE\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        id={\"loadselecteddate\"}\r\n                                        checked={props.selectedFieldRecord[\"loadselecteddate\"]}\r\n                                    // isMandatory={control.mandatory}\r\n                                    // required={control.mandatory}\r\n                                    />\r\n                                </Form.Group>\r\n                            </InputGroup >\r\n                            </>\r\n                        </AccordionCollapse>\r\n                    </Accordion>\r\n                    </AtAccordion>\r\n                    <hr />\r\n                {/* </Col> */}\r\n                {/* <DateTimePicker\r\n                name={\"mindate\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_MINDATE\" })}\r\n                className='form-control'\r\n                placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                selected={props.selectedFieldRecord && props.selectedFieldRecord[\"mindate\"] ?\r\n                    props.selectedFieldRecord[\"mindate\"] : null}\r\n                dateFormat={props.userinfo[\"ssitedatetime\"]}\r\n                timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                showTimeInput={true}\r\n                showTimeSelectOnly={false}\r\n                // isClearable={false}\r\n                isDisabled={false}\r\n                isMandatory={false}\r\n                //maxDate={props.CurrentTime}\r\n                //maxTime={props.CurrentTime}\r\n                onChange={(date) => props.handleDateChange(date, \"mindate\")}\r\n                // value={props.selectedFieldRecord && props.selectedFieldRecord[\"mindate\"] ?\r\n                //     props.selectedFieldRecord[\"mindate\"] : null}\r\n            />\r\n            <DateTimePicker\r\n                name={\"maxdate\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_MAXDATE\" })}\r\n                className='form-control'\r\n                placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                selected={props.selectedFieldRecord && props.selectedFieldRecord[\"maxdate\"] ?\r\n                    props.selectedFieldRecord[\"maxdate\"] : null}\r\n                dateFormat={props.userinfo[\"ssitedatetime\"]}\r\n                timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                showTimeInput={true}\r\n                showTimeSelectOnly={false}\r\n                // isClearable={false}\r\n                isDisabled={false}\r\n                isMandatory={false}\r\n                //maxDate={props.CurrentTime}\r\n                //maxTime={props.CurrentTime}\r\n                onChange={(date) => props.handleDateChange(date, \"maxdate\")}\r\n                value={props.selectedFieldRecord && props.selectedFieldRecord[\"maxdate\"] ?\r\n                    props.selectedFieldRecord[\"maxdate\"] : new Date()}\r\n            /> */}\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                    isSearchable={true}\r\n                    name={\"condition\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.dateConditions}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"condition\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                    isSearchable={true}\r\n                    name={\"filtervalue\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.dateComponents}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"filtervalue\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n                <div className='d-flex justify-content-end'>\r\n                    <Nav.Link onClick={props.addDateConstraints} className=\"add-txt-btn\">\r\n                        <FontAwesomeIcon icon={faPlus} />{ }\r\n                        <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                    </Nav.Link>\r\n                </div>\r\n                {props.selectedFieldRecord.dateConstraintArrayUI && props.selectedFieldRecord.dateConstraintArrayUI.map((condition, index) => {\r\n                    return (\r\n                        <ContentPanel className='d-flex justify-content-between'>\r\n                            <MediaLabel style={{ border: \".5rem\" }}>\r\n                                {condition}\r\n                            </MediaLabel>\r\n                            <Nav.Link onClick={() => props.deleteCondition(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\"></FontAwesomeIcon>\r\n                            </Nav.Link>\r\n                        </ContentPanel>\r\n                    );\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n    export default injectIntl(DateFilterProperties);"]},"metadata":{},"sourceType":"module"}