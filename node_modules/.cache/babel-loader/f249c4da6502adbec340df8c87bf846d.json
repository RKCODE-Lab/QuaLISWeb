{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\stability\\\\StabilityStudyPlan.jsx\";\nimport { faBolt, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { Button, Card, Col, FormLabel, Nav, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport QRCode from 'react-qr-code';\nimport { connect } from 'react-redux';\nimport SplitterLayout from \"react-splitter-layout\";\nimport { toast } from 'react-toastify';\nimport PortalModal from '../../PortalModal';\nimport { getPreviewTemplate, testSectionTest, updateStore, filterTransactionList } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { addMoreTests, addSubTimePoint, approveStbStudyPlan, cancelSampleAction, cancelStbTimePointAction, componentTest, createRegTest, deleteTestAction, getEditStbTimePointDetails, getStabilityStudyPlanByFilterSubmit, getTimePointDetail, getTimePointTestDetail, ReloadData, saveTimePoint, updateStbTimePoint, getRegTypeChange, getRegSubTypeChange, onApprovalConfigVersionChange, getSampleTypeChange, getTestDetailFromRegistration } from '../../actions/StabilityStudyPlanAction';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { ReactComponent as SaveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/save_icon.svg\";\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport BarcodeGeneratorComponent from '../../components/BarcodeGeneratorComponent';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { childComboClear, comboChild, constructOptionList, convertDateValuetoString, formatInputDate, getControlMap, getSameRecordFromTwoArrays, Lims_JSON_stringify, rearrangeDateFormat, removeIndex, showEsign, sortData, sortDataForDate } from '../../components/CommonScript';\nimport { checkBoxOperation, formCode, SampleType, SideBarSeqno, SideBarTabIndex, transactionStatus } from '../../components/Enumeration';\nimport ModalShow from '../../components/ModalShow';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport CustomPopover from '../../components/customPopover';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport AddBarcode from '../../pages/BarcodeTemplate/AddBarcode';\nimport Esign from '../audittrail/Esign';\nimport MoveSampleOrContainers from '../basemaster/MoveSampleOrContainers';\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\nimport AddMasterRecords from '../dynamicpreregdesign/AddMasterRecords';\nimport AddFile from '../goodsin/AddFile';\nimport GoodsInFilter from '../goodsin/GoodsInFilter';\nimport { ProductList } from '../product/product.styled';\nimport AddSubSample from '../registration/AddSubSample';\nimport AddTest from '../registration/AddTest';\nimport MappingFields from '../registration/MappingFields';\nimport { getRegistrationSubSample } from '../registration/RegistrationValidation';\nimport StbPreRegSlideOutModal from './StbPreRegSlideOutModal';\nimport RegistrationFilter from '../registration/RegistrationFilter';\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { ReactComponent as FullviewExpand } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/fullview-expand.svg\";\nimport { ReactComponent as FullviewCollapse } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/fullview-collapse.svg\";\nimport { faEye } from '@fortawesome/free-regular-svg-icons';\nimport RegistrationResultTab from '../registration/RegistrationResultTab';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport SampleGridTab from '../registration/SampleGridTab';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { faFileInvoice } from '@fortawesome/free-solid-svg-icons';\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { faStop } from '@fortawesome/free-solid-svg-icons';\n\nclass StabilityStudyPlan extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mandatoryList = (prereg, printer, file, childtest, regSubSample, operation, outsourcetest, adhocTest) => {\n      let mandatory = [];\n\n      if (file) {\n        mandatory = [{\n          \"mandatory\": true,\n          \"idsName\": \"IDS_IMPORTFILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }];\n      } else if (printer) {\n        mandatory = [{\n          \"mandatory\": true,\n          \"idsName\": \"IDS_PRINTER\",\n          \"dataField\": \"sprintername\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"mandatory\": true,\n          \"idsName\": \"IDS_BARCODENAME\",\n          \"dataField\": \"sbarcodename\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else if (regSubSample) {\n        let sampleList = [];\n        const skip = this.state.skip;\n        const take = this.state.take;\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.StabilityStudyPlanGet;\n          sampleList = list ? list.slice(skip, skip + take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.StabilityStudyPlanGet && this.props.Login.masterData.StabilityStudyPlanGet.slice(skip, skip + take);\n        }\n\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\n        const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\n\n        if (findComponentReqSpec[0] === 3) {\n          mandatory = [{\n            \"idsName\": \"IDS_COMPONENT\",\n            \"dataField\": \"ncomponentcode\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"combo\"\n          }];\n        }\n\n        this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.mandatory === true) {\n                  mandatory.push({\n                    \"mandatory\": true,\n                    \"idsName\": componentrow.displayname[this.props.Login.userInfo.slanguagetypecode],\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                    \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                  });\n                }\n\n                return mandatory;\n              }) : component.mandatory === true ? mandatory.push({\n                \"mandatory\": true,\n                \"idsName\": component.displayname[this.props.Login.userInfo.slanguagetypecode],\n                \"dataField\": component.label,\n                \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n              }) : \"\";\n            });\n          });\n        });\n\n        if (operation !== 'update') {\n          mandatory.push({\n            \"mandatory\": true,\n            \"idsName\": \"IDS_TESTNAME\",\n            \"dataField\": \"ntestgrouptestcode\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      } else if (childtest) {\n        mandatory = [{\n          \"mandatory\": true,\n          \"idsName\": \"IDS_TESTNAME\",\n          \"dataField\": \"ntestgrouptestcode\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else if (outsourcetest) {\n        mandatory = [{\n          \"idsName\": \"IDS_SITE\",\n          \"dataField\": \"outsourcesite\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"combo\"\n        }, {\n          \"idsName\": \"IDS_TEST\",\n          \"dataField\": \"outSourceTestList\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"combo\"\n        }, {\n          \"idsName\": \"IDS_SAMPLEID\",\n          \"dataField\": \"ssampleid\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_OUTSOURCEDATE\",\n          \"dataField\": \"doutsourcedate\",\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else if (adhocTest) {\n        mandatory = [{\n          \"mandatory\": true,\n          \"idsName\": \"IDS_TESTNAME\",\n          \"dataField\": \"ntestcode\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      }\n\n      return mandatory;\n    };\n\n    this.handleFilterDateChange = (dateName, dateValue) => {\n      let masterData = this.props.Login.masterData;\n      masterData[dateName] = dateValue;\n      this.setState({\n        masterData\n      });\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, event, status) => {\n      let id = false;\n\n      if (event && event.nstbtimepointtestcode) {\n        id = event.nstbtimepointtestcode;\n      } else if (event && event.nstbtimepointcode) {\n        id = event.nstbtimepointcode;\n      } else if (event && event.nstbstudyplancode) {\n        id = event.nstbstudyplancode;\n      }\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status !== \"click\") {\n        if (index === SideBarTabIndex.RESULT) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TIMEPOINTRESULTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.ATTACHMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.COMMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTCOMMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.HISTORY) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TIMEPOINTHISTORY\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.OUTSOURCE) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.SUBSAMPLE,\n            screenName: \"IDS_OUTSOURCEDETAILS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else {\n          if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n                activeTabId: id\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      } else {// if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        //     const updateInfo = {\n        //         typeName: DEFAULT_RETURN,\n        //         data: {\n        //             activeTabIndex :activeTabIndex\n        //            // activeTabId :  id\n        //         }\n        //     }\n        //     this.props.updateStore(updateInfo);\n        //     }\n      }\n    };\n\n    this.onRegTypeChange = (event, fieldName, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map[\"nregtypecode\"] = parseInt(event.value);\n        Map['userinfo'] = this.props.Login.userInfo;\n        this.props.getRegTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onSampleTypeChange = (event, fieldName, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map[\"nsampletypecode\"] = parseInt(event.value);\n        Map['userinfo'] = this.props.Login.userInfo;\n        this.props.getSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onRegSubTypeChange = (event, fieldName, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\n        Map[\"nregsubtypecode\"] = parseInt(event.value);\n        Map[\"nneedtemplatebasedflow\"] = event.item.nneedtemplatebasedflow;\n        Map['userinfo'] = this.props.Login.userInfo;\n        this.props.getRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onApprovalConfigVersionChange = (event, fieldName, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\n        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RegSubTypeValue.nregsubtypecode; //  Map[\"nneedtemplatebasedflow\"] = event.item.nneedtemplatebasedflow;\n\n        Map[\"napproveconfversioncode\"] = event.value;\n        Map['userinfo'] = this.props.Login.userInfo;\n        this.props.onApprovalConfigVersionChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onDesignTemplateChange = (event, fieldName, labelname) => {\n      let masterData = this.props.Login.masterData;\n      masterData = { ...masterData,\n        [labelname]: { ...event.item\n        }\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterChange = (event, labelname) => {\n      let masterData = this.props.Login.masterData;\n      masterData = { ...masterData,\n        [labelname]: { ...event.item\n        }\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.cancelSampleRecords = (controlcode, skip, take) => {\n      let Map = {};\n      let sampleList = [];\n\n      if (this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus === transactionStatus.APPROVED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      } else {\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.StabilityStudyPlanGet;\n          sampleList = list ? list.slice(skip, skip + take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\n        }\n\n        if (sampleList && sampleList.length > 0) {\n          const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n          Map['FromDate'] = obj.fromDate;\n          Map['ToDate'] = obj.toDate;\n          Map[\"userinfo\"] = this.props.Login.userInfo;\n          Map[\"ncontrolcode\"] = controlcode;\n          Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n          Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n          Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n          Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n          Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n          Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n          Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n          Map[\"nstbstudyplancode\"] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\");\n          Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint && this.props.Login.masterData.selectedStbTimePoint.length > 0 ? this.props.Login.masterData.selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\") : \"-1\";\n          Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest.length > 0 ? this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\";\n          Map[\"napproveconfversioncode\"] = this.props.Login.masterData.napproveconfversioncode;\n          let inputParam = {\n            inputData: Map,\n            postParamList: this.postParamList,\n            action: 'delete'\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                parentPopUpSize: 'lg',\n                screenName: this.props.Login.screenName,\n                operation: 'cancel'\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.cancelSampleAction(inputParam, this.props.Login.masterData);\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLETOCANCELREJECT\"\n          }));\n        }\n      }\n    };\n\n    this.cancelSubSampleRecord = (controlcode, skip, take) => {\n      if (this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus === transactionStatus.APPROVED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      } else {\n        let testList = [];\n\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\n          const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample : this.props.Login.masterData.StbTimePointGet;\n          testList = list ? list.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake) : [];\n        } else {\n          testList = this.props.Login.masterData.StbTimePointGet.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\n        }\n\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePoint.length > 0) {\n          let Map = {};\n          Map['nstbstudyplancode'] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ? this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\";\n          Map['nstbtimepointtestcode'] = this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest.length > 0 ? this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\n          Map[\"userinfo\"] = this.props.Login.userInfo;\n          Map[\"ncontrolcode\"] = controlcode;\n          Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n          Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n          Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n          Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n          Map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\n          Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n          Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n          Map[\"nfilterstatus\"] = -1;\n          Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest.length > 0 ? this.props.Login.masterData.selectedStbTimePointTest.map(sample => sample.nstbtimepointcode).join(\",\") : \"-1\";\n          Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.masterData.FromDate);\n          Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.masterData.ToDate);\n          let inputParam = {\n            inputData: Map,\n            postParamList: this.postParamList,\n            action: 'StbTimePoint'\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                parentPopUpSize: 'lg',\n                screenName: this.props.Login.screenName,\n                operation: 'delete'\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.cancelStbTimePointAction(inputParam, this.props.Login.masterData);\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLETOCANCELREJECT\"\n          }));\n        }\n      }\n    };\n\n    this.getTestChildTabDetailRegistration = (inputData, isServiceRequired) => {\n      if (this.props.Login.masterData.selectedStbTimePointTest[0].nstbtimepointtestcode !== parseInt(inputData.nstbtimepointtestcode)) {\n        let masterData = this.props.Login.masterData;\n        masterData['selectedStbTimePointTest'] = inputData.selectedStbTimePointTest;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: false,\n            screenData: {\n              masterData\n            },\n            openModal: false,\n            screenName: this.props.Login.screenName,\n            activeTabIndex: false\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.cancelRecord = (controlcode, skip, take) => {\n      if (this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus === transactionStatus.APPROVED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      } else {\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePointTest.length > 0) {\n          let Map = {};\n          Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n          Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n          Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n          Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n          Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n          Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n          Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n          Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest.length > 0 ? this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\n          Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint.length > 0 ? this.props.Login.masterData.selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\") : \"-1\";\n          Map[\"nstbstudyplancode\"] = this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ? this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\";\n          Map[\"userinfo\"] = this.props.Login.userInfo;\n          Map[\"napproveconfversioncode\"] = this.props.Login.masterData.ApprovalConfigVersion && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode;\n          Map[\"ncontrolcode\"] = controlcode;\n          let inputParam = {\n            inputData: Map,\n            postParamList: this.postParamList,\n            action: 'delete'\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                parentPopUpSize: 'lg',\n                screenName: this.props.Login.screenName,\n                operation: 'delete'\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.deleteTestAction(inputParam, this.props.Login.masterData);\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTESTTOCANCELREJECT\"\n          }));\n        }\n      }\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.editSubSampleRegistration = inputParam => {\n      let data = [];\n      const regSubSamplewithoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata;\n\n      if (Layout !== undefined) {\n        Layout.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\") {\n                  data.push(componentrow);\n                } else {\n                  regSubSamplewithoutCombocomponent.push(componentrow);\n                }\n\n                return null;\n              }) : component.inputtype === \"combo\" ? data.push(component) : regSubSamplewithoutCombocomponent.push(component);\n            });\n          });\n        });\n        const regSubSamplecomboComponents = data;\n        let regSubSamplechildColumnList = {};\n        data.map(columnList => {\n          const val = comboChild(data, columnList, regSubSamplechildColumnList, true);\n          data = val.data;\n          regSubSamplechildColumnList = val.childColumnList;\n          return null;\n        });\n        const sampleList = getSameRecordFromTwoArrays(inputParam.masterData.selectedStabilityStudyPlan, [inputParam.mastertoedit], \"nstbstudyplancode\");\n        this.props.getEditStbTimePointDetails(inputParam, data, this.state.selectedRecord, regSubSamplechildColumnList, regSubSamplecomboComponents, regSubSamplewithoutCombocomponent, sampleList[0].ncomponentrequired === 3 ? true : false);\n      } else {\n        toast.info(\"Configure the sub sample template for this registrationtype\");\n      }\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\n      const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate);\n      let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue; //let RealApprovalConfigVersionValue = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue\n      //ALPD-1166\n\n      let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue;\n      let RealSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let RealRegTypeList = this.props.Login.masterData.RegistrationType || [];\n      let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || [];\n      let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || [];\n      let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || [];\n      let activeSampleTab = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      let activeSubSampleTab = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      let activeTestTab = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\n      let masterData = { ...this.props.Login.masterData,\n        RealSampleTypeValue,\n        RealRegTypeValue,\n        RealRegSubTypeValue,\n        RealFilterStatusValue,\n        RealFromDate,\n        RealToDate,\n        RealDesignTemplateMappingValue,\n        RealApprovalConfigVersionValue,\n        RealSampleTypeList,\n        RealRegTypeList,\n        RealRegSubTypeList,\n        RealDesignTemplateMappingList,\n        RealApprovalConfigVersionList,\n        RealFilterStatuslist\n      };\n      let inputData = {\n        nstbstudyplancode: \"\",\n        saveFilterSubmit: true,\n        //ALPD-4912 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\n        sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue,\n        regTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegTypeValue,\n        regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue,\n        filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.FilterStatusValue,\n        approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.ApprovalConfigVersionValue,\n        designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.DesignTemplateMappingValue,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        userinfo: this.props.Login.userInfo,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n      };\n\n      if (inputData.nsampletypecode) {\n        if (inputData.ndesigntemplatemappingcode) {\n          const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n          inputData['FromDate'] = obj.fromDate;\n          inputData['ToDate'] = obj.toDate; // ALPD-4130 to clear Additinal Filter config upon Filter Submit- ATE-241\n\n          masterData['kendoFilterList'] = undefined;\n          const selectedFilter = {};\n          selectedFilter[\"fromdate\"] = RealFromDate;\n          selectedFilter[\"todate\"] = RealToDate;\n          const inputParam = {\n            masterData,\n            inputData,\n            searchSubSampleRef: this.searchSubSampleRef,\n            searchSampleRef: this.searchSampleRef,\n            searchTestRef: this.searchTestRef //, selectedFilter\n\n          };\n          this.props.getStabilityStudyPlanByFilterSubmit(inputParam);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\"\n        }));\n      }\n    };\n\n    this.onReload = () => {\n      const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n      const RealFromDate = obj.fromDate;\n      const RealToDate = obj.toDate;\n      let RealSampleTypeValue = this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue;\n      let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue;\n      let RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue;\n      let RealFilterStatusValue = this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue;\n      let RealDesignTemplateMappingValue = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue;\n      let RealApprovalConfigVersionValue = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue;\n      let activeSampleTab = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      let activeSubSampleTab = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      let activeTestTab = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\n      let SampleTypeValue = RealSampleTypeValue;\n      let RegTypeValue = RealRegTypeValue;\n      let RegSubTypeValue = RealRegSubTypeValue;\n      let FilterStatusValue = RealFilterStatusValue;\n      let DesignTemplateMappingValue = RealDesignTemplateMappingValue;\n      let ApprovalConfigVersionValue = RealApprovalConfigVersionValue; // let FromDate = this.props.Login.masterData.FromDate\n      // let ToDate = this.props.Login.masterData.ToDate\n\n      const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\n      const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\n      let masterData = { ...this.props.Login.masterData,\n        RealSampleTypeValue,\n        RealRegTypeValue,\n        RealRegSubTypeValue,\n        FromDate,\n        ToDate,\n        RealFilterStatusValue,\n        RealFromDate,\n        RealToDate,\n        SampleTypeValue,\n        RegTypeValue,\n        RegSubTypeValue,\n        FilterStatusValue,\n        DesignTemplateMappingValue,\n        RealDesignTemplateMappingValue,\n        RealApprovalConfigVersionValue\n      };\n      let inputData = {\n        nstbstudyplancode: \"\",\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        nfilterstatus: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\n        userinfo: this.props.Login.userInfo,\n        activeSubSampleTab,\n        flag: 1,\n        nneedtemplatebasedflow: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedtemplatebasedflow,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n      };\n\n      if (inputData.nsampletypecode) {\n        inputData['FromDate'] = obj.fromDate;\n        inputData['ToDate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchSampleRef: this.searchSampleRef,\n          searchTestRef: this.searchTestRef,\n          selectedFilter: this.state.selectedFilter\n        };\n        this.props.ReloadData(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\"\n        }));\n      }\n    };\n\n    this.addTimePoint = (controlcode, skip, take) => {\n      let Map = {};\n      let sampleList = [];\n\n      if (this.props.Login.masterData.searchedSample !== undefined) {\n        const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.StabilityStudyPlanGet;\n        sampleList = list ? list.slice(skip, skip + take) : [];\n      } else {\n        sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\n      }\n\n      let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\n      const nsampletypecode = 9;\n      let check = true;\n\n      if (nsampletypecode === SampleType.CLINICALTYPE && addSubSampleList.length > 1) {\n        check = false;\n      }\n\n      if (addSubSampleList && addSubSampleList.length > 0 && check) {\n        const findTransactionStatus = [...new Set(addSubSampleList.map(item => item.ntransactionstatus))];\n\n        if (findTransactionStatus.length === 1) {\n          if (findTransactionStatus.indexOf(transactionStatus.REJECT) === -1 && findTransactionStatus.indexOf(transactionStatus.CANCELLED) === -1 && findTransactionStatus.indexOf(transactionStatus.RELEASED) === -1) {\n            // if (findTransactionStatus[0] === transactionStatus.PREREGISTER) {\n            //   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\n            //   if (findApprovalVersion.length === 1) {\n            const findSampleSpec = [...new Set(addSubSampleList.map(item => item.nallottedspeccode))]; //const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\n\n            const findSampleSpectemplate = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))]; //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\n\n            if (findSampleSpec.length === 1) //&& findComponent.length === 1 \n              {\n                const findComponentReqSpec = addSubSampleList[0].ncomponentrequired;\n                let data = [];\n                const regSubSamplewithoutCombocomponent = [];\n                const Layout = this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata;\n\n                if (Layout !== undefined) {\n                  Layout.map(row => {\n                    return row.children.map(column => {\n                      return column.children.map(component => {\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                          if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                            data.push(componentrow);\n                          } else {\n                            regSubSamplewithoutCombocomponent.push(componentrow);\n                          }\n\n                          return null;\n                        }) : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : regSubSamplewithoutCombocomponent.push(component);\n                      });\n                    });\n                  });\n                  const regSubSamplecomboComponents = data;\n                  let regchildColumnList = {};\n                  data.map(columnList => {\n                    const val = comboChild(data, columnList, regchildColumnList, true);\n                    data = val.data;\n                    regchildColumnList = val.childColumnList;\n                    return null;\n                  });\n                  Map[\"nallottedspeccode\"] = findSampleSpec[0];\n                  Map[\"ntemplatemanipulationcode\"] = findSampleSpectemplate[0];\n                  Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1;\n                  Map[\"nneedsubsample\"] = true;\n                  Map[\"nstbstudyplancode\"] = addSubSampleList && addSubSampleList.map(sample => sample.nstbstudyplancode).join(\",\");\n                  Map[\"stbTimePoint\"] = addSubSampleList;\n                  this.props.addSubTimePoint(this.props.Login.masterData, this.props.Login.userInfo, data, this.state.selectedRecord, regchildColumnList, regSubSamplecomboComponents, regSubSamplewithoutCombocomponent, Map, controlcode, findComponentReqSpec === 3 ? true : false, this.state.specBasedTestPackage);\n                } else {\n                  toast.info(this.props.intl.formatMessage({\n                    id: \"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\"\n                  }));\n                }\n              } else {\n              toast.info(this.props.intl.formatMessage({\n                id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"\n              }));\n            }\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_CANNOTADDSUBSAMPLEASSAMPLEREJECTEDORCANCELLEDORRELEASED\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: check ? \"IDS_SELECTSAMPLETOSUBSAMPLE\" : \"IDS_SELECTONESAMPLE\"\n        }));\n      }\n    };\n\n    this.getStabilityStudyPlanComboService = (ScreenName, operation, primaryKeyField, masterData, userInfo, editId, importData) => {\n      const ndesigntemplatemappingcodefilter = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\n\n      if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\n        let data = [];\n        const withoutCombocomponent = [];\n        const Layout = this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.jsondata;\n\n        if (Layout !== undefined) {\n          Layout.map(row => {\n            return row.children.map(column => {\n              return column.children.map(component => {\n                return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                    data.push(componentrow);\n                  } else {\n                    withoutCombocomponent.push(componentrow);\n                  }\n\n                  return null;\n                }) : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n              });\n            });\n          });\n          const comboComponents = data;\n          let childColumnList = {};\n          data.map(columnList => {\n            const val = comboChild(data, columnList, childColumnList, true);\n            data = val.data;\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          const mapOfFilterRegData = {\n            nsampletypecode: SampleType.STABILITY,\n            sampletypecategorybasedflow: transactionStatus.NO,\n            nneedsubsample: transactionStatus.YES,\n            ntestgroupspecrequired: transactionStatus.YES\n          };\n          this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, true, false, mapOfFilterRegData, false, \"create\", ScreenName || \"\", importData);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_CONFIGURETEMPLATE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\"\n        }));\n      }\n    };\n\n    this.onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const selectSection = this.state.selectSection || {};\n      const selectPackage = [];\n      selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\n\n      if (comboData !== null) {\n        selectSection[fieldName] = comboData;\n        selectSection[\"ssectionname\"] = comboData.label;\n        selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode);\n        selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].nallottedspeccode;\n        selectedRecord[fieldName] = comboData;\n        selectedRecord[\"ssectionname\"] = comboData.label;\n        const specBasedComponent = specBasedComponent1;\n        selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode : parseInt(this.props.Login.masterData.selectedStbTimePoint && [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\")); // selectedRecord[\"nspecsampletypecode\"] = parseInt(this.props.Login.masterData.selectedStbTimePoint &&\n        //     [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\"));\n\n        this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent, this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent, this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode, this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample);\n      } else {\n        let availableTestData = [];\n\n        if (selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"ntestgrouptestcode\"];\n          availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || [];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            availableTest: this.props.Login.AllTest,\n            TestCombined: availableTestData,\n            TestSection: this.props.Login.TestSection || []\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onComponentChange = (comboData, fieldName, nneedsubsample) => {\n      if (comboData !== null) {\n        //  if (!nneedsubsample) {\n        const selectedRecord = this.state.selectedRecord || {};\n\n        if (fieldName === 'ntzdreceivedate') {\n          selectedRecord[\"ntzdreceivedate\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else {\n          selectedRecord[fieldName] = comboData;\n          selectedRecord[\"Sample Name\"] = comboData.label;\n          selectedRecord[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode;\n          selectedRecord[\"ntestgrouptestcode\"] = []; //selectedRecord[\"nneedsubsample\"] = nneedsubsample;\n\n          selectedRecord[\"nneedsubsample\"] = true;\n          this.props.componentTest(selectedRecord, true, this.props.Login.specBasedComponent, this.props.Login.Conponent, this.state.specBasedTestPackage, this.props.Login.specBasedTestPackage ? true : false);\n        }\n      }\n    };\n\n    this.onInputOnSubSampleChange = (event, control, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === 'timeonly') {\n          selectedRecord['dateonly'] = false;\n        }\n\n        if (event.target.name === 'dateonly') {\n          selectedRecord['timeonly'] = false;\n        }\n\n        selectedRecord[event.target.name] = event.target.checked;\n      } else {\n        if (control.isnumeric === true && control.label === radiotext) {\n          selectedRecord[event.target.name] = event.target.value.replace(/[^0-9]/g, '');\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        } // selectedRecord[event.target.name] = event.target.value;\n\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboSubSampleChange = (comboData, control, customName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        let parentList = [];\n        let childComboList = [];\n        let childColumnList = {};\n        let comboName = customName || control.label;\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData ? comboData.value : -1,\n          // item: comboData ? comboData.item : \"\",\n          item: comboData ? { ...comboData.item,\n            pkey: control.valuemember,\n            nquerybuildertablecode: control.nquerybuildertablecode,\n            \"source\": control.source\n          } : \"\",\n          label: comboName,\n          nameofdefaultcomp: control.name\n        };\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          pkey: control.valuemember,\n          nquerybuildertablecode: control.nquerybuildertablecode,\n          \"source\": control.source\n        };\n\n        if (comboData) {\n          selectedRecord[comboName] = comboData;\n        } else {\n          selectedRecord[comboName] = [];\n        }\n\n        if (control.child && control.child.length > 0) {\n          childComboList = getSameRecordFromTwoArrays(this.state.regSubSamplecomboComponents, control.child, \"label\");\n          childColumnList = {};\n          childComboList.map(columnList => {\n            const val = comboChild(this.state.regSubSamplecomboComponents, columnList, childColumnList, false);\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          parentList = getSameRecordFromTwoArrays(this.state.regSubSamplewithoutCombocomponent, control.child, \"label\");\n          this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.regSubSamplecomboData, childComboList, childColumnList, this.state.regSubSamplewithoutCombocomponent, [...childComboList, ...parentList]);\n        } else {\n          this.setState({\n            selectedRecord\n          });\n        }\n      } else {\n        let regSubSamplecomboData = this.props.Login.regSubSamplecomboData;\n        selectedRecord[control.label] = \"\";\n        const inputParam = {\n          control,\n          comboComponents: this.state.regSubSamplecomboData,\n          withoutCombocomponent: this.state.regSubSamplewithoutCombocomponent,\n          selectedRecord: selectedRecord,\n          comboData: regSubSamplecomboData\n        };\n        const childParam = childComboClear(inputParam);\n        selectedRecord = childParam.selectedRecord;\n        regSubSamplecomboData = childParam.comboData;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            regSubSamplecomboData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onNumericInputSubSampleChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (value === 0) {\n        selectedRecord[name] = undefined;\n      } else {\n        selectedRecord[name] = value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericBlurSubSample = (value, control) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord[control.label]) {\n        if (control.max) {\n          if (!(selectedRecord[control.label] < parseFloat(control.max))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedRecord[control.label] > parseFloat(control.min))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateSubSampleChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const selectSection = this.state.selectSection || {};\n      const selectPackage = [];\n      selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\n\n      if (comboData !== null) {\n        selectSection[fieldName] = comboData;\n        selectSection[\"ssectionname\"] = comboData.label;\n        selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode);\n        selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].nallottedspeccode;\n        selectedRecord[fieldName] = comboData;\n        selectedRecord[\"ssectionname\"] = comboData.label;\n        const specBasedComponent = specBasedComponent1;\n        selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode : parseInt(this.props.Login.masterData.selectedStbTimePoint && [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\"));\n        this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent, this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent, this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode, true);\n      } else {\n        let availableTestData = [];\n\n        if (selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"ntestgrouptestcode\"];\n          availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || [];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            availableTest: this.props.Login.AllTest,\n            TestCombined: availableTestData,\n            TestSection: this.props.Login.TestSection || []\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      let selectedDetailField = {};\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === 'nexternalordercode') {\n        selectedDetailField = comboData && comboData.item;\n      }\n\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord,\n        selectedDetailField\n      });\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      }); //setTimeout(() => { this._scrollBarRef.updateScroll() })\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subsampleskip: e.skip,\n        subsampletake: e.take\n      });\n    };\n\n    this.addMoreTest = (inputParam, ncontrolCode) => {\n      let sampleList = [];\n      const skip = this.state.skip;\n      const take = this.state.take;\n\n      if (this.props.Login.masterData.searchedSample !== undefined) {\n        ///sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.StabilityStudyPlanGet.slice(skip, skip + take), \"nstbstudyplancode\");\n        const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.StabilityStudyPlanGet;\n        sampleList = list ? list.slice(skip, skip + take) : [];\n      } else {\n        sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\n      }\n\n      let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\n\n      if (addSubSampleList && addSubSampleList.length > 0) {\n        inputParam[\"sampleList\"] = sampleList;\n        this.props.addMoreTests(inputParam, ncontrolCode);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLETOADDTEST\"\n        }));\n      }\n    };\n\n    this.sideNavDetail = (screenName //, sampleGridSkip\n    ) => {\n      let testList = this.props.Login.masterData.StbTimePointTestGet || [];\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedStbTimePointTest, \"nstbtimepointtestcode\");\n      let nstbtimepointtestcode = this.props.Login.masterData.selectedStbTimePointTest ? this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_TIMEPOINTRESULTS\" //&& this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE \n      ? /*#__PURE__*/React.createElement(RegistrationResultTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TIMEPOINTRESULTS\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2499,\n          columnNumber: 19\n        }\n      }) : screenName == \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2512,\n          columnNumber: 21\n        }\n      }) : screenName == \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2514,\n          columnNumber: 25\n        }\n      }) : screenName == \"IDS_HISTORY\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TIMEPOINTHISTORY\",\n        tabDetail: this.historyTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2516,\n          columnNumber: 29\n        }\n      }) : screenName == \"IDS_STABILITYDETAILS\" ? this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ? this.props.Login.masterData.selectedStabilityStudyPlan[this.props.Login.masterData.selectedStabilityStudyPlan.length - 1] : {},\n        SingleItem: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        viewFile: this.viewFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2519,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(SampleGridTab, {\n        userInfo: this.props.Login.masterData.userInfo || {},\n        GridData: this.props.Login.masterData.selectedStabilityStudyPlan || [],\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam //dataState={sampleGridSkip === 0 ? {...this.state.sampleGridDataState, skip:0} : this.state.sampleGridDataState}\n        ,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleInfoDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        primaryKeyField: \"nstbstudyplancode\",\n        expandField: \"expanded\",\n        screenName: \"IDS_SAMPLEINFO\",\n        viewFile: this.viewFile //jsonField={\"jsondata\"}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2530,\n          columnNumber: 37\n        }\n      }) : screenName == \"IDS_OUTSOURCEDETAILS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_OUTSOURCE\",\n        tabDetail: this.outSourceTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2548,\n          columnNumber: 37\n        }\n      }) : \"\";\n    };\n\n    this.historyTabDetail = () => {\n      const historyTabMap = new Map();\n      let historyExtractedColumnList = [];\n      historyExtractedColumnList.push({\n        \"idsName\": \"IDS_ARNO\",\n        \"dataField\": \"sarno\",\n        \"width\": \"150px\"\n      });\n      historyExtractedColumnList.push({\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"stransdisplaystatus\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_TRANSACTIONDATE\",\n        \"dataField\": \"stransactiondate\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_USER\",\n        \"dataField\": \"susername\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_USERROLE\",\n        \"dataField\": \"suserrolename\",\n        \"width\": \"200px\"\n      });\n      historyTabMap.set(\"IDS_TIMEPOINTHISTORY\", /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"nreghistorycode\",\n        data: this.props.Login.masterData.RegistrationSampleHistory,\n        dataResult: process(this.props.Login.masterData.RegistrationSampleHistory || [], this.state.registrationTestHistoryDataState),\n        dataState: this.state.registrationTestHistoryDataState,\n        dataStateChange: this.testDataStateChange,\n        extractedColumnList: historyExtractedColumnList,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        isRefreshRequired: false,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: false,\n        isToolBarRequired: false,\n        selectedId: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2564,\n          columnNumber: 10\n        }\n      }));\n      return historyTabMap;\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_TIMEPOINTRESULTS\":\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TEST\":\n          this.setState({\n            testDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TIMEPOINTHISTORY\":\n          this.setState({\n            registrationTestHistoryDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name === \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let loadPreregister = this.props.Login.loadPreregister;\n      let openChildModal = this.props.Login.openChildModal;\n      let parentPopUpSize = this.props.Login.pare;\n      let screenName = this.props.Login.screenName;\n      let loadPrinter = this.props.Login.loadPrinter;\n      let openPortal = this.props.Login.openPortal;\n      let Component = this.props.Login.Component;\n      let subSampleDataGridList = this.props.Login.subSampleDataGridList;\n      let TestCombined = this.props.Login.TestCombined;\n      let selectedPrinterData = this.props.Login.selectedPrinterData;\n      let multiFilterLoad = this.props.Login.multiFilterLoad;\n      let outsourcetest = this.props.Login.outsourcetest;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          loadPreregister = false;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign,\n              openModal,\n              openChildModal,\n              loadPreregister\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          loadEsign = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n          selectedRecord['esignreason'] = '';\n\n          if (loadPreregister) {\n            parentPopUpSize = 'xl';\n            openPortal = true;\n            openModal = false;\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign,\n              parentPopUpSize,\n              openPortal,\n              openModal,\n              selectedRecord,\n              outsourcetest\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        openModal = false;\n        loadPrinter = false;\n        loadPreregister = false;\n        selectedRecord = {};\n        openPortal = false;\n        subSampleDataGridList = [];\n        selectedPrinterData = {};\n        multiFilterLoad = false;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal,\n            loadPreregister,\n            selectedRecord,\n            screenName,\n            insertSourcePreregno: undefined,\n            multiFilterLoad,\n            loadPrinter,\n            openPortal,\n            Component,\n            subSampleDataGridList,\n            selectedPrinterData,\n            outsourcetest\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.closeChildModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let loadRegSubSample = this.props.Login.loadRegSubSample;\n      let loadFile = this.props.Login.loadFile;\n      let showSaveContinue = this.props.Login.showSaveContinue;\n      let screenName = this.props.Login.screenName;\n      let loadChildTest = this.props.Login.loadChildTest;\n      let loadAdhocTest = this.props.Login.loadAdhocTest;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.state.selectedRecord;\n      let TestCombined = [];\n      let TestPackage = [];\n      let availableTest = [];\n      let Test = this.props.Login.Test || [];\n      let selectedMaster = this.props.Login.selectedMaster;\n      let selectedControl = this.props.Login.selectedControl;\n      let masterextractedColumnList = this.props.Login.masterextractedColumnList;\n      let masterfieldList = this.props.Login.masterfieldList;\n      let masterdataList = this.props.Login.masterfieldList;\n      let mastercomboComponents = this.props.Login.masterfieldList;\n      let masterwithoutCombocomponent = this.props.Login.masterfieldList;\n      let masterComboColumnFiled = this.props.Login.masterComboColumnFiled;\n      let masterOperation = this.props.Login.masterOperation;\n      let masterEditObject = this.props.Login.masterEditObject;\n      let masterDesign = this.props.Login.masterDesign;\n      let addMaster = this.props.Login.addMaster;\n      let masterIndex = this.props.Login.masterIndex;\n      let availableAdhocTest = [];\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n        selectedRecord[\"esigncomments\"] = \"\";\n        selectedRecord[\"esignpassword\"] = \"\";\n        selectedRecord['esignreason'] = '';\n      }\n\n      if (addMaster) {\n        if (masterIndex !== 0) {\n          screenName = selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode];\n          selectedMaster = removeIndex(selectedMaster, masterIndex);\n          selectedControl = removeIndex(selectedControl, masterIndex);\n          masterextractedColumnList = masterextractedColumnList && removeIndex(masterextractedColumnList, masterIndex);\n          masterfieldList = masterfieldList && removeIndex(masterfieldList, masterIndex);\n          masterdataList = masterdataList && removeIndex(masterdataList, masterIndex);\n          mastercomboComponents = mastercomboComponents && removeIndex(mastercomboComponents, masterIndex);\n          masterComboColumnFiled = masterComboColumnFiled && removeIndex(masterComboColumnFiled, masterIndex);\n          masterwithoutCombocomponent = masterwithoutCombocomponent && removeIndex(masterwithoutCombocomponent, masterIndex);\n          masterDesign = masterDesign && removeIndex(masterDesign, masterIndex);\n          masterOperation = masterOperation && removeIndex(masterOperation, masterIndex);\n          masterEditObject = masterEditObject && removeIndex(masterEditObject, masterIndex);\n          masterIndex = masterIndex - 1;\n        } else {\n          selectedMaster = [];\n          selectedControl = [];\n          masterextractedColumnList = [];\n          masterfieldList = [];\n          addMaster = false;\n          masterdataList = [];\n          mastercomboComponents = [];\n          masterwithoutCombocomponent = [];\n          masterComboColumnFiled = [];\n          masterDesign = [];\n          masterOperation = [];\n          masterEditObject = [];\n          masterIndex = undefined;\n          screenName = this.props.Login.inputParam.displayName;\n        }\n      } else if (this.props.Login.loadFile) {\n        loadFile = false;\n        screenName = this.props.Login.PopUpLabel;\n      } else if (this.props.Login.loadChildTest) {\n        loadChildTest = false;\n        openModal = false;\n        selectedRecord = {};\n        TestCombined = [];\n        TestPackage = [];\n        availableTest = [];\n        Test = [];\n      } else if (this.props.Login.loadRegSubSample) {\n        loadRegSubSample = false;\n        openModal = false;\n        selectedRecord = {};\n        TestCombined = [];\n        TestPackage = [];\n        availableTest = [];\n        Test = [];\n      } else if (this.props.Login.loadAdhocTest) {\n        if (this.props.Login.loadEsign) {\n          loadEsign = false;\n        } else {\n          loadAdhocTest = false;\n          openModal = false;\n          selectedRecord = {};\n          availableAdhocTest = [];\n        }\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadRegSubSample,\n          screenName,\n          showSaveContinue,\n          loadFile,\n          loadChildTest,\n          loadAdhocTest,\n          openModal,\n          selectedRecord,\n          TestCombined,\n          TestPackage,\n          availableTest,\n          Test,\n          selectedMaster,\n          selectedControl,\n          masterextractedColumnList,\n          masterfieldList,\n          addMaster,\n          masterIndex,\n          masterdataList,\n          mastercomboComponents,\n          masterwithoutCombocomponent,\n          masterOperation,\n          masterEditObject,\n          masterComboColumnFiled,\n          masterDesign,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno === SideBarSeqno.TEST) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          selectedStbTimePointTest: this.props.Login.masterData.selectedStbTimePointTest,\n          nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint ? String(this.props.Login.masterData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\")) : \"-1\",\n          nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan ? this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          activeTestTab,\n          screenName: activeTestTab,\n          resultDataState: this.state.resultDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n          activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId,\n          registrationTestHistoryDataState: this.state.registrationTestHistoryDataState\n        };\n        this.props.getTestDetailFromRegistration(inputData, true); // } \n        // else {\n        //     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\n        // }\n      } else if (tabseqno === SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedStbTimePoint: this.props.Login.masterData.selectedStbTimePoint,\n            nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint ? this.props.Login.masterData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n            nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\"),\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedStabilityStudyPlan: this.props.Login.masterData.selectedStabilityStudyPlan,\n            nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan ? this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab,\n            OrderCodeData: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.hasOwnProperty(\"OrderCodeData\") ? item.OrderCodeData : -1).join(\",\"),\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      }\n    };\n\n    this.onSaveChildTestClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData; //console.log(\"test1:\", this.props.Login.masterData);\n\n      let sampleList = [];\n      const skip = this.state.skip;\n      const take = this.state.take;\n\n      if (this.props.Login.masterData.searchedSample !== undefined) {\n        const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.StabilityStudyPlanGet;\n        sampleList = list ? list.slice(skip, skip + take) : [];\n      } else {\n        sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\n      }\n\n      const selectedStabilityStudyPlan = getSameRecordFromTwoArrays(masterData.selectedStabilityStudyPlan, sampleList, \"nstbstudyplancode\");\n      let subsampleList = [];\n      const subsampleskip = this.state.subsampleskip;\n      const subsampletake = this.state.subsampletake;\n\n      if (this.props.Login.masterData.searchedSubSample !== undefined) {\n        const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample : this.props.Login.masterData.StbTimePointGet;\n        subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\n      } else {\n        subsampleList = this.props.Login.masterData.StbTimePointGet && this.props.Login.masterData.StbTimePointGet.slice(subsampleskip, subsampleskip + subsampletake);\n      }\n\n      const selectedStbTimePoint = getSameRecordFromTwoArrays(masterData.selectedStbTimePoint, subsampleList, \"nstbstudyplancode\"); //const selectedStbTimePoint = getSameRecordFromTwoArrays(masterData.selectedStbTimePoint, masterData.StbTimePointGet.slice(this.state.subsampleskip, (this.state.subsampleskip + this.state.subsampletake)), \"nstbstudyplancode\");\n      //const selectedStabilityStudyPlan = getSameRecordFromTwoArrays(masterData.selectedStabilityStudyPlan, masterData.StabilityStudyPlanGet.slice(this.state.skip, (this.state.skip + this.state.take)), \"nstbstudyplancode\");\n      ////  selectedStbTimePoint =masterData.selectedStbTimePoint.slice(this.state.skip, (this.state.skip + this.state.take));\n\n      const nstbtimepointcode = selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\");\n      let data = [];\n      let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo); // if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n      //     const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\n      //     const cTWithoutComboData = []\n      //     let cTData = [];\n      //     Layout.map(row => {\n      //         return row.children.map(column => {\n      //             return column.children.map(component => {\n      //                 return component.hasOwnProperty(\"children\") ?\n      //                     component.children.map(componentrow => {\n      //                         if (componentrow.inputtype === \"combo\") {\n      //                             cTData.push(componentrow)\n      //                         } else {\n      //                             cTWithoutComboData.push(componentrow)\n      //                         }\n      //                         return null;\n      //                     })\n      //                     : component.inputtype === \"combo\" ?\n      //                         cTData.push(component) : cTWithoutComboData.push(component)\n      //             })\n      //         })\n      //     })\n      //     selectedStabilityStudyPlan.map(item => {\n      //         let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\")\n      //         let gender = cTData.filter(x => x.name === \"Gender\")\n      //         const ageCal = parseInt(ageCalculate(item[dob[0].label], true));\n      //         data.push({ \"nstbstudyplancode\": parseInt(item.nstbstudyplancode), \"nage\": ageCal, \"ngendercode\": item.ngendercode })\n      //     }\n      //     )\n      // }\n\n      const inputData = {\n        //nneedjoballocation: masterData.RealRegSubTypeValue.nneedjoballocation ? masterData.RealRegSubTypeValue.nneedjoballocation : false,\n        //nneedmyjob: masterData.RealRegSubTypeValue.nneedmyjob ? masterData.RealRegSubTypeValue.nneedmyjob : false,\n        TestGroupTest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\n        StbTimePoint: selectedStbTimePoint.map(x => x.nstbtimepointcode),\n        nstbtimepointcode: nstbtimepointcode,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: masterData.RealRegSubTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode || -1,\n        nsampletypecode: masterData.RealSampleTypeValue && masterData.RealSampleTypeValue.nsampletypecode || -1,\n        ntype: 3,\n        nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        nstbstudyplancode: selectedStabilityStudyPlan && selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\n        // nstbtimepointcode: selectedStbTimePoint &&\n        // selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\"),\n        fromDate: obj.fromDate,\n        toDate: obj.toDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData && this.props.Login.masterData.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow || -1,\n        nneedsubsample: true,\n        //  checkBoxOperation: 3,\n        //checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1,\n        // activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\n        // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        // activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        ageData: data,\n        nsampletypecode: 9,\n        ntestpackagecode: this.state.selectedRecord['ntestpackagecode'] && this.state.selectedRecord['ntestpackagecode'],\n        skipmethodvalidity: false,\n        loadAdhocTest: false\n      };\n      const inputParam = {\n        inputData,\n        classUrl: \"stabilitystudyplan\",\n        operation: this.props.Login.operation,\n        methodUrl: \"Test\",\n        responseKeyList: [{\n          \"responseKey\": \"selectedStabilityStudyPlan\",\n          \"masterDataKey\": \"StabilityStudyPlanGet\",\n          \"primaryKey\": \"nstbstudyplancode\",\n          \"dataAction\": \"update\"\n        }, {\n          \"responseKey\": \"selectedStbTimePoint\",\n          \"masterDataKey\": \"StbTimePointGet\",\n          \"primaryKey\": \"nstbtimepointcode\",\n          \"dataAction\": \"update\"\n        }, {\n          \"responseKey\": \"selectedStbTimePointTest\",\n          \"masterDataKey\": \"StbTimePointTestGet\",\n          \"primaryKey\": \"nstbtimepointtestcode\",\n          \"dataAction\": \"add\"\n        }],\n        saveType,\n        formRef,\n        postParamList: this.postParamList\n      };\n\n      if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.createRegTest(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onSaveTimePointClick = (saveType, formRef) => {\n      const operation = this.props.Login.operation;\n\n      if (operation === 'create') {\n        let objSubSample = this.state.selectedRecord;\n        const userInfo = this.props.Login.userInfo;\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode');\n          sampleList = list ? list.slice(this.state.skip, this.state.skip + this.state.take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(this.state.skip, this.state.skip + this.state.take);\n        }\n\n        sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.selectedStabilityStudyPlan, sampleList, 'nstbstudyplancode');\n        const findSampleAlloSpec = [...new Set(sampleList.map(item => item.nallottedspeccode))];\n        let selectedStbTimePointTestData = objSubSample[\"ntestgrouptestcode\"];\n        const selectedStbTimePointTestArray = [];\n        selectedStbTimePointTestData && selectedStbTimePointTestData.map(item => {\n          return selectedStbTimePointTestArray.push(item.item);\n        });\n        const map = {};\n        const param = getRegistrationSubSample(objSubSample, this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent, operation);\n        map[\"StbTimePoint\"] = param.sampleRegistration;\n        map[\"subsampleDateList\"] = param.dateList;\n        map[\"StbTimePoint\"][\"nallottedspeccode\"] = findSampleAlloSpec[0] ? findSampleAlloSpec[0] : -1;\n        map[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\n        map['subsampledateconstraints'] = this.state.subsampledateconstraints;\n        map['testgrouptest'] = selectedStbTimePointTestArray;\n        map['nstbstudyplancode'] = sampleList.map(item => item.nstbstudyplancode).join(\",\");\n        map['userinfo'] = userInfo; //map['checkBoxOperation'] = checkBoxOperation.SINGLESELECT;\n\n        map['ntype'] = 3;\n        map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData && this.props.Login.masterData.ndesigntemplatemappingcode;\n        map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1;\n        map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow || -1;\n        map[\"nneedsubsample\"] = true; // map[\"nneedjoballocation\"] = this.props.Login.masterData.RegSubTypeValue\n        //     && this.props.Login.masterData.RegSubTypeValue.nneedjoballocation;\n\n        map[\"masterData\"] = this.props.Login.masterData; // map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\n        // map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n        // map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n\n        map[\"specBasedComponent\"] = this.props.Login.specBasedComponent;\n        map[\"nsampletypecode\"] = 9;\n        map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1;\n        map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1;\n        map[\"skipmethodvalidity\"] = false;\n        const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n        map[\"fromDate\"] = \"\";\n        map[\"toDate\"] = \"\";\n        map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus; // map[\"loadAdhocTest\"] = false;\n        //map[\"nneedmyjob\"] = this.props.Login.masterData.RealRegSubTypeValue.nneedmyjob ? this.props.Login.masterData.RealRegSubTypeValue.nneedmyjob : false;\n\n        let isFileupload = false;\n        const formData = new FormData();\n        this.props.Login.regSubSamplewithoutCombocomponent.map(item => {\n          if (item.inputtype === 'files') {\n            if (typeof objSubSample[item && item.label] === \"object\") {\n              objSubSample[item && item.label] && objSubSample[item && item.label].forEach((item1, index) => {\n                formData.append(\"uploadedFile\" + index, item1);\n                formData.append(\"uniquefilename\" + index, map[\"StbTimePoint\"].uniquefilename);\n                formData.append(\"filecount\", objSubSample[item && item.label].length);\n                formData.append(\"isFileEdited\", transactionStatus.YES);\n                formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n                delete map[\"StbTimePoint\"].uniquefilename;\n                delete map[\"StbTimePoint\"][item && item.label];\n                formData.append('Map', Lims_JSON_stringify(JSON.stringify(map)));\n                isFileupload = true;\n              });\n            }\n          }\n        });\n        const inputParam = {\n          inputData: map,\n          postParamList: this.postParamList,\n          formData: formData,\n          isFileupload\n        };\n        this.props.saveTimePoint(inputParam);\n      } else {\n        this.updateStbTimePoints(saveType, formRef, operation);\n      }\n    };\n\n    this.approveRegistration = (registerId, skip, take) => {\n      let sampleList = [];\n\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0) {\n        if (this.props.Login.masterData.selectedStbTimePoint !== undefined && this.props.Login.masterData.selectedStbTimePoint.length > 0) {\n          if (this.props.Login.masterData.selectedStbTimePointTest !== undefined && this.props.Login.masterData.selectedStbTimePointTest.length > 0) {\n            let Map = {};\n            Map[\"fromdate\"] = \"\";\n            Map[\"todate\"] = \"\";\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n            Map[\"nportalrequired\"] = this.props.Login.masterData.RealSampleTypeValue.nportalrequired;\n            Map[\"nfilterstatus\"] = -1;\n            Map[\"nstbstudyplancode\"] = this.props.Login.masterData && this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\");\n            Map[\"userinfo\"] = this.props.Login.userInfo;\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n            Map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\n            Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n            Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\");\n            Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\");\n            ;\n            Map[\"url\"] = this.props.Login.settings[24];\n            let inputParam = {\n              inputData: Map,\n              postParamList: this.postParamList,\n              action: 'accept'\n            };\n            this.confirmMessage.confirm(this.props.intl.formatMessage({\n              id: \"IDS_CONFIRMATION\"\n            }), this.props.intl.formatMessage({\n              id: \"IDS_CONFIRMATION\"\n            }), this.props.intl.formatMessage({\n              id: \"IDS_APPROVESTBSTUDYPLAN\"\n            }), this.props.intl.formatMessage({\n              id: \"IDS_OK\"\n            }), this.props.intl.formatMessage({\n              id: \"IDS_CANCEL\"\n            }), () => this.approveStbConfirm(inputParam, registerId));\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_ADDTESTTOREGISTERSAMPLES\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTPREREGQUARANTINESAMPLES\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTPREREGQUARANTINESAMPLES\"\n        }));\n      }\n    };\n\n    this.approveStbConfirm = (inputParam, registerId) => {\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, registerId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            parentPopUpSize: 'lg',\n            screenName: this.props.Login.screenName,\n            operation: 'accept'\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.approveStbStudyPlan(inputParam, this.props.Login.masterData);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.state = {\n      layout: 1,\n      openModal: false,\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: \"Product\",\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showAccordian: true,\n      showSaveContinue: false,\n      filterCollection: [],\n      selectedFilter: {},\n      breadCrumb: [],\n      showTest: true,\n      showSample: false,\n      showSubSample: false,\n      sampleSearchFied: [],\n      subsampleSearchFied: [],\n      testSearchFied: [],\n      showConfirmAlert: false,\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      DynamicSampleColumns: [],\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'nstbstudyplancode' }] \n\n      },\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      testAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }]\n\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'sarno' }] \n\n      },\n      historyDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      registrationTestHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      externalOrderAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      outsourceDetailsDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      selectedPrinterData: {},\n      grandparentheight: '150vh',\n      transactionValidation: [],\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      testskip: 0,\n      splitChangeWidthPercentage: 28.6,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      subsampleskip: 0,\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12],\n      comboComponents: [],\n      withoutCombocomponent: [],\n      childColumnList: [],\n      columnList: [],\n      regSubSamplecomboComponents: [],\n      regSubSamplewithoutCombocomponent: [],\n      regparentSubSampleColumnList: [],\n      regchildSubSampleColumnList: [],\n      DynamicSubSampleColumns: [],\n      DynamicTestColumns: [],\n      DynamicGridItem: [],\n      DynamicGridMoreField: [],\n      SingleItem: [],\n      testMoreField: [],\n      testListColumns: [],\n      SubSampleDynamicGridItem: [],\n      SubSampleDynamicGridMoreField: [],\n      SubSampleSingleItem: [],\n      sampleCombinationUnique: [],\n      subsampleCombinationUnique: [],\n      cancelId: -1,\n      studyPlanId: -1,\n      sampleBarcodeId: -1,\n      subSampleBarcodeId: -1,\n      editstudyPlanId: -1,\n      quarantineId: -1,\n      addTestId: -1,\n      adhocTestId: -1,\n      generateBarcodeId: -1,\n      printBarcodeId: -1,\n      cancelSampleId: -1,\n      addSubSampleId: -1,\n      editSubSampleId: -1,\n      cancelSubSampleId: -1,\n      CancelExternalOrderSampleId: -1,\n      exportTemplateId: -1,\n      importTemplateId: -1,\n      stateSampleType: [],\n      stateRegistrationType: [],\n      stateRegistrationSubType: [],\n      stateFilterStatus: [],\n      stateDynamicDesign: [],\n      testGetParam: {},\n      testChildGetParam: {},\n      subSampleGetParam: {},\n      filterSampleParam: {},\n      filterTestParam: {},\n      editRegParam: {},\n      editSubSampleRegParam: {},\n      addTestParam: {},\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      filterSubSampleParam: {},\n      initialVerticalWidth: \"57vh\",\n      enablePin: false,\n      fixefScrollHeight: window.outerHeight - 300,\n      enablePropertyPopup: false,\n      enableAutoClick: false,\n      propertyPopupWidth: \"60\",\n      showQRCode: false,\n      showBarcode: false,\n      treeData: [],\n      toggleAction: false,\n      selectedMaster: [],\n      outsourceId: -1,\n      copySampleId: -1,\n      filterSampleList: []\n    };\n  }\n\n  render() {\n    this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : this.props.Login.masterData.FromDate;\n    this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : this.props.Login.masterData.ToDate;\n    let sampleList = this.props.Login.masterData.StabilityStudyPlanGet ? sortData(this.props.Login.masterData.StabilityStudyPlanGet, 'desc', 'nstbstudyplancode') : [];\n    let subSampleList = this.props.Login.masterData.StbTimePointGet ? this.props.Login.masterData.StbTimePointGet : [];\n    let testList = this.props.Login.masterData.StbTimePointTestGet ? this.props.Login.masterData.StbTimePointTestGet : []; //\n\n    const mandatoryFieldsFilter = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_FILTERNAME\",\n      \"dataField\": \"sfiltername\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      clickIconGroup: true // paneHeight={this.state.initialVerticalWidth}\n      ,\n      masterList: this.props.Login.masterData.searchedTest || testList,\n      selectedMaster: this.props.Login.masterData.selectedStbTimePointTest,\n      primaryKeyField: \"nstbtimepointtestcode\",\n      getMasterDetail: (event, status) => this.getTestChildTabDetailRegistration(event, status),\n      inputParam: { ...this.state.testChildGetParam\n      },\n      additionalParam: [],\n      mainField: \"stestsynonym\",\n      selectedListName: \"selectedStbTimePointTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\" // jsonField={'jsondata'}\n      ,\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)) // showStatusLink={true}\n      ,\n      subFieldsLabel: true // statusFieldName=\"stransdisplaystatus\"\n      // statusField=\"ntransactionstatus\"\n      ,\n      needMultiSelect: false,\n      subFields: this.state.testListColumns || [],\n      moreField: this.state.testMoreField,\n      needValidation: false //showStatusName={true}\n      ,\n      needFilter: false // needMultiValueFilter={true}\n      ,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTest\",\n      searchRef: this.searchTestRef,\n      filterParam: this.state.filterTestParam,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\" // childTabsKey={[\"RegistrationTestComment\"]}\n      //childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\", \"RegistrationTestAttachment\", \"ApprovalParameter\", \"RegistrationTestHistory\"]}\n      ,\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"StabilityStudyPlanGet\" //selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\n      //selectionColorField=\"scolorhexcode\"\n      ,\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtest\",\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADDTEST\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.addTestId) === -1,\n        onClick: () => this.addMoreTest({ ...this.state.addTestParam,\n          skip: this.state.skip,\n          take: this.state.skip + this.state.take\n        }, this.state.addTestId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DELETETEST\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteTestId) === -1,\n        onClick: () => this.cancelRecord('Test', this.state.deleteTestId, this.state.testskip, this.state.testtake, 'delete'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 41\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n    mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      onSecondaryPaneSizeChange: this.paneSizeChange,\n      primaryMinSize: 40,\n      secondaryMinSize: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        marginTop: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TIMEPOINT\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94 // paneHeight={this.state.initialVerticalWidth}\n      // splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\n      ,\n      clickIconGroup: true,\n      masterList: this.props.Login.masterData.searchedSubSample || subSampleList,\n      selectedMaster: this.props.Login.masterData.selectedStbTimePoint,\n      primaryKeyField: \"nstbtimepointcode\",\n      getMasterDetail: (event, status) => {\n        this.props.getTimePointTestDetail(event, status); //  this.changePropertyView(6, event, status) \n      },\n      inputParam: { ...this.state.testGetParam,\n        searchTestRef: this.searchTestRef,\n        searchSubSampleRef: this.searchSubSampleRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        testtake: this.state.testtake,\n        subsampletake: this.state.subsampletake,\n        resultDataState: this.state.resultDataState // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n        // activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n\n      },\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedSubSample\",\n      searchRef: this.searchSubSampleRef,\n      filterParam: { ...this.state.filterSubSampleParam,\n        childRefs: [{\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      additionalParam: ['napprovalversioncode'],\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      mainField: \"nstbtimepointcode\",\n      selectedListName: \"selectedStbTimePoint\",\n      objectName: \"subsample\",\n      listName: \"IDS_TIMEPOINT\",\n      jsonField: 'jsondata',\n      jsonDesignFields: true,\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      subFields: this.state.DynamicSubSampleColumns,\n      skip: this.state.subsampleskip,\n      take: this.state.subsampletake,\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      needMultiSelect: false // selectionColorField=\"scolorhexcode\"\n      ,\n      subFieldsLabel: false,\n      subFieldsFile: true,\n      handlePageChange: this.handleSubSamplePageChange // viewFile={this.viewFile}\n      // selectionList={this.props.Login.masterData.RealFilterStatusValue\n      //     && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\n      ,\n      childTabsKey: [// \"RegistrationAttachment\",\n      \"StbTimePointTestGet\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"OutsourceDetailsList\", \"RegistrationParameter\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"],\n      actionIcons: [{\n        title: this.props.intl.formatMessage({\n          id: \"IDS_EDIT\"\n        }),\n        controlname: \"faPencilAlt\",\n        objectName: \"mastertoedit\",\n        hidden: this.state.userRoleControlRights.indexOf(this.state.editTimePointId) === -1,\n        onClick: this.editSubSampleRegistration,\n        inputData: {\n          primaryKeyName: \"nstbtimepointcode\",\n          operation: \"update\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          searchTestRef: this.searchTestRef,\n          editSubSampleRegParam: { ...this.state.editSubSampleRegParam,\n            ncontrolCode: this.state.editTimePointId\n          }\n        }\n      }],\n      needFilter: false,\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"adddeputy\",\n        className: \"btn btn-circle outline-grey ml-2\" //title={\"Add Test\"}\n        //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADDTIMEPOINT\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.addTimePointId) === -1,\n        onClick: () => this.addTimePoint(this.state.addTimePointId, this.state.skip, this.state.take),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" //title={\"Cancel/Reject Test\"}\n        //data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DELETETIMEPOINT\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteTimePointId) === -1,\n        onClick: () => this.cancelSubSampleRecord('StbTimePoint', this.state.deleteTimePointId, this.state.subsampleskip, this.state.subsampletake, 'delete'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 41\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }\n    }))), testDesign);\n    this.confirmMessage = new ConfirmMessage();\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"nstbstudyplancode\",\n      fetchUrl: \"stabilitystudyplan/getRegistrationSubSample\",\n      fecthInputObject: { ...this.state.subSampleGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        resultDataState: this.state.resultDataState,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState\n      },\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"selectedStabilityStudyPlan\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"selectedStabilityStudyPlan\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"nstbtimepointcode\",\n      fetchUrl: \"registration/getRegistrationTestSample\",\n      fecthInputObject: { ...this.state.testGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        resultDataState: this.state.resultDataState,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState\n      },\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"selectedStbTimePoint\",\n      inputListName: \"selectedStbTimePoint\",\n      updatedListname: \"StbTimePointGet\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }, {\n      filteredListName: \"searchedTest\",\n      updatedListname: \"StbTimePointTestGet\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"nstbtimepointtestcode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: { ...this.state.testGetParam,\n        searchTestRef: this.searchTestRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        resultDataState: this.state.resultDataState\n      },\n      selectedObject: \"selectedStbTimePointTest\",\n      inputListName: \"selectedStbTimePointTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SAVEFILTER\"\n      }) // data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(this.state.filterNameId) === -1,\n      onClick: () => this.openFilterName(this.state.filterNameId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SaveIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 29\n      }\n    })), this.state.userRoleControlRights.indexOf(this.state.filterDetailId) !== -1 && this.props.Login.masterData && this.props.Login.masterData.FilterName && this.props.Login.masterData.FilterName.length > 0 ? /*#__PURE__*/React.createElement(CustomPopover, {\n      icon: faBolt,\n      nav: true,\n      data: this.props.Login.masterData.FilterName,\n      btnClasses: \"btn-circle btn_grey ml-2 spacesremovefromaction\" //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJselectedStbTimePointTest,this.props.Login.userInfo)}\n      ,\n      dynamicButton: value => this.clickFilterDetail(value),\n      textKey: \"sfiltername\",\n      iconKey: \"nfiltercode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 33\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      onSecondaryPaneSizeChange: this.paneSizeChange,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1 // paneHeight={this.state.firstPane}\n      ,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedSample || sampleList,\n      selectedMaster: this.props.Login.masterData.selectedStabilityStudyPlan,\n      primaryKeyField: \"nstbstudyplancode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: this.props.getTimePointDetail,\n      inputParam: { ...this.state.subSampleGetParam,\n        searchTestRef: this.searchTestRef,\n        searchSubSampleRef: this.searchSubSampleRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        resultDataState: this.state.resultDataState,\n        activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n      } // selectionList={this.props.Login.masterData.RealFilterStatusValue\n      //     && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\n      ,\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"nstbstudyplancode\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedStabilityStudyPlan\",\n      searchListName: \"searchedSample\",\n      searchRef: this.searchSampleRef,\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      needMultiValueFilter: false,\n      clearAllFilter: this.onReload,\n      onMultiFilterClick: this.onMultiFilterClick,\n      jsonField: 'jsondata',\n      jsonDesignFields: true,\n      needMultiSelect: false // showStatusBlink={true}\n      ,\n      callCloseFunction: true,\n      filterParam: { ...this.state.filterSampleParam,\n        childRefs: [{\n          ref: this.searchSubSampleRef,\n          childFilteredListName: \"searchedSubSample\"\n        }, {\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      subFieldsLabel: false,\n      handlePageChange: this.handlePageChange,\n      skip: this.state.skip,\n      take: this.state.take // splitModeClass={this.state.splitChangeWidthPercentage\n      //     && this.state.splitChangeWidthPercentage > 50 ? 'split-mode'\n      //     : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n      ,\n      childTabsKey: [\"RegistrationAttachment\", \"StbTimePointGet\", \"StbTimePointTestGet\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"selectedStbTimePoint\", \"selectedStbTimePointTest\", \"RegistrationComment\", \"ExternalOrderAttachmentList\", \"OutsourceDetailsList\", \"RegistrationParameter\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"] //, \"RegistrationParameter\"\"RegistrationTestComment\"\n      // actionIcons={\n      //     [\n      //         {\n      //             title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\n      //             controlname: \"faPencilAlt\",\n      //             objectName: \"mastertoedit\",\n      //             hidden: this.state.userRoleControlRights.indexOf(this.state.editstudyPlanId) === -1,\n      //             onClick: this.editRegistration,\n      //             inputData: {\n      //                 primaryKeyName: \"nstbstudyplancode\",\n      //                 operation: \"update\",\n      //                 masterData: this.props.Login.masterData,\n      //                 userInfo: this.props.Login.userInfo,\n      //                 editRegParam: {\n      //                     ...this.state.editRegParam,\n      //                     ncontrolCode: this.state.editstudyPlanId\n      //                 }\n      //             },\n      //         }\n      //     ]\n      // }\n      ,\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue ml-2\",\n        role: \"button\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADDSTABILITYSTUDYPLAN\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        hidden: this.state.userRoleControlRights.indexOf(this.state.studyPlanId) === -1,\n        onClick: () => this.getStabilityStudyPlanComboService(\"IDS_STABILITYSTUDYPLAN\", \"create\", \"nstbstudyplancode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.studyPlanId, false, true, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_APPRROVESTUDYPLAN\"\n        }) // data-for=\"tooltip-common-wrap\"\n        ,\n        hidden: this.state.userRoleControlRights.indexOf(this.state.approevStudyPlanId) === -1,\n        onClick: () => this.approveRegistration(this.state.approevStudyPlanId, this.state.skip, this.state.take),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faThumbsUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_START\"\n        }) //data-for=\"tooltip-common-wrap\"\n        // hidden={this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1}\n        // onClick={() => this.cancelSampleRecords(this.state.deleteStudyPlanId,\n        //    this.state.skip, this.state.take, 'delete')}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_STOP\"\n        }) //data-for=\"tooltip-common-wrap\"\n        // hidden={this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1}\n        // onClick={() => this.cancelSampleRecords(this.state.deleteStudyPlanId,\n        //    this.state.skip, this.state.take, 'delete')}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faStop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DELETESTUDYPLAN\"\n        }) // data-for=\"tooltip-common-wrap\"\n        ,\n        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1,\n        onClick: () => this.cancelSampleRecords(this.state.deleteStudyPlanId, this.state.skip, this.state.take, 'delete'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CANCELTERMINATESTUDYPLAN\"\n        }) // data-for=\"tooltip-common-wrap\"\n        // hidden={this.state.userRoleControlRights.indexOf(this.state.cancelSampleId) === -1}\n        // onClick={() => this.cancelSampleRecords(this.state.cancelSampleId, this.state.skip, this.state.take)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Reject, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) //   data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => this.onReload(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 61\n        }\n      }))),\n      filterComponent: [// {\n      //     \"IDS_STABILITYSTUDYPLAN\":\n      //         <GoodsInFilter\n      //             fromDate={fromDate}\n      //             toDate={toDate}\n      //             handleFilterDateChange={this.handleFilterDateChange}\n      //             userInfo={this.props.Login.userInfo}\n      //         />\n      // }\n      {\n        \"Sample Filter\": /*#__PURE__*/React.createElement(RegistrationFilter, {\n          SampleType: this.state.stateSampleType || [],\n          RegistrationType: this.state.stateRegistrationType || [],\n          RegistrationSubType: this.state.stateRegistrationSubType || [],\n          userInfo: this.props.Login.userInfo || {},\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || {},\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || {},\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || {},\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || {},\n          ApprovalConfigVersionValue: this.props.Login.masterData.ApprovalConfigVersionValue || {},\n          ApprovalConfigVersion: this.state.stateApprovalConfigVersion || {},\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          FilterStatus: this.state.stateFilterStatus || [],\n          FromDate: this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date(),\n          ToDate: this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date(),\n          onSampleTypeChange: this.onSampleTypeChange,\n          onRegTypeChange: this.onRegTypeChange,\n          onRegSubTypeChange: this.onRegSubTypeChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          onApprovalConfigVersionChange: this.onApprovalConfigVersionChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          handleFilterDateChange: this.handleFilterDateChange,\n          onFilterChange: this.onFilterChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true || this.state.showSubSample === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 171\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_STABILITYDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 4 ? this.sideNavDetail(\"IDS_STABILITYDETAILS\", 0) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid sm-view-v-t position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TIMEPOINTRESULTS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 1 ? this.sideNavDetail(\"IDS_TIMEPOINTRESULTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"), this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.noutsourcerequired === transactionStatus.YES && /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 49\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 57\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 57\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 9 ? this.sideNavDetail(\"IDS_OUTSOURCEDETAILS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 10 ? this.sideNavDetail(\"IDS_HISTORY\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex === 4 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_STABILITYDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex === 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileInvoice //   data-for=\"tooltip-common-wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RESULT\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex === 10 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(10),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_HISTORY\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StbPreRegSlideOutModal, {\n      postParamList: this.postParamList,\n      PrevoiusLoginData: this.PrevoiusLoginData,\n      closeModal: this.closeModal,\n      operation: \"create\",\n      screenName: \"IDS_STABILITYSTUDYPLAN\",\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      updateStore: this.props.updateStore,\n      comboComponents: this.state.comboComponents,\n      withoutCombocomponent: this.state.withoutCombocomponent,\n      userRoleControlRights: this.state.userRoleControlRights,\n      fromDate: this.fromDate,\n      toDate: this.toDate,\n      samplecombinationunique: this.state.sampleCombinationUnique,\n      subsamplecombinationunique: this.state.subsampleCombinationUnique,\n      exportTemplateId: this.state.exportTemplateId,\n      importTemplateId: this.state.importTemplateId,\n      sampleexportfields: this.state.sampleexportfields,\n      subsampleexportfields: this.state.subsampleexportfields //  specBasedComponent={this.state.specBasedComponent}\n      ,\n      mandatoryFields: [{\n        \"idsName\": \"IDS_PRODUCTCATEGORY\",\n        \"dataField\": \"nproductcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PRODUCTNAME\",\n        \"dataField\": \"sproductname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 29\n      }\n    })) : \"\", (this.props.Login.openModal || this.state.showQRCode || this.state.showBarcode) && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.state.showQRCode || this.state.showBarcode //|| this.props.Login.loadEsign}\n      ,\n      closeModal: this.state.showQRCode ? () => this.setState({\n        showQRCode: false,\n        openModal: false\n      }) : this.state.showBarcode ? () => this.setState({\n        showBarcode: false,\n        openModal: false\n      }) : this.props.Login.loadRegSubSample || this.props.Login.loadFile || this.props.Login.loadChildTest || this.props.Login.loadAdhocTest ? this.closeChildModal : this.closeModal,\n      hideSave: this.state.showBarcode ? true : false,\n      size: this.props.Login.parentPopUpSize,\n      loginoperation: this.props.Login.loadPrinter ? true : false,\n      buttonLabel: this.state.showQRCode || this.props.Login.loadPrinter ? \"print\" : undefined,\n      operation: this.props.Login.addMaster ? this.props.Login.masterOperation[this.props.Login.masterIndex] : this.state.showQRCode ? \"Preview\" : this.props.Login.loadComponent || this.props.Login.loadTest || this.props.Login.loadSource || this.props.Login.loadFile ? this.props.Login.childoperation : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.state.showQRCode ? \"QR Code\" : this.state.showBarcode ? \"Barcode\" : this.props.Login.loadTest || this.props.Login.loadFile ? this.props.Login.ChildscreenName : this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      innerPopup: this.props.Login.loadComponent,\n      onSaveClick: this.props.Login.operation === 'barcode' ? () => this.props.barcodeGeneration(this.props.Login.barcodeSelectedRecord, this.props.Login.ncontrolcode, this.props.Login.userInfo, this.state.selectedRecord) : this.state.showQRCode ? () => this.setState({\n        showQRCode: false,\n        openModal: false\n      }) // : this.state.showBarcode ? \n      //     () => this.setState({ showBarcode: false, openModal: false })\n      : this.props.Login.addMaster ? this.onSaveMasterRecord : this.props.Login.loadRegSubSample ? this.onSaveTimePointClick : this.props.Login.loadFile ? this.onSaveFileClick : this.props.Login.loadPrinter ? this.onSavePrinterClick : this.props.Login.loadChildTest ? this.onSaveChildTestClick : this.props.Login.loadAdhocTest ? this.onSaveAdhocTestClick //: this.props.Login.outsourcetest ? this.onSaveOutSourceTest\n      : this.props.Login.outsourcetest ? this.onSaveOutSourceSample : this.props.Login.screenName === \"External Sample\" ? this.onSaveCancelOrder : this.props.Login.multiFilterLoad ? this.onSaveMultiFilterClick : this.onSaveClick,\n      validateEsign: this.validateEsign,\n      showSaveContinue: this.props.Login.showSaveContinue,\n      selectedRecord: !this.props.Login.loadEsign ? this.props.Login.addMaster ? this.state.selectedMaster[this.props.Login.masterIndex] : this.props.Login.loadComponent ? this.state.selectComponent : this.props.Login.loadPrinter ? this.state.selectedPrinterData : this.props.Login.loadTest ? this.state.selectedStbTimePointTestData : this.props.Login.loadFile ? this.state.selectedFile : this.props.Login.loadPoolSource ? this.state.selectedSourceData : this.state.selectedRecord : this.state.selectedRecord,\n      mandatoryFields: this.props.Login.screenName == \"External Sample\" ? this.onSaveCancelOrderMandatoryFields : this.props.Login.addMaster ? this.props.Login.masterextractedColumnList[this.props.Login.masterIndex].filter(x => x.mandatory === true) : this.mandatoryList(this.props.Login.loadPreregister, this.props.Login.loadPrinter, this.props.Login.loadFile, this.props.Login.loadChildTest, this.props.Login.loadRegSubSample, this.props.Login.operation, this.props.Login.outsourcetest, this.props.Login.loadAdhocTest),\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === \"barcode\" ? /*#__PURE__*/React.createElement(AddBarcode, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        onComboChange: this.onComboChange,\n        BarcodeList: this.props.Login.BarcodeList,\n        Printer: this.props.Login.Printer,\n        nbarcodeprint: this.props.Login.nbarcodeprint // selectedPrinterData={this.state.selectedPrinterData}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 33\n        }\n      }) : this.state.showQRCode ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: this.state.selectedRecord.barcodevalue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 53\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_ARNO\"\n      }), \":\"), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 53\n        }\n      }, this.state.selectedRecord.barcodeData.sarno || '-')), /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 53\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }), \":\"), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 53\n        }\n      }, this.state.selectedRecord.barcodeData.Product || '-'))))) : this.state.showBarcode ? /*#__PURE__*/React.createElement(BarcodeGeneratorComponent, {\n        barcodeData: this.state.selectedRecord.generateBarcodeValue,\n        additionalDesignsToPrint: this.state.selectedRecord.additionDesignToPrint,\n        background: \"#ffffff\",\n        textAlign: \"center\",\n        fontSize: 38,\n        fontOption: \"bold\",\n        textPosition: \"bottom\",\n        lineColor: \"#000000\",\n        width: 3,\n        height: 100,\n        format: \"CODE128\",\n        margin: 10,\n        marginTop: 50,\n        marginBottom: undefined,\n        marginLeft: 20,\n        marginRight: undefined,\n        flat: true,\n        printBarcode: true,\n        displayValue: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 41\n        }\n      }) : this.props.Login.addMaster ? /*#__PURE__*/React.createElement(AddMasterRecords, {\n        selectedControl: this.props.Login.selectedControl[this.props.Login.masterIndex],\n        fieldList: this.props.Login.masterfieldList && this.props.Login.masterfieldList[this.props.Login.masterIndex],\n        extractedColumnList: this.props.Login.masterextractedColumnList[this.props.Login.masterIndex],\n        selectedRecord: this.state.selectedMaster[this.props.Login.masterIndex] || {},\n        onInputOnChange: this.onInputOnChangeMaster,\n        onComboChange: this.onComboChangeMaster,\n        handleDateChange: this.handleDateChangeMaster,\n        dataList: this.props.Login.masterdataList && this.props.Login.masterdataList[this.props.Login.masterIndex],\n        onNumericInputOnChange: this.onNumericInputOnChangeMaster,\n        masterDesign: this.props.Login.masterDesign && this.props.Login.masterDesign[this.props.Login.masterIndex],\n        mastertimeZoneList: this.props.Login.mastertimeZoneList,\n        masterdefaultTimeZone: this.props.Login.masterdefaultTimeZone,\n        onComboChangeMasterDyanmic: this.onComboChangeMasterDyanmic,\n        handleDateChangeMasterDynamic: this.handleDateChangeMasterDynamic,\n        onInputOnChangeMasterDynamic: this.onInputOnChangeMasterDynamic,\n        onNumericInputChangeMasterDynamic: this.onNumericInputChangeMasterDynamic,\n        onNumericBlurMasterDynamic: this.onNumericBlurMasterDynamic,\n        userInfo: this.props.Login.userInfo,\n        Login: this.props.Login,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        masterIndex: this.props.Login.masterIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 45\n        }\n      }) : this.props.Login.loadRegSubSample ? /*#__PURE__*/React.createElement(AddSubSample, {\n        editfield: this.props.Login.masterData.DynamicDesign && JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value),\n        Component: this.props.Login.lstComponent || [],\n        selectComponent: this.state.selectedRecord,\n        templateData: this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        handleDateChange: this.handleDateSubSampleChange,\n        onInputOnChange: this.onInputOnSubSampleChange,\n        onNumericInputChange: this.onNumericInputSubSampleChange,\n        onNumericBlur: this.onNumericBlurSubSample,\n        comboData: this.props.Login.regSubSamplecomboData,\n        onComboChange: this.onComboSubSampleChange,\n        onComponentChange: this.onComponentChange,\n        TestCombined: this.props.Login.TestCombined || [],\n        TestChange: this.onComboChange,\n        selectedTestData: this.state.selectedRecord,\n        selectedTestPackageData: this.state.selectedStbTimePointTestPackageData,\n        childoperation: this.props.Login.operation,\n        specBasedComponent: this.props.Login.specBasedComponent,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        selectPackage: this.state.selectedRecord,\n        TestPackage: this.props.Login.TestPackage || [],\n        onTestPackageChange: this.onTestPackageChange,\n        operation: this.props.Login.operation,\n        hideQualisForms: this.props.Login.hideQualisForms,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        hasTest: true,\n        onDropFile: this.onDropFileSubSample,\n        deleteAttachment: this.deleteAttachmentSubSample,\n        onTestSectionChange: this.onTestSectionChange,\n        TestSection: this.props.Login.TestSection || [],\n        selectSection: this.state.selectedRecord,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 49\n        }\n      }) : this.props.Login.loadFile ? /*#__PURE__*/React.createElement(AddFile, {\n        selectedFile: this.state.selectedFile || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropComponentFile,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 53\n        }\n      }) : this.props.Login.loadChildTest ? /*#__PURE__*/React.createElement(AddTest, {\n        TestCombined: this.props.Login.TestCombined,\n        selectedTestData: this.state.selectedRecord,\n        TestChange: this.onComboChange,\n        TestPackageChange: this.onComboTestPackageChange,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        selectPackage: this.state.selectedRecord,\n        selectSection: this.state.selectedRecord,\n        TestPackage: this.props.Login.TestPackage || [],\n        TestSection: this.props.Login.TestSection || [],\n        onTestPackageChange: this.onTestPackageChange,\n        onTestSectionChange: this.onTestSectionChange,\n        hideQualisForms: this.props.Login.hideQualisForms,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 57\n        }\n      }) : this.props.Login.loadChildTest ? /*#__PURE__*/React.createElement(AddTest, {\n        TestCombined: this.props.Login.availableTest,\n        selectedStbTimePointTestData: this.state.selectedRecord,\n        TestChange: this.onComboChange,\n        TestPackageChange: this.onComboTestPackageChange,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        selectPackage: this.state.selectedRecord,\n        TestPackage: this.props.Login.TestPackage || [],\n        onTestPackageChange: this.onTestPackageChange,\n        hideQualisForms: this.props.Login.hideQualisForms,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 61\n        }\n      }) : this.props.Login.outsourcetest ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"outsourcesite\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SITE\"\n        }),\n        placeholder: \"Please Select...\",\n        options: this.props.Login.outSourceSiteList || [],\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"outsourcesite\"] : \"\",\n        isMandatory: true,\n        required: true,\n        isMulti: false,\n        isClearable: true,\n        isSearchable: true,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, \"outsourcesite\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(FormMultiSelect, {\n        name: \"outsourcetestlist\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_TESTNAME\"\n        }),\n        options: this.props.Login.outSourceTestList || [],\n        optionId: \"nstbtimepointtestcode\",\n        optionValue: \"stestsynonym\",\n        value: this.props.Login.selectedRecord && this.props.Login.selectedRecord[\"outSourceTestList\"] ? this.props.Login.selectedRecord[\"outSourceTestList\"] : [],\n        isMandatory: true,\n        isClearable: true,\n        disableSearch: false,\n        disabled: false,\n        closeMenuOnSelect: false,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, \"outSourceTestList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(DateTimePicker, {\n        name: \"doutsourcedate\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_OUTSOURCEDATE\"\n        }),\n        className: \"form-control\",\n        placeholderText: this.props.intl.formatMessage({\n          id: \"IDS_SELECTDATE\"\n        }),\n        selected: this.props.Login.selectedRecord[\"doutsourcedate\"] ? this.props.Login.selectedRecord[\"doutsourcedate\"] : new Date(),\n        dateFormat: this.props.Login.userInfo.ssitedate,\n        timeInputLabel: this.props.intl.formatMessage({\n          id: \"IDS_TIME\"\n        }),\n        showTimeInput: false,\n        isClearable: true,\n        isMandatory: true,\n        required: true,\n        onChange: date => this.handleDateChange(\"doutsourcedate\", date),\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"doutsourcedate\"] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_SAMPLEID\"\n        }),\n        name: \"ssampleid\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SAMPLEID\"\n        }),\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ssampleid\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"sremarks\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_REMARKS\"\n        }),\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_REMARKS\"\n        }),\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"sremarks\"] : \"\",\n        rows: \"2\",\n        required: false,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"sshipmenttracking\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_SHIPMENTTRACKING\"\n        }),\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SHIPMENTTRACKING\"\n        }),\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"sshipmenttracking\"] : \"\",\n        rows: \"2\",\n        required: false,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 73\n        }\n      }))) : this.props.Login.multiFilterLoad ? /*#__PURE__*/React.createElement(KendoDatatoolFilter, {\n        filter: this.props.Login.masterData['kendoFilterList'] || {\n          logic: \"and\",\n          filters: []\n        },\n        handleFilterChange: this.handleFilterChange,\n        filterData: this.props.Login.masterData.kendoOptionList || [],\n        fields: this.props.Login.masterData[\"fields\"] || [],\n        userInfo: this.props.Login.userInfo,\n        static: true,\n        parentCallBack: this.parentCallBack,\n        needParentCallBack: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 69\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 21\n      }\n    }), this.props.Login.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openChildModal,\n      closeModal: this.closeSendToStoreChildModal,\n      operation: this.props.Login.MappingFields ? \"\" : \"Store\",\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.MappingFields ? this.props.intl.formatMessage({\n        id: \"IDS_ORDERMAPPING\"\n      }) : this.props.intl.formatMessage({\n        id: \"IDS_SAMPLE\"\n      }),\n      onSaveClick: this.props.Login.MappingFields ? this.onSaveModalClick : this.onSendToStoreSample,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.MappingFields && this.mandatoryMappingList(),\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 29\n        }\n      }) : this.props.Login.MappingFields ? /*#__PURE__*/React.createElement(MappingFields, {\n        selectedRecord: this.state.selectedRecord,\n        selectedDetailField: this.state.selectedDetailField,\n        orderTypeList: this.props.Login.orderTypeList,\n        orderList: this.props.Login.orderList,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(MoveSampleOrContainers, {\n        treeData: this.state.treeData,\n        selectedRecord: this.state.selectedRecord || {},\n        itemRender: this.itemRender,\n        onExpandChange: this.onExpandChange,\n        onItemClick: this.onItemClick,\n        onComboChange: this.onComboChangeTree,\n        onNumericInputChange: this.onNumericInputChangeSample,\n        storageCategory: this.props.Login.masterData.storageCategory || [],\n        unitMaster: this.props.Login.masterData.unitMaster || [],\n        approvedLocation: this.props.Login.masterData.approvedLocation || [],\n        isSendToStore: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 21\n      }\n    }), this.state.showConfirmAlert ? this.confirmAlert() : \"\", this.props.Login.modalShow ?\n    /*#__PURE__*/\n    //ALPD-4912-To show the add popup to get input of filter name,done by Dhanushya RI\n    React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalFilterName,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFieldsFilter,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormTextarea, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILTERNAME\"\n        }),\n        name: \"sfiltername\" // type=\"text\"\n        ,\n        onChange: this.onInputOnChange,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_FILTERNAME\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord.sfiltername : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1413,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.columnList !== previousProps.Login.columnList) {\n      this.setState({\n        columnList: this.props.Login.columnList,\n        childColumnList: this.props.Login.childColumnList,\n        withoutCombocomponent: this.props.Login.withoutCombocomponent,\n        comboComponents: this.props.Login.comboComponents\n      });\n    }\n\n    if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\n      this.setState({\n        regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\n        regchildSubSampleColumnList: this.props.Login.regchildSubSampleColumnList,\n        regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\n        regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\n      });\n    }\n\n    if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\n      this.setState({\n        showSaveContinue: this.props.Login.showSaveContinue\n      });\n    }\n\n    if (this.props.Login !== previousProps.Login) {\n      this.PrevoiusLoginData = previousProps;\n    }\n\n    if (this.props.Login.selectedDetailField !== previousProps.Login.selectedDetailField) {\n      this.setState({\n        selectedDetailField: this.props.Login.selectedDetailField\n      });\n    }\n\n    if (this.props.Login.selectedMaster !== previousProps.Login.selectedMaster) {\n      this.setState({\n        selectedMaster: this.props.Login.selectedMaster\n      });\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    } else if (this.props.Login.selectedPrinterData !== previousProps.Login.selectedPrinterData) {\n      this.setState({\n        selectedPrinterData: this.props.Login.selectedPrinterData\n      });\n    } else if (this.props.Login.loadFile !== previousProps.Login.loadFile && this.props.Login.loadFile === false) {\n      this.setState({\n        selectedFile: undefined\n      });\n    } else if (this.props.Login.selectedFilter !== previousProps.Login.selectedFilter) {\n      this.setState({\n        selectedFilter: this.props.Login.selectedFilter\n      });\n    }\n\n    if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\n      this.setState({\n        popUptestDataState: this.props.Login.popUptestDataState\n      });\n    }\n\n    if (this.props.Login.transactionValidation !== this.props.Login.masterData.TransactionValidation) {\n      this.props.Login.transactionValidation = this.props.Login.masterData.TransactionValidation;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const specBasedTestPackage = this.props.Login.userRoleControlRights && this.props.Login.userRoleControlRights[formCode.TESTPACKAGE] !== undefined ? true : false;\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      const deleteTestId = controlMap.has(\"DeleteTest\") ? controlMap.get(\"DeleteTest\").ncontrolcode : -1;\n      const studyPlanId = controlMap.has(\"AddStabilityStudyPlan\") ? controlMap.get(\"AddStabilityStudyPlan\").ncontrolcode : -1;\n      const editstudyPlanId = controlMap.has(\"EditStabilityStudyPlan\") ? controlMap.get(\"EditStabilityStudyPlan\").ncontrolcode : -1;\n      const deleteStudyPlanId = controlMap.has(\"DeleteStabilityStudyPlan\") ? controlMap.get(\"DeleteStabilityStudyPlan\").ncontrolcode : -1;\n      const addTestId = controlMap.has(\"AddTest\") ? controlMap.get(\"AddTest\").ncontrolcode : -1;\n      const approevStudyPlanId = controlMap.has(\"ApproveStabilityStudyPlan\") ? controlMap.get(\"ApproveStabilityStudyPlan\").ncontrolcode : -1;\n      const addTimePointId = controlMap.has(\"AddTimePoint\") ? controlMap.get(\"AddTimePoint\").ncontrolcode : -1;\n      const editTimePointId = controlMap.has(\"EditTimePoint\") ? controlMap.get(\"EditTimePoint\").ncontrolcode : -1;\n      const deleteTimePointId = controlMap.has(\"DeleteTimePoint\") ? controlMap.get(\"DeleteTimePoint\").ncontrolcode : -1;\n      const exportTemplateId = controlMap.has(\"Export Template\") ? controlMap.get(\"Export Template\").ncontrolcode : -1;\n      const importTemplateId = controlMap.has(\"Import Template\") ? controlMap.get(\"Import Template\").ncontrolcode : -1;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        deleteTestId,\n        approevStudyPlanId,\n        studyPlanId,\n        editstudyPlanId,\n        deleteStudyPlanId,\n        addTestId,\n        addTimePointId,\n        editTimePointId,\n        deleteTimePointId,\n        specBasedTestPackage,\n        exportTemplateId,\n        importTemplateId\n      });\n    }\n\n    let activeTabIndex = this.state.activeTabIndex || undefined;\n    let activeTabId = this.state.activeTabId || undefined;\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex || this.props.Login.masterData !== previousProps.Login.masterData) {\n      let {\n        skip,\n        take,\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake,\n        testCommentDataState,\n        resultDataState,\n        sampleGridDataState,\n        popUptestDataState,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        SingleItem,\n        testMoreField,\n        testListColumns,\n        SubSampleDynamicGridItem,\n        SubSampleDynamicGridMoreField,\n        SubSampleSingleItem,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        testAttachmentDataState,\n        registrationTestHistoryDataState,\n        sampleCommentDataState,\n        sampledateconstraints,\n        subsampledateconstraints,\n        activeTabIndex,\n        activeTabId,\n        sampleCombinationUnique,\n        subsampleCombinationUnique,\n        addedOrderSampleList,\n        sampleexportfields,\n        subsampleexportfields,\n        samplefilteritem,\n        sampledisplayfields\n      } = this.state;\n      addedOrderSampleList = [];\n\n      if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n        activeTabIndex = this.props.Login.activeTabIndex;\n        activeTabId = this.props.Login.activeTabId;\n      }\n\n      if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n        const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n        DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n        DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n        DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n        DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem.filter(x => x[2] !== 'sarno') : [];\n        DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n        SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields.filter(x => !['sarno', 'dregdate'].includes(x[2])) : [];\n        SubSampleDynamicGridItem = dynamicColumn.subsamplegriditem ? dynamicColumn.subsamplegriditem : [];\n        SubSampleDynamicGridMoreField = dynamicColumn.subsamplegridmoreitem ? dynamicColumn.subsamplegridmoreitem : [];\n        SubSampleSingleItem = dynamicColumn.subsampledisplayfields ? dynamicColumn.subsampledisplayfields : [];\n        testMoreField = dynamicColumn.testListFields && dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n        testListColumns = dynamicColumn.testListFields && dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem.filter(x => !['sarno', 'AnalyserName', 'ssamplearno'].includes(x[2])) : [];\n        sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields.filter(x => !['dregdate', 'sarno', 'sspecname'].includes(x)) : [];\n        subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields.filter(x => !['sarno', 'ssamplearno'].includes(x)) : [];\n        testSearchField = dynamicColumn.testListFields && dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n        sampledateconstraints = dynamicColumn.sampledateconstraints || [];\n        subsampledateconstraints = dynamicColumn.subsampledateconstraints || [];\n        sampleCombinationUnique = dynamicColumn.samplecombinationunique || [];\n        subsampleCombinationUnique = dynamicColumn.subsamplecombinationunique || [];\n        sampleexportfields = dynamicColumn.sampleExportFields || [];\n        subsampleexportfields = dynamicColumn.subSampleExportFields || [];\n        samplefilteritem = dynamicColumn.samplefilteritem || [];\n        sampledisplayfields = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields.filter(x => !['dregdate', 'sarno'].includes(x[2])) : []; // specBasedComponent = true;\n\n        this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample && this.props.Login.masterData.StabilityStudyPlanGet.length > 0 && this.props.Login.masterData.StabilityStudyPlanGet[0].ncomponentrequired === transactionStatus.YES && DynamicSubSampleColumns.push({\n          1: {\n            'en-US': 'Specimen',\n            'ru-RU': 'Образец',\n            'tg-TG': 'Намуна'\n          },\n          2: \"scomponentname\"\n        });\n\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n          DynamicSubSampleColumns.push({\n            1: {\n              'en-US': 'Order Type',\n              'ru-RU': 'Тип заказа',\n              'tg-TG': 'Навъи фармоиш'\n            },\n            2: \"sordertypename\"\n          });\n        }\n      }\n\n      let showSample = this.props.Login.showSample === this.state.showTest || this.state.showSample;\n      let showTest = showSample ? false : true;\n      let stateSampleType = this.state.stateSampleType;\n      let stateRegistrationType = this.state.stateRegistrationType;\n      let stateRegistrationSubType = this.state.stateRegistrationSubType;\n      let stateFilterStatus = this.state.stateFilterStatus;\n      let stateDynamicDesign = this.state.stateDynamicDesign;\n      let stateApprovalConfigVersion = this.state.stateApprovalConfigVersion;\n\n      if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\n        const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", \"nsorter\", \"ascending\", false);\n        stateSampleType = sampleTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.RegistrationType !== previousProps.Login.masterData.RegistrationType) {\n        const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", \"ascending\", false);\n        stateRegistrationType = registrationTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\n        const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", \"ascending\", false);\n        stateRegistrationSubType = registrationSubTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.FilterStatus !== previousProps.Login.masterData.FilterStatus) {\n        const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", \"nsorter\", \"ascending\", false);\n        stateFilterStatus = filterStatusMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.ApprovalConfigVersion !== previousProps.Login.masterData.ApprovalConfigVersion) {\n        const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napproveconfversioncode\", \"sversionname\", undefined, undefined, false);\n        stateApprovalConfigVersion = DesignTemplateMappingMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n        const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n        stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n      } // const stateSampleType = sampleTypeMap.get(\"OptionList\");\n\n\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip;\n      subsampletake = this.props.Login.subsampletake || subsampletake;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\n        testAttachmentDataState = this.props.Login.testAttachmentDataState;\n      }\n\n      if (this.props.Login.registrationTestHistoryDataState && this.props.Login.registrationTestHistoryDataState !== previousProps.Login.registrationTestHistoryDataState) {\n        registrationTestHistoryDataState = this.props.Login.registrationTestHistoryDataState;\n      }\n\n      if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\n        sampleGridDataState = this.props.Login.sampleGridDataState;\n      }\n\n      if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\n        popUptestDataState = this.props.Login.popUptestDataState;\n      }\n\n      const testGetParam = {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1,\n        nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n      };\n      const testChildGetParam = {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\n        nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint && this.props.Login.masterData.selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\"),\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        // resultDataState: resultDataState,\n        // testCommentDataState: testCommentDataState,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      };\n      const subSampleGetParam = {\n        masterData: this.props.Login.masterData,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n      };\n      const filterSampleParam = {\n        inputListName: \"StabilityStudyPlanGet\",\n        selectedObject: \"selectedStabilityStudyPlan\",\n        primaryKeyField: \"nstbstudyplancode\",\n        fetchUrl: \"stabilitystudyplan/getRegistrationSubSample\",\n        isMultiSort: true,\n        multiSortData: [{\n          pkey: 'nstbtimepointcode',\n          list: 'StbTimePointGet'\n        }, {\n          pkey: 'nstbtimepointtestcode',\n          list: 'StbTimePointTestGet'\n        }],\n        skip: 0,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: 0,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        fecthInputObject: {\n          masterData: this.props.Login.masterData,\n          userinfo: this.props.Login.userInfo,\n          ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: sampleSearchField,\n        changeList: [\"StbTimePointGet\", \"StbTimePointTestGet\", \"selectedStabilityStudyPlan\", \"selectedStbTimePoint\", \"selectedStbTimePointTest\"]\n      };\n      const filterSubSampleParam = {\n        inputListName: \"StbTimePointGet\",\n        selectedObject: \"selectedStbTimePoint\",\n        primaryKeyField: \"nstbtimepointcode\",\n        fetchUrl: \"stabilitystudyplan/getRegistrationTest\",\n        skip: this.state.skip,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: 0,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        isMultiSort: true,\n        multiSortData: [{\n          pkey: 'nstbtimepointtestcode',\n          list: 'StbTimePointTestGet'\n        }],\n        fecthInputObject: {\n          masterData: this.props.Login.masterData,\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n          nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ? this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\",\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: subsampleSearchField,\n        changeList: [\"StbTimePointTestGet\", \"selectedStbTimePoint\", \"selectedStbTimePointTest\"]\n      };\n      const filterTestParam = {\n        inputListName: \"StbTimePointTestGet\",\n        selectedObject: \"selectedStbTimePointTest\",\n        primaryKeyField: \"nstbtimepointtestcode\",\n        //fetchUrl: this.getActiveTestURL(),\n        skip: this.state.skip,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: this.state.subsampleskip,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n        fecthInputObject: {\n          nstbtimepointtestcode: this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest ? this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: ['sarno', 'ssectionname', 'stestsynonym', 'stransdisplaystatus'],\n        isService: true\n      };\n      const editRegParam = {\n        nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData && this.props.Login.masterData.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        //=== true\n        //? transactionStatus.YES:transactionStatus.NO :transactionStatus.NO,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        // checkBoxOperation: 3\n        checkBoxOperation: checkBoxOperation.SINGLESELECT\n      };\n      const editSubSampleRegParam = {\n        nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData && this.props.Login.masterData.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      };\n      const addTestParam = {\n        selectedStabilityStudyPlan: this.props.Login.masterData.selectedStabilityStudyPlan,\n        selectedStbTimePoint: this.props.Login.masterData.selectedStbTimePoint,\n        // skip: skip, take: (skip + take),\n        userinfo: this.props.Login.userInfo,\n        sampleList: this.props.Login.masterData.StabilityStudyPlanGet,\n        subsampleList: this.props.Login.masterData.StbTimePointGet,\n        snspecsampletypecode: this.props.Login.masterData.selectedStbTimePoint && [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\")\n      };\n      const breadCrumbobj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n      this.breadCrumbData = [{\n        \"label\": \"IDS_FROM\",\n        \"value\": breadCrumbobj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": breadCrumbobj.breadCrumbto\n      }, {\n        \"label\": \"IDS_REGTYPE\",\n        \"value\": this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.sregtypename\n      }, {\n        \"label\": \"IDS_REGSUBTYPE\",\n        \"value\": this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n      }, {\n        \"label\": \"IDS_SAMPLESTATUS\",\n        \"value\": this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\n      }];\n\n      if (this.props.Login.masterData.approvedTreeData !== previousProps.Login.masterData.approvedTreeData) {\n        if (this.props.Login.masterData.approvedTreeData && this.props.Login.masterData.approvedTreeData !== undefined) {\n          this.setState({\n            treeData: this.props.Login.masterData.approvedTreeData\n          });\n        }\n      }\n\n      this.setState({\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        SingleItem,\n        testMoreField,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        testListColumns,\n        stateSampleType,\n        stateRegistrationType,\n        stateRegistrationSubType,\n        stateFilterStatus,\n        stateDynamicDesign,\n        stateApprovalConfigVersion,\n        popUptestDataState,\n        showSample,\n        showTest,\n        skip,\n        take,\n        testskip,\n        subsampleskip,\n        subsampletake,\n        testtake,\n        testCommentDataState,\n        testAttachmentDataState,\n        registrationTestHistoryDataState,\n        resultDataState,\n        sampleGridDataState,\n        SubSampleDynamicGridItem,\n        SubSampleDynamicGridMoreField,\n        SubSampleSingleItem,\n        testGetParam,\n        testChildGetParam,\n        subSampleGetParam,\n        filterSampleParam,\n        filterTestParam,\n        editRegParam,\n        editSubSampleRegParam,\n        addTestParam,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        filterSubSampleParam,\n        sampledateconstraints,\n        subsampledateconstraints,\n        activeTabIndex,\n        activeTabId,\n        sampleCombinationUnique,\n        subsampleCombinationUnique,\n        addedOrderSampleList,\n        sampleexportfields,\n        subsampleexportfields,\n        samplefilteritem,\n        sampledisplayfields\n      });\n    }\n  }\n\n  updateStbTimePoints(saveType, formRef, operation, flag) {\n    const inputData = {\n      userinfo: this.props.Login.userInfo\n    };\n    let initialParam = {\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n      nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n      ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n      nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n      fromdate: \"\",\n      todate: \"\",\n      nstbstudyplancode: String(this.state.selectedRecord.nstbstudyplancode),\n      nstbtimepointcode: String(this.state.selectedRecord.nstbtimepointcode)\n    };\n    inputData[\"initialparam\"] = initialParam;\n    const param = getRegistrationSubSample(this.state.selectedRecord, this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent, undefined, operation);\n    inputData[\"StbTimePoint\"] = param.sampleRegistration;\n\n    if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n      inputData[\"StbTimePoint\"]['jsondata'] = { ...inputData[\"StbTimePoint\"]['jsondata'],\n        externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid\n      };\n      inputData[\"StbTimePoint\"]['jsonuidata'] = { ...inputData[\"StbTimePoint\"]['jsonuidata'],\n        externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid\n      };\n    }\n\n    inputData[\"SubSampleDateList\"] = param.dateList;\n    inputData['subsampledateconstraints'] = this.state.subsampledateconstraints;\n    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n    inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\n    inputData[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n    inputData[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n    inputData[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\n    let isFileupload = false;\n    const formData = new FormData();\n    this.props.Login.withoutCombocomponent.map(item => {\n      if (item.inputtype === 'files') {\n        if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\n          this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\n            formData.append(\"uploadedFile\" + index, item1);\n            formData.append(\"uniquefilename\" + index, inputData[\"StbTimePoint\"].uniquefilename);\n            formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\n            formData.append(\"isFileEdited\", transactionStatus.YES);\n            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo)); // formDataValue={...map[\"StbTimePoint\"].formData,formData};\n\n            delete inputData[\"StbTimePoint\"].uniquefilename;\n            delete inputData[\"StbTimePoint\"][item && item.label];\n            formData.append('Map', Lims_JSON_stringify(JSON.stringify(inputData)));\n            isFileupload = true;\n          });\n        }\n      }\n    });\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      displayName: this.props.Login.inputParam.displayName,\n      inputData: inputData,\n      operation: operation,\n      saveType,\n      formRef,\n      action: 'update',\n      showConfirmAlert: false,\n      resultDataState: this.state.resultDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      testAttachmentDataState: this.state.testAttachmentDataState,\n      formData: formData,\n      isFileupload // dataState:undefined, selectedId\n\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData: this.props.Login.masterData\n          },\n          saveType,\n          parentPopUpSize: \"lg\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.updateStbTimePoint(inputParam, this.props.Login.masterData, \"openModal\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPreviewTemplate,\n  updateStore,\n  addMoreTests,\n  addSubTimePoint,\n  saveTimePoint,\n  componentTest,\n  createRegTest,\n  ReloadData,\n  getTimePointDetail,\n  getTimePointTestDetail,\n  getStabilityStudyPlanByFilterSubmit,\n  cancelSampleAction,\n  testSectionTest,\n  approveStbStudyPlan,\n  getEditStbTimePointDetails,\n  deleteTestAction,\n  updateStbTimePoint,\n  cancelStbTimePointAction,\n  filterTransactionList,\n  getRegTypeChange,\n  getRegSubTypeChange,\n  onApprovalConfigVersionChange,\n  getSampleTypeChange,\n  getTestDetailFromRegistration\n})(injectIntl(StabilityStudyPlan));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/stability/StabilityStudyPlan.jsx"],"names":["faBolt","faPlus","faTrashAlt","FontAwesomeIcon","React","Component","Button","Card","Col","FormLabel","Nav","Row","injectIntl","QRCode","connect","SplitterLayout","toast","PortalModal","getPreviewTemplate","testSectionTest","updateStore","filterTransactionList","DEFAULT_RETURN","addMoreTests","addSubTimePoint","approveStbStudyPlan","cancelSampleAction","cancelStbTimePointAction","componentTest","createRegTest","deleteTestAction","getEditStbTimePointDetails","getStabilityStudyPlanByFilterSubmit","getTimePointDetail","getTimePointTestDetail","ReloadData","saveTimePoint","updateStbTimePoint","getRegTypeChange","getRegSubTypeChange","onApprovalConfigVersionChange","getSampleTypeChange","getTestDetailFromRegistration","ContentPanel","ReadOnlyText","BarcodeGeneratorComponent","BreadcrumbComponent","childComboClear","comboChild","constructOptionList","convertDateValuetoString","formatInputDate","getControlMap","getSameRecordFromTwoArrays","Lims_JSON_stringify","rearrangeDateFormat","removeIndex","showEsign","sortData","sortDataForDate","checkBoxOperation","formCode","SampleType","SideBarSeqno","SideBarTabIndex","transactionStatus","ModalShow","TransactionListMasterJsonView","ListWrapper","ConfirmMessage","CustomPopover","DateTimePicker","FormInput","FormMultiSelect","FormSelectSearch","FormTextarea","SlideOutModal","AddBarcode","Esign","MoveSampleOrContainers","KendoDatatoolFilter","AddMasterRecords","AddFile","GoodsInFilter","ProductList","AddSubSample","AddTest","MappingFields","getRegistrationSubSample","StbPreRegSlideOutModal","RegistrationFilter","faThumbsUp","faChevronRight","faEye","RegistrationResultTab","CustomTabs","SampleInfoView","SampleGridTab","CustomSwitch","faFileInvoice","faHistory","DataGrid","process","faPlay","faStop","StabilityStudyPlan","constructor","props","mandatoryList","prereg","printer","file","childtest","regSubSample","operation","outsourcetest","adhocTest","mandatory","sampleList","skip","state","take","Login","masterData","searchedSample","undefined","list","StabilityStudyPlanGet","slice","addSubSampleList","selectedStabilityStudyPlan","findComponentReqSpec","Set","map","item","ncomponentrequired","SubSampleTemplate","jsondata","row","children","column","component","hasOwnProperty","componentrow","push","displayname","userInfo","slanguagetypecode","label","inputtype","handleFilterDateChange","dateName","dateValue","setState","changePropertyViewClose","id","updateInfo","typeName","data","activeTabIndex","activeTestTab","activeTabId","changePropertyView","index","event","status","nstbtimepointtestcode","nstbtimepointcode","nstbstudyplancode","window","innerWidth","enableAutoClick","RESULT","tabProps","tabSequence","TEST","screenName","onTabChange","ATTACHMENTS","COMMENTS","HISTORY","OUTSOURCE","SUBSAMPLE","onRegTypeChange","fieldName","labelname","Map","parseInt","value","onSampleTypeChange","onRegSubTypeChange","RegTypeValue","nregtypecode","nneedtemplatebasedflow","RegSubTypeValue","nregsubtypecode","onDesignTemplateChange","onFilterChange","cancelSampleRecords","controlcode","ntransactionstatus","APPROVED","info","intl","formatMessage","length","obj","RealFromDate","RealToDate","fromDate","toDate","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","RealRegSubTypeValue","FilterStatusValue","RealDesignTemplateMappingValue","ndesigntemplatemappingcode","nneedsubsample","sample","join","selectedStbTimePoint","selectedStbTimePointTest","test","napproveconfversioncode","inputParam","inputData","postParamList","action","userRoleControlRights","nformcode","loadEsign","screenData","openModal","parentPopUpSize","cancelSubSampleRecord","testList","searchedSubSample","StbTimePointGet","subsampleskip","subsampletake","x","RealApprovalConfigVersionValue","FromDate","ToDate","getTestChildTabDetailRegistration","isServiceRequired","cancelRecord","ApprovalConfigVersion","ApprovalConfigVersionValue","openFilter","showFilter","editSubSampleRegistration","regSubSamplewithoutCombocomponent","Layout","regSubSamplecomboComponents","regSubSamplechildColumnList","columnList","val","childColumnList","mastertoedit","selectedRecord","closeFilter","onFilterSubmit","selectedFilter","fromdate","todate","SampleTypeValue","RealFilterStatusValue","DesignTemplateMappingValue","RealSampleTypeList","RealRegTypeList","RegistrationType","RealRegSubTypeList","RegistrationSubType","RealFilterStatuslist","FilterStatus","RealDesignTemplateMappingList","DesignTemplateMapping","RealApprovalConfigVersionList","activeSampleTab","activeSubSampleTab","saveFilterSubmit","sampleTypeValue","regTypeValue","regSubTypeValue","filterStatusValue","approvalConfigValue","designTemplateMappingValue","nfilterstatus","userinfo","searchSubSampleRef","searchSampleRef","searchTestRef","onReload","flag","addTimePoint","check","CLINICALTYPE","findTransactionStatus","indexOf","REJECT","CANCELLED","RELEASED","findSampleSpec","nallottedspeccode","findSampleSpectemplate","ntemplatemanipulationcode","regchildColumnList","specBasedTestPackage","getStabilityStudyPlanComboService","ScreenName","primaryKeyField","editId","importData","ndesigntemplatemappingcodefilter","withoutCombocomponent","registrationTemplate","comboComponents","mapOfFilterRegData","STABILITY","sampletypecategorybasedflow","NO","YES","ntestgroupspecrequired","onTestSectionChange","comboData","specBasedComponent1","caseNo","selectSection","selectPackage","ntestpackagecode","nspecsampletypecode","specBasedComponent","Conponent","selectedComponent","availableTestData","TestPakageTest","AllTest","availableTest","TestCombined","TestSection","onComponentChange","onInputOnSubSampleChange","control","radiotext","target","type","name","checked","isnumeric","replace","onComboSubSampleChange","customName","parentList","childComboList","comboName","inputParem","child","source","primarykeyField","valuemember","pkey","nquerybuildertablecode","nameofdefaultcomp","getChildValues","regSubSamplecomboData","childParam","onNumericInputSubSampleChange","onNumericBlurSubSample","max","parseFloat","precision","min","handleDateSubSampleChange","onComboChange","selectedDetailField","handlePageChange","e","handleTestPageChange","testskip","testtake","handleSubSamplePageChange","addMoreTest","ncontrolCode","sideNavDetail","StbTimePointTestGet","selectedTestList","genericLabel","resultDataState","testDataStateChange","controlMap","attachmentTabDetail","commentTabDetail","historyTabDetail","SingleItem","viewFile","sampleGridDataState","sampleInfoDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","outSourceTabDetail","historyTabMap","historyExtractedColumnList","set","RegistrationSampleHistory","registrationTestHistoryDataState","dataState","testDataState","testCommentDataState","testAttachmentDataState","onInputSwitchOnChange","enablePropertyPopup","closeModal","loadPreregister","openChildModal","pare","loadPrinter","openPortal","subSampleDataGridList","selectedPrinterData","multiFilterLoad","insertSourcePreregno","closeChildModal","loadRegSubSample","loadFile","showSaveContinue","loadChildTest","loadAdhocTest","TestPackage","Test","selectedMaster","selectedControl","masterextractedColumnList","masterfieldList","masterdataList","mastercomboComponents","masterwithoutCombocomponent","masterComboColumnFiled","masterOperation","masterEditObject","masterDesign","addMaster","masterIndex","availableAdhocTest","displayName","PopUpLabel","tabseqno","String","subSampleCommentDataState","subSampleAttachmentDataState","getSubSampleChildTabDetail","OrderCodeData","getSampleChildTabDetail","onSaveChildTestClick","saveType","formRef","subsampleList","TestGroupTest","ntestgrouptestcode","StbTimePoint","ntype","ageData","skipmethodvalidity","classUrl","methodUrl","responseKeyList","onSaveTimePointClick","objSubSample","findSampleAlloSpec","selectedStbTimePointTestData","selectedStbTimePointTestArray","param","defaulttimezone","sampleRegistration","dateList","subsampleCombinationUnique","subsampledateconstraints","isFileupload","formData","FormData","forEach","item1","append","uniquefilename","JSON","stringify","updateStbTimePoints","approveRegistration","registerId","nportalrequired","settings","confirmMessage","confirm","approveStbConfirm","createRef","layout","masterStatus","error","showAccordian","filterCollection","breadCrumb","showTest","showSample","showSubSample","sampleSearchFied","subsampleSearchFied","testSearchFied","showConfirmAlert","DynamicSampleColumns","sampleCommentDataState","historyDataState","externalOrderAttachmentDataState","outsourceDetailsDataState","grandparentheight","transactionValidation","splitChangeWidthPercentage","regparentSubSampleColumnList","regchildSubSampleColumnList","DynamicSubSampleColumns","DynamicTestColumns","testMoreField","testListColumns","SubSampleDynamicGridItem","SubSampleDynamicGridMoreField","SubSampleSingleItem","sampleCombinationUnique","cancelId","studyPlanId","sampleBarcodeId","subSampleBarcodeId","editstudyPlanId","quarantineId","addTestId","adhocTestId","generateBarcodeId","printBarcodeId","cancelSampleId","addSubSampleId","editSubSampleId","cancelSubSampleId","CancelExternalOrderSampleId","exportTemplateId","importTemplateId","stateSampleType","stateRegistrationType","stateRegistrationSubType","stateFilterStatus","stateDynamicDesign","testGetParam","testChildGetParam","subSampleGetParam","filterSampleParam","filterTestParam","editRegParam","editSubSampleRegParam","addTestParam","sampleSearchField","subsampleSearchField","testSearchField","filterSubSampleParam","initialVerticalWidth","enablePin","fixefScrollHeight","outerHeight","propertyPopupWidth","showQRCode","showBarcode","treeData","toggleAction","outsourceId","copySampleId","filterSampleList","render","subSampleList","mandatoryFieldsFilter","testDesign","borderBottom","display","searchedTest","split","setting","deleteTestId","mainDesign","paneSizeChange","marginTop","childRefs","ref","childFilteredListName","title","controlname","objectName","hidden","editTimePointId","onClick","primaryKeyName","addTimePointId","deleteTimePointId","filteredListName","clearFilter","searchRef","fetchUrl","fecthInputObject","selectedObject","inputListName","updatedListname","unchangeList","breadCrumbData","filterNameId","openFilterName","filterDetailId","FilterName","clickFilterDetail","onMultiFilterClick","approevStudyPlanId","deleteStudyPlanId","stateApprovalConfigVersion","Date","width","noutsourcerequired","PrevoiusLoginData","onSaveClick","validateEsign","sampleexportfields","subsampleexportfields","loadComponent","loadTest","loadSource","childoperation","ChildscreenName","barcodeGeneration","barcodeSelectedRecord","ncontrolcode","onSaveMasterRecord","onSaveFileClick","onSavePrinterClick","onSaveAdhocTestClick","onSaveOutSourceSample","onSaveCancelOrder","onSaveMultiFilterClick","selectComponent","selectedFile","loadPoolSource","selectedSourceData","onSaveCancelOrderMandatoryFields","filter","onInputOnChange","onNumericInputChange","BarcodeList","Printer","nbarcodeprint","barcodevalue","barcodeData","sarno","Product","generateBarcodeValue","additionDesignToPrint","onInputOnChangeMaster","onComboChangeMaster","handleDateChangeMaster","onNumericInputOnChangeMaster","mastertimeZoneList","masterdefaultTimeZone","onComboChangeMasterDyanmic","handleDateChangeMasterDynamic","onInputOnChangeMasterDynamic","onNumericInputChangeMasterDynamic","onNumericBlurMasterDynamic","addMasterRecord","editMasterRecord","DynamicDesign","parse","lstComponent","timeZoneList","defaultTimeZone","selectedStbTimePointTestPackageData","onTestPackageChange","hideQualisForms","onDropFileSubSample","deleteAttachmentSubSample","onDropComponentFile","deleteAttachment","actionType","onComboTestPackageChange","outSourceSiteList","outSourceTestList","ssitedate","date","handleDateChange","logic","filters","handleFilterChange","kendoOptionList","parentCallBack","closeSendToStoreChildModal","onSaveModalClick","onSendToStoreSample","mandatoryMappingList","orderTypeList","orderList","itemRender","onExpandChange","onItemClick","onComboChangeTree","onNumericInputChangeSample","storageCategory","unitMaster","approvedLocation","confirmAlert","modalShow","closeModalShow","onSaveModalFilterName","modalTitle","onEsignInputOnChange","sfiltername","componentDidUpdate","previousProps","popUptestDataState","TransactionValidation","Object","values","TESTPACKAGE","has","get","sampledateconstraints","addedOrderSampleList","samplefilteritem","sampledisplayfields","dynamicColumn","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","includes","subsamplegriditem","subsamplegridmoreitem","subsampledisplayfields","testListFields","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","samplecombinationunique","subsamplecombinationunique","sampleExportFields","subSampleExportFields","sampleTypeMap","registrationTypeMap","registrationSubTypeMap","filterStatusMap","DesignTemplateMappingMap","sfromdate","stodate","isMultiSort","multiSortData","searchFieldList","changeList","isService","SINGLESELECT","snspecsampletypecode","breadCrumbobj","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","stransdisplaystatus","approvedTreeData","initialParam","externalorderid","mapStateToProps"],"mappings":"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","sourcesContent":["import { faBolt, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Component } from 'react';\r\nimport { Button, Card, Col, FormLabel, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport QRCode from 'react-qr-code';\r\nimport { connect } from 'react-redux';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { toast } from 'react-toastify';\r\nimport PortalModal from '../../PortalModal';\r\nimport { getPreviewTemplate, testSectionTest, updateStore, filterTransactionList } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    addMoreTests, addSubTimePoint,\r\n    approveStbStudyPlan,\r\n    cancelSampleAction,\r\n    cancelStbTimePointAction,\r\n    componentTest, createRegTest,\r\n    deleteTestAction, getEditStbTimePointDetails,\r\n    getStabilityStudyPlanByFilterSubmit,\r\n    getTimePointDetail, getTimePointTestDetail,\r\n    ReloadData,\r\n    saveTimePoint,\r\n    updateStbTimePoint, getRegTypeChange, getRegSubTypeChange, onApprovalConfigVersionChange, getSampleTypeChange,getTestDetailFromRegistration\r\n} from '../../actions/StabilityStudyPlanAction';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg';\r\nimport { ReactComponent as SaveIcon } from '../../assets/image/save_icon.svg';\r\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\r\nimport BarcodeGeneratorComponent from '../../components/BarcodeGeneratorComponent';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { childComboClear, comboChild, constructOptionList, convertDateValuetoString, formatInputDate, getControlMap, getSameRecordFromTwoArrays, Lims_JSON_stringify, rearrangeDateFormat, removeIndex, showEsign, sortData, sortDataForDate } from '../../components/CommonScript';\r\nimport { checkBoxOperation, formCode, SampleType, SideBarSeqno, SideBarTabIndex, transactionStatus } from '../../components/Enumeration';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddBarcode from '../../pages/BarcodeTemplate/AddBarcode';\r\nimport Esign from '../audittrail/Esign';\r\nimport MoveSampleOrContainers from '../basemaster/MoveSampleOrContainers';\r\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\r\nimport AddMasterRecords from '../dynamicpreregdesign/AddMasterRecords';\r\nimport AddFile from '../goodsin/AddFile';\r\nimport GoodsInFilter from '../goodsin/GoodsInFilter';\r\nimport { ProductList } from '../product/product.styled';\r\nimport AddSubSample from '../registration/AddSubSample';\r\nimport AddTest from '../registration/AddTest';\r\nimport MappingFields from '../registration/MappingFields';\r\nimport { getRegistrationSubSample } from '../registration/RegistrationValidation';\r\nimport StbPreRegSlideOutModal from './StbPreRegSlideOutModal';\r\nimport RegistrationFilter from '../registration/RegistrationFilter';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReactComponent as FullviewExpand } from '../../assets/image/fullview-expand.svg';\r\nimport { ReactComponent as FullviewCollapse } from '../../assets/image/fullview-collapse.svg';\r\nimport { faEye } from '@fortawesome/free-regular-svg-icons';\r\nimport RegistrationResultTab from '../registration/RegistrationResultTab';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleGridTab from '../registration/SampleGridTab';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { faFileInvoice } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHistory } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faStop } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass StabilityStudyPlan extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.state = {\r\n            layout: 1,\r\n            openModal: false,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: \"Product\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            showSaveContinue: false,\r\n            filterCollection: [],\r\n            selectedFilter: {},\r\n            breadCrumb: [],\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            sampleSearchFied: [],\r\n            subsampleSearchFied: [],\r\n            testSearchFied: [],\r\n            showConfirmAlert: false,\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            DynamicSampleColumns: [],\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'nstbstudyplancode' }] \r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            testAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            sampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }]\r\n            },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5\r\n            },\r\n            registrationTestHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            externalOrderAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5\r\n            },\r\n            outsourceDetailsDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5\r\n            }\r\n            ,\r\n            selectedPrinterData: {},\r\n            grandparentheight: '150vh',\r\n            transactionValidation: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            testskip: 0,\r\n            splitChangeWidthPercentage: 28.6,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            subsampleskip: 0,\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12],\r\n            comboComponents: [],\r\n            withoutCombocomponent: [],\r\n            childColumnList: [],\r\n            columnList: [],\r\n            regSubSamplecomboComponents: [],\r\n            regSubSamplewithoutCombocomponent: [],\r\n            regparentSubSampleColumnList: [],\r\n            regchildSubSampleColumnList: [],\r\n            DynamicSubSampleColumns: [],\r\n            DynamicTestColumns: [],\r\n            DynamicGridItem: [],\r\n            DynamicGridMoreField: [],\r\n            SingleItem: [],\r\n            testMoreField: [],\r\n            testListColumns: [],\r\n            SubSampleDynamicGridItem: [],\r\n            SubSampleDynamicGridMoreField: [],\r\n            SubSampleSingleItem: [],\r\n            sampleCombinationUnique: [], subsampleCombinationUnique: [],\r\n            cancelId: -1,\r\n            studyPlanId: -1,\r\n            sampleBarcodeId: -1,\r\n            subSampleBarcodeId: -1,\r\n            editstudyPlanId: -1,\r\n            quarantineId: -1,\r\n            addTestId: -1,\r\n            adhocTestId: -1,\r\n            generateBarcodeId: -1,\r\n            printBarcodeId: -1,\r\n            cancelSampleId: -1,\r\n            addSubSampleId: -1,\r\n            editSubSampleId: -1,\r\n            cancelSubSampleId: -1,\r\n            CancelExternalOrderSampleId: -1,\r\n            exportTemplateId: -1,\r\n            importTemplateId: -1,\r\n            stateSampleType: [],\r\n            stateRegistrationType: [],\r\n            stateRegistrationSubType: [],\r\n            stateFilterStatus: [],\r\n            stateDynamicDesign: [],\r\n            testGetParam: {},\r\n            testChildGetParam: {},\r\n            subSampleGetParam: {},\r\n            filterSampleParam: {},\r\n            filterTestParam: {},\r\n            editRegParam: {},\r\n            editSubSampleRegParam: {},\r\n            addTestParam: {},\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            filterSubSampleParam: {},\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false,\r\n            fixefScrollHeight: window.outerHeight - 300,\r\n            enablePropertyPopup: false,\r\n            enableAutoClick: false,\r\n            propertyPopupWidth: \"60\",\r\n            showQRCode: false,\r\n            showBarcode: false,\r\n            treeData: [],\r\n            toggleAction: false,\r\n            selectedMaster: [],\r\n            outsourceId: -1,\r\n            copySampleId: -1,\r\n            filterSampleList: [],\r\n        };\r\n    }\r\n\r\n    mandatoryList = (prereg, printer, file, childtest, regSubSample, operation, outsourcetest, adhocTest) => {\r\n        let mandatory = [];\r\n        if (file) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_IMPORTFILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n            ];\r\n        }\r\n        else if (printer) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PRINTER\", \"dataField\": \"sprintername\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_BARCODENAME\", \"dataField\": \"sbarcodename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        }\r\n        else if (regSubSample) {\r\n\r\n            let sampleList = [];\r\n            const skip = this.state.skip\r\n            const take = this.state.take\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                    : this.props.Login.masterData.StabilityStudyPlanGet;\r\n\r\n                sampleList = list ? list.slice(skip, skip + take) : [];\r\n            } else {\r\n                sampleList = this.props.Login.masterData.StabilityStudyPlanGet && this.props.Login.masterData.StabilityStudyPlanGet.slice(skip, skip + take);\r\n            }\r\n            let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\r\n            const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\r\n            if (findComponentReqSpec[0] === 3) {\r\n                mandatory = [{ \"idsName\": \"IDS_COMPONENT\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }]\r\n            }\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        mandatory.push({ \"mandatory\": true, \"idsName\": componentrow.displayname[this.props.Login.userInfo.slanguagetypecode], \"dataField\": componentrow.label, \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" })\r\n\r\n                                    }\r\n                                    return mandatory;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                    mandatory.push({ \"mandatory\": true, \"idsName\": component.displayname[this.props.Login.userInfo.slanguagetypecode], \"dataField\": component.label, \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" }) : \"\"\r\n\r\n                        })\r\n                    })\r\n                })\r\n            if (operation !== 'update') {\r\n                mandatory.push({ \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n        }\r\n        else if (childtest) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ];\r\n        }\r\n        else if (outsourcetest) {\r\n            mandatory = [{ \"idsName\": \"IDS_SITE\", \"dataField\": \"outsourcesite\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }\r\n                , { \"idsName\": \"IDS_TEST\", \"dataField\": \"outSourceTestList\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }\r\n                , { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"ssampleid\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n                , { \"idsName\": \"IDS_OUTSOURCEDATE\", \"dataField\": \"doutsourcedate\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\", }\r\n            ]\r\n        }\r\n        else if (adhocTest) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ];\r\n        }\r\n        return mandatory;\r\n    }\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[dateName] = dateValue;\r\n        this.setState({ masterData });\r\n    }\r\n\r\n    render() {\r\n        this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : this.props.Login.masterData.FromDate;\r\n        this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : this.props.Login.masterData.ToDate;\r\n        let sampleList = this.props.Login.masterData.StabilityStudyPlanGet ? sortData(this.props.Login.masterData.StabilityStudyPlanGet, 'desc', 'nstbstudyplancode') : [];\r\n        let subSampleList = this.props.Login.masterData.StbTimePointGet ? this.props.Login.masterData.StbTimePointGet : [];\r\n        let testList = this.props.Login.masterData.StbTimePointTestGet ? this.props.Login.masterData.StbTimePointTestGet : []; //\r\n\r\n        const mandatoryFieldsFilter = [{ \"mandatory\": true, \"idsName\": \"IDS_FILTERNAME\", \"dataField\": \"sfiltername\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager' >\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        clickIconGroup={true}\r\n                        // paneHeight={this.state.initialVerticalWidth}\r\n                        masterList={this.props.Login.masterData.searchedTest || testList}\r\n                        selectedMaster={this.props.Login.masterData.selectedStbTimePointTest}\r\n                        primaryKeyField=\"nstbtimepointtestcode\"\r\n                        getMasterDetail={(event, status) => this.getTestChildTabDetailRegistration(event, status)}\r\n                        inputParam={{\r\n                            ...this.state.testChildGetParam\r\n                        }}\r\n                        additionalParam={[]}\r\n                        mainField=\"stestsynonym\"\r\n                        selectedListName=\"selectedStbTimePointTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        // jsonField={'jsondata'}\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        // showStatusLink={true}\r\n                        subFieldsLabel={true}\r\n                        // statusFieldName=\"stransdisplaystatus\"\r\n                        // statusField=\"ntransactionstatus\"\r\n                        needMultiSelect={false}\r\n                        subFields={this.state.testListColumns || []}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        //showStatusName={true}\r\n                        needFilter={false}\r\n                        // needMultiValueFilter={true}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTest\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={this.state.filterTestParam}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"stransdisplaystatus\"\r\n                        // childTabsKey={[\"RegistrationTestComment\"]}\r\n                        //childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\", \"RegistrationTestAttachment\", \"ApprovalParameter\", \"RegistrationTestHistory\"]}\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"StabilityStudyPlanGet\"\r\n                        //selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                        //selectionColorField=\"scolorhexcode\"\r\n                        commonActions={\r\n                            <>\r\n                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                    <Nav.Link name=\"addtest\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(this.state.addTestId) === -1}\r\n                                        onClick={() => this.addMoreTest({\r\n                                            ...this.state.addTestParam,\r\n                                            skip: this.state.skip,\r\n                                            take: (this.state.skip + this.state.take)\r\n                                        },\r\n                                            this.state.addTestId)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETETEST\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(this.state.deleteTestId) === -1}\r\n                                        onClick={() => this.cancelRecord('Test', this.state.deleteTestId,\r\n                                            this.state.testskip, this.state.testtake, 'delete')}>\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                    </Nav.Link>\r\n                                </ProductList>\r\n                                {/* </Tooltip> */}\r\n                            </>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n\r\n        let mainDesign = \"\"\r\n\r\n\r\n\r\n        mainDesign = <SplitterLayout borderColor=\"#999\"\r\n            primaryIndex={1} percentage={true}\r\n            secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n            onSecondaryPaneSizeChange={this.paneSizeChange}\r\n            primaryMinSize={40}\r\n            secondaryMinSize={30}\r\n        >\r\n\r\n            <Card >\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TIMEPOINT\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager'>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        // paneHeight={this.state.initialVerticalWidth}\r\n                        // splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n\r\n                        clickIconGroup={true}\r\n                        masterList={this.props.Login.masterData.searchedSubSample || subSampleList}\r\n                        selectedMaster={this.props.Login.masterData.selectedStbTimePoint}\r\n                        primaryKeyField=\"nstbtimepointcode\"\r\n                        getMasterDetail={(event, status) => {\r\n                            this.props.getTimePointTestDetail(event, status);\r\n                            //  this.changePropertyView(6, event, status) \r\n                        }}\r\n                        inputParam={{\r\n                            ...this.state.testGetParam,\r\n                            searchTestRef: this.searchTestRef,\r\n                            searchSubSampleRef: this.searchSubSampleRef,\r\n                            testskip: this.state.testskip,\r\n                            subsampleskip: this.state.subsampleskip,\r\n                            testtake: this.state.testtake,\r\n                            subsampletake: this.state.subsampletake,\r\n                            resultDataState: this.state.resultDataState,\r\n                            // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n                            // activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                        }}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedSubSample\"\r\n                        searchRef={this.searchSubSampleRef}\r\n                        filterParam={{\r\n                            ...this.state.filterSubSampleParam,\r\n                            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                        }}\r\n                        additionalParam={['napprovalversioncode']}\r\n                        showStatusLink={true}\r\n                        showStatusName={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        mainField=\"nstbtimepointcode\"\r\n                        selectedListName=\"selectedStbTimePoint\"\r\n                        objectName=\"subsample\"\r\n                        listName=\"IDS_TIMEPOINT\"\r\n                        jsonField={'jsondata'}\r\n                        jsonDesignFields={true}\r\n                        needValidation={true}\r\n                        validationKey=\"napprovalversioncode\"\r\n                        validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                        subFields={this.state.DynamicSubSampleColumns}\r\n                        skip={this.state.subsampleskip}\r\n                        take={this.state.subsampletake}\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"stransdisplaystatus\"\r\n                        needMultiSelect={false}\r\n                        // selectionColorField=\"scolorhexcode\"\r\n                        subFieldsLabel={false}\r\n                        subFieldsFile={true}\r\n                        handlePageChange={this.handleSubSamplePageChange}\r\n                        // viewFile={this.viewFile}\r\n                        // selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                        //     && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                        childTabsKey={[\r\n                            // \"RegistrationAttachment\",\r\n                            \"StbTimePointTestGet\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"OutsourceDetailsList\", \"RegistrationParameter\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"]}\r\n                        actionIcons={\r\n                            [\r\n                                {\r\n                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                    controlname: \"faPencilAlt\",\r\n                                    objectName: \"mastertoedit\",\r\n                                    hidden: this.state.userRoleControlRights.indexOf(this.state.editTimePointId) === -1,\r\n                                    onClick: this.editSubSampleRegistration,\r\n                                    inputData: {\r\n                                        primaryKeyName: \"nstbtimepointcode\",\r\n                                        operation: \"update\",\r\n                                        masterData: this.props.Login.masterData,\r\n                                        userInfo: this.props.Login.userInfo,\r\n                                        searchTestRef: this.searchTestRef,\r\n                                        editSubSampleRegParam: { ...this.state.editSubSampleRegParam, ncontrolCode: this.state.editTimePointId }\r\n                                    },\r\n                                }\r\n                            ]\r\n                        }\r\n                        needFilter={false}\r\n                        commonActions={\r\n                            <>\r\n                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n\r\n\r\n                                    <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                        //title={\"Add Test\"}\r\n                                        //  data-for=\"tooltip-common-wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTIMEPOINT\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(this.state.addTimePointId) === -1}\r\n                                        onClick={() => this.addTimePoint(this.state.addTimePointId, this.state.skip, this.state.take)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        //title={\"Cancel/Reject Test\"}\r\n                                        //data-for=\"tooltip-common-wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETETIMEPOINT\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(this.state.deleteTimePointId) === -1}\r\n                                        onClick={() => this.cancelSubSampleRecord('StbTimePoint', this.state.deleteTimePointId, this.state.subsampleskip, this.state.subsampletake, 'delete')}>\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                    </Nav.Link>\r\n                                </ProductList>\r\n                                {/* </Tooltip> */}\r\n                            </>\r\n                        }\r\n\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n            {testDesign}\r\n        </SplitterLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"nstbstudyplancode\",\r\n                fetchUrl: \"stabilitystudyplan/getRegistrationSubSample\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam, testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedStabilityStudyPlan\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"selectedStabilityStudyPlan\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"nstbtimepointcode\",\r\n                fetchUrl: \"registration/getRegistrationTestSample\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam, testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedStbTimePoint\",\r\n                inputListName: \"selectedStbTimePoint\",\r\n                updatedListname: \"StbTimePointGet\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"StbTimePointTestGet\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"nstbtimepointtestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    resultDataState: this.state.resultDataState\r\n                },\r\n                selectedObject: \"selectedStbTimePointTest\",\r\n                inputListName: \"selectedStbTimePointTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }\r\n        ];\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                {/* Add by thenmozhi jira point UUDA-223 06082024 */}\r\n                <ListWrapper className=\"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <div className='fixed-buttons'>\r\n                        <Nav.Link\r\n                            className=\"btn btn-circle outline-grey ml-2\"\r\n                            data-tip={this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" })}\r\n                            // data-for=\"tooltip-common-wrap\"\r\n                            hidden={this.state.userRoleControlRights.indexOf(this.state.filterNameId) === -1}\r\n                            onClick={() => this.openFilterName(this.state.filterNameId)}>\r\n                            {/* <DownloadReportbutton width='20px' height='20px' className='custom_icons' /> */}\r\n                            <SaveIcon width='20px' height='20px' className='custom_icons' />\r\n                        </Nav.Link>\r\n                        {\r\n                            this.state.userRoleControlRights.indexOf(this.state.filterDetailId) !== -1 &&\r\n                                this.props.Login.masterData && this.props.Login.masterData.FilterName &&  this.props.Login.masterData.FilterName.length > 0 ?\r\n                                <CustomPopover\r\n                                    icon={faBolt}\r\n                                    nav={true}\r\n                                    data={this.props.Login.masterData.FilterName}\r\n                                    btnClasses=\"btn-circle btn_grey ml-2 spacesremovefromaction\"\r\n                                    //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJselectedStbTimePointTest,this.props.Login.userInfo)}\r\n                                    dynamicButton={(value) => this.clickFilterDetail(value)}\r\n                                    textKey=\"sfiltername\"\r\n                                    iconKey=\"nfiltercode\"\r\n                                >\r\n                                </CustomPopover>\r\n                                : \"\"\r\n                        }\r\n                    </div>\r\n\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                {/* className={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 60 ? 'split-mode' : ''} */}\r\n                                <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\"\r\n                                        primaryIndex={1} percentage={true}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                        primaryMinSize={30}\r\n                                        secondaryMinSize={20}\r\n                                    >\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                listMasterShowIcon={1}\r\n                                                // paneHeight={this.state.firstPane}\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedSample || sampleList}\r\n                                                selectedMaster={this.props.Login.masterData.selectedStabilityStudyPlan}\r\n                                                primaryKeyField=\"nstbstudyplancode\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                getMasterDetail={this.props.getTimePointDetail}\r\n                                                inputParam={{\r\n                                                    ...this.state.subSampleGetParam,\r\n                                                    searchTestRef: this.searchTestRef,\r\n                                                    searchSubSampleRef: this.searchSubSampleRef,\r\n                                                    testskip: this.state.testskip,\r\n                                                    subsampleskip: this.state.subsampleskip,\r\n                                                    resultDataState: this.state.resultDataState,\r\n                                                    activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                                                }}\r\n                                                // selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                                                //     && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                mainField={\"nstbstudyplancode\"}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                selectedListName=\"selectedStabilityStudyPlan\"\r\n                                                searchListName=\"searchedSample\"\r\n                                                searchRef={this.searchSampleRef}\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"stransdisplaystatus\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                needMultiValueFilter={false}\r\n                                                clearAllFilter={this.onReload}\r\n                                                onMultiFilterClick={this.onMultiFilterClick}\r\n                                                jsonField={'jsondata'}\r\n                                                jsonDesignFields={true}\r\n                                                needMultiSelect={false}\r\n                                                // showStatusBlink={true}\r\n                                                callCloseFunction={true}\r\n                                                filterParam={{\r\n                                                    ...this.state.filterSampleParam,\r\n                                                    childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                    { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                                }}\r\n                                                subFieldsLabel={false}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                skip={this.state.skip}\r\n                                                take={this.state.take}\r\n                                                // splitModeClass={this.state.splitChangeWidthPercentage\r\n                                                //     && this.state.splitChangeWidthPercentage > 50 ? 'split-mode'\r\n                                                //     : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                childTabsKey={[\"RegistrationAttachment\", \"StbTimePointGet\",\r\n                                                    \"StbTimePointTestGet\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"selectedStbTimePoint\", \"selectedStbTimePointTest\",\r\n                                                    \"RegistrationComment\", \"ExternalOrderAttachmentList\", \"OutsourceDetailsList\", \"RegistrationParameter\", \"RegistrationTestAttachment\",\r\n                                                    \"RegistrationTestComment\"]} //, \"RegistrationParameter\"\"RegistrationTestComment\"\r\n                                                // actionIcons={\r\n                                                //     [\r\n                                                //         {\r\n                                                //             title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                //             controlname: \"faPencilAlt\",\r\n                                                //             objectName: \"mastertoedit\",\r\n                                                //             hidden: this.state.userRoleControlRights.indexOf(this.state.editstudyPlanId) === -1,\r\n                                                //             onClick: this.editRegistration,\r\n                                                //             inputData: {\r\n                                                //                 primaryKeyName: \"nstbstudyplancode\",\r\n                                                //                 operation: \"update\",\r\n                                                //                 masterData: this.props.Login.masterData,\r\n                                                //                 userInfo: this.props.Login.userInfo,\r\n                                                //                 editRegParam: {\r\n                                                //                     ...this.state.editRegParam,\r\n                                                //                     ncontrolCode: this.state.editstudyPlanId\r\n                                                //                 }\r\n                                                //             },\r\n                                                //         }\r\n                                                //     ]\r\n                                                // }\r\n                                                needFilter={true}\r\n                                                commonActions={\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        {/* <ReactTooltip place=\"bottom\" /> */}\r\n\r\n                                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\" role=\"button\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSTABILITYSTUDYPLAN\" })}\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.studyPlanId) === -1}\r\n                                                            onClick={() => this.getStabilityStudyPlanComboService(\"IDS_STABILITYSTUDYPLAN\", \"create\", \"nstbstudyplancode\",\r\n                                                                this.props.Login.masterData, this.props.Login.userInfo, this.state.studyPlanId, false, true, true)}>\r\n                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                        </Button>\r\n                                                        <ProductList className=\"d-flex product-category float-right\"></ProductList>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPRROVESTUDYPLAN\" })}\r\n                                                            // data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.approevStudyPlanId) === -1}\r\n                                                            onClick={() => this.approveRegistration(this.state.approevStudyPlanId, this.state.skip, this.state.take)} >\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_START\" })}\r\n                                                           //data-for=\"tooltip-common-wrap\"\r\n                                                           // hidden={this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1}\r\n                                                           // onClick={() => this.cancelSampleRecords(this.state.deleteStudyPlanId,\r\n                                                           //    this.state.skip, this.state.take, 'delete')}\r\n                                                                >\r\n                                                            <FontAwesomeIcon icon={faPlay} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_STOP\" })}\r\n                                                           //data-for=\"tooltip-common-wrap\"\r\n                                                           // hidden={this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1}\r\n                                                           // onClick={() => this.cancelSampleRecords(this.state.deleteStudyPlanId,\r\n                                                           //    this.state.skip, this.state.take, 'delete')}\r\n                                                                >\r\n                                                            <FontAwesomeIcon icon={faStop} />\r\n                                                        </Nav.Link>\r\n\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETESTUDYPLAN\" })}\r\n                                                            // data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteStudyPlanId) === -1}\r\n                                                            onClick={() => this.cancelSampleRecords(this.state.deleteStudyPlanId,\r\n                                                                this.state.skip, this.state.take, 'delete')}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELTERMINATESTUDYPLAN\" })}\r\n                                                        // data-for=\"tooltip-common-wrap\"\r\n                                                        // hidden={this.state.userRoleControlRights.indexOf(this.state.cancelSampleId) === -1}\r\n                                                        // onClick={() => this.cancelSampleRecords(this.state.cancelSampleId, this.state.skip, this.state.take)}\r\n                                                        >\r\n                                                            <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                            //   data-for=\"tooltip-common-wrap\"\r\n                                                            onClick={() => this.onReload()} >\r\n                                                            <RefreshIcon className='custom_icons' />\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    // {\r\n                                                    //     \"IDS_STABILITYSTUDYPLAN\":\r\n                                                    //         <GoodsInFilter\r\n                                                    //             fromDate={fromDate}\r\n                                                    //             toDate={toDate}\r\n                                                    //             handleFilterDateChange={this.handleFilterDateChange}\r\n                                                    //             userInfo={this.props.Login.userInfo}\r\n\r\n                                                    //         />\r\n                                                    // }\r\n                                                    {\r\n                                                        \"Sample Filter\": <RegistrationFilter\r\n                                                            SampleType={this.state.stateSampleType || []}\r\n                                                            RegistrationType={this.state.stateRegistrationType || []}\r\n                                                            RegistrationSubType={this.state.stateRegistrationSubType || []}\r\n                                                            userInfo={this.props.Login.userInfo || {}}\r\n                                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || {}}\r\n                                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || {}}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || {}}\r\n                                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || {}}\r\n                                                            ApprovalConfigVersionValue={this.props.Login.masterData.ApprovalConfigVersionValue || {}}\r\n                                                            ApprovalConfigVersion={this.state.stateApprovalConfigVersion || {}}\r\n                                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                            FilterStatus={this.state.stateFilterStatus || []}\r\n                                                            FromDate={this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date()}\r\n                                                            ToDate={this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date()}\r\n                                                            onSampleTypeChange={this.onSampleTypeChange}\r\n                                                            onRegTypeChange={this.onRegTypeChange}\r\n                                                            onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                            onApprovalConfigVersionChange={this.onApprovalConfigVersionChange}\r\n                                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                            handleFilterDateChange={this.handleFilterDateChange}\r\n                                                            onFilterChange={this.onFilterChange}\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true || this.state.showSubSample === true ?\r\n                                                { display: \"block\" } : { display: \"none\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                 <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        \r\n                                        <div className={` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_STABILITYDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 4 ? this.sideNavDetail(\"IDS_STABILITYDETAILS\", 0) : \"\"}\r\n                                        </div>\r\n                                        {/* {this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && */}\r\n                                        <div className={` vertical-tab-content-grid sm-view-v-t position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TIMEPOINTRESULTS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 1 ? this.sideNavDetail(\"IDS_TIMEPOINTRESULTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* } */}\r\n                                        <div className={` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.noutsourcerequired === transactionStatus.YES &&\r\n                                            <div className={` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`}>\r\n                                                <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                    {!this.state.enablePropertyPopup ?\r\n                                                        <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                        <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                    }\r\n                                                </Nav.Link>\r\n                                                {/* <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_OUTSOURCEDETAILS\" })}\r\n                                            </h4> */}\r\n                                                {this.state.activeTabIndex && this.state.activeTabIndex === 9 ? this.sideNavDetail(\"IDS_OUTSOURCEDETAILS\") : \"\"}\r\n                                            </div>\r\n                                        }\r\n                                        <div className={` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 10 ? this.sideNavDetail(\"IDS_HISTORY\") : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex === 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_STABILITYDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex === 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1)}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                                    //   data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULT\" })} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_RESULT\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex === 10 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(10)}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_HISTORY\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper >\r\n                {\r\n                    this.props.Login.openPortal ?\r\n                        <PortalModal>\r\n                            <StbPreRegSlideOutModal\r\n                                postParamList={this.postParamList}\r\n                                PrevoiusLoginData={this.PrevoiusLoginData}\r\n                                closeModal={this.closeModal}\r\n                                operation={\"create\"}\r\n                                screenName={\"IDS_STABILITYSTUDYPLAN\"}\r\n                                onSaveClick={this.onSaveClick}\r\n                                validateEsign={this.validateEsign}\r\n                                updateStore={this.props.updateStore}\r\n                                comboComponents={this.state.comboComponents}\r\n                                withoutCombocomponent={this.state.withoutCombocomponent}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                fromDate={this.fromDate}\r\n                                toDate={this.toDate}\r\n                                samplecombinationunique={this.state.sampleCombinationUnique}\r\n                                subsamplecombinationunique={this.state.subsampleCombinationUnique}\r\n                                exportTemplateId={this.state.exportTemplateId}\r\n                                importTemplateId={this.state.importTemplateId}\r\n                                sampleexportfields={this.state.sampleexportfields}\r\n                                subsampleexportfields={this.state.subsampleexportfields}\r\n                                //  specBasedComponent={this.state.specBasedComponent}\r\n                                mandatoryFields={[\r\n                                    { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                    { \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n                            />\r\n                        </PortalModal>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    (this.props.Login.openModal || this.state.showQRCode || this.state.showBarcode) &&\r\n                    <SlideOutModal show={this.props.Login.openModal || this.state.showQRCode || this.state.showBarcode}\r\n                        //|| this.props.Login.loadEsign}\r\n                        closeModal={this.state.showQRCode ? () => this.setState({ showQRCode: false, openModal: false })\r\n                            : this.state.showBarcode ? () => this.setState({ showBarcode: false, openModal: false })\r\n                                : this.props.Login.loadRegSubSample || this.props.Login.loadFile\r\n                                    || this.props.Login.loadChildTest || this.props.Login.loadAdhocTest ? this.closeChildModal\r\n                                    : this.closeModal}\r\n                        hideSave={this.state.showBarcode ? true : false}\r\n                        size={this.props.Login.parentPopUpSize}\r\n                        loginoperation={this.props.Login.loadPrinter ? true : false}\r\n                        buttonLabel={this.state.showQRCode || this.props.Login.loadPrinter ? \"print\" : undefined}\r\n                        operation={this.props.Login.addMaster ? this.props.Login.masterOperation[this.props.Login.masterIndex] : this.state.showQRCode ? \"Preview\" :\r\n                            this.props.Login.loadComponent ||\r\n                                this.props.Login.loadTest || this.props.Login.loadSource ||\r\n                                this.props.Login.loadFile ? this.props.Login.childoperation : this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.state.showQRCode ? \"QR Code\"\r\n                            : this.state.showBarcode ? \"Barcode\"\r\n                                : this.props.Login.loadTest || this.props.Login.loadFile ?\r\n                                    this.props.Login.ChildscreenName : this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        innerPopup={this.props.Login.loadComponent}\r\n                        onSaveClick={this.props.Login.operation === 'barcode' ?\r\n                            () => this.props.barcodeGeneration(this.props.Login.barcodeSelectedRecord,\r\n                                this.props.Login.ncontrolcode, this.props.Login.userInfo, this.state.selectedRecord)\r\n                            : this.state.showQRCode ?\r\n                                () => this.setState({ showQRCode: false, openModal: false })\r\n                                // : this.state.showBarcode ? \r\n                                //     () => this.setState({ showBarcode: false, openModal: false })\r\n                                : this.props.Login.addMaster ? this.onSaveMasterRecord\r\n                                    : this.props.Login.loadRegSubSample ? this.onSaveTimePointClick\r\n                                        : this.props.Login.loadFile ? this.onSaveFileClick\r\n                                            : this.props.Login.loadPrinter ? this.onSavePrinterClick\r\n                                                : this.props.Login.loadChildTest ? this.onSaveChildTestClick\r\n                                                    : this.props.Login.loadAdhocTest ? this.onSaveAdhocTestClick\r\n                                                        //: this.props.Login.outsourcetest ? this.onSaveOutSourceTest\r\n                                                        : this.props.Login.outsourcetest ? this.onSaveOutSourceSample\r\n                                                            : this.props.Login.screenName === \"External Sample\" ? this.onSaveCancelOrder\r\n                                                                : this.props.Login.multiFilterLoad ? this.onSaveMultiFilterClick\r\n                                                                    : this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        showSaveContinue={this.props.Login.showSaveContinue}\r\n                        selectedRecord={!this.props.Login.loadEsign ? this.props.Login.addMaster ? this.state.selectedMaster[this.props.Login.masterIndex] :\r\n                            this.props.Login.loadComponent ? this.state.selectComponent : this.props.Login.loadPrinter ? this.state.selectedPrinterData\r\n                                : this.props.Login.loadTest ? this.state.selectedStbTimePointTestData : this.props.Login.loadFile ? this.state.selectedFile\r\n                                    : this.props.Login.loadPoolSource ? this.state.selectedSourceData : this.state.selectedRecord : this.state.selectedRecord}\r\n                        mandatoryFields={this.props.Login.screenName == \"External Sample\" ? this.onSaveCancelOrderMandatoryFields : this.props.Login.addMaster ?\r\n                            this.props.Login.masterextractedColumnList[this.props.Login.masterIndex].filter(x => x.mandatory === true)\r\n                            : this.mandatoryList(this.props.Login.loadPreregister,\r\n                                this.props.Login.loadPrinter, this.props.Login.loadFile,\r\n                                this.props.Login.loadChildTest, this.props.Login.loadRegSubSample,\r\n                                this.props.Login.operation, this.props.Login.outsourcetest, this.props.Login.loadAdhocTest)}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === \"barcode\" ?\r\n                                <AddBarcode\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputChange={this.onNumericInputChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    BarcodeList={this.props.Login.BarcodeList}\r\n                                    Printer={this.props.Login.Printer}\r\n                                    nbarcodeprint={this.props.Login.nbarcodeprint}\r\n                                // selectedPrinterData={this.state.selectedPrinterData}\r\n\r\n                                >\r\n                                </AddBarcode> : this.state.showQRCode ?\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <QRCode value={this.state.selectedRecord.barcodevalue} />\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_ARNO\" })}:</FormLabel>\r\n                                                    <ReadOnlyText>{this.state.selectedRecord.barcodeData.sarno || '-'}</ReadOnlyText>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}:</FormLabel>\r\n                                                    <ReadOnlyText>{this.state.selectedRecord.barcodeData.Product || '-'}</ReadOnlyText>\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : this.state.showBarcode ?\r\n                                        <BarcodeGeneratorComponent\r\n                                            barcodeData={this.state.selectedRecord.generateBarcodeValue}\r\n                                            additionalDesignsToPrint={this.state.selectedRecord.additionDesignToPrint}\r\n                                            background=\"#ffffff\"\r\n                                            textAlign=\"center\"\r\n                                            fontSize={38}\r\n                                            fontOption=\"bold\"\r\n                                            textPosition=\"bottom\"\r\n                                            lineColor=\"#000000\"\r\n                                            width={3}\r\n                                            height={100}\r\n                                            format=\"CODE128\"\r\n                                            margin={10}\r\n                                            marginTop={50}\r\n                                            marginBottom={undefined}\r\n                                            marginLeft={20}\r\n                                            marginRight={undefined}\r\n                                            flat={true}\r\n                                            printBarcode={true}\r\n                                            displayValue={true}\r\n                                        />\r\n                                        : this.props.Login.addMaster ?\r\n                                            <AddMasterRecords\r\n                                                selectedControl={this.props.Login.selectedControl[this.props.Login.masterIndex]}\r\n                                                fieldList={this.props.Login.masterfieldList && this.props.Login.masterfieldList[this.props.Login.masterIndex]}\r\n                                                extractedColumnList={this.props.Login.masterextractedColumnList[this.props.Login.masterIndex]}\r\n                                                selectedRecord={this.state.selectedMaster[this.props.Login.masterIndex] || {}}\r\n                                                onInputOnChange={this.onInputOnChangeMaster}\r\n                                                onComboChange={this.onComboChangeMaster}\r\n                                                handleDateChange={this.handleDateChangeMaster}\r\n                                                dataList={this.props.Login.masterdataList && this.props.Login.masterdataList[this.props.Login.masterIndex]}\r\n                                                onNumericInputOnChange={this.onNumericInputOnChangeMaster}\r\n                                                masterDesign={this.props.Login.masterDesign && this.props.Login.masterDesign[this.props.Login.masterIndex]}\r\n                                                mastertimeZoneList={this.props.Login.mastertimeZoneList}\r\n                                                masterdefaultTimeZone={this.props.Login.masterdefaultTimeZone}\r\n                                                onComboChangeMasterDyanmic={this.onComboChangeMasterDyanmic}\r\n                                                handleDateChangeMasterDynamic={this.handleDateChangeMasterDynamic}\r\n                                                onInputOnChangeMasterDynamic={this.onInputOnChangeMasterDynamic}\r\n                                                onNumericInputChangeMasterDynamic={this.onNumericInputChangeMasterDynamic}\r\n                                                onNumericBlurMasterDynamic={this.onNumericBlurMasterDynamic}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                Login={this.props.Login}\r\n                                                addMasterRecord={this.addMasterRecord}\r\n                                                editMasterRecord={this.editMasterRecord}\r\n                                                userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                masterIndex={this.props.Login.masterIndex} />\r\n                                            : this.props.Login.loadRegSubSample ?\r\n                                                <AddSubSample\r\n                                                    editfield={this.props.Login.masterData.DynamicDesign && JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)}\r\n                                                    Component={this.props.Login.lstComponent || []}\r\n                                                    selectComponent={this.state.selectedRecord}\r\n                                                    templateData={this.props.Login.masterData.SubSampleTemplate &&\r\n                                                        this.props.Login.masterData.SubSampleTemplate.jsondata}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                                    defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                    handleDateChange={this.handleDateSubSampleChange}\r\n                                                    onInputOnChange={this.onInputOnSubSampleChange}\r\n                                                    onNumericInputChange={this.onNumericInputSubSampleChange}\r\n                                                    onNumericBlur={this.onNumericBlurSubSample}\r\n                                                    comboData={this.props.Login.regSubSamplecomboData}\r\n                                                    onComboChange={this.onComboSubSampleChange}\r\n                                                    onComponentChange={this.onComponentChange}\r\n                                                    TestCombined={this.props.Login.TestCombined || []}\r\n                                                    TestChange={this.onComboChange}\r\n                                                    selectedTestData={this.state.selectedRecord}\r\n                                                    selectedTestPackageData={this.state.selectedStbTimePointTestPackageData}\r\n                                                    childoperation={this.props.Login.operation}\r\n                                                    specBasedComponent={this.props.Login.specBasedComponent}\r\n                                                    userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                    selectPackage={this.state.selectedRecord}\r\n                                                    TestPackage={this.props.Login.TestPackage || []}\r\n                                                    onTestPackageChange={this.onTestPackageChange}\r\n                                                    operation={this.props.Login.operation}\r\n                                                    hideQualisForms={this.props.Login.hideQualisForms}\r\n                                                    addMasterRecord={this.addMasterRecord}\r\n                                                    editMasterRecord={this.editMasterRecord}\r\n                                                    hasTest={true}\r\n                                                    onDropFile={this.onDropFileSubSample}\r\n                                                    deleteAttachment={this.deleteAttachmentSubSample}\r\n                                                    onTestSectionChange={this.onTestSectionChange}\r\n                                                    TestSection={this.props.Login.TestSection || []}\r\n                                                    selectSection={this.state.selectedRecord}\r\n\r\n                                                />\r\n                                                : this.props.Login.loadFile ?\r\n                                                    <AddFile\r\n                                                        selectedFile={this.state.selectedFile || {}}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        onDrop={this.onDropComponentFile}\r\n                                                        deleteAttachment={this.deleteAttachment}\r\n                                                        actionType={this.state.actionType}\r\n                                                        maxSize={20}\r\n                                                        maxFiles={1}\r\n                                                    /> :\r\n                                                    this.props.Login.loadChildTest ?\r\n                                                        <AddTest\r\n                                                            TestCombined={this.props.Login.TestCombined}\r\n                                                            selectedTestData={this.state.selectedRecord}\r\n                                                            TestChange={this.onComboChange}\r\n                                                            TestPackageChange={this.onComboTestPackageChange}\r\n                                                            userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                            selectPackage={this.state.selectedRecord}\r\n                                                            selectSection={this.state.selectedRecord}\r\n                                                            TestPackage={this.props.Login.TestPackage || []}\r\n                                                            TestSection={this.props.Login.TestSection || []}\r\n                                                            onTestPackageChange={this.onTestPackageChange}\r\n                                                            onTestSectionChange={this.onTestSectionChange}\r\n                                                            hideQualisForms={this.props.Login.hideQualisForms}\r\n\r\n                                                        /> :\r\n                                                        this.props.Login.loadChildTest ?\r\n                                                            <AddTest\r\n                                                                TestCombined={this.props.Login.availableTest}\r\n                                                                selectedStbTimePointTestData={this.state.selectedRecord}\r\n                                                                TestChange={this.onComboChange}\r\n                                                                TestPackageChange={this.onComboTestPackageChange}\r\n                                                                userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                selectPackage={this.state.selectedRecord}\r\n                                                                TestPackage={this.props.Login.TestPackage || []}\r\n                                                                onTestPackageChange={this.onTestPackageChange}\r\n                                                                hideQualisForms={this.props.Login.hideQualisForms}\r\n                                                            />\r\n                                                            : this.props.Login.outsourcetest ?\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        <FormSelectSearch\r\n                                                                            name={\"outsourcesite\"}\r\n                                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                                                            placeholder=\"Please Select...\"\r\n                                                                            options={this.props.Login.outSourceSiteList || []}\r\n                                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"outsourcesite\"] : \"\"}\r\n                                                                            isMandatory={true}\r\n                                                                            required={true}\r\n                                                                            isMulti={false}\r\n                                                                            isClearable={true}\r\n                                                                            isSearchable={true}\r\n                                                                            isDisabled={false}\r\n                                                                            closeMenuOnSelect={true}\r\n                                                                            alphabeticalSort={true}\r\n                                                                            onChange={(event) => this.onComboChange(event, \"outsourcesite\")}\r\n\r\n                                                                        />\r\n\r\n                                                                        <FormMultiSelect\r\n                                                                            name={\"outsourcetestlist\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                            options={this.props.Login.outSourceTestList || []}\r\n                                                                            optionId={\"nstbtimepointtestcode\"}\r\n                                                                            optionValue=\"stestsynonym\"\r\n                                                                            value={this.props.Login.selectedRecord && this.props.Login.selectedRecord[\"outSourceTestList\"] ? this.props.Login.selectedRecord[\"outSourceTestList\"] : []}\r\n                                                                            isMandatory={true}\r\n                                                                            isClearable={true}\r\n                                                                            disableSearch={false}\r\n                                                                            disabled={false}\r\n                                                                            closeMenuOnSelect={false}\r\n                                                                            alphabeticalSort={true}\r\n                                                                            onChange={(event) => this.onComboChange(event, \"outSourceTestList\")}\r\n\r\n                                                                        />\r\n\r\n                                                                        <DateTimePicker\r\n                                                                            name={\"doutsourcedate\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_OUTSOURCEDATE\" })}\r\n                                                                            className='form-control'\r\n                                                                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                                                            selected={this.props.Login.selectedRecord[\"doutsourcedate\"] ? this.props.Login.selectedRecord[\"doutsourcedate\"] : new Date()}\r\n                                                                            dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                                                            timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                                                            showTimeInput={false}\r\n                                                                            isClearable={true}\r\n                                                                            isMandatory={true}\r\n                                                                            required={true}\r\n                                                                            onChange={date => this.handleDateChange(\"doutsourcedate\", date)}\r\n                                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"doutsourcedate\"] : \"\"}\r\n                                                                        />\r\n                                                                        <FormInput\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })}\r\n                                                                            name=\"ssampleid\"\r\n                                                                            type=\"text\"\r\n                                                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })}\r\n                                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ssampleid\"] : \"\"}\r\n                                                                            isMandatory={true}\r\n                                                                            required={true}\r\n                                                                            maxLength={100}\r\n                                                                        />\r\n\r\n                                                                        <FormTextarea\r\n                                                                            name={\"sremarks\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"sremarks\"] : \"\"}\r\n                                                                            rows=\"2\"\r\n                                                                            required={false}\r\n                                                                            maxLength={255}\r\n                                                                        >\r\n                                                                        </FormTextarea>\r\n\r\n                                                                        <FormTextarea\r\n                                                                            name={\"sshipmenttracking\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_SHIPMENTTRACKING\" })}\r\n                                                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SHIPMENTTRACKING\" })}\r\n                                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"sshipmenttracking\"] : \"\"}\r\n                                                                            rows=\"2\"\r\n                                                                            required={false}\r\n                                                                            maxLength={255}\r\n                                                                        >\r\n                                                                        </FormTextarea>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                : this.props.Login.multiFilterLoad ?\r\n                                                                    <KendoDatatoolFilter\r\n                                                                        filter={this.props.Login.masterData['kendoFilterList'] || {\r\n                                                                            logic: \"and\",\r\n                                                                            filters: []\r\n                                                                        }}\r\n                                                                        handleFilterChange={this.handleFilterChange}\r\n                                                                        filterData={this.props.Login.masterData.kendoOptionList || []}\r\n                                                                        fields={this.props.Login.masterData[\"fields\"] || []}\r\n                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                        static={true}\r\n                                                                        parentCallBack={this.parentCallBack}\r\n                                                                        needParentCallBack={true}\r\n                                                                    /> : \"\"\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {this.props.Login.openChildModal &&\r\n                    <SlideOutModal show={this.props.Login.openChildModal}\r\n                        closeModal={this.closeSendToStoreChildModal}\r\n                        operation={this.props.Login.MappingFields ? \"\" : \"Store\"}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.MappingFields ? this.props.intl.formatMessage({ id: \"IDS_ORDERMAPPING\" }) : this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                        onSaveClick={this.props.Login.MappingFields ? this.onSaveModalClick : this.onSendToStoreSample}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.MappingFields && this.mandatoryMappingList()}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.MappingFields ?\r\n                                <MappingFields\r\n                                    selectedRecord={this.state.selectedRecord}\r\n                                    selectedDetailField={this.state.selectedDetailField}\r\n                                    orderTypeList={this.props.Login.orderTypeList}\r\n                                    orderList={this.props.Login.orderList}\r\n\r\n                                    onComboChange={this.onComboChange}\r\n                                /> :\r\n                                <MoveSampleOrContainers\r\n                                    treeData={this.state.treeData}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    itemRender={this.itemRender}\r\n                                    onExpandChange={this.onExpandChange}\r\n                                    onItemClick={this.onItemClick}\r\n                                    onComboChange={this.onComboChangeTree}\r\n                                    onNumericInputChange={this.onNumericInputChangeSample}\r\n                                    storageCategory={this.props.Login.masterData.storageCategory || []}\r\n                                    unitMaster={this.props.Login.masterData.unitMaster || []}\r\n                                    approvedLocation={this.props.Login.masterData.approvedLocation || []}\r\n                                    isSendToStore={true}\r\n                                />\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n\r\n                {this.props.Login.modalShow ? ( //ALPD-4912-To show the add popup to get input of filter name,done by Dhanushya RI\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalFilterName}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFieldsFilter}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n\r\n                                <Col md={12}>\r\n                                    <FormTextarea\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                                        name={\"sfiltername\"}\r\n                                        // type=\"text\"\r\n                                        onChange={this.onInputOnChange}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.sfiltername : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={\"50\"}\r\n                                    />\r\n                                </Col>\r\n                        }\r\n                    />\r\n                )\r\n                    : (\r\n                        \"\"\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.nstbtimepointtestcode) {\r\n            id = event.nstbtimepointtestcode\r\n        } else if (event && event.nstbtimepointcode) {\r\n            id = event.nstbtimepointcode\r\n        } else if (event && event.nstbstudyplancode) {\r\n            id = event.nstbstudyplancode\r\n        }\r\n\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status !== \"click\") {\r\n            if (index === SideBarTabIndex.RESULT) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TIMEPOINTRESULTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.ATTACHMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.COMMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.HISTORY) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TIMEPOINTHISTORY\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.OUTSOURCE) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.SUBSAMPLE,\r\n                    screenName: \"IDS_OUTSOURCEDETAILS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: {\r\n            //             activeTabIndex :activeTabIndex\r\n            //            // activeTabId :  id\r\n            //         }\r\n            //     }\r\n            //     this.props.updateStore(updateInfo);\r\n\r\n            //     }\r\n        }\r\n    }\r\n    onRegTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onSampleTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onRegSubTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = parseInt(event.value);\r\n            Map[\"nneedtemplatebasedflow\"] = event.item.nneedtemplatebasedflow;\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onApprovalConfigVersionChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RegSubTypeValue.nregsubtypecode;\r\n            //  Map[\"nneedtemplatebasedflow\"] = event.item.nneedtemplatebasedflow;\r\n            Map[\"napproveconfversioncode\"] = event.value;\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.onApprovalConfigVersionChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n\r\n    onDesignTemplateChange = (event, fieldName, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    cancelSampleRecords = (controlcode, skip, take) => {\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if((this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus===transactionStatus.APPROVED)\r\n        ||(this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus===transactionStatus.APPROVED)){\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }else{\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.StabilityStudyPlanGet;\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n        } else {\r\n            sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\r\n        }\r\n        if (sampleList && sampleList.length > 0) {\r\n            const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n            Map['FromDate'] = obj.fromDate;\r\n            Map['ToDate'] = obj.toDate;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"ncontrolcode\"] = controlcode;\r\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n            Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n\r\n            Map[\"nstbstudyplancode\"] = this.props.Login.masterData.selectedStabilityStudyPlan &&\r\n                this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\");\r\n            Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint &&\r\n                this.props.Login.masterData.selectedStbTimePoint.length > 0 ?\r\n                this.props.Login.masterData.selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\") : \"-1\";\r\n            Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest &&\r\n                this.props.Login.masterData.selectedStbTimePointTest.length > 0 ?\r\n                this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\";\r\n            Map[\"napproveconfversioncode\"] = this.props.Login.masterData.napproveconfversioncode;\r\n            let inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.postParamList,\r\n                action: 'delete'\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'cancel'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.cancelSampleAction(inputParam, this.props.Login.masterData)\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOCANCELREJECT\" }));\r\n        }\r\n    }\r\n\r\n    }\r\n\r\n    cancelSubSampleRecord = (controlcode, skip, take) => {\r\n\r\n        if((this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus===transactionStatus.APPROVED)\r\n            ||(this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus===transactionStatus.APPROVED)){\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n            }else{\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample\r\n                : this.props.Login.masterData.StbTimePointGet;\r\n\r\n            testList = list ? list.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake) : [];\r\n        } else {\r\n            testList = this.props.Login.masterData.StbTimePointGet.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\r\n        }\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePoint.length > 0) {\r\n            let Map = {};\r\n            Map['nstbstudyplancode'] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ?\r\n                this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\";\r\n            Map['nstbtimepointtestcode'] = this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest.length > 0 ?\r\n                this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"ncontrolcode\"] = controlcode;\r\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\r\n            Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n            Map[\"nfilterstatus\"] = -1;\r\n\r\n            Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest.length > 0 ?\r\n                this.props.Login.masterData.selectedStbTimePointTest.map(sample => sample.nstbtimepointcode).join(\",\") : \"-1\";\r\n\r\n            Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.masterData.FromDate);\r\n            Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.masterData.ToDate);\r\n\r\n            let inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.postParamList,\r\n                action: 'StbTimePoint'\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'delete'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.cancelStbTimePointAction(inputParam, this.props.Login.masterData)\r\n            }\r\n\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOCANCELREJECT\" }));\r\n        }\r\n     }\r\n    }\r\n\r\n    getTestChildTabDetailRegistration = (inputData, isServiceRequired) => {\r\n        if (this.props.Login.masterData.selectedStbTimePointTest[0].nstbtimepointtestcode !==\r\n            parseInt(inputData.nstbtimepointtestcode)\r\n        ) {\r\n            let masterData = this.props.Login.masterData;\r\n            masterData['selectedStbTimePointTest'] = inputData.selectedStbTimePointTest;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: false,\r\n                    screenData: { masterData },\r\n                    openModal: false,\r\n                    screenName: this.props.Login.screenName,\r\n                    activeTabIndex:  false,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    cancelRecord = (controlcode, skip, take) => {\r\n        if((this.props.Login.masterData.searchedSample && this.props.Login.masterData.searchedSample[0].ntransactionstatus===transactionStatus.APPROVED)\r\n            ||(this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].ntransactionstatus===transactionStatus.APPROVED)){\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n            }else{\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePointTest.length > 0) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n            Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n\r\n            Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest.length > 0 ? this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\r\n            Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint.length > 0 ? this.props.Login.masterData.selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\") : \"-1\";\r\n            Map[\"nstbstudyplancode\"] = this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ? this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\";\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"napproveconfversioncode\"] = this.props.Login.masterData.ApprovalConfigVersion\r\n                && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode;\r\n            Map[\"ncontrolcode\"] = controlcode;\r\n            let inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.postParamList,\r\n                action: 'delete'\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'delete'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.deleteTestAction(inputParam, this.props.Login.masterData)\r\n            }\r\n\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCANCELREJECT\" }));\r\n        }\r\n    }\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    editSubSampleRegistration = (inputParam) => {\r\n        let data = [];\r\n        const regSubSamplewithoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.SubSampleTemplate\r\n            && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ?\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    data.push(componentrow)\r\n                                } else {\r\n                                    regSubSamplewithoutCombocomponent.push(componentrow)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            : component.inputtype === \"combo\" ?\r\n                                data.push(component) : regSubSamplewithoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const regSubSamplecomboComponents = data\r\n            let regSubSamplechildColumnList = {};\r\n            data.map(columnList => {\r\n                const val = comboChild(data, columnList, regSubSamplechildColumnList, true);\r\n                data = val.data;\r\n                regSubSamplechildColumnList = val.childColumnList\r\n                return null;\r\n            })\r\n            const sampleList = getSameRecordFromTwoArrays(inputParam.masterData.selectedStabilityStudyPlan, [inputParam.mastertoedit], \"nstbstudyplancode\")\r\n            this.props.getEditStbTimePointDetails(inputParam,\r\n                data, this.state.selectedRecord, regSubSamplechildColumnList,\r\n                regSubSamplecomboComponents, regSubSamplewithoutCombocomponent,\r\n                sampleList[0].ncomponentrequired === 3 ? true : false)\r\n        } else {\r\n            toast.info(\"Configure the sub sample template for this registrationtype\")\r\n        }\r\n    }\r\n\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\r\n        const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n        let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        //let RealApprovalConfigVersionValue = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue\r\n        //ALPD-1166\r\n        let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue\r\n        let RealSampleTypeList = this.props.Login.masterData.SampleType || []\r\n        let RealRegTypeList = this.props.Login.masterData.RegistrationType || []\r\n        let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || []\r\n        let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || []\r\n        let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || []\r\n        let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || []\r\n\r\n        let activeSampleTab = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        let activeSubSampleTab = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n\r\n        let activeTestTab = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterStatusValue, RealFromDate, RealToDate, RealDesignTemplateMappingValue, RealApprovalConfigVersionValue,\r\n            RealSampleTypeList, RealRegTypeList, RealRegSubTypeList, RealDesignTemplateMappingList, RealApprovalConfigVersionList,\r\n            RealFilterStatuslist\r\n        }\r\n        let inputData = {\r\n            nstbstudyplancode: \"\",\r\n            saveFilterSubmit: true, //ALPD-4912 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\r\n            sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue,\r\n            regTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegTypeValue,\r\n            regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue,\r\n            filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.FilterStatusValue,\r\n            approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.ApprovalConfigVersionValue,\r\n            designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion\r\n                && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue\r\n                && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n        }\r\n        if (inputData.nsampletypecode) {\r\n            if (inputData.ndesigntemplatemappingcode) {\r\n                const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n                    this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n                inputData['FromDate'] = obj.fromDate;\r\n                inputData['ToDate'] = obj.toDate;\r\n                // ALPD-4130 to clear Additinal Filter config upon Filter Submit- ATE-241\r\n                masterData['kendoFilterList'] = undefined;\r\n                const selectedFilter = {};\r\n                selectedFilter[\"fromdate\"] = RealFromDate;\r\n                selectedFilter[\"todate\"] = RealToDate;\r\n                const inputParam = {\r\n                    masterData, inputData, searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchSampleRef: this.searchSampleRef,\r\n                    searchTestRef: this.searchTestRef\r\n                    //, selectedFilter\r\n                }\r\n                this.props.getStabilityStudyPlanByFilterSubmit(inputParam);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    onReload = () => {\r\n        const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n        const RealFromDate = obj.fromDate;\r\n        const RealToDate = obj.toDate;\r\n        let RealSampleTypeValue = this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue\r\n        let RealDesignTemplateMappingValue = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue\r\n        let RealApprovalConfigVersionValue = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue\r\n        let activeSampleTab = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        let activeSubSampleTab = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        let activeTestTab = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\r\n\r\n        let SampleTypeValue = RealSampleTypeValue\r\n        let RegTypeValue = RealRegTypeValue\r\n        let RegSubTypeValue = RealRegSubTypeValue\r\n        let FilterStatusValue = RealFilterStatusValue\r\n        let DesignTemplateMappingValue = RealDesignTemplateMappingValue\r\n        let ApprovalConfigVersionValue = RealApprovalConfigVersionValue\r\n        // let FromDate = this.props.Login.masterData.FromDate\r\n        // let ToDate = this.props.Login.masterData.ToDate\r\n        const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n        const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue, FromDate, ToDate,\r\n            RealFilterStatusValue, RealFromDate, RealToDate, SampleTypeValue, RegTypeValue,\r\n            RegSubTypeValue, FilterStatusValue, DesignTemplateMappingValue, RealDesignTemplateMappingValue, RealApprovalConfigVersionValue\r\n        }\r\n        let inputData = {\r\n            nstbstudyplancode: \"\",\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo, activeSubSampleTab,\r\n            flag: 1,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedtemplatebasedflow,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n        }\r\n        if (inputData.nsampletypecode) {\r\n            inputData['FromDate'] = obj.fromDate;\r\n            inputData['ToDate'] = obj.toDate;\r\n\r\n            let inputParam = { masterData, inputData, searchSubSampleRef: this.searchSubSampleRef, searchSampleRef: this.searchSampleRef, searchTestRef: this.searchTestRef, selectedFilter: this.state.selectedFilter }\r\n\r\n            this.props.ReloadData(inputParam);\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    addTimePoint = (controlcode, skip, take) => {\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.StabilityStudyPlanGet;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n\r\n        } else {\r\n            sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\r\n        }\r\n\r\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\r\n\r\n        const nsampletypecode = 9;\r\n        let check = true;\r\n        if (nsampletypecode === SampleType.CLINICALTYPE && addSubSampleList.length > 1) {\r\n            check = false\r\n        }\r\n        if (addSubSampleList && addSubSampleList.length > 0 && check) {\r\n            const findTransactionStatus = [...new Set(addSubSampleList.map(item => item.ntransactionstatus))];\r\n\r\n            if (findTransactionStatus.length === 1) {\r\n                if (findTransactionStatus.indexOf(transactionStatus.REJECT) === -1\r\n                    && findTransactionStatus.indexOf(transactionStatus.CANCELLED) === -1\r\n                    && findTransactionStatus.indexOf(transactionStatus.RELEASED) === -1) {\r\n                    // if (findTransactionStatus[0] === transactionStatus.PREREGISTER) {\r\n                    //   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\r\n                    //   if (findApprovalVersion.length === 1) {\r\n                    const findSampleSpec = [...new Set(addSubSampleList.map(item => item.nallottedspeccode))];\r\n                    //const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\r\n                    const findSampleSpectemplate = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))];\r\n                    //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                    if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                    {\r\n                        const findComponentReqSpec = addSubSampleList[0].ncomponentrequired;\r\n                        let data = [];\r\n                        const regSubSamplewithoutCombocomponent = [];\r\n                        const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                            && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n                        if (Layout !== undefined) {\r\n                            Layout.map(row => {\r\n                                return row.children.map(column => {\r\n                                    return column.children.map(component => {\r\n                                        return component.hasOwnProperty(\"children\") ?\r\n                                            component.children.map(componentrow => {\r\n                                                if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                                    || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                                    data.push(componentrow)\r\n                                                } else {\r\n                                                    regSubSamplewithoutCombocomponent.push(componentrow)\r\n                                                }\r\n                                                return null;\r\n                                            })\r\n                                            : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                                || component.inputtype === \"frontendsearchfilter\" ? data.push(component) :\r\n                                                regSubSamplewithoutCombocomponent.push(component)\r\n                                    })\r\n                                })\r\n\r\n                            })\r\n                            const regSubSamplecomboComponents = data\r\n                            let regchildColumnList = {};\r\n                            data.map(columnList => {\r\n                                const val = comboChild(data, columnList, regchildColumnList, true);\r\n                                data = val.data;\r\n                                regchildColumnList = val.childColumnList\r\n                                return null;\r\n                            })\r\n                            Map[\"nallottedspeccode\"] = findSampleSpec[0];\r\n                            Map[\"ntemplatemanipulationcode\"] = findSampleSpectemplate[0];\r\n                            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1;\r\n                            Map[\"nneedsubsample\"] = true;\r\n                            Map[\"nstbstudyplancode\"] = addSubSampleList &&\r\n                                addSubSampleList.map(sample => sample.nstbstudyplancode).join(\",\");\r\n                            Map[\"stbTimePoint\"] = addSubSampleList;\r\n                            this.props.addSubTimePoint(this.props.Login.masterData,\r\n                                this.props.Login.userInfo, data, this.state.selectedRecord,\r\n                                regchildColumnList, regSubSamplecomboComponents,\r\n                                regSubSamplewithoutCombocomponent,\r\n                                Map, controlcode, findComponentReqSpec === 3 ? true : false, this.state.specBasedTestPackage)\r\n                        } else {\r\n                            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\" }));\r\n                        }\r\n\r\n                    } else {\r\n                        toast.info(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CANNOTADDSUBSAMPLEASSAMPLEREJECTEDORCANCELLEDORRELEASED\" }));\r\n                }\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: check ? \"IDS_SELECTSAMPLETOSUBSAMPLE\" : \"IDS_SELECTONESAMPLE\" }));\r\n        }\r\n    }\r\n\r\n    getStabilityStudyPlanComboService = (ScreenName, operation,\r\n        primaryKeyField, masterData, userInfo, editId, importData) => {\r\n\r\n        const ndesigntemplatemappingcodefilter = this.props.Login.masterData.DesignTemplateMapping &&\r\n            this.props.Login.masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\r\n        if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\r\n            let data = [];\r\n            const withoutCombocomponent = []\r\n            const Layout = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.jsondata\r\n            if (Layout !== undefined) {\r\n                Layout.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                        || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                        data.push(componentrow)\r\n                                    } else {\r\n                                        withoutCombocomponent.push(componentrow)\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                    || component.inputtype === \"frontendsearchfilter\" ?\r\n                                    data.push(component) : withoutCombocomponent.push(component)\r\n                        })\r\n                    })\r\n\r\n                })\r\n                const comboComponents = data\r\n                let childColumnList = {};\r\n                data.map(columnList => {\r\n                    const val = comboChild(data, columnList, childColumnList, true);\r\n                    data = val.data;\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n                const mapOfFilterRegData = {\r\n                    nsampletypecode: SampleType.STABILITY,\r\n                    sampletypecategorybasedflow: transactionStatus.NO,\r\n                    nneedsubsample: transactionStatus.YES,\r\n                    ntestgroupspecrequired: transactionStatus.YES\r\n\r\n                }\r\n                this.props.getPreviewTemplate(masterData, userInfo, editId,\r\n                    data, this.state.selectedRecord, childColumnList,\r\n                    comboComponents, withoutCombocomponent, true, false,\r\n                    mapOfFilterRegData, false, \"create\", ScreenName || \"\", importData)\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_CONFIGURETEMPLATE\" }));\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\" }));\r\n        }\r\n    }\r\n\r\n    onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectSection = this.state.selectSection || {};\r\n        const selectPackage = [];\r\n        selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\r\n        if (comboData !== null) {\r\n            selectSection[fieldName] = comboData;\r\n            selectSection[\"ssectionname\"] = comboData.label;\r\n            selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode);\r\n            selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].nallottedspeccode;\r\n\r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"ssectionname\"] = comboData.label;\r\n            const specBasedComponent = specBasedComponent1;\r\n            selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode :\r\n                parseInt(this.props.Login.masterData.selectedStbTimePoint &&\r\n                    [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\"));\r\n            // selectedRecord[\"nspecsampletypecode\"] = parseInt(this.props.Login.masterData.selectedStbTimePoint &&\r\n            //     [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\"));\r\n\r\n            this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent,\r\n                this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent,\r\n                this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode,\r\n                this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\r\n            );\r\n        }\r\n        else {\r\n            let availableTestData = [];\r\n            if (selectedRecord[\"nsectioncode\"]) {\r\n                delete selectedRecord[\"nsectioncode\"];\r\n                delete selectedRecord[\"ntestgrouptestcode\"];\r\n\r\n                availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || []\r\n            }\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, availableTest: this.props.Login.AllTest, TestCombined: availableTestData, TestSection: this.props.Login.TestSection || [] }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onComponentChange = (comboData, fieldName, nneedsubsample) => {\r\n        if (comboData !== null) {\r\n            //  if (!nneedsubsample) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            if (fieldName === 'ntzdreceivedate') {\r\n                selectedRecord[\"ntzdreceivedate\"] = comboData;\r\n                this.setState({ selectedRecord })\r\n            } else {\r\n                selectedRecord[fieldName] = comboData;\r\n                selectedRecord[\"Sample Name\"] = comboData.label;\r\n                selectedRecord[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode;\r\n                selectedRecord[\"ntestgrouptestcode\"] = [];\r\n                //selectedRecord[\"nneedsubsample\"] = nneedsubsample;\r\n                selectedRecord[\"nneedsubsample\"] = true;\r\n                this.props.componentTest(selectedRecord, true, this.props.Login.specBasedComponent,\r\n                    this.props.Login.Conponent, this.state.specBasedTestPackage, this.props.Login.specBasedTestPackage ? true : false)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onInputOnSubSampleChange = (event, control, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        }\r\n        else {\r\n            if (control.isnumeric === true\r\n                && control.label === radiotext) {\r\n                selectedRecord[event.target.name] = event.target.value.replace(/[^0-9]/g, '');\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            // selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboSubSampleChange = (comboData, control, customName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            let parentList = []\r\n            let childComboList = []\r\n            let childColumnList = {}\r\n\r\n            let comboName = customName || control.label;\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData ? comboData.value : -1,\r\n                // item: comboData ? comboData.item : \"\",\r\n                item: comboData ? { ...comboData.item, pkey: control.valuemember, nquerybuildertablecode: control.nquerybuildertablecode, \"source\": control.source } : \"\",\r\n                label: comboName,\r\n                nameofdefaultcomp: control.name\r\n            }\r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], pkey: control.valuemember,\r\n                nquerybuildertablecode: control.nquerybuildertablecode, \"source\": control.source\r\n            };\r\n            if (comboData) {\r\n                selectedRecord[comboName] = comboData;\r\n            } else {\r\n                selectedRecord[comboName] = []\r\n            }\r\n            if (control.child && control.child.length > 0) {\r\n                childComboList = getSameRecordFromTwoArrays(this.state.regSubSamplecomboComponents,\r\n                    control.child, \"label\")\r\n                childColumnList = {};\r\n                childComboList.map(columnList => {\r\n                    const val = comboChild(this.state.regSubSamplecomboComponents,\r\n                        columnList, childColumnList, false);\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n\r\n                parentList = getSameRecordFromTwoArrays(this.state.regSubSamplewithoutCombocomponent,\r\n                    control.child, \"label\")\r\n\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectedRecord, this.props.Login.regSubSamplecomboData,\r\n                    childComboList, childColumnList, this.state.regSubSamplewithoutCombocomponent,\r\n                    [...childComboList, ...parentList])\r\n            } else {\r\n                this.setState({ selectedRecord })\r\n            }\r\n        } else {\r\n            let regSubSamplecomboData = this.props.Login.regSubSamplecomboData\r\n            selectedRecord[control.label] = \"\";\r\n\r\n            const inputParam = {\r\n                control, comboComponents: this.state.regSubSamplecomboData,\r\n                withoutCombocomponent: this.state.regSubSamplewithoutCombocomponent, selectedRecord: selectedRecord, comboData: regSubSamplecomboData\r\n            }\r\n            const childParam = childComboClear(inputParam)\r\n            selectedRecord = childParam.selectedRecord\r\n            regSubSamplecomboData = childParam.comboData\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, regSubSamplecomboData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onNumericInputSubSampleChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0) {\r\n            selectedRecord[name] = undefined;\r\n        } else {\r\n            selectedRecord[name] = value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericBlurSubSample = (value, control) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (selectedRecord[control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedRecord[control.label] < parseFloat(control.max))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max)\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedRecord[control.label] > parseFloat(control.min))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateSubSampleChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    //ALPD-3404\r\n    onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectSection = this.state.selectSection || {};\r\n        const selectPackage = [];\r\n        selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\r\n        if (comboData !== null) {\r\n            selectSection[fieldName] = comboData;\r\n            selectSection[\"ssectionname\"] = comboData.label;\r\n            selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode);\r\n            selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan[0].nallottedspeccode;\r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"ssectionname\"] = comboData.label;\r\n            const specBasedComponent = specBasedComponent1;\r\n            selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode :\r\n                parseInt(this.props.Login.masterData.selectedStbTimePoint &&\r\n                    [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\"));\r\n            this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent,\r\n                this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent,\r\n                this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode,\r\n                true\r\n            );\r\n        }\r\n        else {\r\n            let availableTestData = [];\r\n            if (selectedRecord[\"nsectioncode\"]) {\r\n                delete selectedRecord[\"nsectioncode\"];\r\n                delete selectedRecord[\"ntestgrouptestcode\"];\r\n\r\n                availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || []\r\n            }\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, availableTest: this.props.Login.AllTest, TestCombined: availableTestData, TestSection: this.props.Login.TestSection || [] }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        let selectedDetailField = {};\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === 'nexternalordercode') {\r\n            selectedDetailField = comboData && comboData.item\r\n        }\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord, selectedDetailField });\r\n    }\r\n\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    };\r\n\r\n    addMoreTest = (inputParam, ncontrolCode) => {\r\n        let sampleList = [];\r\n        const skip = this.state.skip;\r\n        const take = this.state.take;\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n\r\n            ///sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.StabilityStudyPlanGet.slice(skip, skip + take), \"nstbstudyplancode\");\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.StabilityStudyPlanGet;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n        } else {\r\n            sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\r\n        }\r\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedStabilityStudyPlan, \"nstbstudyplancode\");\r\n\r\n        if (addSubSampleList && addSubSampleList.length > 0) {\r\n\r\n            inputParam[\"sampleList\"] = sampleList;\r\n            this.props.addMoreTests(inputParam, ncontrolCode);\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDTEST\" }));\r\n        }\r\n    }\r\n\r\n    sideNavDetail = (screenName//, sampleGridSkip\r\n    ) => {\r\n        let testList = this.props.Login.masterData.StbTimePointTestGet || [];\r\n        let { testskip, testtake } = this.state\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedStbTimePointTest, \"nstbtimepointtestcode\");\r\n        let nstbtimepointtestcode = this.props.Login.masterData.selectedStbTimePointTest ? this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\";\r\n        return (\r\n            screenName == \"IDS_TIMEPOINTRESULTS\"\r\n                //&& this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE \r\n                ? <RegistrationResultTab\r\n                    userInfo={this.props.Login.userInfo}\r\n                    genericLabel={this.props.Login.genericLabel}\r\n                    masterData={this.props.Login.masterData}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    dataState={this.state.resultDataState}\r\n                    dataStateChange={this.testDataStateChange}\r\n                    screenName=\"IDS_TIMEPOINTRESULTS\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                />\r\n                :\r\n                screenName == \"IDS_ATTACHMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName == \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                        : screenName == \"IDS_HISTORY\" ?\r\n                            <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TIMEPOINTHISTORY\"} tabDetail={this.historyTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                            : screenName == \"IDS_STABILITYDETAILS\" ?\r\n                                this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length === 1 ?\r\n                                    <SampleInfoView\r\n                                        data={(this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0) ?\r\n                                            this.props.Login.masterData.selectedStabilityStudyPlan[this.props.Login.masterData.selectedStabilityStudyPlan.length - 1] : {}}\r\n                                        SingleItem={this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan ?\r\n                                            this.state.SingleItem : []}\r\n                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        viewFile={this.viewFile}\r\n\r\n                                    />\r\n                                    :\r\n                                    <SampleGridTab\r\n                                        userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                        GridData={this.props.Login.masterData.selectedStabilityStudyPlan || []}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        //dataState={sampleGridSkip === 0 ? {...this.state.sampleGridDataState, skip:0} : this.state.sampleGridDataState}\r\n                                        dataState={this.state.sampleGridDataState}\r\n                                        dataStateChange={this.sampleInfoDataStateChange}\r\n                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                        primaryKeyField={\"nstbstudyplancode\"}\r\n                                        expandField=\"expanded\"\r\n                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                        viewFile={this.viewFile}\r\n                                    //jsonField={\"jsondata\"}\r\n                                    />\r\n                                :\r\n                                screenName == \"IDS_OUTSOURCEDETAILS\" ?\r\n                                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_OUTSOURCE\"} tabDetail={this.outSourceTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                                    : \"\"\r\n        )\r\n    }\r\n\r\n    historyTabDetail = () => {\r\n        const historyTabMap = new Map();\r\n        let historyExtractedColumnList = [];\r\n        historyExtractedColumnList.push({ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" });\r\n        historyExtractedColumnList.push(\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"stransactiondate\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" }\r\n        );\r\n        historyTabMap.set(\"IDS_TIMEPOINTHISTORY\",\r\n         <DataGrid\r\n            primaryKeyField={\"nreghistorycode\"}\r\n            data={this.props.Login.masterData.RegistrationSampleHistory}\r\n            dataResult={process(this.props.Login.masterData.RegistrationSampleHistory || [], this.state.registrationTestHistoryDataState)}\r\n            dataState={this.state.registrationTestHistoryDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            extractedColumnList={historyExtractedColumnList}\r\n            inputParam={this.props.Login.inputParam}\r\n            userInfo={this.props.Login.userInfo}\r\n            isRefreshRequired={false}\r\n            pageable={true}\r\n            scrollable={'scrollable'}\r\n            gridHeight={'600px'}\r\n            isActionRequired={false}\r\n            isToolBarRequired={false}\r\n            selectedId={false}\r\n        />\r\n        )\r\n        return historyTabMap;\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TIMEPOINTRESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    testDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TIMEPOINTHISTORY\":\r\n                this.setState({\r\n                    registrationTestHistoryDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name === \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let loadPreregister = this.props.Login.loadPreregister;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let parentPopUpSize = this.props.Login.pare\r\n        let screenName = this.props.Login.screenName;\r\n        let loadPrinter = this.props.Login.loadPrinter;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let Component = this.props.Login.Component;\r\n        let subSampleDataGridList = this.props.Login.subSampleDataGridList;\r\n        let TestCombined = this.props.Login.TestCombined;\r\n        let selectedPrinterData = this.props.Login.selectedPrinterData;\r\n        let multiFilterLoad = this.props.Login.multiFilterLoad;\r\n\r\n        let outsourcetest = this.props.Login.outsourcetest;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false\r\n                loadPreregister = false;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, openModal, openChildModal, loadPreregister }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n                selectedRecord['esignreason'] = '';\r\n\r\n                if (loadPreregister) {\r\n                    parentPopUpSize = 'xl';\r\n                    openPortal = true;\r\n                    openModal = false;\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign, parentPopUpSize, openPortal, openModal, selectedRecord,\r\n                        outsourcetest\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            loadPrinter = false;\r\n            loadPreregister = false;\r\n            selectedRecord = {};\r\n            openPortal = false;\r\n            subSampleDataGridList = [];\r\n            selectedPrinterData = {};\r\n            multiFilterLoad = false;\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModal, loadPreregister, selectedRecord,\r\n                    screenName, insertSourcePreregno: undefined, multiFilterLoad,\r\n                    loadPrinter, openPortal,\r\n                    Component, subSampleDataGridList, selectedPrinterData, outsourcetest\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    closeChildModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let loadRegSubSample = this.props.Login.loadRegSubSample;\r\n        let loadFile = this.props.Login.loadFile;\r\n        let showSaveContinue = this.props.Login.showSaveContinue;\r\n        let screenName = this.props.Login.screenName;\r\n        let loadChildTest = this.props.Login.loadChildTest;\r\n        let loadAdhocTest = this.props.Login.loadAdhocTest;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let TestCombined = [];\r\n        let TestPackage = [];\r\n        let availableTest = [];\r\n        let Test = this.props.Login.Test || [];\r\n        let selectedMaster = this.props.Login.selectedMaster;\r\n        let selectedControl = this.props.Login.selectedControl;\r\n        let masterextractedColumnList = this.props.Login.masterextractedColumnList;\r\n        let masterfieldList = this.props.Login.masterfieldList;\r\n        let masterdataList = this.props.Login.masterfieldList;\r\n        let mastercomboComponents = this.props.Login.masterfieldList;\r\n        let masterwithoutCombocomponent = this.props.Login.masterfieldList;\r\n        let masterComboColumnFiled = this.props.Login.masterComboColumnFiled;\r\n        let masterOperation = this.props.Login.masterOperation\r\n        let masterEditObject = this.props.Login.masterEditObject\r\n        let masterDesign = this.props.Login.masterDesign;\r\n        let addMaster = this.props.Login.addMaster\r\n        let masterIndex = this.props.Login.masterIndex\r\n        let availableAdhocTest = [];\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n            selectedRecord['esignreason'] = '';\r\n        }\r\n\r\n        if (addMaster) {\r\n            if (masterIndex !== 0) {\r\n                screenName = selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode]\r\n                selectedMaster = removeIndex(selectedMaster, masterIndex)\r\n                selectedControl = removeIndex(selectedControl, masterIndex)\r\n                masterextractedColumnList = masterextractedColumnList && removeIndex(masterextractedColumnList, masterIndex)\r\n                masterfieldList = masterfieldList && removeIndex(masterfieldList, masterIndex)\r\n                masterdataList = masterdataList && removeIndex(masterdataList, masterIndex)\r\n                mastercomboComponents = mastercomboComponents && removeIndex(mastercomboComponents, masterIndex)\r\n                masterComboColumnFiled = masterComboColumnFiled && removeIndex(masterComboColumnFiled, masterIndex)\r\n                masterwithoutCombocomponent = masterwithoutCombocomponent && removeIndex(masterwithoutCombocomponent, masterIndex)\r\n                masterDesign = masterDesign && removeIndex(masterDesign, masterIndex)\r\n                masterOperation = masterOperation && removeIndex(masterOperation, masterIndex)\r\n                masterEditObject = masterEditObject && removeIndex(masterEditObject, masterIndex)\r\n                masterIndex = masterIndex - 1;\r\n            } else {\r\n                selectedMaster = []\r\n                selectedControl = []\r\n                masterextractedColumnList = []\r\n                masterfieldList = []\r\n                addMaster = false\r\n                masterdataList = []\r\n                mastercomboComponents = []\r\n                masterwithoutCombocomponent = []\r\n                masterComboColumnFiled = []\r\n                masterDesign = []\r\n                masterOperation = []\r\n                masterEditObject = []\r\n                masterIndex = undefined\r\n                screenName = this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        else if (this.props.Login.loadFile) {\r\n            loadFile = false;\r\n            screenName = this.props.Login.PopUpLabel\r\n        } else if (this.props.Login.loadChildTest) {\r\n            loadChildTest = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            TestCombined = [];\r\n            TestPackage = [];\r\n            availableTest = [];\r\n            Test = [];\r\n\r\n        }\r\n        else if (this.props.Login.loadRegSubSample) {\r\n            loadRegSubSample = false;\r\n            openModal = false;\r\n            selectedRecord = {}\r\n            TestCombined = [];\r\n            TestPackage = [];\r\n            availableTest = [];\r\n            Test = [];\r\n\r\n\r\n\r\n        }\r\n        else if (this.props.Login.loadAdhocTest) {\r\n            if (this.props.Login.loadEsign) {\r\n                loadEsign = false;\r\n            }\r\n            else {\r\n\r\n                loadAdhocTest = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                availableAdhocTest = [];\r\n            }\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadRegSubSample, screenName, showSaveContinue,\r\n                loadFile, loadChildTest, loadAdhocTest,\r\n                openModal,\r\n                selectedRecord, TestCombined,\r\n                TestPackage, availableTest, Test,\r\n                selectedMaster, selectedControl,\r\n                masterextractedColumnList, masterfieldList\r\n                , addMaster, masterIndex, masterdataList,\r\n                mastercomboComponents,\r\n                masterwithoutCombocomponent, masterOperation,\r\n                masterEditObject,\r\n                masterComboColumnFiled, masterDesign, loadEsign\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n        onTabChange = (tabProps) => {\r\n            const activeTestTab = tabProps.screenName;\r\n            const tabseqno = tabProps.tabSequence;\r\n            if (tabseqno === SideBarSeqno.TEST) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedStbTimePointTest: this.props.Login.masterData.selectedStbTimePointTest,\r\n                   nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint ?\r\n                   String(this.props.Login.masterData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\")) : \"-1\",\r\n                    nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan ?\r\n                        this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                    activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId,\r\n                    registrationTestHistoryDataState: this.state.registrationTestHistoryDataState\r\n                }\r\n                this.props.getTestDetailFromRegistration(inputData, true)\r\n                // } \r\n                // else {\r\n                //     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n                // }\r\n            }\r\n            else if (tabseqno === SideBarSeqno.SUBSAMPLE) {\r\n                if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                    let inputData = {\r\n                        masterData: this.props.Login.masterData,\r\n                        selectedStbTimePoint: this.props.Login.masterData.selectedStbTimePoint,\r\n                        nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint ? this.props.Login.masterData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\") : \"-1\",\r\n                        userinfo: this.props.Login.userInfo,\r\n                        screenName: activeTestTab,\r\n                        activeSubSampleTab: activeTestTab,\r\n                        subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                        subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                        nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan &&\r\n                            this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\"),\r\n                        activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                    }\r\n                    this.props.getSubSampleChildTabDetail(inputData)\r\n                }\r\n            }\r\n            else {\r\n    \r\n                if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                    let inputData = {\r\n                        masterData: this.props.Login.masterData,\r\n                        selectedStabilityStudyPlan: this.props.Login.masterData.selectedStabilityStudyPlan,\r\n                        nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan ? this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\") : \"-1\",\r\n                        userinfo: this.props.Login.userInfo,\r\n                        screenName: activeTestTab,\r\n                        activeSampleTab: activeTestTab,\r\n                        OrderCodeData: this.props.Login.masterData.selectedStabilityStudyPlan &&\r\n                            this.props.Login.masterData.selectedStabilityStudyPlan.map(item => item.hasOwnProperty(\"OrderCodeData\") ? item.OrderCodeData : -1).join(\",\"),\r\n                        activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                    }\r\n                    this.props.getSampleChildTabDetail(inputData)\r\n                }\r\n            }\r\n        }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.columnList !== previousProps.Login.columnList) {\r\n\r\n            this.setState({\r\n                columnList: this.props.Login.columnList,\r\n                childColumnList: this.props.Login.childColumnList,\r\n                withoutCombocomponent: this.props.Login.withoutCombocomponent,\r\n                comboComponents: this.props.Login.comboComponents\r\n            });\r\n\r\n        }\r\n        if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\r\n            this.setState({\r\n                regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\r\n                regchildSubSampleColumnList: this.props.Login.regchildSubSampleColumnList,\r\n                regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\r\n                regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\r\n            });\r\n\r\n        }\r\n        if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\r\n            this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n        if (this.props.Login.selectedDetailField !== previousProps.Login.selectedDetailField) {\r\n            this.setState({ selectedDetailField: this.props.Login.selectedDetailField });\r\n        }\r\n        if (this.props.Login.selectedMaster !== previousProps.Login.selectedMaster) {\r\n            this.setState({ selectedMaster: this.props.Login.selectedMaster });\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        else if (this.props.Login.selectedPrinterData !== previousProps.Login.selectedPrinterData) {\r\n            this.setState({ selectedPrinterData: this.props.Login.selectedPrinterData });\r\n        }\r\n        else if (this.props.Login.loadFile !== previousProps.Login.loadFile && (this.props.Login.loadFile === false)) {\r\n            this.setState({ selectedFile: undefined })\r\n        }\r\n        else if (this.props.Login.selectedFilter !== previousProps.Login.selectedFilter) {\r\n            this.setState({ selectedFilter: this.props.Login.selectedFilter });\r\n        }\r\n        if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n            this.setState({ popUptestDataState: this.props.Login.popUptestDataState });\r\n        }\r\n        if (this.props.Login.transactionValidation !== this.props.Login.masterData.TransactionValidation) {\r\n            this.props.Login.transactionValidation = this.props.Login.masterData.TransactionValidation\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const specBasedTestPackage = this.props.Login.userRoleControlRights &&\r\n                this.props.Login.userRoleControlRights[formCode.TESTPACKAGE] !== undefined ? true : false\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            const deleteTestId = controlMap.has(\"DeleteTest\") ? controlMap.get(\"DeleteTest\").ncontrolcode : -1;\r\n            const studyPlanId = controlMap.has(\"AddStabilityStudyPlan\") ? controlMap.get(\"AddStabilityStudyPlan\").ncontrolcode : -1;\r\n            const editstudyPlanId = controlMap.has(\"EditStabilityStudyPlan\") ? controlMap.get(\"EditStabilityStudyPlan\").ncontrolcode : -1;\r\n            const deleteStudyPlanId = controlMap.has(\"DeleteStabilityStudyPlan\") ? controlMap.get(\"DeleteStabilityStudyPlan\").ncontrolcode : -1;\r\n            const addTestId = controlMap.has(\"AddTest\") ? controlMap.get(\"AddTest\").ncontrolcode : -1;\r\n\r\n            const approevStudyPlanId = controlMap.has(\"ApproveStabilityStudyPlan\") ? controlMap.get(\"ApproveStabilityStudyPlan\").ncontrolcode : -1;\r\n\r\n            const addTimePointId = controlMap.has(\"AddTimePoint\") ? controlMap.get(\"AddTimePoint\").ncontrolcode : -1;\r\n            const editTimePointId = controlMap.has(\"EditTimePoint\") ? controlMap.get(\"EditTimePoint\").ncontrolcode : -1;\r\n            const deleteTimePointId = controlMap.has(\"DeleteTimePoint\") ? controlMap.get(\"DeleteTimePoint\").ncontrolcode : -1;\r\n\r\n\r\n            const exportTemplateId = controlMap.has(\"Export Template\") ? controlMap.get(\"Export Template\").ncontrolcode : -1;\r\n            const importTemplateId = controlMap.has(\"Import Template\") ? controlMap.get(\"Import Template\").ncontrolcode : -1;\r\n\r\n\r\n            this.setState({\r\n                userRoleControlRights, controlMap, deleteTestId, approevStudyPlanId,\r\n                studyPlanId, editstudyPlanId, deleteStudyPlanId, addTestId, addTimePointId, editTimePointId, deleteTimePointId, specBasedTestPackage\r\n                , exportTemplateId, importTemplateId\r\n            });\r\n\r\n        }\r\n        let activeTabIndex = this.state.activeTabIndex || undefined;\r\n        let activeTabId = this.state.activeTabId || undefined;\r\n\r\n\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex || this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n\r\n            let { skip, take, testskip, testtake, subsampleskip, subsampletake, testCommentDataState,\r\n                resultDataState, sampleGridDataState, popUptestDataState, DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicGridMoreField, SingleItem, testMoreField, testListColumns,\r\n                SubSampleDynamicGridItem, SubSampleDynamicGridMoreField, SubSampleSingleItem, sampleSearchField, subsampleSearchField,\r\n                testSearchField, testAttachmentDataState, registrationTestHistoryDataState, sampleCommentDataState,\r\n                sampledateconstraints, subsampledateconstraints, activeTabIndex,\r\n                activeTabId, sampleCombinationUnique, subsampleCombinationUnique,\r\n                addedOrderSampleList, sampleexportfields, subsampleexportfields, samplefilteritem, sampledisplayfields } = this.state\r\n\r\n            addedOrderSampleList = [];\r\n\r\n            if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n                activeTabIndex = this.props.Login.activeTabIndex;\r\n                activeTabId = this.props.Login.activeTabId;\r\n            }\r\n\r\n            if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n                DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n                DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n                DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n                DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem.filter(x => x[2] !== 'sarno') : [];\r\n\r\n                DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n                SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields.filter(x => !['sarno', 'dregdate'].includes(x[2]))  : [];\r\n\r\n                SubSampleDynamicGridItem = dynamicColumn.subsamplegriditem ? dynamicColumn.subsamplegriditem : [];\r\n                SubSampleDynamicGridMoreField = dynamicColumn.subsamplegridmoreitem ? dynamicColumn.subsamplegridmoreitem : [];\r\n                SubSampleSingleItem = dynamicColumn.subsampledisplayfields ? dynamicColumn.subsampledisplayfields : [];\r\n                testMoreField = dynamicColumn.testListFields && dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n\r\n                testListColumns = dynamicColumn.testListFields && dynamicColumn.testListFields.testlistitem \r\n                ? dynamicColumn.testListFields.testlistitem.filter(x => !['sarno', 'AnalyserName','ssamplearno'].includes(x[2]))  : [];\r\n                sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields.filter(x => !['dregdate','sarno','sspecname'].includes(x))   : [];\r\n\r\n                subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields.filter(x => !['sarno','ssamplearno'].includes(x)) : [];\r\n                testSearchField = dynamicColumn.testListFields && dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n                sampledateconstraints = dynamicColumn.sampledateconstraints || [];\r\n                subsampledateconstraints = dynamicColumn.subsampledateconstraints || [];\r\n                sampleCombinationUnique = dynamicColumn.samplecombinationunique || [];\r\n                subsampleCombinationUnique = dynamicColumn.subsamplecombinationunique || [];\r\n                sampleexportfields = dynamicColumn.sampleExportFields || [];\r\n                subsampleexportfields = dynamicColumn.subSampleExportFields || [];\r\n                samplefilteritem = dynamicColumn.samplefilteritem || [];\r\n                sampledisplayfields =dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields.filter(x => !['dregdate','sarno'].includes(x[2]))  : [];\r\n\r\n                // specBasedComponent = true;\r\n\r\n                this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample &&\r\n                    this.props.Login.masterData.StabilityStudyPlanGet.length > 0 &&\r\n                    (this.props.Login.masterData.StabilityStudyPlanGet[0].ncomponentrequired === transactionStatus.YES) &&\r\n                    DynamicSubSampleColumns.push({\r\n                        1: { 'en-US': 'Specimen', 'ru-RU': 'Образец', 'tg-TG': 'Намуна' },\r\n                        2: \"scomponentname\"\r\n                    }\r\n\r\n                    );\r\n                if (this.props.Login.masterData.RealSampleTypeValue &&\r\n                    this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n                    DynamicSubSampleColumns.push(\r\n                        {\r\n                            1: { 'en-US': 'Order Type', 'ru-RU': 'Тип заказа', 'tg-TG': 'Навъи фармоиш' },\r\n                            2: \"sordertypename\"\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            let showSample = this.props.Login.showSample === this.state.showTest || this.state.showSample\r\n            let showTest = showSample ? false : true\r\n            let stateSampleType = this.state.stateSampleType\r\n            let stateRegistrationType = this.state.stateRegistrationType\r\n            let stateRegistrationSubType = this.state.stateRegistrationSubType\r\n            let stateFilterStatus = this.state.stateFilterStatus\r\n            let stateDynamicDesign = this.state.stateDynamicDesign\r\n            let stateApprovalConfigVersion = this.state.stateApprovalConfigVersion\r\n\r\n            if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\r\n\r\n                const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                    \"ssampletypename\", \"nsorter\", \"ascending\", false);\r\n                stateSampleType = sampleTypeMap.get(\"OptionList\")\r\n\r\n            }\r\n            if (this.props.Login.masterData.RegistrationType !== previousProps.Login.masterData.RegistrationType) {\r\n\r\n                const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                    \"sregtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateRegistrationType = registrationTypeMap.get(\"OptionList\")\r\n            }\r\n            if (this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n                const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateRegistrationSubType = registrationSubTypeMap.get(\"OptionList\")\r\n\r\n            }\r\n            if (this.props.Login.masterData.FilterStatus !== previousProps.Login.masterData.FilterStatus) {\r\n\r\n\r\n                const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\",\r\n                    \"stransdisplaystatus\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateFilterStatus = filterStatusMap.get(\"OptionList\")\r\n            }\r\n            if (this.props.Login.masterData.ApprovalConfigVersion !== previousProps.Login.masterData.ApprovalConfigVersion) {\r\n                const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napproveconfversioncode\",\r\n                    \"sversionname\", undefined, undefined, false);\r\n\r\n                stateApprovalConfigVersion = DesignTemplateMappingMap.get(\"OptionList\")\r\n            }\r\n            if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n\r\n                const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                    \"sregtemplatename\", undefined, undefined, false);\r\n\r\n                stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n            }\r\n            // const stateSampleType = sampleTypeMap.get(\"OptionList\");\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.registrationTestHistoryDataState && this.props.Login.registrationTestHistoryDataState !== previousProps.Login.registrationTestHistoryDataState) {\r\n                registrationTestHistoryDataState = this.props.Login.registrationTestHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\r\n                sampleGridDataState = this.props.Login.sampleGridDataState;\r\n            }\r\n            if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n                popUptestDataState = this.props.Login.popUptestDataState;\r\n            }\r\n            const testGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue &&\r\n                    this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue &&\r\n                    this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1,\r\n                nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan &&\r\n                    this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n            }\r\n            const testChildGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan && this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\r\n                nstbtimepointcode: this.props.Login.masterData.selectedStbTimePoint &&\r\n                    this.props.Login.masterData.selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\"),\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                // resultDataState: resultDataState,\r\n                // testCommentDataState: testCommentDataState,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n\r\n            }\r\n            const subSampleGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\r\n            }\r\n            const filterSampleParam = {\r\n                inputListName: \"StabilityStudyPlanGet\",\r\n                selectedObject: \"selectedStabilityStudyPlan\",\r\n                primaryKeyField: \"nstbstudyplancode\",\r\n                fetchUrl: \"stabilitystudyplan/getRegistrationSubSample\",\r\n                isMultiSort: true,\r\n                multiSortData: [{ pkey: 'nstbtimepointcode', list: 'StbTimePointGet' },\r\n                { pkey: 'nstbtimepointtestcode', list: 'StbTimePointTestGet' }],\r\n                skip: 0,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: 0,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n                fecthInputObject: {\r\n                    masterData: this.props.Login.masterData,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: sampleSearchField,\r\n                changeList: [\r\n                    \"StbTimePointGet\", \"StbTimePointTestGet\",\r\n                    \"selectedStabilityStudyPlan\", \"selectedStbTimePoint\",\r\n                    \"selectedStbTimePointTest\"\r\n                ]\r\n            };\r\n\r\n            const filterSubSampleParam = {\r\n                inputListName: \"StbTimePointGet\",\r\n                selectedObject: \"selectedStbTimePoint\",\r\n                primaryKeyField: \"nstbtimepointcode\",\r\n                fetchUrl: \"stabilitystudyplan/getRegistrationTest\",\r\n                skip: this.state.skip,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: 0,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n                isMultiSort: true,\r\n                multiSortData: [{ pkey: 'nstbtimepointtestcode', list: 'StbTimePointTestGet' }],\r\n                fecthInputObject: {\r\n                    masterData: this.props.Login.masterData,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    nstbstudyplancode: this.props.Login.masterData.selectedStabilityStudyPlan &&\r\n                        this.props.Login.masterData.selectedStabilityStudyPlan.length > 0 ?\r\n                        this.props.Login.masterData.selectedStabilityStudyPlan.map(x => x.nstbstudyplancode).join(\",\") : \"-1\",\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: subsampleSearchField,\r\n                changeList: [\r\n                    \"StbTimePointTestGet\", \"selectedStbTimePoint\", \"selectedStbTimePointTest\"\r\n                ]\r\n            };\r\n\r\n            const filterTestParam = {\r\n                inputListName: \"StbTimePointTestGet\",\r\n                selectedObject: \"selectedStbTimePointTest\",\r\n                primaryKeyField: \"nstbtimepointtestcode\",\r\n                //fetchUrl: this.getActiveTestURL(),\r\n                skip: this.state.skip,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: this.state.subsampleskip,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n\r\n                fecthInputObject: {\r\n                    nstbtimepointtestcode: this.props.Login.masterData && this.props.Login.masterData.selectedStbTimePointTest && this.props.Login.masterData.selectedStbTimePointTest ? this.props.Login.masterData.selectedStbTimePointTest.map(test => test.nstbtimepointtestcode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: ['sarno', 'ssectionname', 'stestsynonym', 'stransdisplaystatus'],\r\n                isService: true\r\n            }\r\n            const editRegParam = {\r\n                nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData\r\n                    && this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue &&\r\n                    this.props.Login.masterData.RegSubTypeValue.nneedsubsample, //=== true\r\n                //? transactionStatus.YES:transactionStatus.NO :transactionStatus.NO,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                // checkBoxOperation: 3\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT\r\n\r\n            }\r\n\r\n            const editSubSampleRegParam = {\r\n                nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData\r\n                    && this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            }\r\n\r\n            const addTestParam = {\r\n                selectedStabilityStudyPlan: this.props.Login.masterData.selectedStabilityStudyPlan,\r\n                selectedStbTimePoint: this.props.Login.masterData.selectedStbTimePoint,\r\n                // skip: skip, take: (skip + take),\r\n                userinfo: this.props.Login.userInfo,\r\n                sampleList: this.props.Login.masterData.StabilityStudyPlanGet,\r\n                subsampleList: this.props.Login.masterData.StbTimePointGet,\r\n                snspecsampletypecode: this.props.Login.masterData.selectedStbTimePoint &&\r\n                    [...new Set(this.props.Login.masterData.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\")\r\n            };\r\n\r\n            const breadCrumbobj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo)\r\n            this.breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": breadCrumbobj.breadCrumbFrom\r\n                }, {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": breadCrumbobj.breadCrumbto\r\n                },\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.RealRegTypeValue\r\n                        && this.props.Login.masterData.RealRegTypeValue.sregtypename\r\n                }, {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.RealRegSubTypeValue\r\n                        && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                },\r\n                {\r\n                    \"label\": \"IDS_SAMPLESTATUS\",\r\n                    \"value\": this.props.Login.masterData.RealFilterStatusValue\r\n                        && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\r\n                }\r\n            ]\r\n\r\n\r\n            if (this.props.Login.masterData.approvedTreeData !== previousProps.Login.masterData.approvedTreeData) {\r\n                if (this.props.Login.masterData.approvedTreeData && this.props.Login.masterData.approvedTreeData !== undefined) {\r\n                    this.setState({\r\n                        treeData: this.props.Login.masterData.approvedTreeData\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                SingleItem, testMoreField,\r\n                DynamicGridItem, DynamicGridMoreField,\r\n                testListColumns, stateSampleType,\r\n                stateRegistrationType,\r\n                stateRegistrationSubType,\r\n                stateFilterStatus,\r\n                stateDynamicDesign,\r\n                stateApprovalConfigVersion,\r\n                popUptestDataState,\r\n                showSample, showTest, skip, take, testskip,\r\n                subsampleskip, subsampletake,\r\n                testtake, testCommentDataState, testAttachmentDataState, registrationTestHistoryDataState,\r\n                resultDataState, sampleGridDataState,\r\n                SubSampleDynamicGridItem, SubSampleDynamicGridMoreField,\r\n                SubSampleSingleItem,\r\n                testGetParam, testChildGetParam, subSampleGetParam,\r\n                filterSampleParam, filterTestParam,\r\n                editRegParam, editSubSampleRegParam,\r\n                addTestParam, sampleSearchField, subsampleSearchField,\r\n                testSearchField, filterSubSampleParam, sampledateconstraints, subsampledateconstraints,\r\n                activeTabIndex, activeTabId, sampleCombinationUnique, subsampleCombinationUnique, addedOrderSampleList,\r\n                sampleexportfields, subsampleexportfields, samplefilteritem, sampledisplayfields\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    onSaveChildTestClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        //console.log(\"test1:\", this.props.Login.masterData);\r\n\r\n        let sampleList = [];\r\n        const skip = this.state.skip;\r\n        const take = this.state.take;\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.StabilityStudyPlanGet;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n        } else {\r\n            sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(skip, skip + take);\r\n        }\r\n        const selectedStabilityStudyPlan = getSameRecordFromTwoArrays(masterData.selectedStabilityStudyPlan, sampleList, \"nstbstudyplancode\");\r\n\r\n\r\n        let subsampleList = [];\r\n        const subsampleskip = this.state.subsampleskip;\r\n        const subsampletake = this.state.subsampletake;\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample\r\n                : this.props.Login.masterData.StbTimePointGet;\r\n\r\n            subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\r\n        } else {\r\n            subsampleList = this.props.Login.masterData.StbTimePointGet && this.props.Login.masterData.StbTimePointGet.slice(subsampleskip, subsampleskip + subsampletake);\r\n        }\r\n        const selectedStbTimePoint = getSameRecordFromTwoArrays(masterData.selectedStbTimePoint, subsampleList, \"nstbstudyplancode\");\r\n\r\n\r\n        //const selectedStbTimePoint = getSameRecordFromTwoArrays(masterData.selectedStbTimePoint, masterData.StbTimePointGet.slice(this.state.subsampleskip, (this.state.subsampleskip + this.state.subsampletake)), \"nstbstudyplancode\");\r\n        //const selectedStabilityStudyPlan = getSameRecordFromTwoArrays(masterData.selectedStabilityStudyPlan, masterData.StabilityStudyPlanGet.slice(this.state.skip, (this.state.skip + this.state.take)), \"nstbstudyplancode\");\r\n        ////  selectedStbTimePoint =masterData.selectedStbTimePoint.slice(this.state.skip, (this.state.skip + this.state.take));\r\n\r\n\r\n        const nstbtimepointcode = selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\");\r\n        let data = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate,\r\n            this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n\r\n        // if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n\r\n        //     const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\r\n        //     const cTWithoutComboData = []\r\n        //     let cTData = [];\r\n\r\n\r\n        //     Layout.map(row => {\r\n        //         return row.children.map(column => {\r\n        //             return column.children.map(component => {\r\n        //                 return component.hasOwnProperty(\"children\") ?\r\n        //                     component.children.map(componentrow => {\r\n        //                         if (componentrow.inputtype === \"combo\") {\r\n        //                             cTData.push(componentrow)\r\n        //                         } else {\r\n        //                             cTWithoutComboData.push(componentrow)\r\n        //                         }\r\n        //                         return null;\r\n        //                     })\r\n        //                     : component.inputtype === \"combo\" ?\r\n        //                         cTData.push(component) : cTWithoutComboData.push(component)\r\n        //             })\r\n        //         })\r\n\r\n        //     })\r\n        //     selectedStabilityStudyPlan.map(item => {\r\n        //         let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\")\r\n        //         let gender = cTData.filter(x => x.name === \"Gender\")\r\n        //         const ageCal = parseInt(ageCalculate(item[dob[0].label], true));\r\n        //         data.push({ \"nstbstudyplancode\": parseInt(item.nstbstudyplancode), \"nage\": ageCal, \"ngendercode\": item.ngendercode })\r\n        //     }\r\n        //     )\r\n\r\n        // }\r\n        const inputData = {\r\n            //nneedjoballocation: masterData.RealRegSubTypeValue.nneedjoballocation ? masterData.RealRegSubTypeValue.nneedjoballocation : false,\r\n            //nneedmyjob: masterData.RealRegSubTypeValue.nneedmyjob ? masterData.RealRegSubTypeValue.nneedmyjob : false,\r\n            TestGroupTest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\r\n            StbTimePoint: selectedStbTimePoint.map(x => x.nstbtimepointcode),\r\n            nstbtimepointcode: nstbtimepointcode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nregtypecode: masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode || -1,\r\n            nregsubtypecode: masterData.RealRegSubTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode || -1,\r\n            nsampletypecode: masterData.RealSampleTypeValue && masterData.RealSampleTypeValue.nsampletypecode || -1,\r\n            ntype: 3,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            nstbstudyplancode: selectedStabilityStudyPlan &&\r\n                selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\"),\r\n            // nstbtimepointcode: selectedStbTimePoint &&\r\n            // selectedStbTimePoint.map(sample => sample.nstbtimepointcode).join(\",\"),\r\n            fromDate: obj.fromDate,\r\n            toDate: obj.toDate,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData\r\n                && this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow || -1,\r\n            nneedsubsample: true,\r\n            //  checkBoxOperation: 3,\r\n            //checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1,\r\n            // activeTestTab: this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\",\r\n            // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            // activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            ageData: data,\r\n            nsampletypecode: 9,\r\n            ntestpackagecode: this.state.selectedRecord['ntestpackagecode'] && this.state.selectedRecord['ntestpackagecode'],\r\n            skipmethodvalidity: false,\r\n            loadAdhocTest: false\r\n        }\r\n\r\n\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"stabilitystudyplan\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Test\",\r\n            responseKeyList: [\r\n                { \"responseKey\": \"selectedStabilityStudyPlan\", \"masterDataKey\": \"StabilityStudyPlanGet\", \"primaryKey\": \"nstbstudyplancode\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedStbTimePoint\", \"masterDataKey\": \"StbTimePointGet\", \"primaryKey\": \"nstbtimepointcode\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedStbTimePointTest\", \"masterDataKey\": \"StbTimePointTestGet\", \"primaryKey\": \"nstbtimepointtestcode\", \"dataAction\": \"add\" }],\r\n            saveType, formRef,\r\n            postParamList: this.postParamList,\r\n\r\n        }\r\n        if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.createRegTest(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onSaveTimePointClick = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        if (operation === 'create') {\r\n            let objSubSample = this.state.selectedRecord;\r\n            const userInfo = this.props.Login.userInfo;\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                    : sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode');\r\n\r\n                sampleList = list ? list.slice(this.state.skip, this.state.skip + this.state.take) : [];\r\n            } else {\r\n                sampleList = this.props.Login.masterData.StabilityStudyPlanGet && sortDataForDate(this.props.Login.masterData.StabilityStudyPlanGet, 'dtransactiondate', 'nstbstudyplancode').slice(this.state.skip, this.state.skip + this.state.take);\r\n            }\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.selectedStabilityStudyPlan, sampleList, 'nstbstudyplancode')\r\n\r\n            const findSampleAlloSpec = [...new Set(sampleList.map(item => item.nallottedspeccode))];\r\n\r\n            let selectedStbTimePointTestData = objSubSample[\"ntestgrouptestcode\"];\r\n            const selectedStbTimePointTestArray = [];\r\n            selectedStbTimePointTestData && selectedStbTimePointTestData.map((item) => {\r\n                return selectedStbTimePointTestArray.push(item.item);\r\n            });\r\n            const map = {}\r\n            const param = getRegistrationSubSample(\r\n                objSubSample,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata,\r\n                this.props.Login.userInfo, this.props.Login.defaulttimezone, false,\r\n                this.props.Login.specBasedComponent, operation);\r\n\r\n            map[\"StbTimePoint\"] = param.sampleRegistration\r\n\r\n            map[\"subsampleDateList\"] = param.dateList\r\n            map[\"StbTimePoint\"][\"nallottedspeccode\"] = findSampleAlloSpec[0] ? findSampleAlloSpec[0] : -1;\r\n            map[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\r\n            map['subsampledateconstraints'] = this.state.subsampledateconstraints;\r\n            map['testgrouptest'] = selectedStbTimePointTestArray\r\n            map['nstbstudyplancode'] = sampleList.map(item => item.nstbstudyplancode).join(\",\")\r\n            map['userinfo'] = userInfo;\r\n            //map['checkBoxOperation'] = checkBoxOperation.SINGLESELECT;\r\n            map['ntype'] = 3;\r\n            map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData\r\n                && this.props.Login.masterData.ndesigntemplatemappingcode;\r\n            map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1;\r\n            map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow || -1;\r\n            map[\"nneedsubsample\"] = true;\r\n            // map[\"nneedjoballocation\"] = this.props.Login.masterData.RegSubTypeValue\r\n            //     && this.props.Login.masterData.RegSubTypeValue.nneedjoballocation;\r\n            map[\"masterData\"] = this.props.Login.masterData;\r\n            // map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_TIMEPOINTRESULTS\";\r\n            // map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n            // map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n            map[\"specBasedComponent\"] = this.props.Login.specBasedComponent;\r\n            map[\"nsampletypecode\"] = 9;\r\n            map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1;\r\n            map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1;\r\n            map[\"skipmethodvalidity\"] = false;\r\n            const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n                this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n            map[\"fromDate\"] = \"\";\r\n            map[\"toDate\"] = \"\";\r\n            map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n            // map[\"loadAdhocTest\"] = false;\r\n            //map[\"nneedmyjob\"] = this.props.Login.masterData.RealRegSubTypeValue.nneedmyjob ? this.props.Login.masterData.RealRegSubTypeValue.nneedmyjob : false;\r\n            let isFileupload = false;\r\n            const formData = new FormData();\r\n            this.props.Login.regSubSamplewithoutCombocomponent.map((item) => {\r\n                if (item.inputtype === 'files') {\r\n                    if (typeof objSubSample[item && item.label] === \"object\") {\r\n                        objSubSample[item && item.label] && objSubSample[item && item.label].forEach((item1, index) => {\r\n                            formData.append(\"uploadedFile\" + index, item1);\r\n                            formData.append(\"uniquefilename\" + index, map[\"StbTimePoint\"].uniquefilename);\r\n                            formData.append(\"filecount\", objSubSample[item && item.label].length);\r\n                            formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                            delete (map[\"StbTimePoint\"].uniquefilename);\r\n                            delete (map[\"StbTimePoint\"][item && item.label]);\r\n                            formData.append('Map', Lims_JSON_stringify(JSON.stringify(map)));\r\n                            isFileupload = true;\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\r\n            const inputParam = {\r\n                inputData: map,\r\n                postParamList: this.postParamList,\r\n                formData: formData, isFileupload\r\n            }\r\n\r\n            this.props.saveTimePoint(inputParam);\r\n        } else {\r\n            this.updateStbTimePoints(saveType, formRef, operation);\r\n        }\r\n    }\r\n\r\n    updateStbTimePoints(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n\r\n            fromdate: \"\",\r\n            todate: \"\",\r\n            nstbstudyplancode: String(this.state.selectedRecord.nstbstudyplancode),\r\n            nstbtimepointcode: String(this.state.selectedRecord.nstbtimepointcode),\r\n\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        const param = getRegistrationSubSample(\r\n            this.state.selectedRecord,\r\n            this.props.Login.masterData.SubSampleTemplate.jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent,\r\n            undefined, operation);\r\n\r\n        inputData[\"StbTimePoint\"] = param.sampleRegistration\r\n\r\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n            inputData[\"StbTimePoint\"]['jsondata'] = { ...inputData[\"StbTimePoint\"]['jsondata'], externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid }\r\n            inputData[\"StbTimePoint\"]['jsonuidata'] = { ...inputData[\"StbTimePoint\"]['jsonuidata'], externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid }\r\n        }\r\n        inputData[\"SubSampleDateList\"] = param.dateList\r\n        inputData['subsampledateconstraints'] = this.state.subsampledateconstraints;\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n            && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n            && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\r\n        inputData[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n            && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n        inputData[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n            && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n        inputData[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\r\n\r\n        let isFileupload = false;\r\n        const formData = new FormData();\r\n        this.props.Login.withoutCombocomponent.map((item) => {\r\n            if (item.inputtype === 'files') {\r\n                if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\r\n                    this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\r\n                        formData.append(\"uploadedFile\" + index, item1);\r\n                        formData.append(\"uniquefilename\" + index, inputData[\"StbTimePoint\"].uniquefilename);\r\n                        formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\r\n                        formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                        // formDataValue={...map[\"StbTimePoint\"].formData,formData};\r\n                        delete (inputData[\"StbTimePoint\"].uniquefilename);\r\n                        delete (inputData[\"StbTimePoint\"][item && item.label]);\r\n                        formData.append('Map', Lims_JSON_stringify(JSON.stringify(inputData)));\r\n                        isFileupload = true;\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'update',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            testAttachmentDataState: this.state.testAttachmentDataState, formData: formData, isFileupload\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateStbTimePoint(inputParam,\r\n                this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    approveRegistration = (registerId, skip, take) => {\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedStabilityStudyPlan.length > 0) {\r\n            if (this.props.Login.masterData.selectedStbTimePoint\r\n                !== undefined && this.props.Login.masterData.selectedStbTimePoint.length > 0) {\r\n                if (this.props.Login.masterData.selectedStbTimePointTest\r\n                    !== undefined && this.props.Login.masterData.selectedStbTimePointTest.length > 0) {\r\n                    let Map = {};\r\n                    Map[\"fromdate\"] = \"\";\r\n                    Map[\"todate\"] = \"\";\r\n                    Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                    Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                    Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                    Map[\"nportalrequired\"] = this.props.Login.masterData.RealSampleTypeValue.nportalrequired;\r\n                    Map[\"nfilterstatus\"] = -1;\r\n                    Map[\"nstbstudyplancode\"] = this.props.Login.masterData &&\r\n                        this.props.Login.masterData.selectedStabilityStudyPlan.map(sample => sample.nstbstudyplancode).join(\",\");\r\n                    Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                    Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n\r\n                    Map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                        && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\r\n                    Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n                    Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n                    Map[\"nstbtimepointcode\"] = this.props.Login.masterData.selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\");\r\n                    Map[\"nstbtimepointtestcode\"] = this.props.Login.masterData.selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\");;\r\n                    Map[\"url\"] = this.props.Login.settings[24];\r\n                    let inputParam = {\r\n                        inputData: Map,\r\n                        postParamList: this.postParamList,\r\n                        action: 'accept'\r\n                    }\r\n                    this.confirmMessage.confirm(\r\n                        this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_APPROVESTBSTUDYPLAN\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                        () => this.approveStbConfirm(inputParam, registerId));\r\n\r\n                } else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_ADDTESTTOREGISTERSAMPLES\" }));\r\n                }\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    approveStbConfirm = (inputParam, registerId) => {\r\n        if (showEsign(this.props.Login.userRoleControlRights,\r\n            this.props.Login.userInfo.nformcode, registerId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    parentPopUpSize: 'lg',\r\n                    screenName: this.props.Login.screenName,\r\n                    operation: 'accept'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.approveStbStudyPlan(inputParam, this.props.Login.masterData)\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    getPreviewTemplate, updateStore,\r\n    addMoreTests, addSubTimePoint, saveTimePoint, componentTest, createRegTest, ReloadData, getTimePointDetail\r\n    , getTimePointTestDetail, getStabilityStudyPlanByFilterSubmit, cancelSampleAction, testSectionTest, approveStbStudyPlan, getEditStbTimePointDetails,\r\n    deleteTestAction, updateStbTimePoint, cancelStbTimePointAction, filterTransactionList, getRegTypeChange, getRegSubTypeChange, \r\n    onApprovalConfigVersionChange, getSampleTypeChange,getTestDetailFromRegistration\r\n})(injectIntl(StabilityStudyPlan));"]},"metadata":{},"sourceType":"module"}