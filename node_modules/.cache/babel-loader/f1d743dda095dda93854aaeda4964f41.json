{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Nav}from'react-bootstrap';import{faPlus}from'@fortawesome/free-solid-svg-icons';var ResultEntryTaskTab=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryTaskTab,_React$Component);var _super=_createSuper(ResultEntryTaskTab);function ResultEntryTaskTab(){_classCallCheck(this,ResultEntryTaskTab);return _super.apply(this,arguments);}_createClass(ResultEntryTaskTab,[{key:\"render\",value:function render(){var _this=this;var addResultUsedTaskId=this.props.controlMap.has(\"AddResultUsedTask\")&&this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode;var extractedColumnList=[];if(this.props.masterData[\"RegSubTypeValue\"]&&this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}extractedColumnList.push(//{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"155px\" },\n//{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" },\n{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"150px\"},{\"idsName\":\"IDS_PREANALYSISTIME\",\"dataField\":\"spreanalysistime\",\"width\":\"170px\"},{\"idsName\":\"IDS_PREPARATIONTIME\",\"dataField\":\"spreparationtime\",\"width\":\"170px\"},{\"idsName\":\"IDS_ANALYSISTIME\",\"dataField\":\"sanalysistime\",\"width\":\"150px\"},{\"idsName\":\"IDS_MISCTIME\",\"dataField\":\"smisctime\",\"width\":\"180px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"sanalyst\",\"width\":\"150px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\"});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe border-bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"resultusedtask\",className:\"add-txt-btn\",hidden:this.props.userRoleControlRights.indexOf(addResultUsedTaskId)===-1,onClick:function onClick(){return _this.props.addResultEntryTask({userInfo:_this.props.userInfo,ntransactiontestcode:_this.props.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"),stestsynonym:_this.props.masterData.RESelectedTest.map(function(test){return test.stestsynonym;}).join(\",\"),addResultUsedTaskId:addResultUsedTaskId,screenName:_this.props.screenName});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDTASK\",defaultMessage:\"Task\"})))),/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nresultusedtaskcode\",data:this.props.masterData.ResultUsedTasks,dataResult:process(this.props.masterData.ResultUsedTasks||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,extractedColumnList:extractedColumnList,userInfo:this.props.userInfo,controlMap:this.props.controlMap,methodUrl:this.props.methodUrl,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,pageable:true,hideDetailBand:true,expandField:\"expanded\",isActionRequired:this.props.isActionRequired,deleteParam:this.props.deleteParam||\"\",fetchRecord:this.props.fetchRecord||\"\",editParam:this.props.editParam||\"\",deleteRecord:this.props.deleteRecord||\"\",selectedId:this.props.selectedId,isToolBarRequired:false,scrollable:\"scrollable\",gridHeight:\"550px\"}))));}}]);return ResultEntryTaskTab;}(React.Component);export default injectIntl(ResultEntryTaskTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskTab.jsx"],"names":["React","Row","Col","FormattedMessage","injectIntl","DataGrid","process","FontAwesomeIcon","Nav","faPlus","ResultEntryTaskTab","addResultUsedTaskId","props","controlMap","has","get","ncontrolcode","extractedColumnList","masterData","nneedsubsample","push","userRoleControlRights","indexOf","addResultEntryTask","userInfo","ntransactiontestcode","RESelectedTest","map","test","join","stestsynonym","screenName","ResultUsedTasks","dataState","dataStateChange","methodUrl","inputParam","isActionRequired","deleteParam","fetchRecord","editParam","deleteRecord","selectedId","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ResultEntryTaskTab extends React.Component {\r\n\r\n    render() {\r\n        const addResultUsedTaskId = this.props.controlMap.has(\"AddResultUsedTask\") && this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode\r\n        const extractedColumnList = [];\r\n        if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n            extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n        }\r\n        else{\r\n            extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n        }\r\n            extractedColumnList.push(\r\n            //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"155px\" },\r\n            //{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\", \"width\": \"180px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"sanalyst\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" }\r\n            );\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div className=\"actions-stripe border-bottom\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"resultusedtask\" className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addResultUsedTaskId) === -1}\r\n                                    onClick={() => this.props.addResultEntryTask({\r\n                                        userInfo: this.props.userInfo,\r\n                                        ntransactiontestcode: this.props.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\r\n                                        stestsynonym: this.props.masterData.RESelectedTest.map(test => test.stestsynonym).join(\",\"),\r\n                                        addResultUsedTaskId: addResultUsedTaskId, screenName: this.props.screenName\r\n                                    })}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_ADDTASK\" defaultMessage=\"Task\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nresultusedtaskcode\"}\r\n                            data={this.props.masterData.ResultUsedTasks}\r\n                            dataResult={process(this.props.masterData.ResultUsedTasks || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            methodUrl={this.props.methodUrl}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            hideDetailBand={true}\r\n                            expandField=\"expanded\"\r\n                            isActionRequired={this.props.isActionRequired}\r\n                            deleteParam={this.props.deleteParam || \"\"}\r\n                            fetchRecord={this.props.fetchRecord || \"\"}\r\n                            editParam={this.props.editParam || \"\"}\r\n                            deleteRecord={this.props.deleteRecord || \"\"}\r\n                            selectedId={this.props.selectedId}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"550px\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ResultEntryTaskTab);"]},"metadata":{},"sourceType":"module"}