{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _readOnlyError from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import React from'react';import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad,filterRecordBasedOnPrimaryKeyName,reArrangeArrays,childComboLoadForEdit}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{RegistrationSubType,RegistrationType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';import{Operators,TextFilter,NumericFilter,BooleanFilter,DateFilter,EnumFilter,EnumFilterProps}from\"@progress/kendo-react-data-tools\";import{ComboBox}from\"@progress/kendo-react-dropdowns\";export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.ntransactionsamplecode.length>0){var inputParamData={ntransactionsamplecode:inputData.ntransactionsamplecode,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"comments/getSubSampleComment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_defineProperty({masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSubSample:inputData.selectedSubSample// selectedTestCode: inputData.ntransactiontestcode,\n}),loading:false,showFilter:false,activeSubSampleTab:inputData.activeSubSampleTab,screenName:inputData.screenName,activeTestTab:inputData.activeSubSampleTab},\"screenName\",inputData.screenName)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{//toast.warn(\"Please Select a Sample\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){// const RegistrationSubType = response.data[\"RegistrationSubType\"];\n//  console.log(response.data);\n// RegistrationSubType.length > 0 ?\n//     selectedRecord[\"nregsubtypecode\"] = {\n//         \"value\": RegistrationSubType[0].nregsubtypecode,\n//         \"label\": RegistrationSubType[0].sregsubtypename\n//     } : selectedRecord[\"nregsubtypecode\"] = \"\";\n// const [labelname] = event.item;\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function onApprovalConfigVersionChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getApprovalConfigBasedTemplateDesign\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getComponentTestBySpec(Map,selectedRecord,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getComponentTestBySpec\",Map).then(function(response){var _response$data=response.data,Component=_response$data.Component,Test=_response$data.Test;var slno=Component.length>0?Component[0].slno:-1;var selectedComponent=Component.length>0?Component[0]:undefined;var SelectedTest=[];if(Object.keys(Test).length>0){SelectedTest=Test[slno];}dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectedComponent:selectedComponent,loading:false,selectedRecord:selectedRecord,popUptestDataState:{skip:0,take:10}}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestfromDB(objComponent,LoginProps,nflag){return function(dispatch){dispatch(initRequest(true));var component=_objectSpread({},objComponent);component[\"ncomponentcode\"]=objComponent[\"ncomponentcode\"]?objComponent[\"ncomponentcode\"].value:-1;component[\"nstoragelocationcode\"]=objComponent[\"nstoragelocationcode\"]?objComponent[\"nstoragelocationcode\"].value:-1;component[\"nstorageconditioncode\"]=objComponent[\"nstorageconditioncode\"]?objComponent[\"nstorageconditioncode\"].value:-1;component[\"slno\"]=LoginProps.Component?Object.keys(LoginProps.Component).length+1:0;component[\"scomponentname\"]=objComponent[\"ncomponentcode\"].label;component[\"sstoragelocationname\"]=objComponent[\"nstoragelocationcode\"]&&objComponent[\"nstoragelocationcode\"].label?objComponent[\"nstoragelocationcode\"].label:\"\";component[\"sstorageconditionname\"]=objComponent[\"nstorageconditioncode\"]&&objComponent[\"nstorageconditioncode\"].label?objComponent[\"nstorageconditioncode\"].label:\"\";component[\"ntzdmanufdate\"]=objComponent[\"ntzdmanufdate\"]?objComponent[\"ntzdmanufdate\"].value:-1;component[\"ntzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].value:-1;component[\"stzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].label:\"\";component[\"nplasmafilecode\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].value:-1;component[\"splasmafilenumber\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].label:\"\";var dreceiveddate=objComponent[\"dreceiveddate\"];component[\"dreceiveddate\"]=dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\ncomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\n// rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\nrsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:component.nspecsampletypecode,slno:component.slno}).then(function(response){var TestData=response.data;var slno=component.slno;var SelectedTest=[];var loadComponent=true;var selectComponent={};var showSaveContinue=true;var SelectedSource=[];// let openChildModal = true;\nvar selectedComponent=undefined;var parentPopUpSize=\"lg\";// selectComponent = objComponent\nif(nflag===1){loadComponent=true;objComponent[\"smanuflotno\"]=\"\";objComponent[\"dreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nobjComponent[\"sreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nselectComponent=objComponent;}else{loadComponent=false;parentPopUpSize=\"xl\";// openChildModal = false;\nshowSaveContinue=false;selectComponent=undefined;}var Test=LoginProps.Test||[];var Component=LoginProps.Component||[];Component.unshift(component);selectedComponent=component;Test[slno]=response.data;SelectedTest=TestData;dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectComponent:selectComponent,selectedComponent:selectedComponent,loadComponent:loadComponent,showSaveContinue:showSaveContinue,parentPopUpSize:parentPopUpSize,loading:false,SelectedSource:SelectedSource}});// console.log(response.data);\n}).catch(function(error){//   console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function EditComponent(Map,component,userInfo){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var TimeZoneField=response[1].data;var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};component[\"dreceiveddate\"]=rearrangeDateFormat(userInfo,component[\"sreceiveddate\"]);component[\"scomments\"]=component[\"scomments\"];var ntzdreceivedate=component.ntzdreceivedate;if(component.ntzdreceivedate!==null&&typeof component.ntzdreceivedate===\"object\"){ntzdreceivedate=component.ntzdreceivedate.value;}component[\"ntzdreceivedate\"]=component.ntzdreceivedate?{\"label\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].stimezoneid,\"value\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].ntimezonecode}:\"\";dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,childoperation:\"update\",lstComponent:lstComponent,ChildscreenName:\"Component\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",timeZoneList:timeZoneList,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";//masterData['searchedTests'] = undefined\nmasterData['searchedTest']=undefined;}// let selectedFilter = inputData.selectedFilter;\n// selectedFilter[\"fromdate\"] = \"\";\n// selectedFilter[\"todate\"] = \"\";\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined//selectedFilter\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTreeByProduct(Map,selectedRecord,comboData,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getTreeByProduct\",Map).then(function(response){var _ref=[],Specification=_ref.Specification,AgaramTree=_ref.AgaramTree,ActiveKey=_ref.ActiveKey,FocusKey=_ref.FocusKey,OpenNodes=_ref.OpenNodes;var selectedSpec={};if(response.data[\"rtn\"]===true){Specification=constructOptionList(response.data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response.data[\"AgaramTree\"];ActiveKey=response.data[\"ActiveKey\"];FocusKey=response.data[\"FocusKey\"];OpenNodes=response.data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;}selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{}})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getNewRegSpecification=function getNewRegSpecification(inputParam,masterData){return function(dispatch){if(inputParam.selectedNode!==null){dispatch(initRequest(true));rsapi.post(\"/registration/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},{ntreetemplatemanipulationcode:inputParam.selectedNode.ntemplatemanipulationcode})).then(function(response){sortData(response.data);var Specification=constructOptionList(response.data||[],\"nallottedspeccode\",\"sspecname\",false,false,true).get(\"OptionList\");var selectedComponent=undefined;inputParam.selectedRecord[\"nallottedspeccode\"]=Specification.length>0?{value:Specification[0].value,label:Specification[0].label,item:Specification[0].item}:\"\";inputParam.selectedRecord[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";inputParam.selectedRecord[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;dispatch({type:DEFAULT_RETURN,payload:{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey,Specification:Specification,selectedNode:inputParam.selectedNode,selectedRecord:inputParam.selectedRecord,Test:[],selectedComponent:selectedComponent,SelectedTest:[],loading:false,showSample:undefined}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export function AddComponents(Map){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");var dreceiveddate=null;if(lstComponent[0].item.sreceiveddate)dreceiveddate=rearrangeDateFormat(Map[\"userinfo\"],lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\nvar selectComponent={sreceiveddate:dreceiveddate,dreceiveddate:dreceiveddate,ntzdreceivedate:{\"label\":Map[\"userinfo\"].stimezoneid,\"value\":Map[\"userinfo\"].ntimezonecode},stzdreceivedate:Map[\"userinfo\"].stimezoneid,scomments:\"\",nallottedspeccode:lstComponent[0].item.nallottedspeccode};var CurrentTime=dreceiveddate;dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,lstComponent:lstComponent,dreceiveddate:dreceiveddate,ChildscreenName:\"Component\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",selectComponent:selectComponent,parentPopUpSize:\"lg\",CurrentTime:CurrentTime,timeZoneList:timeZoneList,loading:false,openPortal:true,openModal:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTest(objComponent,LoginProps,nneedsubsample,specBasedComponent,selectPackage1,specBasedTestPackage,selectPackage){return function(dispatch){if(Object.keys(objComponent).length>0){dispatch(initRequest(true));rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedTestPackage?false:specBasedComponent,specBasedTestPackage:true,conditionalTestPackage:true//    ntestpackagecode:selectPackage.ntestpackagecode.value\n}).then(function(response){var TestCombined=[];var PackageData=[];if(specBasedTestPackage){var PackageDataMap=constructOptionList(response.data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");// Map[\"selectPackage\"] = selectedobject\n}else{var TestData=response.data;var Test=LoginProps.Test||[];var _componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];filterRecordBasedOnTwoArrays(TestData,_componentTest,\"ntestgrouptestcode\"),_readOnlyError(\"TestCombined\");}// const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\n//\"stestsynonym\", undefined, undefined, true);\ndispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,TestPackage:PackageData,selectPackage:[],loadTest:true,openChildModal:false,ChildscreenName:\"Test\",screenName:\"Test\",operation:\"create\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTCOMPONENTTOADDTEST\"}));}};}export function addsubSample(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData,selectedRecord,conditionalTestPackage,specBasedTestPackage){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList?columnList:[],childcolumnlist:childColumnList?childColumnList:[],userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent//   conditionalTestPackage:true\n}));urlArray[2]=ComponentTestBySpec;}else{Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,//nneedsubsample: nneedsubsample,\n// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage});urlArray[2]=TestGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList,response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{if(specBasedTestPackage){var PackageDataMap=constructOptionList(response.data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");}else{TestCombined=response[2].data;}}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});//console.log(\"selectedRecord1 action1:\", selectedRecord1);\n// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = comboData1['Container Type'] || []\n//     comboData1['ContainerType'] = comboData1['Container Type'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     comboData1['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",screenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,childSubSampleColumnList:childColumnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,selectPackage:[],TestPackage:PackageData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);return function(dispatch){if(!specBasedComponent){var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getTestfromDB\",_objectSpread(_objectSpread({nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1},Map),{},{// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage}));urlArray[0]=ComponentTestBySpec;var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[1]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[2]=dateService;Axios.all(urlArray).then(function(response){var TestCombined=[];var PackageData=[];if(!specBasedTestPackage){TestCombined=response[0].data;}else{var PackageDataMap=constructOptionList(response[0].data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");}var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = SubSamplecomboData['ContainerType'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     SubSamplecomboData['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",screenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,TestCombined:TestCombined,TestPackage:PackageData}});});}else{// Component = Component ? Component : []\nvar _urlArray=[];var _ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent}));_urlArray[0]=_ComponentTestBySpec;var _currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});_urlArray[1]=_currentDate;var _dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});_urlArray[2]=_dateService;Axios.all(_urlArray).then(function(response){// const lstComponent =  response.data.lstComponent\nvar lstComponent=response[0].data.lstComponent;//filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\nvar lstComponentMap=constructOptionList(lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = SubSamplecomboData['ContainerType'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     SubSamplecomboData['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",screenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,TestCombined:[],selectedTestData:[],selectPackage:[]}});});}};}}export function componentTestPackage(selectedobject,Reg,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.selectedSubSample&&_toConsumableArray(new Set(selectedobject.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\"),conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage,specBasedComponent:specBasedComponent,nallottedspeccode:selectedobject.selectedSample[0].nallottedspeccode}).then(function(response){var PackageData=[];var TestData=[];if(specBasedTestPackage){var PackageDataMap=constructOptionList(response.data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");}else{TestData=response.data;}//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({TestCombined:TestData,TestPackage:PackageData},Map),{},{loading:false,selectedTestData:[],selectPackage:[],screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",loadChildTest:true//  selectedRecord:{},\n})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function componentTest(selectedobject,Reg,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage}).then(function(response){var PackageData=[];var TestData=[];if(specBasedTestPackage){var PackageDataMap=constructOptionList(response.data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");}else{TestData=response.data;}//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({availableTest:TestData,TestPackage:PackageData},Map),{},{loading:false,selectedTestData:[],selectPackage:[]})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function testPackageTest(selectedobject,Reg,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage,selectComponent,objComponent,LoginProps,selectPackage,subSampleBased,selectedSpec,nneedsubsample){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];rsapi.post(\"/registration/getTestBasesdTestPackage\",{nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode:Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,slno:subSampleBased?Component?Object.keys(Component).length+1:1:selectComponent.slno,specBasedComponent:specBasedComponent,ntestpackagecode:selectPackage.ntestpackagecode.value,nallottedspeccode:selectedSpec!==undefined?selectedSpec.value:selectedobject.nallottedspeccode}).then(function(response){var Map={};var TestData=response.data;var Test=LoginProps.Test||[];var componentTest=[];if(subSampleBased){componentTest=Test[Component?Object.keys(Component).length+1:1]?Test[Component?Object.keys(Component).length+1:1]:[];}else{componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];}var availableTest=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestcode\");var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestcode\");if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectPackage\"]=selectPackage;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({availableTest:availableTest,TestCombined:TestCombined},Map),{},{loading:false,selectedTestData:[]//, selectPackage: []\n// TestCombined,loadTest: true, openChildModal: false,\n// ChildscreenName: \"Test\",\n//  screenName: \"Test\",\n// operation: \"create\",\n//  childoperation: \"create\",\n//   parentPopUpSize: \"lg\", loading: false\n})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function addSubSampleSaveContinue(Map1,Map,specBasedComponent,Component,selectedTestData,lstComponent){//  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\n//     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\nreturn function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],nspecsampletypecode:Map[\"nspecsampletypecode\"],slno:Map1.Component?Object.keys(Map1.Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestCombined=response.data;var selectedTestPackageData=selectedTestPackageData&&selectedTestPackageData.length>0?selectedTestData:[];var selectedTestPackageData1=TestCombined.filter(function(x){return selectedTestPackageData.some(function(y){return x[\"ntestpackagetestcode\"]===y.value;});});selectedTestData=selectedTestData&&selectedTestData.length>0?selectedTestPackageData:[];var selectedTestData1=TestCombined.filter(function(x){return selectedTestData.some(function(y){return x[\"ntestgrouptestcode\"]===y.value;});});// const selectedTestData2 = []\n// TestCombined.map(x=>{\n//     selectedTestData1.map(y=>{\n//         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\n//             selectedTestData2.push(x)\n//         } \n//     })\n// });\n//  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\n// const filterArray = [...selectedTestData1, ...TestCombined]\nselectedTestData=constructOptionList(selectedTestData1,\"ntestgrouptestcode\",\"stestsynonym\");selectedTestData[\"ntestgrouptestcode\"]=selectedTestData.get(\"OptionList\");selectedTestPackageData=constructOptionList(selectedTestPackageData1,\"ntestpackagetestcode\",\"stestpackagename\");selectedTestPackageData[\"ntestpackagetestcode\"]=selectedTestPackageData.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:TestCombined,selectedTestData:selectedTestData,selectedTestPackageData:selectedTestPackageData,masterStatus:intl.formatMessage({id:\"IDS_SAVESUCCESSFULLY\"})})});});}else{// lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\nMap1.selectComponent[\"ncomponentcode\"]={};Map1.selectComponent[\"Sample Name\"]=\"\";dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:[],selectedTestData:[],selectedTestPackageData:[],lstComponent:lstComponent})});}};}export function editSubSample(Map,component,userInfo,specBasedComponent,SubSamplecomboData,selectedRecord){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var Componnet={};if(specBasedComponent){Componnet=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread({},Map));}urlArray=[Componnet];Axios.all(urlArray).then(function(response){var comp=[];if(specBasedComponent){comp=response[0].data.lstComponent;}var lstComponentMap=constructOptionList(comp||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");if(Map.nregsubtypecode===6){var portalOrder=component['Container Type']||{};var containerType=SubSamplecomboData['ContainerType']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});SubSamplecomboData['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{loadSubSample:true,childoperation:\"update\",ChildscreenName:\"SubSample\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,SubSamplecomboData:SubSamplecomboData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===\"Success\"){var _objectSpread6;var RegistrationGetSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.RegistrationGetSample);var selectedSample=response.data[\"selectedSample\"];var RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"RegistrationGetTest\"];var selectedSubSample=RegistrationGetSubSample;RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];if(inputParam.inputData.nneedsubsample){RegistrationGetSubSample=sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc');selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=RegistrationGetTest.filter(function(x){return x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode;});selectedTest=RegistrationGetTest.length>0?response.data[\"selectedTest\"]:[];}// RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\nif(inputParam.multipleselectionFlag){selectedSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.selectedSample);updatedObjectWithNewElement(response.data[\"selectedSubSample\"],masterData.RegistrationGetSubSample);updatedObjectWithNewElement(response.data[\"selectedTest\"],masterData.RegistrationGetTest);RegistrationGetSubSample=masterData.RegistrationGetSubSample;RegistrationGetTest=masterData.RegistrationGetTest;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationGetSample:RegistrationGetSample});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread6={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread6,\"selectedRecord\",{}),_defineProperty(_objectSpread6,\"SelectedTest\",[]),_defineProperty(_objectSpread6,\"Test\",[]),_defineProperty(_objectSpread6,\"selectedComponent\",{}),_defineProperty(_objectSpread6,\"subSampleDataGridList\",[]),_objectSpread6));inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});}}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function insertRegistrationScheduler(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/schedulerinsertRegistration\",inputParam.inputData).then(function(response){var _objectSpread7;// if (response.data.rtn === \"Success\") {\n//     let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n//     let selectedSample = response.data[\"selectedSample\"];\n//     let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//     let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\n//     let selectedSubSample = RegistrationGetSubSample;\n//     RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\n//     let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\n//     if (inputParam.inputData.nneedsubsample) {\n//         RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\n//         selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\n//         RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\n//         selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\n//     }\n//     // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\n//     if (inputParam.multipleselectionFlag) {\n//         selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\n//         updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\n//         updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\n//         RegistrationGetSubSample = masterData.RegistrationGetSubSample;\n//         RegistrationGetTest = masterDat..a.RegistrationGetTest;\n//     }\n//     masterData = {\n//         ...masterData, ...response.data,\n//         selectedSample, selectedSubSample, selectedTest,\n//         RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\n//     }\nvar respObject=_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},masterData),{},{SchedulerTransaction:response[\"data\"].SchedulerTransaction})},inputParam.inputData),{},(_objectSpread7={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread7,\"selectedRecord\",{}),_defineProperty(_objectSpread7,\"SelectedTest\",[]),_defineProperty(_objectSpread7,\"Test\",[]),_defineProperty(_objectSpread7,\"selectedComponent\",{}),_defineProperty(_objectSpread7,\"subSampleDataGridList\",[]),_objectSpread7));// inputParam.postParamList[0]['clearFilter'] = 'yes'\n// dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread({},respObject)});// } else {\n//     toast.warn(response.data.rtn);\n//     dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\n// }\n}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getRegistrationSample(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var respObject={};if(inputData.selectedFilter){respObject={selectedFilter:_objectSpread({},inputData.selectedFilter)};}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampleskip:0,subsampletake:undefined,showSample:undefined},respObject),{},{activeSampleTab:inputData.inputData.activeSampleTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeTestTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,ntype:inputData.checkBoxOperation===7?2:undefined,checkBoxOperation:inputData.nneedsubsample===true?inputData.checkBoxOperation===5?3:inputData.checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data,\"descending\",\"npreregno\");sortData(response.data['RegistrationAttachment']);sortData(response.data['RegistrationComment']);var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedTest||[];if(subSample){var oldSelectedSubSample=inputData.masterData.selectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedSubSample:inputData.masterData.RegistrationGetSubSample.length>0?[inputData.masterData.RegistrationGetSubSample[0]]:[]});var RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];var RegistrationComment=[];//if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \nif(inputData.checkBoxOperation===1){var wholeSubSampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSubSample:oldSelectedSubSample});}var selectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.selectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:selectedTest});}if(inputData.checkBoxOperation===7){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nswitch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData));}var _ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationComment\"]=RegistrationComment;}if(inputData.checkBoxOperation===3||inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:masterData.RegistrationGetTest.length>0?[masterData.RegistrationGetTest[0]]:[]});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData2=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData2));}var _ntransactiontestcode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData4=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData4));}var _ntransactiontestcode4=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData));var _ntransactiontestcode3=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:var _ResponseData3=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData3));}var _ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment2,_ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationComment\"]=RegistrationComment;}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;var bool=false;if(inputData.masterData.RegistrationGetSubSample.length<inputData.subsampleskip){testskip=0;subsampleskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}}else{//let oldSelectedTest = inputData.masterData.selectedTest\n//  let oldSelectedSubSample = inputData.masterData.selectedSubSample\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],selectedSubSample:inputData.masterData.RegistrationGetSubSample});var _RegistrationTestComment3=[];var _RegistrationParameter2=[];var _RegistrationTestAttachment2=[];var _RegistrationComment=[];if(inputData.checkBoxOperation===7||inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var _ntransactiontestcode5;var npreregno;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode5=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";npreregno=inputData.masterData.RegistrationGetSample.length>0?inputData.masterData.RegistrationGetSample[0].npreregno:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=keepOld?inputData.masterData.RegistrationComment?inputData.masterData.RegistrationComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationComment,npreregno,\"npreregno\");activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData5=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment4=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData5));}var _ntransactiontestcode6=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment4,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData7=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment3=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment3=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData7));}var _ntransactiontestcode8=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestAttachment2=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment3,_ntransactiontestcode8,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData2=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter3=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData2));var _ntransactiontestcode7=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationParameter2=getRecordBasedOnPrimaryKeyName(_RegistrationParameter3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:var _ResponseData6=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment5=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment5=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData6));}var _ntransactionTestCode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment5,_ntransactionTestCode2,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=_RegistrationTestComment3;masterData[\"RegistrationParameter\"]=_RegistrationParameter2;masterData['RegistrationTestAttachment']=_RegistrationTestAttachment2;masterData['RegistrationComment']=_RegistrationComment;var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.selectedTest;var oldSelectedSubSample=inputData.masterData.selectedSubSample;// let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\nvar isGrandChildGetRequired=false;var TestSelected=[];var subSampleSelected=[];if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var selectedSample=inputData.selectedSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,inputData.masterData.RegistrationGetTest,\"ntransactiontestcode\");var selectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];var ntransactiontestcode=selectedTest.length>0?selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";var selectedSubSample=inputData.masterData.RegistrationGetSubSample;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");selectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.RegistrationGetSubSample[0]];if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest});if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},_defineProperty({childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3,skipInfo:skipInfo},\"masterData\",masterData));if(subSample){if(selectedTest.length===0){inputData[\"npreregno\"]=selectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];dispatch(getRegistrationTestDetail(inputData,true));}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:TestSelected?TestSelected:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],// RegistrationTestComment,\nselectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.RegistrationGetSubSample});var subsamplecheck=true;if(subSample){var SubSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");if(SubSampleSelected.length>0){var _filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");if(_filterSelectedSubSample.length===0){var wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});if(oldSelectedSubSample.length===0&&wholeSubSample.length>0&&_masterData.selectedTest.length===0){var selectedSubSample1=[inputData.masterData.RegistrationGetSubSample[0]];_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:selectedSubSample1,selectedTest:[]});inputData=_objectSpread(_objectSpread({},inputData),_masterData);inputData[\"npreregno\"]=selectedSubSample1.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample1.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];subsamplecheck=false;dispatch(getRegistrationTestDetail(inputData,true));}}else{oldSelectedSubSample=_filterSelectedSubSample;}}else{var _wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!_wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});}if(subsamplecheck){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:oldSelectedSubSample});}if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;_skipInfo={subsampleskip:subsampleskip,subsampletake:subsampletake};}}var wholeTestList=_masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode9;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode9=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode9,\"ntransactiontestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode9,\"ntransactiontestcode\");var _skipInfo={};if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},{testskip:testskip,testtake:testtake});}var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},_skipInfo)});}}};}export function getRegistrationTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionsamplecode:inputData.ntransactionsamplecode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,checkBoxOperation:inputData.checkBoxOperation,nneedsubsample:inputData.nneedsubsample};var subSample=inputData.nneedsubsample;var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data);var oldSelectedTest=inputData.masterData.selectedTest||[];var oldSelectedSubSample=inputData.masterData.selectedSubSample||[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactionsamplecode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]// RegistrationTestComment,\n});//let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];var RegistrationSampleComment=[];var RegistrationSampleAttachment=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode10=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode10,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData8=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData8));}var _ntransactiontestcode11=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode11,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else if(inputData.checkBoxOperation===7){var testList=reArrangeArrays(inputData.masterData.RegistrationGetSubSample,response.data.RegistrationGetTest,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:testList?testList.length>0?[testList[0]]:[]:[],RegistrationGetTest:testList?testList.length>0?testList:[]:[]//ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData9=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment6=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment6=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData9));}var _ntransactiontestcode12=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment6,_ntransactiontestcode12,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData11=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment4=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData11));}var _ntransactiontestcode14=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment4,_ntransactiontestcode14,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData3=response.data.RegistrationParameter?response.data.RegistrationParameter:[];// let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\nvar _RegistrationParameter4=_toConsumableArray(_resultResponseData3);var _ntransactiontestcode13=testList?testList.length>0?testList[0].ntransactiontestcode:inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter4,_ntransactiontestcode13,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData10=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment7=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment7=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData10));}var _ntransactionTestCode3=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment7,_ntransactionTestCode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}if(subSample){var wholeSubsampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld=false;var ntransactionsamplecode;if(oldSelectedSubSample.length>0){_keepOld=true;}else{ntransactionsamplecode=masterData.selectedSubSample[0].ntransactionsamplecode;}switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationSampleComment\"]=RegistrationSampleComment;masterData[\"RegistrationSampleAttachment\"]=RegistrationSampleAttachment;var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;var skipInfo={};if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTabIndex:inputData.activeTabIndex,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString():\"-1\";var selectedSubSample=inputData.selectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar selectedTest=inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetailRegistration(inputData,true));}else{var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]});var wholeTestList=_masterData2.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode15;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode15=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData2[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode15,\"ntransactiontestcode\");_masterData2[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode15,\"ntransactiontestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData2[arr.activeName]&&_masterData2[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData2,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,activeTabIndex:inputData.activeTabIndex},skipInfo)});}}};}export function acceptRegistration(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/acceptRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"||response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));if(response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){toast.warn(intl.formatMessage({id:response.data.rtn}));}}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.warn(response.data.rtn);}}).catch(function(error){toast.error(error.message);});};}export var addMoreTest=function addMoreTest(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedSample&&inputParam.selectedSample.length>0){if(inputParam.selectedSubSample&&inputParam.selectedSubSample.length>0){value=inputParam.selectedSubSample.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedSubSample[0].nspecsampletypecode;});if(value){return toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}sampleList=sampleList?_toConsumableArray(sampleList.slice(inputParam.skip,inputParam.take)):[];var selectedsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedSample,\"npreregno\");// const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\nif(selectedsample&&selectedsample.length>0){var findTransactionStatus=_toConsumableArray(new Set(selectedsample.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.CERTIFIED&&findTransactionStatus[0]!==transactionStatus.SENT){var findApprovalVersion=_toConsumableArray(new Set(selectedsample.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedsample.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{inputParam[\"snspecsampletypecode\"]=inputParam.selectedSubSample&&_toConsumableArray(new Set(inputParam.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\");dispatch(initRequest(true));rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{availableTest:response.data,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\"}));}}else{////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\ntoast.warn(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};};export var createRegistrationTest=function createRegistrationTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _respObject;var RegistrationGetTest=updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"],response.data[\"RegistrationGetTest\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationGetTest:RegistrationGetTest,selectedTest:response.data[\"RegistrationGetTest\"],RegistrationParameter:response.data.RegistrationParameter// RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\n});var respObject=(_respObject={masterData:masterData},_defineProperty(_respObject,modalName,false),_defineProperty(_respObject,\"loading\",false),_defineProperty(_respObject,\"loadChildTest\",false),_defineProperty(_respObject,\"showSample\",undefined),_defineProperty(_respObject,\"openModal\",false),_defineProperty(_respObject,\"selectedRecord\",{}),_respObject);inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         [modalName]: false,\n//         loading: false,\n//         loadChildTest: false,\n//         showSample: undefined,\n//         openModal: false,\n//         selectedRecord: {}\n//     }\n// });\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getEditRegistrationComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation,masterData=_inputParam.masterData;if(masterData[\"selectedSample\"].length>1||masterData[\"selectedSample\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editRegParam[\"getSampleChildDetail\"]=true;}masterData[\"selectedSample\"]=[];masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);var npreregno=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{npreregno:npreregno,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:withoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userInfo});urlArray=[timeZoneService,selectedRegistration,dateService];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);// const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\n//  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\nvar timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};//  const newcomboData = parentChildComboLoad(columnList, response[1].data,\n// selectedRecord, childColumnList, withoutCombocomponent)\nif(selectedRecord.ntransactionstatus===transactionStatus.CANCELLED||selectedRecord.ntransactionstatus===transactionStatus.REJECT){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDSAMPLE\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}withoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";if(date.nperiodcode){selectedRecord[date.label+\"value\"]=response[2].data[date.label]?new Date(response[2].data[date.label][\"datevalue\"]):null;}else{selectedRecord[date.label+\"value\"]=new Date();}if(date.hidebeforedate){selectedRecord[date.label+\"min\"]=selectedRecord[date.label+\"value\"];}if(date.hideafterdate){selectedRecord[date.label+\"max\"]=selectedRecord[date.label+\"value\"];}}});var _ref2=[],Specification=_ref2.Specification,AgaramTree=_ref2.AgaramTree,ActiveKey=_ref2.ActiveKey,FocusKey=_ref2.FocusKey,OpenNodes=_ref2.OpenNodes;var selectedSpec={};Specification=constructOptionList(response[1].data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response[1].data[\"AgaramTree\"];ActiveKey=response[1].data[\"FocusKey\"];FocusKey=response[1].data[\"ActiveKey\"];OpenNodes=response[1].data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:{AgaramTree:AgaramTree,FocusKey:FocusKey,ActiveKey:ActiveKey,OpenNodes:OpenNodes,selectedSpec:selectedSpec,Specification:Specification,// statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\n// currentTime,\noperation:\"update\",screenName:inputParam.masterData.RealRegSubTypeValue.sregsubtypename,// PopUpLabel: popUpLabel,\ntimeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openPortal:true,ncontrolCode:inputParam.editRegParam.ncontrolCode,loadPreregister:true,parentPopUpSize:\"xl\",loading:false,showSample:undefined,comboData:comboValues.comboData,childColumnList:childColumnList,comboComponents:comboComponents,withoutCombocomponent:withoutCombocomponent,columnList:columnList//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function updateRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===\"Success\"){// sortData(response.data);\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],masterData.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],masterData.RegistrationGetTest,\"ntransactiontestcode\");//  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\nmasterData=_objectSpread(_objectSpread({},masterData),{},{selectedSample:response.data[\"selectedSample\"],// selectedSubSample: masterData[\"selectedSubSample\"],\n//selectedTest:masterData[\"selectedTest\"],\n// RegistrationGetTest,\n// RegistrationGetSubSample,\nRegistrationParameter:masterData[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openPortal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,openModal:false,loadPreregister:false,selectedRecord:{},showSample:undefined}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}else{toast.info(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelTest\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nvar masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedTest:response.data[\"selectedTest\"],// RegistrationGetTest:response.data[\"RegistrationGetTest\"],\nRegistrationGetTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\")//  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\n});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:{},loading:false,loadPreregister:false,showSample:undefined});inputParam.postParamList[0]['clearFilter']='no';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSample\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function addsubSampleRegistration(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode,specBasedComponent,specBasedTestPackage){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList,childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent,userinfo:userinfo}));urlArray[2]=ComponentTestBySpec;}else{var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true});urlArray[2]=TestGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:regSubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList,response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{if(specBasedTestPackage){var PackageDataMap=constructOptionList(response[2].data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");}else{TestCombined=response[2].data;}}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});dispatch({type:DEFAULT_RETURN,payload:{screenName:\"SubSample\",showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openModal:true,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,regchildSubSampleColumnList:regchildColumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,TestPackage:PackageData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveSubSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createSubSample\",inputParam.inputData).then(function(response){// let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n// let selectedSample = response.data[\"selectedSample\"];\nvar RegistrationGetSubSample=updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\nRegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];var RegistrationParameter=response.data[\"RegistrationParameter\"];RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode');var masterData=_objectSpread({},inputParam.inputData.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationParameter:RegistrationParameter});var respObject={masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false};inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));//    dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         openModal: false,\n//         loadEsign: false,\n//         loading: false,\n//         showSample: undefined,\n//         selectedRecord: {},\n//         loadRegSubSample:false\n//     }\n// });\n}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getEditSubSampleComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent,specBasedComponent){return function(dispatch){var _inputParam2=_objectSpread({},inputParam),userInfo=_inputParam2.userInfo,operation=_inputParam2.operation,masterData=_inputParam2.masterData;if(masterData[\"selectedSubSample\"].length>1||masterData[\"selectedSubSample\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]=true;}masterData[\"selectedSubSample\"]=[];masterData[\"selectedSubSample\"].push(inputParam[\"mastertoedit\"]);inputParam.editSubSampleRegParam[\"npreregno\"]=inputParam[\"mastertoedit\"][\"npreregno\"];inputParam.editSubSampleRegParam[\"checkBoxOperation\"]=3;inputParam.editSubSampleRegParam[\"nfilterstatus\"]=inputParam[\"mastertoedit\"][\"ntransactionstatus\"];inputParam.editSubSampleRegParam[\"napprovalconfigcode\"]=inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];//inputParam.editSubSampleRegParam[\"withoutgetparameter\"] = 3;\nvar ntransactionsamplecode=inputParam.mastertoedit[inputParam.primaryKeyName];if(ntransactionsamplecode===undefined){toast.warn(intl.formattedMessage({id:\"IDS_SELECTVALIDSUBSAMPLE\"}));}else{var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\",_objectSpread(_objectSpread({},inputParam.editSubSampleRegParam),{},{ntransactionsamplecode:ntransactionsamplecode,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:withoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userInfo});urlArray=[timeZoneService,selectedRegistration,dateService];// if(specBasedComponent){\n//     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\n//         ...Map,\n//         specBasedComponent: specBasedComponent\n//     })\n//     urlArray.push(ComponentTestBySpec) \n// }\ndispatch(initRequest(true));Axios.all(urlArray).then(function(response){var _payload2;var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};// if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\n//     toast.warn(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\n//     dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\n// }\n//else {\n//               let lstComponent=[]\nif(specBasedComponent){selectedRecord[\"ncomponentcode\"]={label:selectedRecord[\"scomponentname\"],value:selectedRecord[\"ncomponentcode\"]};}var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList2=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}// withoutCombocomponent.map(date => {\n//     if (date.inputtype === 'date')\n//         selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\n//             rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\n// })\nwithoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";if(date.nperiodcode){selectedRecord[date.label+\"value\"]=response[2].data[date.label]?new Date(response[2].data[date.label][\"datevalue\"]):null;}else{selectedRecord[date.label+\"value\"]=new Date();}if(date.hidebeforedate){selectedRecord[date.label+\"min\"]=selectedRecord[date.label+\"value\"];}if(date.hideafterdate){selectedRecord[date.label+\"max\"]=selectedRecord[date.label+\"value\"];}}});selectedRecord=_objectSpread({},selectedRecord);if(inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]===true){masterData=_objectSpread(_objectSpread({},masterData),response[1].data[\"SubSampleChildDetail\"]);}dispatch({type:DEFAULT_RETURN,payload:(_payload2={operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true,screenName:\"IDS_SUBSAMPLE\"},_defineProperty(_payload2,\"operation\",\"update\"),_defineProperty(_payload2,\"specBasedComponent\",specBasedComponent),_defineProperty(_payload2,\"masterData\",masterData),_payload2)});// }\n}).catch(function(error){//console.log(\"error:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function onUpdateSubSampleRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistrationSubSample\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\n//  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\nvar RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{// selectedSample: response.data[\"selectedSample\"],\nselectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,// RegistrationGetSubSample,\nRegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:\"SubSample\"}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelSubSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSubSample\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{// selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\nselectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function preregRecordToQuarantine(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/quarantineRegistration\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\n// replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject={masterData:masterData,loading:false,loadEsign:false,openModal:false,showSample:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function getTestChildTabDetailRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}var toTimestamp=function toTimestamp(strDate){// const dt = new Date(strDate).getTime();\n// return dt / 1000;\nvar dt=strDate.getTime();return dt;};export function getDynamicFilter(inputParam){if(inputParam.component.inputtype==='frontendsearchfilter'){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];// const responseparam={}\nvar gridColumns=[];var fields=[];var datefileds=[];var multilingual=[];inputParam.component.filterfields.map(function(item){fields.push(filterObject(item,languageTypeCode,response.data));if(item.ismultilingual){multilingual.push(item.columnname);}if(item.filterinputtype===\"date\"){datefileds.push(item.columnname);}if(item.filterinputtype!=='predefinednumeric'){gridColumns.push(creategridColumns(item,languageTypeCode));}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;datefileds.map(function(x){jsondata[x+\"timestamp\"]=toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo,jsondata[x]));});multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});return jsondata;});dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,gridColumns:gridColumns,fields:fields,loadCustomSearchFilter:true,loading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,kendoFilter:{logic:\"and\",filters:[]},awesomeTree:undefined,awesomeConfig:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}else if(inputParam.component.inputtype===\"backendsearchfilter\"){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var languageTypeCode=inputParam.userinfo.slanguagetypecode;var _filterObjectForReact=filterObjectForReactAwesomeFilter(inputParam.component.filterfields,languageTypeCode,response.data),fields=_filterObjectForReact.fields,gridColumns=_filterObjectForReact.gridColumns;dispatch({type:DEFAULT_RETURN,payload:{lstPatient:[],gridColumns:gridColumns,fields:fields,loadCustomSearchFilter:true,loading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,kendoFilter:{logic:\"and\",filters:[]},awesomeTree:undefined,onExecute:true,awesomeConfig:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}}var datapredef={};var CustomFilter=function CustomFilter(props){var filter=props.filter,_props$data=props.data,data=_props$data===void 0?[]:_props$data,defaultItem=props.defaultItem;var onChange=function onChange(event){props.onFilterChange.call(undefined,{nextFilter:_objectSpread(_objectSpread({},props.filter),{},{value:event.target.value.value})});};return/*#__PURE__*/React.createElement(ComboBox,{onChange:onChange,data:filter.field?datapredef[filter.field]:[],textField:\"text\"});};export function creategridColumns(item,languageTypeCode){var obj={};if(item.filterinputtype!=='predefinednumeric'){return{field:item.columnname,title:item.displayname[languageTypeCode],width:\"200px\"};}}export function filterObjectForReactAwesomeFilter(filterFields,languageTypeCode,resposedata){var obj={};obj['fields']={};obj['gridColumns']=[];filterFields.map(function(item){if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['title']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];return jsondata;});datapredef[item.columnname]=optionList;}switch(item.filterinputtype){case\"text\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"text\",valueSources:[\"value\",\"func\"],mainWidgetProps:{\"valueLabel\":\"Name\",\"valuePlaceholder\":\"Enter\"+item.displayname[languageTypeCode]}};break;case\"numeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"number\",valueSources:[\"value\"],fieldSettings:_objectSpread({},item.numericcondition)};break;case\"date\":obj['fields'][item.type==='dynamic'?\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"date\",valueSources:[\"value\"]};break;case\"predefinednumeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;case\"predefinedtext\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;}var gridColumns=creategridColumns(item,languageTypeCode);if(item.filterinputtype!=='predefinednumeric'){obj['gridColumns'].push(gridColumns);}});return obj;}export function filterObject(item,languageTypeCode,resposedata){var obj={};var preobj={};if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['text']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];//delete jsondata.jsondata\nreturn jsondata;});datapredef[item.columnname]=optionList;// preobj = {\n//     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\n//     predefinedvaluemember: item.columnname\n// }\n}switch(item.filterinputtype){case\"text\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};case\"numeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:NumericFilter,operators:Operators.numeric};case\"date\":return obj={name:item.columnname+\"timestamp\",label:item.displayname[languageTypeCode],filter:DateFilter,operators:Operators.date};case\"predefinednumeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.numeric};case\"predefinedtext\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.text};default:return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};}//return obj;\n}export function getDynamicFilterExecuteData(inputParam){return function(dispatch){var obj=_objectSpread(_objectSpread({},inputParam.component),{},{filterquery:inputParam.filterquery,userinfo:inputParam.userinfo});dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\",obj).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];var multilingual=[];inputParam.component.filterfields.map(function(item){if(item.ismultilingual){multilingual.push(item.columnname);}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});// let label = isMultiLingual ?\n//   jsondata[optionValue]\n//   [languageTypeCode] || jsondata[optionValue]['en-US']\n//   : jsondata[optionValue];\nreturn jsondata;});if(inputParam.userinfo.nformcode===161){dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,onExecute:false,loading:false,screenName:inputParam.component.displayname[languageTypeCode]}});}else{dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,// onExecute: false,\nloading:false,screenName:inputParam.component.displayname[languageTypeCode]}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function rearrangeDateFormatforKendoDataTool(userInfo,dateValue){var splitChar=\"/\";if(dateValue!==undefined){var index=userInfo.ssitedatetime&&userInfo.ssitedatetime.indexOf(\"/\"||\"-\");if(index!==-1)splitChar=userInfo.ssitedatetime.substring(index,index+1);}//   console.log(\"splitChar:\", splitChar);\nif((splitChar===\"/\"||splitChar===\"-\")&&typeof dateValue===\"string\"){var firstField=userInfo.ssitedatetime&&userInfo.ssitedatetime.split(splitChar)[0];// console.log(\"firstField:\", firstField);\nvar timeSplitChar=dateValue.indexOf(\"T\")!==-1?\"T\":\" \";var datetime=dateValue.split(timeSplitChar);var dateArray=datetime[0].split(splitChar);if(firstField===\"dd\"){var day=dateArray[0];var month=dateArray[1];var year=dateArray[2];var time=datetime[1]||\"00:00:00\";var formatted=year+\"-\"+month+\"-\"+day+\"T\"+time;return new Date(formatted);}else if(firstField===\"yyyy\"){var _year=dateArray[0];var _month=dateArray[1];var _day=dateArray[2];var _time=datetime[1]||\"00:00:00\";var _formatted=_year+\"-\"+_month+\"-\"+_day+\"T\"+_time;return new Date(_formatted);}else{return new Date(dateValue);}}else{return dateValue;}}export function preRegDispatch(inputParam){return function(dispatch){dispatch(initRequest(true));dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});};}export function validateEsignforRegistration(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"registration\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}//dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\ndispatch(dispatchMethods(inputParam[\"screenData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}function dispatchMethods(screenData){return function(dispatch){var action=screenData.inputParam.action;switch(action){case\"preregister\":dispatch(insertRegistration(screenData.inputParam,screenData.masterData));break;case\"editSample\":dispatch(updateRegistration(screenData.inputParam,screenData.masterData,'openModal'));break;case\"accept\":dispatch(acceptRegistration(screenData.inputParam,screenData.masterData));break;case\"quarantine\":dispatch(preregRecordToQuarantine(screenData.inputParam,screenData.masterData));break;case\"cancelTest\":dispatch(cancelTestAction(screenData.inputParam,screenData.masterData));break;case\"cancelSample\":dispatch(cancelSampleAction(screenData.inputParam,screenData.masterData));break;case\"addregsourcecountry\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;case\"deleteregsourcecountry\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;case\"printer\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;default:break;}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/RegistrationAction.js"],"names":["React","rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","childComboLoadForEdit","DEFAULT_RETURN","intl","initRequest","RegistrationSubType","RegistrationType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","Operators","TextFilter","NumericFilter","BooleanFilter","DateFilter","EnumFilter","EnumFilterProps","ComboBox","getSampleTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","data","item","type","payload","loading","catch","error","message","getSubSampleChildTabDetail","inputData","ntransactionsamplecode","length","inputParamData","userinfo","url","activeSubSampleTab","responseData","selectedSubSample","showFilter","screenName","activeTestTab","status","warn","selectedSample","activeSampleTab","FormattedMessage","id","getRegTypeChange","getRegSubTypeChange","onApprovalConfigVersionChange","getComponentTestBySpec","selectedRecord","Component","Test","slno","selectedComponent","undefined","SelectedTest","Object","keys","popUptestDataState","skip","take","getTestfromDB","objComponent","LoginProps","nflag","component","value","label","dreceiveddate","userInfo","nspecsampletypecode","TestData","loadComponent","selectComponent","showSaveContinue","SelectedSource","parentPopUpSize","CurrentTime","unshift","EditComponent","urlArray","ComponentTestBySpec","timezone","all","lstComponentMap","lstComponent","timeZoneListMap","TimeZoneField","get","timeZoneList","scomponentname","ncomponentcode","ntzdreceivedate","findIndex","x","ntimezonecode","stimezoneid","childoperation","ChildscreenName","openChildModal","ReloadData","searchSampleRef","current","searchSubSampleRef","searchTestRef","testskip","testtake","subsampletake","subsampleskip","showSample","getTreeByProduct","comboData","inputParam","Specification","AgaramTree","ActiveKey","FocusKey","OpenNodes","selectedSpec","sversion","ntemplatemanipulationcode","getNewRegSpecification","selectedNode","operation","methodUrl","ntreetemplatemanipulationcode","activeKey","focusKey","primaryKey","AddComponents","sreceiveddate","stzdreceivedate","scomments","nallottedspeccode","openPortal","openModal","getTest","nneedsubsample","specBasedComponent","selectPackage1","specBasedTestPackage","selectPackage","conditionalTestPackage","TestCombined","PackageData","PackageDataMap","componentTest","TestPackage","loadTest","formatMessage","addsubSample","columnList","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","isServiceRequired","SubSamplecomboData","timeZoneService","actualService","parentcolumnlist","childcolumnlist","TestGet","currentDate","dateService","datecolumnlist","filter","inputtype","timeZoneMap","defaultTimeZone","newcomboData","slanguagetypecode","comboData1","selectedRecord1","map","componentrow","loadcurrentdate","nperiodcode","Date","loadselecteddate","hidebeforedate","hideafterdate","radioOptions","tags","text","loadSubSample","parentSubSampleColumnList","childSubSampleColumnList","selectedTestData","componentTestPackage","selectedobject","Reg","Set","join","loadChildTest","availableTest","testPackageTest","subSampleBased","ntestpackagecode","addSubSampleSaveContinue","Map1","selectedTestPackageData","selectedTestPackageData1","some","y","selectedTestData1","masterStatus","editSubSample","Componnet","comp","nregsubtypecode","portalOrder","containerType","containerList","nportalordercode","jsondata","push","insertRegistration","rtn","RegistrationGetSample","RegistrationGetSubSample","RegistrationGetTest","selectedTest","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","postParamList","insertRegistrationScheduler","SchedulerTransaction","getRegistrationSample","selectedFilter","getRegistrationsubSampleDetail","nsampletypecode","nregtypecode","npreregno","ntransactionstatus","napprovalconfigcode","ndesigntemplatemappingcode","ntype","checkBoxOperation","activeName","dataStateName","subSample","skipInfo","oldSelectedTest","oldSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","RegistrationTestComment","RegistrationTestAttachment","RegistrationParameter","RegistrationComment","wholeSubSampleList","b","forEach","subsample","index","includes","splice","ResponseData","RegistrationTestComment1","ntransactiontestcode","RegistrationTestAttachment1","resultResponseData","RegistrationParameter1","ntransactiontestcode1","ResponseData1","RegistrationTestComment2","ntransactionTestCode","bool","wholeTestList","test","keepOld","sampleGridDataState","sort","attachmentskip","isGrandChildGetRequired","TestSelected","subSampleSelected","filterTestSameOldSelectedTest","filterSelectedSubSample","getRegistrationTestDetail","getTestChildTabDetailRegistration","subsamplecheck","SubSampleSelected","wholeSubSample","selectedSubSample1","dataStateArray","arr","selectedTransactionsamplecode","RegistrationSampleComment","RegistrationSampleAttachment","testList","wholeSubsampleList","activeTabIndex","toString","selectedTransactioncode","acceptRegistration","addMoreTest","ncontrolCode","sampleList","obj","slice","selectedsample","findTransactionStatus","REJECT","CANCELLED","CERTIFIED","SENT","findApprovalVersion","napprovalversioncode","findSampleSpec","props","createRegistrationTest","modalName","classUrl","getEditRegistrationComboService","comboComponents","withoutCombocomponent","primaryKeyName","editRegParam","mastertoedit","selectedRegistration","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","date","RealRegSubTypeValue","sregsubtypename","updateRegistration","regDateEditConfirmMessage","info","regEditParam","cancelTestAction","cancelSampleAction","addsubSampleRegistration","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","regchildSubSampleColumnList","saveSubSample","getEditSubSampleComboService","editSubSampleRegParam","formattedMessage","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","selectedSampleCode","selectedTestCode","activeTabId","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory","toTimestamp","strDate","dt","getTime","getDynamicFilter","languageTypeCode","lstData","gridColumns","fields","datefileds","multilingual","filterfields","filterObject","ismultilingual","columnname","filterinputtype","creategridColumns","JSON","parse","rearrangeDateFormatforKendoDataTool","mul","lstPatient","loadCustomSearchFilter","displayname","seletedFilterComponent","kendoSkip","kendoTake","kendoFilter","logic","filters","awesomeTree","awesomeConfig","filterObjectForReactAwesomeFilter","onExecute","datapredef","CustomFilter","defaultItem","onChange","onFilterChange","call","nextFilter","target","field","title","width","filterFields","resposedata","predefinedtablename","predefinedismultilingual","predefineddisplaymember","predefinedvaluemember","valueSources","mainWidgetProps","fieldSettings","numericcondition","listValues","preobj","name","operators","numeric","getDynamicFilterExecuteData","filterquery","nformcode","dateValue","splitChar","ssitedatetime","indexOf","substring","firstField","split","timeSplitChar","datetime","dateArray","day","month","year","time","formatted","preRegDispatch","validateEsignforRegistration","toLowerCase","dispatchMethods","screenData","action"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString, \r\n    fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement, \r\n    replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList,\r\n     constructjsonOptionDefault, childComboLoad, filterRecordBasedOnPrimaryKeyName, reArrangeArrays, childComboLoadForEdit\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { RegistrationSubType, RegistrationType, transactionStatus } from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\nimport {\r\n    Operators,\r\n    TextFilter,\r\n    NumericFilter,\r\n    BooleanFilter,\r\n    DateFilter,\r\n    EnumFilter,\r\n    EnumFilterProps,\r\n} from \"@progress/kendo-react-data-tools\";\r\nimport { ComboBox } from \"@progress/kendo-react-dropdowns\";\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactionsamplecode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSubSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"comments/getSubSampleComment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSubSample: inputData.selectedSubSample,\r\n                                    // selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSubSampleTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName,\r\n                                activeTestTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            //toast.warn(\"Please Select a Sample\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTASAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                // const RegistrationSubType = response.data[\"RegistrationSubType\"];\r\n\r\n                //  console.log(response.data);\r\n                // RegistrationSubType.length > 0 ?\r\n                //     selectedRecord[\"nregsubtypecode\"] = {\r\n                //         \"value\": RegistrationSubType[0].nregsubtypecode,\r\n                //         \"label\": RegistrationSubType[0].sregsubtypename\r\n                //     } : selectedRecord[\"nregsubtypecode\"] = \"\";\r\n                // const [labelname] = event.item;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function onApprovalConfigVersionChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getApprovalConfigBasedTemplateDesign\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getComponentTestBySpec(Map, selectedRecord, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getComponentTestBySpec\", Map)\r\n            .then(response => {\r\n                const { Component, Test } = response.data;\r\n                let slno = Component.length > 0 ? Component[0].slno : -1;\r\n                let selectedComponent = Component.length > 0 ? Component[0] : undefined\r\n                let SelectedTest = [];\r\n                if (Object.keys(Test).length > 0) {\r\n                    SelectedTest = Test[slno];\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectedComponent, loading: false,\r\n                        selectedRecord, popUptestDataState: { skip: 0, take: 10 }\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestfromDB(objComponent, LoginProps, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let component = { ...objComponent };\r\n        component[\"ncomponentcode\"] = objComponent[\"ncomponentcode\"] ? objComponent[\"ncomponentcode\"].value : -1;\r\n        component[\"nstoragelocationcode\"] = objComponent[\"nstoragelocationcode\"] ? objComponent[\"nstoragelocationcode\"].value : -1;\r\n        component[\"nstorageconditioncode\"] = objComponent[\"nstorageconditioncode\"] ? objComponent[\"nstorageconditioncode\"].value : -1;\r\n        component[\"slno\"] = LoginProps.Component ? Object.keys(LoginProps.Component).length + 1 : 0;\r\n        component[\"scomponentname\"] = objComponent[\"ncomponentcode\"].label;\r\n        component[\"sstoragelocationname\"] = objComponent[\"nstoragelocationcode\"] && objComponent[\"nstoragelocationcode\"].label ? objComponent[\"nstoragelocationcode\"].label : \"\";\r\n        component[\"sstorageconditionname\"] = objComponent[\"nstorageconditioncode\"] && objComponent[\"nstorageconditioncode\"].label ? objComponent[\"nstorageconditioncode\"].label : \"\";\r\n        component[\"ntzdmanufdate\"] = objComponent[\"ntzdmanufdate\"] ? objComponent[\"ntzdmanufdate\"].value : -1;\r\n        component[\"ntzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].value : -1;\r\n        component[\"stzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].label : \"\";\r\n        component[\"nplasmafilecode\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].value : -1;\r\n        component[\"splasmafilenumber\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].label : \"\";\r\n        const dreceiveddate = objComponent[\"dreceiveddate\"];\r\n        component[\"dreceiveddate\"] = dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\r\n        component[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\r\n        // rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: component.nspecsampletypecode,\r\n            slno: component.slno\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                let slno = component.slno;\r\n                let SelectedTest = [];\r\n                let loadComponent = true;\r\n                let selectComponent = {};\r\n                let showSaveContinue = true;\r\n                let SelectedSource = [];\r\n                // let openChildModal = true;\r\n                let selectedComponent = undefined;\r\n                let parentPopUpSize = \"lg\"\r\n                // selectComponent = objComponent\r\n                if (nflag === 1) {\r\n                    loadComponent = true;\r\n                    objComponent[\"smanuflotno\"] = \"\";\r\n                    objComponent[\"dreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    objComponent[\"sreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    selectComponent = objComponent;\r\n                } else {\r\n                    loadComponent = false;\r\n                    parentPopUpSize = \"xl\"\r\n                    // openChildModal = false;\r\n                    showSaveContinue = false;\r\n                    selectComponent = undefined\r\n                }\r\n                let Test = LoginProps.Test || [];\r\n                let Component = LoginProps.Component || [];\r\n                Component.unshift(component);\r\n                selectedComponent = component;\r\n                Test[slno] = response.data;\r\n                SelectedTest = TestData;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectComponent, selectedComponent,\r\n                        loadComponent, showSaveContinue, parentPopUpSize, loading: false, SelectedSource\r\n                    }\r\n                });\r\n                // console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                //   console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function EditComponent(Map, component, userInfo) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const TimeZoneField = response[1].data;\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n                component[\"dreceiveddate\"] = rearrangeDateFormat(userInfo, component[\"sreceiveddate\"]);\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n\r\n                let ntzdreceivedate = component.ntzdreceivedate;\r\n                if (component.ntzdreceivedate !== null && typeof component.ntzdreceivedate === \"object\") {\r\n                    ntzdreceivedate = component.ntzdreceivedate.value;\r\n                }\r\n                component[\"ntzdreceivedate\"] = component.ntzdreceivedate ?\r\n                    {\r\n                        \"label\": TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].stimezoneid, \"value\":\r\n                            TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].ntimezonecode\r\n                    } : \"\"\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true, childoperation: \"update\",\r\n                        lstComponent, ChildscreenName: \"Component\",\r\n                        openChildModal: false, selectComponent: component, parentPopUpSize: \"lg\",\r\n                        timeZoneList, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    //masterData['searchedTests'] = undefined\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // let selectedFilter = inputData.selectedFilter;\r\n                // selectedFilter[\"fromdate\"] = \"\";\r\n                // selectedFilter[\"todate\"] = \"\";\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined,\r\n                        //selectedFilter\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTreeByProduct(Map, selectedRecord, comboData, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getTreeByProduct\", Map)\r\n            .then(response => {\r\n                let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                const selectedSpec = {}\r\n                if (response.data[\"rtn\"] === true) {\r\n                    Specification = constructOptionList(response.data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response.data[\"AgaramTree\"];\r\n                    ActiveKey = response.data[\"ActiveKey\"];\r\n                    FocusKey = response.data[\"FocusKey\"];\r\n                    OpenNodes = response.data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1\r\n                }\r\n                selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Specification,\r\n                        selectedRecord,\r\n                        AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                        Test: [],\r\n                        SelectedTest: [],\r\n                        loading: false,\r\n                        comboData,\r\n                        ...inputParam,\r\n                        selectedSpec,\r\n                        Component: [],\r\n                        selectComponent: {},\r\n                        selectedComponent: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getNewRegSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedNode !== null) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam, ntreetemplatemanipulationcode: inputParam.selectedNode.ntemplatemanipulationcode })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let Specification = constructOptionList(response.data || [], \"nallottedspeccode\", \"sspecname\", false, false, true).get(\"OptionList\");\r\n                    let selectedComponent = undefined;\r\n                    inputParam.selectedRecord[\"nallottedspeccode\"] = Specification.length > 0 ? { value: Specification[0].value, label: Specification[0].label, item: Specification[0].item } : \"\";\r\n                    inputParam.selectedRecord[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\";\r\n                    inputParam.selectedRecord[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ActiveKey: inputParam.activeKey,\r\n                            FocusKey: inputParam.focusKey,\r\n                            primaryKey: inputParam.primaryKey,\r\n                            Specification: Specification,\r\n                            selectedNode: inputParam.selectedNode,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            Test: [],\r\n                            selectedComponent,\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            showSample: undefined\r\n                        }\r\n                    }\r\n                    );\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddComponents(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone\r\n        ]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                let dreceiveddate = null;\r\n                if (lstComponent[0].item.sreceiveddate)\r\n                    dreceiveddate = rearrangeDateFormat(Map[\"userinfo\"], lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\r\n\r\n                let selectComponent = {\r\n                    sreceiveddate: dreceiveddate,\r\n                    dreceiveddate,\r\n                    ntzdreceivedate: { \"label\": Map[\"userinfo\"].stimezoneid, \"value\": Map[\"userinfo\"].ntimezonecode },\r\n                    stzdreceivedate: Map[\"userinfo\"].stimezoneid,\r\n                    scomments: \"\",\r\n                    nallottedspeccode: lstComponent[0].item.nallottedspeccode\r\n                };\r\n                let CurrentTime = dreceiveddate;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true,\r\n                        lstComponent, dreceiveddate, ChildscreenName: \"Component\",\r\n                        showSaveContinue: true, openChildModal: false, childoperation: \"create\", selectComponent\r\n                        , parentPopUpSize: \"lg\", CurrentTime, timeZoneList, loading: false,\r\n                        openPortal: true, openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTest(objComponent, LoginProps, nneedsubsample, specBasedComponent,selectPackage1,specBasedTestPackage,selectPackage) {\r\n    return function (dispatch) {\r\n        if (Object.keys(objComponent).length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nspecsampletypecode: objComponent.nspecsampletypecode,\r\n                slno: objComponent.slno,\r\n                nneedsubsample: nneedsubsample,\r\n                nallottedspeccode: objComponent.nallottedspeccode,\r\n                specBasedComponent: specBasedTestPackage?false:specBasedComponent,\r\n                specBasedTestPackage:true,\r\n                conditionalTestPackage: true,\r\n            //    ntestpackagecode:selectPackage.ntestpackagecode.value\r\n\r\n            })\r\n                .then(response => {\r\n                    \r\n                    const TestCombined = [];\r\n                    let PackageData = [];\r\n                    if (specBasedTestPackage) {\r\n                        const PackageDataMap = constructOptionList(response.data || [], \"ntestpackagecode\",\r\n                            \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n                       // Map[\"selectPackage\"] = selectedobject\r\n\r\n                    }\r\n                    else {\r\n                        let TestData = response.data;\r\n                        let Test = LoginProps.Test || [];\r\n                        let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n                         TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestgrouptestcode\");\r\n                    }\r\n                    // const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\r\n                    //\"stestsynonym\", undefined, undefined, true);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            TestCombined, TestPackage:PackageData,selectPackage:[],\r\n                            loadTest: true, openChildModal: false,\r\n                            ChildscreenName: \"Test\",\r\n                            screenName: \"Test\",\r\n                            operation: \"create\",\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\", loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function addsubSample(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired,\r\n    SubSamplecomboData, selectedRecord,conditionalTestPackage,specBasedTestPackage) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList ? columnList : [],\r\n                childcolumnlist: childColumnList ? childColumnList : [],\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent) {\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent,\r\n                 //   conditionalTestPackage:true\r\n                })\r\n                urlArray[2] = ComponentTestBySpec;\r\n            } else {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage:true,\r\n                    specBasedTestPackage:specBasedTestPackage\r\n                })\r\n                urlArray[2] = TestGet;\r\n            }\r\n            const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                userinfo\r\n            })\r\n\r\n            urlArray[3] = currentDate\r\n\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo\r\n            })\r\n            urlArray[4] = dateService\r\n\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                let PackageData = []\r\n                if (specBasedComponent) {\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                } else {\r\n                    if (specBasedTestPackage) {\r\n                        const PackageDataMap = constructOptionList(response.data || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n                        \r\n                    }\r\n                    else {\r\n                        TestCombined = response[2].data\r\n                    }\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.loadcurrentdate) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                            selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                        } else if (componentrow.nperiodcode) {\r\n                            selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            if (componentrow.loadselecteddate) {\r\n                                selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                    new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            }\r\n                            //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                            //    new Date(response[2].data[componentrow.label]):null;\r\n                        } else {\r\n                            selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                        }\r\n\r\n                        if (componentrow.hidebeforedate) {\r\n                            selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n                        if (componentrow.hideafterdate) {\r\n                            selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n\r\n                    }\r\n                    else if (componentrow.inputtype === \"radio\") {\r\n                        selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                            componentrow.radioOptions.tags[0].text : \"\";\r\n                    }\r\n\r\n                })\r\n                //console.log(\"selectedRecord1 action1:\", selectedRecord1);\r\n                // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                //     let containerType = comboData1['Container Type'] || []\r\n                //     comboData1['ContainerType'] = comboData1['Container Type'] || []\r\n                //     let containerList = []\r\n                //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                //     containerType.map(x => {\r\n                //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                //             containerList.push(x)\r\n                //         }\r\n                //     })\r\n\r\n                //     comboData1['Container Type'] = containerList\r\n                // }\r\n\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChildscreenName: \"SubSample\",\r\n                        screenName: \"SubSample\",\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        SubSamplecomboData: comboData1,\r\n                        SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        parentSubSampleColumnList: columnList,\r\n                        childSubSampleColumnList: childColumnList,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                        selectPackage: [],\r\n                        TestPackage: PackageData                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList,\r\n            SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n        return (dispatch) => {\r\n            if (!specBasedComponent) {\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    ...Map,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage:true,\r\n                    specBasedTestPackage:specBasedTestPackage                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                Axios.all(urlArray).then(response => {\r\n                    let TestCombined = []\r\n                    let PackageData = []\r\n\r\n                    if (!specBasedTestPackage) {\r\n                         TestCombined = response[0].data\r\n                    } else {\r\n                        const PackageDataMap = constructOptionList(response[0].data || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n                    }\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\") {\r\n                            selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                componentrow.radioOptions.tags[0].text : \"\";\r\n                        }\r\n\r\n                    })\r\n                    // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    //     let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    //     let containerList = []\r\n                    //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    //     containerType.map(x => {\r\n                    //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                    //             containerList.push(x)\r\n                    //         }\r\n                    //     })\r\n\r\n                    //     SubSamplecomboData['Container Type'] = containerList\r\n                    // }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            screenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent: [],\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: selectedRecord1,\r\n                            TestCombined: TestCombined,\r\n                            TestPackage:PackageData\r\n                        }\r\n                    });\r\n                })\r\n            } else {\r\n                // Component = Component ? Component : []\r\n\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                Axios.all(urlArray).then(response => {\r\n                    // const lstComponent =  response.data.lstComponent\r\n                    let lstComponent = response[0].data.lstComponent //filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\r\n                    const lstComponentMap = constructOptionList(lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\") {\r\n                            selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                componentrow.radioOptions.tags[0].text : \"\";\r\n                        }\r\n\r\n                    })\r\n                    // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    //     let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    //     let containerList = []\r\n                    //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    //     containerType.map(x => {\r\n                    //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                    //             containerList.push(x)\r\n                    //         }\r\n                    //     })\r\n\r\n                    //     SubSamplecomboData['Container Type'] = containerList\r\n                    // }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            screenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent,\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: selectedRecord1,\r\n                            TestCombined: [],\r\n                            selectedTestData: [],\r\n                            selectPackage:[]\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport function componentTestPackage(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.selectedSubSample &&\r\n            [...new Set(selectedobject.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"),\r\n            conditionalTestPackage: true,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            specBasedComponent: specBasedComponent,\r\n            nallottedspeccode:selectedobject.selectedSample[0].nallottedspeccode\r\n\r\n        })\r\n            .then(response => {\r\n                let PackageData = []\r\n                let TestData=[]\r\n                if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response.data || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n                }\r\n                else {\r\n                     TestData = response.data;\r\n                }\r\n                //let Test = [];\r\n                // Test[selectedobject.slno] = TestData;\r\n                const Map = {}\r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectComponent\"] = selectedobject\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        TestCombined: TestData, TestPackage: PackageData, ...Map, loading: false, selectedTestData: [],\r\n                        selectPackage: [],\r\n                        screenName: \"IDS_TEST\",\r\n                        operation: \"create\",\r\n                        openModal: true,\r\n                        parentPopUpSize: \"lg\",\r\n                        loadChildTest: true,\r\n                      //  selectedRecord:{},\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function componentTest(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage:specBasedTestPackage,\r\n            conditionalTestPackage:conditionalTestPackage\r\n        })\r\n            .then(response => {\r\n                let PackageData = []\r\n                let TestData=[]\r\n                if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response.data || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n                }\r\n                else {\r\n                     TestData = response.data;\r\n                }\r\n                //let Test = [];\r\n                // Test[selectedobject.slno] = TestData;\r\n                const Map = {}\r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectComponent\"] = selectedobject\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        availableTest: TestData, TestPackage: PackageData, ...Map, loading: false, selectedTestData: [],\r\n                        selectPackage:[]\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function testPackageTest(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage,selectComponent,objComponent,LoginProps,selectPackage,subSampleBased,selectedSpec,nneedsubsample) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        rsapi.post(\"/registration/getTestBasesdTestPackage\", {\r\n            nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode: Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,\r\n            slno:subSampleBased?Component ? Object.keys(Component).length + 1 : 1:selectComponent.slno,\r\n            specBasedComponent: specBasedComponent,\r\n            ntestpackagecode: selectPackage.ntestpackagecode.value,\r\n            nallottedspeccode:selectedSpec!==undefined?selectedSpec.value:selectedobject.nallottedspeccode\r\n\r\n        })\r\n            .then(response => {\r\n                const Map = {}\r\n                let TestData = response.data;\r\n                let Test = LoginProps.Test || [];\r\n                let componentTest = [];\r\n                if (subSampleBased) {\r\n                    componentTest = Test[Component ? Object.keys(Component).length + 1 : 1] ? Test[Component ? Object.keys(Component).length + 1 : 1] : [];\r\n\r\n                } else {\r\n                     componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n\r\n                }\r\n                const availableTest = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestcode\");\r\n                const TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestcode\");\r\n\r\n                \r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectPackage\"] = selectPackage\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        availableTest,TestCombined, ...Map, loading: false, selectedTestData: []\r\n                        //, selectPackage: []\r\n                     // TestCombined,loadTest: true, openChildModal: false,\r\n                     // ChildscreenName: \"Test\",\r\n                    //  screenName: \"Test\",\r\n                    // operation: \"create\",\r\n                    //  childoperation: \"create\",\r\n                   //   parentPopUpSize: \"lg\", loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function addSubSampleSaveContinue(Map1, Map,\r\n    specBasedComponent, Component, selectedTestData, lstComponent) {\r\n\r\n    //  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n    //     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n    return (dispatch) => {\r\n        if (!specBasedComponent) {\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                nspecsampletypecode: Map[\"nspecsampletypecode\"],\r\n                slno: Map1.Component ? Object.keys(Map1.Component).length + 1 : 1,\r\n                specBasedComponent: specBasedComponent\r\n            }).then(response => {\r\n                let TestCombined = response.data\r\n                let selectedTestPackageData = selectedTestPackageData && selectedTestPackageData.length > 0 ? selectedTestData : []\r\n\r\n                const selectedTestPackageData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestPackageData.some(function (y) {\r\n                        return x[\"ntestpackagetestcode\"] === y.value\r\n                    })\r\n                });\r\n                selectedTestData = selectedTestData && selectedTestData.length > 0 ? selectedTestPackageData : []\r\n\r\n                const selectedTestData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestData.some(function (y) {\r\n                        return x[\"ntestgrouptestcode\"] === y.value\r\n                    })\r\n                });\r\n                // const selectedTestData2 = []\r\n                // TestCombined.map(x=>{\r\n                //     selectedTestData1.map(y=>{\r\n                //         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\r\n                //             selectedTestData2.push(x)\r\n                //         } \r\n                //     })\r\n                // });\r\n\r\n\r\n                //  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\r\n                // const filterArray = [...selectedTestData1, ...TestCombined]\r\n\r\n                selectedTestData = constructOptionList(selectedTestData1, \"ntestgrouptestcode\", \"stestsynonym\")\r\n                selectedTestData[\"ntestgrouptestcode\"] = selectedTestData.get(\"OptionList\")\r\n                selectedTestPackageData = constructOptionList(selectedTestPackageData1, \"ntestpackagetestcode\", \"stestpackagename\")\r\n                selectedTestPackageData[\"ntestpackagetestcode\"] = selectedTestPackageData.get(\"OptionList\")\r\n\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...Map1,\r\n                        loading: false,\r\n                        TestCombined,\r\n                        selectedTestData,\r\n                        selectedTestPackageData,\r\n                        masterStatus:intl.formatMessage({ id: \"IDS_SAVESUCCESSFULLY\" })\r\n                    }\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            // lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\r\n            Map1.selectComponent[\"ncomponentcode\"] = {};\r\n            Map1.selectComponent[\"Sample Name\"] = \"\";\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...Map1,\r\n                    loading: false,\r\n                    TestCombined: [],\r\n                    selectedTestData: [],\r\n                    selectedTestPackageData:[],\r\n                    lstComponent\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function editSubSample(Map,\r\n    component, userInfo, specBasedComponent,\r\n    SubSamplecomboData, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        let Componnet = {}\r\n        if (specBasedComponent) {\r\n            Componnet = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map\r\n            });\r\n        }\r\n        urlArray = [Componnet]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let comp = []\r\n                if (specBasedComponent) {\r\n                    comp = response[0].data.lstComponent\r\n                }\r\n                const lstComponentMap = constructOptionList(comp || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                if (Map.nregsubtypecode === 6) {\r\n                    let portalOrder = component['Container Type'] || {}\r\n                    let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    let containerList = []\r\n                    const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    containerType.map(x => {\r\n                        if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                            containerList.push(x)\r\n                        }\r\n                    })\r\n\r\n                    SubSamplecomboData['Container Type'] = containerList\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadSubSample: true, childoperation: \"update\",\r\n                        ChildscreenName: \"SubSample\",\r\n                        openChildModal: false, selectComponent: component,\r\n                        parentPopUpSize: \"lg\", loading: false, lstComponent, SubSamplecomboData\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                    let selectedSample = response.data[\"selectedSample\"];\r\n                    let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                    let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                    let selectedSubSample = RegistrationGetSubSample;\r\n                    RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                    let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                    if (inputParam.inputData.nneedsubsample) {\r\n                        RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                        selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                        RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                        selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                    }\r\n                    // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                    if (inputParam.multipleselectionFlag) {\r\n                        selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                        RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                        RegistrationGetTest = masterData.RegistrationGetTest;\r\n                    }\r\n\r\n\r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedSample, selectedSubSample, selectedTest,\r\n                        RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,\r\n                        showConfirmAlert: false,\r\n                        selectedRecord: undefined,\r\n                        loading: false,\r\n                        loadPreregister: false,\r\n                        showSample: undefined,\r\n                        openPortal: false,\r\n                        selectedSpec: {},\r\n                        selectComponent: {},\r\n                        SelectedTest: {},\r\n                        selectedComponent: {},\r\n                        Component: [],\r\n                        selectedRecord: {},\r\n                        SelectedTest: [],\r\n                        Test: [],\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: []\r\n                    }\r\n                    inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistrationScheduler(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/schedulerinsertRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // if (response.data.rtn === \"Success\") {\r\n                //     let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                //     let selectedSample = response.data[\"selectedSample\"];\r\n                //     let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                //     let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                //     let selectedSubSample = RegistrationGetSubSample;\r\n                //     RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                //     let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                //     if (inputParam.inputData.nneedsubsample) {\r\n                //         RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                //         selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                //         RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                //         selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                //     }\r\n                //     // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                //     if (inputParam.multipleselectionFlag) {\r\n                //         selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                //         updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                //         updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                //         RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                //         RegistrationGetTest = masterDat..a.RegistrationGetTest;\r\n                //     }\r\n\r\n\r\n                //     masterData = {\r\n                //         ...masterData, ...response.data,\r\n                //         selectedSample, selectedSubSample, selectedTest,\r\n                //         RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                //     }\r\n                let respObject = {\r\n                    masterData: { ...masterData, SchedulerTransaction: response[\"data\"].SchedulerTransaction },\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: undefined,\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined,\r\n                    openPortal: false,\r\n                    selectedSpec: {},\r\n                    selectComponent: {},\r\n                    SelectedTest: {},\r\n                    selectedComponent: {},\r\n                    Component: [],\r\n                    selectedRecord: {},\r\n                    SelectedTest: [],\r\n                    Test: [],\r\n                    selectedComponent: {},\r\n                    subSampleDataGridList: []\r\n                }\r\n                // inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                // dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                dispatch({ type: DEFAULT_RETURN, payload: { ...respObject } })\r\n                // } else {\r\n                //     toast.warn(response.data.rtn);\r\n                //     dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                // }\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationSample(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                let respObject = {};\r\n                if (inputData.selectedFilter) {\r\n                    respObject = { selectedFilter: { ...inputData.selectedFilter } };\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampleskip: 0,\r\n                        subsampletake: undefined,\r\n                        showSample: undefined,\r\n                        ...respObject,\r\n                        activeSampleTab: inputData.inputData.activeSampleTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeTestTab,\r\n            activeSubSampleTab: inputData.activeTestTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            ntype: inputData.checkBoxOperation === 7 ? 2 : undefined,\r\n            checkBoxOperation: inputData.nneedsubsample === true ?\r\n                inputData.checkBoxOperation === 5 ? 3 : inputData.checkBoxOperation : inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data, \"descending\", \"npreregno\");\r\n                    sortData(response.data['RegistrationAttachment']);\r\n                    sortData(response.data['RegistrationComment']);\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetSubSample[0]] : [],\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationComment = [];\r\n                        //if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \r\n                        if (inputData.checkBoxOperation === 1) {\r\n\r\n                            const wholeSubSampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const selectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.selectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 7) {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                            masterData[\"RegistrationComment\"] = RegistrationComment;\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3 || inputData.checkBoxOperation === 5) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: masterData.RegistrationGetTest.length > 0 ? [masterData.RegistrationGetTest[0]] : []\r\n                            }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                            masterData[\"RegistrationComment\"] = RegistrationComment;\r\n\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetSubSample.length < inputData.subsampleskip) {\r\n                            testskip = 0;\r\n                            subsampleskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                        }\r\n                    } else {\r\n\r\n                        //let oldSelectedTest = inputData.masterData.selectedTest\r\n                        //  let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample,\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationComment = [];\r\n\r\n                        if (inputData.checkBoxOperation === 7 || inputData.checkBoxOperation === 1) {\r\n                            const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            let npreregno;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest,\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                                npreregno = inputData.masterData.RegistrationGetSample.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetSample[0].npreregno : \"\"\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                            inputData.masterData.RegistrationTestAttachment : [] :\r\n                                            getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                        inputData.masterData.RegistrationTestComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = keepOld ? inputData.masterData.RegistrationComment ?\r\n                                        inputData.masterData.RegistrationComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationComment, npreregno, \"npreregno\")\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (inputData.checkBoxOperation === 5) {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                        }\r\n                        else {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                        [...response.data.RegistrationTestComment] : [];\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                            [...response.data.RegistrationTestAttachment] : [];\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                        masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                        masterData['RegistrationComment'] = RegistrationComment;\r\n\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\"\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n            // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n\r\n\r\n            if (inputData[\"statusNone\"]) {\r\n                TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let selectedSample = inputData.selectedSample;\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let selectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n                    inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                let ntransactiontestcode = selectedTest.length > 0 ? selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n                let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    selectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.RegistrationGetSubSample[0]];\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, selectedSample, selectedSubSample, selectedTest }\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3, skipInfo, masterData\r\n                }\r\n                if (subSample) {\r\n                    if (selectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = selectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                        dispatch(getRegistrationTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                }\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedPreregno: inputData.npreregno,\r\n                    selectedTest: TestSelected ? TestSelected : inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                    // RegistrationTestComment,\r\n                    selectedSubSample: subSampleSelected ? subSampleSelected : inputData.masterData.RegistrationGetSubSample\r\n                }\r\n                let subsamplecheck = true;\r\n                if (subSample) {\r\n                    let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                    if (SubSampleSelected.length > 0) {\r\n                        let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                        if (filterSelectedSubSample.length === 0) {\r\n                            let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((test, index) => {\r\n                                if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            if (oldSelectedSubSample.length === 0 && wholeSubSample.length > 0\r\n                                && masterData.selectedTest.length === 0) {\r\n                                const selectedSubSample1 = [inputData.masterData.RegistrationGetSubSample[0]];\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: selectedSubSample1,\r\n                                    selectedTest: []\r\n                                }\r\n                                inputData = { ...inputData, ...masterData }\r\n                                inputData[\"npreregno\"] = selectedSubSample1.map(x => x.npreregno).join(\",\")\r\n                                inputData[\"ntransactionsamplecode\"] = selectedSubSample1.map(x => x.ntransactionsamplecode).join(\",\")\r\n                                inputData[\"checkBoxOperation\"] = 3\r\n                                inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                                subsamplecheck = false;\r\n                                dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n                            }\r\n                        } else {\r\n                            oldSelectedSubSample = filterSelectedSubSample\r\n                        }\r\n\r\n                    } else {\r\n                        let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.forEach((test, index) => {\r\n                            if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (subsamplecheck) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedSubSample: oldSelectedSubSample\r\n                        }\r\n                    }\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampleskip, subsampletake }\r\n                    }\r\n                }\r\n                let wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getRegistrationTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation,\r\n            nneedsubsample: inputData.nneedsubsample\r\n\r\n        }\r\n        const subSample = inputData.nneedsubsample;\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    let oldSelectedSubSample = inputData.masterData.selectedSubSample || []\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedSubSample: inputData.selectedSubSample,\r\n                        selectedTransactionsamplecode: inputData.ntransactionsamplecode,\r\n                        selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                            [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                        // RegistrationTestComment,\r\n                    }\r\n                    //let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let RegistrationParameter = [];\r\n                    let RegistrationSampleComment = [];\r\n                    let RegistrationSampleAttachment = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.forEach((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n\r\n                        })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest,\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                    inputData.masterData.RegistrationTestComment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                    inputData.masterData.RegistrationTestAttachment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 5) {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 7) {\r\n                        let testList = reArrangeArrays(inputData.masterData.RegistrationGetSubSample, response.data.RegistrationGetTest, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: testList ? testList.length > 0 ? [testList[0]] : [] : [],\r\n                            RegistrationGetTest: testList ? testList.length > 0 ? testList : [] : [],\r\n                            //ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                // let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let RegistrationParameter1 = [...resultResponseData];\r\n                                let ntransactiontestcode1 = testList ? testList.length > 0 ? testList[0].ntransactiontestcode : inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1 : -1\r\n\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                    [...response.data.RegistrationTestComment] : [];\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                    [...response.data.RegistrationTestAttachment] : [];\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (subSample) {\r\n                        let wholeSubsampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.map((test, index) => {\r\n                            if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n                        if (oldSelectedSubSample.length > 0) {\r\n                            keepOld = true\r\n                        } else {\r\n                            ntransactionsamplecode = masterData.selectedSubSample[0].ntransactionsamplecode\r\n                        }\r\n\r\n                        switch (inputData.activeSubSampleTab) {\r\n                            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleComment\"\r\n                                dataStateName = \"subSampleCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleAttachment\"\r\n                                dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                    masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                    masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                    masterData[\"RegistrationSampleComment\"] = RegistrationSampleComment;\r\n                    masterData[\"RegistrationSampleAttachment\"] = RegistrationSampleAttachment;\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    let skipInfo = {}\r\n                    if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTabIndex: inputData.activeTabIndex,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString() : \"-1\";\r\n                let selectedSubSample = inputData.selectedSubSample;\r\n                // let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                let masterData = { ...inputData.masterData, selectedSubSample, selectedTest }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSubSample: inputData.selectedSubSample,\r\n                    selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                }\r\n\r\n                const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        activeTabIndex: inputData.activeTabIndex,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function acceptRegistration(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/acceptRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === undefined || response.data.rtn === \"Success\"\r\n                    || response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                    || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"RegistrationGetSample\"];\r\n                    delete response.data[\"RegistrationGetSubSample\"];\r\n                    delete response.data[\"RegistrationGetTest\"];\r\n                    let masterData = {\r\n                        ...LoginProps, ...response.data,\r\n                        selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                        selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                        selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showSample: undefined\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    if (response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                        || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                        toast.warn(intl.formatMessage({ id: response.data.rtn }));\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTest = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if (inputParam.selectedSample && inputParam.selectedSample.length > 0) {\r\n            if (inputParam.selectedSubSample && inputParam.selectedSubSample.length > 0) {\r\n                value = inputParam.selectedSubSample.some(obj => obj.nspecsampletypecode !== inputParam.selectedSubSample[0].nspecsampletypecode)\r\n                if (value) {\r\n                    return toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                }\r\n                sampleList = sampleList ? [...sampleList.slice(inputParam.skip, inputParam.take)] : [];\r\n                const selectedsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedSample, \"npreregno\");\r\n                // const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\r\n                if (selectedsample && selectedsample.length > 0) {\r\n                    const findTransactionStatus = [...new Set(selectedsample.map(item => item.ntransactionstatus))];\r\n\r\n                    if (findTransactionStatus.length === 1) {\r\n                        if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                            if (findTransactionStatus[0] !== transactionStatus.CERTIFIED && findTransactionStatus[0] !== transactionStatus.SENT) {\r\n                                const findApprovalVersion = [...new Set(selectedsample.map(item => item.napprovalversioncode))];\r\n                                if (findApprovalVersion.length === 1) {\r\n                                    const findSampleSpec = [...new Set(selectedsample.map(item => item.nallottedspeccode))];\r\n                                    //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                                    if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                                    {\r\n                                        inputParam[\"snspecsampletypecode\"] = inputParam.selectedSubSample &&\r\n                                            [...new Set(inputParam.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n                                        dispatch(initRequest(true));\r\n                                        rsapi.post(\"/registration/getMoreTest\", { ...inputParam })\r\n                                            .then(response => {\r\n                                                dispatch({\r\n                                                    type: DEFAULT_RETURN,\r\n                                                    payload: {\r\n                                                        availableTest: response.data,\r\n                                                        loadChildTest: true,\r\n                                                        loading: false, ncontrolCode,\r\n                                                        screenName: \"IDS_TEST\",\r\n                                                        operation: \"create\",\r\n                                                        openModal: true,\r\n                                                        parentPopUpSize: \"lg\",\r\n                                                        selectedRecord: {},\r\n                                                        showSample: undefined\r\n                                                    }\r\n                                                });\r\n                                            })\r\n                                            .catch(error => {\r\n                                                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                                if (error.response.status === 500) {\r\n                                                    toast.error(error.message);\r\n                                                } else {\r\n                                                    toast.warn(this.props.formatMessage({ id: error.response.data }));\r\n                                                }\r\n                                            });\r\n                                    } else {\r\n                                        toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                                    }\r\n                                } else {\r\n                                    toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                                }\r\n                            }\r\n                            else {\r\n                                toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\" }));\r\n                            }\r\n                        }\r\n                        else {\r\n                            ////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                        }\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n                }\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const createRegistrationTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let RegistrationGetTest = updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"], response.data[\"RegistrationGetTest\"]);\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationGetTest,\r\n                    selectedTest: response.data[\"RegistrationGetTest\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    // RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    [modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {}\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n                // dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         [modalName]: false,\r\n                //         loading: false,\r\n                //         loadChildTest: false,\r\n                //         showSample: undefined,\r\n                //         openModal: false,\r\n                //         selectedRecord: {}\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getEditRegistrationComboService(inputParam, columnList,\r\n    selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation, masterData } = { ...inputParam };\r\n\r\n        if (masterData[\"selectedSample\"].length > 1 ||\r\n            masterData[\"selectedSample\"]\r\n                .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n            === -1) {\r\n            inputParam.editRegParam[\"getSampleChildDetail\"] = true;\r\n        }\r\n        masterData[\"selectedSample\"] = [];\r\n        masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        const npreregno = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n        //     parentcolumnlist: columnList,\r\n        //     childcolumnlist: childColumnList,\r\n        //     userinfo: userInfo\r\n        // })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationDetails\", {\r\n            ...inputParam.editRegParam, npreregno, parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo:userInfo\r\n        })\r\n\r\n        urlArray = [timeZoneService, selectedRegistration,dateService]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n                // const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                //  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\r\n\r\n                \r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                \r\n                //  const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                // selectedRecord, childColumnList, withoutCombocomponent)\r\n\r\n                if (selectedRecord.ntransactionstatus === transactionStatus.CANCELLED\r\n                    || selectedRecord.ntransactionstatus === transactionStatus.REJECT) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSAMPLE\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n                                \r\n                                if(date.nperiodcode){\r\n                                    selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                                }else{\r\n                                    selectedRecord[date.label+ \"value\"] = new Date();\r\n                                }\r\n\r\n                                if (date.hidebeforedate) {\r\n                                    selectedRecord[date.label + \"min\"] =selectedRecord[date.label + \"value\"]\r\n                                }\r\n                                if (date.hideafterdate) {\r\n                                    selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                                }\r\n                        }\r\n                    })\r\n\r\n                    let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                    const selectedSpec = {}\r\n                    Specification = constructOptionList(response[1].data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response[1].data[\"AgaramTree\"];\r\n                    ActiveKey = response[1].data[\"FocusKey\"];\r\n                    FocusKey = response[1].data[\"ActiveKey\"];\r\n                    OpenNodes = response[1].data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ?\r\n                        Specification[0].item.ntemplatemanipulationcode : -1\r\n                    selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            AgaramTree,\r\n                            FocusKey,\r\n                            ActiveKey,\r\n                            OpenNodes,\r\n                            selectedSpec,\r\n                            Specification,\r\n                            // statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\r\n                            // currentTime,\r\n                            operation: \"update\",\r\n                            screenName: inputParam.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                            // PopUpLabel: popUpLabel,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openPortal: true,\r\n                            ncontrolCode: inputParam.editRegParam.ncontrolCode,\r\n                            loadPreregister: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            comboData: comboValues.comboData,\r\n                            childColumnList, comboComponents,\r\n                            withoutCombocomponent,\r\n                            columnList\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function updateRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    // sortData(response.data);\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], masterData.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                    //  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                    //let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedSample: response.data[\"selectedSample\"],\r\n                        // selectedSubSample: masterData[\"selectedSubSample\"],\r\n                        //selectedTest:masterData[\"selectedTest\"],\r\n                        // RegistrationGetTest,\r\n                        // RegistrationGetSubSample,\r\n                        RegistrationParameter: masterData[\"RegistrationParameter\"]\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, openPortal: false, loading: false, showConfirmAlert: false,\r\n                            regDateEditConfirmMessage: undefined, loadEsign: false, openModal: false,\r\n                            loadPreregister: false, selectedRecord: {}, showSample: undefined\r\n                        }\r\n                    });\r\n                    // let inputData = {\r\n                    //     masterData,\r\n                    //     selectedTest: masterData.selectedTest,\r\n                    //     ntransactiontestcode: masterData.selectedTest ?\r\n                    //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    //     npreregno: masterData.selectedSample ?\r\n                    //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    //     userinfo: inputParam.inputData.userinfo,\r\n                    //     activeTestTab : masterData.activeTestTab,\r\n                    //     screenName: masterData.activeTestTab,\r\n                    //     resultDataState: inputParam.resultDataState,\r\n                    //     testCommentDataState: inputParam.testCommentDataState,\r\n                    // }\r\n                    // dispatch(getTestChildTabDetail(inputData, true))\r\n                } else {\r\n                    toast.info(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelTest\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    // RegistrationGetTest:response.data[\"RegistrationGetTest\"],\r\n                    RegistrationGetTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\"),\r\n                    //  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSample\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function addsubSampleRegistration(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents,\r\n    regSubSamplewithoutCombocomponent, Map, ncontrolcode, specBasedComponent,specBasedTestPackage) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray[0] = timeZoneService;\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: regcolumnList,\r\n            childcolumnlist: regchildColumnList,\r\n            userinfo\r\n        })\r\n        urlArray[1] = actualService;\r\n\r\n        if (specBasedComponent) {\r\n            const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map,\r\n                specBasedComponent: specBasedComponent,\r\n                userinfo\r\n            })\r\n            urlArray[2] = ComponentTestBySpec;\r\n        } else {\r\n\r\n            const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                slno: 1,\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n                conditionalTestPackage:true\r\n\r\n            })\r\n            urlArray[2] = TestGet;\r\n        }\r\n        const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo\r\n        })\r\n\r\n        urlArray[3] = currentDate\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: regSubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo\r\n        })\r\n        urlArray[4] = dateService\r\n\r\n        Axios.all(urlArray).then(response => {\r\n            const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n            const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n            const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n            const newcomboData = parentChildComboLoad(regcolumnList, response[1].data,\r\n                selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n            let TestCombined = [];\r\n            let lstComponent = [];\r\n            let PackageData = [];\r\n            if (specBasedComponent) {\r\n                \r\n                const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n\r\n                lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n            } else {\r\n                if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response[2].data || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                        PackageData = PackageDataMap.get(\"OptionList\");\r\n                }\r\n                else {\r\n                    TestCombined = response[2].data;\r\n                }\r\n            }\r\n            const comboData1 = newcomboData.comboData\r\n            const selectedRecord1 = newcomboData.selectedRecord\r\n            regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                if (componentrow.inputtype === \"date\") {\r\n                    if (componentrow.loadcurrentdate) {\r\n                        selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                        selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                    } else if (componentrow.nperiodcode) {\r\n                        selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                            new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                        if (componentrow.loadselecteddate) {\r\n                            selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                        }\r\n                        //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                        //    new Date(response[2].data[componentrow.label]):null;\r\n                    } else {\r\n                        selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                    }\r\n\r\n                    if (componentrow.hidebeforedate) {\r\n                        selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                    }\r\n                    if (componentrow.hideafterdate) {\r\n                        selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                    }\r\n\r\n                }\r\n                else if (componentrow.inputtype === \"radio\") {\r\n                    selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                        componentrow.radioOptions.tags[0].text : \"\";\r\n                }\r\n\r\n            })\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    screenName: \"SubSample\",\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent,\r\n                    openModal: true,\r\n                    operation: \"create\",\r\n                    loadRegSubSample: true,\r\n                    selectedRecord: selectedRecord1,\r\n                    regSubSamplecomboData: comboData1,\r\n                    regSubSamplecomboComponents,\r\n                    regSubSamplewithoutCombocomponent,\r\n                    TestCombined,\r\n                    regparentSubSampleColumnList: regcolumnList,\r\n                    regchildSubSampleColumnList: regchildColumnList,\r\n                    ncontrolCode: ncontrolcode,\r\n                    timeZoneList,\r\n                    defaultTimeZone,\r\n                    masterData,\r\n                    specBasedComponent,\r\n                    specBasedTestPackage,\r\n                    TestPackage:PackageData\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function saveSubSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                // let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample, response.data[\"selectedSubSample\"]);\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample = response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n\r\n                let RegistrationParameter = response.data[\"RegistrationParameter\"]\r\n\r\n                RegistrationParameter = getSameRecordFromTwoArrays(RegistrationParameter, selectedTest, 'ntransactiontestcode')\r\n\r\n                let masterData = { ...inputParam.inputData.masterData }\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationParameter\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample: false\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                //    dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         openModal: false,\r\n                //         loadEsign: false,\r\n                //         loading: false,\r\n                //         showSample: undefined,\r\n                //         selectedRecord: {},\r\n                //         loadRegSubSample:false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getEditSubSampleComboService(inputParam, columnList, selectedRecord1,\r\n    childColumnList, comboComponents,\r\n    withoutCombocomponent, specBasedComponent) {\r\n    return function (dispatch) {\r\n\r\n        let { userInfo, operation, masterData } = { ...inputParam };\r\n\r\n        if (masterData[\"selectedSubSample\"].length > 1 ||\r\n            masterData[\"selectedSubSample\"]\r\n                .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n            === -1) {\r\n            inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] = true;\r\n        }\r\n\r\n        masterData[\"selectedSubSample\"] = [];\r\n        masterData[\"selectedSubSample\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        inputParam.editSubSampleRegParam[\"npreregno\"] = inputParam[\"mastertoedit\"][\"npreregno\"];\r\n        inputParam.editSubSampleRegParam[\"checkBoxOperation\"] = 3;\r\n        inputParam.editSubSampleRegParam[\"nfilterstatus\"] = inputParam[\"mastertoedit\"][\"ntransactionstatus\"];\r\n        inputParam.editSubSampleRegParam[\"napprovalconfigcode\"] = inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];\r\n        //inputParam.editSubSampleRegParam[\"withoutgetparameter\"] = 3;\r\n\r\n        const ntransactionsamplecode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        if (ntransactionsamplecode === undefined) {\r\n            toast.warn(intl.formattedMessage({ id: \"IDS_SELECTVALIDSUBSAMPLE\" }));\r\n        }\r\n        else {\r\n            let urlArray = [];\r\n\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            //     parentcolumnlist: columnList,\r\n            //     childcolumnlist: childColumnList,\r\n            //     userinfo: userInfo\r\n            // })\r\n            const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\", {\r\n                ...inputParam.editSubSampleRegParam, ntransactionsamplecode, parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo: userInfo\r\n            })\r\n\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo:userInfo\r\n            })\r\n    \r\n\r\n            urlArray = [timeZoneService, selectedRegistration,dateService]\r\n            // if(specBasedComponent){\r\n            //     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n            //         ...Map,\r\n            //         specBasedComponent: specBasedComponent\r\n            //     })\r\n            //     urlArray.push(ComponentTestBySpec) \r\n            // }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n\r\n                    selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n\r\n                    const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                    const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                    const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                    // if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\r\n                    //     toast.warn(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\r\n                    //     dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                    // }\r\n\r\n                    //else {\r\n                    //               let lstComponent=[]\r\n                    if (specBasedComponent) {\r\n                        selectedRecord[\"ncomponentcode\"] = { label: selectedRecord[\"scomponentname\"], value: selectedRecord[\"ncomponentcode\"] }\r\n                    }\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n                    // withoutCombocomponent.map(date => {\r\n                    //     if (date.inputtype === 'date')\r\n                    //         selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                    //             rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\r\n                    // })\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n                                \r\n                                if(date.nperiodcode){\r\n                                    selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                                }else{\r\n                                    selectedRecord[date.label+ \"value\"] = new Date();\r\n                                }\r\n\r\n                                if (date.hidebeforedate) {\r\n                                    selectedRecord[date.label + \"min\"] =selectedRecord[date.label + \"value\"]\r\n                                }\r\n                                if (date.hideafterdate) {\r\n                                    selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                                }\r\n                        }\r\n                    })\r\n\r\n                    selectedRecord = { ...selectedRecord }\r\n\r\n                    if (inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] === true) {\r\n                        masterData = { ...masterData, ...response[1].data[\"SubSampleChildDetail\"] };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            screenName: \"IDS_SUBSAMPLE\",\r\n                            operation: \"update\",\r\n                            specBasedComponent,\r\n                            //  regRecordToEdit:recordToEdit\r\n                            masterData\r\n                        }\r\n                    })\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    //console.log(\"error:\", error);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateSubSampleRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistrationSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                //  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    // selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                    // RegistrationGetSubSample,\r\n                    RegistrationParameter: response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: \"SubSample\",\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelSubSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    // selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function preregRecordToQuarantine(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/quarantineRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                // replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                delete response.data[\"RegistrationGetSample\"];\r\n                delete response.data[\"RegistrationGetSubSample\"];\r\n                delete response.data[\"RegistrationGetTest\"];\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestChildTabDetailRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                                activeTabIndex: inputData.activeTabIndex,\r\n                                activeTabId: inputData.activeTabId\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    activeTabIndex: inputData.activeTabIndex,\r\n                                    activeTabId: inputData.activeTabId,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst toTimestamp = (strDate) => {\r\n    // const dt = new Date(strDate).getTime();\r\n    // return dt / 1000;\r\n    const dt = strDate.getTime();\r\n    return dt;\r\n}\r\n\r\nexport function getDynamicFilter(inputParam) {\r\n    if (inputParam.component.inputtype === 'frontendsearchfilter') {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const source = inputParam.component.source\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const lstData = response.data[inputParam.component.label]\r\n\r\n\r\n                    // const responseparam={}\r\n                    const gridColumns = []\r\n                    const fields = []\r\n                    const datefileds = []\r\n                    const multilingual = []\r\n                    inputParam.component.filterfields.map(item => {\r\n                        fields.push(filterObject(item, languageTypeCode, response.data));\r\n                        if (item.ismultilingual) {\r\n                            multilingual.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype === \"date\") {\r\n                            datefileds.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype !== 'predefinednumeric') {\r\n                            gridColumns.push(creategridColumns(item, languageTypeCode,));\r\n                        }\r\n                    })\r\n\r\n                    const optionList = lstData.map(item => {\r\n                        const jsondata = item[source] ? item[source].value ?\r\n                            JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                        datefileds.map(x => {\r\n                            jsondata[x + \"timestamp\"] = toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo, jsondata[x]))\r\n                        })\r\n                        multilingual.map(mul => {\r\n                            jsondata[mul] =\r\n                                jsondata[mul][languageTypeCode] || jsondata[mul]['en-US']\r\n                                ;\r\n                        })\r\n\r\n\r\n                        return jsondata\r\n                    });\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList, gridColumns, fields,\r\n                            loadCustomSearchFilter: true\r\n                            , loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            kendoFilter: {\r\n                                logic: \"and\",\r\n                                filters: []\r\n                            },\r\n                            awesomeTree: undefined,\r\n                            awesomeConfig: undefined,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    } else if (inputParam.component.inputtype === \"backendsearchfilter\") {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const { fields, gridColumns } = filterObjectForReactAwesomeFilter(inputParam.component.filterfields, languageTypeCode, response.data)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: [], gridColumns, fields,\r\n                            loadCustomSearchFilter: true\r\n                            , loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            kendoFilter: {\r\n                                logic: \"and\",\r\n                                filters: []\r\n                            },\r\n                            awesomeTree: undefined,\r\n                            onExecute:true,\r\n                            awesomeConfig: undefined,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nlet datapredef = {}\r\nconst CustomFilter = props => {\r\n    const { filter, data = [], defaultItem } = props;\r\n    const onChange = event => {\r\n        props.onFilterChange.call(undefined, {\r\n            nextFilter: { ...props.filter, value: event.target.value.value }\r\n        });\r\n    };\r\n\r\n    return <ComboBox onChange={onChange} data={filter.field ? datapredef[filter.field] : []} textField=\"text\" />;\r\n};\r\n\r\nexport function creategridColumns(item, languageTypeCode) {\r\n    let obj = {}\r\n    if (item.filterinputtype !== 'predefinednumeric') {\r\n        return {\r\n            field: item.columnname,\r\n            title: item.displayname[languageTypeCode], width: \"200px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport function filterObjectForReactAwesomeFilter(filterFields, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    obj['fields'] = {}\r\n    obj['gridColumns'] = []\r\n    filterFields.map(item => {\r\n        if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n            const optionList = resposedata[item.predefinedtablename].map(data => {\r\n                const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                    JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n                jsondata['title'] = item.predefinedismultilingual ?\r\n                    jsondata[item.predefineddisplaymember]\r\n                    [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                    : jsondata[item.predefineddisplaymember];\r\n                jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n                return jsondata\r\n            });\r\n            datapredef[item.columnname] = optionList\r\n        }\r\n        switch (item.filterinputtype) {\r\n            case \"text\":\r\n                obj['fields'][item.type === 'dynamic' ? item.ismultilingual ?\r\n                    \"jsondata->'\" + item.columnname + \"'->>'\" + languageTypeCode + \"'\" :\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                   \"\\\"\"+ item.columnname+\"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"text\",\r\n                    valueSources: [\"value\", \"func\"],\r\n                    mainWidgetProps: {\r\n                        \"valueLabel\": \"Name\",\r\n                        \"valuePlaceholder\": \"Enter\" + item.displayname[languageTypeCode]\r\n                    }\r\n                }\r\n                break;\r\n            case \"numeric\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"(jsondata->>'\" + item.columnname + \"')::int\" :\r\n                    \"\\\"\"+ item.columnname+\"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"number\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        ...item.numericcondition\r\n                    }\r\n                }\r\n                break;\r\n            case \"date\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                    \"\\\"\"+ item.columnname+\"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"date\",\r\n                    valueSources: [\"value\"],\r\n                }\r\n                break;\r\n            case \"predefinednumeric\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"(jsondata->>'\" + item.columnname + \"')::int\" :\r\n                    \"\\\"\"+ item.columnname+\"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"predefinedtext\":\r\n                obj['fields'][item.type === 'dynamic' ? item.ismultilingual ?\r\n                    \"jsondata->'\" + item.columnname + \"'->>'\" + languageTypeCode + \"'\" :\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                    \"\\\"\"+ item.columnname+\"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n        const gridColumns = creategridColumns(item, languageTypeCode)\r\n        if (item.filterinputtype !== 'predefinednumeric') {\r\n            obj['gridColumns'].push(gridColumns)\r\n        }\r\n\r\n\r\n    })\r\n    return obj;\r\n}\r\n\r\nexport function filterObject(item, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    let preobj = {}\r\n    if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n        const optionList = resposedata[item.predefinedtablename].map(data => {\r\n            const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n            jsondata['text'] = item.predefinedismultilingual ?\r\n                jsondata[item.predefineddisplaymember]\r\n                [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                : jsondata[item.predefineddisplaymember];\r\n            jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n            //delete jsondata.jsondata\r\n            return jsondata\r\n        });\r\n        datapredef[item.columnname] = optionList\r\n        // preobj = {\r\n        //     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\r\n        //     predefinedvaluemember: item.columnname\r\n        // }\r\n    }\r\n    switch (item.filterinputtype) {\r\n        case \"text\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n        case \"numeric\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: NumericFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"date\":\r\n            return obj = {\r\n                name: item.columnname + \"timestamp\",\r\n                label: item.displayname[languageTypeCode],\r\n                filter: DateFilter,\r\n                operators: Operators.date,\r\n            }\r\n        case \"predefinednumeric\":\r\n\r\n\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"predefinedtext\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.text,\r\n            }\r\n        default:\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n\r\n    }\r\n\r\n    //return obj;\r\n}\r\n\r\nexport function getDynamicFilterExecuteData(inputParam) {\r\n    return function (dispatch) {\r\n        let obj = { ...inputParam.component, filterquery: inputParam.filterquery, userinfo: inputParam.userinfo }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\", obj)\r\n            .then(response => {\r\n                const source = inputParam.component.source\r\n                const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                const lstData = response.data[inputParam.component.label]\r\n                const multilingual = []\r\n                inputParam.component.filterfields.map(item => {\r\n                    if (item.ismultilingual) {\r\n                        multilingual.push(item.columnname)\r\n                    }\r\n                })\r\n                const optionList = lstData.map(item => {\r\n                    const jsondata = item[source] ? item[source].value ?\r\n                        JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                    multilingual.map(mul => {\r\n                        jsondata[mul] =\r\n                            jsondata[mul][languageTypeCode] || jsondata[mul]['en-US'];\r\n                    })\r\n                    // let label = isMultiLingual ?\r\n                    //   jsondata[optionValue]\r\n                    //   [languageTypeCode] || jsondata[optionValue]['en-US']\r\n                    //   : jsondata[optionValue];\r\n\r\n                    return jsondata\r\n                });\r\n                if (inputParam.userinfo.nformcode === 161) { \r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        lstPatient: optionList,\r\n                        onExecute: false,\r\n                        loading: false,\r\n                        screenName: inputParam.component.displayname[languageTypeCode]\r\n                    }\r\n                })\r\n            }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList,\r\n                           // onExecute: false,\r\n                            loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode]\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function rearrangeDateFormatforKendoDataTool(userInfo, dateValue) {\r\n    let splitChar = \"/\";\r\n\r\n    if (dateValue !== undefined) {\r\n        const index = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\" || \"-\")\r\n        if (index !== -1)\r\n            splitChar = userInfo.ssitedatetime.substring(index, index + 1)\r\n\r\n    }\r\n    //   console.log(\"splitChar:\", splitChar);\r\n    if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\r\n        const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n        // console.log(\"firstField:\", firstField);\r\n        const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n        const datetime = dateValue.split(timeSplitChar);\r\n        const dateArray = datetime[0].split(splitChar);\r\n        if (firstField === \"dd\") {\r\n            const day = dateArray[0];\r\n            const month = dateArray[1];\r\n            const year = dateArray[2];\r\n            const time = datetime[1] || \"00:00:00\";\r\n\r\n            const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n            return new Date(formatted);\r\n        }\r\n        else if (firstField === \"yyyy\") {\r\n            const year = dateArray[0];\r\n            const month = dateArray[1];\r\n            const day = dateArray[2];\r\n            const time = datetime[1] || \"00:00:00\";\r\n            const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n            return new Date(formatted);\r\n        }\r\n        else {\r\n            return new Date(dateValue);\r\n        }\r\n    }\r\n    else {\r\n        return dateValue;\r\n    }\r\n}\r\n\r\nexport function preRegDispatch(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        dispatch({\r\n            type: DEFAULT_RETURN,\r\n            payload: {\r\n                ...inputParam\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function validateEsignforRegistration(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"registration\";\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                    }\r\n                    //dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    dispatch(dispatchMethods(inputParam[\"screenData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\n\r\nfunction dispatchMethods(screenData) {\r\n    return (dispatch) => {\r\n        let action = screenData.inputParam.action\r\n        switch (action) {\r\n            case \"preregister\":\r\n                dispatch(insertRegistration(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"editSample\":\r\n                dispatch(updateRegistration(screenData.inputParam, screenData.masterData, 'openModal'));\r\n                break;\r\n            case \"accept\":\r\n                dispatch(acceptRegistration(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"quarantine\":\r\n                dispatch(preregRecordToQuarantine(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"cancelTest\":\r\n                dispatch(cancelTestAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"cancelSample\":\r\n                dispatch(cancelSampleAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"addregsourcecountry\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            case \"deleteregsourcecountry\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            case \"printer\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}