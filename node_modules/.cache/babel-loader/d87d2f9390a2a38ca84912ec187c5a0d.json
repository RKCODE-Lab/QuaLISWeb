{"ast":null,"code":"import React,{useState}from'react';import{injectIntl,FormattedMessage}from'react-intl';import{faPencilAlt,faPlus,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{process}from'@progress/kendo-data-query';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Row,Col,Nav,FormGroup,FormLabel,Card}from'react-bootstrap';import{ReadOnlyText}from'../../components/App.styles';import{parameterType,SampleType,transactionStatus}from'../../components/Enumeration';import PredefinedParameterTab from'../testmanagement/PredefinedParameterTab';import NumericParameterTab from'./NumericParameterTab';import{faEye}from'@fortawesome/free-regular-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';import{AtTableWrap}from'../../components/client-group.styles';import{Grid,GridColumn}from'@progress/kendo-react-grid';import ConfirmDialog from'../../components/confirm-alert/confirm-alert.component';import{ContentPanel}from'../product/product.styled';var TestGroupParameterAccordion=function TestGroupParameterAccordion(props){var isActionRequired=true;var gridHeight='auto';var parameterFieldName=[{\"sparametersynonym\":\"IDS_PARAMETERSYNONYM\"},{\"sdisplaystatus\":\"IDS_PARAMETERTYPE\"},{\"nsorter\":\"IDS_SORTER\"},{\"schecklistname\":\"IDS_CHECKLISTNAME\"},{\"schecklistversionname\":\"IDS_CHECKLISTVERSION\"},{\"nroundingdigits\":\"IDS_ROUNDINGDIGITS\",\"nparametertypecode\":parameterType.NUMERIC},{\"sunitname\":\"IDS_UNIT\",\"nparametertypecode\":parameterType.NUMERIC},{\"sreportmandatory\":\"IDS_REPORTMANDATORY\"},{\"sresultmandatory\":\"IDS_RESULTMANDATORY\"},//{ \"sspecdesc\": \"IDS_SPECDESCRIPTION\" }\n{\"sspecdesc\":\"IDS_PARAMETERDESCRIPTION\"},{\"sisadhocparameter\":\"IDS_ADHOCPARAMETER\"}];var specLimitFieldName=[{\"sminb\":\"IDS_MINB\"},{\"smaxb\":\"IDS_MAXB\"},{\"smina\":\"IDS_MINA\"},{\"smaxa\":\"IDS_MAXA\"},{\"sresultvalue\":\"IDS_DEFAULTRESULT\"}];var formulaFieldName=[{\"sformulaname\":\"IDS_FORMULANAME\"},{\"sformulacalculationdetail\":\"IDS_FORMULA\"}];var editParameterId=props.controlMap&&props.controlMap.has(\"EditParameter\")&&props.controlMap.get(\"EditParameter\").ncontrolcode;var editViewCLId=props.controlMap&&props.controlMap.has(\"EditParameter\")&&props.controlMap.get(\"EditParameter\").ncontrolcode;var selectedParameter=props.selectedParameter,userInfo=props.userInfo,userRoleControlRights=props.userRoleControlRights,testGroupTestFormula=props.testGroupTestFormula,testGroupTestNumericParameter=props.testGroupTestNumericParameter,testGroupTestPredefinedParameter=props.testGroupTestPredefinedParameter,testGroupCharParameter=props.testGroupCharParameter,selectedSpecification=props.selectedSpecification,filterData=props.filterData,testGroupTestClinicalSpec=props.testGroupTestClinicalSpec,optionalData=props.optionalData,selectedNode=props.selectedNode;var viewCheckListParam={nchecklistversioncode:selectedParameter.nchecklistversioncode,flag:1,ntransactionresultcode:0,userinfo:userInfo};var addClinicalSpec=props.controlMap&&props.controlMap.has(\"AddClinicalSpec\")&&props.controlMap.get(\"AddClinicalSpec\").ncontrolcode;var editClinicalSpec=props.controlMap&&props.controlMap.has(\"EditClinicalSpec\")&&props.controlMap.get(\"EditClinicalSpec\").ncontrolcode;var deleteClinicalSpec=props.controlMap&&props.controlMap.has(\"DeleteClinicalSpec\")&&props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode;return/*#__PURE__*/React.createElement(\"div\",{className:\"fixed_list_height\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end\"},selectedParameter&&selectedParameter.nchecklistversioncode!==-1&&/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:userRoleControlRights.indexOf(editViewCLId)===-1,onClick:function onClick(){return props.viewTestGroupCheckList(viewCheckListParam);},\"data-tip\":props.intl.formatMessage({id:\"IDS_VIEW\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:userRoleControlRights.indexOf(editParameterId)===-1,\"data-tip\":props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return props.editTestGroupParameter(\"update\",selectedParameter,userInfo,editParameterId,selectedSpecification,filterData,props.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})))),/*#__PURE__*/React.createElement(Row,null,parameterFieldName.map(function(item){return item.nparametertypecode===undefined||item.nparametertypecode&&item.nparametertypecode===props.testgrouptestparameter.nparametertypecode?Object.keys(item)[0]===\"sparametersynonym\"||Object.keys(item)[0]===\"sspecdesc\"?/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:Object.values(item)[0]})),/*#__PURE__*/React.createElement(ReadOnlyText,null,selectedParameter[Object.keys(item)[0]]))):/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:Object.values(item)[0]})),/*#__PURE__*/React.createElement(ReadOnlyText,null,selectedParameter[Object.keys(item)[0]]===\"NA\"?'-':selectedParameter[Object.keys(item)[0]]))):\"\";})),selectedParameter.nparametertypecode===parameterType.NUMERIC&&/*#__PURE__*/React.createElement(React.Fragment,null,testGroupTestNumericParameter&&testGroupTestNumericParameter.length>0&&props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))),/*#__PURE__*/React.createElement(Row,null,specLimitFieldName.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:Object.values(item)[0]})),/*#__PURE__*/React.createElement(ReadOnlyText,null,testGroupTestNumericParameter[0][Object.keys(item)[0]])));}))),testGroupTestFormula&&testGroupTestFormula.length>0&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))),/*#__PURE__*/React.createElement(Row,null,formulaFieldName.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:Object.values(item)[0]})),/*#__PURE__*/React.createElement(ReadOnlyText,null,testGroupTestFormula[0][Object.keys(item)[0]])));}))),props.masterData.selectedNode.nsampletypecode===SampleType.CLINICALTYPE&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters pt-2 pb-2 col-12 text-right border-bottom\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addclinicalspec\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addClinicalSpec)===-1,onClick:function onClick(){return props.openModal(\"create\",selectedParameter,userInfo,optionalData,props.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CLINICALSPEC\",defaultMessage:\"Clinical Spec\"}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(DataGrid,Object.assign({primaryKeyField:\"ntestgrouptestclinicspeccode\",expandField:\"expanded\"//detailedFieldList={props.detailedFieldList || []}\n,gridHeight:gridHeight+'px',extractedColumnList:props.extractedColumnList||[]//inputParam={props.inputParam}\n,userInfo:props.userInfo,scrollable:\"scrollable\"//gridHeight={'200px'}\n,isActionRequired:true//fixedScroll={true}\n,data:props.data,total:props.data&&props.data.length||0,dataState:props.dataState,dataStateChange:props.dataStateChange,dataResult:process(testGroupTestClinicalSpec||[],props.dataState)},props.dataState,{controlMap:props.controlMap,userRoleControlRights:[],methodUrl:\"testgrouptestclinicspeccode\",pageable:true,selectedId:props.selectedId,hasDynamicColSize:props.hasDynamicColSize,hideDetailBand:true,actionIcons:[{title:props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"mastertoedit\",hidden:userRoleControlRights.indexOf(editClinicalSpec)===-1,//onClick: (viewdetails) => this.ViewAuditDetails(viewdetails)\nonClick:function onClick(viewdetails){return props.EditSpecDetails(viewdetails,editClinicalSpec);}},{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"mastertodelete\",hidden:userRoleControlRights.indexOf(deleteClinicalSpec)===-1,onClick:function onClick(viewdetails){return props.DeleteSpecDetails(viewdetails,deleteClinicalSpec);}}]})))))),selectedParameter.nparametertypecode===parameterType.PREDEFINED&&/*#__PURE__*/React.createElement(PredefinedParameterTab,{primaryKeyName:\"ntestgrouptestpredefcode\",predefinedParameterList:testGroupTestPredefinedParameter,selectedParameter:selectedParameter,userInfo:userInfo,optionalData:{testgroupspecification:selectedSpecification},methodUrl:\"TestGroupPredefParameter\",addId:props.controlMap.has(\"AddCodedResult\")&&props.controlMap.get(\"AddCodedResult\").ncontrolcode,editId:props.controlMap.has(\"EditCodedResult\")&&props.controlMap.get(\"EditCodedResult\").ncontrolcode,deleteId:props.controlMap.has(\"DeleteCodedResult\")&&props.controlMap.get(\"DeleteCodedResult\").ncontrolcode,viewId:props.controlMap.has(\"ViewSubCodedResult\")&&props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode,userRoleControlRights:props.userRoleControlRights,deleteAction:props.deleteAction,onSwitchChange:props.onSwitchChange,openModal:props.addTestGroupCodedResult,subCodedResultView:props.subCodedResultView,masterData:props.masterData}),selectedParameter.nparametertypecode===parameterType.CHARACTER&&testGroupCharParameter.length>0&&props.testGroupCharParameter[0].scharname&&props.testGroupCharParameter[0].scharname!==\"null\"&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:\"IDS_TESTCHARACTER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,props.testGroupCharParameter[0].scharname)))));};export default injectIntl(TestGroupParameterAccordion);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupParameterAccordion.jsx"],"names":["React","useState","injectIntl","FormattedMessage","faPencilAlt","faPlus","faTrashAlt","process","FontAwesomeIcon","Row","Col","Nav","FormGroup","FormLabel","Card","ReadOnlyText","parameterType","SampleType","transactionStatus","PredefinedParameterTab","NumericParameterTab","faEye","DataGrid","AtTableWrap","Grid","GridColumn","ConfirmDialog","ContentPanel","TestGroupParameterAccordion","props","isActionRequired","gridHeight","parameterFieldName","NUMERIC","specLimitFieldName","formulaFieldName","editParameterId","controlMap","has","get","ncontrolcode","editViewCLId","selectedParameter","userInfo","userRoleControlRights","testGroupTestFormula","testGroupTestNumericParameter","testGroupTestPredefinedParameter","testGroupCharParameter","selectedSpecification","filterData","testGroupTestClinicalSpec","optionalData","selectedNode","viewCheckListParam","nchecklistversioncode","flag","ntransactionresultcode","userinfo","addClinicalSpec","editClinicalSpec","deleteClinicalSpec","indexOf","viewTestGroupCheckList","intl","formatMessage","id","editTestGroupParameter","masterData","map","item","nparametertypecode","undefined","testgrouptestparameter","Object","keys","values","length","nsampletypecode","CLINICALTYPE","openModal","extractedColumnList","data","dataState","dataStateChange","selectedId","hasDynamicColSize","title","controlname","objectName","hidden","onClick","viewdetails","EditSpecDetails","DeleteSpecDetails","PREDEFINED","testgroupspecification","deleteAction","onSwitchChange","addTestGroupCodedResult","subCodedResultView","CHARACTER","scharname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { faPencilAlt, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Row, Col, Nav, FormGroup, FormLabel, Card } from 'react-bootstrap';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { parameterType, SampleType, transactionStatus } from '../../components/Enumeration';\r\nimport PredefinedParameterTab from '../testmanagement/PredefinedParameterTab';\r\nimport NumericParameterTab from './NumericParameterTab';\r\nimport { faEye } from '@fortawesome/free-regular-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { AtTableWrap } from '../../components/client-group.styles';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ContentPanel } from '../product/product.styled';\r\n\r\n\r\n\r\nconst TestGroupParameterAccordion = (props) => {\r\n    const isActionRequired = true;\r\n    const gridHeight = 'auto'\r\n    const parameterFieldName = [\r\n        { \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\" },\r\n        { \"sdisplaystatus\": \"IDS_PARAMETERTYPE\" },\r\n        { \"nsorter\": \"IDS_SORTER\" },\r\n        { \"schecklistname\": \"IDS_CHECKLISTNAME\" },\r\n        { \"schecklistversionname\": \"IDS_CHECKLISTVERSION\" },\r\n        { \"nroundingdigits\": \"IDS_ROUNDINGDIGITS\", \"nparametertypecode\": parameterType.NUMERIC },\r\n        { \"sunitname\": \"IDS_UNIT\", \"nparametertypecode\": parameterType.NUMERIC },\r\n        { \"sreportmandatory\": \"IDS_REPORTMANDATORY\" }, { \"sresultmandatory\": \"IDS_RESULTMANDATORY\" },\r\n        //{ \"sspecdesc\": \"IDS_SPECDESCRIPTION\" }\r\n        { \"sspecdesc\": \"IDS_PARAMETERDESCRIPTION\" },\r\n        { \"sisadhocparameter\":\"IDS_ADHOCPARAMETER\"}\r\n    ];\r\n\r\n\r\n    const specLimitFieldName = [\r\n        { \"sminb\": \"IDS_MINB\" }, { \"smaxb\": \"IDS_MAXB\" },\r\n        { \"smina\": \"IDS_MINA\" }, { \"smaxa\": \"IDS_MAXA\" },\r\n        { \"sresultvalue\": \"IDS_DEFAULTRESULT\" }\r\n    ];\r\n    const formulaFieldName = [{ \"sformulaname\": \"IDS_FORMULANAME\" }, { \"sformulacalculationdetail\": \"IDS_FORMULA\" }];\r\n    const editParameterId = props.controlMap && props.controlMap.has(\"EditParameter\") && props.controlMap.get(\"EditParameter\").ncontrolcode;\r\n    const editViewCLId = props.controlMap && props.controlMap.has(\"EditParameter\") && props.controlMap.get(\"EditParameter\").ncontrolcode;\r\n    const { selectedParameter, userInfo, userRoleControlRights, testGroupTestFormula, testGroupTestNumericParameter,\r\n        testGroupTestPredefinedParameter, testGroupCharParameter, selectedSpecification, filterData, testGroupTestClinicalSpec, optionalData,selectedNode } = props;\r\n    const viewCheckListParam = { nchecklistversioncode: selectedParameter.nchecklistversioncode, flag: 1, ntransactionresultcode: 0, userinfo: userInfo };\r\n    const addClinicalSpec = props.controlMap && props.controlMap.has(\"AddClinicalSpec\") && props.controlMap.get(\"AddClinicalSpec\").ncontrolcode;\r\n    const editClinicalSpec = props.controlMap && props.controlMap.has(\"EditClinicalSpec\") && props.controlMap.get(\"EditClinicalSpec\").ncontrolcode;\r\n    const deleteClinicalSpec = props.controlMap && props.controlMap.has(\"DeleteClinicalSpec\") && props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode;\r\n\r\n    return (\r\n\r\n        <div className=\"fixed_list_height\">\r\n            <Row>\r\n                <Col md={12} className=\"d-flex justify-content-end\">\r\n                    {selectedParameter && selectedParameter.nchecklistversioncode !== -1 &&\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={userRoleControlRights.indexOf(editViewCLId) === -1}\r\n                            onClick={() => props.viewTestGroupCheckList(viewCheckListParam)}\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_VIEW\" })}>\r\n                            <FontAwesomeIcon icon={faEye} />\r\n                        </Nav.Link>\r\n                    }\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                        hidden={userRoleControlRights.indexOf(editParameterId) === -1}\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                        onClick={() => props.editTestGroupParameter(\"update\", selectedParameter, userInfo, editParameterId, selectedSpecification, filterData,\r\n                            props.masterData)}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </Nav.Link>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n            <Row>\r\n\r\n                {parameterFieldName.map(item => {\r\n                    return (\r\n                        item.nparametertypecode === undefined\r\n                            || (item.nparametertypecode\r\n                                && item.nparametertypecode === props.testgrouptestparameter.nparametertypecode) ?\r\n                            (Object.keys(item)[0] === \"sparametersynonym\" || Object.keys(item)[0] === \"sspecdesc\") ?\r\n                                <Col md=\"12\">\r\n                                    <FormGroup>\r\n                                        <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                        <ReadOnlyText>{selectedParameter[Object.keys(item)[0]]}</ReadOnlyText>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                : <Col md=\"6\">\r\n                                    <FormGroup>\r\n                                        <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                        <ReadOnlyText>{selectedParameter[Object.keys(item)[0]] === \"NA\" ? '-' : selectedParameter[Object.keys(item)[0]]}</ReadOnlyText>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            : \"\"\r\n\r\n                    )\r\n                }\r\n                )}\r\n            </Row>\r\n\r\n            {selectedParameter.nparametertypecode === parameterType.NUMERIC &&\r\n                <>\r\n                    {testGroupTestNumericParameter && testGroupTestNumericParameter.length > 0 && props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE &&\r\n                        <>\r\n                            <Row>\r\n                                <Col >\r\n                                    <div className=\"horizontal-line\"></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {specLimitFieldName.map(item => {\r\n                                    return (\r\n                                        <Col md=\"6\">\r\n                                            <FormGroup>\r\n                                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                                <ReadOnlyText>{testGroupTestNumericParameter[0][Object.keys(item)[0]]}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                    {testGroupTestFormula && testGroupTestFormula.length > 0 &&\r\n                        <>\r\n                            <Row>\r\n                                <Col >\r\n                                    <div className=\"horizontal-line\"></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {formulaFieldName.map(item => {\r\n                                    return (\r\n                                        <Col md=\"6\">\r\n                                            <FormGroup>\r\n                                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                                <ReadOnlyText>{testGroupTestFormula[0][Object.keys(item)[0]]}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        </>\r\n                    }\r\n\r\n                    {props.masterData.selectedNode.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                        <>\r\n                            <Row className=\"no-gutters pt-2 pb-2 col-12 text-right border-bottom\">\r\n                                <Col md={12}>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                \r\n                            <Nav.Link name=\"addclinicalspec\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addClinicalSpec) === -1}\r\n                        onClick={() =>  props.openModal(\"create\", selectedParameter, userInfo, optionalData, props.masterData)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_CLINICALSPEC\" defaultMessage=\"Clinical Spec\" />\r\n                    </Nav.Link>\r\n                                       \r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* {props.siteAddress.nmanufsitecode === props.masterData.ManufacturerSiteAddress.nmanufsitecode ? */}\r\n                            <Row>\r\n                                <Col>\r\n                                    {/* <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Body className='form-static-wrap padding-class'> */}\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"ntestgrouptestclinicspeccode\"}\r\n                                                    expandField=\"expanded\"\r\n\r\n                                                    //detailedFieldList={props.detailedFieldList || []}\r\n                                                    gridHeight={gridHeight + 'px'}\r\n                                                    extractedColumnList={props.extractedColumnList || []}\r\n                                                    //inputParam={props.inputParam}\r\n                                                    userInfo={props.userInfo}\r\n                                                    scrollable={\"scrollable\"}\r\n                                                    //gridHeight={'200px'}\r\n                                                    isActionRequired={true}\r\n                                                    //fixedScroll={true}\r\n                                                    data={props.data}\r\n                                                    total={props.data && props.data.length || 0}\r\n                                                    dataState={props.dataState}\r\n                                                    dataStateChange={props.dataStateChange}\r\n                                                    dataResult={process(testGroupTestClinicalSpec || [], props.dataState)}{...props.dataState}\r\n                                                    controlMap={props.controlMap}\r\n                                                    userRoleControlRights={[]}\r\n                                                    methodUrl=\"testgrouptestclinicspeccode\"\r\n                                                    pageable={true}\r\n                                                    selectedId={props.selectedId}\r\n                                                    hasDynamicColSize={props.hasDynamicColSize}\r\n                                                    hideDetailBand={true}\r\n                                                    actionIcons={[{\r\n                                                        title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                        controlname: \"faPencilAlt\",\r\n                                                        objectName: \"mastertoedit\",\r\n                                                        hidden: userRoleControlRights.indexOf(editClinicalSpec) === -1,\r\n                                                        //onClick: (viewdetails) => this.ViewAuditDetails(viewdetails)\r\n                                                        onClick: (viewdetails) => props.EditSpecDetails(viewdetails,editClinicalSpec)\r\n\r\n                                                    },\r\n                                                    {\r\n                                                        title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                        controlname: \"faTrashAlt\",\r\n                                                        objectName: \"mastertodelete\",\r\n                                                        hidden: userRoleControlRights.indexOf(deleteClinicalSpec) === -1,\r\n                                                        onClick: (viewdetails) => props.DeleteSpecDetails(viewdetails,deleteClinicalSpec)\r\n                                                    }\r\n                                                    ]}\r\n\r\n\r\n\r\n                                                >\r\n                                                </DataGrid>\r\n\r\n                                            {/* </Card.Body>\r\n                                        </Card>\r\n                                    </ContentPanel> */}\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                </>\r\n            }\r\n            {selectedParameter.nparametertypecode === parameterType.PREDEFINED &&\r\n                <PredefinedParameterTab\r\n                    primaryKeyName=\"ntestgrouptestpredefcode\"\r\n                    predefinedParameterList={testGroupTestPredefinedParameter}\r\n                    selectedParameter={selectedParameter}\r\n                    userInfo={userInfo}\r\n                    optionalData={{ testgroupspecification: selectedSpecification }}\r\n                    methodUrl=\"TestGroupPredefParameter\"\r\n                    addId={props.controlMap.has(\"AddCodedResult\") && props.controlMap.get(\"AddCodedResult\").ncontrolcode}\r\n                    editId={props.controlMap.has(\"EditCodedResult\") && props.controlMap.get(\"EditCodedResult\").ncontrolcode}\r\n                    deleteId={props.controlMap.has(\"DeleteCodedResult\") && props.controlMap.get(\"DeleteCodedResult\").ncontrolcode}\r\n                    viewId={props.controlMap.has(\"ViewSubCodedResult\") && props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    deleteAction={props.deleteAction}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    openModal={props.addTestGroupCodedResult}\r\n                    subCodedResultView={props.subCodedResultView}\r\n                    masterData={props.masterData}\r\n                />\r\n            }\r\n            {selectedParameter.nparametertypecode === parameterType.CHARACTER &&\r\n                testGroupCharParameter.length > 0 && props.testGroupCharParameter[0].scharname &&\r\n                props.testGroupCharParameter[0].scharname !== \"null\" &&\r\n                <>\r\n                    <Row>\r\n                        <Col >\r\n                            <div className=\"horizontal-line\"></div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Col md={12}>\r\n                        <FormGroup>\r\n                            <FormLabel>{props.intl.formatMessage({ id: \"IDS_TESTCHARACTER\" })}</FormLabel>\r\n                            <ReadOnlyText>{props.testGroupCharParameter[0].scharname}</ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupParameterAccordion);\r\n"]},"metadata":{},"sourceType":"module"}