{"ast":null,"code":"import { initRequest } from './LoginAction';\nimport rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify'; //\tALPD-5322\tAdded action file by Vishakh for Out Of Specification screen\n\nexport function getOOSMasterData(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"oos/getOOS\", inputParam.inputData).then(response => {\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const getOosMasterDetail = (OosMasterItem, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"oos/getActiveOosMasterById\", {\n      noosmastercode: OosMasterItem.noosmastercode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function onSaveOOSWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData).then(response => {\n      const masterData = { ...inputParam.inputData.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n} // export function onSaveOOSMasterChecklist(inputParam) {\n//     return function (dispatch) {\n//         let listResultCheckList = [];\n//         if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\n//             inputParam.selectedRecord.editedQB.map(qbcode =>\n//                 listResultCheckList.push(inputParam.selectedRecord[qbcode]))\n//             let inputParamData = {\n//                 noosmastercode: inputParam.inputData.noosmastercode,\n//                 OOSMasterChecklist: {\n//                     nchecklistcode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistcode\n//                         && inputParam.selectedRecord.nchecklistcode.value,\n//                     nchecklistversioncode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistversioncode\n//                         && inputParam.selectedRecord.nchecklistversioncode.value,\n//                     jsondata: inputParam.selectedRecord.jsondata,\n//                     noosmastercode: inputParam.inputData.noosmastercode,\n//                 },\n//                 userinfo: inputParam.inputData.userinfo,\n//                 ncontrolcode: -1\n//             }\n//             dispatch(initRequest(true));\n//             rsapi.post(\"oos/createOOSMasterChecklist\", inputParamData)\n//                 .then(response => {\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             selectedRecord: {},\n//                             templateData: undefined,\n//                             openTemplateModal: false,\n//                             openModal: false,\n//                             loading: false,\n//                             loadEsign: false\n//                         }\n//                     })\n//                 })\n//                 .catch(error => {\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             loading: false,\n//                             loadEsign: false\n//                         }\n//                     })\n//                     if (error.response.status === 500) {\n//                         toast.error(error.message);\n//                     } else {\n//                         toast.warn(error.response.data);\n//                     }\n//                 })\n//         } else {\n//             dispatch({\n//                 type: DEFAULT_RETURN,\n//                 payload: {\n//                     openTemplateModal: false,\n//                     selectedRecord: {},\n//                     loading: false,\n//                     loadEsign: false\n//                 }\n//             })\n//         }\n//     }\n// }\n\nexport function onSaveOOSChecklistQb(inputParam) {\n  return function (dispatch) {\n    let listResultCheckList = [];\n\n    if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\n      inputParam.selectedRecord.editedQB.map(qbcode => listResultCheckList.push(inputParam.selectedRecord[qbcode]));\n      let inputParamData = {\n        noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\n        OOSChecklistQb: {\n          jsondata: inputParam.selectedRecord.jsondata,\n          noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode\n        },\n        userinfo: inputParam.inputData.userinfo,\n        ncontrolcode: -1\n      };\n      dispatch(initRequest(true));\n      rsapi.post(\"oos/createOOSChecklistQb\", inputParamData).then(response => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            selectedRecord: {},\n            selectedId: \"\",\n            templateData: undefined,\n            openModal: false,\n            loading: false,\n            loadEsign: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openTemplateModal: false,\n          selectedRecord: {},\n          loading: false,\n          loadEsign: false\n        }\n      });\n    }\n  };\n}\nexport function deleteOOSWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/OOSMasterAction.js"],"names":["initRequest","rsapi","DEFAULT_RETURN","toast","getOOSMasterData","inputParam","dispatch","post","inputData","then","response","responseData","data","masterData","type","payload","loading","catch","error","status","message","warn","getOosMasterDetail","OosMasterItem","userInfo","noosmastercode","userinfo","onSaveOOSWorkFlowTransaction","classUrl","operation","methodUrl","formData","openModal","undefined","onSaveOOSChecklistQb","listResultCheckList","selectedRecord","jsondata","editedQB","map","qbcode","push","inputParamData","noosworkflowtransactioncode","OOSChecklistQb","ncontrolcode","selectedId","templateData","loadEsign","openTemplateModal","deleteOOSWorkFlowTransaction"],"mappings":"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","sourcesContent":["import { initRequest } from './LoginAction';\r\nimport rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\n\r\n//\tALPD-5322\tAdded action file by Vishakh for Out Of Specification screen\r\nexport function getOOSMasterData(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"oos/getOOS\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport const getOosMasterDetail = (OosMasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"oos/getActiveOosMasterById\", { noosmastercode: OosMasterItem.noosmastercode, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function onSaveOOSWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.inputData.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export function onSaveOOSMasterChecklist(inputParam) {\r\n//     return function (dispatch) {\r\n//         let listResultCheckList = [];\r\n//         if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\r\n//             inputParam.selectedRecord.editedQB.map(qbcode =>\r\n//                 listResultCheckList.push(inputParam.selectedRecord[qbcode]))\r\n//             let inputParamData = {\r\n//                 noosmastercode: inputParam.inputData.noosmastercode,\r\n//                 OOSMasterChecklist: {\r\n//                     nchecklistcode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistcode\r\n//                         && inputParam.selectedRecord.nchecklistcode.value,\r\n//                     nchecklistversioncode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistversioncode\r\n//                         && inputParam.selectedRecord.nchecklistversioncode.value,\r\n//                     jsondata: inputParam.selectedRecord.jsondata,\r\n//                     noosmastercode: inputParam.inputData.noosmastercode,\r\n//                 },\r\n//                 userinfo: inputParam.inputData.userinfo,\r\n//                 ncontrolcode: -1\r\n//             }\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"oos/createOOSMasterChecklist\", inputParamData)\r\n//                 .then(response => {\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             selectedRecord: {},\r\n//                             templateData: undefined,\r\n//                             openTemplateModal: false,\r\n//                             openModal: false,\r\n//                             loading: false,\r\n//                             loadEsign: false\r\n//                         }\r\n//                     })\r\n//                 })\r\n//                 .catch(error => {\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             loading: false,\r\n//                             loadEsign: false\r\n//                         }\r\n//                     })\r\n//                     if (error.response.status === 500) {\r\n//                         toast.error(error.message);\r\n//                     } else {\r\n//                         toast.warn(error.response.data);\r\n//                     }\r\n//                 })\r\n//         } else {\r\n//             dispatch({\r\n//                 type: DEFAULT_RETURN,\r\n//                 payload: {\r\n//                     openTemplateModal: false,\r\n//                     selectedRecord: {},\r\n//                     loading: false,\r\n//                     loadEsign: false\r\n//                 }\r\n//             })\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport function onSaveOOSChecklistQb(inputParam) {\r\n    return function (dispatch) {\r\n        let listResultCheckList = [];\r\n        if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\r\n            inputParam.selectedRecord.editedQB.map(qbcode =>\r\n                listResultCheckList.push(inputParam.selectedRecord[qbcode]))\r\n            let inputParamData = {\r\n                noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                OOSChecklistQb: {\r\n                    jsondata: inputParam.selectedRecord.jsondata,\r\n                    noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                },\r\n                userinfo: inputParam.inputData.userinfo,\r\n                ncontrolcode: -1\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"oos/createOOSChecklistQb\", inputParamData)\r\n                .then(response => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            selectedRecord: {},\r\n                            selectedId: \"\",\r\n                            templateData: undefined,\r\n                            openModal: false,\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    openTemplateModal: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadEsign: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteOOSWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}