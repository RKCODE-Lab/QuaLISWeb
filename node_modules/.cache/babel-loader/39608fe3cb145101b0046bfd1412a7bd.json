{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel,Form,Button,FormControl,InputGroup}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PerfectScrollbar from'react-perfect-scrollbar';import{faTrashAlt,faCopy,faPencilAlt,faSync,faPlus,faThumbsUp,faBoxOpen,faBox,faLocationArrow,faFolderMinus,faFolder,faFolderOpen,faArrowRight,faSearch,faTimes,faArrowDown,faHandPointLeft,faArrowUp,faClone,faPuzzlePiece,faCalculator,faEye,faTrashRestore}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import{constructOptionList,convertDateValuetoString,getControlMap,onSaveMandatoryValidation,rearrangeDateFormat,searchData,searchJsonData,showEsign,sortData}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel,SearchIcon}from'../../components/App.styles';//import SortableTree from 'react-sortable-tree'; \nimport FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DataGrid from'../../components/data-grid/data-grid.component';import{BasicConfig,BasicFuncs,Utils as QbUtils}from\"@react-awesome-query-builder/ui\";import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService,crudMaster,validateEsignCredential,updateStore,getSelectedSampleStorageLocation,filterColumnData,changeStorageCategoryFilter,openPropertyModal,editSampleStorageLocation,approveSampleStorageLocation,getSelectedSampleStorageVersion,fetchStorageCategory,copySampleStorageVersion,crudSampleStorageLocation}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';import{MediaLabel,ProductList}from'../product/product.styled';// import ReactTooltip from 'react-tooltip';\nimport{uuid}from\"uuidv4\";import TreeEditable from\"../../components/form-tree-editable/TreeEditable\";import TreeViewEditable from\"../../components/form-tree-editable/form-tree-editable.component\";import{getItemPath,mapTree,removeItems}from\"@progress/kendo-react-treelist\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import AddTreeview from'./AddTreeview';import AddTreeProperties from'./AddTreeProperties';import{Splitter}from'@progress/kendo-react-layout';import TransactionListMaster from'../../components/TransactionListMaster';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import SplitterLayout from'react-splitter-layout';import StorageCategoryFilter from'./StorageCategoryFilter';import{transactionStatus}from'../../components/Enumeration';import Esign from'../audittrail/Esign';import{TreeViewDragAnalyzer,moveTreeViewItem}from'@progress/kendo-react-treeview';import ModalShow from'../../components/ModalShow';import rsapi from'../../rsapi';import AddSampleStorageMapping from'./AddSampleStorageMapping';import Axios from'axios';import StorageMappingFilter from'./StorageMappingFilter';import Preloader from'../../components/preloader/preloader.component';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';import{groupBy,process}from'@progress/kendo-data-query';//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\nimport MatrixComponent from'../../components/MatrixComponent';import FilterQueryBuilder from'../../components/FilterQueryBuilder';import{Grid,GridColumn}from'@progress/kendo-react-grid';import FormInput from'../../components/form-input/form-input.component';import AdvFilter from'../../components/AdvFilter';import DateTimePicker from\"../../components/date-time-picker/date-time-picker.component\";var SampleStorageRetrieval=/*#__PURE__*/function(_Component){_inherits(SampleStorageRetrieval,_Component);var _super=_createSuper(SampleStorageRetrieval);function SampleStorageRetrieval(props){var _this$state;var _this;_classCallCheck(this,SampleStorageRetrieval);_this=_super.call(this,props);_this.dragOverCnt=0;_this.isDragDrop=false;_this.SEPARATOR='_';_this.uniqueIDArr=[];_this.countforTree=0;_this.pointedItem=undefined;_this.getitemPath={};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: false, selectedRecord: {}\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedId=_this.props.Login.selectedId;var selectedRecord=_this.state.selectedRecord;//this.props.Login.selectedRecord;\nif(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"Approve\"||_this.props.Login.operation===\"copy\"){loadEsign=false;openModal=false;selectedRecord={};selectedId=null;}else{loadEsign=false;}}else{openModal=false;selectedId=null;selectedRecord={};}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { openModal, loadEsign, selectedRecord, selectedId }\n// }\n// this.props.updateStore(updateInfo);\n// this.getsamplestoragetransaction({}, this.props.Login.userInfo);\n// if (!this.state.isFilterPopup) {\n//     this.getDynamicFilterExecuteData()\n// }\n_this.onFilterSubmit();_this.setState({selectedRecord:selectedRecord,openModal:false,isInitialRender:true,isFilterPopup:false,isRetrieveOrDispose:false});};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties(saveType,formRef);}else if(_this.state.openSpreadSheet){_this.CRUDSampleStorageTransaction(_objectSpread(_objectSpread({},_this.state.editedsheetData),{},{nsamplestoragemappingcode:_this.state.isMultiSampleAdd?Object.keys(_this.state.sheetData).map(function(nsamplestoragemappingcode){return nsamplestoragemappingcode;}).join(\",\"):_this.state.editedsheetData.nsamplestoragemappingcode.toString(),nsamplestoragelocationcode:_this.state.editedsheetData.nsamplestoragelocationcode,sheetData:JSON.stringify(_this.state.sheetData?_this.state.sheetData:{}),sheetUpdate:true,userinfo:_this.props.Login.userInfo,isMultiSampleAdd:_this.state.isMultiSampleAdd}),'create');}else{_this.onSaveSampleStorageTransaction(saveType,formRef);}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.openFilter=function(){// let showFilter = !this.props.Login.showFilter\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { showFilter }\n// }\n// this.props.updateStore(updateInfo);\nvar boolean=!_this.state.showFilter;_this.setState({showFilter:boolean});};_this.closeFilter=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { showFilter: false }\n// }\n// this.props.updateStore(updateInfo);\n_this.setState({showFilter:false});};_this.reloadData=function(){_this.onFilterSubmit();};_this.onEditSampleStorageLocation=function(selectedSampleStorageVersion,userInfo,editId){_this.handleSearch();_this.setState({searchedTreeData:undefined});if(_this.searchRef.current){_this.searchRef.current.value=\"\";}var isOnlyDraft=false;if(_this.props.Login.masterData.sampleStorageVersion&&_this.props.Login.masterData.sampleStorageVersion.length>1){isOnlyDraft=true;}_this.props.editSampleStorageLocation(selectedSampleStorageVersion,userInfo,isOnlyDraft,editId);};_this.openStorageMapping=function(addId){_this.addSampleStorageMapping({userInfo:_this.props.Login.userInfo,addId:addId});};_this.deletesamplestoragemapping=function(param){_this.CRUDSampleStorageTransaction({'nsamplestoragelocationcode':_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,'nsamplestoragemappingcode':param.nsamplestoragemappingcode,userinfo:_this.props.Login.userInfo},'delete');};_this.addMultipleSample=function(param){_this.setState({//sheetData: JSON.parse(response[0].data.sheetData),\nopenModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});};_this.opensearch=function(){_this.setState({openModal:true,isFilterPopup:true,selectedRecord:_objectSpread({},_this.state.submittedselectedRecord)||_objectSpread({},_this.state.selectedRecord)});};_this.openRetrieveDispose=function(){_this.setState({openModal:true,isRetrieveOrDispose:true,dynamicfields:[],selectedBarcodeValue:{}});};_this.addSample=function(param,nflag){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragemappingSheetData\",{isMultiSampleAdd:nflag===2?true:false,nsamplestoragemappingcode:nflag===2?_this.state.masterData.samplestorageretrieval.map(function(item){return item.nsamplestoragemappingcode;}).join(\",\"):param.nsamplestoragemappingcode.toString()});urlArray=[url1];Axios.all(urlArray).then(function(response){if(nflag===2){_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});}else{_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:false,openSpreadSheet:true,editedsheetData:param,Rows:param.nrow,columns:param.ncolumn,loading:false});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var selectedProjectType=_this.state.selectedProjectType||{};var selectedRecordFilter=_this.state.selectedRecordFilter||{};if(fieldName==='nstoragecategorycode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainertypecode'){return _this.getContainerStructure({userinfo:_this.props.Login.userInfo,ncontainertypecode:comboData.value},fieldName,comboData);}else if(fieldName==='nprojecttypecode'){///return this.getprojectbarcodeconfig(comboData);\nselectedProjectType[fieldName]=comboData;selectedRecord[fieldName]=comboData;_this.setState({selectedProjectType:selectedProjectType,selectedRecord:selectedRecord});}else if(fieldName==='ncontainerstructurecode'){selectedRecord['nrow']=comboData.item.nrow?comboData.item.nrow:1;selectedRecord['ncolumn']=comboData.item.ncolumn?comboData.item.ncolumn:1;}else if(fieldName==='nsamplestoragelocationcode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:_this.state.selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value},fieldName,comboData);}if(fieldName==='nsamplestorageversioncode'){selectedRecordFilter[fieldName]=comboData;_this.setState({selectedRecordFilter:selectedRecordFilter});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,selectedRecordFilter:selectedRecordFilter});}};_this.onSaveSampleStorageTransaction=function(saveType){var selectedRecord=_this.state.selectedRecord;var containerpathCodeArray=[];if(_this.state.operation==='create'){containerpathCodeArray=selectedRecord['nsamplestoragecontainerpathcode'].map(function(item){return item.value;});}var inputParam={nsamplestoragetransactioncode:selectedRecord['nsamplestoragetransactioncode']?parseInt(selectedRecord['nsamplestoragetransactioncode']):0,nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,nsamplestoragemappingcode:selectedRecord['nsamplestoragemappingcode']?parseInt(selectedRecord['nsamplestoragemappingcode']):0,ncontainertypecode:-1,nproductcode:selectedRecord['nproductcode'].value,ndirectionmastercode:-1,ssamplestoragemappingname:\"-\",nsamplestoragecontainerpathcode:_this.state.operation==='create'?JSON.stringify(containerpathCodeArray):parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),containerpathsize:containerpathCodeArray.length,nneedposition:4,ncontainerstructurecode:-1,nquantity:selectedRecord['nquantity']?parseInt(selectedRecord['nquantity']):1,userinfo:_this.props.Login.userInfo};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.CRUDSampleStorageTransaction(inputParam,_this.state.operation);}};_this.getsamplestoragetransaction=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragetransaction\",{userinfo:_this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.childDataChange=function(selectedRecord){_this.setState({selectedRecord:_objectSpread({},selectedRecord),isInitialRender:false});};_this.childSheetDataChange=function(sheetData){_this.setState({// selectedRecord: {\n//     ...this.state.selectedRecord,\n//     sheetData: {\n//         ...this.state.selectedRecord.sheetData,\n//         ...sheetData\n//     }\n// },\nsheetData:_objectSpread({},sheetData),isInitialRender:false});};_this.getActiveSampleStorageMappingById=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getActiveSampleStorageMappingById\",{nsamplestoragelocationcode:inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,userinfo:userinfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data)//,\n// selectedRecord: {\n//     ...this.state.selectedRecord\n//    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\n// }\n,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.filterColumnData=function(filterValue,filterParam){var masterData=filterParam.masterData;var primaryKeyValue=0;var searchedData=undefined;if(filterValue===\"\"){if(masterData[filterParam.inputListName]&&masterData[filterParam.inputListName].length>0){primaryKeyValue=masterData[filterParam.inputListName][0][filterParam.primaryKeyField];}}else{if(filterParam.isjsondata){searchedData=searchJsonData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}else{searchedData=searchData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}if(searchedData.length>0){primaryKeyValue=searchedData[0][filterParam.primaryKeyField];}}if(primaryKeyValue!==0){_this.setState({loading:true});return rsapi.post(filterParam.fetchUrl,_objectSpread(_objectSpread({},filterParam.fecthInputObject),{},_defineProperty({},filterParam.primaryKeyField,primaryKeyValue))).then(function(response){masterData[\"searchedData\"]=searchedData;masterData=_objectSpread(_objectSpread({},masterData),response.data);if(filterParam.sortField){sortData(masterData,filterParam.sortOrder,filterParam.sortField);}else{sortData(masterData);}_this.setState({masterData:masterData,loading:false,skip:0,take:10,selectedId:null});}).catch(function(error){_this.setState({loading:false});if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});}else{masterData[filterParam.selectedObject]=undefined;masterData[\"searchedData\"]=[];Object.keys(masterData).forEach(function(item){if(item!==filterParam.inputListName&&item!==filterParam.selectedObject&&filterParam.unchangeList&&filterParam.unchangeList.indexOf(item)===-1)masterData[item]=[];});_this.setState({masterData:masterData,operation:null,modalName:undefined,loading:false});}};_this.CRUDSampleStorageTransaction=function(inputParam,operation){if(_this.state.selectedRecord&&_this.state.selectedRecord.spositionvalue!==\"\"&&_this.state.selectedRecord.spositionvalue!==undefined){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/\"+operation+\"samplestorageretrieval\",inputParam);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({isInitialRender:true,selectedRecord:{},masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),selectedBarcodeValue:{},dynamicfields:[],//openModal: false,\nloading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}_this.setState({loading:false});});}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERSAMPLEID\"}));}};_this.onFilterSubmit=function(){_this.getprojectbarcodeconfig(true);// this.setState({ loading: true })\n// let inputParamData = {\n//     nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\n//     // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\n//     // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\n//     userinfo: this.props.Login.userInfo,\n// }\n// let urlArray = [];\n// const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\n// urlArray = [url1];\n// Axios.all(urlArray)\n//     .then(response => {\n//         let object = {\n//             selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\n//             // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\n//             // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\n//         }\n//         let filterData = this.generateBreadCrumData(object);\n//         this.setState({\n//             filterData,\n//             masterData: {\n//                 ...this.state.masterData,\n//                 ...response[0].data,\n//                 //   samplestorageretrieval: response[0].data['samplestorageretrieval'],\n//             },\n//             loading: false\n//         });\n//     }).catch(error => {\n//         if (error.response.status === 500) {\n//             toast.error(error.message);\n//         } else {\n//             toast.warn(error.response.data);\n//         }\n//         this.setState({\n//             loading: false\n//         });\n//     });\n};_this.onSampleMappingSaveClick=function(){var mandatoryFields=_this.state.openSpreadSheet?[]:_this.state.selectedRecord[\"nneedposition\"]===undefined||_this.state.selectedRecord[\"nneedposition\"]===false?[{\"idsName\":\"IDS_SAMPLESTORAGEMAPPING\",\"dataField\":\"nsamplestoragecontainerpathcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"nproductcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_AVAILABLESPACE\",\"dataField\":\"nquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}]:[{\"idsName\":\"IDS_SAMPLESTORAGEMAPPING\",\"dataField\":\"nsamplestoragecontainerpathcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"nproductcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"ncontainertypecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CONTAINERSTRUCTURENAME\",\"dataField\":\"ncontainerstructurecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_DIRECTION\",\"dataField\":\"ndirectionmastercode\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_AVAILABLESPACE\",\"dataField\":\"nquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}];onSaveMandatoryValidation(_this.state.selectedRecord,mandatoryFields,_this.onSaveClick);};_this.dataStateChange=function(event){_this.setState({dataStateChange:event.dataState});};_this.approveSampleStorageMapping=function(event){var inputParamData={};_this.setState({loading:true});inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/approveSampleStorageMapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.fetchRecord=function(data){_this.setState({loading:true});var selectedRecord=_this.state.selectedRecord;var inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':_this.props.Login.userInfo});var url3=rsapi.post(\"samplestorageretrieval/getEditSampleStorageMapping\",{'nsamplestoragemappingcode':data.nsamplestoragemappingcode,'userinfo':_this.props.Login.userInfo});urlArray=[url1,url2,url3];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[2].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var editedObject=response[2].data.editsampleStorageMapping;storageMappingMapList.unshift({label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode});selectedRecord={ndirectionmastercode:{label:editedObject.sdirection,value:editedObject.ndirectionmastercode},nsamplestoragecontainerpathcode:{label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode},nproductcode:{label:editedObject.sproductname,value:editedObject.nproductcode},ncontainertypecode:{label:editedObject.scontainertype,value:editedObject.ncontainertypecode},ncontainerstructurecode:{label:editedObject.scontainerstructurename,value:editedObject.ncontainerstructurecode},nneedposition:editedObject.nneedposition===3?true:false,directionmasterOptions:directionmasterList,nquantity:editedObject.nquantity,nrow:editedObject.nrow,ncolumn:editedObject.ncolumn,nsamplestoragemappingcode:editedObject.nsamplestoragemappingcode};_this.setState({openSpreadSheet:false,openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,containerStructureOptions:containerstructureList,isInitialRender:true}),operation:'update',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.retrievalType=function(){var retrievalType=_this.state.retrievalType;if(retrievalType===1){retrievalType=2;}else{retrievalType=1;}_this.setState({retrievalType:retrievalType});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handlePageChangeFilter=function(event){_this.setState({kendoSkip:event.skip,kendoTake:event.take});};_this.onChange=function(immutableTree,config){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"tree\"]=immutableTree;selectedRecord[\"config\"]=config;selectedRecord['filterquery']=QbUtils.sqlFormat(immutableTree,config);_this.setState({tree:immutableTree,config:config,selectedRecord:selectedRecord});};_this.processWithGroups=function(data,dataState){var aggregates=[{field:\"navailablespace\",aggregate:\"sum\"}];var groups=dataState.group;if(groups){groups.map(function(group){return group.aggregates=aggregates;});}dataState.group=groups;var newDataState=process(data,dataState);// setGroupIds({\n//     data: newDataState.data,\n//     group: dataState.group,\n// });\nreturn newDataState;};_this.handleFilterDateChange=function(dateName,dateValue){var masterData=_this.state.masterData;masterData[dateName]=dateValue;_this.setState({masterData:masterData});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.state=(_this$state={retrievalType:1,// extractedColumnList: [   \n//     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\n//     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\n//     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\n//     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\n// ],\nsheetData:{},selectedRecordFilter:{},treeData:[{title:'Chicken',children:[{title:'Egg'}]}],toggleAction:false,treeDataView:undefined,toggleActionView:false},_defineProperty(_this$state,\"treeData\",[{//  text: \"root\",\ntext:_this.props.intl.formatMessage({id:\"IDS_ROOT\"}),expanded:true,editable:true,root:true,id:uuid()}]),_defineProperty(_this$state,\"panes\",[{size:'50%',scrollable:false}]),_defineProperty(_this$state,\"selectedRecord\",{}),_defineProperty(_this$state,\"userRoleControlRights\",[]),_defineProperty(_this$state,\"controlMap\",new Map()),_defineProperty(_this$state,\"skip\",0),_defineProperty(_this$state,\"detailSkip\",0),_defineProperty(_this$state,\"detailTake\",10),_defineProperty(_this$state,\"take\",_this.props.Login.settings?_this.props.Login.settings[3]:25),_defineProperty(_this$state,\"splitChangeWidthPercentage\",22),_defineProperty(_this$state,\"selectedItem\",undefined),_defineProperty(_this$state,\"loading\",false),_defineProperty(_this$state,\"dataStateChange\",{take:10,skip:0// group: [\n//     {\n//         field: \"ssamplestoragelocationname\",\n//     },\n// ],\n}),_this$state);var fields={};// if (this.state.extractedColumnList) {\n//     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\n//     // ,...this.state.extractedColumnList]\n//     this.state.extractedColumnList.map(field => {\n//         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\n//             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\n//             fields = {\n//                 ...fields,\n//                 [field.dataField]: {\n//                     \"label\":\n//                         this.props.intl.formatMessage({\n//                             id: field.idsName,\n//                         })\n//                     ,\n//                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\n//                     \"valueSources\": [\"value\", \"func\"],\n//                     \"mainWidgetProps\": {\n//                         \"valueLabel\": \"Name\",\n//                         \"valuePlaceholder\": this.props.intl.formatMessage({\n//                             id: field.idsName\n//                         })\n//                     }\n//                 }\n//             }\n//         }\n//     });\n// }\n_this.state=_objectSpread(_objectSpread({},_this.state),{},{'fields':fields});_this.searchRef=React.createRef();_this.dragClue=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageRetrieval,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var _this2=this;var _this$state2=this.state,filterData=_this$state2.filterData,storageCategoryOptions=_this$state2.storageCategoryOptions,selectedRecord=_this$state2.selectedRecord,controlMap=_this$state2.controlMap,userRoleControlRights=_this$state2.userRoleControlRights,storageLocationOptions=_this$state2.storageLocationOptions,sampleStorageVersionOptions=_this$state2.sampleStorageVersionOptions,masterData=_this$state2.masterData,selectedRecordFilter=_this$state2.selectedRecordFilter,fields=_this$state2.fields,selectedProjectType=_this$state2.selectedProjectType,selectedProjectTypeList=_this$state2.selectedProjectTypeList,breadCrumbdata=_this$state2.breadCrumbdata;var bool=false;///////////////////////////////\nif(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){var queryBuilderFreezer=[];bool=true;this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.map(function(item){return queryBuilderFreezer.push({\"value\":item.nsamplestoragelocationcode,\"title\":item.ssamplestoragelocationname});});fields=_objectSpread(_objectSpread({},fields),{},{'nsamplestoragelocationcode':{\"label\":this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":queryBuilderFreezer}}});}// if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\n//     )\n//     fields = {\n//         ...fields,\n//         'nproductcode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PRODUCT\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n// if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\n//     )\n//     fields = {\n//         ...fields,\n//         'nprojecttypecode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PROJECTTYPE\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\n//     )\n//     fields = {\n//         ...fields,\n//         'nvisitnumbercode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_VISITNUMBER\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n///////////////////////////////\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){bool=true;userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.filterStorageCategory!==previousProps.Login.masterData.filterStorageCategory){bool=true;var filterStorageCategorylist=constructOptionList(this.props.Login.masterData.filterStorageCategory||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,undefined);storageCategoryOptions=filterStorageCategorylist.get(\"OptionList\");if(this.props.Login.masterData.selectedStorageCategory){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nstoragecategorycode:storageCategoryOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedStorageCategory.nstoragecategorycode;})[0]});}}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){bool=true;var sampleStorageLocationList=constructOptionList(this.props.Login.masterData.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageLocation){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode;})[0]});}}if(this.props.Login.masterData.sampleStorageVersion!==previousProps.Login.masterData.sampleStorageVersion){bool=true;var sampleStorageVersionList=constructOptionList(this.props.Login.masterData.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageVersion){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestorageversioncode:sampleStorageVersionOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode;})[0]});}}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;masterData=this.props.Login.masterData;selectedRecord[\"nprojecttypecode\"]={label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA',value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode};selectedProjectType={nprojecttypecode:{label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA',value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode}};breadCrumbdata=_objectSpread(_objectSpread({},convertDateValuetoString(this.props.Login.masterData.fromDate,this.props.Login.masterData.toDate,this.props.Login.userInfo)),{},{breadcrumbprojecttype:{value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA'}});selectedProjectTypeList=this.props.Login.masterData.selectedProjectTypeList;var _filterStorageCategorylist=constructOptionList(this.props.Login.masterData.projectbarcodeconfig||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);masterData['projectbarcodeconfig']=_filterStorageCategorylist.get(\"OptionList\");filterData=this.generateBreadCrumData(this.props.Login.masterData);}if(this.state.masterData!==previousState.masterData){bool=true;filterData=this.generateBreadCrumData(this.state.masterData);}if(bool){this.setState({storageCategoryOptions:storageCategoryOptions,filterData:filterData,selectedRecord:selectedRecord,controlMap:controlMap,userRoleControlRights:userRoleControlRights,storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,masterData:masterData,selectedRecordFilter:selectedRecordFilter,fields:fields,selectedProjectType:selectedProjectType,selectedProjectTypeList:selectedProjectTypeList,breadCrumbdata:breadCrumbdata});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(obj){var breadCrumbData=[];if(this.state.masterData&&this.state.masterData.filterStorageCategory){breadCrumbData.push({\"label\":\"IDS_STORAGECATEGORY\",\"value\":obj.selectedStorageCategoryName&&obj.selectedStorageCategoryName!==null?obj.selectedStorageCategoryName:\"NA\"}// ,\n// {\n//     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\n//     \"value\": obj.selectedSampleStorageLocation &&\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\n// },\n// {\n//     \"label\": \"IDS_STORAGECATEGORYVERSION\",\n//     \"value\": obj.selectedSampleStorageVersion &&\n//         obj.selectedSampleStorageVersion.nversionno !== null ?\n//         obj.selectedSampleStorageVersion.nversionno : \"NA\"\n// }\n);}return breadCrumbData;}},{key:\"getSampleStorageLocation\",value:function getSampleStorageLocation(inputData,fieldName,comboData){var _this3=this;var selectedRecordFilter=this.state.selectedRecordFilter||{};var inputParamData={};this.setState({loading:true});if(fieldName==='nsamplestoragelocationcode'){inputParamData={nstoragecategorycode:selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value,userinfo:inputData.userinfo};}else{inputParamData={nstoragecategorycode:comboData.value,userinfo:inputData.userinfo};}var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this3$state=_this3.state,storageLocationOptions=_this3$state.storageLocationOptions,sampleStorageVersionOptions=_this3$state.sampleStorageVersionOptions;var sampleStorageLocationList=constructOptionList(response[0].data.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");var sampleStorageVersionList=constructOptionList(response[0].data.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.length>0?storageLocationOptions[0]:[],nsamplestorageversioncode:sampleStorageVersionOptions.length>0?sampleStorageVersionOptions[0]:[]});_this3.setState({storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,selectedRecordFilter:_objectSpread(_objectSpread({},selectedRecordFilter),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this3.setState({loading:false});});}},{key:\"addSampleStorageMapping\",value:function addSampleStorageMapping(){var _this4=this;this.setState({loading:true});var selectedRecord=this.state.selectedRecord;var inputParamData={// nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\nnsamplestoragelocationcode:this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':this.props.Login.userInfo});var url3=rsapi.post(\"containertype/getContainerType\",{'userinfo':this.props.Login.userInfo});urlArray=[url1,url2];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[0].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");_this4.setState({openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,directionmasterOptions:directionmasterList,// ncontainertypecode: containerTypeList[0],\n// containerStructureOptions: containerstructureList,\n// ncontainerstructurecode: containerstructureList[0],\nnrow:containerStructure.length>0?containerStructure[0].nrow:1,ncolumn:containerStructure.length>0?containerStructure[0].ncolumn:1,isInitialRender:true}),openSpreadSheet:false,operation:'create',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this4.setState({loading:false});});}},{key:\"getprojectbarcodeconfig\",value:function getprojectbarcodeconfig(nflag){var _this5=this;var inputParamData={};this.setState({loading:true});var obj=convertDateValuetoString(this.state.masterData.fromDate,this.state.masterData.toDate,this.props.Login.userInfo);inputParamData={nprojecttypecode:this.state.selectedProjectType.nprojecttypecode.value,isFilterSubmit:nflag,// fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\n// toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\nfromDate:obj.fromDate,toDate:obj.toDate,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this5.state.masterData.samplestorageretrieval;_this5.setState(nflag==false?{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),// selectedRecord: {\n//     nprojecttypecode: { label: comboData.label, value: comboData.value }\n// },\nloading:false}:{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),breadCrumbdata:_objectSpread({breadcrumbprojecttype:{value:_this5.state.selectedProjectType.nprojecttypecode.label}},convertDateValuetoString(_this5.state.masterData.fromDate,_this5.state.masterData.toDate,_this5.props.Login.userInfo)),masterData:_objectSpread(_objectSpread({},_this5.state.masterData),{},{fromDate:rearrangeDateFormat(_this5.props.Login.userInfo,_this5.state.masterData.fromDate),toDate:rearrangeDateFormat(_this5.props.Login.userInfo,_this5.state.masterData.toDate),samplestorageretrieval:response[0].data.samplestorageretrieval}),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this5.setState({loading:false});});}},{key:\"getContainerStructure\",value:function getContainerStructure(inputData,fieldName,comboData){var _this6=this;var inputParamData={};this.setState({loading:true});inputParamData={ncontainertypecode:comboData.value,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getContainerStructure\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this6$state=_this6.state,containerStructureOptions=_this6$state.containerStructureOptions,selectedRecord=_this6$state.selectedRecord;var containerStructureList=constructOptionList(response[0].data.containerStructure||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,undefined);containerStructureOptions=containerStructureList.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nrow:containerStructureOptions.length>0?containerStructureOptions[0].item.nrow:1,ncolumn:containerStructureOptions.length>0?containerStructureOptions[0].item.ncolumn:1,ncontainerstructurecode:containerStructureOptions.length>0?containerStructureOptions[0]:[],containerStructureOptions:containerStructureOptions.length>0?_toConsumableArray(containerStructureOptions):[]});_this6.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this6.setState({loading:false});});}},{key:\"getSelectedBarcodeData\",value:function getSelectedBarcodeData(e,inputParam){var _this7=this;if(e.keyCode===13){this.setState({loading:true});var selectedRecord=this.state.selectedRecord||{};var urlArray=[];var url1=rsapi.post(\"/samplestorageretrieval/getSelectedBarcodeData\",{// nprojecttypecode: this.state.selectedBarcodeValue.nprojecttypecode,\nspositionvalue:inputParam.spositionvalue,userinfo:this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){var dynamicfields=[];dynamicfields=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_POSITION\",\"dataField\":\"sposition\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\",\"staticField\":true}];var temparray2=response[0].data['selectedProjectTypeList']&&response[0].data['selectedProjectTypeList'].map(function(option){return{\"idsName\":option.sfieldname,\"dataField\":option.sfieldname,\"width\":\"200px\"};});dynamicfields=[].concat(_toConsumableArray(dynamicfields),_toConsumableArray(temparray2));_this7.setState({dynamicfields:dynamicfields,selectedBarcodeValue:_objectSpread({},response[0].data['selectedBarcodeValue']),loading:false});}).catch(function(error){_this7.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{_this7.setState({dynamicfields:[],selectedBarcodeValue:{}});toast.info(error.response.data);}});}}},{key:\"getDynamicFilterExecuteData\",value:function getDynamicFilterExecuteData(nflag){var _this8=this;var selectedRecord=this.state.selectedRecord||{};if(nflag===2?true:selectedRecord.filterquery&&selectedRecord.filterquery!==\"\"){this.setState({loading:true});var obj={// ...inputParam.component, \nlabel:'samplestorageretrieval',valuemember:'nsamplestorageretrievalcode',filterquery:nflag===2?this.state.submittedselectedRecord.filterquery:selectedRecord.filterquery,fromDate:rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.fromDate),toDate:rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.toDate),nprojecttypecode:this.state.selectedProjectType.nprojecttypecode.value,source:'view_sampleretrieval_'+this.state.selectedProjectType.nprojecttypecode.value,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\",obj);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this8.state.masterData;masterData=_objectSpread(_objectSpread({},masterData),response[0].data);_this8.setState({masterData:_objectSpread({},masterData),loading:false,openModal:false,isFilterPopup:false,submittedselectedRecord:nflag===2?_objectSpread({},_this8.state.submittedselectedRecord):_objectSpread({},selectedRecord),selectedRecord:{},displayQuery:_this8.state.tree?QbUtils.queryString(_this8.state.tree,_this8.state.config,true):\"\"});}).catch(function(error){_this8.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAFILTER\"}));}}// getDynamicFilterExecuteData(nflag) {\n//     this.setState({ loading: true })\n//     let selectedRecord = this.state.selectedRecord || {};\n//     let obj = {// ...inputParam.component, \n//         label: 'samplestorageretrieval', valuemember: 'nsamplestoragetransactioncode',\n//         filterquery:   \n//         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\n//     }\n//     let urlArray = [];\n//     const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\n//     urlArray = [url1];\n//     Axios.all(urlArray)\n//         .then(response => {\n//             console.log(response)\n//             let masterData = this.state.masterData\n//             masterData = { ...masterData, ...response[0].data }\n//             this.setState({\n//                 masterData: { ...masterData },\n//                 loading: false,\n//                 openModal: false,\n//                 submittedselectedRecord: nflag === 2 ?\n//                     { ...this.state.submittedselectedRecord }\n//                     :\n//                     { ...selectedRecord }\n//                 ,\n//                 isFilterPopup: false,\n//                 selectedRecord: {}\n//             })\n//         })\n//         .catch(error => {\n//             this.setState({\n//                 loading: false\n//             });\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             }\n//             else {\n//                 toast.info(error.response.data.rtn);\n//             }\n//         })\n// }\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.openModal&&nextState.isInitialRender===false&&nextState.selectedRecord!==this.state.selectedRecord){return false;}else if(this.state.openModal&&nextState.isInitialRender===false&&nextState.sheetData!==this.state.sheetData){return false;}else{return true;}}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){//  const tempArray = [];\nvar temparray1=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_STORAGESTRUCTURE\",\"dataField\":\"ssamplestoragelocationname\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_PATHWITHPOSITION\",\"dataField\":\"scontainerpathwithposition\",\"width\":\"500px\",\"staticField\":true},{\"idsName\":\"IDS_CONTAINERID\",\"dataField\":\"sboxid\",\"width\":\"200px\",\"staticField\":true},//  { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\n{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_TRANSACTIONSTATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_TRANSACTIONDATE\",\"dataField\":\"dtransactiondate\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",\"staticField\":true}];var temparray2=data&&data.map(function(option){return{\"idsName\":option.sfieldname,\"dataField\":option.sfieldname,\"width\":\"200px\"};});var newArray=[].concat(temparray1,_toConsumableArray(temparray2));return newArray;}},{key:\"render\",value:function render(){var _this9=this;var addId=this.state.controlMap.has(\"Add samplestorageretrieval\")&&this.state.controlMap.get(\"Add samplestorageretrieval\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit SampleStorageLocation\")&&this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete SampleStorageLocation\")&&this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;var copyId=this.state.controlMap.has(\"Copy SampleStorageLocation\")&&this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;var approveId=this.state.controlMap.has(\"Approve SampleStorageLocation\")&&this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;var retrievedispose=this.state.controlMap.has(\"Retrieve/Dispose\")&&this.state.controlMap.get(\"Retrieve/Dispose\").ncontrolcode;var fromDate=this.state.masterData&&this.state.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.fromDate):new Date();var toDate=this.state.masterData&&this.state.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.toDate):new Date();//  let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\nvar extractedColumnList=this.state.selectedProjectTypeList?this.gridfillingColumn(this.state.selectedProjectTypeList):[];var fields={};if(extractedColumnList.length>0){extractedColumnList.map(function(field){field.hasOwnProperty(\"staticField\")?fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},field.dataField,{\"label\":_this9.props.intl.formatMessage({id:field.idsName}),\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":_this9.props.intl.formatMessage({id:field.idsName})}})):fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},'\"'+field.dataField+'\"',{\"label\":field.dataField,\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":field.dataField}}));});}var filterParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\",fetchUrl:\"samplestorageretrieval/getActiveSampleStorageMappingById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"ssamplestoragelocationname\"]};var breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadCrumbFrom?this.state.breadCrumbdata.breadCrumbFrom:'IDS_NA'},{\"label\":\"IDS_TO\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadCrumbto?this.state.breadCrumbdata.breadCrumbto:'IDS_NA'},{\"label\":\"IDS_PROJECTTYPE\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadcrumbprojecttype?this.state.breadCrumbdata.breadcrumbprojecttype.value:'IDS_NA'}];var confirmMessage=new ConfirmMessage();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/ //this.state.retrievalType === 1 ?\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData}),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(AdvFilter,{filterComponent:[{\"IDS_SAMPLESTORAGERETRIEVEFILTER\":/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_FROM\"}),selected:fromDate,value:fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this9.handleFilterDateChange(\"fromDate\",date);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_TO\"}),selected:toDate,value:toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this9.handleFilterDateChange(\"toDate\",date);}}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nprojecttypecode\",as:\"select\",onChange:function onChange(event){return _this9.onComboChange(event,'nprojecttypecode');},formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isMandatory:this.state.selectedRecord[\"nneedposition\"],value:this.state.selectedProjectType&&this.state.selectedProjectType[\"nprojecttypecode\"]?this.state.selectedProjectType[\"nprojecttypecode\"]||[]:[],options:this.state.masterData&&this.state.masterData.projectbarcodeconfig||[],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:false,isClearable:false})))))}],dataFor:\"tooltip_list_wrap\",onFilterSubmit:this.onFilterSubmit,showFilter:this.state.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,showModalBg:function showModalBg(e){return _this9.setState({showModalBg:e});}})))),this.state.selectedProjectTypeList&&/*#__PURE__*/React.createElement(Row,null,\" \",/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid// isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\n//     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n// isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\n//     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n,{isCustomButton:true,customButtonlist:[//     {\n//     label: 'IDS_SEARCH',\n//     id: {},\n//     onClick: () => this.opensearch(),\n//     controlname: 'faSearch'\n// },\n{label:'IDS_RETRIEVEDISPOSE',id:{},hidden:this.state.userRoleControlRights.indexOf(retrievedispose)===-1,onClick:function onClick(){return _this9.openRetrieveDispose();},controlname:'faRecycle'}],isRefreshRequired:false// onGroupChange={this.handleGroupChange}\n,primaryKeyField:'nsamplestoragetransactioncode',data:this.state.masterData&&this.state.masterData.samplestorageretrieval,dataResult:this.state.masterData&&this.state.masterData.samplestorageretrieval?process(this.state.masterData.samplestorageretrieval||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}):[]// this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//     this.state.dataStateChange ? this.state.dataStateChange : {\n//         take: 10,\n//         skip: 0\n//     })\n,dataState:this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10},dataStateChange:this.dataStateChange,extractedColumnList:extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,deleteRecord:this.deleteRecord,addRecord:function addRecord(){return _this9.openStorageMapping();},pageable:true,scrollable:'scrollable'// isComponent={true}\n,gridHeight:'600px'// isActionRequired={true}\n,isToolBarRequired:true// actionIcons={\n//     [{\n//         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\n//         controlname: \"faPenSquare\",\n//         hidden: false,\n//         objectName: \"add\",\n//         onClick: (param) => this.addSample(param, 1)\n//     }]}\n})))))),this.state.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.state.openModal,closeModal:this.closeModal,hideSave:true,showSubmit:false,needClose:true,size:this.state.openSpreadSheet||this.state.isFilterPopup?'xl':\"\",operation:\"\",inputParam:this.props.Login.inputParam,screenName:this.state.isRetrieveOrDispose?this.props.intl.formatMessage({id:\"IDS_RETRIEVEORDISPOSESAMPLE\"}):this.state.isFilterPopup?\"\":this.state.isMultiSampleAdd?this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURE\"}):this.state.editedsheetData.scontainerpath,onSaveClick:this.state.isFilterPopup?this.getDynamicFilterExecuteData.bind(this):this.onSampleMappingSaveClick,esign:this.props.Login.loadEsign// className={\"wide-popup\"}\n,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},addComponent:this.state.isRetrieveOrDispose?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{name:'spositionvalue',label:this.props.intl.formatMessage({id:\"IDS_SAMPLEID\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SAMPLEID\"}),value:this.state.selectedRecord['spositionvalue']?this.state.selectedRecord['spositionvalue']:\"\",maxLength:20,isMandatory:true,isDisabled:this.props.isDisabled,onKeyDown:function onKeyDown(event){return _this9.getSelectedBarcodeData(event,_this9.state.selectedRecord);},onChange:function onChange(event){return _this9.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this9.CRUDSampleStorageTransaction({'nsamplestoragetransactioncode':_this9.state.selectedBarcodeValue&&_this9.state.selectedBarcodeValue.nsamplestoragetransactioncode,userinfo:_this9.props.Login.userInfo,scomments:_this9.state.selectedRecord.scomments&&_this9.state.selectedRecord.scomments!==\"\"?_this9.state.selectedRecord.scomments:\"-\",isRetrieve:true,spositionvalue:_this9.state.selectedRecord.spositionvalue},'create');}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashRestore}),\"  \",this.props.intl.formatMessage({id:\"IDS_RETRIEVE\"}))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this9.CRUDSampleStorageTransaction({'nsamplestoragetransactioncode':_this9.state.selectedBarcodeValue&&_this9.state.selectedBarcodeValue.nsamplestoragetransactioncode,userinfo:_this9.props.Login.userInfo,scomments:_this9.state.selectedRecord.scomments&&_this9.state.selectedRecord.scomments!==\"\"?_this9.state.selectedRecord.scomments:\"-\",isRetrieve:false,spositionvalue:_this9.state.selectedRecord.spositionvalue},'create');}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt}),\"  \",this.props.intl.formatMessage({id:\"IDS_DISPOSE\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{name:'scomments',label:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:this.state.selectedRecord['scomments']?this.state.selectedRecord['scomments']:\"\",maxLength:255,onChange:function onChange(event){return _this9.onInputOnChange(event);}}))),/*#__PURE__*/React.createElement(Row,null,this.state.dynamicfields.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\" mb-2\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLEINFO\"})))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,this.state.dynamicfields.map(function(item,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:6,key:\"specInfo_\".concat(index)},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,item.hasOwnProperty('staticField')?_this9.props.intl.formatMessage({id:item.idsName}):item.idsName,\"  \"),/*#__PURE__*/React.createElement(ReadOnlyText,null,_this9.state.selectedBarcodeValue[item.dataField]===\"\"||_this9.state.selectedBarcodeValue[item.dataField]===undefined||_this9.state.selectedBarcodeValue[item.dataField]===null?\"-\":_this9.state.selectedBarcodeValue[item.dataField]))));})//:\n// <FormLabel>{\n//     this.props.intl.formatMessage({ id: \"IDS_NODATAFOUND\" })}  </FormLabel>\n)))))):this.state.isFilterPopup?/*#__PURE__*/React.createElement(FilterQueryBuilder,{fields:fields,isSampleStorage:true,queryArray:this.state.queryArray,skip:this.state.kendoSkip,take:this.state.kendoTake,onChange:this.onChange,tree:this.props.Login.tree!==undefined?this.props.Login.tree:this.state.selectedRecord.tree,gridColumns:this.slideList,filterData:this.props.Login.slideResult||[],handlePageChange:this.handlePageChangeFilter,static:true,userInfo:this.props.Login.userInfo,updateStore:this.props.updateStore}):this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.state.openSpreadSheet?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MatrixComponent,{Rows:this.state.Rows||1,userInfo:this.props.Login.userInfo,columns:this.state.columns||1,selectedRecord:this.state.selectedRecord.sheetData||{},sheetData:this.state.sheetData||{},isMultiSampleAdd:this.state.isMultiSampleAdd,childSheetDataChange:this.childSheetDataChange,editedsheetData:this.state.editedsheetData,multipleSheetData:this.state.masterData&&this.state.masterData.samplestorageretrieval&&process(this.state.masterData.samplestorageretrieval||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}).data})):/*#__PURE__*/React.createElement(AddSampleStorageMapping,{operation:this.state.operation,selectedRecordFilter:this.state.selectedRecordFilter,onInputChange:function onInputChange(e){return _this9.onInputChange(e);},onComboChange:this.onComboChange,selectedRecord:this.state.selectedRecord||{},childDataChange:this.childDataChange,userInfo:this.props.Login.userInfo})}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleStorageRetrieval;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService})(injectIntl(SampleStorageRetrieval));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/SampleStorageRetrieval.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Form","Button","FormControl","InputGroup","FontAwesomeIcon","PerfectScrollbar","faTrashAlt","faCopy","faPencilAlt","faSync","faPlus","faThumbsUp","faBoxOpen","faBox","faLocationArrow","faFolderMinus","faFolder","faFolderOpen","faArrowRight","faSearch","faTimes","faArrowDown","faHandPointLeft","faArrowUp","faClone","faPuzzlePiece","faCalculator","faEye","faTrashRestore","toast","ListMaster","constructOptionList","convertDateValuetoString","getControlMap","onSaveMandatoryValidation","rearrangeDateFormat","searchData","searchJsonData","showEsign","sortData","ReadOnlyText","ContentPanel","SearchIcon","FormSelectSearch","DataGrid","BasicConfig","BasicFuncs","Utils","QbUtils","SlideOutModal","callService","crudMaster","validateEsignCredential","updateStore","getSelectedSampleStorageLocation","filterColumnData","changeStorageCategoryFilter","openPropertyModal","editSampleStorageLocation","approveSampleStorageLocation","getSelectedSampleStorageVersion","fetchStorageCategory","copySampleStorageVersion","crudSampleStorageLocation","DEFAULT_RETURN","ListWrapper","MediaLabel","ProductList","uuid","TreeEditable","TreeViewEditable","getItemPath","mapTree","removeItems","ConfirmMessage","AddTreeview","AddTreeProperties","Splitter","TransactionListMaster","BreadcrumbComponent","SplitterLayout","StorageCategoryFilter","transactionStatus","Esign","TreeViewDragAnalyzer","moveTreeViewItem","ModalShow","rsapi","AddSampleStorageMapping","Axios","StorageMappingFilter","Preloader","TransactionListMasterJsonView","groupBy","process","MatrixComponent","FilterQueryBuilder","Grid","GridColumn","FormInput","AdvFilter","DateTimePicker","SampleStorageRetrieval","props","dragOverCnt","isDragDrop","SEPARATOR","uniqueIDArr","countforTree","pointedItem","undefined","getitemPath","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","treeData","text","expanded","editable","root","id","operation","closeModal","loadEsign","Login","selectedId","state","onFilterSubmit","setState","isInitialRender","isFilterPopup","isRetrieveOrDispose","onInputChange","event","target","type","name","checked","value","onSaveClick","saveType","formRef","onSaveProperties","openSpreadSheet","CRUDSampleStorageTransaction","editedsheetData","nsamplestoragemappingcode","isMultiSampleAdd","Object","keys","sheetData","map","join","toString","nsamplestoragelocationcode","JSON","stringify","sheetUpdate","userinfo","userInfo","onSaveSampleStorageTransaction","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","e","skip","take","handleDetailPageChange","openFilter","boolean","showFilter","closeFilter","reloadData","onEditSampleStorageLocation","selectedSampleStorageVersion","editId","handleSearch","searchedTreeData","searchRef","current","isOnlyDraft","masterData","sampleStorageVersion","length","openStorageMapping","addId","addSampleStorageMapping","deletesamplestoragemapping","param","selectedSampleStorageLocation","addMultipleSample","loading","opensearch","submittedselectedRecord","openRetrieveDispose","dynamicfields","selectedBarcodeValue","addSample","nflag","urlArray","url1","post","samplestorageretrieval","item","all","then","response","parse","Rows","nrow","columns","ncolumn","catch","error","status","message","warn","onComboChange","comboData","fieldName","selectedProjectType","selectedRecordFilter","getSampleStorageLocation","nstoragecategorycode","getContainerStructure","ncontainertypecode","containerpathCodeArray","inputParam","nsamplestoragetransactioncode","parseInt","nproductcode","ndirectionmastercode","ssamplestoragemappingname","nsamplestoragecontainerpathcode","containerpathsize","nneedposition","ncontainerstructurecode","nquantity","userRoleControlRights","nformcode","ncontrolcode","screenData","getsamplestoragetransaction","childDataChange","childSheetDataChange","getActiveSampleStorageMappingById","filterValue","filterParam","primaryKeyValue","searchedData","inputListName","primaryKeyField","isjsondata","searchFieldList","fetchUrl","fecthInputObject","sortField","sortOrder","intl","formatMessage","selectedObject","forEach","unchangeList","indexOf","modalName","spositionvalue","info","getprojectbarcodeconfig","onSampleMappingSaveClick","mandatoryFields","dataStateChange","dataState","approveSampleStorageMapping","inputParamData","fetchRecord","url2","url3","storageMappingMap","storageMappingMapList","get","containerStructure","containerTypeMap","containerTypeList","directionmasterMap","directionmasterList","containerstructureMap","containerstructureList","productMap","productList","editedObject","editsampleStorageMapping","unshift","label","scontainerpath","sdirection","sproductname","scontainertype","scontainerstructurename","directionmasterOptions","storageMappingMapOptions","productOptions","containerTypeOptions","containerStructureOptions","retrievalType","onInputOnChange","handlePageChangeFilter","kendoSkip","kendoTake","onChange","immutableTree","config","sqlFormat","tree","processWithGroups","aggregates","field","aggregate","groups","group","newDataState","handleFilterDateChange","dateName","dateValue","validateEsign","inputData","sreason","nreasoncode","spredefinedreason","password","title","children","toggleAction","treeDataView","toggleActionView","size","scrollable","Map","settings","fields","createRef","dragClue","confirmMessage","previousProps","previousState","filterData","storageCategoryOptions","controlMap","storageLocationOptions","sampleStorageVersionOptions","selectedProjectTypeList","breadCrumbdata","bool","sampleStorageLocation","queryBuilderFreezer","push","ssamplestoragelocationname","values","filterStorageCategory","filterStorageCategorylist","selectedStorageCategory","filter","sampleStorageLocationList","sampleStorageVersionList","nsamplestorageversioncode","sprojecttypename","nprojecttypecode","fromDate","toDate","breadcrumbprojecttype","projectbarcodeconfig","generateBreadCrumData","parentHeight","height","clientHeight","firstPane","obj","breadCrumbData","selectedStorageCategoryName","isFilterSubmit","containerStructureList","keyCode","temparray2","option","sfieldname","filterquery","valuemember","source","displayQuery","queryString","rtn","nextProps","nextState","temparray1","newArray","has","deleteId","copyId","approveId","retrievedispose","Date","extractedColumnList","gridfillingColumn","hasOwnProperty","dataField","idsName","breadCrumbFrom","breadCrumbto","ssitedate","date","showModalBg","hidden","onClick","controlname","deleteRecord","getDynamicFilterExecuteData","bind","masterStatus","isDisabled","getSelectedBarcodeData","float","marginRight","scomments","isRetrieve","display","marginTop","index","queryArray","slideList","slideResult","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Form, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { faTrashAlt, faCopy, faPencilAlt, faSync, faPlus, faThumbsUp, faBoxOpen, faBox, faLocationArrow, faFolderMinus, faFolder, faFolderOpen, faArrowRight, faSearch, faTimes, faArrowDown, faHandPointLeft, faArrowUp, faClone, faPuzzlePiece, faCalculator, faEye, faTrashRestore } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { constructOptionList, convertDateValuetoString, getControlMap, onSaveMandatoryValidation, rearrangeDateFormat, searchData, searchJsonData, showEsign, sortData } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel, SearchIcon } from '../../components/App.styles';\r\n//import SortableTree from 'react-sortable-tree'; \r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport {\r\n    BasicConfig, BasicFuncs,\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\n\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSelectedSampleStorageLocation, filterColumnData, changeStorageCategoryFilter,\r\n    openPropertyModal, editSampleStorageLocation, approveSampleStorageLocation, getSelectedSampleStorageVersion, fetchStorageCategory, copySampleStorageVersion,\r\n    crudSampleStorageLocation\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { MediaLabel, ProductList } from '../product/product.styled';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport TreeEditable from \"../../components/form-tree-editable/TreeEditable\";\r\nimport TreeViewEditable from \"../../components/form-tree-editable/form-tree-editable.component\";\r\nimport { getItemPath, mapTree, removeItems } from \"@progress/kendo-react-treelist\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddTreeview from './AddTreeview';\r\nimport AddTreeProperties from './AddTreeProperties';\r\nimport { Splitter } from '@progress/kendo-react-layout';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport StorageCategoryFilter from './StorageCategoryFilter';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport Esign from '../audittrail/Esign';\r\nimport { TreeViewDragAnalyzer, moveTreeViewItem } from '@progress/kendo-react-treeview';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport rsapi from '../../rsapi';\r\nimport AddSampleStorageMapping from './AddSampleStorageMapping';\r\nimport Axios from 'axios';\r\nimport StorageMappingFilter from './StorageMappingFilter';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\n\r\nimport { groupBy, process } from '@progress/kendo-data-query';\r\n//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\r\nimport MatrixComponent from '../../components/MatrixComponent';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport AdvFilter from '../../components/AdvFilter';\r\nimport DateTimePicker from \"../../components/date-time-picker/date-time-picker.component\";\r\n\r\n\r\nclass SampleStorageRetrieval extends Component {\r\n    dragOverCnt = 0;\r\n    isDragDrop = false;\r\n    SEPARATOR = '_';\r\n    uniqueIDArr = [];\r\n    countforTree = 0;\r\n    pointedItem = undefined\r\n    getitemPath = {};\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            retrievalType: 1,\r\n            // extractedColumnList: [   \r\n            //     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\r\n            //     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\r\n            //     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n            //     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n            //     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n            //     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n            //     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\r\n            // ],\r\n            sheetData: {},\r\n            selectedRecordFilter: {},\r\n            treeData: [{ title: 'Chicken', children: [{ title: 'Egg' }] }],\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    //  text: \"root\",\r\n                    text: this.props.intl.formatMessage({ id: \"IDS_ROOT\" }),\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n            selectedItem: undefined,\r\n            loading: false,\r\n            dataStateChange: {\r\n                take: 10,\r\n                skip: 0,\r\n                // group: [\r\n                //     {\r\n                //         field: \"ssamplestoragelocationname\",\r\n                //     },\r\n                // ],\r\n            }\r\n        };\r\n        let fields = {};\r\n        // if (this.state.extractedColumnList) {\r\n        //     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n        //     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n        //     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n        //     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n        //     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\r\n        //     // ,...this.state.extractedColumnList]\r\n        //     this.state.extractedColumnList.map(field => {\r\n        //         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\r\n        //             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\r\n        //             fields = {\r\n        //                 ...fields,\r\n        //                 [field.dataField]: {\r\n        //                     \"label\":\r\n        //                         this.props.intl.formatMessage({\r\n        //                             id: field.idsName,\r\n        //                         })\r\n        //                     ,\r\n        //                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\r\n        //                     \"valueSources\": [\"value\", \"func\"],\r\n\r\n        //                     \"mainWidgetProps\": {\r\n        //                         \"valueLabel\": \"Name\",\r\n        //                         \"valuePlaceholder\": this.props.intl.formatMessage({\r\n        //                             id: field.idsName\r\n        //                         })\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }\r\n        this.state = { ... this.state, 'fields': fields }\r\n        this.searchRef = React.createRef();\r\n        this.dragClue = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let { filterData, storageCategoryOptions,\r\n            selectedRecord, controlMap,\r\n            userRoleControlRights, storageLocationOptions,\r\n            sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, selectedProjectTypeList, breadCrumbdata } = this.state\r\n        let bool = false;\r\n        ///////////////////////////////\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nsamplestoragelocationcode, \"title\": item.ssamplestoragelocationname })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'nsamplestoragelocationcode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_STORAGESTRUCTURENAME\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        // if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nproductcode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PRODUCT\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        // if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nprojecttypecode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PROJECTTYPE\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nvisitnumbercode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_VISITNUMBER\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        ///////////////////////////////\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            bool = true;\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.filterStorageCategory !== previousProps.Login.masterData.filterStorageCategory) {\r\n            bool = true;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.filterStorageCategory || [], \"nstoragecategorycode\",\r\n                \"sstoragecategoryname\", undefined, undefined, undefined);\r\n            storageCategoryOptions = filterStorageCategorylist.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedStorageCategory) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nstoragecategorycode: storageCategoryOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedStorageCategory.nstoragecategorycode)[0]\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            bool = true;\r\n            const sampleStorageLocationList = constructOptionList(this.props.Login.masterData.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n            storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageLocation) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode)[0]\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.sampleStorageVersion !== previousProps.Login.masterData.sampleStorageVersion) {\r\n            bool = true;\r\n            const sampleStorageVersionList = constructOptionList(this.props.Login.masterData.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                \"nversionno\", undefined, undefined, undefined);\r\n            sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageVersion) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode)[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            masterData = this.props.Login.masterData;\r\n            selectedRecord[\"nprojecttypecode\"] = {\r\n                label: this.props.Login.masterData.selectedProjectType &&\r\n                    this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                    this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                , value: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.nprojecttypecode\r\n            };\r\n            selectedProjectType = {\r\n                nprojecttypecode: {\r\n                    label: this.props.Login.masterData.selectedProjectType &&\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                    , value: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.nprojecttypecode\r\n                }\r\n            };\r\n            breadCrumbdata = {\r\n                ...convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                breadcrumbprojecttype: {\r\n                    value: this.props.Login.masterData.selectedProjectType &&\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                }\r\n            }\r\n            selectedProjectTypeList = this.props.Login.masterData.selectedProjectTypeList;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.projectbarcodeconfig || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            masterData['projectbarcodeconfig'] = filterStorageCategorylist.get(\"OptionList\");\r\n\r\n            filterData = this.generateBreadCrumData(this.props.Login.masterData);\r\n\r\n        }\r\n        if (this.state.masterData !== previousState.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData(this.state.masterData);\r\n\r\n        }\r\n\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                storageCategoryOptions, filterData,\r\n                selectedRecord, controlMap,\r\n                userRoleControlRights, storageLocationOptions,\r\n                sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, selectedProjectTypeList,\r\n                breadCrumbdata\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         openModal: false, selectedRecord: {}\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedId = this.props.Login.selectedId;\r\n        let selectedRecord = this.state.selectedRecord; //this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"Approve\" || this.props.Login.operation === \"copy\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                selectedId = null;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedId = null;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        // this.getsamplestoragetransaction({}, this.props.Login.userInfo);\r\n        // if (!this.state.isFilterPopup) {\r\n        //     this.getDynamicFilterExecuteData()\r\n\r\n        // }\r\n        this.onFilterSubmit();\r\n        this.setState({\r\n            selectedRecord,\r\n            openModal: false, isInitialRender: true\r\n            , isFilterPopup: false, isRetrieveOrDispose: false\r\n        })\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties(saveType, formRef);\r\n        } else if (this.state.openSpreadSheet) {\r\n            this.CRUDSampleStorageTransaction({\r\n                ...this.state.editedsheetData,\r\n                nsamplestoragemappingcode: this.state.isMultiSampleAdd ?\r\n                    Object.keys(this.state.sheetData).map(nsamplestoragemappingcode => nsamplestoragemappingcode).join(\",\")\r\n                    : this.state.editedsheetData.nsamplestoragemappingcode.toString(),\r\n                nsamplestoragelocationcode: this.state.editedsheetData.nsamplestoragelocationcode,\r\n                sheetData: JSON.stringify(this.state.sheetData ? this.state.sheetData : {}),\r\n                sheetUpdate: true,\r\n                userinfo: this.props.Login.userInfo,\r\n                isMultiSampleAdd: this.state.isMultiSampleAdd\r\n            }, 'create');\r\n        } else {\r\n            this.onSaveSampleStorageTransaction(saveType, formRef);\r\n        }\r\n    };\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    generateBreadCrumData(obj) {\r\n        const breadCrumbData = [];\r\n        if (this.state.masterData && this.state.masterData.filterStorageCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_STORAGECATEGORY\",\r\n                    \"value\": obj.selectedStorageCategoryName &&\r\n                        obj.selectedStorageCategoryName !== null ?\r\n                        obj.selectedStorageCategoryName : \"NA\"\r\n\r\n                }\r\n                // ,\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\r\n                //     \"value\": obj.selectedSampleStorageLocation &&\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\r\n                // },\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYVERSION\",\r\n                //     \"value\": obj.selectedSampleStorageVersion &&\r\n                //         obj.selectedSampleStorageVersion.nversionno !== null ?\r\n                //         obj.selectedSampleStorageVersion.nversionno : \"NA\"\r\n                // }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        // let showFilter = !this.props.Login.showFilter\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { showFilter }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n        let boolean = !this.state.showFilter\r\n        this.setState({ showFilter: boolean })\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { showFilter: false }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ showFilter: false })\r\n    }\r\n    reloadData = () => {\r\n        this.onFilterSubmit();\r\n    }\r\n    onEditSampleStorageLocation = (selectedSampleStorageVersion, userInfo, editId) => {\r\n        this.handleSearch();\r\n        this.setState({ searchedTreeData: undefined })\r\n        if (this.searchRef.current) {\r\n            this.searchRef.current.value = \"\";\r\n        }\r\n\r\n        let isOnlyDraft = false;\r\n        if (this.props.Login.masterData.sampleStorageVersion && this.props.Login.masterData.sampleStorageVersion.length > 1) {\r\n            isOnlyDraft = true;\r\n        }\r\n        this.props.editSampleStorageLocation(selectedSampleStorageVersion, userInfo, isOnlyDraft, editId);\r\n    }\r\n    openStorageMapping = (addId) => {\r\n        this.addSampleStorageMapping({ userInfo: this.props.Login.userInfo, addId });\r\n    }\r\n    deletesamplestoragemapping = (param) => {\r\n        this.CRUDSampleStorageTransaction({\r\n            'nsamplestoragelocationcode': this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            'nsamplestoragemappingcode': param.nsamplestoragemappingcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }, 'delete');\r\n    }\r\n    addMultipleSample = (param) => {\r\n        this.setState({\r\n            //sheetData: JSON.parse(response[0].data.sheetData),\r\n            openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n            loading: false\r\n        })\r\n    }\r\n    opensearch = () => {\r\n        this.setState({\r\n            openModal: true, isFilterPopup: true, selectedRecord: { ...this.state.submittedselectedRecord } ||\r\n                { ...this.state.selectedRecord }\r\n        })\r\n    }\r\n    openRetrieveDispose = () => {\r\n        this.setState({\r\n            openModal: true, isRetrieveOrDispose: true,\r\n            dynamicfields: [],\r\n            selectedBarcodeValue: {}\r\n        })\r\n    }\r\n\r\n    addSample = (param, nflag) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemappingSheetData\",\r\n            {\r\n                isMultiSampleAdd: (nflag === 2) ? true : false,\r\n                nsamplestoragemappingcode:\r\n                    (nflag === 2) ? this.state.masterData.samplestorageretrieval.map(item => item.nsamplestoragemappingcode).join(\",\")\r\n                        : param.nsamplestoragemappingcode.toString()\r\n            });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (nflag === 2) {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: false, openSpreadSheet: true,\r\n                        editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedProjectType = this.state.selectedProjectType || {};\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n\r\n        if (fieldName === 'nstoragecategorycode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: comboData.value\r\n            }, fieldName, comboData);\r\n        } else if (fieldName === 'ncontainertypecode') {\r\n            return this.getContainerStructure({\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontainertypecode: comboData.value\r\n            }, fieldName, comboData);\r\n\r\n        }\r\n        else if (fieldName === 'nprojecttypecode') {\r\n            ///return this.getprojectbarcodeconfig(comboData);\r\n            selectedProjectType[fieldName] = comboData;\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedProjectType, selectedRecord });\r\n        }\r\n        else if (fieldName === 'ncontainerstructurecode') {\r\n            selectedRecord['nrow'] = comboData.item.nrow ? comboData.item.nrow : 1;\r\n            selectedRecord['ncolumn'] = comboData.item.ncolumn ? comboData.item.ncolumn : 1;\r\n        } else if (fieldName === 'nsamplestoragelocationcode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: this.state.selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value\r\n\r\n            }, fieldName, comboData);\r\n        }\r\n        if (fieldName === 'nsamplestorageversioncode') {\r\n            selectedRecordFilter[fieldName] = comboData;\r\n            this.setState({ selectedRecordFilter });\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord, selectedRecordFilter });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveSampleStorageTransaction = (saveType) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let containerpathCodeArray = [];\r\n        if (this.state.operation === 'create') {\r\n            containerpathCodeArray = selectedRecord['nsamplestoragecontainerpathcode'].map(item => item.value);\r\n        }\r\n        const inputParam =\r\n        {\r\n            nsamplestoragetransactioncode: selectedRecord['nsamplestoragetransactioncode'] ?\r\n                parseInt(selectedRecord['nsamplestoragetransactioncode']) : 0,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            nsamplestoragemappingcode: selectedRecord['nsamplestoragemappingcode'] ?\r\n                parseInt(selectedRecord['nsamplestoragemappingcode']) : 0,\r\n            ncontainertypecode: -1,\r\n            nproductcode: selectedRecord['nproductcode'].value,\r\n            ndirectionmastercode: -1,\r\n            ssamplestoragemappingname: \"-\",\r\n            nsamplestoragecontainerpathcode: this.state.operation === 'create' ?\r\n                JSON.stringify(containerpathCodeArray) : parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),\r\n            containerpathsize: containerpathCodeArray.length,\r\n            nneedposition: 4,\r\n            ncontainerstructurecode: -1, nquantity: selectedRecord['nquantity'] ?\r\n                parseInt(selectedRecord['nquantity']) : 1,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.CRUDSampleStorageTransaction(inputParam, this.state.operation);\r\n        }\r\n    }\r\n    getsamplestoragetransaction = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragetransaction\", {\r\n            userinfo: this.props.Login.userInfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    childSheetDataChange = (sheetData) => {\r\n\r\n        this.setState({\r\n            // selectedRecord: {\r\n            //     ...this.state.selectedRecord,\r\n            //     sheetData: {\r\n            //         ...this.state.selectedRecord.sheetData,\r\n            //         ...sheetData\r\n            //     }\r\n            // },\r\n            sheetData: {\r\n                ...sheetData\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    // Actions start\r\n    getActiveSampleStorageMappingById = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getActiveSampleStorageMappingById\", {\r\n            nsamplestoragelocationcode: inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,\r\n            userinfo: userinfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    }//,\r\n                    // selectedRecord: {\r\n                    //     ...this.state.selectedRecord\r\n                    //    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\r\n                    // }\r\n                    ,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n    filterColumnData = (filterValue, filterParam) => {\r\n        let masterData = filterParam.masterData;\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData[filterParam.inputListName] && masterData[filterParam.inputListName].length > 0) {\r\n                primaryKeyValue = masterData[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = searchData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n\r\n            }\r\n            if (searchedData.length > 0) {\r\n                primaryKeyValue = searchedData[0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n\r\n        if (primaryKeyValue !== 0) {\r\n            this.setState({ loading: true });\r\n            return rsapi.post(filterParam.fetchUrl, { ...filterParam.fecthInputObject, [filterParam.primaryKeyField]: primaryKeyValue })\r\n                .then(response => {\r\n                    masterData[\"searchedData\"] = searchedData;\r\n                    masterData = { ...masterData, ...response.data };\r\n\r\n                    if (filterParam.sortField) {\r\n                        sortData(masterData, filterParam.sortOrder, filterParam.sortField);\r\n                    }\r\n                    else {\r\n                        sortData(masterData);\r\n                    }\r\n                    this.setState({ masterData, loading: false, skip: 0, take: 10, selectedId: null });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ loading: false });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            masterData[filterParam.selectedObject] = undefined;\r\n            masterData[\"searchedData\"] = [];\r\n            Object.keys(masterData).forEach(item => {\r\n                if (item !== filterParam.inputListName && item !== filterParam.selectedObject\r\n                    && filterParam.unchangeList && filterParam.unchangeList.indexOf(item) === -1)\r\n                    masterData[item] = [];\r\n            })\r\n            this.setState({\r\n                masterData, operation: null, modalName: undefined,\r\n                loading: false\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    CRUDSampleStorageTransaction = (inputParam, operation) => {\r\n        if (this.state.selectedRecord && this.state.selectedRecord.spositionvalue !== \"\"\r\n            && this.state.selectedRecord.spositionvalue !== undefined) {\r\n            this.setState({ loading: true })\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"samplestorageretrieval/\" + operation + \"samplestorageretrieval\", inputParam);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    this.setState({\r\n                        isInitialRender: true,\r\n                        selectedRecord: {},\r\n                        masterData: {\r\n                            ...this.state.masterData, ...response[0].data\r\n                        },\r\n                        selectedBarcodeValue: {},\r\n                        dynamicfields: [],\r\n                        //openModal: false,\r\n                        loading: false\r\n                    });\r\n\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                });\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({\r\n                id: \"IDS_ENTERSAMPLEID\",\r\n            }));\r\n        }\r\n    }\r\n\r\n    getSampleStorageLocation(inputData, fieldName, comboData) {\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        if (fieldName === 'nsamplestoragelocationcode') {\r\n            inputParamData = {\r\n                nstoragecategorycode: selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        } else {\r\n            inputParamData = {\r\n                nstoragecategorycode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { storageLocationOptions,\r\n                    sampleStorageVersionOptions } = this.state\r\n\r\n                let sampleStorageLocationList = constructOptionList(response[0].data.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n                storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n                let sampleStorageVersionList = constructOptionList(response[0].data.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                    \"nversionno\", undefined, undefined, undefined);\r\n                sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.length > 0 ?\r\n                        storageLocationOptions[0] : [],\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.length > 0 ?\r\n                        sampleStorageVersionOptions[0] : [],\r\n\r\n                }\r\n                this.setState({\r\n                    storageLocationOptions, sampleStorageVersionOptions,\r\n                    selectedRecordFilter: {\r\n                        ...selectedRecordFilter,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.getprojectbarcodeconfig(true);\r\n        // this.setState({ loading: true })\r\n        // let inputParamData = {\r\n        //     nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n        //     // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\r\n        //     // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n        //     userinfo: this.props.Login.userInfo,\r\n        // }\r\n        // let urlArray = [];\r\n        // const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\r\n        // urlArray = [url1];\r\n        // Axios.all(urlArray)\r\n        //     .then(response => {\r\n        //         let object = {\r\n        //             selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\r\n        //             // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\r\n        //             // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\r\n        //         }\r\n        //         let filterData = this.generateBreadCrumData(object);\r\n\r\n        //         this.setState({\r\n        //             filterData,\r\n        //             masterData: {\r\n        //                 ...this.state.masterData,\r\n        //                 ...response[0].data,\r\n        //                 //   samplestorageretrieval: response[0].data['samplestorageretrieval'],\r\n        //             },\r\n        //             loading: false\r\n        //         });\r\n        //     }).catch(error => {\r\n        //         if (error.response.status === 500) {\r\n        //             toast.error(error.message);\r\n        //         } else {\r\n        //             toast.warn(error.response.data);\r\n        //         }\r\n        //         this.setState({\r\n        //             loading: false\r\n        //         });\r\n        //     });\r\n    }\r\n    addSampleStorageMapping() {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            // nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"containertype/getContainerType\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n                const containerstructureMap = constructOptionList(response[0].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        directionmasterOptions: directionmasterList,\r\n                        // ncontainertypecode: containerTypeList[0],\r\n                        // containerStructureOptions: containerstructureList,\r\n                        // ncontainerstructurecode: containerstructureList[0],\r\n                        nrow: containerStructure.length > 0 ? containerStructure[0].nrow : 1,\r\n                        ncolumn: containerStructure.length > 0 ? containerStructure[0].ncolumn : 1,\r\n                        isInitialRender: true\r\n\r\n                    },\r\n                    openSpreadSheet: false,\r\n                    operation: 'create',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\ngetprojectbarcodeconfig(nflag) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        let obj = convertDateValuetoString(this.state.masterData.fromDate, this.state.masterData.toDate, this.props.Login.userInfo);\r\n        inputParamData = {\r\n            nprojecttypecode: this.state.selectedProjectType.nprojecttypecode.value,\r\n            isFilterSubmit: nflag,\r\n            // fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n            // toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n            fromDate:  obj.fromDate,\r\n            toDate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let masterData = this.state.masterData.samplestorageretrieval\r\n                this.setState(nflag == false ? {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    // selectedRecord: {\r\n                    //     nprojecttypecode: { label: comboData.label, value: comboData.value }\r\n                    // },\r\n                    loading: false\r\n                } : {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    breadCrumbdata: {\r\n                        breadcrumbprojecttype: {\r\n                            value: this.state.selectedProjectType.nprojecttypecode.label\r\n                        },\r\n                        ...convertDateValuetoString(this.state.masterData.fromDate,\r\n                            this.state.masterData.toDate, this.props.Login.userInfo)\r\n                    },\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n                        toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n                        samplestorageretrieval: response[0].data.samplestorageretrieval\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    getContainerStructure(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            ncontainertypecode: comboData.value,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getContainerStructure\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { containerStructureOptions, selectedRecord } = this.state\r\n\r\n                let containerStructureList = constructOptionList(response[0].data.containerStructure || [], \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, undefined);\r\n                containerStructureOptions = containerStructureList.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nrow: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.nrow : 1,\r\n                    ncolumn: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.ncolumn : 1,\r\n                    ncontainerstructurecode: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0] : [],\r\n                    containerStructureOptions: containerStructureOptions.length > 0 ?\r\n                        [...containerStructureOptions] : [],\r\n                }\r\n\r\n                this.setState({\r\n\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    onSampleMappingSaveClick = () => {\r\n        const mandatoryFields = this.state.openSpreadSheet ? [] : this.state.selectedRecord[\"nneedposition\"] === undefined ||\r\n            this.state.selectedRecord[\"nneedposition\"] === false ? [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\",\r\n                \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            }\r\n        ] : [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\",\r\n                \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n            ,\r\n            {\r\n                \"idsName\": \"IDS_CONTAINERTYPE\",\r\n                \"dataField\": \"ncontainertypecode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_CONTAINERSTRUCTURENAME\",\r\n                \"dataField\": \"ncontainerstructurecode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_DIRECTION\",\r\n                \"dataField\": \"ndirectionmastercode\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            }\r\n        ]\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n            this.onSaveClick)\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateChange: event.dataState\r\n        });\r\n    }\r\n\r\n    approveSampleStorageMapping = (event) => {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/approveSampleStorageMapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    getSelectedBarcodeData(e, inputParam) {\r\n        if (e.keyCode === 13) {\r\n            this.setState({ loading: true })\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestorageretrieval/getSelectedBarcodeData\", {\r\n                // nprojecttypecode: this.state.selectedBarcodeValue.nprojecttypecode,\r\n                spositionvalue: inputParam.spositionvalue,\r\n                userinfo: this.props.Login.userInfo\r\n            });\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let dynamicfields = [];\r\n                    dynamicfields = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_QUANTITY\", \"dataField\": \"nquantity\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"200px\", \"staticField\": true }];\r\n                    const temparray2 = response[0].data['selectedProjectTypeList'] && response[0].data['selectedProjectTypeList'].map((option) => {\r\n                        return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n                    });\r\n                    dynamicfields = [...dynamicfields, ...temparray2]\r\n                    this.setState({\r\n                        dynamicfields,\r\n                        selectedBarcodeValue: { ...response[0].data['selectedBarcodeValue'] },\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            dynamicfields: [],\r\n                            selectedBarcodeValue: {}\r\n                        })\r\n                        toast.info(error.response.data);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n    getDynamicFilterExecuteData(nflag) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (nflag === 2 ? true : (selectedRecord.filterquery && selectedRecord.filterquery !== \"\")) {\r\n            this.setState({ loading: true })\r\n            let obj = {// ...inputParam.component, \r\n                label: 'samplestorageretrieval', valuemember: 'nsamplestorageretrievalcode',\r\n                filterquery: nflag === 2 ?\r\n                    this.state.submittedselectedRecord.filterquery\r\n                    :\r\n                    selectedRecord.filterquery,\r\n                fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n                toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n                nprojecttypecode: this.state.selectedProjectType.nprojecttypecode.value\r\n                , source: 'view_sampleretrieval_' + this.state.selectedProjectType.nprojecttypecode.value, userinfo: this.props.Login.userInfo\r\n            }\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let masterData = this.state.masterData\r\n                    masterData = { ...masterData, ...response[0].data }\r\n                    this.setState({\r\n                        masterData: { ...masterData },\r\n                        loading: false,\r\n                        openModal: false,\r\n                        isFilterPopup: false,\r\n                        submittedselectedRecord: nflag === 2 ?\r\n                            { ...this.state.submittedselectedRecord }\r\n                            :\r\n                            { ...selectedRecord }\r\n                        ,\r\n                        selectedRecord: {},\r\n                        displayQuery: this.state.tree ? QbUtils.queryString(this.state.tree, this.state.config, true) : \"\"\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAFILTER\" }));\r\n\r\n        }\r\n    }\r\n    // getDynamicFilterExecuteData(nflag) {\r\n    //     this.setState({ loading: true })\r\n    //     let selectedRecord = this.state.selectedRecord || {};\r\n    //     let obj = {// ...inputParam.component, \r\n    //         label: 'samplestorageretrieval', valuemember: 'nsamplestoragetransactioncode',\r\n    //         filterquery:   \r\n    //         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\r\n    //     }\r\n    //     let urlArray = [];\r\n    //     const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\r\n    //     urlArray = [url1];\r\n    //     Axios.all(urlArray)\r\n    //         .then(response => {\r\n    //             console.log(response)\r\n    //             let masterData = this.state.masterData\r\n    //             masterData = { ...masterData, ...response[0].data }\r\n    //             this.setState({\r\n    //                 masterData: { ...masterData },\r\n    //                 loading: false,\r\n    //                 openModal: false,\r\n    //                 submittedselectedRecord: nflag === 2 ?\r\n    //                     { ...this.state.submittedselectedRecord }\r\n    //                     :\r\n    //                     { ...selectedRecord }\r\n    //                 ,\r\n    //                 isFilterPopup: false,\r\n    //                 selectedRecord: {}\r\n    //             })\r\n    //         })\r\n    //         .catch(error => {\r\n    //             this.setState({\r\n    //                 loading: false\r\n    //             });\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(error.response.data.rtn);\r\n    //             }\r\n\r\n    //         })\r\n    // }\r\n\r\n    fetchRecord = (data) => {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"samplestorageretrieval/getEditSampleStorageMapping\",\r\n            { 'nsamplestoragemappingcode': data.nsamplestoragemappingcode, 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2, url3];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n\r\n                const containerstructureMap = constructOptionList(response[2].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                const editedObject = response[2].data.editsampleStorageMapping;\r\n\r\n                storageMappingMapList.unshift({ label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode })\r\n                selectedRecord = {\r\n                    ndirectionmastercode: { label: editedObject.sdirection, value: editedObject.ndirectionmastercode },\r\n                    nsamplestoragecontainerpathcode: { label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode },\r\n                    nproductcode: { label: editedObject.sproductname, value: editedObject.nproductcode },\r\n                    ncontainertypecode: { label: editedObject.scontainertype, value: editedObject.ncontainertypecode },\r\n                    ncontainerstructurecode: { label: editedObject.scontainerstructurename, value: editedObject.ncontainerstructurecode },\r\n                    nneedposition: editedObject.nneedposition === 3 ? true : false,\r\n                    directionmasterOptions: directionmasterList,\r\n                    nquantity: editedObject.nquantity,\r\n                    nrow: editedObject.nrow,\r\n                    ncolumn: editedObject.ncolumn,\r\n                    nsamplestoragemappingcode: editedObject.nsamplestoragemappingcode\r\n                }\r\n                this.setState({\r\n                    openSpreadSheet: false,\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        containerStructureOptions: containerstructureList,\r\n                        isInitialRender: true\r\n                    },\r\n                    operation: 'update',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    // Actions End\r\n    retrievalType = () => {\r\n        let retrievalType = this.state.retrievalType;\r\n        if (retrievalType === 1) {\r\n            retrievalType = 2;\r\n        } else {\r\n            retrievalType = 1;\r\n        }\r\n        this.setState({ retrievalType: retrievalType })\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        }\r\n        else if (event.target.type === 'select-one') {\r\n\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.sheetData !== this.state.sheetData)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    handlePageChangeFilter = (event) => {\r\n        this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    onChange = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"tree\"] = immutableTree;\r\n        selectedRecord[\"config\"] = config;\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n    // cellRender(tdElement, cellProps) {\r\n\r\n    //     if (cellProps.rowType === \"groupFooter\") {\r\n    //         console.log('cellProps.field', cellProps)\r\n    //         if (cellProps.dataItem.field === \"ssamplestoragelocationname\") {\r\n    //             console.log('tdElement', tdElement, 'cellProps', cellProps)\r\n    //             return (\r\n    //                 <td aria-colindex={cellProps.columnIndex} role={\"gridcell\"}>\r\n    //                     Sum: {cellProps.dataItem.aggregates.navailablespace.sum}\r\n    //                 </td>\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     return tdElement;\r\n    // }\r\n    // handleGroupChange = (event) => {\r\n    //     const newDataState = this.processWithGroups(this.state.masterData.samplestorageretrieval || [], this.state.dataStateChange, event.group);\r\n    //     this.setState({\r\n    //         masterData: { ...this.state.masterData, samplestorageretrieval: newDataState },\r\n    //         group: event.group,\r\n    //     });\r\n    // };\r\n    // processWithGroups = (data, group) => {\r\n    //     const newDataState = groupBy(data, group);\r\n    //     return newDataState;\r\n    // };\r\n    processWithGroups = (data, dataState) => {\r\n        const aggregates = [\r\n            {\r\n                field: \"navailablespace\",\r\n                aggregate: \"sum\",\r\n            }\r\n        ];\r\n        const groups = dataState.group;\r\n        if (groups) {\r\n            groups.map((group) => (group.aggregates = aggregates));\r\n        }\r\n        dataState.group = groups;\r\n        const newDataState = process(data, dataState);\r\n        // setGroupIds({\r\n        //     data: newDataState.data,\r\n        //     group: dataState.group,\r\n        // });\r\n        return newDataState;\r\n    };\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray1 = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_PATHWITHPOSITION\", \"dataField\": \"scontainerpathwithposition\", \"width\": \"500px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_CONTAINERID\", \"dataField\": \"sboxid\", \"width\": \"200px\", \"staticField\": true },\r\n      //  { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_QUANTITY\", \"dataField\": \"nquantity\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_TRANSACTIONSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"dtransactiondate\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\", \"staticField\": true }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n        });\r\n        const newArray = [...temparray1, ...temparray2]\r\n        return newArray;\r\n    }\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        let masterData = this.state.masterData;\r\n        masterData[dateName] = dateValue;\r\n        this.setState({ masterData });\r\n\r\n    }\r\n    render() {\r\n        const addId = this.state.controlMap.has(\"Add samplestorageretrieval\") && this.state.controlMap.get(\"Add samplestorageretrieval\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\r\n        const retrievedispose= this.state.controlMap.has(\"Retrieve/Dispose\") && this.state.controlMap.get(\"Retrieve/Dispose\").ncontrolcode;\r\n\r\n        let fromDate = this.state.masterData && this.state.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate) : new Date();\r\n        let toDate = this.state.masterData && this.state.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate) : new Date();\r\n\r\n        //  let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\r\n\r\n        const extractedColumnList = this.state.selectedProjectTypeList ? this.gridfillingColumn(this.state.selectedProjectTypeList) : [];\r\n\r\n        let fields = {};\r\n        if (extractedColumnList.length > 0) {\r\n            extractedColumnList.map(field => {\r\n                field.hasOwnProperty(\"staticField\") ?\r\n                    fields = {\r\n                        ...fields,\r\n                        [field.dataField]: {\r\n                            \"label\": this.props.intl.formatMessage({\r\n                                id: field.idsName,\r\n                            })\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": this.props.intl.formatMessage({\r\n                                    id: field.idsName\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    :\r\n                    fields = {\r\n                        ...fields,\r\n                        ['\"' + field.dataField + '\"']: {\r\n                            \"label\": field.dataField\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": field.dataField\r\n                            }\r\n                        }\r\n                    }\r\n            });\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\r\n            fetchUrl: \"samplestorageretrieval/getActiveSampleStorageMappingById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssamplestoragelocationname\"]\r\n        };\r\n\r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": this.state.breadCrumbdata && this.state.breadCrumbdata.breadCrumbFrom ? this.state.breadCrumbdata.breadCrumbFrom : 'IDS_NA'\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": this.state.breadCrumbdata && this.state.breadCrumbdata.breadCrumbto ? this.state.breadCrumbdata.breadCrumbto : 'IDS_NA'\r\n            },\r\n            {\r\n                \"label\": \"IDS_PROJECTTYPE\",\r\n                \"value\": this.state.breadCrumbdata &&\r\n                    this.state.breadCrumbdata.breadcrumbprojecttype ? this.state.breadCrumbdata.breadcrumbprojecttype.value : 'IDS_NA'\r\n            }\r\n\r\n        ];\r\n\r\n        const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n\r\n                <Preloader loading={this.state.loading} />\r\n                {//this.state.retrievalType === 1 ?\r\n                    <>\r\n\r\n                        <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                            {\r\n                                <>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <InputGroup.Append>\r\n                                                <AdvFilter\r\n                                                    filterComponent={[{\r\n                                                        \"IDS_SAMPLESTORAGERETRIEVEFILTER\": <> \r\n                                                                <Col md={12}>\r\n                                                                    <Row>\r\n                                                                        <Col md={6}>\r\n                                                                            <DateTimePicker\r\n                                                                                name={\"fromdate\"}\r\n                                                                                label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                                                                className=\"form-control\"\r\n                                                                                placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                                                                selected={fromDate}\r\n                                                                                value={fromDate}\r\n                                                                                dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                                                                isClearable={false}\r\n                                                                                onChange={(date) =>\r\n                                                                                    this.handleFilterDateChange(\"fromDate\", date)}\r\n                                                                            />\r\n                                                                        </Col>\r\n                                                                        <Col md={6}>\r\n                                                                            <DateTimePicker\r\n                                                                                name={\"todate\"}\r\n                                                                                label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                                className=\"form-control\"\r\n                                                                                placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                                selected={toDate}\r\n                                                                                value={toDate}\r\n                                                                                dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                                                                isClearable={false}\r\n                                                                                onChange={(date) =>\r\n                                                                                    this.handleFilterDateChange(\"toDate\", date)}\r\n                                                                            />\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                    <Row>\r\n                                                                        <Col md={12}>\r\n                                                                            <FormSelectSearch\r\n                                                                                name={\"nprojecttypecode\"}\r\n                                                                                as={\"select\"}\r\n                                                                                onChange={(event) => this.onComboChange(event, 'nprojecttypecode')}\r\n                                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                                isMandatory={this.state.selectedRecord[\"nneedposition\"]}\r\n                                                                                value={this.state.selectedProjectType && this.state.selectedProjectType[\"nprojecttypecode\"] ? this.state.selectedProjectType[\"nprojecttypecode\"] || [] : []}\r\n                                                                                options={this.state.masterData && this.state.masterData.projectbarcodeconfig || []}\r\n                                                                                optionId={\"value\"}\r\n                                                                                optionValue={\"label\"}\r\n                                                                                isMulti={false}\r\n                                                                                isDisabled={false}\r\n                                                                                isSearchable={false}\r\n                                                                                isClearable={false}\r\n                                                                            />\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Col> \r\n\r\n                                                        </>\r\n                                                    }]}\r\n                                                    dataFor=\"tooltip_list_wrap\"\r\n                                                    onFilterSubmit={this.onFilterSubmit}\r\n                                                    showFilter={this.state.showFilter}\r\n                                                    openFilter={this.openFilter}\r\n                                                    closeFilter={this.closeFilter}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                                />\r\n                                            </InputGroup.Append>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {this.state.selectedProjectTypeList &&\r\n                                        <Row> <Col md={12}>\r\n                                            <DataGrid\r\n                                                // isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\r\n                                                //     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //             take: 10,\r\n                                                //             skip: 0\r\n                                                //         }).data.length > 0 ?\r\n                                                //     true : false}\r\n                                                // isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\r\n                                                //     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //             take: 10,\r\n                                                //             skip: 0\r\n                                                //         }).data.length > 0 ?\r\n                                                //     true : false}\r\n                                                isCustomButton={true}\r\n                                                customButtonlist={[\r\n                                                    //     {\r\n                                                    //     label: 'IDS_SEARCH',\r\n                                                    //     id: {},\r\n                                                    //     onClick: () => this.opensearch(),\r\n                                                    //     controlname: 'faSearch'\r\n                                                    // },\r\n                                                    {\r\n                                                        label: 'IDS_RETRIEVEDISPOSE',\r\n                                                        id: {},\r\n                                                        hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\r\n                                                        onClick: () => this.openRetrieveDispose(),\r\n                                                        controlname: 'faRecycle'\r\n                                                    }]}\r\n                                                isRefreshRequired={false}\r\n                                                // onGroupChange={this.handleGroupChange}\r\n                                                primaryKeyField={'nsamplestoragetransactioncode'}\r\n                                                data={this.state.masterData &&\r\n                                                    this.state.masterData.samplestorageretrieval}\r\n                                                dataResult={this.state.masterData &&\r\n                                                    this.state.masterData.samplestorageretrieval ?\r\n                                                    process(this.state.masterData.samplestorageretrieval || [],\r\n                                                        this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }) : []\r\n                                                    // this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                    //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    //         take: 10,\r\n                                                    //         skip: 0\r\n                                                    //     })\r\n                                                }\r\n                                                dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                extractedColumnList={extractedColumnList}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                deleteRecord={this.deleteRecord}\r\n                                                addRecord={() => this.openStorageMapping()}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                // isComponent={true}\r\n                                                gridHeight={'600px'}\r\n                                                // isActionRequired={true}\r\n                                                isToolBarRequired={true}\r\n                                            // actionIcons={\r\n                                            //     [{\r\n                                            //         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n                                            //         controlname: \"faPenSquare\",\r\n                                            //         hidden: false,\r\n                                            //         objectName: \"add\",\r\n                                            //         onClick: (param) => this.addSample(param, 1)\r\n                                            //     }]}\r\n                                            />\r\n\r\n                                        </Col></Row>\r\n\r\n                                    }\r\n\r\n\r\n                                </>\r\n\r\n\r\n                            }\r\n\r\n                        </ListWrapper>\r\n\r\n                        {/* < ListWrapper className=\"client-list-content\" ><Row> \r\n                        </Row>\r\n                            <Col md={12}>\r\n                                <Col md={6}>\r\n                                    <Row>\r\n                                        <FormInput\r\n                                            name={'spositionvalue'}\r\n                                            onb\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            value={this.state.selectedRecord['spositionvalue']\r\n                                                ? this.state.selectedRecord['spositionvalue'] : \"\"}\r\n                                            maxLength={255}\r\n                                            isDisabled={this.props.isDisabled}\r\n                                            onKeyDown={(event) => this.getSelectedBarcodeData(this.state.selectedRecord)}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    {this.state.selectedBarcodeValue && <div className=\"d-flex justify-content-end mr-3\">\r\n                                        <Row>\r\n                                            {\r\n                                                extractedColumnList.map((item, index) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <Col md={6} key={`specInfo_${index}`}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>{this.props.intl.formatMessage({ id: item.idsName })}</FormLabel>\r\n                                                                    <ReadOnlyText>{this.state.selectedBarcodeValue[item.dataField]}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Row>\r\n                                    </div>}\r\n                                </Col>\r\n                            </Col></ListWrapper> */}\r\n                    </>}\r\n\r\n\r\n                {\r\n                    this.state.openModal &&\r\n                    <SlideOutModal show={this.state.openModal}\r\n                        closeModal={this.closeModal}\r\n                        hideSave={true}\r\n                        showSubmit={false}\r\n                        needClose={true}\r\n                        size={this.state.openSpreadSheet || this.state.isFilterPopup ? 'xl' : \"\"}\r\n                        operation={\"\"}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.state.isRetrieveOrDispose ? this.props.intl.formatMessage({ id: \"IDS_RETRIEVEORDISPOSESAMPLE\" }) :\r\n                            this.state.isFilterPopup ? \"\" : this.state.isMultiSampleAdd ? this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURE\" })\r\n                                : this.state.editedsheetData.scontainerpath}\r\n                        onSaveClick={this.state.isFilterPopup ? this.getDynamicFilterExecuteData.bind(this) : this.onSampleMappingSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        // className={\"wide-popup\"}\r\n\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            this.state.isRetrieveOrDispose ?\r\n                                <Col md={12}>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                name={'spositionvalue'}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })}\r\n                                                value={this.state.selectedRecord['spositionvalue']\r\n                                                    ? this.state.selectedRecord['spositionvalue'] : \"\"}\r\n                                                maxLength={20}\r\n                                                isMandatory={true}\r\n                                                isDisabled={this.props.isDisabled}\r\n                                                onKeyDown={(event) => this.getSelectedBarcodeData(event, this.state.selectedRecord)}\r\n                                                onChange={(event) => this.onInputOnChange(event)}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            {/* <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                onClick={() => this.CRUDSampleStorageTransaction({\r\n                                                    'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                                    userinfo: this.props.Login.userInfo,\r\n                                                    scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                                        ? this.state.selectedRecord.scomments : \"-\",\r\n                                                    isRetrieve: true,\r\n                                                    spositionvalue: this.state.selectedRecord.spositionvalue\r\n                                                }, 'create')}\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RETRIEVE\" })}>\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button> */}\r\n                                            <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                                                onClick={() => this.CRUDSampleStorageTransaction({\r\n                                                    'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                                    userinfo: this.props.Login.userInfo,\r\n                                                    scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                                        ? this.state.selectedRecord.scomments : \"-\",\r\n                                                    isRetrieve: true,\r\n                                                    spositionvalue: this.state.selectedRecord.spositionvalue\r\n                                                }, 'create')}>\r\n                                                <FontAwesomeIcon icon={faTrashRestore}></FontAwesomeIcon>{\"  \"}\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_RETRIEVE\" })}\r\n                                            </button>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            {/* <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                onClick={() => this.CRUDSampleStorageTransaction({\r\n                                                    'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                                    userinfo: this.props.Login.userInfo,\r\n                                                    scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                                        ? this.state.selectedRecord.scomments : \"-\",\r\n                                                    isRetrieve: false,\r\n                                                    spositionvalue: this.state.selectedRecord.spositionvalue\r\n                                                }, 'create')}\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DISPOSE\" })}>\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button> */}\r\n                                            <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                                                onClick={() => this.CRUDSampleStorageTransaction({\r\n                                                    'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                                    userinfo: this.props.Login.userInfo,\r\n                                                    scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                                        ? this.state.selectedRecord.scomments : \"-\",\r\n                                                    isRetrieve: false,\r\n                                                    spositionvalue: this.state.selectedRecord.spositionvalue\r\n                                                }, 'create')}>\r\n                                                <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>{\"  \"}\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_DISPOSE\" })}\r\n                                            </button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                name={'scomments'}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                value={this.state.selectedRecord['scomments']\r\n                                                    ? this.state.selectedRecord['scomments'] : \"\"}\r\n                                                maxLength={255}\r\n                                                onChange={(event) => this.onInputOnChange(event)}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {this.state.dynamicfields.length > 0 &&\r\n                                            <div className=' mb-2'>\r\n                                                <Card>\r\n                                                    <Card.Header>\r\n                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                            <h4>{this.props.intl.formatMessage({ id: \"IDS_SAMPLEINFO\" })}</h4>\r\n                                                        </span>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            {\r\n                                                                this.state.dynamicfields.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <>\r\n                                                                            <Col md={6} key={`specInfo_${index}`}>\r\n                                                                                <FormGroup>\r\n                                                                                    <FormLabel>{\r\n                                                                                        item.hasOwnProperty('staticField') ?\r\n                                                                                            this.props.intl.formatMessage({ id: item.idsName }) : item.idsName}  </FormLabel>\r\n                                                                                    <ReadOnlyText>{this.state.selectedBarcodeValue[item.dataField]===\"\"||\r\n                                                                                    this.state.selectedBarcodeValue[item.dataField]===undefined||\r\n                                                                                    this.state.selectedBarcodeValue[item.dataField]===null?\r\n                                                                                    \"-\":this.state.selectedBarcodeValue[item.dataField]}</ReadOnlyText>\r\n                                                                                </FormGroup>\r\n                                                                            </Col>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                })\r\n                                                                //:\r\n                                                                // <FormLabel>{\r\n                                                                //     this.props.intl.formatMessage({ id: \"IDS_NODATAFOUND\" })}  </FormLabel>\r\n                                                            }\r\n                                                        </Row>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </div>}\r\n                                    </Row>\r\n                                </Col>\r\n                                : this.state.isFilterPopup ?\r\n                                    <FilterQueryBuilder\r\n                                        fields={fields}\r\n                                        isSampleStorage={true}\r\n\r\n                                        queryArray={this.state.queryArray}\r\n                                        skip={this.state.kendoSkip}\r\n                                        take={this.state.kendoTake}\r\n                                        onChange={this.onChange}\r\n                                        tree={this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree}\r\n                                        gridColumns={this.slideList}\r\n                                        filterData={this.props.Login.slideResult || []}\r\n                                        handlePageChange={this.handlePageChangeFilter}\r\n                                        static={true}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        updateStore={this.props.updateStore}\r\n                                    />\r\n                                    : this.props.Login.loadEsign ?\r\n                                        <Esign operation={this.props.Login.operation}\r\n                                            formatMessage={this.props.intl.formatMessage}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            inputParam={this.props.Login.inputParam}\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                        />\r\n                                        :\r\n                                        this.state.openSpreadSheet ? <>\r\n                                            <MatrixComponent\r\n                                                Rows={this.state.Rows || 1}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                columns={this.state.columns || 1}\r\n                                                selectedRecord={this.state.selectedRecord.sheetData || {}}\r\n                                                sheetData={this.state.sheetData || {}}\r\n                                                isMultiSampleAdd={this.state.isMultiSampleAdd}\r\n                                                childSheetDataChange={this.childSheetDataChange}\r\n                                                editedsheetData={this.state.editedsheetData}\r\n                                                multipleSheetData={this.state.masterData &&\r\n                                                    this.state.masterData.samplestorageretrieval &&\r\n                                                    process(this.state.masterData.samplestorageretrieval || [],\r\n                                                        this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }).data} />\r\n                                        </> :\r\n                                            <AddSampleStorageMapping\r\n                                                operation={this.state.operation}\r\n                                                selectedRecordFilter={this.state.selectedRecordFilter}\r\n                                                onInputChange={(e) => this.onInputChange(e)}\r\n                                                onComboChange={this.onComboChange}\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                childDataChange={this.childDataChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                            />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService\r\n})(injectIntl(SampleStorageRetrieval));"]},"metadata":{},"sourceType":"module"}