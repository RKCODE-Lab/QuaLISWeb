{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Button,Modal,Card,Accordion,Media,ListGroup,useAccordionToggle}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faChevronDown,faChevronUp,faSave}from'@fortawesome/free-solid-svg-icons';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import{callService,crudMaster,getHomeDashBoard,updateStore,validateEsignCredential,getStaticDashBoard,getSelectionStaticDashBoard}from'../../actions';import{process}from'@progress/kendo-data-query';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import DashBoardDynamicControls from'./DashBoardDynamicControls';import{ModalInner}from\"../../components/App.styles\";import DataGrid from'../../components/data-grid/data-grid.component';import PieChart from'../dashboardtypes/charts/PieChart';import{AtAccordion}from'../../components/custom-accordion/custom-accordion.styles';import{chartType,designComponents}from'../../components/Enumeration';import{ListMasterWrapper}from'../../components/list-master/list-master.styles';import AreaChart from'./charts/AreaChart';import BubbleChart from'./charts/BubbleChart';import{ListView}from'@progress/kendo-react-listview';import{ClientList}from'../../components/App.styles';import'react-perfect-scrollbar/dist/css/styles.css';import PerfectScrollbar from'react-perfect-scrollbar';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import AccordionContext from\"react-bootstrap/AccordionContext\";import{rearrangeDateFormat}from'../../components/CommonScript';var CustomToggle=function CustomToggle(_ref){var children=_ref.children,eventKey=_ref.eventKey;var currentEventKey=React.useContext(AccordionContext);var isCurrentEventKey=currentEventKey===eventKey;var decoratedOnClick=useAccordionToggle(eventKey,function(){return isCurrentEventKey?\"\":children.props.onExpandCall();});return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\",onClick:decoratedOnClick},children,isCurrentEventKey?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronUp}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronDown}));};var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var StaticHomeDashBoard=/*#__PURE__*/function(_React$Component){_inherits(StaticHomeDashBoard,_React$Component);var _super=_createSuper(StaticHomeDashBoard);function StaticHomeDashBoard(_props){var _this;_classCallCheck(this,StaticHomeDashBoard);_this=_super.call(this,_props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterDataStatic.gridData,event.data),dataState:event.data});};_this.ListDesign=function(props){var item=props.dataItem;return/*#__PURE__*/React.createElement(ListGroup.Item,{key:\"listKey_\".concat(props.index),as:\"li\",onClick:function onClick(){return _this.listItemClick(item);},className:\"list-bgcolor \".concat(_this.props.Login.masterDataStatic.selectedDashBoardDetail?_this.props.Login.masterDataStatic.selectedDashBoardDetail[\"nstaticdashboardcode\"]===item[\"nstaticdashboardcode\"]?\"active\":\"\":\"\")},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(Media.Body,null,/*#__PURE__*/React.createElement(\"h5\",null,item.sstaticdashboardname))));};_this.closeModal=function(){var openModalForHomeDashBoard=_this.props.Login.openModalForHomeDashBoard;openModalForHomeDashBoard=false;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalForHomeDashBoard:openModalForHomeDashBoard}};_this.props.updateStore(updateInfo);};_this.checkParametersAvailable=function(){if(_this.props.Login.masterDataStatic&&_this.props.Login.masterDataStatic.filterParams&&_this.props.Login.masterDataStatic.filterParams.length>0){var selectedRecordStatic=_this.state.selectedRecordStatic;_this.props.Login.masterDataStatic.filterParams.forEach(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){if(_this.props.Login.masterDataStatic[item.sfieldname]!==undefined){selectedRecordStatic[item.sfieldname]=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterDataStatic[item.sfieldname]);}}});var openModalForHomeDashBoard=_this.props.Login.openModalForHomeDashBoard;openModalForHomeDashBoard=true;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalForHomeDashBoard:openModalForHomeDashBoard,selectedRecordStatic:selectedRecordStatic}};_this.props.updateStore(updateInfo);}};_this.listItemClick=function(item){if(item!==undefined&&item.nstaticdashboardcode>0){_this.props.getStaticDashBoard(_this.props.Login.userInfo,item,_this.props.Login.masterDataStatic);}};_this.handleDateChange=function(dateName,dateValue,item){var selectedRecordStatic=_this.state.selectedRecordStatic;selectedRecordStatic[dateName]=dateValue;_this.setState({selectedRecordStatic:selectedRecordStatic});};_this.onSaveClick=function(saveType,formRef){_this.props.getStaticDashBoard(_this.props.Login.userInfo,_this.props.Login.masterDataStatic.selectedDashBoardDetail,_this.props.Login.masterDataStatic,_this.state.selectedRecordStatic,false);};_this.onInputOnChange=function(event,item){};_this.onNumericInputOnChange=function(event,item){};_this.onComboChange=function(event,item){};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.gridColumnList=[];var dataState={skip:0,take:10};_this.state={data:[],dataResult:[],dataState:dataState,selectedRecordStatic:{},controlMap:new Map(),userRoleControlRights:[],currentPageNo:0,openModal:false,selectedStaticDashBoardMaster:0};_this.searchRef=React.createRef();return _this;}_createClass(StaticHomeDashBoard,[{key:\"render\",value:function render(){var _this2=this;//console.log(\"static dashbaord screen:\", this.props.Login.masterDataStatic);\nvar gridColumnList=[];if(this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.gridData&&this.props.Login.masterDataStatic.gridData!==undefined){Object.keys(this.props.Login.masterDataStatic.gridData[0]).forEach(function(key){gridColumnList.push({\"idsName\":_this2.props.intl.formatMessage({id:key}),\"dataField\":key,\"width\":\"200px\"});});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap\"},/*#__PURE__*/React.createElement(Row,{noGutters:false},/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(AtAccordion,{class:\"at-accordion\"},/*#__PURE__*/React.createElement(Accordion,{defaultActiveKey:\"0\"},/*#__PURE__*/React.createElement(Card,null,this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.staticDashBoardMaster&&this.props.Login.masterDataStatic.staticDashBoardMaster!==undefined?this.props.Login.masterDataStatic.staticDashBoardMaster.map(function(item,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(CustomToggle,{eventKey:String(index)},/*#__PURE__*/React.createElement(Card.Title,{onExpandCall:function onExpandCall(){return false;}},item.sstaticdashboardmastername))),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:String(index)},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(ListMasterWrapper,null,/*#__PURE__*/React.createElement(ClientList,{className:\"product-list\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},item.staticDBDetailsList?/*#__PURE__*/React.createElement(ListView,{data:item.staticDBDetailsList,item:function item(props){return _this2.ListDesign(props);}}):\"\")))))))));}):/*#__PURE__*/React.createElement(React.Fragment,null))))),this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.pieChartData&&/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6,className:\"border border-right-0 border-top-0\"},/*#__PURE__*/React.createElement(PieChart// chartData={this.props.Login.masterData && this.props.Login.masterData.donutChartData || []}\n,{chartItemClick:function chartItemClick(event){return _this2.chartItemClick(event);},series:this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.pieChartData||[],masterData:this.props.Login.masterDataStatic,dashBoardType:this.props.Login.masterDataStatic,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.checkParametersAvailable,chartTypeName:this.props.Login.masterDataStatic.chartTypeCode===chartType.PIECHART?\"pie\":\"donut\",valueField:\"valueField\",categoryField:\"categoryField\",hiddenParam:false,hiddenExport:true,filterParam:this.props.Login.masterDataStatic.filterParams||[],selectedRecord:this.props.Login.selectedRecordStatic||this.props.Login.masterDataStatic,isStaticDashBoard:true,staticTitle:this.props.Login.masterDataStatic.selectedDashBoardDetail?this.props.Login.masterDataStatic.selectedDashBoardDetail.sstaticdashboardname:\"\"})),/*#__PURE__*/React.createElement(Col,{md:6,className:\"border\"},this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.gridData?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"pl-3 mt-1\"},/*#__PURE__*/React.createElement(Card,{className:\"d-flex border-0 justify-content-between\",style:{flexDirection:\"row\"}},/*#__PURE__*/React.createElement(Card.Title,null,this.props.Login.masterDataStatic.selectedCategoryField?this.props.Login.masterDataStatic.selectedCategoryField:\"\",\" \",this.props.Login.masterDataStatic.selectedValueField?\": \".concat(this.props.Login.masterDataStatic.selectedValueField):this.props.Login.masterDataStatic.gridData?\": \".concat(this.props.Login.masterDataStatic.gridData.length):\"\"))),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"npreregno\",data:this.props.Login.masterDataStatic.gridData,dataResult:this.props.Login.masterDataStatic.gridData,dataState:this.state.dataState,dataStateChange:function dataStateChange(event){return _this2.setState({dataState:event.dataState});},extractedColumnList:gridColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,pageable:false,scrollable:\"scrollable\",isComponent:false,isActionRequired:false,isToolBarRequired:false,hideColumnFilter:true,selectedId:this.props.Login.selectedId,gridHeight:\"450px\"// name=\"IDS_ALERTVIEW\"\n}))):\"\"),/*#__PURE__*/React.createElement(Col,{md:12,className:\"border border-top-0\"},/*#__PURE__*/React.createElement(React.Fragment,null,this.props.Login.masterDataStatic.selectionChartType!==chartType.BUBBLE?/*#__PURE__*/React.createElement(AreaChart,{xSeries:this.props.Login.masterDataStatic.xSeries,ySeries:this.props.Login.masterDataStatic.ySeries,masterData:this.props.Login.masterDataStatic,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.props.checkParametersAvailable//chartTypeName={\"column\"}\n,dashBoardType:this.props.Login.masterDataStatic,chartTypeName:this.props.Login.masterDataStatic.selectionChartType===chartType.AREACHART?\"area\":this.props.Login.masterDataStatic.selectionChartType===chartType.COLUMNCHART?\"column\":this.props.Login.masterDataStatic.selectionChartType===chartType.BARCHART?\"bar\":\"area\",hiddenParam:true,hiddenExport:true}):/*#__PURE__*/React.createElement(BubbleChart,{bubbleSeries:this.props.Login.masterDataStatic.bubbleSeries,chartData:this.props.Login.masterDataStatic.chartData,masterData:this.props.Login.masterDataStatic,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.props.checkParametersAvailable,hiddenParam:true,hiddenExport:true}))))))),this.props.Login.openModalForHomeDashBoard&&/*#__PURE__*/React.createElement(Modal,{show:this.props.Login.openModalForHomeDashBoard,onHide:this.closeModal,backdrop:\"static\",className:\"dashboard-parameter\",dialogClassName:\"freakerstop\"},/*#__PURE__*/React.createElement(Modal.Header,{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(Modal.Title,{id:\"create-password\",className:\"header-primary flex-grow-1\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_PARAMETER\",defaultMessage:\"Parameter\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-cancel\",variant:\"\",onClick:this.closeModal},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CANCEL\",defaultMessage:\"Cancel\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:this.onSaveClick},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBMIT\",defaultMessage:\"Submit\"}))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(ModalInner,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(DashBoardDynamicControls,{selectedRecord:this.state.selectedRecordStatic||this.props.Login.selectedRecordStatic||{},onInputOnChange:this.onInputOnChange,onNumericInputOnChange:this.onNumericInputOnChange,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,viewDashBoardDesignConfigList:this.props.Login.masterDataStatic.filterParams||[],operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo}))))));}},{key:\"chartItemClick\",value:function chartItemClick(item){this.props.getSelectionStaticDashBoard(this.props.Login.userInfo,this.props.Login.masterDataStatic.selectedDashBoardDetail.nstaticdashboardcode,item.dataItem.rowItem,this.props.Login.masterDataStatic,item.dataItem);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecordStatic!==previousProps.Login.selectedRecordStatic){this.setState({selectedRecordStatic:this.props.Login.selectedRecordStatic});}if(this.props.Login.openModalForHomeDashBoard!==previousProps.Login.openModalForHomeDashBoard){this.setState({openModal:this.props.Login.openModalForHomeDashBoard});}if(this.props.Login.masterDataStatic&&this.props.Login.masterDataStatic.selectedStaticDashBoardMaster!==previousProps.Login.masterDataStatic.selectedStaticDashBoardMaster){this.setState({selectedStaticDashBoardMaster:this.props.Login.masterDataStatic.selectedStaticDashBoardMaster});}}}]);return StaticHomeDashBoard;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getHomeDashBoard:getHomeDashBoard,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getStaticDashBoard:getStaticDashBoard,getSelectionStaticDashBoard:getSelectionStaticDashBoard})(injectIntl(StaticHomeDashBoard));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dashboardtypes/StaticHomeDashBoard.jsx"],"names":["React","Row","Col","Button","Modal","Card","Accordion","Media","ListGroup","useAccordionToggle","FontAwesomeIcon","faChevronDown","faChevronUp","faSave","connect","FormattedMessage","injectIntl","callService","crudMaster","getHomeDashBoard","updateStore","validateEsignCredential","getStaticDashBoard","getSelectionStaticDashBoard","process","DEFAULT_RETURN","DashBoardDynamicControls","ModalInner","DataGrid","PieChart","AtAccordion","chartType","designComponents","ListMasterWrapper","AreaChart","BubbleChart","ListView","ClientList","PerfectScrollbar","AtTableWrap","AccordionContext","rearrangeDateFormat","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","props","onExpandCall","mapStateToProps","state","Login","StaticHomeDashBoard","dataStateChange","event","setState","dataResult","masterDataStatic","gridData","data","dataState","ListDesign","item","dataItem","index","listItemClick","selectedDashBoardDetail","sstaticdashboardname","closeModal","openModalForHomeDashBoard","updateInfo","typeName","checkParametersAvailable","filterParams","length","selectedRecordStatic","forEach","ndesigncomponentcode","DATEPICKER","sfieldname","undefined","userInfo","nstaticdashboardcode","handleDateChange","dateName","dateValue","onSaveClick","saveType","formRef","onInputOnChange","onNumericInputOnChange","onComboChange","createRef","extractedColumnList","gridColumnList","skip","take","controlMap","Map","userRoleControlRights","currentPageNo","openModal","selectedStaticDashBoardMaster","searchRef","Object","keys","key","push","intl","formatMessage","id","staticDashBoardMaster","map","String","sstaticdashboardmastername","staticDBDetailsList","pieChartData","chartItemClick","chartTypeCode","PIECHART","flexDirection","selectedCategoryField","selectedValueField","selectedId","selectionChartType","BUBBLE","xSeries","ySeries","AREACHART","COLUMNCHART","BARCHART","bubbleSeries","chartData","operation","inputParam","rowItem","previousProps","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Button, Modal, Card, Accordion, Media, ListGroup, useAccordionToggle } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, getHomeDashBoard,\r\n    updateStore, validateEsignCredential, getStaticDashBoard, getSelectionStaticDashBoard\r\n} from '../../actions';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport DashBoardDynamicControls from './DashBoardDynamicControls';\r\nimport { ModalInner } from \"../../components/App.styles\";\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport PieChart from '../dashboardtypes/charts/PieChart';\r\nimport { AtAccordion } from '../../components/custom-accordion/custom-accordion.styles';\r\nimport { chartType, designComponents } from '../../components/Enumeration';\r\nimport { ListMasterWrapper } from '../../components/list-master/list-master.styles';\r\nimport AreaChart from './charts/AreaChart';\r\nimport BubbleChart from './charts/BubbleChart';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { ClientList } from '../../components/App.styles';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport { rearrangeDateFormat } from '../../components/CommonScript';\r\n\r\nconst CustomToggle = ({ children, eventKey }) => {\r\n    const currentEventKey = React.useContext(AccordionContext);\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    const decoratedOnClick = useAccordionToggle(eventKey,\r\n        () => isCurrentEventKey ? \"\" : children.props.onExpandCall()\r\n    );\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex justify-content-between\"\r\n            onClick={decoratedOnClick}\r\n        >\r\n            {children}\r\n            {isCurrentEventKey ?\r\n                <FontAwesomeIcon icon={faChevronUp} />\r\n                : <FontAwesomeIcon icon={faChevronDown}\r\n                />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass StaticHomeDashBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.gridColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n\r\n        this.state = {\r\n            data: [],\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            selectedRecordStatic: {},\r\n            controlMap: new Map(), userRoleControlRights: [],\r\n            currentPageNo: 0,\r\n            openModal: false,\r\n            selectedStaticDashBoardMaster: 0\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterDataStatic.gridData, event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n\r\n    ListDesign = props => {\r\n        let item = props.dataItem;\r\n        return (\r\n            <ListGroup.Item key={`listKey_${props.index}`} as=\"li\" onClick={() => this.listItemClick(item)}\r\n                className={`list-bgcolor ${this.props.Login.masterDataStatic.selectedDashBoardDetail ? this.props.Login.masterDataStatic.selectedDashBoardDetail[\"nstaticdashboardcode\"] === item[\"nstaticdashboardcode\"] ? \"active\" : \"\" : \"\"}`}>\r\n                <Media>\r\n                    <Media.Body>\r\n                        <h5>{item.sstaticdashboardname}</h5>\r\n                        {/* <p>\r\n                            {item.sdescription}\r\n                        </p> */}\r\n                    </Media.Body>\r\n                </Media>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        //console.log(\"static dashbaord screen:\", this.props.Login.masterDataStatic);\r\n        const gridColumnList = [];\r\n        if (this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.gridData && this.props.Login.masterDataStatic.gridData !== undefined) {\r\n\r\n            Object.keys(this.props.Login.masterDataStatic.gridData[0]).forEach(key => {\r\n                gridColumnList.push({ \"idsName\": this.props.intl.formatMessage({ id: key }), \r\n                                      \"dataField\": key, \r\n                                      \"width\": \"200px\" });\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap\">\r\n                    <Row noGutters={false}>\r\n                        <Col md={3}>\r\n                            <AtAccordion class=\"at-accordion\">\r\n                                <Accordion defaultActiveKey={\"0\"} >\r\n                                    <Card>\r\n                                        {this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.staticDashBoardMaster \r\n                                                && this.props.Login.masterDataStatic.staticDashBoardMaster !== undefined ?\r\n                                            this.props.Login.masterDataStatic.staticDashBoardMaster.map((item, index) => {\r\n                                                return (<>\r\n                                                    <Card.Header>\r\n                                                        <CustomToggle eventKey={String(index)}>\r\n                                                            <Card.Title onExpandCall={() => false}>\r\n                                                                {item.sstaticdashboardmastername}\r\n                                                            </Card.Title>\r\n                                                        </CustomToggle>\r\n                                                    </Card.Header>\r\n\r\n                                                    <>\r\n                                                        <Accordion.Collapse eventKey={String(index)}>\r\n\r\n                                                            <Card.Body className=\"p-0\">\r\n                                                                <ListMasterWrapper>\r\n\r\n                                                                    <ClientList className=\"product-list\">\r\n                                                                        <PerfectScrollbar>\r\n                                                                            <div>\r\n                                                                                <ListGroup as=\"ul\">\r\n                                                                                    {item.staticDBDetailsList ?\r\n                                                                                        <ListView\r\n                                                                                            data={item.staticDBDetailsList}\r\n                                                                                            item={(props) => this.ListDesign(props)}\r\n                                                                                        /> : \"\"}\r\n                                                                                </ListGroup>\r\n                                                                            </div>\r\n                                                                        </PerfectScrollbar>\r\n\r\n                                                                    </ClientList>\r\n                                                                </ListMasterWrapper>\r\n                                                            </Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </>\r\n                                                </>\r\n                                                )\r\n                                            })\r\n                                            :\r\n                                            <></>\r\n                                        }\r\n                                    </Card>\r\n                                </Accordion>\r\n                            </AtAccordion>\r\n                        </Col>\r\n                        {this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.pieChartData &&\r\n                            <Col md={9}>\r\n\r\n                                <Row>\r\n\r\n                                    <Col md={6} className=\"border border-right-0 border-top-0\">\r\n                                        <PieChart\r\n                                            // chartData={this.props.Login.masterData && this.props.Login.masterData.donutChartData || []}\r\n                                            chartItemClick={event => this.chartItemClick(event)}\r\n                                            series={(this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.pieChartData) || []}\r\n                                            masterData={this.props.Login.masterDataStatic}\r\n                                            dashBoardType={this.props.Login.masterDataStatic}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            checkParametersAvailable={this.checkParametersAvailable}\r\n                                            chartTypeName={this.props.Login.masterDataStatic.chartTypeCode === chartType.PIECHART ? \"pie\" : \"donut\"}\r\n                                            valueField={\"valueField\"}\r\n                                            categoryField={\"categoryField\"}\r\n                                            hiddenParam={false}\r\n                                            hiddenExport={true}\r\n                                            filterParam={this.props.Login.masterDataStatic.filterParams || []}\r\n                                            selectedRecord={this.props.Login.selectedRecordStatic || this.props.Login.masterDataStatic}\r\n                                            isStaticDashBoard={true}\r\n                                            staticTitle={this.props.Login.masterDataStatic.selectedDashBoardDetail ? this.props.Login.masterDataStatic.selectedDashBoardDetail.sstaticdashboardname : \"\"}\r\n                                        />\r\n                                    </Col>\r\n\r\n                                    <Col md={6} className=\"border\">\r\n\r\n                                        {this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.gridData ?\r\n                                            <>\r\n                                                <Row className=\"pl-3 mt-1\">\r\n                                                    <Card className=\"d-flex border-0 justify-content-between\" style={{ flexDirection: \"row\" }}>\r\n                                                        <Card.Title>\r\n                                                            {this.props.Login.masterDataStatic.selectedCategoryField ?\r\n                                                                this.props.Login.masterDataStatic.selectedCategoryField\r\n                                                                : \"\"}{\" \"}\r\n                                                            {this.props.Login.masterDataStatic.selectedValueField ?\r\n                                                                `: ${this.props.Login.masterDataStatic.selectedValueField}`\r\n                                                                : this.props.Login.masterDataStatic.gridData ? `: ${this.props.Login.masterDataStatic.gridData.length}` : \"\"}\r\n                                                        </Card.Title>\r\n                                                    </Card>\r\n                                                </Row>\r\n                                                <AtTableWrap className=\"at-list-table\">\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"npreregno\"}\r\n                                                        data={this.props.Login.masterDataStatic.gridData}\r\n                                                        dataResult={this.props.Login.masterDataStatic.gridData}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n                                                        extractedColumnList={gridColumnList}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        pageable={false}\r\n                                                        scrollable={\"scrollable\"}\r\n                                                        isComponent={false}\r\n                                                        isActionRequired={false}\r\n                                                        isToolBarRequired={false}\r\n                                                        hideColumnFilter={true}\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        gridHeight={\"450px\"}\r\n\r\n                                                    // name=\"IDS_ALERTVIEW\"\r\n                                                    />\r\n                                                </AtTableWrap>\r\n                                            </>\r\n                                            : \"\"\r\n                                        }\r\n\r\n                                    </Col>\r\n                                    <Col md={12} className=\"border border-top-0\">\r\n\r\n                                        \r\n                                            <>\r\n                                                {this.props.Login.masterDataStatic.selectionChartType !== chartType.BUBBLE?\r\n                                                    <AreaChart\r\n                                                        xSeries={this.props.Login.masterDataStatic.xSeries}\r\n                                                        ySeries={this.props.Login.masterDataStatic.ySeries}\r\n                                                        masterData={this.props.Login.masterDataStatic}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        checkParametersAvailable={this.props.checkParametersAvailable}\r\n                                                        //chartTypeName={\"column\"}\r\n                                                        dashBoardType={this.props.Login.masterDataStatic}\r\n\r\n                                                        chartTypeName={this.props.Login.masterDataStatic.selectionChartType === chartType.AREACHART ? \"area\" :\r\n                                                            this.props.Login.masterDataStatic.selectionChartType === chartType.COLUMNCHART ? \"column\" :\r\n                                                                this.props.Login.masterDataStatic.selectionChartType === chartType.BARCHART ? \"bar\" : \"area\"}\r\n                                                        hiddenParam={true}\r\n                                                        hiddenExport={true}\r\n                                                    />\r\n                                                    :\r\n                                                    <BubbleChart\r\n                                                        bubbleSeries={this.props.Login.masterDataStatic.bubbleSeries}\r\n                                                        chartData={this.props.Login.masterDataStatic.chartData}\r\n                                                        masterData={this.props.Login.masterDataStatic}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        checkParametersAvailable={this.props.checkParametersAvailable}\r\n                                                        hiddenParam={true}\r\n                                                        hiddenExport={true}\r\n\r\n                                                    />\r\n                                                }\r\n                                            </>\r\n\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    this.props.Login.openModalForHomeDashBoard &&\r\n\r\n                    <Modal show={this.props.Login.openModalForHomeDashBoard}\r\n                        onHide={this.closeModal} backdrop=\"static\" className=\"dashboard-parameter\" dialogClassName=\"freakerstop\">\r\n                        <Modal.Header className=\"d-flex align-items-center\">\r\n                            <Modal.Title id=\"create-password\" className=\"header-primary flex-grow-1\">\r\n                                <FormattedMessage id={\"IDS_PARAMETER\"} defaultMessage=\"Parameter\" />\r\n                            </Modal.Title>\r\n                            <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.closeModal}>\r\n                                <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                            </Button>\r\n                            <Button className=\"btn-user btn-primary-blue\" onClick={this.onSaveClick}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                            </Button>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ModalInner>\r\n                                <Card.Body>\r\n                                    <DashBoardDynamicControls\r\n                                        selectedRecord={this.state.selectedRecordStatic || this.props.Login.selectedRecordStatic || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        viewDashBoardDesignConfigList={this.props.Login.masterDataStatic.filterParams || []}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                    />\r\n                                </Card.Body>\r\n                            </ModalInner>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                }\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        let openModalForHomeDashBoard = this.props.Login.openModalForHomeDashBoard;\r\n        openModalForHomeDashBoard = false;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModalForHomeDashBoard }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkParametersAvailable = () => {\r\n        if (this.props.Login.masterDataStatic && this.props.Login.masterDataStatic.filterParams && this.props.Login.masterDataStatic.filterParams.length > 0) {\r\n\r\n            const { selectedRecordStatic } = this.state;\r\n            this.props.Login.masterDataStatic.filterParams.forEach(item => {\r\n\r\n                if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                    if (this.props.Login.masterDataStatic[item.sfieldname] !== undefined) {\r\n                        selectedRecordStatic[item.sfieldname] = rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterDataStatic[item.sfieldname]);\r\n                    }\r\n\r\n                }\r\n            });\r\n            let openModalForHomeDashBoard = this.props.Login.openModalForHomeDashBoard;\r\n            openModalForHomeDashBoard = true;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModalForHomeDashBoard, selectedRecordStatic }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    listItemClick = (item) => {\r\n        if (item !== undefined && item.nstaticdashboardcode > 0) {\r\n\r\n            this.props.getStaticDashBoard(this.props.Login.userInfo, item, this.props.Login.masterDataStatic);\r\n\r\n        }\r\n    }\r\n    chartItemClick(item) {\r\n        this.props.getSelectionStaticDashBoard(this.props.Login.userInfo, this.props.Login.masterDataStatic.selectedDashBoardDetail.nstaticdashboardcode,\r\n            item.dataItem.rowItem, this.props.Login.masterDataStatic, item.dataItem)\r\n    }\r\n    handleDateChange = (dateName, dateValue, item) => {\r\n        const { selectedRecordStatic } = this.state;\r\n\r\n        selectedRecordStatic[dateName] = dateValue;\r\n        this.setState({ selectedRecordStatic });\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        this.props.getStaticDashBoard(this.props.Login.userInfo, this.props.Login.masterDataStatic.selectedDashBoardDetail, this.props.Login.masterDataStatic, this.state.selectedRecordStatic, false);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecordStatic !== previousProps.Login.selectedRecordStatic) {\r\n            this.setState({ selectedRecordStatic: this.props.Login.selectedRecordStatic });\r\n        }\r\n        if (this.props.Login.openModalForHomeDashBoard !== previousProps.Login.openModalForHomeDashBoard) {\r\n            this.setState({ openModal: this.props.Login.openModalForHomeDashBoard });\r\n        }\r\n        if (this.props.Login.masterDataStatic\r\n            && this.props.Login.masterDataStatic.selectedStaticDashBoardMaster !== previousProps.Login.masterDataStatic.selectedStaticDashBoardMaster) {\r\n            this.setState({ selectedStaticDashBoardMaster: this.props.Login.masterDataStatic.selectedStaticDashBoardMaster });\r\n        }\r\n    }\r\n    onInputOnChange = (event, item) => { }\r\n    onNumericInputOnChange = (event, item) => { }\r\n    onComboChange = (event, item) => { }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getHomeDashBoard, updateStore,\r\n    validateEsignCredential, getStaticDashBoard, getSelectionStaticDashBoard\r\n})(injectIntl(StaticHomeDashBoard));"]},"metadata":{},"sourceType":"module"}