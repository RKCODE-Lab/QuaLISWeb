{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddTest.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nclass AddTest extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ntestpackagecode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TESTPACKAGE\"\n      }),\n      options: this.props.TestPackage || [],\n      optionId: \"ntestpackagecode\",\n      optionValue: \"stestpackagename\",\n      isSearchable: true,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      alphabeticalSort: \"true\",\n      value: this.props.selectPackage && this.props.selectPackage[\"ntestpackagecode\"] ? this.props.selectPackage[\"ntestpackagecode\"] : [],\n      defaultValue: this.props.selectPackage ? this.props.selectPackage[\"ntestpackagecode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onTestPackageChange(event, \"ntestpackagecode\", \"\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FormMultiSelect, {\n      name: \"ntestgrouptestcode\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      options: this.props.TestCombined || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestsynonym\",\n      value: this.props.selectedTestData && this.props.selectedTestData[\"ntestgrouptestcode\"] ? this.props.selectedTestData[\"ntestgrouptestcode\"] : [],\n      isMandatory: true,\n      isClearable: true,\n      disableSearch: false,\n      disabled: false,\n      closeMenuOnSelect: false,\n      alphabeticalSort: true,\n      onChange: event => this.props.TestChange(event, \"ntestgrouptestcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(AddTest);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/AddTest.jsx"],"names":["React","Component","Col","Row","injectIntl","FormMultiSelect","FormSelectSearch","AddTest","render","props","intl","formatMessage","id","TestPackage","selectPackage","event","onTestPackageChange","TestCombined","selectedTestData","TestChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,eAAP,MAA4B,gEAA5B;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC5BO,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,gBAAD;AACa,MAAA,IAAI,EAAE,kBADnB;AAEa,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFxB;AAGa,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,WAAX,IAA0B,EAHhD;AAIa,MAAA,QAAQ,EAAE,kBAJvB;AAKa,MAAA,WAAW,EAAC,kBALzB;AAMa,MAAA,YAAY,EAAE,IAN3B;AAOa,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAP1B;AAQa,MAAA,WAAW,EAAE,KAR1B;AASiB,MAAA,gBAAgB,EAAC,MATlC;AAUiB,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,aAAX,IAA4B,KAAKL,KAAL,CAAWK,aAAX,CAAyB,kBAAzB,CAA5B,GACP,KAAKL,KAAL,CAAWK,aAAX,CAAyB,kBAAzB,CADO,GACwC,EAXhE;AAaa,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK,aAAX,GAA2B,KAAKL,KAAL,CAAWK,aAAX,CAAyB,kBAAzB,CAA3B,GAA0E,EAbrG;AAca,MAAA,iBAAiB,EAAE,IAdhC;AAea,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKN,KAAL,CAAWO,mBAAX,CAA+BD,KAA/B,EAAsC,kBAAtC,EAAyD,EAAzD,EAA4D,IAA5D,CAflC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAoBS,oBAAC,eAAD;AACI,MAAA,IAAI,EAAE,oBADV;AAEI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFX;AAGI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWQ,YAAX,IAAyB,EAHtC;AAII,MAAA,QAAQ,EAAE,oBAJd;AAKI,MAAA,WAAW,EAAC,cALhB;AAMI,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,gBAAX,IAA6B,KAAKT,KAAL,CAAWS,gBAAX,CAA4B,oBAA5B,CAA7B,GAAkF,KAAKT,KAAL,CAAWS,gBAAX,CAA4B,oBAA5B,CAAlF,GAAsI,EANjJ;AAOI,MAAA,WAAW,EAAE,IAPjB;AAQI,MAAA,WAAW,EAAE,IARjB;AASI,MAAA,aAAa,EAAE,KATnB;AAUI,MAAA,QAAQ,EAAE,KAVd;AAWI,MAAA,iBAAiB,EAAE,KAXvB;AAYI,MAAA,gBAAgB,EAAE,IAZtB;AAaI,MAAA,QAAQ,EAAGH,KAAD,IAAW,KAAKN,KAAL,CAAWU,UAAX,CAAsBJ,KAAtB,EAA6B,oBAA7B,CAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBT,CADC,CADJ;AA0CH;;AA5C2B;;AA+ChC,eAAeX,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nclass AddTest extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n           <Col md={12}>                                                            \r\n           <FormSelectSearch\r\n                        name={\"ntestpackagecode\"}\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTPACKAGE\" })}\r\n                        options={this.props.TestPackage || []}\r\n                        optionId={\"ntestpackagecode\"}\r\n                        optionValue=\"stestpackagename\"\r\n                        isSearchable={true}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={false}\r\n                            alphabeticalSort=\"true\"\r\n                            value={this.props.selectPackage && this.props.selectPackage[\"ntestpackagecode\"] ?\r\n                            this.props.selectPackage[\"ntestpackagecode\"] : []}\r\n                       \r\n                        defaultValue={this.props.selectPackage ? this.props.selectPackage[\"ntestpackagecode\"] : \"\"}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => this.props.onTestPackageChange(event, \"ntestpackagecode\",\"\",true)}\r\n                        /> \r\n              \r\n  \r\n                    <FormMultiSelect\r\n                        name={\"ntestgrouptestcode\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                        options={this.props.TestCombined||[]}\r\n                        optionId={\"ntestgrouptestcode\"}\r\n                        optionValue=\"stestsynonym\"\r\n                        value={this.props.selectedTestData&&this.props.selectedTestData[\"ntestgrouptestcode\"]  ? this.props.selectedTestData[\"ntestgrouptestcode\"] : []}\r\n                        isMandatory={true}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => this.props.TestChange(event, \"ntestgrouptestcode\")}\r\n\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(AddTest);"]},"metadata":{},"sourceType":"module"}