{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{intl}from'../components/App';import{constructOptionList}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';export function getComboService(addParam){return function(dispatch){var nsampletypecode=addParam.nsampletypecode;var nregtypecode=addParam.nregtypecode;var nregsubtypecode=addParam.nregsubtypecode;var nformcode=addParam.nformcode;var isValid=true;if(nsampletypecode!==4){if(nsampletypecode!=-1&&nregtypecode!=-1&&nregsubtypecode!=-1&&nregsubtypecode!==undefined&&nformcode!=-1){isValid=true;}else{isValid=false;}}if(nsampletypecode===4){if(nsampletypecode!=-1&&nformcode!=-1){isValid=true;}else{isValid=false;}}if(isValid){var urlArray=[];var service1=rsapi.post(\"/approvalstatusconfig/getStatusFunction\",{userinfo:addParam.userInfo,nformcode:addParam.nformcode});var service2=rsapi.post(\"approvalstatusconfig/getTransactionStatus\",{userinfo:addParam.userInfo});urlArray=[service1,service2];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedId=null;var statusFunctionMap=constructOptionList(response[0].data||[],\"nstatusfunctioncode\",\"sapprovalstatusfunctions\",undefined,undefined,true);var statusFunctionList=statusFunctionMap.get(\"OptionList\");selectedId=addParam.primaryKeyField;var transactionsList=response[1].data;dispatch({type:DEFAULT_RETURN,payload:{statusFunctionList:statusFunctionList,transactionsList:transactionsList,operation:addParam.operation,screenName:addParam.screenName,selectedRecord:{},openModal:true,ncontrolCode:addParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};}export function getApprovalSubType(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalstatusconfig/getApprovalSubType\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{defaultForms:inputParam.inputData.defaultForms});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegTypeBySampleType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/getRegTypeBySampleType\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{defaultSample:inputParam.inputData.defaultSample});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegSubTypeByRegtype(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/getRegSubTypeByRegtype\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{defaultRegType:inputParam.inputData.defaultRegType});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.warn(error.response.data);}else{toast.warn(error.response.data);}});};}export function getTransactionForms(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/getTransactionForms\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{defaultRegSubType:inputParam.inputData.defaultRegSubType});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterSubmit(inputParam){return function(dispatch){var nsampletypecode=inputParam.inputData.nsampletypecode;var nregtypecode=inputParam.inputData.nregtypecode;var nregsubtypecode=inputParam.inputData.nregsubtypecode;var nformcode=inputParam.inputData.nformcode;var isValid=true;if(nsampletypecode!==4){if(nsampletypecode!=-1&&nregtypecode!=-1&&nregsubtypecode!=-1&&nformcode!=-1){isValid=true;}else{isValid=false;}}if(nsampletypecode===4){if(nsampletypecode!=-1&&nformcode!=-1){isValid=true;}else{isValid=false;}}if(isValid){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/getFilterSubmit\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);masterData=_objectSpread({},masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.warn(error.response.data);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};}export function changeFilterSubmit(inputParam,SampleTypes,defaultSample,registrationTypes,defaultRegType,regSubTypeList,defaultRegSubType,qualisForms,defaultForms,approvalSubType,defaultApprovalSubType){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/closeFilterService\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},response.data),inputParam.masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{SampleTypes:SampleTypes,defaultSample:defaultSample,realSampleType:defaultSample,defaultRegType:defaultRegType,realRegType:defaultRegType,defaultRegSubType:defaultRegSubType,realRegSubType:defaultRegSubType,defaultForms:defaultForms,realdefaultForms:defaultForms,defaultApprovalSubType:defaultApprovalSubType,realApprovalSubType:defaultApprovalSubType})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};}export function closeFilterService(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"approvalstatusconfig/closeFilterService\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{defaultSample:inputParam.inputData.defaultSample,defaultRegType:inputParam.inputData.defaultRegType,defaultRegSubType:inputParam.inputData.defaultRegSubType,defaultApprovalSubType:inputParam.inputData.defaultApprovalSubType,defaultForms:inputParam.inputData.defaultForms});masterData=_objectSpread({},masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/ApprovalStatusConfigAction.js"],"names":["rsapi","Axios","toast","intl","constructOptionList","DEFAULT_RETURN","initRequest","getComboService","addParam","dispatch","nsampletypecode","nregtypecode","nregsubtypecode","nformcode","isValid","undefined","urlArray","service1","post","userinfo","userInfo","service2","all","then","response","selectedId","statusFunctionMap","data","statusFunctionList","get","primaryKeyField","transactionsList","type","payload","operation","screenName","selectedRecord","openModal","ncontrolCode","loading","catch","error","status","message","warn","formatMessage","id","getApprovalSubType","inputParam","inputData","masterData","defaultForms","getRegTypeBySampleType","defaultSample","getRegSubTypeByRegtype","defaultRegType","getTransactionForms","defaultRegSubType","getFilterSubmit","changeFilterSubmit","SampleTypes","registrationTypes","regSubTypeList","qualisForms","approvalSubType","defaultApprovalSubType","realSampleType","realRegType","realRegSubType","realdefaultForms","realApprovalSubType","closeFilterService"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { intl } from '../components/App';\r\n\r\nimport {\r\n    constructOptionList\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\n\r\nexport function getComboService(addParam) {\r\n    return function (dispatch) {\r\n        const nsampletypecode = addParam.nsampletypecode;\r\n        const nregtypecode = addParam.nregtypecode;\r\n        const nregsubtypecode = addParam.nregsubtypecode;\r\n\r\n        const nformcode = addParam.nformcode;\r\n        let isValid = true;\r\n        if (nsampletypecode !== 4) {\r\n            if ((nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1) && (nregsubtypecode !== undefined) && nformcode != -1) {\r\n                isValid = true;\r\n            }\r\n            else {\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (nsampletypecode === 4) {\r\n            if ((nsampletypecode != -1) && (nformcode != -1)) {\r\n                isValid = true;\r\n            }\r\n            else {\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n\r\n        if (isValid) {\r\n            let urlArray = [];\r\n\r\n            const service1 = rsapi.post(\"/approvalstatusconfig/getStatusFunction\", { userinfo: addParam.userInfo, nformcode: addParam.nformcode });\r\n\r\n            const service2 = rsapi.post(\"approvalstatusconfig/getTransactionStatus\", { userinfo: addParam.userInfo });\r\n\r\n            urlArray = [service1, service2]\r\n\r\n            dispatch(initRequest(true));\r\n\r\n            Axios.all(urlArray).then(response => {\r\n\r\n\r\n                let selectedId = null;\r\n                const statusFunctionMap = constructOptionList(response[0].data || [], \"nstatusfunctioncode\",\r\n                    \"sapprovalstatusfunctions\", undefined, undefined, true);\r\n                const statusFunctionList = statusFunctionMap.get(\"OptionList\");\r\n\r\n                selectedId = addParam.primaryKeyField;\r\n\r\n                const transactionsList = response[1].data;\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        statusFunctionList,\r\n                        transactionsList,\r\n                        operation: addParam.operation, screenName: addParam.screenName, selectedRecord: {},\r\n                        openModal: true,\r\n                        ncontrolCode: addParam.ncontrolCode,\r\n                        loading: false, selectedId\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getApprovalSubType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalstatusconfig/getApprovalSubType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data, defaultForms: inputParam.inputData.defaultForms }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegTypeBySampleType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"approvalstatusconfig/getRegTypeBySampleType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data, defaultSample: inputParam.inputData.defaultSample }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getRegSubTypeByRegtype(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"approvalstatusconfig/getRegSubTypeByRegtype\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data, defaultRegType: inputParam.inputData.defaultRegType }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getTransactionForms(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"approvalstatusconfig/getTransactionForms\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data, defaultRegSubType: inputParam.inputData.defaultRegSubType }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getFilterSubmit(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        const nsampletypecode = inputParam.inputData.nsampletypecode;\r\n        const nregtypecode = inputParam.inputData.nregtypecode;\r\n        const nregsubtypecode = inputParam.inputData.nregsubtypecode;\r\n\r\n        const nformcode = inputParam.inputData.nformcode;\r\n        let isValid = true;\r\n        if (nsampletypecode !== 4) {\r\n            if ((nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1) && (nformcode != -1)) {\r\n                isValid = true;\r\n            }\r\n            else {\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (nsampletypecode === 4) {\r\n            if ((nsampletypecode != -1) && (nformcode != -1)) {\r\n                isValid = true;\r\n            }\r\n            else {\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (isValid) {\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"approvalstatusconfig/getFilterSubmit\", inputParam.inputData)\r\n                .then(response => {\r\n                    let masterData = { ...inputParam.masterData, ...response.data }\r\n                    masterData = { ...masterData }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                    if (error.response.status === 500) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function changeFilterSubmit(inputParam, SampleTypes, defaultSample, registrationTypes, defaultRegType, regSubTypeList, defaultRegSubType, qualisForms, defaultForms, approvalSubType, defaultApprovalSubType\r\n) {\r\n\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"approvalstatusconfig/closeFilterService\", inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {...response.data,...inputParam.masterData}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            SampleTypes,\r\n                            defaultSample,\r\n                            realSampleType: defaultSample,\r\n                            defaultRegType,\r\n                            realRegType: defaultRegType,\r\n                            defaultRegSubType,\r\n                            realRegSubType: defaultRegSubType,\r\n                            defaultForms,\r\n                            realdefaultForms: defaultForms,\r\n                            defaultApprovalSubType,\r\n                            realApprovalSubType: defaultApprovalSubType\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function closeFilterService(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"approvalstatusconfig/closeFilterService\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data ,defaultSample: inputParam.inputData.defaultSample,defaultRegType: inputParam.inputData.defaultRegType,\r\n                    defaultRegSubType: inputParam.inputData.defaultRegSubType,\r\n                        defaultApprovalSubType: inputParam.inputData.defaultApprovalSubType,\r\n                        defaultForms:inputParam.inputData.defaultForms,}\r\n                masterData = { ...masterData }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}