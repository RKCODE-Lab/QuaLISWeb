{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col,Nav,Card,Button}from'react-bootstrap';import{Grid,GridColumn}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faSave,faCopy,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import ScreenRightsFilter from'./ScreenRightsFilter';import AddScreenRights from'./AddScreenRights';import UserRoleScreenRights from'./UserRoleScreenRights';import{showEsign,getControlMap,constructOptionList,sortData}from'../../components/CommonScript';import{callService,crudMaster,validateEsignCredential,updateStore,getScreenRightsDetail,copyScreenRights,filterTransactionList,comboChangeUserRoleScreenRights,handleClickDelete,filterColumnData,getCopyUseRoleScreenRights,checkUserRoleScreenRights,reload}from'../../actions';import{initialcombochangeget,getUserScreenhideComboService,comboChangeUserRoleScreenRightsHide,getUserScreenhideDetail,ListSwitchUpdate}from'../../actions/UserRoleScreenHideAction';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus}from'../../components/Enumeration';import{ContentPanel,AtSubCard}from'../../components/App.styles';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import TransactionListMaster from'../../components/TransactionListMaster';import{ProductList}from'../product/product.styled';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import PerfectScrollbar from'react-perfect-scrollbar';import SplitterLayout from'react-splitter-layout';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport BreadcrumbComponent from'../../components/Breadcrumb.Component';import ReactTooltip from'react-tooltip';import UserRoleScreenHideFilter from'./UserRoleScreenHideFilter';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var UserRoleScreenHide=/*#__PURE__*/function(_React$Component){_inherits(UserRoleScreenHide,_React$Component);var _super=_createSuper(UserRoleScreenHide);function UserRoleScreenHide(props){var _this;_classCallCheck(this,UserRoleScreenHide);_this=_super.call(this,props);_this.dataStateChange=function(event){// if (event.dataState.group.length === 1 && event.dataState.group[0].field === 'screenname')\n// {\n_this.setState({dataResult:process(_this.props.Login.masterData.ControlRights||[],event.dataState),dataState:event.dataState});//}\n};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;event.dataItem.expanded=!isExpanded;_this.setState(_objectSpread({},_this.state));//this.setState({ ...this.state.dataState });\n};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.ListmasterSwitch=function(event,nusersrolehidescreencode){var inputData=[];//  inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"];\n// inputData[\"nusercodemain\"] = this.state.selectedcombouser[\"nusercode\"];\nvar selectedSwitch=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;var inputParam={needrights:selectedSwitch,nusersrolehidescreencode:nusersrolehidescreencode,nuserrolecode:_this.state.selectedcombo[\"nuserrolecode\"].value,nusercodemain:_this.state.selectedcombouser[\"nusercode\"].value};_this.props.ListSwitchUpdate(inputParam,_this.props.Login.masterData,_this.props.Login.userInfo);// this.setState({selectedListmasterSwitch:selectedSwitch});\n};_this.switchGroupBy=function(event){var selectedSwitch=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;var dataState=_this.state.dataState||{};if(selectedSwitch===transactionStatus.YES){dataState=_objectSpread(_objectSpread({},dataState),{},{group:[{field:'screenname'}]});}else{dataState={skip:dataState.skip,take:dataState.take};}_this.setState({selectedSwitch:selectedSwitch,dataState:dataState});};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.handleClickDelete(_this.props.Login.masterData,deleteId,\"openModal\");});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";// this.reloadData(this.state.selectedRecord, true);\nvar inputData=[];inputData[\"nuserrolecode\"]=_this.state.selectedcombo[\"nuserrolecode\"];inputData[\"nusercodemain\"]=_this.state.selectedcombouser[\"nusercode\"];var inputParam={classUrl:\"userscreenhide\",methodUrl:\"UserScreenhide\",displayName:\"IDS_USERSCREENHIDE\",inputData:inputData//,\n// operation: operation, saveType, formRef, searchRef: this.searchRef, postParam,dataState: this.state.dataState\n};if(_this.state.selectedcombo[\"nuserrolecode\"]){_this.props.comboChangeUserRoleScreenRightsHide(_this.state.selectedcombo,_this.state.selectedcombouser,_this.props.Login.masterData,_this.props.Login.userInfo);// this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n//  this.props.callService(inputParam);\n}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLE\"}));}};_this.handlePageChange=function(e){console.log('zzzzzzzzzz',e.skip);console.log('zzzzzzzzzz1',e.take);_this.setState({skip:e.skip,take:e.take});//setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"retire\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){if(fieldName===\"nuserrolecode\"){var selectedcombo=_this.state.selectedcombo||{};selectedcombo[fieldName]=comboData;_this.searchRef.current.value=\"\";//Added by Allwin for Combo Change Get\nvar inputParamcombo={nuserrolecode:comboData.item.nuserrolecode};var selectedcombouser=_this.state.selectedcombouser||{};// selectedcombouser= this.props.initialcombochangeget(comboData.item.nuserrolecode);\n_this.props.initialcombochangeget(comboData.item.nuserrolecode,_this.props.Login.masterData,_this.props.Login.userInfo);//    this.props.initialcombochangeget(comboData.item.nuserrolecode);\n//  this.props.initialcombochangeget(comboData.item.nuserrolecode,this.props.Login.masterData, this.props.Login.userInfo);\n//this.setState({ selectedcombo});\n// let dataState = this.state.dataState || {};\n// dataState= {...dataState, group: [{ field: 'screenname' }]} ;\n// masterData[\"ControlRights\"]=[]\n// this.props.comboChangeUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedcombo);\n}else if(fieldName===\"nusercode\"){var _selectedcombouser=_this.state.selectedcombouser||{};_selectedcombouser[fieldName]=comboData;_this.setState({selectedcombouser:_selectedcombouser});}else if(fieldName===\"value\"){var comboitem=_this.state.comboitem||{};comboitem[fieldName]=comboData;_this.setState({comboitem:comboitem});}else if(fieldName===\"nformcode\"){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nformcode\"]=comboData;var availableDatas=[];_this.state.selectedRecord.nformcode.map(function(data){return availableDatas.push(data.item);});_this.setState({selectedRecord:selectedRecord,availableDatas:availableDatas});}}};_this.onComboChangeUserRole=function(comboData,fieldName){if(comboData!=null){var selectedRecord=_this.state.selectedRecord||{};//this.state.selectedRecord || {};\nselectedRecord[\"nuserrole\"]=comboData;if(fieldName===\"nuserrole\"){_this.props.checkUserRoleScreenRights(comboData.value,_this.props.Login.masterData,_this.props.Login.userInfo,selectedRecord);}}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.saveClick=function(selectedRecord,saveType,formRef){var operation=\"update\";var methodUrl=\"\";var inputData=[];var postParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nusersrolehidescreencode\"};inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"selectedscreenrights\"]=_this.props.Login.masterData.SelectedScreenRights;inputData[\"nflag\"]=transactionStatus.ACTIVE;inputData[\"screenrights\"]=selectedRecord;if(saveType===1){inputData[\"needrights\"]=selectedRecord[\"needrights\"];inputData[\"nneedesign\"]=null;methodUrl=\"ControlRights\";}else{inputData[\"nneedesign\"]=selectedRecord[\"nneedesign\"];methodUrl=\"Esign\";}var inputParam={classUrl:\"userscreenhide\",methodUrl:\"ScreenHideControlRights\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:postParam,dataState:_this.state.dataState};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.onSaveClick=function(saveType,formRef){var inputData=[];var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;inputData[\"userscreenhide\"]=_this.state.availableDatas;inputData[\"nuserrolecode\"]=_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\";inputData[\"userrolecode\"]=_this.state.selectedRecord[\"nuserrole\"]?_this.state.selectedRecord[\"nuserrole\"].value:\"\";inputData[\"usercode\"]=_this.state.selectedcombouser[\"nusercode\"]?_this.state.selectedcombouser[\"nusercode\"].value:\"\";// inputData[\"nusercode\"] = this.state.selectedcombouser[\"nusercode\"] ? this.state.selectedcombouser[\"nusercode\"].value : \"\";\ninputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"UserScreenhide\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,selectedRecord:_this.state.selectedRecord,searchRef:_this.searchRef,dataState:_this.state.dataState};var masterData=_this.props.Login.masterData;if(_this.props.Login.screenName===\"IDS_SCREENRIGHTS\"){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else{if(_this.props.Login.masterData.copyScreenRights?_this.props.Login.masterData.copyScreenRights.length>0:false){_this.ConfirmComponent();}else{if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(_updateInfo);}else{_this.props.copyScreenRights(_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\",_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\",_this.props.Login.userInfo,_this.props.Login.masterData);}}}};_this.copyAlertSave=function(){var inputData=[];var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;inputData[\"screenrights\"]=_this.state.availableDatas;inputData[\"nuserrolecode\"]=_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\";inputData[\"userrolecode\"]=_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\";inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"ScreenRights\",inputData:inputData,operation:_this.props.Login.operation,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData}}};_this.props.updateStore(updateInfo);}else{_this.props.copyScreenRights(_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\",_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\",_this.props.Login.userInfo,_this.props.Login.masterData);}};_this.onSaveAllControlAndEsign=function(skip,take,saveType,formRef){var value=_this.state.comboitem?_this.state.comboitem.value.value:_this.ControlButton[0].value;var operation=\"\";var methodUrl=\"\";var inputData=[];var postParam=undefined;inputData[\"userinfo\"]=_this.props.Login.userInfo;// inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights.slice(skip, skip + take);\ninputData[\"selectedscreenrights\"]=_this.props.Login.masterData.SelectedScreenRights;inputData[\"nflag\"]=transactionStatus.DEACTIVE;postParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nusersrolehidescreencode\"};if(value===1){inputData[\"needrights\"]=transactionStatus.YES;inputData[\"nneedesign\"]=null;operation=\"update\";methodUrl=\"ControlRights\";}else if(value===2){inputData[\"needrights\"]=transactionStatus.NO;inputData[\"nneedesign\"]=null;operation=\"update\";methodUrl=\"ControlRights\";}else if(value===3){inputData[\"nneedesign\"]=transactionStatus.YES;operation=\"update\";methodUrl=\"Esign\";}else if(value===4){inputData[\"nneedesign\"]=transactionStatus.NO;operation=\"update\";methodUrl=\"Esign\";}var inputParam={classUrl:\"userscreenhide\",methodUrl:\"ScreenHideControlRights\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedcombo:_this.props.Login.selectedcombo};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.ConfirmComponent=function(){_this.confirmMessage.confirm(\"confirmation\",\"Confiramtion!\",_this.props.intl.formatMessage({id:\"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"}),\"ok\",\"cancel\",function(){return _this.copyAlertSave();});};_this.reloadData=function(){_this.searchRef.current.value=\"\";if(_this.props.Login.masterData.SelectedUserRole){var comboitem={};//let selectedcombo= this.state.selectedcombo;\ncomboitem[\"value\"]=_this.ControlButton[0];_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"userscreenhide\",methodUrl:\"getUserScreenhide\",displayName:\"UserScreenhide\",userInfo:_this.props.Login.userInfo,comboitem:comboitem,nuserrolecode:_this.props.Login.masterData.SelectedUserRole,masterData:_this.props.Login.masterData,skip:_this.state.skip,take:_this.state.take};_this.props.reload(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLE\"}));}};var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'screenname' }]\n};_this.searchFieldList=[\"sdisplayname\"];_this.state={masterStatus:\"\",error:\"\",isOpen:false,ScreenRightsData:[],userRoleData:[],availableDatas:[],selectedRecord:{},userroleList:[],operation:\"\",comboitem:undefined,screenName:undefined,SelectedScreenrights:undefined,selectedcombo:undefined,selectedcomboUserRole:undefined,selectedcombouser:undefined,userrnameList:[],selectedListmasterSwitch:undefined,custombuttonstate:false,ControlRightsParent:[],userRoleControlRights:[],ControlRights:undefined,ConfirmDialogScreen:false,controlMap:new Map(),showAccordian:true,dataResult:[],skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],dataState:_dataState,columnName:'',rowIndex:0,data:[],splitChangeWidthPercentage:30};_this.searchRef=React.createRef();_this.ControlButton=[{value:1,label:_this.props.intl.formatMessage({id:\"IDS_ENABLEALLCONTROLRIGHTS\"})},{value:2,label:_this.props.intl.formatMessage({id:\"IDS_DISABLEALLCONTROLRIGHTS\"})},{value:3,label:_this.props.intl.formatMessage({id:\"IDS_ENABLEALLESIGNRIGHTS\"})},{value:4,label:_this.props.intl.formatMessage({id:\"IDS_DISABLEALLESIGNRIGHTS\"})}];_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(UserRoleScreenHide,[{key:\"render\",value:function render(){var _this2=this;// console.log(\"master:\", this.props.Login.masterData, this.state.dataResult)\n//added by allwin \n///FOR SORTING DATa BASED ON nusersrolehidescreencode***************************************************************\nthis.props.Login.masterData.ScreenRights&&sortData(this.props.Login.masterData.ScreenRights,'','nusersrolehidescreencode');var searchedData=this.props.Login.masterData.searchedData;var ScreenRights=this.props.Login.masterData.ScreenRights||[];var addId=this.state.controlMap.has(\"AddUserScreenhide\")&&this.state.controlMap.get(\"AddUserScreenhide\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteUserScreenhide\")&&this.state.controlMap.get(\"DeleteUserScreenhide\").ncontrolcode;var copyId=this.state.controlMap.has(\"CopyScreenRights\")&&this.state.controlMap.get(\"CopyScreenRights\").ncontrolcode;var ListScreenHideId=this.state.controlMap.has(\"ListScreenHide\")&&this.state.controlMap.get(\"ListScreenHide\").ncontrolcode;console.log('kkkkk',this.props.Login.masterData.SelectedUserName);var filterParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nformcode\",fetchUrl:\"userscreenhide/getSearchScreenHide\",//  fetchUrl: \"screenrights/getSearchScreenRights\",\nuserinfo:this.props.Login.userInfo,fecthInputObject:{userinfo:this.props.Login.userInfo,nusercode:this.props.Login.masterData.SelectedUserName&&this.props.Login.masterData.SelectedUserName.nusercode},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList,changeList:[],isSingleSelect:false};// const filterParam = {\n//     inputListName: \"ScreenRights\",\n//     selectedObject: \"SelectedScreenRights\",\n//     primaryKeyField: \"nuserrolescreencode\",\n//     fetchUrl: \"screenrights/getSearchScreenRights\",\n//     userinfo: this.props.Login.userInfo,\n//     fecthInputObject: { userinfo: this.props.Login.userInfo },\n//     masterData: this.props.Login.masterData,\n//     searchFieldList: this.searchFieldList, changeList: [], isSingleSelect: false\n// };\nvar mandatoryFieldsScreenRights=[{\"mandatory\":true,\"idsName\":\"IDS_USERSCREENHIDE\",\"dataField\":\"nusersrolehidescreencode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsUsers=[{\"mandatory\":true,\"idsName\":\"IDS_SCREENRIGHTS\",\"dataField\":\"nformcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];// let screenlen = searchedData ? searchedData.length : ScreenRights.length\n// const demo=[];\n// this.props.Login.masterData.UsersMain&&          \n// demo.push(\n//     {\n//         \"label\": \"IDS_USER\",\n//         \"value\": this.props.Login.masterData.UsersMain[0].susername\n//     },\n// );\nvar breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4 screen-height-window\"},breadCrumbData.length>0?/*#__PURE__*/ // <Affix top={64}>\nReact.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})// </Affix> \n:\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:searchedData||ScreenRights||[],selectedMaster:this.props.Login.masterData.SelectedScreenRights,primaryKeyField:\"nusersrolehidescreencode\",getMasterDetail:this.props.getUserScreenhideDetail,inputParam:{userinfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,dataState:this.state.dataState,skip:this.state.skip,take:this.state.take},additionalParam:['napprovalversioncode'],mainField:\"sdisplayname\",selectedListName:\"SelectedScreenRights\",filterColumnData:this.props.filterTransactionList,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,objectName:\"screenrights\",listName:\"IDS_SCREENRIGHTS\",hideQuickSearch:true,skip:this.state.skip,take:this.state.take,handlePageChange:this.handlePageChange,hidePaging:false,needFilter:true,needAccordianFilter:false,childTabsKey:[\"ControlRights\"],openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit//ListmasterSwitch\n,ListmasterSwitch:this.ListmasterSwitch,selectedListmasterSwitch:this.state.selectedListmasterSwitch,ListScreenHidebtn:this.state.controlMap.has(\"ListScreenHide\")&&this.state.controlMap.get(\"ListScreenHide\").ncontrolcode//  needrightsList={this.props.Login}\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(UserRoleScreenHideFilter,{filterUserRole:this.state.userroleList||[],userrnameList:this.state.userrnameList||[],selectedRecord:this.state.selectedcombo||{}//\n,selectedcombouser:this.state.selectedcombouser||{},onComboChange:this.onComboChange})}]// accordianfilterComponent={[\n//     {\n//         \"IDS_USERROLE\":\n//             <ScreenRightsFilter\n//                 filterUserRole={this.state.userroleList || []}\n//                 selectedRecord={this.state.selectedcombo || {}}//\n//                 onComboChange={this.onComboChange}\n//             />\n//     }\n// ]}\n,needMultiSelect:true,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})//    data-for=\"tooltip_list_wrap\"\n,role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.props.getUserScreenhideComboService(\"IDS_SCREENRIGHTS\",\"create\",_this2.props.Login.userInfo,_this2.state.selectedcombo,_this2.state.selectedcombouser,addId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":\"Reload\"//  data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.onFilterSubmit();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))// </Tooltip>\n}),/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"fixed_list_height\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.ScreenRights&&this.props.Login.masterData.ScreenRights.length>0&&this.props.Login.masterData.SelectedScreenRights?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"pb-4\"},/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"p\",{className:\"product-title-main\"},this.props.intl.formatMessage({id:\"IDS_HIDESCREENCONTROLRIGHTS\"}))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex justify-content-end d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,role:\"button\"// data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"}),hidden:this.state.userRoleControlRights.indexOf(copyId)===-1//     data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.getCopyUseRoleScreenRights(\"User Role ScreenRights\",\"copy\",copyId,_this2.state.selectedcombo,_this2.props.Login.userInfo,_this2.props.Login.masterData,2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(AtSubCard,{className:\"d-flex justify-content-start\"},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"value\",placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),value:this.state.comboitem?this.state.comboitem[\"value\"]:this.ControlButton[0],options:this.ControlButton,optionId:\"label\",optionValue:\"label\",isMandatory:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:false,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"value\");}}),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2 \",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_SAVE\"})//   data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.onSaveAllControlAndEsign(_this2.state.skip,_this2.state.take);},role:\"button\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \"))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"span\",{headerClassName:\"text-center\"//   data-for=\"screenrights_wrap\"\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENABLEDISABLEGROUPING\"})},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:\"groupbyswitch\",onChange:function onChange(event){return _this2.switchGroupBy(event);},checked:this.state.selectedSwitch===transactionStatus.YES?true:false,name:\"groupbyswitch\"//data-tip={\"Enable to group by screen name\"}\n// data-for=\"screenrights_wrap\"\n}))))):\"\",this.props.Login.masterData.ScreenRights&&this.props.Login.masterData.ScreenRights.length>0&&this.props.Login.masterData.SelectedScreenRights?/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(Grid,Object.assign({sortable:true,resizable:true,reorderable:false,scrollable:\"scrollable\",onExpandChange:this.expandChange,expandField:\"expanded\",pageable:{buttonCount:4,pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);}),previousNext:false}//data={this.state.dataResult}\n,data:process(this.props.Login.masterData.ControlRights||[],this.state.dataState)},this.state.dataState,{selectedField:\"selected\",onDataStateChange:this.dataStateChange//  groupable={true}\n}),/*#__PURE__*/React.createElement(GridColumn,{width:\"300px\",field:\"screenname\",title:this.props.intl.formatMessage({id:\"IDS_SCREENNAME\"})//headerClassName=\"text-center\"\n//groupable={this.isGroupable(\"screenname\")}\n,cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{// className={selectedId === row[\"dataItem\"][\"screenname\"] ? 'active' : ''}\n\"data-tip\":row[\"dataItem\"][\"screenname\"],style:{textAlign:'left'}},row[\"dataItem\"][\"screenname\"]);}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"300px\",field:\"scontrolids\",title:this.props.intl.formatMessage({id:\"IDS_CONTROLNAME\"})//headerClassName=\"text-center\"\n,cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'left'},\"data-tip\":row[\"dataItem\"][\"scontrolids\"]},row[\"dataItem\"][\"scontrolids\"]);}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"250px\",field:\"nneedrights\",title:this.props.intl.formatMessage({id:\"IDS_CONTROLRIGHTS\"}),headerClassName:\"text-center\",cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedrights\"],onChange:function onChange(event){return _this2.onInputOnControlRights(event,row[\"dataItem\"],\"nneedrights\",row.dataIndex,1);},checked:row[\"dataItem\"][\"nneedrights\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nusersrolehidescreencode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex// disabled={this.state.custombuttonstate}\n,disabled:row[\"dataItem\"][\"needrights\"]===transactionStatus.YES?true:false}));}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"230px\",field:\"nneedesign\",title:this.props.intl.formatMessage({id:\"IDS_ESIGN\"}),headerClassName:\"text-center\",cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},row[\"dataItem\"][\"nisesigncontrol\"]===3?/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedesign\"],onChange:function onChange(event){return _this2.onInputOnControlRights(event,row[\"dataItem\"],\"nneedesign\",row.dataIndex,undefined,row[\"dataItem\"][\"needesignsparent\"]);},checked:row[\"dataItem\"][\"nneedesign\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nusersrolehidescreencode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex//  disabled={row[\"dataItem\"][\"needrights\"] === transactionStatus.YES ? true : false}\n//  disabled={row[\"dataItem\"][\"needesignsparent\"] === transactionStatus.NO ? true : false}\n}):\"\");}}))):\"\")))))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:'IDS_USERSCREENHIDE',onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_USERSCREENHIDE\"?mandatoryFieldsScreenRights:mandatoryFieldsUsers,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}})// : this.props.Login.screenName === \"IDS_USERSCREENHIDE\" ?\n:/*#__PURE__*/React.createElement(AddScreenRights,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,avaliableScreen:this.props.Login.AvaliableScreen,operation:this.props.operation})// :\n// <UserRoleScreenRights selectedRecord={this.props.Login.masterData.selectedRecord || {}}\n//     onInputOnChange={this.onInputOnChange}\n//     onComboChange={this.onComboChangeUserRole}\n//     operation={this.props.operation}\n//     UserRole={this.props.Login.masterData.Userrole || []}\n//     SelectedUserRole={this.state.selectedcombo}\n// />\n}));}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];//   if (this.props.Login.masterData && this.props.Login.masterData.userrole) {\nbreadCrumbData.push({\"label\":\"IDS_USERROLE\",\"value\":this.props.Login.masterData.SelectedUserRole?this.props.Login.masterData.SelectedUserRole.suserrolename:\"NA\"// \"label\": \"IDS_USERNAME\",\n//  \"value\": this.props.Login.masterData.SelectedUserName ? this.props.Login.masterData.SelectedUserName.susername : \"NA\",\n},{//  \"label\": \"IDS_USERROLE\",\n// \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\",\n\"label\":\"IDS_USERNAME\",\"value\":this.props.Login.masterData.SelectedUserName?this.props.Login.masterData.SelectedUserName.susername:\"NA\"});// } else {\n//     breadCrumbData.push(\n//         {\n//             \"label\": \"IDS_USERROLE\",\n//             \"value\": \"NA\"\n//         },\n//     );\n// }\nreturn breadCrumbData;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){ReactTooltip.rebuild();var masterData=this.props.Login.masterData;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.selectedcombo!==previousProps.Login.selectedcombo){this.setState({selectedcombo:this.props.Login.selectedcombo});}if(this.props.Login.comboitem!==previousProps.Login.comboitem){this.setState({comboitem:this.props.Login.comboitem});}if(this.props.Login.masterData.AvaliableScreen!==previousProps.Login.masterData.AvaliableScreen){var skip=this.state.skip;var take=this.state.take;skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;this.setState({skip:skip,take:take});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData.ControlRights});}if(this.props.Login.masterData.userrole!==undefined){if(this.props.Login.masterData.userrole!==previousProps.Login.masterData.userrole){var userrole=constructOptionList(this.props.Login.masterData.userrole||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,undefined);var userroleList=userrole.get(\"OptionList\");var selectedcombo={nuserrolecode:masterData.userrole&&masterData.userrole.length>0?{\"value\":masterData.userrole[0].nuserrolecode,\"label\":masterData.userrole[0].suserrolename}:\"\"};this.setState({selectedcombo:selectedcombo,userroleList:userroleList});}}//Added by Allwin\nif(this.props.Login.masterData.UsersMain!==previousProps.Login.masterData.UsersMain){var UsersMain=constructOptionList(this.props.Login.masterData.UsersMain||[],\"nusercode\",\"susername\",undefined,undefined,undefined);var userrnameList=UsersMain.get(\"OptionList\");var selectedcombouser={nusercode:masterData.UsersMain&&masterData.UsersMain.length>0?{\"value\":masterData.UsersMain[0].nusercode,\"label\":masterData.UsersMain[0].susername}:\"\"};this.setState({selectedcombouser:selectedcombouser,userrnameList:userrnameList});}//         if('SelectedScreenRights' in this.props.Login.masterData)\n//         {\n//             if(this.props.Login.masterData.SelectedScreenRights.length>0)\n//             {\n//                 if('SelectedScreenRights' in previousProps.Login.masterData)\n//                 {\n//                     if(previousProps.Login.masterData.SelectedScreenRights.length>0)\n//            {\n//             if(this.props.Login.masterData.SelectedScreenRights[0].needrights!==\n//                 previousProps.Login.masterData.SelectedScreenRights[0].needrights)\n//                 {\n// if( this.props.Login.masterData.SelectedScreenRights[0].needrights===3)\n// {\n//     this.setState({custombuttonstate:true})\n// }\n// else\n// {\n//     this.setState({custombuttonstate:false}) \n// }\n//                 }\n//             }\n//             }\n//             }\n//         }\nif(this.props.Login.masterData!==previousProps.Login.masterData){var filterData=this.generateBreadCrumData();// let dataState = this.state.dataState || {};\n// dataState= {...dataState, group: [{ field: 'screenname' }]} ;\nthis.setState({filterData:filterData//, dataState\n});}// if(this.props.Login.masterData.searchedData !== this.props.Login.masterData.ScreenRights){\n//    if (this.props.Login.masterData.searchedData) \n//    {\n//     if(this.props.Login.masterData.searchedData.length<= this.state.skip){\n//         this.setState({skip:0});\n//     }\n// }\n// }\n}},{key:\"onInputOnControlRights\",value:function onInputOnControlRights(event,rowItem,columnName,rowIndex,saveType,needesignparent){//  const selectedRecord = rowItem || {};\n// selectedRecord[]\nvar selectedRecord={};if(needesignparent===4){toast.warn(this.props.intl.formatMessage({id:\"IDS_ITISDEACTIVEINSCREENRIGHTS\"}));}else{if(rowItem[\"needrights\"]!==3){selectedRecord[\"ncontrolcode\"]=rowItem[\"ncontrolcode\"];selectedRecord[\"nformcode\"]=rowItem[\"nformcode\"];//    selectedRecord[\"needrights\"]= rowItem[\"needrights\"]\nselectedRecord[\"nstatus\"]=rowItem[\"nstatus\"];selectedRecord[\"nuserrolecode\"]=this.state.selectedcombo[\"nuserrolecode\"].value;selectedRecord[\"nusercode\"]=this.state.selectedcombouser[\"nusercode\"].value;selectedRecord[\"scontrolids\"]=rowItem[\"scontrolids\"];selectedRecord[\"scontrolname\"]=rowItem[\"scontrolname\"];selectedRecord[\"screenname\"]=rowItem[\"screenname\"];//    if(columnName===\"nneedesign\")  \n//    {\n//    selectedRecord[\"nneedesign\"]=rowItem[\"nneedesign\"]\n//    }\n// ncontrolcode: 133\n// nformcode: 44\n// nneedrights: 3\n// nstatus: 1\n// nuserrolecode: 0\n// scontrolids: \"Delete Charge Band\"\n// scontrolname: \"DeleteChargeBand\"\n// screenname: \"Charge Band\"\nif(columnName===\"nneedesign\"){selectedRecord[\"nneedesign\"]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[\"needrights\"]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}this.saveClick(selectedRecord,saveType,undefined);}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}},{key:\"handleClickDelete\",value:function handleClickDelete(masterData,ncontrolcode,modalName){var fieldArray=[];this.props.Login.masterData.SelectedScreenRights.map(function(item){return fieldArray.push(item.nusersrolehidescreencode);});var postParam={inputListName:\"UserScreenhide\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nusersrolehidescreencode\",primaryKeyValue:fieldArray,fetchUrl:\"userscreenhide/getUserScreenhide\",fecthInputObject:{userinfo:this.props.Login.userInfo}};modalName='openModal';var inputParam={methodUrl:\"UserScreenhide\",classUrl:\"userscreenhide\",inputData:{\"screenrights\":this.props.Login.masterData.SelectedScreenRights,\"userinfo\":this.props.Login.userInfo,\"nuserrolecode\":this.state.selectedcombo[\"nuserrolecode\"]?this.state.selectedcombo[\"nuserrolecode\"].value:\"\",\"usercode\":this.state.selectedcombouser[\"nusercode\"]?this.state.selectedcombouser[\"nusercode\"].value:\"\"},operation:\"delete\",postParam:postParam,displayName:\"IDS_USERSCREENHIDE\"// dataState: this.state.dataState\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var _data;var updateInfo={typeName:DEFAULT_RETURN,data:(_data={loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData}},_defineProperty(_data,modalName,true),_defineProperty(_data,\"operation\",'delete'),_defineProperty(_data,\"screenName\",\"ScreenRights\"),_defineProperty(_data,\"id\",\"screenrights\"),_data)};this.props.updateStore(updateInfo);}else{this.props.crudMaster(inputParam,masterData,modalName);}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return UserRoleScreenHide;}(React.Component);export default connect(mapStateToProps,{callService:callService,reload:reload,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,filterTransactionList:filterTransactionList,updateStore:updateStore,getScreenRightsDetail:getScreenRightsDetail,getUserScreenhideComboService:getUserScreenhideComboService,comboChangeUserRoleScreenRights:comboChangeUserRoleScreenRights,handleClickDelete:handleClickDelete,filterColumnData:filterColumnData,getCopyUseRoleScreenRights:getCopyUseRoleScreenRights,copyScreenRights:copyScreenRights,checkUserRoleScreenRights:checkUserRoleScreenRights,sortData:sortData,initialcombochangeget:initialcombochangeget,comboChangeUserRoleScreenRightsHide:comboChangeUserRoleScreenRightsHide,getUserScreenhideDetail:getUserScreenhideDetail,ListSwitchUpdate:ListSwitchUpdate})(injectIntl(UserRoleScreenHide));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/UserRoleScreenHide.jsx"],"names":["React","connect","injectIntl","Row","Col","Nav","Card","Button","Grid","GridColumn","process","toast","FontAwesomeIcon","faTrashAlt","faSave","faCopy","faPlus","faSync","FormSelectSearch","CustomSwitch","SlideOutModal","Esign","ScreenRightsFilter","AddScreenRights","UserRoleScreenRights","showEsign","getControlMap","constructOptionList","sortData","callService","crudMaster","validateEsignCredential","updateStore","getScreenRightsDetail","copyScreenRights","filterTransactionList","comboChangeUserRoleScreenRights","handleClickDelete","filterColumnData","getCopyUseRoleScreenRights","checkUserRoleScreenRights","reload","initialcombochangeget","getUserScreenhideComboService","comboChangeUserRoleScreenRightsHide","getUserScreenhideDetail","ListSwitchUpdate","DEFAULT_RETURN","transactionStatus","ContentPanel","AtSubCard","AtTableWrap","TransactionListMaster","ProductList","ConfirmMessage","PerfectScrollbar","SplitterLayout","BreadcrumbComponent","ReactTooltip","UserRoleScreenHideFilter","mapStateToProps","state","Login","UserRoleScreenHide","props","dataStateChange","event","setState","dataResult","masterData","ControlRights","dataState","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","paneSizeChange","d","splitChangeWidthPercentage","ListmasterSwitch","nusersrolehidescreencode","inputData","selectedSwitch","target","checked","YES","NO","inputParam","needrights","nuserrolecode","selectedcombo","value","nusercodemain","selectedcombouser","userInfo","switchGroupBy","group","field","skip","take","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","searchRef","current","classUrl","methodUrl","displayName","warn","handlePageChange","e","console","log","validateEsign","sreason","selectedRecord","nreasoncode","spredefinedreason","label","password","screenData","closeModal","loadEsign","openModal","operation","selectedId","onComboChange","comboData","fieldName","inputParamcombo","item","comboitem","availableDatas","nformcode","map","push","onComboChangeUserRole","onInputOnChange","type","name","ACTIVE","DEACTIVE","saveClick","saveType","formRef","postParam","inputListName","selectedObject","primaryKeyField","SelectedScreenRights","onSaveClick","screenName","userRoleControlRights","ncontrolCode","length","ConfirmComponent","copyAlertSave","onSaveAllControlAndEsign","ControlButton","reloadData","SelectedUserRole","settings","parseInt","searchFieldList","masterStatus","error","isOpen","ScreenRightsData","userRoleData","userroleList","SelectedScreenrights","selectedcomboUserRole","userrnameList","selectedListmasterSwitch","custombuttonstate","ControlRightsParent","ConfirmDialogScreen","controlMap","Map","showAccordian","columnName","rowIndex","createRef","ScreenRights","searchedData","addId","has","get","ncontrolcode","copyId","ListScreenHideId","SelectedUserName","filterParam","fetchUrl","userinfo","fecthInputObject","nusercode","changeList","isSingleSelect","mandatoryFieldsScreenRights","mandatoryFieldsUsers","breadCrumbData","filterData","parentHeight","indexOf","buttonCount","pageSizes","split","setting","previousNext","row","rowType","textAlign","onInputOnControlRights","dataIndex","columnIndex","AvaliableScreen","height","clientHeight","firstPane","suserrolename","susername","previousProps","rebuild","Object","values","userrole","UsersMain","generateBreadCrumData","rowItem","needesignparent","modalName","fieldArray","primaryKeyValue","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, Button } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faSave, faCopy, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport ScreenRightsFilter from './ScreenRightsFilter';\r\nimport AddScreenRights from './AddScreenRights';\r\nimport UserRoleScreenRights from './UserRoleScreenRights';\r\nimport { showEsign, getControlMap, constructOptionList, sortData } from '../../components/CommonScript';\r\n\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getScreenRightsDetail, copyScreenRights, filterTransactionList,\r\n    comboChangeUserRoleScreenRights, handleClickDelete, filterColumnData, getCopyUseRoleScreenRights, checkUserRoleScreenRights, reload\r\n\r\n} from '../../actions';\r\nimport {\r\n    initialcombochangeget, getUserScreenhideComboService, comboChangeUserRoleScreenRightsHide, getUserScreenhideDetail, ListSwitchUpdate\r\n} from '../../actions/UserRoleScreenHideAction';\r\n\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { ContentPanel, AtSubCard } from '../../components/App.styles';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport SplitterLayout from 'react-splitter-layout';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport UserRoleScreenHideFilter from './UserRoleScreenHideFilter';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass UserRoleScreenHide extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n            //, group: [{ field: 'screenname' }]\r\n        };\r\n        this.searchFieldList = [\"sdisplayname\"]\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            isOpen: false,\r\n            ScreenRightsData: [], userRoleData: [],\r\n            availableDatas: [],\r\n            selectedRecord: {},\r\n            userroleList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            SelectedScreenrights: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            \r\n            selectedcombouser: undefined,\r\n            userrnameList: [],\r\n            selectedListmasterSwitch: undefined,\r\n            custombuttonstate: false,\r\n            ControlRightsParent:[],\r\n\r\n\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            ConfirmDialogScreen: false,\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            columnName: '',\r\n            rowIndex: 0,\r\n            data: [],\r\n            splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.ControlButton = [{ value: 1, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLCONTROLRIGHTS\" }) },\r\n        { value: 2, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLCONTROLRIGHTS\" }) },\r\n             { value: 3, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLESIGNRIGHTS\" }) },\r\n           { value: 4, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLESIGNRIGHTS\" }) }\r\n        ];\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    dataStateChange = (event) => {\r\n        // if (event.dataState.group.length === 1 && event.dataState.group[0].field === 'screenname')\r\n        // {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.ControlRights || [], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n        //}\r\n    }\r\n\r\n\r\n    expandChange = event => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined\r\n                ? event.dataItem.aggregates\r\n                : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.state });\r\n        //this.setState({ ...this.state.dataState });\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n\r\n        // console.log(\"master:\", this.props.Login.masterData, this.state.dataResult)\r\n        //added by allwin \r\n        ///FOR SORTING DATa BASED ON nusersrolehidescreencode***************************************************************\r\n        this.props.Login.masterData.ScreenRights && sortData(this.props.Login.masterData.ScreenRights, '', 'nusersrolehidescreencode')\r\n        const searchedData = this.props.Login.masterData.searchedData\r\n        const ScreenRights = this.props.Login.masterData.ScreenRights || [];\r\n        const addId = this.state.controlMap.has(\"AddUserScreenhide\") && this.state.controlMap.get(\"AddUserScreenhide\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteUserScreenhide\") && this.state.controlMap.get(\"DeleteUserScreenhide\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"CopyScreenRights\") && this.state.controlMap.get(\"CopyScreenRights\").ncontrolcode;\r\n        const ListScreenHideId = this.state.controlMap.has(\"ListScreenHide\") && this.state.controlMap.get(\"ListScreenHide\").ncontrolcode;\r\n       console.log('kkkkk',this.props.Login.masterData.SelectedUserName)\r\n        const filterParam = {\r\n            inputListName: \"ScreenRights\",\r\n            selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nformcode\",\r\n           \r\n            fetchUrl: \"userscreenhide/getSearchScreenHide\",\r\n            //  fetchUrl: \"screenrights/getSearchScreenRights\",\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo, nusercode:this.props.Login.masterData.SelectedUserName&&\r\n                this.props.Login.masterData.SelectedUserName.nusercode },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList, changeList: []\r\n            , isSingleSelect: false,\r\n        };\r\n        // const filterParam = {\r\n        //     inputListName: \"ScreenRights\",\r\n        //     selectedObject: \"SelectedScreenRights\",\r\n        //     primaryKeyField: \"nuserrolescreencode\",\r\n        //     fetchUrl: \"screenrights/getSearchScreenRights\",\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        //     masterData: this.props.Login.masterData,\r\n        //     searchFieldList: this.searchFieldList, changeList: [], isSingleSelect: false\r\n        // };\r\n        const mandatoryFieldsScreenRights = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_USERSCREENHIDE\", \"dataField\": \"nusersrolehidescreencode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsUsers = [{ \"mandatory\": true, \"idsName\": \"IDS_SCREENRIGHTS\", \"dataField\": \"nformcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n        // let screenlen = searchedData ? searchedData.length : ScreenRights.length\r\n        // const demo=[];\r\n        // this.props.Login.masterData.UsersMain&&          \r\n        // demo.push(\r\n        //     {\r\n        //         \"label\": \"IDS_USER\",\r\n        //         \"value\": this.props.Login.masterData.UsersMain[0].susername\r\n\r\n        //     },\r\n        // );\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                <div className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        // <Affix top={64}>\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        // </Affix> \r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout borderColor=\"#999\"\r\n                                percentage={true} primaryIndex={1}\r\n                                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                primaryMinSize={40}\r\n                                secondaryMinSize={20}\r\n                            >\r\n                                <TransactionListMaster\r\n                                    splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                    masterList={searchedData || ScreenRights || []}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedScreenRights}\r\n                                    primaryKeyField=\"nusersrolehidescreencode\"\r\n                                    getMasterDetail={this.props.getUserScreenhideDetail}\r\n                                    inputParam={{\r\n                                        userinfo: this.props.Login.userInfo,\r\n                                        masterData: this.props.Login.masterData,\r\n                                        dataState: this.state.dataState, skip: this.state.skip, take: this.state.take\r\n                                    }}\r\n                                    additionalParam={['napprovalversioncode']}\r\n                                    mainField=\"sdisplayname\"\r\n                                    selectedListName=\"SelectedScreenRights\"\r\n                                    filterColumnData={this.props.filterTransactionList}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    filterParam={filterParam}\r\n                                    objectName=\"screenrights\"\r\n                                    listName=\"IDS_SCREENRIGHTS\"\r\n                                    hideQuickSearch={true}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n                                    handlePageChange={this.handlePageChange}\r\n                                    hidePaging={false}\r\n                                    needFilter={true}\r\n                                    needAccordianFilter={false}\r\n                                    childTabsKey={[\"ControlRights\"]}\r\n                                    openFilter={this.openFilter}\r\n                                    closeFilter={this.closeFilter}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    //ListmasterSwitch\r\n                                    ListmasterSwitch={this.ListmasterSwitch}\r\n                                    selectedListmasterSwitch={this.state.selectedListmasterSwitch}\r\n                                    ListScreenHidebtn= {this.state.controlMap.has(\"ListScreenHide\") && this.state.controlMap.get(\"ListScreenHide\").ncontrolcode}\r\n                                    //  needrightsList={this.props.Login}\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_FILTER\":\r\n                                                <UserRoleScreenHideFilter\r\n                                                    filterUserRole={this.state.userroleList || []}\r\n                                                    userrnameList={this.state.userrnameList || []}\r\n                                                    selectedRecord={this.state.selectedcombo || {}}//\r\n                                                    selectedcombouser={this.state.selectedcombouser || {}}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                />\r\n                                        }\r\n                                    ]}\r\n                                    // accordianfilterComponent={[\r\n                                    //     {\r\n                                    //         \"IDS_USERROLE\":\r\n                                    //             <ScreenRightsFilter\r\n                                    //                 filterUserRole={this.state.userroleList || []}\r\n                                    //                 selectedRecord={this.state.selectedcombo || {}}//\r\n                                    //                 onComboChange={this.onComboChange}\r\n                                    //             />\r\n                                    //     }\r\n                                    // ]}\r\n                                    needMultiSelect={true}\r\n                                    commonActions={\r\n                                        // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            //    data-for=\"tooltip_list_wrap\"\r\n                                                role=\"button\"\r\n                                                hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.props.getUserScreenhideComboService(\"IDS_SCREENRIGHTS\",\r\n                                                    \"create\", this.props.Login.userInfo, this.state.selectedcombo, this.state.selectedcombouser, addId)}>\r\n                                                <FontAwesomeIcon icon={faPlus} />\r\n                                            </Button>\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                data-tip={\"Reload\"}\r\n                                              //  data-for=\"tooltip_list_wrap\"\r\n                                                onClick={() => this.onFilterSubmit()} >\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                        // </Tooltip>\r\n                                    }\r\n                                />\r\n                                {/* <PerfectScrollbar> */}\r\n                                {/* <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={400} customClassName=\"fixed_list_height\"> */}\r\n                                {/* <Col md={9}> */}\r\n                                <PerfectScrollbar>\r\n                                    <div className=\"fixed_list_height\">\r\n                                        <Row >\r\n                                            <Col md={12}>\r\n                                                <ContentPanel className=\"panel-main-content\">\r\n                                                    <Card className=\"border-0\">\r\n                                                        {this.props.Login.masterData.ScreenRights && this.props.Login.masterData.ScreenRights.length > 0 && this.props.Login.masterData.SelectedScreenRights ?\r\n                                                            <>\r\n\r\n                                                                <Card.Header className=\"pb-4\" >\r\n                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"screenrights_wrap\" /> */}\r\n                                                                    <Card.Title>\r\n                                                                        <p className=\"product-title-main\">\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_HIDESCREENCONTROLRIGHTS\" })}\r\n                                                                        </p>\r\n                                                                    </Card.Title>\r\n                                                                    <ContentPanel className=\"d-flex justify-content-end d-inline\">\r\n                                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            role=\"button\"\r\n                                                                           // data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                            {/* <ConfirmDialog\r\n                                                                                    name=\"deleteMessage\"\r\n                                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                                    icon={faTrashAlt}\r\n                                                                                    //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    handleClickDelete={() => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\")}\r\n                                                                                /> */}\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                       //     data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.props.getCopyUseRoleScreenRights(\"User Role ScreenRights\", \"copy\", copyId, this.state.selectedcombo, this.props.Login.userInfo, this.props.Login.masterData, 2)}>\r\n                                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                                        </Nav.Link>\r\n                                                                        {/* </Tooltip> */}\r\n                                                                    </ContentPanel>\r\n                                                                </Card.Header>\r\n                                                                <Row>\r\n                                                                    <Col md='6'>\r\n                                                                        <AtSubCard className=\"d-flex justify-content-start\">\r\n                                                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                            <FormSelectSearch\r\n                                                                                name={\"value\"}\r\n                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                                                                value={this.state.comboitem ? this.state.comboitem[\"value\"] : this.ControlButton[0]}\r\n                                                                                options={this.ControlButton}\r\n                                                                                optionId=\"label\"\r\n                                                                                optionValue=\"label\"\r\n                                                                                isMandatory={false}\r\n                                                                                isMulti={false}\r\n                                                                                isSearchable={false}\r\n                                                                                closeMenuOnSelect={true}\r\n                                                                                alphabeticalSort={false}\r\n                                                                                as={\"select\"}\r\n                                                                                onChange={(event) => this.onComboChange(event, \"value\")}\r\n                                                                            />\r\n                                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                            <Nav.Link className=\"btn btn-circle outline-grey ml-2 \"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SAVE\" })}\r\n                                                                             //   data-for=\"tooltip_list_wrap\"\r\n                                                                                onClick={() => this.onSaveAllControlAndEsign(this.state.skip, this.state.take)}\r\n                                                                                role=\"button\">\r\n                                                                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                                                            </Nav.Link>\r\n                                                                            {/* </Tooltip> */}\r\n                                                                        </AtSubCard>\r\n                                                                    </Col>\r\n                                                                    {/* <Col md='6' >\r\n                                                                        <Row>\r\n                                                                            <Col md={12}>\r\n                                                                                <strong>\r\n                                                                                    {this.props.intl.formatMessage({ id: \"Enable/Disable Grouping\" })}\r\n                                                                                </strong>\r\n                                                                            </Col> */}\r\n                                                                    <Col>\r\n                                                                        <span headerClassName=\"text-center\"\r\n                                                                         //   data-for=\"screenrights_wrap\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLEGROUPING\" })}>\r\n\r\n                                                                            <CustomSwitch type=\"switch\"\r\n                                                                                id={\"groupbyswitch\"}\r\n                                                                                onChange={(event) => this.switchGroupBy(event)}\r\n                                                                                checked={this.state.selectedSwitch === transactionStatus.YES ? true : false}\r\n                                                                                name={\"groupbyswitch\"}\r\n                                                                            //data-tip={\"Enable to group by screen name\"}\r\n                                                                            // data-for=\"screenrights_wrap\"\r\n                                                                            />\r\n                                                                        </span>\r\n                                                                    </Col>\r\n                                                                    \r\n                                                                    {/* </Row>\r\n                                                                    </Col>*/}\r\n                                                                </Row>\r\n                                                            </> :\r\n                                                            \"\"}\r\n                                                        {this.props.Login.masterData.ScreenRights && this.props.Login.masterData.ScreenRights.length > 0 && this.props.Login.masterData.SelectedScreenRights ?\r\n                                                            <AtTableWrap className=\"at-list-table\">\r\n                                                                <Grid\r\n                                                                    sortable\r\n                                                                    resizable\r\n                                                                    reorderable={false}\r\n                                                                    scrollable={\"scrollable\"}\r\n                                                                    onExpandChange={this.expandChange}\r\n                                                                    expandField=\"expanded\"\r\n                                                                    pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)), previousNext: false }}\r\n                                                                    //data={this.state.dataResult}\r\n                                                                    data={process(this.props.Login.masterData.ControlRights || [], this.state.dataState)}\r\n                                                                    {...this.state.dataState}\r\n                                                                    selectedField=\"selected\"\r\n                                                                    onDataStateChange={this.dataStateChange}\r\n                                                                //  groupable={true}\r\n                                                                >\r\n                                                                    <GridColumn width=\"300px\"\r\n                                                                        field=\"screenname\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                                                                        //headerClassName=\"text-center\"\r\n                                                                        //groupable={this.isGroupable(\"screenname\")}\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n\r\n                                                                                <td\r\n                                                                                    // className={selectedId === row[\"dataItem\"][\"screenname\"] ? 'active' : ''}\r\n                                                                                    data-tip={row[\"dataItem\"][\"screenname\"]}\r\n                                                                                    style={{ textAlign: 'left' }}>\r\n                                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                                    {row[\"dataItem\"][\"screenname\"]}\r\n                                                                                </td>)}\r\n                                                                    />\r\n                                                                    <GridColumn width=\"300px\"\r\n                                                                        field=\"scontrolids\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_CONTROLNAME\" })}\r\n                                                                        //headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td\r\n                                                                                    style={{ textAlign: 'left' }}\r\n                                                                                    data-tip={row[\"dataItem\"][\"scontrolids\"]} >\r\n                                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                                    {row[\"dataItem\"][\"scontrolids\"]}\r\n                                                                                </td>)}\r\n                                                                    />\r\n\r\n                                                                    <GridColumn width=\"250px\"\r\n                                                                        field={\"nneedrights\"}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_CONTROLRIGHTS\" })}\r\n                                                                        headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td style={{ textAlign: \"center\" }} >\r\n                                                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedrights\"]}\r\n                                                                                        onChange={(event) => this.onInputOnControlRights(event, row[\"dataItem\"], \"nneedrights\", row.dataIndex, 1)}\r\n                                                                                        checked={row[\"dataItem\"][\"nneedrights\"] === transactionStatus.YES ? true : false}\r\n                                                                                        name={row[\"dataItem\"][\"nusersrolehidescreencode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                                        // disabled={this.state.custombuttonstate}\r\n\r\n                                                                                        disabled={row[\"dataItem\"][\"needrights\"] === transactionStatus.YES ? true : false}\r\n                                                                                    />\r\n                                                                                </td>)}\r\n                                                                    />\r\n                                                                    <GridColumn width=\"230px\"\r\n                                                                        field={\"nneedesign\"}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_ESIGN\" })}\r\n                                                                        headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td style={{ textAlign: \"center\" }} >\r\n                                                                                    {row[\"dataItem\"][\"nisesigncontrol\"] === 3 ?\r\n                                                                                        <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedesign\"]}\r\n                                                                                          onChange={(event) => this.onInputOnControlRights(event, row[\"dataItem\"], \"nneedesign\", row.dataIndex, undefined,row[\"dataItem\"][\"needesignsparent\"])}\r\n                                                                                            checked={row[\"dataItem\"][\"nneedesign\"] === transactionStatus.YES ? true : false}\r\n                                                                                            name={row[\"dataItem\"][\"nusersrolehidescreencode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                                          //  disabled={row[\"dataItem\"][\"needrights\"] === transactionStatus.YES ? true : false}\r\n                                                                                          //  disabled={row[\"dataItem\"][\"needesignsparent\"] === transactionStatus.NO ? true : false}\r\n                                                                                        /> :\r\n                                                                                        \"\"\r\n                                                                                    }\r\n                                                                                </td>\r\n                                                                        )\r\n                                                                        }\r\n                                                                    /> \r\n                                                                </Grid>\r\n                                                            </AtTableWrap>\r\n                                                            : \"\"}\r\n                                                    </Card>\r\n                                                </ContentPanel>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                                {/* </SplitterLayout> */}\r\n                                {/* </PerfectScrollbar> */}\r\n                            </SplitterLayout >\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* End of get display*/}\r\n                { }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={'IDS_USERSCREENHIDE'}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_USERSCREENHIDE\" ? mandatoryFieldsScreenRights : mandatoryFieldsUsers}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            // : this.props.Login.screenName === \"IDS_USERSCREENHIDE\" ?\r\n                            : <AddScreenRights selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                avaliableScreen={this.props.Login.AvaliableScreen}\r\n                                operation={this.props.operation}\r\n                            />\r\n                            // :\r\n                            // <UserRoleScreenRights selectedRecord={this.props.Login.masterData.selectedRecord || {}}\r\n                            //     onInputOnChange={this.onInputOnChange}\r\n                            //     onComboChange={this.onComboChangeUserRole}\r\n                            //     operation={this.props.operation}\r\n                            //     UserRole={this.props.Login.masterData.Userrole || []}\r\n                            //     SelectedUserRole={this.state.selectedcombo}\r\n                            // />\r\n                        }\r\n                    />\r\n                }\r\n                { }\r\n            </>\r\n        );\r\n    }\r\n\r\n    ListmasterSwitch = (event, nusersrolehidescreencode) => {\r\n        let inputData = [];\r\n        //  inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"];\r\n        // inputData[\"nusercodemain\"] = this.state.selectedcombouser[\"nusercode\"];\r\n        const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        const inputParam = {\r\n            needrights: selectedSwitch,\r\n            nusersrolehidescreencode: nusersrolehidescreencode,\r\n            nuserrolecode: this.state.selectedcombo[\"nuserrolecode\"].value,\r\n            nusercodemain: this.state.selectedcombouser[\"nusercode\"].value\r\n        }\r\n        this.props.ListSwitchUpdate(inputParam, this.props.Login.masterData, this.props.Login.userInfo);\r\n        // this.setState({selectedListmasterSwitch:selectedSwitch});\r\n    }\r\n    switchGroupBy = (event) => {\r\n\r\n        const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        let dataState = this.state.dataState || {};\r\n        if (selectedSwitch === transactionStatus.YES) {\r\n            dataState = { ...dataState, group: [{ field: 'screenname' }] };\r\n        }\r\n        else {\r\n            dataState = { skip: dataState.skip, take: dataState.take }\r\n        }\r\n        this.setState({ selectedSwitch, dataState });\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        // this.reloadData(this.state.selectedRecord, true);\r\n        let inputData = [];\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"];\r\n        inputData[\"nusercodemain\"] = this.state.selectedcombouser[\"nusercode\"];\r\n        const inputParam = {\r\n            classUrl: \"userscreenhide\",\r\n            methodUrl: \"UserScreenhide\",\r\n            displayName: \"IDS_USERSCREENHIDE\",\r\n            inputData: inputData\r\n            //,\r\n            // operation: operation, saveType, formRef, searchRef: this.searchRef, postParam,dataState: this.state.dataState\r\n        }\r\n        if (this.state.selectedcombo[\"nuserrolecode\"]) {\r\n            this.props.comboChangeUserRoleScreenRightsHide(this.state.selectedcombo, this.state.selectedcombouser, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n            // this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            //  this.props.callService(inputParam);\r\n\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        //   if (this.props.Login.masterData && this.props.Login.masterData.userrole) {\r\n\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_USERROLE\",\r\n                \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\",\r\n               // \"label\": \"IDS_USERNAME\",\r\n              //  \"value\": this.props.Login.masterData.SelectedUserName ? this.props.Login.masterData.SelectedUserName.susername : \"NA\",\r\n            },{\r\n              //  \"label\": \"IDS_USERROLE\",\r\n               // \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\",\r\n               \"label\": \"IDS_USERNAME\",\r\n                \"value\": this.props.Login.masterData.SelectedUserName ? this.props.Login.masterData.SelectedUserName.susername : \"NA\",\r\n            }\r\n        );\r\n        // } else {\r\n        //     breadCrumbData.push(\r\n        //         {\r\n        //             \"label\": \"IDS_USERROLE\",\r\n        //             \"value\": \"NA\"\r\n\r\n        //         },\r\n        //     );\r\n        // }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n\r\n        }\r\n\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            this.setState({ selectedcombo: this.props.Login.selectedcombo });\r\n        }\r\n\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            this.setState({ comboitem: this.props.Login.comboitem });\r\n        }\r\n        if (this.props.Login.masterData.AvaliableScreen !== previousProps.Login.masterData.AvaliableScreen) {\r\n            let skip = this.state.skip;\r\n            let take = this.state.take;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\r\n            take = this.props.Login.take || take;\r\n\r\n            this.setState({ skip, take });\r\n        }\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.userrole !== undefined) {\r\n            if (this.props.Login.masterData.userrole !== previousProps.Login.masterData.userrole) {\r\n                const userrole = constructOptionList(this.props.Login.masterData.userrole || [], \"nuserrolecode\",\r\n                    \"suserrolename\", undefined, undefined, undefined);\r\n                const userroleList = userrole.get(\"OptionList\");\r\n\r\n                const selectedcombo = {\r\n                    nuserrolecode: masterData.userrole && masterData.userrole.length > 0 ? {\r\n                        \"value\": masterData.userrole[0].nuserrolecode,\r\n                        \"label\": masterData.userrole[0].suserrolename\r\n                    } : \"\"\r\n                }\r\n                this.setState({\r\n                    selectedcombo: selectedcombo,\r\n                    userroleList: userroleList\r\n                });\r\n            }\r\n        }\r\n        //Added by Allwin\r\n        if (this.props.Login.masterData.UsersMain !== previousProps.Login.masterData.UsersMain) {\r\n            const UsersMain = constructOptionList(this.props.Login.masterData.UsersMain || [], \"nusercode\",\r\n                \"susername\", undefined, undefined, undefined);\r\n            const userrnameList = UsersMain.get(\"OptionList\");\r\n\r\n            const selectedcombouser = {\r\n                nusercode: masterData.UsersMain && masterData.UsersMain.length > 0 ? {\r\n                    \"value\": masterData.UsersMain[0].nusercode,\r\n                    \"label\": masterData.UsersMain[0].susername\r\n                } : \"\"\r\n            }\r\n            this.setState({\r\n                selectedcombouser: selectedcombouser,\r\n                userrnameList: userrnameList\r\n            });\r\n        }\r\n        //         if('SelectedScreenRights' in this.props.Login.masterData)\r\n        //         {\r\n        //             if(this.props.Login.masterData.SelectedScreenRights.length>0)\r\n        //             {\r\n        //                 if('SelectedScreenRights' in previousProps.Login.masterData)\r\n        //                 {\r\n        //                     if(previousProps.Login.masterData.SelectedScreenRights.length>0)\r\n        //            {\r\n        //             if(this.props.Login.masterData.SelectedScreenRights[0].needrights!==\r\n        //                 previousProps.Login.masterData.SelectedScreenRights[0].needrights)\r\n        //                 {\r\n        // if( this.props.Login.masterData.SelectedScreenRights[0].needrights===3)\r\n        // {\r\n        //     this.setState({custombuttonstate:true})\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.setState({custombuttonstate:false}) \r\n        // }\r\n        //                 }\r\n        //             }\r\n        //             }\r\n        //             }\r\n        //         }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n\r\n            // let dataState = this.state.dataState || {};\r\n            // dataState= {...dataState, group: [{ field: 'screenname' }]} ;\r\n\r\n            this.setState({\r\n                filterData//, dataState\r\n            });\r\n        }\r\n\r\n\r\n        // if(this.props.Login.masterData.searchedData !== this.props.Login.masterData.ScreenRights){\r\n        //    if (this.props.Login.masterData.searchedData) \r\n        //    {\r\n        //     if(this.props.Login.masterData.searchedData.length<= this.state.skip){\r\n        //         this.setState({skip:0});\r\n        //     }\r\n        // }\r\n        // }\r\n\r\n\r\n    }\r\n\r\n\r\n    handlePageChange = e => {\r\n        console.log('zzzzzzzzzz',e.skip)\r\n        console.log('zzzzzzzzzz1',e.take)\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nuserrolecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n\r\n                //Added by Allwin for Combo Change Get\r\n                const inputParamcombo = {\r\n                    nuserrolecode: comboData.item.nuserrolecode\r\n                };\r\n\r\n                const selectedcombouser = this.state.selectedcombouser || {};\r\n                // selectedcombouser= this.props.initialcombochangeget(comboData.item.nuserrolecode);\r\n                this.props.initialcombochangeget(comboData.item.nuserrolecode,this.props.Login.masterData,this.props.Login.userInfo);\r\n            //    this.props.initialcombochangeget(comboData.item.nuserrolecode);\r\n               \r\n              //  this.props.initialcombochangeget(comboData.item.nuserrolecode,this.props.Login.masterData, this.props.Login.userInfo);\r\n               \r\n               \r\n                //this.setState({ selectedcombo});\r\n\r\n                // let dataState = this.state.dataState || {};\r\n                // dataState= {...dataState, group: [{ field: 'screenname' }]} ;\r\n\r\n\r\n                // masterData[\"ControlRights\"]=[]\r\n                // this.props.comboChangeUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedcombo);\r\n            }\r\n            else if (fieldName === \"nusercode\") {\r\n                const selectedcombouser = this.state.selectedcombouser || {};\r\n                selectedcombouser[fieldName] = comboData;\r\n                this.setState({ selectedcombouser });\r\n            }\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n            else if (fieldName === \"nformcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nformcode\"] = comboData;\r\n                let availableDatas = [];\r\n                this.state.selectedRecord.nformcode.map(data => {\r\n                    return availableDatas.push(data.item);\r\n                });\r\n                this.setState({ selectedRecord, availableDatas });\r\n            }\r\n        }\r\n    }\r\n\r\n    onComboChangeUserRole = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedRecord = this.state.selectedRecord || {}; //this.state.selectedRecord || {};\r\n            selectedRecord[\"nuserrole\"] = comboData;\r\n            if (fieldName === \"nuserrole\") {\r\n                this.props.checkUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnControlRights(event, rowItem, columnName, rowIndex, saveType,needesignparent) {\r\n        //  const selectedRecord = rowItem || {};\r\n        // selectedRecord[]\r\n        const selectedRecord = {};\r\n         if(needesignparent===4)\r\n         {\r\n             toast.warn(this.props.intl.formatMessage({ id: \"IDS_ITISDEACTIVEINSCREENRIGHTS\" }))\r\n       }\r\n        else\r\n    {\r\n        if (rowItem[\"needrights\"] !== 3) {\r\n            selectedRecord[\"ncontrolcode\"] = rowItem[\"ncontrolcode\"]\r\n            selectedRecord[\"nformcode\"] = rowItem[\"nformcode\"]\r\n            //    selectedRecord[\"needrights\"]= rowItem[\"needrights\"]\r\n            selectedRecord[\"nstatus\"] = rowItem[\"nstatus\"]\r\n            selectedRecord[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"].value\r\n            selectedRecord[\"nusercode\"] = this.state.selectedcombouser[\"nusercode\"].value\r\n            selectedRecord[\"scontrolids\"] = rowItem[\"scontrolids\"]\r\n            selectedRecord[\"scontrolname\"] = rowItem[\"scontrolname\"]\r\n            selectedRecord[\"screenname\"] = rowItem[\"screenname\"]\r\n        //    if(columnName===\"nneedesign\")  \r\n        //    {\r\n        //    selectedRecord[\"nneedesign\"]=rowItem[\"nneedesign\"]\r\n        //    }\r\n            // ncontrolcode: 133\r\n            // nformcode: 44\r\n\r\n            // nneedrights: 3\r\n            // nstatus: 1\r\n            // nuserrolecode: 0\r\n            // scontrolids: \"Delete Charge Band\"\r\n            // scontrolname: \"DeleteChargeBand\"\r\n            // screenname: \"Charge Band\"\r\n\r\n            if(columnName===\"nneedesign\")  \r\n            {\r\n                selectedRecord[\"nneedesign\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else\r\n            {\r\n            selectedRecord[\"needrights\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            this.saveClick(selectedRecord, saveType, undefined);\r\n        }\r\n    }\r\n    }\r\n\r\n    saveClick = (selectedRecord, saveType, formRef) => {\r\n        let operation = \"update\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nusersrolehidescreencode\"\r\n        }\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.ACTIVE;\r\n        inputData[\"screenrights\"] = selectedRecord;\r\n        if (saveType === 1) {\r\n            inputData[\"needrights\"] = selectedRecord[\"needrights\"];\r\n            inputData[\"nneedesign\"] = null;\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else {\r\n            inputData[\"nneedesign\"] = selectedRecord[\"nneedesign\"];\r\n            methodUrl = \"Esign\";\r\n        }\r\n        const inputParam = {\r\n            classUrl: \"userscreenhide\",\r\n            methodUrl: \"ScreenHideControlRights\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef, searchRef: this.searchRef, postParam, dataState: this.state.dataState\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"userscreenhide\"] = this.state.availableDatas;\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n        inputData[\"userrolecode\"] = this.state.selectedRecord[\"nuserrole\"] ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\r\n        inputData[\"usercode\"] = this.state.selectedcombouser[\"nusercode\"] ? this.state.selectedcombouser[\"nusercode\"].value : \"\";\r\n        // inputData[\"nusercode\"] = this.state.selectedcombouser[\"nusercode\"] ? this.state.selectedcombouser[\"nusercode\"].value : \"\";\r\n        inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"UserScreenhide\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n            searchRef: this.searchRef,\r\n            dataState: this.state.dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.screenName === \"IDS_SCREENRIGHTS\") {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        } else {\r\n            if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                this.ConfirmComponent()\r\n            }\r\n            else {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    copyAlertSave = () => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"screenrights\"] = this.state.availableDatas;\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n        inputData[\"userrolecode\"] = this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\r\n        inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"ScreenRights\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    onSaveAllControlAndEsign = (skip, take, saveType, formRef) => {\r\n        let value = this.state.comboitem ? this.state.comboitem.value.value : this.ControlButton[0].value\r\n        let operation = \"\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights.slice(skip, skip + take);\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.DEACTIVE;\r\n        postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nusersrolehidescreencode\"\r\n        }\r\n        if (value === 1) {\r\n            inputData[\"needrights\"] = transactionStatus.YES;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 2) {\r\n            inputData[\"needrights\"] = transactionStatus.NO;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 3) {\r\n            inputData[\"nneedesign\"] = transactionStatus.YES;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n        else if (value === 4) {\r\n            inputData[\"nneedesign\"] = transactionStatus.NO;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: \"userscreenhide\",\r\n            methodUrl: \"ScreenHideControlRights\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType,\r\n            formRef, postParam,\r\n            searchRef: this.searchRef,\r\n            selectedcombo: this.props.Login.selectedcombo,\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n            \"ok\", \"cancel\", () => this.copyAlertSave());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        this.props.Login.masterData.SelectedScreenRights.map(item => fieldArray.push(item.nusersrolehidescreencode));\r\n        let postParam = {\r\n            inputListName: \"UserScreenhide\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nusersrolehidescreencode\",\r\n            primaryKeyValue: fieldArray,\r\n            fetchUrl: \"userscreenhide/getUserScreenhide\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n\r\n        const inputParam = {\r\n            methodUrl: \"UserScreenhide\",\r\n            classUrl: \"userscreenhide\",\r\n            inputData: {\r\n                \"screenrights\": this.props.Login.masterData.SelectedScreenRights,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"nuserrolecode\": this.state.selectedcombo[\"nuserrolecode\"]\r\n                    ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\"\r\n                , \"usercode\": this.state.selectedcombouser[\"nusercode\"]\r\n                    ? this.state.selectedcombouser[\"nusercode\"].value : \"\"\r\n            },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"IDS_USERSCREENHIDE\",\r\n            // dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"ScreenRights\", id: \"screenrights\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.props.Login.masterData.SelectedUserRole) {\r\n            let comboitem = {}\r\n            //let selectedcombo= this.state.selectedcombo;\r\n            comboitem[\"value\"] = this.ControlButton[0];\r\n            this.searchRef.current.value = \"\";\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": this.props.Login.userInfo },\r\n                classUrl: \"userscreenhide\",\r\n                methodUrl: \"getUserScreenhide\",\r\n                displayName: \"UserScreenhide\",\r\n                userInfo: this.props.Login.userInfo,\r\n                comboitem,\r\n                nuserrolecode: this.props.Login.masterData.SelectedUserRole,\r\n                masterData: this.props.Login.masterData,\r\n                skip: this.state.skip,\r\n                take: this.state.take\r\n\r\n            };\r\n            this.props.reload(inputParam);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, reload, crudMaster, validateEsignCredential, filterTransactionList,\r\n    updateStore, getScreenRightsDetail, getUserScreenhideComboService, comboChangeUserRoleScreenRights, handleClickDelete, filterColumnData, getCopyUseRoleScreenRights, copyScreenRights, checkUserRoleScreenRights,\r\n    sortData, initialcombochangeget, comboChangeUserRoleScreenRightsHide, getUserScreenhideDetail, ListSwitchUpdate\r\n})(injectIntl(UserRoleScreenHide));\r\n\r\n"]},"metadata":{},"sourceType":"module"}