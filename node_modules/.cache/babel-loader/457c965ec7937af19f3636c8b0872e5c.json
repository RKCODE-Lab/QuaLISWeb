{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card,Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,fetchRecordDashBoardType,getSqlQueryDataService,getSqlQueryColumns,getAddDashboardDesign,selectCheckBoxDashBoardTypes,getDashBoardParameterMappingComboService,updateStore,validateEsignCredential,filterColumnData,checkParametersAvailableForDefaultValue,getReportViewChildDataListForDashBoard,//showDefaultValueInDataGrid,\nupdateDashBoarddesignDefaultValue}from'../../actions';import Esign from'../../pages/audittrail/Esign';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import ListMaster from'../../components/list-master/list-master.component';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ProductList,ContentPanel}from'../../pages/product/product.styled';import{showEsign,getControlMap}from'../../components/CommonScript';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import AddDashBoardTypes from'../../pages/dashboardtypes/AddDashBoardTypes';import{transactionStatus,chartType}from'../../components/Enumeration';import AddSeriesColors from'../../pages/dashboardtypes/AddSeriesColors';//import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport DashBoardDesignConfig from'../../pages/dashboardtypes/DashBoardDesignConfig';// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var DashBoardTypes=/*#__PURE__*/function(_React$Component){_inherits(DashBoardTypes,_React$Component);var _super=_createSuper(DashBoardTypes);function DashBoardTypes(props){var _this;_classCallCheck(this,DashBoardTypes);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.openModal=function(input){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},operation:input.operation,screenName:\"IDS_DASHBOARDTYPES\",openModal:true,ncontrolCode:input.ncontrolCode,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.setState({isChartSeries:false});_this.props.updateStore(updateInfo);};_this.confirmDelete=function(ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteDashBoardType(\"delete\",ncontrolCode);});};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"dashboardtypes\",methodUrl:\"DashBoardTypes\",displayName:\"IDS_DASHBOARDTYPES\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.DeleteDashBoardType=function(operation,ncontrolCode){var inputData=[];var postParam={inputListName:\"DashBoardTypes\",selectedObject:\"selectedDashBoardTypes\",primaryKeyField:\"ndashboardtypecode\",primaryKeyValue:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,fetchUrl:\"dashboardtypes/getAllSelectionDashBoardTypes\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};inputData[\"dashboardtype\"]=_this.props.Login.masterData.selectedDashBoardTypes;inputData[\"userinfo\"]=_this.props.Login.userInfo;var inputParam={methodUrl:\"DashBoardTypes\",classUrl:\"dashboardtypes\",inputData:inputData,operation:\"delete\",postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"DashBoardTypes\",operation:\"delete\",methodUrl:\"DashBoardTypes\",classUrl:\"dashboardtypes\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onSaveClick=function(saveType,formRef){// console.log(\"Save :\", this.state.chartSeries);\nvar dataState=undefined;var operation=_this.props.Login.operation;var inputData=[];var selectedId=null;var data=[];var i=0;var postParam=undefined;if(_this.state.selectedRecord[\"ncharttypecode\"]&&_this.state.selectedRecord[\"ncharttypecode\"].value===chartType.BUBBLE&&_this.state.isChartSeries===false){if(_this.state.selectedRecord[\"yFieldBubble\"].length!==_this.state.selectedRecord[\"sizeField\"].length||_this.state.selectedRecord[\"yFieldBubble\"].length!==_this.state.selectedRecord[\"categoryField\"].length){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SERIESSHOULDBESAMELENGTH\"}));return;}if(_this.state.selectedRecord[\"sizeField\"].length!==_this.state.selectedRecord[\"categoryField\"].length){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SERIESSHOULDBESAMELENGTH\"}));return;}}_this.setState({isChartSeries:true});if(_this.state.selectedRecord[\"ncharttypecode\"]&&(_this.state.selectedRecord[\"ncharttypecode\"].value===chartType.PIECHART||_this.state.selectedRecord[\"ncharttypecode\"].value===chartType.DONUT)){postParam={inputListName:\"DashBoardTypes\",selectedObject:\"selectedDashBoardTypes\",primaryKeyField:\"ndashboardtypecode\"};inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"dashboardtype\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};inputData[\"dashboardtype\"][\"sdashboardtypename\"]=_this.state.selectedRecord[\"sdashboardtypename\"]?_this.state.selectedRecord[\"sdashboardtypename\"]:\"\";inputData[\"dashboardtype\"][\"nquerycode\"]=_this.state.selectedRecord[\"nsqlquerycode\"]?_this.state.selectedRecord[\"nsqlquerycode\"].value:-1;inputData[\"dashboardtype\"][\"ncharttypecode\"]=_this.state.selectedRecord[\"ncharttypecode\"]?_this.state.selectedRecord[\"ncharttypecode\"].value:-1;if(operation!==\"create\"){inputData[\"dashboardtype\"][\"ndashboardtypecode\"]=_this.state.selectedRecord[\"ndashboardtypecode\"]?_this.state.selectedRecord[\"ndashboardtypecode\"]:-1;}_this.props.Login.ChartProperty.forEach(function(prop){if(prop.schartpropertyname===\"field\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[\"field\"].item.Value});}else if(prop.schartpropertyname===\"nameField\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[\"nameField\"].item.Value});}});inputData[\"chartproptransaction\"]=data;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,//methodUrl: this.props.Login.inputParam.methodUrl,\nmethodUrl:\"DashBoardTypes\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId,postParam:postParam,searchRef:_this.searchRef};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}_this.setState({isChartSeries:false});}else if(_this.state.isChartSeries===true){postParam={inputListName:\"DashBoardTypes\",selectedObject:\"selectedDashBoardTypes\",primaryKeyField:\"ndashboardtypecode\"};inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"dashboardtype\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};inputData[\"dashboardtype\"][\"sdashboardtypename\"]=_this.state.selectedRecord[\"sdashboardtypename\"]?_this.state.selectedRecord[\"sdashboardtypename\"]:\"\";inputData[\"dashboardtype\"][\"nquerycode\"]=_this.state.selectedRecord[\"nsqlquerycode\"]?_this.state.selectedRecord[\"nsqlquerycode\"].value:-1;inputData[\"dashboardtype\"][\"ncharttypecode\"]=_this.state.selectedRecord[\"ncharttypecode\"]?_this.state.selectedRecord[\"ncharttypecode\"].value:-1;if(operation!==\"create\"){inputData[\"dashboardtype\"][\"ndashboardtypecode\"]=_this.state.selectedRecord[\"ndashboardtypecode\"]?_this.state.selectedRecord[\"ndashboardtypecode\"]:-1;}if(_this.state.selectedRecord[\"ncharttypecode\"]&&_this.state.selectedRecord[\"ncharttypecode\"].value!==chartType.BUBBLE){i++;_this.props.Login.ChartProperty.forEach(function(prop){if(prop.schartpropertyname===\"xField\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[\"xColumnName\"].item.Value});}else if(prop.schartpropertyname===\"displayName\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[\"xColumnName\"].item.Value});}});_this.state.selectedRecord[\"yColumnName\"]&&_this.state.selectedRecord[\"yColumnName\"].map(function(item){i++;_this.props.Login.ChartProperty.forEach(function(prop){if(prop.schartpropertyname===\"yField\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":item.item.Value});}else if(prop.schartpropertyname===\"displayName\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":item.item.Value});}else if(prop.schartpropertyname===\"areaFill\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":item.item.Color});}});return null;});}else{i++;_this.props.Login.ChartProperty.filter(function(field){return field.schartpropertyname===\"xFieldBubble\";}).forEach(function(prop){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[\"xFieldBubble\"].item.Value});});_this.state.selectedRecord[\"sizeField\"]&&_this.state.selectedRecord[\"sizeField\"].forEach(function(item,index){i++;_this.props.Login.ChartProperty.filter(function(field){return field.schartpropertyname!==\"xFieldBubble\";}).forEach(function(prop){if(prop.schartpropertyname===\"colorFill\"){data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":item.item.Color});}else{data.push({\"ndashboardtypecode\":1,\"nchartpropertycode\":prop.nchartpropertycode,\"nseries\":i,\"schartpropvalue\":_this.state.selectedRecord[prop.schartpropertyname][index].item.Value});}});});}inputData[\"chartproptransaction\"]=data;var _inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"DashBoardTypes\",//this.props.Login.inputParam.methodUrl,\ndisplayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId,postParam:postParam,searchRef:_this.searchRef};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:_inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(_updateInfo);}else{_this.props.crudMaster(_inputParam,_this.props.Login.masterData,\"openModal\");}_this.setState({isChartSeries:false});}};_this.getQueryColumns=function(){_this.props.getSqlQueryColumns(_this.state.sqlQueryCode,_this.state.chartTypeCode,_this.props.Login.userInfo);};_this.handleChange=function(item,fieldName,isXField){if(item!==null){var selectedRecord=_this.state.selectedRecord||{};var xSeriesColumns=_this.state.xSeriesColumns||{};var ySeriesColumns=_this.state.ySeriesColumns||{};if(fieldName===\"ncharttypecode\"){selectedRecord[fieldName]=item;selectedRecord.nsqlquerycode=\"\";_this.props.getSqlQueryDataService(item.value,selectedRecord,_this.props.Login.userInfo);//   this.setState({ chartTypeCode: item.value, selectedRecord });\n}else if(fieldName===\"nsqlquerycode\"){selectedRecord[fieldName]=item;_this.props.getSqlQueryColumns(item.value,selectedRecord[\"ncharttypecode\"].value,_this.props.Login.userInfo,selectedRecord);}else{selectedRecord[fieldName]=item;}if(isXField!==\"ChartType\"){var chartSeries=_toConsumableArray(_this.state.chartSeries);// let index = 0;\nvar newXCols=[];var newYCols=[];if(_this.props.Login.SqlColumns&&_this.props.Login.SqlColumns.xSeriesColumns){// console.log(\" xSeriesColumns 1 : \", this.props.Login.SqlColumns.xSeriesColumns);\nif(selectedRecord[\"ncharttypecode\"]&&selectedRecord[\"ncharttypecode\"].value!==chartType.PIECHART&&selectedRecord[\"ncharttypecode\"].value!==chartType.DONUT){if(selectedRecord[\"xColumnName\"]&&[selectedRecord[\"xColumnName\"]].length>=0){newYCols=_this.props.Login.SqlColumns.ySeriesColumns.filter(function(item){return![selectedRecord[\"xColumnName\"].value].includes(item.value);});}else{newYCols=_this.props.Login.SqlColumns.ySeriesColumns;}if(selectedRecord[\"yColumnName\"]&&selectedRecord[\"yColumnName\"].length>=0){newXCols=_this.props.Login.SqlColumns.xSeriesColumns.filter(function(item){return!selectedRecord[\"yColumnName\"].some(function(itemValue){return itemValue.value===item.value;});});}else{newXCols=_this.props.Login.SqlColumns.xSeriesColumns;}if(isXField===\"xField\"){chartSeries[0].xField=item;}else if(isXField===\"yField\"||isXField===\"sizeField\"){chartSeries[0].yField=item;}}else{if(selectedRecord[\"field\"]&&[selectedRecord[\"field\"]].length>=0){newYCols=_this.props.Login.SqlColumns.ySeriesColumns.filter(function(item){return![selectedRecord[\"field\"].value].includes(item.value);});}else{newYCols=_this.props.Login.SqlColumns.ySeriesColumns;}if(selectedRecord[\"nameField\"]&&[selectedRecord[\"nameField\"]].length>=0){newXCols=_this.props.Login.SqlColumns.xSeriesColumns.filter(function(item){return![selectedRecord[\"nameField\"].value].includes(item.value);});}else{newXCols=_this.props.Login.SqlColumns.xSeriesColumns;}}}_this.setState({selectedRecord:selectedRecord,sqlQueryCode:item.value,sqlColumns:{xSeriesColumns:newXCols,ySeriesColumns:newYCols},xSeriesColumns:xSeriesColumns,ySeriesColumns:ySeriesColumns});}}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.gridColumnList=[];var _dataState={skip:0,take:10};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,isOpen:false,controlMap:new Map(),userRoleControlRights:[],sqlQueryCode:0,chartTypeCode:0,chartSeries:[{xField:[],yField:[],chartTitle:\"\"}],isChartSeries:false,displayColorPicker:false,color:{r:'241',g:'112',b:'19',a:'1'},pieCatagoryColumn:\"\",pieValueColumn:\"\",sqlColumns:[],xSeriesColumns:[],ySeriesColumns:[],sidebarview:false};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(DashBoardTypes,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"ndashboardtypecode\";var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var deleteId=this.props.Login.inputParam&&this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var AddDashBoardtype={screenName:this.props.Login.screenName,primaryKeyField:primaryKeyField,undefined:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:addId};var editParam={screenName:this.props.Login.screenName,primaryKeyField:\"ndashboardtypecode\",operation:\"update\",inputParam:this.props.Login.inputParam,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editId};// const deleteParam = { operation: \"delete\" };\nvar filterParam={inputListName:\"DashBoardTypes\",selectedObject:\"selectedDashBoardTypes\",primaryKeyField:\"ndashboardtypecode\",// fetchUrl: \"dashboardtypes/getAllSelectionDashBoardTypes\", \nfetchUrl:\"dashboardtypes/getDashBoardTypes\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"sdashboardtypename\",\"schartname\",\"ssqlqueryname\"]};// console.log(\"Chart Property : \", this.props.ChartProperty);\nthis.extractedColumnList=[{\"idsName\":\"IDS_DASHBOARDNAME\",\"dataField\":\"sdashboardtypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"ndesigncomponentcode\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"300px\"},{\"idsName\":\"IDS_EXISTINGLINKTABLE\",\"dataField\":\"nsqlquerycode\",\"width\":\"200px\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DAYS\",\"dataField\":\"ndays\",\"width\":\"200px\"}];this.gridColumnList=[{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"300px\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"200px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"ndesigncomponentcode\",\"width\":\"200px\"}];var mandatoryFields=[];mandatoryFields.push({\"idsName\":\"IDS_DASHBOARDTYPENAME\",\"dataField\":\"sdashboardtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});mandatoryFields.push({\"idsName\":\"IDS_CHARTTYPE\",\"dataField\":\"ncharttypecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});mandatoryFields.push({\"idsName\":\"IDS_QUERY\",\"dataField\":\"nsqlquerycode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});var fieldList=this.props.Login.ChartProperty||[];fieldList.forEach(function(item){if(item.schartpropertyname===\"field\"){mandatoryFields.push({\"idsName\":\"IDS_CATAEGORYFIELD\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"nameField\"){mandatoryFields.push({\"idsName\":\"IDS_VALUEFIELD\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"yField\"){mandatoryFields.push({\"idsName\":\"IDS_YSERIES\",\"dataField\":\"yColumnName\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"xField\"){mandatoryFields.push({\"idsName\":\"IDS_XSERIES\",\"dataField\":\"xColumnName\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"xFieldBubble\"){mandatoryFields.push({\"idsName\":\"IDS_XSERIES\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"yFieldBubble\"){mandatoryFields.push({\"idsName\":\"IDS_YSERIES\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"sizeField\"){mandatoryFields.push({\"idsName\":\"IDS_SIZEFIELD\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(item.schartpropertyname===\"categoryField\"){mandatoryFields.push({\"idsName\":\"IDS_CATAEGORYFIELD\",\"dataField\":item.schartpropertyname,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}});// console.log(\"props:\", this.props.Login);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this2.setState({sidebarview:!_this2.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster//filterColumnData ={(e)=>this.filterColumnData(e)}\n,{formatMessage:this.props.intl.formatMessage,screenName:this.props.intl.formatMessage({id:\"IDS_DASHBOARDTYPES\"}),masterData:this.props.Login.masterData||[],userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.DashBoardTypes,getMasterDetail:function getMasterDetail(_DashBoardTypes){return _this2.props.selectCheckBoxDashBoardTypes(_DashBoardTypes,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedDashBoardTypes,primaryKeyField:\"ndashboardtypecode\",mainField:\"sdashboardtypename\",firstField:\"schartname\"//secondField=\"ssqlqueryname\"\n// isIDSField=\"Yes\"\n,filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:true,openModal:function openModal(){return _this2.props.fetchRecordDashBoardType(AddDashBoardtype,_this2.props.Login.masterData.selectedDashBoardTypes);}// openModal={() => this.props.getAddDashboardDesign(this.props.Login.masterData.selectedDashBoardTypes,this.props.Login.userInfo)}\n})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},this.props.Login.masterData.DashBoardTypes&&this.props.Login.masterData.DashBoardTypes.length>0&&this.props.Login.masterData.selectedDashBoardTypes?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedDashBoardTypes.sdashboardtypename),/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},this.props.Login.masterData.selectedDashBoardTypes.ssqlqueryname),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(ProductList,{className:\"d-inline dropdown badget_menu\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1//   data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.fetchRecordDashBoardType(editParam);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteDashboardType\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})// data-for=\"tooltip-common-wrap\"\n,onClick:function onClick(){return _this2.confirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt}))))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(DashBoardDesignConfig,{operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,masterStatus:this.props.Login.masterStatus,openChildModal:this.props.Login.openChildModal,updateStore:this.props.updateStore,selectedRecord:this.props.Login.selectedRecord,ncontrolCode:this.props.Login.ncontrolCode,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,controlMap:this.state.controlMap,showAccordian:this.state.showAccordian,selectedId:this.props.Login.selectedId,designComponents:this.props.Login.designComponents||[],sqlQueryForParams:this.props.Login.sqlQueryForParams||[],sqlQueryForExistingLinkTable:this.props.Login.sqlQueryForExistingLinkTable||[],getAddDashboardDesign:this.props.getAddDashboardDesign,getDashBoardParameterMappingComboService:this.props.getDashBoardParameterMappingComboService,parentComponentList:this.props.Login.parentComponentList,childComponentList:this.props.Login.childComponentList,checkParametersAvailableForDefaultValue:this.props.checkParametersAvailableForDefaultValue,getReportViewChildDataListForDashBoard:this.props.getReportViewChildDataListForDashBoard,showDefaultValueInDataGrid:this.props.showDefaultValueInDataGrid,updateDashBoarddesignDefaultValue:this.props.updateDashBoarddesignDefaultValue,addDesignParam:this.state.addDesignParam,gridData:this.state.gridData,addMappingParam:this.state.addMappingParam,mappingGridData:this.state.mappingGridData}))):\"\")))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.state.isChartSeries===false?/*#__PURE__*/React.createElement(AddDashBoardTypes,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,handleChange:this.handleChange,chartType:this.props.Login.chartType||[],sqlQuery:this.props.Login.sqlQuery||[]// ncharttypecode={this.props.Login.ncharttypecode || []}\n// nsqlquerycode={this.props.Login.nsqlquerycode || []}\n,getSqlQueryColumns:this.getQueryColumns,extractedColumnList:this.extractedColumnList,ChartProperty:this.props.Login.ChartProperty// SqlColumns={this.props.Login.SqlColumns || []}\n,SqlColumns:this.state.sqlColumns||[],Value:this.props.Login.Value,operation:this.props.Login.operation,xValue:this.props.Login.xValue,yValue:this.props.Login.yValue,xSeriesColumnList:this.props.Login.xSeriesColumnList||[],ySeriesColumnList:this.props.Login.ySeriesColumnList||[]}):/*#__PURE__*/React.createElement(AddSeriesColors,{displayColorPicker:this.state.displayColorPicker,color:this.state.color// handleChange={this.handleColorChange}\n,ySeries:this.state.chartSeries[0].yField})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this3=this;if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var addDesignParam=[];var gridData=[];this.props.Login.masterData.selectedDesignConfig&&this.props.Login.masterData.selectedDesignConfig.forEach(function(item){addDesignParam.push(_objectSpread(_objectSpread({},item),{},{ndesigncomponentcode:{label:item.sdesigncomponentname,value:item.ndesigncomponentcode},nsqlquerycode:{label:item.ssqlqueryname,value:item.nsqlquerycode}}));gridData.push(_objectSpread(_objectSpread({},item),{},{ndesigncomponentcode:{label:item.sdesigncomponentname,value:item.ndesigncomponentcode},nsqlquerycode:{label:item.ssqlqueryname,value:item.nsqlquerycode}}));});var addMappingParam=[];var mappingGridData=[];this.props.Login.masterData.DashBoardParameterMapping&&this.props.Login.masterData.DashBoardParameterMapping.forEach(function(item){addMappingParam.push(_objectSpread({},item));mappingGridData.push(_objectSpread({},item));});this.setState({addDesignParam:addDesignParam,gridData:gridData,addMappingParam:addMappingParam,mappingGridData:mappingGridData,userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData// dataResult: process(this.props.Login.masterData, this.state.dataState),\n});}else{var _addDesignParam=[];var _gridData=[];this.props.Login.masterData.selectedDesignConfig&&this.props.Login.masterData.selectedDesignConfig.forEach(function(item){_addDesignParam.push(_objectSpread(_objectSpread({},item),{},{ndesigncomponentcode:{label:item.sdesigncomponentname,value:item.ndesigncomponentcode},nsqlquerycode:{label:item.ssqlqueryname,value:item.nsqlquerycode}}));_gridData.push(_objectSpread(_objectSpread({},item),{},{ndesigncomponentcode:{label:item.sdesigncomponentname,value:item.ndesigncomponentcode},nsqlquerycode:{label:item.ssqlqueryname,value:item.nsqlquerycode}}));});var _addMappingParam=[];var _mappingGridData=[];this.props.Login.masterData.DashBoardParameterMapping&&this.props.Login.masterData.DashBoardParameterMapping.forEach(function(item){_addMappingParam.push(_objectSpread({},item));_mappingGridData.push(_objectSpread({},item));});this.setState({addDesignParam:_addDesignParam,gridData:_gridData,addMappingParam:_addMappingParam,mappingGridData:_mappingGridData,data:this.props.Login.masterData,selectedRecord:this.props.Login.selectedRecord,isOpen:false});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){var chartSeries=_toConsumableArray(this.state.chartSeries);chartSeries[0].xField=this.props.Login.selectedRecord.xColumnName;if(this.props.Login.selectedRecord[\"ncharttypecode\"]&&this.props.Login.selectedRecord[\"ncharttypecode\"].value===chartType.BUBBLE){chartSeries[0].yField=this.props.Login.selectedRecord.sizeField;}else{chartSeries[0].yField=this.props.Login.selectedRecord.yColumnName;}this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.SqlColumns!==previousProps.Login.SqlColumns){var newXCols=[];var newYCols=[];if(this.props.Login.operation===\"update\"){if(this.props.Login.selectedRecord[\"ncharttypecode\"]&&(this.props.Login.selectedRecord[\"ncharttypecode\"].value===chartType.PIECHART||this.props.Login.selectedRecord[\"ncharttypecode\"].value===chartType.DONUT)){this.props.Login.selectedRecord[\"field\"]&&this.props.Login.selectedRecord[\"field\"].value!==undefined?newYCols=this.props.Login.SqlColumns.ySeriesColumns.filter(function(item){return![_this3.props.Login.selectedRecord[\"field\"].value].includes(item.value);}):newYCols=this.props.Login.SqlColumns.ySeriesColumns;if(this.props.Login.selectedRecord[\"nameField\"]&&this.props.Login.selectedRecord[\"nameField\"].value!==undefined){newXCols=this.props.Login.SqlColumns.xSeriesColumns.filter(function(item){return![_this3.props.Login.selectedRecord[\"nameField\"].value].includes(item.value);});}else{newXCols=this.props.Login.SqlColumns.xSeriesColumns;}}else{this.props.Login.selectedRecord[\"xColumnName\"]&&this.props.Login.selectedRecord[\"xColumnName\"].value!==undefined?newYCols=this.props.Login.SqlColumns.ySeriesColumns.filter(function(item){return![_this3.props.Login.selectedRecord[\"xColumnName\"].value].includes(item.value);}):newYCols=this.props.Login.SqlColumns.ySeriesColumns;if(this.props.Login.selectedRecord[\"yColumnName\"]&&this.props.Login.selectedRecord[\"yColumnName\"].length>=0){newXCols=this.props.Login.SqlColumns.xSeriesColumns.filter(function(item){return!_this3.props.Login.selectedRecord[\"yColumnName\"].some(function(itemValue){return itemValue.value===item.value;});});}else{newXCols=this.props.Login.SqlColumns.xSeriesColumns;}}this.setState({sqlColumns:{xSeriesColumns:newXCols,ySeriesColumns:newYCols}});}else{this.setState({sqlColumns:this.props.Login.SqlColumns});}}if(this.props.Login.xSeriesColumns!==previousProps.Login.xSeriesColumns){this.setState({xSeriesColumns:this.props.Login.xSeriesColumns});}if(this.props.Login.ySeriesColumns!==previousProps.Login.ySeriesColumns){this.setState({ySeriesColumns:this.props.Login.ySeriesColumns});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return DashBoardTypes;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,fetchRecordDashBoardType:fetchRecordDashBoardType,selectCheckBoxDashBoardTypes:selectCheckBoxDashBoardTypes,getSqlQueryDataService:getSqlQueryDataService,getSqlQueryColumns:getSqlQueryColumns,getAddDashboardDesign:getAddDashboardDesign,getDashBoardParameterMappingComboService:getDashBoardParameterMappingComboService,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,checkParametersAvailableForDefaultValue:checkParametersAvailableForDefaultValue,getReportViewChildDataListForDashBoard:getReportViewChildDataListForDashBoard,//showDefaultValueInDataGrid, \nupdateDashBoarddesignDefaultValue:updateDashBoarddesignDefaultValue})(injectIntl(DashBoardTypes));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboardtypes/DashBoardTypes.jsx"],"names":["React","Row","Col","Card","Nav","FontAwesomeIcon","faPencilAlt","faTrashAlt","toast","connect","injectIntl","callService","crudMaster","fetchRecordDashBoardType","getSqlQueryDataService","getSqlQueryColumns","getAddDashboardDesign","selectCheckBoxDashBoardTypes","getDashBoardParameterMappingComboService","updateStore","validateEsignCredential","filterColumnData","checkParametersAvailableForDefaultValue","getReportViewChildDataListForDashBoard","updateDashBoarddesignDefaultValue","Esign","ConfirmMessage","ListMaster","DEFAULT_RETURN","ProductList","ContentPanel","showEsign","getControlMap","SlideOutModal","AddDashBoardTypes","transactionStatus","chartType","AddSeriesColors","DashBoardDesignConfig","mapStateToProps","state","Login","DashBoardTypes","props","sidebarExpandCollapse","setState","sidebarview","openModal","input","updateInfo","typeName","data","selectedRecord","operation","screenName","ncontrolCode","loading","closeModal","loadEsign","selectedId","isChartSeries","confirmDelete","confirmMessage","confirm","intl","formatMessage","id","DeleteDashBoardType","reloadData","searchRef","current","value","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","masterData","selectedDashBoardTypes","ndashboardtypecode","fetchUrl","fecthInputObject","userinfo","userRoleControlRights","nformcode","screenData","onSaveClick","saveType","formRef","dataState","undefined","i","BUBBLE","length","warn","PIECHART","DONUT","nmastersitecode","ChartProperty","forEach","prop","schartpropertyname","push","nchartpropertycode","item","Value","map","Color","filter","field","index","getQueryColumns","sqlQueryCode","chartTypeCode","handleChange","fieldName","isXField","xSeriesColumns","ySeriesColumns","nsqlquerycode","chartSeries","newXCols","newYCols","SqlColumns","includes","some","itemValue","xField","yField","sqlColumns","onInputOnChange","event","target","type","name","checked","YES","NO","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","extractedColumnList","gridColumnList","skip","take","masterStatus","error","dataResult","isOpen","controlMap","Map","chartTitle","displayColorPicker","color","r","g","b","a","pieCatagoryColumn","pieValueColumn","addId","has","concat","get","ncontrolcode","editId","deleteId","AddDashBoardtype","editParam","filterParam","searchFieldList","mandatoryFields","fieldList","searchedData","sdashboardtypename","ssqlqueryname","float","indexOf","errorCode","openChildModal","showAccordian","designComponents","sqlQueryForParams","sqlQueryForExistingLinkTable","parentComponentList","childComponentList","showDefaultValueInDataGrid","addDesignParam","gridData","addMappingParam","mappingGridData","sqlQuery","xValue","yValue","xSeriesColumnList","ySeriesColumnList","previousProps","Object","values","selectedDesignConfig","ndesigncomponentcode","sdesigncomponentname","DashBoardParameterMapping","xColumnName","sizeField","yColumnName","Component"],"mappings":"m8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,mCAAxC,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,wBAD7B,CACuDC,sBADvD,CAEIC,kBAFJ,CAEwBC,qBAFxB,CAE+CC,4BAF/C,CAE6EC,wCAF7E,CAGIC,WAHJ,CAGiBC,uBAHjB,CAG0CC,gBAH1C,CAG4DC,uCAH5D,CAIIC,sCAJJ,CAI4C;AACvCC,iCALL,KAMO,eANP,CAOA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,oCAA1C,CACA,OAASC,SAAT,CAAoBC,aAApB,KAAyC,+BAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8CAA9B,CACA,OAASC,iBAAT,CAA4BC,SAA5B,KAA6C,8BAA7C,CACA,MAAOC,CAAAA,eAAP,KAA4B,4CAA5B,CACA;AACA,MAAOC,CAAAA,qBAAP,KAAkC,kDAAlC,CACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAKMC,CAAAA,c,4HACF,wBAAYC,KAAZ,CAAmB,gDACf,uBAAMA,KAAN,EADe,MA6BnBC,qBA7BmB,CA6BK,UAAM,CAC1B,MAAKC,QAAL,CAAc,CACVC,WAAW,CAAE,IADH,CAAd,EAGH,CAjCkB,OAmCnBC,SAnCmB,CAmCP,SAACC,KAAD,CAAW,CACnB,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfuB,IAAI,CAAE,CACFC,cAAc,CAAE,EADd,CACkBC,SAAS,CAAEL,KAAK,CAACK,SADnC,CAEFC,UAAU,CAAE,oBAFV,CAGFP,SAAS,CAAE,IAHT,CAGeQ,YAAY,CAAEP,KAAK,CAACO,YAHnC,CAIFC,OAAO,CAAE,KAJP,CAFS,CAAnB,CASA,MAAKb,KAAL,CAAWxB,WAAX,CAAuB8B,UAAvB,EACH,CA9CkB,OAgDnBQ,UAhDmB,CAgDN,UAAM,CACf,GAAIC,CAAAA,SAAS,CAAG,MAAKf,KAAL,CAAWF,KAAX,CAAiBiB,SAAjC,CACA,GAAIX,CAAAA,SAAS,CAAG,MAAKJ,KAAL,CAAWF,KAAX,CAAiBM,SAAjC,CACA,GAAIK,CAAAA,cAAc,CAAG,MAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAtC,CACA,GAAI,MAAKT,KAAL,CAAWF,KAAX,CAAiBiB,SAArB,CAAgC,CAC5B,GAAI,MAAKf,KAAL,CAAWF,KAAX,CAAiBY,SAAjB,GAA+B,QAAnC,CAA6C,CACzCK,SAAS,CAAG,KAAZ,CACAX,SAAS,CAAG,KAAZ,CACAK,cAAc,CAAG,EAAjB,CACH,CAJD,IAKK,CACDM,SAAS,CAAG,KAAZ,CACH,CACJ,CATD,IAUK,CACDX,SAAS,CAAG,KAAZ,CACAK,cAAc,CAAG,EAAjB,CACH,CAED,GAAMH,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfuB,IAAI,CAAE,CAAEJ,SAAS,CAATA,SAAF,CAAaW,SAAS,CAATA,SAAb,CAAwBN,cAAc,CAAdA,cAAxB,CAAwCO,UAAU,CAAE,IAApD,CAFS,CAAnB,CAIA,MAAKd,QAAL,CAAc,CAAEe,aAAa,CAAE,KAAjB,CAAd,EACA,MAAKjB,KAAL,CAAWxB,WAAX,CAAuB8B,UAAvB,EAEH,CA1EkB,OAyWnBY,aAzWmB,CAyWH,SAACN,YAAD,CAAkB,CAC9B,MAAKO,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,CAC4B,MAAKpB,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAD5B,CAE4B,MAAKvB,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,uBAAN,CAA9B,CAF5B,CAG4B,MAAKvB,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CAH5B,CAI4B,MAAKvB,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAJ5B,CAK4B,iBAAO,OAAKC,mBAAL,CAAyB,QAAzB,CAAmCZ,YAAnC,CAAP,EAL5B,EAMH,CAhXkB,OAkXnBa,UAlXmB,CAkXN,UAAM,CACf,MAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB,CAA+B,EAA/B,CACA,GAAMC,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,CAAE,WAAY,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAA/B,CADI,CAEfC,QAAQ,CAAE,gBAFK,CAGfC,SAAS,CAAE,gBAHI,CAIfC,WAAW,CAAE,oBAJE,CAKfH,QAAQ,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiBiC,QALZ,CAAnB,CAQA,MAAK/B,KAAL,CAAWhC,WAAX,CAAuB6D,UAAvB,EACH,CA7XkB,OA8XnBL,mBA9XmB,CA8XG,SAACd,SAAD,CAAYE,YAAZ,CAA6B,CAC/C,GAAIkB,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAIK,CAAAA,SAAS,CAAG,CACZC,aAAa,CAAE,gBADH,CAEZC,cAAc,CAAE,wBAFJ,CAGZC,eAAe,CAAE,oBAHL,CAIZC,eAAe,CAAE,MAAKvC,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAA5B,CAAmDC,kBAJxD,CAKZC,QAAQ,CAAE,8CALE,CAMZC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiBiC,QAA7B,CANN,CAAhB,CAQAD,SAAS,CAAC,eAAD,CAAT,CAA6B,MAAK9B,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAAzD,CACAX,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAAzC,CAGA,GAAMF,CAAAA,UAAU,CAAG,CACfI,SAAS,CAAE,gBADI,CAEfD,QAAQ,CAAE,gBAFK,CAGfF,SAAS,CAAEA,SAHI,CAIfpB,SAAS,CAAE,QAJI,CAIMyB,SAAS,CAATA,SAJN,CAIiBT,SAAS,CAAE,MAAKA,SAJjC,CAAnB,CAMA,GAAMc,CAAAA,UAAU,CAAG,MAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAApC,CACA,GAAIpD,SAAS,CAAC,MAAKY,KAAL,CAAWF,KAAX,CAAiBgD,qBAAlB,CAAyC,MAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAnE,CAA8EnC,YAA9E,CAAb,CAA0G,CACtG,GAAMN,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfuB,IAAI,CAAE,CACFO,SAAS,CAAE,IADT,CACeiC,UAAU,CAAE,CAAEnB,UAAU,CAAVA,UAAF,CAAcW,UAAU,CAAVA,UAAd,CAD3B,CAEFpC,SAAS,CAAE,IAFT,CAEeO,UAAU,CAAE,gBAF3B,CAE6CD,SAAS,CAAE,QAFxD,CAGFuB,SAAS,CAAE,gBAHT,CAIFD,QAAQ,CAAE,gBAJR,CAFS,CAAnB,CASA,MAAKhC,KAAL,CAAWxB,WAAX,CAAuB8B,UAAvB,EACH,CAXD,IAYK,CACD,MAAKN,KAAL,CAAW/B,UAAX,CAAsB4D,UAAtB,CAAkCW,UAAlC,CAA8C,WAA9C,EACH,CACJ,CAnakB,OAoanBS,WApamB,CAoaL,SAACC,QAAD,CAAWC,OAAX,CAAuB,CAEjC;AAGA,GAAIC,CAAAA,SAAS,CAAGC,SAAhB,CACA,GAAI3C,CAAAA,SAAS,CAAG,MAAKV,KAAL,CAAWF,KAAX,CAAiBY,SAAjC,CACA,GAAIoB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAId,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAIR,CAAAA,IAAI,CAAG,EAAX,CACA,GAAI8C,CAAAA,CAAC,CAAG,CAAR,CACA,GAAInB,CAAAA,SAAS,CAAGkB,SAAhB,CAEA,GAAI,MAAKxD,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,GAAgD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA5C,GAAsDnC,SAAS,CAAC8D,MAAhH,EACG,MAAK1D,KAAL,CAAWoB,aAAX,GAA6B,KADpC,CAC2C,CAEvC,GAAK,MAAKpB,KAAL,CAAWY,cAAX,CAA0B,cAA1B,EAA0C+C,MAA1C,GAAqD,MAAK3D,KAAL,CAAWY,cAAX,CAA0B,WAA1B,EAAuC+C,MAA7F,EACC,MAAK3D,KAAL,CAAWY,cAAX,CAA0B,cAA1B,EAA0C+C,MAA1C,GAAqD,MAAK3D,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA2C+C,MADrG,CAC8G,CAE1G3F,KAAK,CAAC4F,IAAN,CAAW,MAAKzD,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,8BAAN,CAA9B,CAAX,EACA,OACH,CACD,GAAK,MAAK1B,KAAL,CAAWY,cAAX,CAA0B,WAA1B,EAAuC+C,MAAvC,GAAkD,MAAK3D,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA2C+C,MAAlG,CAA2G,CACvG3F,KAAK,CAAC4F,IAAN,CAAW,MAAKzD,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,8BAAN,CAA9B,CAAX,EACA,OACH,CACJ,CACD,MAAKrB,QAAL,CAAc,CAAEe,aAAa,CAAE,IAAjB,CAAd,EAEA,GAAI,MAAKpB,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,IAAgD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA5C,GAAsDnC,SAAS,CAACiE,QAAhE,EAC7C,MAAK7D,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA5C,GAAsDnC,SAAS,CAACkE,KADnE,CAAJ,CAC+E,CAE3ExB,SAAS,CAAG,CAAEC,aAAa,CAAE,gBAAjB,CAAmCC,cAAc,CAAE,wBAAnD,CAA6EC,eAAe,CAAE,oBAA9F,CAAZ,CACAR,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAAzC,CAEAD,SAAS,CAAC,eAAD,CAAT,CAA6B,CAAE,YAAa,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0B6B,eAAzC,CAA7B,CACA9B,SAAS,CAAC,eAAD,CAAT,CAA2B,oBAA3B,EAAmD,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,EAAkD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,CAAlD,CAAoG,EAAvJ,CACAqB,SAAS,CAAC,eAAD,CAAT,CAA2B,YAA3B,EAA2C,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA6C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA2CmB,KAAxF,CAAgG,CAAC,CAA5I,CACAE,SAAS,CAAC,eAAD,CAAT,CAA2B,gBAA3B,EAA+C,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA8C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA1F,CAAkG,CAAC,CAAlJ,CACA,GAAIlB,SAAS,GAAK,QAAlB,CAA4B,CACxBoB,SAAS,CAAC,eAAD,CAAT,CAA2B,oBAA3B,EAAmD,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,EAAkD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,CAAlD,CAAoG,CAAC,CAAxJ,CACH,CAED,MAAKT,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,CAA+BC,OAA/B,CAAuC,SAAAC,IAAI,CAAI,CAC3C,GAAIA,IAAI,CAACC,kBAAL,GAA4B,OAAhC,CAAyC,CACrCxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0B,OAA1B,EAAmC0D,IAAnC,CAAwCC,KAFlH,CAAV,EAIH,CALD,IAMK,IAAIL,IAAI,CAACC,kBAAL,GAA4B,WAAhC,CAA6C,CAC9CxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0B,WAA1B,EAAuC0D,IAAvC,CAA4CC,KAFtH,CAAV,EAIH,CACJ,CAbD,EAeAtC,SAAS,CAAC,sBAAD,CAAT,CAAoCtB,IAApC,CAEA,GAAMqB,CAAAA,UAAU,CAAG,CACfG,QAAQ,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,QADvB,CAEf;AACAC,SAAS,CAAE,gBAHI,CAIfC,WAAW,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAJ1B,CAKfJ,SAAS,CAAEA,SALI,CAMfpB,SAAS,CAAEA,SANI,CAMOwC,QAAQ,CAARA,QANP,CAMiBC,OAAO,CAAPA,OANjB,CAM0BC,SAAS,CAATA,SAN1B,CAMqCpC,UAAU,CAAVA,UANrC,CAOfmB,SAAS,CAATA,SAPe,CAOJT,SAAS,CAAE,MAAKA,SAPZ,CAAnB,CASA,GAAItC,SAAS,CAAC,MAAKY,KAAL,CAAWF,KAAX,CAAiBgD,qBAAlB,CAAyC,MAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAnE,CAA8E,MAAK/C,KAAL,CAAWF,KAAX,CAAiBc,YAA/F,CAAb,CAA2H,CACvH,GAAMN,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfuB,IAAI,CAAE,CACFO,SAAS,CAAE,IADT,CACeiC,UAAU,CAAE,CAAEnB,UAAU,CAAVA,UAAF,CAAcW,UAAU,CAAE,MAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAA3C,CAD3B,CAEFpC,SAAS,CAAE,IAFT,CAEeO,UAAU,CAAE,MAAKX,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAKvB,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAAlC,CAA9B,CAF3B,CAGFxB,SAAS,CAAE,MAAKV,KAAL,CAAWF,KAAX,CAAiBY,SAH1B,CAFS,CAAnB,CAQA,MAAKV,KAAL,CAAWxB,WAAX,CAAuB8B,UAAvB,EACH,CAVD,IAWK,CACD,MAAKN,KAAL,CAAW/B,UAAX,CAAsB4D,UAAtB,CAAkC,MAAK7B,KAAL,CAAWF,KAAX,CAAiB0C,UAAnD,CAA+D,WAA/D,EACH,CACD,MAAKtC,QAAL,CAAc,CAAEe,aAAa,CAAE,KAAjB,CAAd,EACH,CAvDD,IAwDK,IAAI,MAAKpB,KAAL,CAAWoB,aAAX,GAA6B,IAAjC,CAAuC,CAExCkB,SAAS,CAAG,CAAEC,aAAa,CAAE,gBAAjB,CAAmCC,cAAc,CAAE,wBAAnD,CAA6EC,eAAe,CAAE,oBAA9F,CAAZ,CACAR,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAAzC,CAEAD,SAAS,CAAC,eAAD,CAAT,CAA6B,CAAE,YAAa,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0B6B,eAAzC,CAA7B,CACA9B,SAAS,CAAC,eAAD,CAAT,CAA2B,oBAA3B,EAAmD,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,EAAkD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,CAAlD,CAAoG,EAAvJ,CACAqB,SAAS,CAAC,eAAD,CAAT,CAA2B,YAA3B,EAA2C,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA6C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,eAA1B,EAA2CmB,KAAxF,CAAgG,CAAC,CAA5I,CACAE,SAAS,CAAC,eAAD,CAAT,CAA2B,gBAA3B,EAA+C,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA8C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA1F,CAAkG,CAAC,CAAlJ,CACA,GAAIlB,SAAS,GAAK,QAAlB,CAA4B,CACxBoB,SAAS,CAAC,eAAD,CAAT,CAA2B,oBAA3B,EAAmD,MAAKjC,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,EAAkD,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,oBAA1B,CAAlD,CAAoG,CAAC,CAAxJ,CACH,CACD,GAAI,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,GAA+C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,gBAA1B,EAA4CmB,KAA5C,GAAsDnC,SAAS,CAAC8D,MAAnH,CAA2H,CAEvHD,CAAC,GACD,MAAKtD,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,CAA+BC,OAA/B,CAAuC,SAAAC,IAAI,CAAI,CAE3C,GAAIA,IAAI,CAACC,kBAAL,GAA4B,QAAhC,CAA0C,CACtCxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0B,aAA1B,EAAyC0D,IAAzC,CAA8CC,KAFxH,CAAV,EAIH,CALD,IAMK,IAAIL,IAAI,CAACC,kBAAL,GAA4B,aAAhC,CAA+C,CAChDxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0B,aAA1B,EAAyC0D,IAAzC,CAA8CC,KAFxH,CAAV,EAIH,CACJ,CAdD,EAgBA,MAAKvE,KAAL,CAAWY,cAAX,CAA0B,aAA1B,GAA4C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,aAA1B,EAAyC4D,GAAzC,CAA6C,SAAAF,IAAI,CAAI,CAC7Fb,CAAC,GACD,MAAKtD,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,CAA+BC,OAA/B,CAAuC,SAAAC,IAAI,CAAI,CAC3C,GAAIA,IAAI,CAACC,kBAAL,GAA4B,QAAhC,CAA0C,CACtCxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmBa,IAAI,CAACA,IAAL,CAAUC,KAFpF,CAAV,EAIH,CALD,IAMK,IAAIL,IAAI,CAACC,kBAAL,GAA4B,aAAhC,CAA+C,CAChDxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmBa,IAAI,CAACA,IAAL,CAAUC,KAFpF,CAAV,EAIH,CALI,IAMA,IAAIL,IAAI,CAACC,kBAAL,GAA4B,UAAhC,CAA4C,CAC7CxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmBa,IAAI,CAACA,IAAL,CAAUG,KAFpF,CAAV,EAIH,CACJ,CAnBD,EAoBA,MAAO,KAAP,CACH,CAvB2C,CAA5C,CAyBH,CA5CD,IA6CK,CAEDhB,CAAC,GACD,MAAKtD,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,CAA+BU,MAA/B,CAAsC,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACR,kBAAN,GAA6B,cAAxC,EAAtC,EAA8FF,OAA9F,CAAsG,SAAAC,IAAI,CAAI,CAC1GvD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0B,cAA1B,EAA0C0D,IAA1C,CAA+CC,KAFzH,CAAV,EAIH,CALD,EAOA,MAAKvE,KAAL,CAAWY,cAAX,CAA0B,WAA1B,GAA0C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,WAA1B,EAAuCqD,OAAvC,CAA+C,SAACK,IAAD,CAAOM,KAAP,CAAiB,CACtGnB,CAAC,GACD,MAAKtD,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,CAA+BU,MAA/B,CAAsC,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACR,kBAAN,GAA6B,cAAxC,EAAtC,EAA8FF,OAA9F,CAAsG,SAAAC,IAAI,CAAI,CAC1G,GAAIA,IAAI,CAACC,kBAAL,GAA4B,WAAhC,CAA6C,CACzCxD,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmBa,IAAI,CAACA,IAAL,CAAUG,KAFpF,CAAV,EAIH,CALD,IAMK,CACD9D,IAAI,CAACyD,IAAL,CAAU,CACN,qBAAsB,CADhB,CAEN,qBAAsBF,IAAI,CAACG,kBAFrB,CAEyC,UAAWZ,CAFpD,CAEuD,kBAAmB,MAAKzD,KAAL,CAAWY,cAAX,CAA0BsD,IAAI,CAACC,kBAA/B,EAAmDS,KAAnD,EAA0DN,IAA1D,CAA+DC,KAFzI,CAAV,EAIH,CACJ,CAbD,EAcH,CAhByC,CAA1C,CAiBH,CACDtC,SAAS,CAAC,sBAAD,CAAT,CAAoCtB,IAApC,CAEA,GAAMqB,CAAAA,WAAU,CAAG,CACfG,QAAQ,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,QADvB,CAEfC,SAAS,CAAE,gBAFI,CAEa;AAC5BC,WAAW,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAH1B,CAIfJ,SAAS,CAAEA,SAJI,CAKfpB,SAAS,CAAEA,SALI,CAKOwC,QAAQ,CAARA,QALP,CAKiBC,OAAO,CAAPA,OALjB,CAK0BC,SAAS,CAATA,SAL1B,CAKqCpC,UAAU,CAAVA,UALrC,CAMfmB,SAAS,CAATA,SANe,CAMJT,SAAS,CAAE,MAAKA,SANZ,CAAnB,CAQA,GAAItC,SAAS,CAAC,MAAKY,KAAL,CAAWF,KAAX,CAAiBgD,qBAAlB,CAAyC,MAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAnE,CAA8E,MAAK/C,KAAL,CAAWF,KAAX,CAAiBc,YAA/F,CAAb,CAA2H,CACvH,GAAMN,CAAAA,WAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfuB,IAAI,CAAE,CACFO,SAAS,CAAE,IADT,CACeiC,UAAU,CAAE,CAAEnB,UAAU,CAAVA,WAAF,CAAcW,UAAU,CAAE,MAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAA3C,CAD3B,CAEFpC,SAAS,CAAE,IAFT,CAEeO,UAAU,CAAE,MAAKX,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAKvB,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAAlC,CAA9B,CAF3B,CAGFxB,SAAS,CAAE,MAAKV,KAAL,CAAWF,KAAX,CAAiBY,SAH1B,CAFS,CAAnB,CAQA,MAAKV,KAAL,CAAWxB,WAAX,CAAuB8B,WAAvB,EACH,CAVD,IAWK,CACD,MAAKN,KAAL,CAAW/B,UAAX,CAAsB4D,WAAtB,CAAkC,MAAK7B,KAAL,CAAWF,KAAX,CAAiB0C,UAAnD,CAA+D,WAA/D,EACH,CACD,MAAKtC,QAAL,CAAc,CAAEe,aAAa,CAAE,KAAjB,CAAd,EACH,CACJ,CAxmBkB,OA0mBnByD,eA1mBmB,CA0mBD,UAAM,CACpB,MAAK1E,KAAL,CAAW5B,kBAAX,CAA8B,MAAKyB,KAAL,CAAW8E,YAAzC,CAAuD,MAAK9E,KAAL,CAAW+E,aAAlE,CAAiF,MAAK5E,KAAL,CAAWF,KAAX,CAAiBiC,QAAlG,EACH,CA5mBkB,OA8mBnB8C,YA9mBmB,CA8mBJ,SAACV,IAAD,CAAOW,SAAP,CAAkBC,QAAlB,CAA+B,CAE1C,GAAIZ,IAAI,GAAK,IAAb,CAAmB,CACf,GAAM1D,CAAAA,cAAc,CAAG,MAAKZ,KAAL,CAAWY,cAAX,EAA6B,EAApD,CACA,GAAIuE,CAAAA,cAAc,CAAG,MAAKnF,KAAL,CAAWmF,cAAX,EAA6B,EAAlD,CACA,GAAIC,CAAAA,cAAc,CAAG,MAAKpF,KAAL,CAAWoF,cAAX,EAA6B,EAAlD,CAEA,GAAIH,SAAS,GAAK,gBAAlB,CAAoC,CAChCrE,cAAc,CAACqE,SAAD,CAAd,CAA4BX,IAA5B,CACA1D,cAAc,CAACyE,aAAf,CAA+B,EAA/B,CACA,MAAKlF,KAAL,CAAW7B,sBAAX,CAAkCgG,IAAI,CAACvC,KAAvC,CAA8CnB,cAA9C,CAA8D,MAAKT,KAAL,CAAWF,KAAX,CAAiBiC,QAA/E,EACH;AACA,CALD,IAMK,IAAI+C,SAAS,GAAK,eAAlB,CAAmC,CACpCrE,cAAc,CAACqE,SAAD,CAAd,CAA4BX,IAA5B,CACA,MAAKnE,KAAL,CAAW5B,kBAAX,CAA8B+F,IAAI,CAACvC,KAAnC,CAA0CnB,cAAc,CAAC,gBAAD,CAAd,CAAiCmB,KAA3E,CAAkF,MAAK5B,KAAL,CAAWF,KAAX,CAAiBiC,QAAnG,CAA6GtB,cAA7G,EAEH,CAJI,IAKA,CACDA,cAAc,CAACqE,SAAD,CAAd,CAA4BX,IAA5B,CACH,CACD,GAAIY,QAAQ,GAAK,WAAjB,CAA8B,CAE1B,GAAII,CAAAA,WAAW,oBAAO,MAAKtF,KAAL,CAAWsF,WAAlB,CAAf,CACA;AACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAI,MAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,EAA+B,MAAKtF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAA/D,CAA+E,CAC5E;AAEC,GAAIvE,cAAc,CAAC,gBAAD,CAAd,EAAqCA,cAAc,CAAC,gBAAD,CAAd,CAAiCmB,KAAjC,GAA2CnC,SAAS,CAACiE,QAArD,EAClCjD,cAAc,CAAC,gBAAD,CAAd,CAAiCmB,KAAjC,GAA2CnC,SAAS,CAACkE,KAD5D,CACoE,CAEhE,GAAIlD,cAAc,CAAC,aAAD,CAAd,EAAiC,CAACA,cAAc,CAAC,aAAD,CAAf,EAAgC+C,MAAhC,EAA0C,CAA/E,CAAkF,CAE9E6B,QAAQ,CAAG,MAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAA5B,CAA2CV,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC1D,cAAc,CAAC,aAAD,CAAd,CAA8BmB,KAA/B,EAAsC2D,QAAtC,CAA+CpB,IAAI,CAACvC,KAApD,CAAL,EAAtD,CAAX,CACH,CAHD,IAIK,CACDyD,QAAQ,CAAG,MAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAAvC,CACH,CAED,GAAIxE,cAAc,CAAC,aAAD,CAAd,EAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8B+C,MAA9B,EAAwC,CAA7E,CAAgF,CAE5E4B,QAAQ,CAAG,MAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAA5B,CAA2CT,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC1D,cAAc,CAAC,aAAD,CAAd,CAA8B+E,IAA9B,CAAmC,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAAC7D,KAAV,GAAoBuC,IAAI,CAACvC,KAA7B,EAA5C,CAAL,EAAtD,CAAX,CACH,CAHD,IAIK,CACDwD,QAAQ,CAAG,MAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAAvC,CACH,CACD,GAAID,QAAQ,GAAK,QAAjB,CAA2B,CACvBI,WAAW,CAAC,CAAD,CAAX,CAAeO,MAAf,CAAwBvB,IAAxB,CACH,CAFD,IAGK,IAAIY,QAAQ,GAAK,QAAb,EAAyBA,QAAQ,GAAK,WAA1C,CAAuD,CACxDI,WAAW,CAAC,CAAD,CAAX,CAAeQ,MAAf,CAAwBxB,IAAxB,CACH,CACJ,CAxBD,IAyBK,CACD,GAAI1D,cAAc,CAAC,OAAD,CAAd,EAA2B,CAACA,cAAc,CAAC,OAAD,CAAf,EAA0B+C,MAA1B,EAAoC,CAAnE,CAAsE,CAElE6B,QAAQ,CAAG,MAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAA5B,CAA2CV,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC1D,cAAc,CAAC,OAAD,CAAd,CAAwBmB,KAAzB,EAAgC2D,QAAhC,CAAyCpB,IAAI,CAACvC,KAA9C,CAAL,EAAtD,CAAX,CACH,CAHD,IAIK,CACDyD,QAAQ,CAAG,MAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAAvC,CACH,CAED,GAAIxE,cAAc,CAAC,WAAD,CAAd,EAA+B,CAACA,cAAc,CAAC,WAAD,CAAf,EAA8B+C,MAA9B,EAAwC,CAA3E,CAA8E,CAE1E4B,QAAQ,CAAG,MAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAA5B,CAA2CT,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC1D,cAAc,CAAC,WAAD,CAAd,CAA4BmB,KAA7B,EAAoC2D,QAApC,CAA6CpB,IAAI,CAACvC,KAAlD,CAAL,EAAtD,CAAX,CACH,CAHD,IAIK,CACDwD,QAAQ,CAAG,MAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAAvC,CACH,CAEJ,CACJ,CAED,MAAK9E,QAAL,CAAc,CACVO,cAAc,CAAdA,cADU,CACMkE,YAAY,CAAER,IAAI,CAACvC,KADzB,CAEVgE,UAAU,CAAE,CAAEZ,cAAc,CAAEI,QAAlB,CAA4BH,cAAc,CAAEI,QAA5C,CAFF,CAGVL,cAAc,CAAdA,cAHU,CAGMC,cAAc,CAAdA,cAHN,CAAd,EAKH,CAEJ,CACJ,CAlsBkB,OAosBnBY,eApsBmB,CAosBD,SAACC,KAAD,CAAW,CACzB,GAAMrF,CAAAA,cAAc,CAAG,MAAKZ,KAAL,CAAWY,cAAX,EAA6B,EAApD,CACA,GAAIqF,KAAK,CAACC,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClC,GAAIF,KAAK,CAACC,MAAN,CAAaE,IAAb,GAAsB,OAA1B,CAAmC,CAC/BxF,cAAc,CAACqF,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,CAAoCH,KAAK,CAACC,MAAN,CAAaG,OAAb,GAAyB,IAAzB,CAAgC1G,iBAAiB,CAAC2G,GAAlD,CAAwD3G,iBAAiB,CAAC4G,EAA9G,CACH,CAFD,IAGK,CACD3F,cAAc,CAACqF,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,CAAoCH,KAAK,CAACC,MAAN,CAAaG,OAAb,GAAyB,IAAzB,CAAgC1G,iBAAiB,CAAC2G,GAAlD,CAAwD3G,iBAAiB,CAAC4G,EAA9G,CACH,CACJ,CAPD,IAQK,CACD3F,cAAc,CAACqF,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,CAAoCH,KAAK,CAACC,MAAN,CAAanE,KAAjD,CACH,CACD,MAAK1B,QAAL,CAAc,CAAEO,cAAc,CAAdA,cAAF,CAAd,EACH,CAltBkB,OAs2BnB4F,aAt2BmB,CAs2BH,UAAM,CAClB,GAAMxE,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,CACP,0CACO,MAAK9B,KAAL,CAAWF,KAAX,CAAiBiC,QADxB,MAEIuE,OAAO,CAAE,MAAKzG,KAAL,CAAWY,cAAX,CAA0B,eAA1B,CAFb,CAGI8F,WAAW,CAAC,MAAK1G,KAAL,CAAWY,cAAX,CAA0B,aAA1B,GAA4C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,aAA1B,EAAyCmB,KAHrG,CAII4E,iBAAiB,CAAC,MAAK3G,KAAL,CAAWY,cAAX,CAA0B,aAA1B,GAA4C,MAAKZ,KAAL,CAAWY,cAAX,CAA0B,aAA1B,EAAyCgG,KAJ3G,EADO,CAQPC,QAAQ,CAAE,MAAK7G,KAAL,CAAWY,cAAX,CAA0B,eAA1B,CARH,CADI,CAWfuC,UAAU,CAAE,MAAKhD,KAAL,CAAWF,KAAX,CAAiBkD,UAXd,CAAnB,CAaA,MAAKhD,KAAL,CAAWvB,uBAAX,CAAmCoD,UAAnC,CAA+C,WAA/C,EACH,CAr3BkB,CAGf,MAAKsB,OAAL,CAAe9F,KAAK,CAACsJ,SAAN,EAAf,CACA,MAAKC,mBAAL,CAA2B,EAA3B,CACA,MAAKC,cAAL,CAAsB,EAAtB,CAGA,GAAMzD,CAAAA,UAAS,CAAG,CACd0D,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,EAFQ,CAAlB,CAIA,MAAKlH,KAAL,CAAa,CACTW,IAAI,CAAE,EADG,CACCwG,YAAY,CAAE,EADf,CACmBC,KAAK,CAAE,EAD1B,CAC8BxG,cAAc,CAAE,EAD9C,CAETyG,UAAU,CAAE,EAFH,CAGT9D,SAAS,CAAEA,UAHF,CAIT+D,MAAM,CAAE,KAJC,CAIMC,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAJlB,CAI6BvE,qBAAqB,CAAE,EAJpD,CAKT6B,YAAY,CAAE,CALL,CAKQC,aAAa,CAAE,CALvB,CAK0BO,WAAW,CAAE,CAAC,CAAEO,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,EAAtB,CAA0B2B,UAAU,CAAE,EAAtC,CAAD,CALvC,CAMTrG,aAAa,CAAE,KANN,CAOTsG,kBAAkB,CAAE,KAPX,CAOkBC,KAAK,CAAE,CAAEC,CAAC,CAAE,KAAL,CAAYC,CAAC,CAAE,KAAf,CAAsBC,CAAC,CAAE,IAAzB,CAA+BC,CAAC,CAAE,GAAlC,CAPzB,CAQTC,iBAAiB,CAAE,EARV,CAQcC,cAAc,CAAE,EAR9B,CASTlC,UAAU,CAAE,EATH,CASOZ,cAAc,CAAE,EATvB,CAS2BC,cAAc,CAAE,EAT3C,CAUT9E,WAAW,CAAE,KAVJ,CAAb,CAYA,MAAKuB,SAAL,CAAiBrE,KAAK,CAACsJ,SAAN,EAAjB,CAEA,MAAKxF,cAAL,CAAsB,GAAIpC,CAAAA,cAAJ,EAAtB,CA1Be,aA4BlB,C,iDA8DD,iBAAS,iBAEL,GAAIuD,CAAAA,eAAe,CAAG,oBAAtB,CAEA,GAAMyF,CAAAA,KAAK,CAAG,KAAK/H,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAWuH,UAAX,CAAsBY,GAAtB,CAA0B,MAAMC,MAAN,CAAa,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAAzC,CAA1B,CAA/B,EACP,KAAKpC,KAAL,CAAWuH,UAAX,CAAsBc,GAAtB,CAA0B,MAAMD,MAAN,CAAa,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAAzC,CAA1B,EAA+EkG,YADtF,CAGA,GAAMC,CAAAA,MAAM,CAAG,KAAKpI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAWuH,UAAX,CAAsBY,GAAtB,CAA0B,OAAOC,MAAP,CAAc,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAA1C,CAA1B,CAA/B,EACR,KAAKpC,KAAL,CAAWuH,UAAX,CAAsBc,GAAtB,CAA0B,OAAOD,MAAP,CAAc,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAA1C,CAA1B,EAAgFkG,YADvF,CAGA,GAAME,CAAAA,QAAQ,CAAG,KAAKrI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAWuH,UAAX,CAAsBY,GAAtB,CAA0B,SAASC,MAAT,CAAgB,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAA5C,CAA1B,CAA/B,EACV,KAAKpC,KAAL,CAAWuH,UAAX,CAAsBc,GAAtB,CAA0B,SAASD,MAAT,CAAgB,KAAKjI,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BI,SAA5C,CAA1B,EAAkFkG,YADzF,CAIA,GAAMG,CAAAA,gBAAgB,CAAG,CACrB3H,UAAU,CAAE,KAAKX,KAAL,CAAWF,KAAX,CAAiBa,UADR,CACoB2B,eAAe,CAAfA,eADpB,CACqCe,SAAS,CAATA,SADrC,CACgD3C,SAAS,CAAE,QAD3D,CAErBmB,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiB+B,UAFR,CAEoBE,QAAQ,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiBiC,QAF/C,CAEyDnB,YAAY,CAAEmH,KAFvE,CAAzB,CAIA,GAAMQ,CAAAA,SAAS,CAAG,CACd5H,UAAU,CAAE,KAAKX,KAAL,CAAWF,KAAX,CAAiBa,UADf,CAC2B2B,eAAe,CAAE,oBAD5C,CACkE5B,SAAS,CAAE,QAD7E,CAEdmB,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiB+B,UAFf,CAE2BW,UAAU,CAAE,KAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAFxD,CAEoET,QAAQ,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiBiC,QAF/F,CAEyGnB,YAAY,CAAEwH,MAFvH,CAAlB,CAIA;AAEA,GAAMI,CAAAA,WAAW,CAAG,CAChBpG,aAAa,CAAE,gBADC,CACiBC,cAAc,CAAE,wBADjC,CAC2DC,eAAe,CAAE,oBAD5E,CAEjB;AACCK,QAAQ,CAAE,kCAHM,CAIhBC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,KAAK7C,KAAL,CAAWF,KAAX,CAAiBiC,QAA7B,CAJF,CAKhBS,UAAU,CAAE,KAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UALb,CAMhBiG,eAAe,CAAE,CAAC,oBAAD,CAAuB,YAAvB,CAAqC,eAArC,CAND,CAApB,CAQA;AAEA,KAAK7B,mBAAL,CAA2B,CACvB,CAAE,UAAW,mBAAb,CAAkC,YAAa,oBAA/C,CAAqE,QAAS,OAA9E,CADuB,CAEvB,CAAE,UAAW,eAAb,CAA8B,YAAa,sBAA3C,CAAmE,QAAS,OAA5E,CAFuB,CAGvB,CAAE,UAAW,gBAAb,CAA+B,YAAa,YAA5C,CAA0D,QAAS,OAAnE,CAHuB,CAIvB,CAAE,UAAW,uBAAb,CAAsC,YAAa,eAAnD,CAAoE,QAAS,OAA7E,CAJuB,CAKvB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CALuB,CAMvB,CAAE,UAAW,UAAb,CAAyB,YAAa,OAAtC,CAA+C,QAAS,OAAxD,CANuB,CAA3B,CAQA,KAAKC,cAAL,CAAsB,CAClB,CAAE,UAAW,gBAAb,CAA+B,YAAa,YAA5C,CAA0D,QAAS,OAAnE,CADkB,CAElB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CAFkB,CAGlB,CAAE,UAAW,eAAb,CAA8B,YAAa,sBAA3C,CAAmE,QAAS,OAA5E,CAHkB,CAAtB,CAKA,GAAM6B,CAAAA,eAAe,CAAG,EAAxB,CAEAA,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,uBAAb,CAAsC,YAAa,oBAAnD,CAA2E,iBAAiB,WAA5F,CAAyG,cAAe,SAAxH,CAArB,EACAyE,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,eAAb,CAA8B,YAAa,gBAA3C,CAA8D,iBAAiB,YAA/E,CAA6F,cAAe,WAA5G,CAArB,EACAyE,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,WAAb,CAA0B,YAAa,eAAvC,CAAyD,iBAAiB,YAA1E,CAAwF,cAAe,WAAvG,CAArB,EAEA,GAAM0E,CAAAA,SAAS,CAAG,KAAK3I,KAAL,CAAWF,KAAX,CAAiB+D,aAAjB,EAAkC,EAApD,CACA8E,SAAS,CAAC7E,OAAV,CAAkB,SAAAK,IAAI,CAAI,CACtB,GAAIA,IAAI,CAACH,kBAAL,GAA4B,OAAhC,CAAyC,CACrC0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,oBAAb,CAAmC,YAAaE,IAAI,CAACH,kBAArD,CAA0E,iBAAiB,YAA3F,CAAyG,cAAe,WAAxH,CAArB,EACH,CAFD,IAGK,IAAIG,IAAI,CAACH,kBAAL,GAA4B,WAAhC,CAA6C,CAC9C0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,gBAAb,CAA+B,YAAaE,IAAI,CAACH,kBAAjD,CAAsE,iBAAiB,YAAvF,CAAqG,cAAe,WAApH,CAArB,EACH,CAFI,IAGA,IAAIG,IAAI,CAACH,kBAAL,GAA4B,QAAhC,CAA0C,CAC3C0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,aAAb,CAA4B,YAAa,aAAzC,CAAyD,iBAAiB,YAA1E,CAAwF,cAAe,WAAvG,CAArB,EACH,CAFI,IAGA,IAAIE,IAAI,CAACH,kBAAL,GAA4B,QAAhC,CAA0C,CAC3C0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,aAAb,CAA4B,YAAa,aAAzC,CAAyD,iBAAiB,YAA1E,CAAwF,cAAe,WAAvG,CAArB,EACH,CAFI,IAGA,IAAIE,IAAI,CAACH,kBAAL,GAA4B,cAAhC,CAAgD,CACjD0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,aAAb,CAA4B,YAAaE,IAAI,CAACH,kBAA9C,CAAmE,iBAAiB,YAApF,CAAkG,cAAe,WAAjH,CAArB,EACH,CAFI,IAGA,IAAIG,IAAI,CAACH,kBAAL,GAA4B,cAAhC,CAAgD,CACjD0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,aAAb,CAA4B,YAAaE,IAAI,CAACH,kBAA9C,CAAmE,iBAAiB,YAApF,CAAkG,cAAe,WAAjH,CAArB,EACH,CAFI,IAGA,IAAIG,IAAI,CAACH,kBAAL,GAA4B,WAAhC,CAA6C,CAC9C0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,eAAb,CAA8B,YAAaE,IAAI,CAACH,kBAAhD,CAAqE,iBAAiB,YAAtF,CAAoG,cAAe,WAAnH,CAArB,EACH,CAFI,IAGA,IAAIG,IAAI,CAACH,kBAAL,GAA4B,eAAhC,CAAiD,CAClD0E,eAAe,CAACzE,IAAhB,CAAqB,CAAE,UAAW,oBAAb,CAAmC,YAAaE,IAAI,CAACH,kBAArD,CAA2E,iBAAiB,YAA5F,CAA0G,cAAe,WAAzH,CAArB,EACH,CACJ,CAzBD,EA2BL;AACK,mBACI,qDACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,WAAK,CAAC,KAAKnE,KAAL,CAAWM,WAAZ,CAA0B,GAA1B,CAAgC,GAArC,CAAP,eACI,4BAAM,OAAO,CAAG,yBAAI,CAAA,MAAI,CAACD,QAAL,CAAc,CAACC,WAAW,CAAC,CAAC,MAAI,CAACN,KAAL,CAAWM,WAAzB,CAAd,CAAJ,EAAhB,CAA0E,SAAS,CAAC,kBAApF,EACK,CAAC,KAAKN,KAAL,CAAWM,WAAZ,cACG,yBAAG,KAAK,CAAC,iBAAT,EADH,cAEG,yBAAG,KAAK,CAAC,oBAAT,EAHR,CADJ,cAOI,oBAAC,UAAW;AAAZ,EACI,aAAa,CAAE,KAAKH,KAAL,CAAWqB,IAAX,CAAgBC,aADnC,CAEI,UAAU,CAAE,KAAKtB,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CAFhB,CAGI,UAAU,CAAE,KAAKvB,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,EAA+B,EAH/C,CAII,QAAQ,CAAE,KAAKxC,KAAL,CAAWF,KAAX,CAAiBiC,QAJ/B,CAKI,UAAU,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BoG,YAA5B,EAA4C,KAAK5I,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BzC,cALxF,CAMI,eAAe,CAAE,yBAACA,eAAD,QAAoB,CAAA,MAAI,CAACC,KAAL,CAAW1B,4BAAX,CAAwCyB,eAAxC,CAAwD,MAAI,CAACC,KAAL,CAAWF,KAAX,CAAiBiC,QAAzE,CAAmF,MAAI,CAAC/B,KAAL,CAAWF,KAAX,CAAiB0C,UAApG,CAApB,EANrB,CAOI,cAAc,CAAE,KAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAPhD,CAQI,eAAe,CAAC,oBARpB,CASI,SAAS,CAAC,oBATd,CAUI,UAAU,CAAC,YACX;AACA;AAZJ,CAaI,gBAAgB,CAAE,KAAKzC,KAAL,CAAWtB,gBAbjC,CAcI,WAAW,CAAE8J,WAdjB,CAeI,qBAAqB,CAAE,KAAK3I,KAAL,CAAWiD,qBAftC,CAgBI,KAAK,CAAEiF,KAhBX,CAiBI,SAAS,CAAE,KAAKrG,SAjBpB,CAkBI,UAAU,CAAE,KAAKD,UAlBrB,CAmBI,UAAU,CAAE,IAnBhB,CAoBI,SAAS,CAAE,2BAAM,CAAA,MAAI,CAACzB,KAAL,CAAW9B,wBAAX,CAAoCoK,gBAApC,CAAsD,MAAI,CAACtI,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAAlF,CAAN,EACf;AArBA,EAPJ,CADJ,cAgCI,oBAAC,GAAD,EAAK,EAAE,WAAK,CAAC,KAAK5C,KAAL,CAAWM,WAAZ,CAA0B,GAA1B,CAAgC,IAArC,CAAP,eACI,oBAAC,WAAD,EAAa,SAAS,CAAC,oBAAvB,EACK,KAAKH,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BzC,cAA5B,EAA8C,KAAKC,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BzC,cAA5B,CAA2CyD,MAA3C,CAAoD,CAAlG,EAAuG,KAAKxD,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAAnI,cACG,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,eACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,EAA4C,KAAKzC,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAA5B,CAAmDoG,kBAA/F,CADJ,cAEI,oBAAC,YAAD,EAAc,SAAS,CAAC,yBAAxB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,EACC,KAAK7I,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BC,sBAA5B,CAAmDqG,aADpD,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,2BAAM,SAAS,CAAC,yBAAhB,CAA0C,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAjD,eAEI,oBAAC,WAAD,EAAa,SAAS,CAAC,+BAAvB,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,mCAApB,CAAwD,IAAI,CAAC,GAA7D,CACI,MAAM,CAAE,KAAKlJ,KAAL,CAAWiD,qBAAX,CAAiCkG,OAAjC,CAAyCZ,MAAzC,IAAqD,CAAC,CACjE;AAFD,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACpI,KAAL,CAAW9B,wBAAX,CAAoCqK,SAApC,CAAN,EAHb,CAKI,WAAU,KAAKvI,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CALd,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAE5D,WAAvB,CAAoC,SAAS,CAAC,iBAA9C,EANJ,CADJ,cAUI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,qBAAf,CAAqC,SAAS,CAAC,kCAA/C,CACQ,MAAM,CAAE,KAAKkC,KAAL,CAAWiD,qBAAX,CAAiCkG,OAAjC,CAAyCX,QAAzC,IAAuD,CAAC,CADxE,CAEQ,WAAU,KAAKrI,KAAL,CAAWqB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CACX;AAHP,CAIQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACL,aAAL,CAAoBmH,QAApB,CAAN,EAJjB,eAMQ,oBAAC,eAAD,EAAiB,IAAI,CAAEzK,UAAvB,EANR,CAVJ,CAFJ,CADJ,CAJJ,CAFJ,CADJ,cAgDI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,qBAAD,EACI,SAAS,CAAE,KAAKoC,KAAL,CAAWF,KAAX,CAAiBY,SADhC,CAEI,UAAU,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiB+B,UAFjC,CAGI,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiBa,UAHjC,CAII,QAAQ,CAAE,KAAKX,KAAL,CAAWF,KAAX,CAAiBiC,QAJ/B,CAKI,UAAU,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiB0C,UALjC,CAMI,UAAU,CAAE,KAAKxC,KAAL,CAAW/B,UAN3B,CAOI,SAAS,CAAE,KAAK+B,KAAL,CAAWF,KAAX,CAAiBmJ,SAPhC,CAQI,YAAY,CAAE,KAAKjJ,KAAL,CAAWF,KAAX,CAAiBkH,YARnC,CASI,cAAc,CAAE,KAAKhH,KAAL,CAAWF,KAAX,CAAiBoJ,cATrC,CAUI,WAAW,CAAE,KAAKlJ,KAAL,CAAWxB,WAV5B,CAWI,cAAc,CAAE,KAAKwB,KAAL,CAAWF,KAAX,CAAiBW,cAXrC,CAYI,YAAY,CAAE,KAAKT,KAAL,CAAWF,KAAX,CAAiBc,YAZnC,CAaI,qBAAqB,CAAE,KAAKf,KAAL,CAAWiD,qBAbtC,CAcI,WAAW,CAAE,KAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,qBAdlC,CAeI,UAAU,CAAE,KAAK9C,KAAL,CAAWF,KAAX,CAAiBkD,UAfjC,CAgBI,uBAAuB,CAAE,KAAKhD,KAAL,CAAWvB,uBAhBxC,CAiBI,SAAS,CAAE,KAAKuB,KAAL,CAAWF,KAAX,CAAiBiB,SAjBhC,CAkBI,UAAU,CAAE,KAAKlB,KAAL,CAAWuH,UAlB3B,CAmBI,aAAa,CAAE,KAAKvH,KAAL,CAAWsJ,aAnB9B,CAoBI,UAAU,CAAE,KAAKnJ,KAAL,CAAWF,KAAX,CAAiBkB,UApBjC,CAqBI,gBAAgB,CAAE,KAAKhB,KAAL,CAAWF,KAAX,CAAiBsJ,gBAAjB,EAAqC,EArB3D,CAsBI,iBAAiB,CAAE,KAAKpJ,KAAL,CAAWF,KAAX,CAAiBuJ,iBAAjB,EAAsC,EAtB7D,CAuBI,4BAA4B,CAAE,KAAKrJ,KAAL,CAAWF,KAAX,CAAiBwJ,4BAAjB,EAAiD,EAvBnF,CAwBI,qBAAqB,CAAE,KAAKtJ,KAAL,CAAW3B,qBAxBtC,CAyBI,wCAAwC,CAAE,KAAK2B,KAAL,CAAWzB,wCAzBzD,CA0BI,mBAAmB,CAAE,KAAKyB,KAAL,CAAWF,KAAX,CAAiByJ,mBA1B1C,CA2BI,kBAAkB,CAAE,KAAKvJ,KAAL,CAAWF,KAAX,CAAiB0J,kBA3BzC,CA4BI,uCAAuC,CAAE,KAAKxJ,KAAL,CAAWrB,uCA5BxD,CA6BI,sCAAsC,CAAE,KAAKqB,KAAL,CAAWpB,sCA7BvD,CA8BI,0BAA0B,CAAE,KAAKoB,KAAL,CAAWyJ,0BA9B3C,CA+BI,iCAAiC,CAAE,KAAKzJ,KAAL,CAAWnB,iCA/BlD,CAiCI,cAAc,CAAG,KAAKgB,KAAL,CAAW6J,cAjChC,CAkCI,QAAQ,CAAE,KAAK7J,KAAL,CAAW8J,QAlCzB,CAmCI,eAAe,CAAE,KAAK9J,KAAL,CAAW+J,eAnChC,CAoCI,eAAe,CAAE,KAAK/J,KAAL,CAAWgK,eApChC,EADJ,CAhDJ,CADH,CAyFa,EA1FlB,CADJ,CAhCJ,CADJ,CADJ,CAkIK,KAAK7J,KAAL,CAAWF,KAAX,CAAiBM,SAAjB,eACG,oBAAC,aAAD,EAAe,IAAI,CAAE,KAAKJ,KAAL,CAAWF,KAAX,CAAiBM,SAAtC,CACI,UAAU,CAAE,KAAKU,UADrB,CAEI,SAAS,CAAE,KAAKd,KAAL,CAAWF,KAAX,CAAiBY,SAFhC,CAGI,UAAU,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiB+B,UAHjC,CAII,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiBa,UAJjC,CAKI,WAAW,CAAE,KAAKsC,WALtB,CAMI,KAAK,CAAE,KAAKjD,KAAL,CAAWF,KAAX,CAAiBiB,SAN5B,CAOI,aAAa,CAAE,KAAKsF,aAPxB,CAQI,YAAY,CAAE,KAAKrG,KAAL,CAAWF,KAAX,CAAiBkH,YARnC,CASI,WAAW,CAAE,KAAKhH,KAAL,CAAWxB,WAT5B,CAUI,cAAc,CAAE,KAAKqB,KAAL,CAAWY,cAAX,EAA6B,EAVjD,CAWI,eAAe,CAAEiI,eAXrB,CAYI,YAAY,CAAE,KAAK1I,KAAL,CAAWF,KAAX,CAAiBiB,SAAjB,cACV,oBAAC,KAAD,EAAO,SAAS,CAAE,KAAKf,KAAL,CAAWF,KAAX,CAAiBY,SAAnC,CACI,eAAe,CAAE,KAAKmF,eAD1B,CAEI,UAAU,CAAE,KAAK7F,KAAL,CAAWF,KAAX,CAAiB+B,UAFjC,CAGI,cAAc,CAAE,KAAKhC,KAAL,CAAWY,cAAX,EAA6B,EAHjD,EADU,CAOV,KAAKZ,KAAL,CAAWoB,aAAX,GAA6B,KAA7B,cACI,oBAAC,iBAAD,EACI,cAAc,CAAE,KAAKpB,KAAL,CAAWY,cAAX,EAA6B,EADjD,CAEI,eAAe,CAAE,KAAKoF,eAF1B,CAGI,YAAY,CAAE,KAAKhB,YAHvB,CAII,SAAS,CAAE,KAAK7E,KAAL,CAAWF,KAAX,CAAiBL,SAAjB,EAA8B,EAJ7C,CAKI,QAAQ,CAAE,KAAKO,KAAL,CAAWF,KAAX,CAAiBgK,QAAjB,EAA6B,EACvC;AACA;AAPJ,CAQI,kBAAkB,CAAE,KAAKpF,eAR7B,CASI,mBAAmB,CAAE,KAAKkC,mBAT9B,CAUI,aAAa,CAAE,KAAK5G,KAAL,CAAWF,KAAX,CAAiB+D,aAChC;AAXJ,CAYI,UAAU,CAAE,KAAKhE,KAAL,CAAW+F,UAAX,EAAyB,EAZzC,CAaI,KAAK,CAAE,KAAK5F,KAAL,CAAWF,KAAX,CAAiBsE,KAb5B,CAcI,SAAS,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiBY,SAdhC,CAeI,MAAM,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBiK,MAf7B,CAgBI,MAAM,CAAE,KAAK/J,KAAL,CAAWF,KAAX,CAAiBkK,MAhB7B,CAiBI,iBAAiB,CAAE,KAAKhK,KAAL,CAAWF,KAAX,CAAiBmK,iBAAjB,EAAsC,EAjB7D,CAkBI,iBAAiB,CAAE,KAAKjK,KAAL,CAAWF,KAAX,CAAiBoK,iBAAjB,EAAsC,EAlB7D,EADJ,cAsBI,oBAAC,eAAD,EACI,kBAAkB,CAAE,KAAKrK,KAAL,CAAW0H,kBADnC,CAEI,KAAK,CAAE,KAAK1H,KAAL,CAAW2H,KAClB;AAHJ,CAII,OAAO,CAAE,KAAK3H,KAAL,CAAWsF,WAAX,CAAuB,CAAvB,EAA0BQ,MAJvC,EAzCZ,EAnIR,CADJ,CA2LH,C,kCA6WD,4BAAmBwE,aAAnB,CAAkC,iBAC9B,GAAI,KAAKnK,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,GAAgC2H,aAAa,CAACrK,KAAd,CAAoB0C,UAAxD,CAAoE,CAEhE,GAAI,KAAKxC,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAA1B,GAAwCoH,aAAa,CAACrK,KAAd,CAAoBiC,QAApB,CAA6BgB,SAAzE,CAAoF,CAChF,GAAMD,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,qBAArB,CAA4C,CACxC,KAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,qBAAjB,CAAuC,KAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAjE,GAA+EqH,MAAM,CAACC,MAAP,CAAc,KAAKrK,KAAL,CAAWF,KAAX,CAAiBgD,qBAAjB,CAAuC,KAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAjE,CAAd,EAA2FsB,GAA3F,CAA+F,SAAAF,IAAI,QAC9KrB,CAAAA,qBAAqB,CAACmB,IAAtB,CAA2BE,IAAI,CAACgE,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMf,CAAAA,UAAU,CAAG/H,aAAa,CAAC,KAAKW,KAAL,CAAWF,KAAX,CAAiBgD,qBAAlB,CAAyC,KAAK9C,KAAL,CAAWF,KAAX,CAAiBiC,QAAjB,CAA0BgB,SAAnE,CAAhC,CAEA,GAAM2G,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,CAEA,KAAK3J,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4B8H,oBAA5B,EACI,KAAKtK,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4B8H,oBAA5B,CAAiDxG,OAAjD,CAAyD,SAAAK,IAAI,CAAI,CAC7DuF,cAAc,CAACzF,IAAf,gCACOE,IADP,MAEIoG,oBAAoB,CAAE,CAAE9D,KAAK,CAAEtC,IAAI,CAACqG,oBAAd,CAAoC5I,KAAK,CAAEuC,IAAI,CAACoG,oBAAhD,CAF1B,CAGIrF,aAAa,CAAE,CAAEuB,KAAK,CAAEtC,IAAI,CAAC2E,aAAd,CAA6BlH,KAAK,CAAEuC,IAAI,CAACe,aAAzC,CAHnB,IAKAyE,QAAQ,CAAC1F,IAAT,gCACOE,IADP,MAEIoG,oBAAoB,CAAE,CAAE9D,KAAK,CAAEtC,IAAI,CAACqG,oBAAd,CAAoC5I,KAAK,CAAEuC,IAAI,CAACoG,oBAAhD,CAF1B,CAGIrF,aAAa,CAAE,CAAEuB,KAAK,CAAEtC,IAAI,CAAC2E,aAAd,CAA6BlH,KAAK,CAAEuC,IAAI,CAACe,aAAzC,CAHnB,IAKH,CAXD,CADJ,CAcA,GAAM0E,CAAAA,eAAe,CAAG,EAAxB,CACA,GAAMC,CAAAA,eAAe,CAAG,EAAxB,CAEA,KAAK7J,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BiI,yBAA5B,EACI,KAAKzK,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BiI,yBAA5B,CAAsD3G,OAAtD,CAA8D,SAAAK,IAAI,CAAI,CAClEyF,eAAe,CAAC3F,IAAhB,kBAA0BE,IAA1B,GACA0F,eAAe,CAAC5F,IAAhB,kBAA0BE,IAA1B,GACH,CAHD,CADJ,CAMA,KAAKjE,QAAL,CAAc,CAACwJ,cAAc,CAAdA,cAAD,CAAiBC,QAAQ,CAARA,QAAjB,CACVC,eAAe,CAAfA,eADU,CACOC,eAAe,CAAfA,eADP,CAEV/G,qBAAqB,CAArBA,qBAFU,CAEasE,UAAU,CAAVA,UAFb,CAEyB5G,IAAI,CAAE,KAAKR,KAAL,CAAWF,KAAX,CAAiB0C,UAC1D;AAHU,CAAd,EAKH,CAvCD,IAwCK,CAED,GAAMkH,CAAAA,eAAc,CAAG,EAAvB,CACA,GAAMC,CAAAA,SAAQ,CAAG,EAAjB,CAEA,KAAK3J,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4B8H,oBAA5B,EACI,KAAKtK,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4B8H,oBAA5B,CAAiDxG,OAAjD,CAAyD,SAAAK,IAAI,CAAI,CAC7DuF,eAAc,CAACzF,IAAf,gCACOE,IADP,MAEIoG,oBAAoB,CAAE,CAAE9D,KAAK,CAAEtC,IAAI,CAACqG,oBAAd,CAAoC5I,KAAK,CAAEuC,IAAI,CAACoG,oBAAhD,CAF1B,CAGIrF,aAAa,CAAE,CAAEuB,KAAK,CAAEtC,IAAI,CAAC2E,aAAd,CAA6BlH,KAAK,CAAEuC,IAAI,CAACe,aAAzC,CAHnB,IAKAyE,SAAQ,CAAC1F,IAAT,gCACOE,IADP,MAEIoG,oBAAoB,CAAE,CAAE9D,KAAK,CAAEtC,IAAI,CAACqG,oBAAd,CAAoC5I,KAAK,CAAEuC,IAAI,CAACoG,oBAAhD,CAF1B,CAGIrF,aAAa,CAAE,CAAEuB,KAAK,CAAEtC,IAAI,CAAC2E,aAAd,CAA6BlH,KAAK,CAAEuC,IAAI,CAACe,aAAzC,CAHnB,IAKH,CAXD,CADJ,CAcA,GAAM0E,CAAAA,gBAAe,CAAG,EAAxB,CACA,GAAMC,CAAAA,gBAAe,CAAG,EAAxB,CAEA,KAAK7J,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BiI,yBAA5B,EACI,KAAKzK,KAAL,CAAWF,KAAX,CAAiB0C,UAAjB,CAA4BiI,yBAA5B,CAAsD3G,OAAtD,CAA8D,SAAAK,IAAI,CAAI,CAClEyF,gBAAe,CAAC3F,IAAhB,kBAA0BE,IAA1B,GACA0F,gBAAe,CAAC5F,IAAhB,kBAA0BE,IAA1B,GACH,CAHD,CADJ,CAMA,KAAKjE,QAAL,CAAc,CAAGwJ,cAAc,CAAdA,eAAH,CAAmBC,QAAQ,CAARA,SAAnB,CACVC,eAAe,CAAfA,gBADU,CACOC,eAAe,CAAfA,gBADP,CAEVrJ,IAAI,CAAE,KAAKR,KAAL,CAAWF,KAAX,CAAiB0C,UAFb,CAEyB/B,cAAc,CAAE,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAF1D,CAGV0G,MAAM,CAAE,KAHE,CAAd,EAKH,CACJ,CACD,GAAI,KAAKnH,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,GAAoC0J,aAAa,CAACrK,KAAd,CAAoBW,cAA5D,CAA4E,CAExE,GAAI0E,CAAAA,WAAW,oBAAO,KAAKtF,KAAL,CAAWsF,WAAlB,CAAf,CAEAA,WAAW,CAAC,CAAD,CAAX,CAAeO,MAAf,CAAwB,KAAK1F,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgCiK,WAAxD,CACA,GAAI,KAAK1K,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,gBAAhC,GAAqD,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,gBAAhC,EAAkDmB,KAAlD,GAA4DnC,SAAS,CAAC8D,MAA/H,CAAuI,CACnI4B,WAAW,CAAC,CAAD,CAAX,CAAeQ,MAAf,CAAwB,KAAK3F,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgCkK,SAAxD,CACH,CAFD,IAGK,CACDxF,WAAW,CAAC,CAAD,CAAX,CAAeQ,MAAf,CAAwB,KAAK3F,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgCmK,WAAxD,CACH,CAGD,KAAK1K,QAAL,CAAc,CAAEO,cAAc,CAAE,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAnC,CAAd,EACH,CACD,GAAI,KAAKT,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,GAAgC6E,aAAa,CAACrK,KAAd,CAAoBwF,UAAxD,CAAoE,CAChE,GAAIF,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAI,KAAKrF,KAAL,CAAWF,KAAX,CAAiBY,SAAjB,GAA+B,QAAnC,CAA6C,CACzC,GAAI,KAAKV,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,gBAAhC,IAAsD,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,gBAAhC,EAAkDmB,KAAlD,GAA4DnC,SAAS,CAACiE,QAAtE,EACtD,KAAK1D,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,gBAAhC,EAAkDmB,KAAlD,GAA4DnC,SAAS,CAACkE,KADtE,CAAJ,CACkF,CAE9E,KAAK3D,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,OAAhC,GAA4C,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,OAAhC,EAAyCmB,KAAzC,GAAmDyB,SAA/F,CAEIgC,QAAQ,CAAG,KAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAA5B,CAA2CV,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC,MAAI,CAACnE,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,OAAhC,EAAyCmB,KAA1C,EAAiD2D,QAAjD,CAA0DpB,IAAI,CAACvC,KAA/D,CAAL,EAAtD,CAFf,CAIIyD,QAAQ,CAAG,KAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAJ3C,CAMA,GAAI,KAAKjF,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,WAAhC,GAAgD,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,WAAhC,EAA6CmB,KAA7C,GAAuDyB,SAA3G,CAAsH,CAElH+B,QAAQ,CAAG,KAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAA5B,CAA2CT,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC,MAAI,CAACnE,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,WAAhC,EAA6CmB,KAA9C,EAAqD2D,QAArD,CAA8DpB,IAAI,CAACvC,KAAnE,CAAL,EAAtD,CAAX,CACH,CAHD,IAIK,CACDwD,QAAQ,CAAG,KAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAAvC,CACH,CACJ,CAhBD,IAiBK,CAED,KAAKhF,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,GAAkD,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,EAA+CmB,KAA/C,GAAyDyB,SAA3G,CAEIgC,QAAQ,CAAG,KAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAA5B,CAA2CV,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,CAAC,MAAI,CAACnE,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,EAA+CmB,KAAhD,EAAuD2D,QAAvD,CAAgEpB,IAAI,CAACvC,KAArE,CAAL,EAAtD,CAFf,CAIIyD,QAAQ,CAAG,KAAKrF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BL,cAJ3C,CAMA,GAAI,KAAKjF,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,GAAkD,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,EAA+C+C,MAA/C,EAAyD,CAA/G,CAAkH,CAC9G4B,QAAQ,CAAG,KAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAA5B,CAA2CT,MAA3C,CAAkD,SAAAJ,IAAI,QAAI,CAAC,MAAI,CAACnE,KAAL,CAAWF,KAAX,CAAiBW,cAAjB,CAAgC,aAAhC,EAA+C+E,IAA/C,CAAoD,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAAC7D,KAAV,GAAoBuC,IAAI,CAACvC,KAA7B,EAA7D,CAAL,EAAtD,CAAX,CACH,CAFD,IAGK,CACDwD,QAAQ,CAAG,KAAKpF,KAAL,CAAWF,KAAX,CAAiBwF,UAAjB,CAA4BN,cAAvC,CACH,CAEJ,CACD,KAAK9E,QAAL,CAAc,CAAE0F,UAAU,CAAE,CAAEZ,cAAc,CAAEI,QAAlB,CAA4BH,cAAc,CAAEI,QAA5C,CAAd,CAAd,EACH,CAnCD,IAoCK,CACD,KAAKnF,QAAL,CAAc,CAAE0F,UAAU,CAAE,KAAK5F,KAAL,CAAWF,KAAX,CAAiBwF,UAA/B,CAAd,EACH,CAEJ,CACD,GAAI,KAAKtF,KAAL,CAAWF,KAAX,CAAiBkF,cAAjB,GAAoCmF,aAAa,CAACrK,KAAd,CAAoBkF,cAA5D,CAA4E,CACxE,KAAK9E,QAAL,CAAc,CAAE8E,cAAc,CAAE,KAAKhF,KAAL,CAAWF,KAAX,CAAiBkF,cAAnC,CAAd,EACH,CACD,GAAI,KAAKhF,KAAL,CAAWF,KAAX,CAAiBmF,cAAjB,GAAoCkF,aAAa,CAACrK,KAAd,CAAoBmF,cAA5D,CAA4E,CACxE,KAAK/E,QAAL,CAAc,CAAE+E,cAAc,CAAE,KAAKjF,KAAL,CAAWF,KAAX,CAAiBmF,cAAnC,CAAd,EACH,CACJ,C,0CAxxBD,kCAAgCjF,KAAhC,CAAuCH,KAAvC,CAA8C,CAE1C,GAAIG,KAAK,CAACF,KAAN,CAAYkH,YAAZ,GAA6BnH,KAAK,CAACmH,YAAvC,CAAqD,CACjDnJ,KAAK,CAAC4F,IAAN,CAAWzD,KAAK,CAACF,KAAN,CAAYkH,YAAvB,EACAhH,KAAK,CAACF,KAAN,CAAYkH,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAIhH,KAAK,CAACF,KAAN,CAAYmH,KAAZ,GAAsBpH,KAAK,CAACoH,KAAhC,CAAuC,CACnCpJ,KAAK,CAACoJ,KAAN,CAAYjH,KAAK,CAACF,KAAN,CAAYmH,KAAxB,EACAjH,KAAK,CAACF,KAAN,CAAYmH,KAAZ,CAAoB,EAApB,CACH,CACD,MAAO,KAAP,CACH,C,4BAzFwB5J,KAAK,CAACwN,S,EAy3BnC,cAAe/M,CAAAA,OAAO,CAAC8B,eAAD,CAClB,CACI5B,WAAW,CAAXA,WADJ,CACiBC,UAAU,CAAVA,UADjB,CAC6BC,wBAAwB,CAAxBA,wBAD7B,CACuDI,4BAA4B,CAA5BA,4BADvD,CACqFH,sBAAsB,CAAtBA,sBADrF,CAEIC,kBAAkB,CAAlBA,kBAFJ,CAEwBC,qBAAqB,CAArBA,qBAFxB,CAE+CE,wCAAwC,CAAxCA,wCAF/C,CAEyFC,WAAW,CAAXA,WAFzF,CAGIC,uBAAuB,CAAvBA,uBAHJ,CAG6BC,gBAAgB,CAAhBA,gBAH7B,CAG+CC,uCAAuC,CAAvCA,uCAH/C,CAIIC,sCAAsC,CAAtCA,sCAJJ,CAI4C;AACxCC,iCAAiC,CAAjCA,iCALJ,CADkB,CAAP,CAORd,UAAU,CAACgC,cAAD,CAPF,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Row, Col, Card, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, fetchRecordDashBoardType, getSqlQueryDataService,\r\n    getSqlQueryColumns, getAddDashboardDesign, selectCheckBoxDashBoardTypes, getDashBoardParameterMappingComboService,\r\n    updateStore, validateEsignCredential, filterColumnData, checkParametersAvailableForDefaultValue,\r\n    getReportViewChildDataListForDashBoard, //showDefaultValueInDataGrid,\r\n     updateDashBoarddesignDefaultValue\r\n} from '../../actions';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList, ContentPanel } from '../../pages/product/product.styled';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddDashBoardTypes from '../../pages/dashboardtypes/AddDashBoardTypes'\r\nimport { transactionStatus, chartType } from '../../components/Enumeration';\r\nimport AddSeriesColors from '../../pages/dashboardtypes/AddSeriesColors';\r\n//import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport DashBoardDesignConfig from '../../pages/dashboardtypes/DashBoardDesignConfig';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass DashBoardTypes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.gridColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false, controlMap: new Map(), userRoleControlRights: [],\r\n            sqlQueryCode: 0, chartTypeCode: 0, chartSeries: [{ xField: [], yField: [], chartTitle: \"\" }],\r\n            isChartSeries: false,\r\n            displayColorPicker: false, color: { r: '241', g: '112', b: '19', a: '1' },\r\n            pieCatagoryColumn: \"\", pieValueColumn: \"\",\r\n            sqlColumns: [], xSeriesColumns: [], ySeriesColumns: [],\r\n            sidebarview: false\r\n        }\r\n        this.searchRef = React.createRef();\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n        \r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    openModal = (input) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: input.operation,\r\n                screenName: \"IDS_DASHBOARDTYPES\",\r\n                openModal: true, ncontrolCode: input.ncontrolCode,\r\n                loading: false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.setState({ isChartSeries: false });\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n \r\n    render() {\r\n\r\n        let primaryKeyField = \"ndashboardtypecode\";\r\n\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const deleteId = this.props.Login.inputParam && this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n\r\n        const AddDashBoardtype = {\r\n            screenName: this.props.Login.screenName, primaryKeyField, undefined, operation: \"create\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"ndashboardtypecode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n        // const deleteParam = { operation: \"delete\" };\r\n\r\n        const filterParam = {\r\n            inputListName: \"DashBoardTypes\", selectedObject: \"selectedDashBoardTypes\", primaryKeyField: \"ndashboardtypecode\",\r\n           // fetchUrl: \"dashboardtypes/getAllSelectionDashBoardTypes\", \r\n            fetchUrl: \"dashboardtypes/getDashBoardTypes\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sdashboardtypename\", \"schartname\", \"ssqlqueryname\"]\r\n        };\r\n        // console.log(\"Chart Property : \", this.props.ChartProperty);\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_DASHBOARDNAME\", \"dataField\": \"sdashboardtypename\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"ndesigncomponentcode\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_EXISTINGLINKTABLE\", \"dataField\": \"nsqlquerycode\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DAYS\", \"dataField\": \"ndays\", \"width\": \"200px\" }\r\n        ];\r\n        this.gridColumnList = [\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"ndesigncomponentcode\", \"width\": \"200px\" },\r\n        ];\r\n        const mandatoryFields = [];\r\n\r\n        mandatoryFields.push({ \"idsName\": \"IDS_DASHBOARDTYPENAME\", \"dataField\": \"sdashboardtypename\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"})\r\n        mandatoryFields.push({ \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n        mandatoryFields.push({ \"idsName\": \"IDS_QUERY\", \"dataField\": \"nsqlquerycode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n\r\n        const fieldList = this.props.Login.ChartProperty || [];\r\n        fieldList.forEach(item => {\r\n            if (item.schartpropertyname === \"field\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_CATAEGORYFIELD\", \"dataField\": item.schartpropertyname , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"nameField\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_VALUEFIELD\", \"dataField\": item.schartpropertyname , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"yField\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_YSERIES\", \"dataField\": \"yColumnName\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"xField\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_XSERIES\", \"dataField\": \"xColumnName\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"xFieldBubble\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_XSERIES\", \"dataField\": item.schartpropertyname , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"yFieldBubble\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_YSERIES\", \"dataField\": item.schartpropertyname , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"sizeField\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_SIZEFIELD\", \"dataField\": item.schartpropertyname , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            }\r\n            else if (item.schartpropertyname === \"categoryField\") {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_CATAEGORYFIELD\", \"dataField\": item.schartpropertyname  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"})\r\n            }\r\n        });\r\n\r\n   // console.log(\"props:\", this.props.Login);\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_DASHBOARDTYPES\" })}\r\n                                masterData={this.props.Login.masterData || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.DashBoardTypes}\r\n                                getMasterDetail={(DashBoardTypes) => this.props.selectCheckBoxDashBoardTypes(DashBoardTypes, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedDashBoardTypes}\r\n                                primaryKeyField=\"ndashboardtypecode\"\r\n                                mainField=\"sdashboardtypename\"\r\n                                firstField=\"schartname\"\r\n                                //secondField=\"ssqlqueryname\"\r\n                                // isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() => this.props.fetchRecordDashBoardType(AddDashBoardtype, this.props.Login.masterData.selectedDashBoardTypes)}\r\n                            // openModal={() => this.props.getAddDashboardDesign(this.props.Login.masterData.selectedDashBoardTypes,this.props.Login.userInfo)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {this.props.Login.masterData.DashBoardTypes && this.props.Login.masterData.DashBoardTypes.length > 0 && this.props.Login.masterData.selectedDashBoardTypes ?\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedDashBoardTypes.sdashboardtypename}</Card.Title>\r\n                                            <ContentPanel className=\"d-flex product-category\">\r\n                                                <Col md='6' >\r\n                                                {this.props.Login.masterData.selectedDashBoardTypes.ssqlqueryname}\r\n                                                </Col>\r\n                                                <Col md='6'>\r\n                                                    <div  className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                        <ProductList className=\"d-inline dropdown badget_menu\">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                             //   data-for=\"tooltip_list_wrap\"\r\n                                                                onClick={() => this.props.fetchRecordDashBoardType(editParam)}\r\n\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}>\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link name=\"deleteDashboardType\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                   // data-for=\"tooltip-common-wrap\"\r\n                                                                    onClick={() => this.confirmDelete( deleteId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Nav.Link>\r\n                                                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1} \r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}>\r\n                                                                <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    handleClickDelete={() => this.DeleteDashBoardType(\"delete\", deleteId)}\r\n                                                                />\r\n                                                            </Nav.Link> */}\r\n                                                        </ProductList>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </ContentPanel>\r\n                                        </Card.Header>\r\n\r\n                                        <Card.Body>\r\n                                            <DashBoardDesignConfig\r\n                                                operation={this.props.Login.operation}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                screenName={this.props.Login.screenName}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                masterData={this.props.Login.masterData}\r\n                                                crudMaster={this.props.crudMaster}\r\n                                                errorCode={this.props.Login.errorCode}\r\n                                                masterStatus={this.props.Login.masterStatus}\r\n                                                openChildModal={this.props.Login.openChildModal}\r\n                                                updateStore={this.props.updateStore}\r\n                                                selectedRecord={this.props.Login.selectedRecord}\r\n                                                ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                esignRights={this.props.Login.userRoleControlRights}\r\n                                                screenData={this.props.Login.screenData}\r\n                                                validateEsignCredential={this.props.validateEsignCredential}\r\n                                                loadEsign={this.props.Login.loadEsign}\r\n                                                controlMap={this.state.controlMap}\r\n                                                showAccordian={this.state.showAccordian}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                designComponents={this.props.Login.designComponents || []}\r\n                                                sqlQueryForParams={this.props.Login.sqlQueryForParams || []}\r\n                                                sqlQueryForExistingLinkTable={this.props.Login.sqlQueryForExistingLinkTable || []}\r\n                                                getAddDashboardDesign={this.props.getAddDashboardDesign}\r\n                                                getDashBoardParameterMappingComboService={this.props.getDashBoardParameterMappingComboService}\r\n                                                parentComponentList={this.props.Login.parentComponentList}\r\n                                                childComponentList={this.props.Login.childComponentList}\r\n                                                checkParametersAvailableForDefaultValue={this.props.checkParametersAvailableForDefaultValue}\r\n                                                getReportViewChildDataListForDashBoard={this.props.getReportViewChildDataListForDashBoard}\r\n                                                showDefaultValueInDataGrid={this.props.showDefaultValueInDataGrid}\r\n                                                updateDashBoarddesignDefaultValue={this.props.updateDashBoarddesignDefaultValue}\r\n                                           \r\n                                                addDesignParam ={this.state.addDesignParam}\r\n                                                gridData={this.state.gridData}\r\n                                                addMappingParam={this.state.addMappingParam}\r\n                                                mappingGridData={this.state.mappingGridData}\r\n                                           />\r\n                                        </Card.Body>\r\n                                    </Card> : \"\"}\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.state.isChartSeries === false ?\r\n                                <AddDashBoardTypes\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    handleChange={this.handleChange}\r\n                                    chartType={this.props.Login.chartType || []}\r\n                                    sqlQuery={this.props.Login.sqlQuery || []}\r\n                                    // ncharttypecode={this.props.Login.ncharttypecode || []}\r\n                                    // nsqlquerycode={this.props.Login.nsqlquerycode || []}\r\n                                    getSqlQueryColumns={this.getQueryColumns}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    ChartProperty={this.props.Login.ChartProperty}\r\n                                    // SqlColumns={this.props.Login.SqlColumns || []}\r\n                                    SqlColumns={this.state.sqlColumns || []}\r\n                                    Value={this.props.Login.Value}\r\n                                    operation={this.props.Login.operation}\r\n                                    xValue={this.props.Login.xValue}\r\n                                    yValue={this.props.Login.yValue}\r\n                                    xSeriesColumnList={this.props.Login.xSeriesColumnList || []}\r\n                                    ySeriesColumnList={this.props.Login.ySeriesColumnList || []}\r\n                                />\r\n                                :\r\n                                <AddSeriesColors\r\n                                    displayColorPicker={this.state.displayColorPicker}\r\n                                    color={this.state.color}\r\n                                    // handleChange={this.handleColorChange}\r\n                                    ySeries={this.state.chartSeries[0].yField}\r\n\r\n                                />\r\n\r\n\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    confirmDelete = (ncontrolCode) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", \r\n                                    this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_OK\" }), \r\n                                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),                                   \r\n                                    () =>  this.DeleteDashBoardType(\"delete\", ncontrolCode));\r\n    };\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"dashboardtypes\",\r\n            methodUrl: \"DashBoardTypes\",\r\n            displayName: \"IDS_DASHBOARDTYPES\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n    DeleteDashBoardType = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        let postParam = {\r\n            inputListName: \"DashBoardTypes\",\r\n            selectedObject: \"selectedDashBoardTypes\",\r\n            primaryKeyField: \"ndashboardtypecode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n            fetchUrl: \"dashboardtypes/getAllSelectionDashBoardTypes\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n        };\r\n        inputData[\"dashboardtype\"] = this.props.Login.masterData.selectedDashBoardTypes;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        const inputParam = {\r\n            methodUrl: \"DashBoardTypes\",\r\n            classUrl: \"dashboardtypes\",\r\n            inputData: inputData,\r\n            operation: \"delete\", postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"DashBoardTypes\", operation: \"delete\",\r\n                    methodUrl: \"DashBoardTypes\",\r\n                    classUrl: \"dashboardtypes\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        // console.log(\"Save :\", this.state.chartSeries);\r\n\r\n\r\n        let dataState = undefined;\r\n        let operation = this.props.Login.operation;\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        let data = [];\r\n        let i = 0;\r\n        let postParam = undefined;\r\n\r\n        if (this.state.selectedRecord[\"ncharttypecode\"] && (this.state.selectedRecord[\"ncharttypecode\"].value === chartType.BUBBLE)\r\n            && this.state.isChartSeries === false) {\r\n\r\n            if ((this.state.selectedRecord[\"yFieldBubble\"].length !== this.state.selectedRecord[\"sizeField\"].length) ||\r\n                (this.state.selectedRecord[\"yFieldBubble\"].length !== this.state.selectedRecord[\"categoryField\"].length)) {\r\n\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SERIESSHOULDBESAMELENGTH\" }));\r\n                return;\r\n            }\r\n            if ((this.state.selectedRecord[\"sizeField\"].length !== this.state.selectedRecord[\"categoryField\"].length)) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SERIESSHOULDBESAMELENGTH\" }));\r\n                return;\r\n            }\r\n        }\r\n        this.setState({ isChartSeries: true });\r\n\r\n        if (this.state.selectedRecord[\"ncharttypecode\"] && (this.state.selectedRecord[\"ncharttypecode\"].value === chartType.PIECHART\r\n            || this.state.selectedRecord[\"ncharttypecode\"].value === chartType.DONUT)) {\r\n\r\n            postParam = { inputListName: \"DashBoardTypes\", selectedObject: \"selectedDashBoardTypes\", primaryKeyField: \"ndashboardtypecode\" };\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            inputData[\"dashboardtype\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            inputData[\"dashboardtype\"][\"sdashboardtypename\"] = this.state.selectedRecord[\"sdashboardtypename\"] ? this.state.selectedRecord[\"sdashboardtypename\"] : \"\";\r\n            inputData[\"dashboardtype\"][\"nquerycode\"] = this.state.selectedRecord[\"nsqlquerycode\"] ? this.state.selectedRecord[\"nsqlquerycode\"].value : -1;\r\n            inputData[\"dashboardtype\"][\"ncharttypecode\"] = this.state.selectedRecord[\"ncharttypecode\"] ? this.state.selectedRecord[\"ncharttypecode\"].value : -1;\r\n            if (operation !== \"create\") {\r\n                inputData[\"dashboardtype\"][\"ndashboardtypecode\"] = this.state.selectedRecord[\"ndashboardtypecode\"] ? this.state.selectedRecord[\"ndashboardtypecode\"] : -1;\r\n            }\r\n\r\n            this.props.Login.ChartProperty.forEach(prop => {\r\n                if (prop.schartpropertyname === \"field\") {\r\n                    data.push({\r\n                        \"ndashboardtypecode\": 1,\r\n                        \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[\"field\"].item.Value\r\n                    });\r\n                }\r\n                else if (prop.schartpropertyname === \"nameField\") {\r\n                    data.push({\r\n                        \"ndashboardtypecode\": 1,\r\n                        \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[\"nameField\"].item.Value\r\n                    });\r\n                }\r\n            })\r\n\r\n            inputData[\"chartproptransaction\"] = data;\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                //methodUrl: this.props.Login.inputParam.methodUrl,\r\n                methodUrl: \"DashBoardTypes\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: operation, saveType, formRef, dataState, selectedId,\r\n                postParam, searchRef: this.searchRef\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n            this.setState({ isChartSeries: false });\r\n        }\r\n        else if (this.state.isChartSeries === true) {\r\n\r\n            postParam = { inputListName: \"DashBoardTypes\", selectedObject: \"selectedDashBoardTypes\", primaryKeyField: \"ndashboardtypecode\" };\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            inputData[\"dashboardtype\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            inputData[\"dashboardtype\"][\"sdashboardtypename\"] = this.state.selectedRecord[\"sdashboardtypename\"] ? this.state.selectedRecord[\"sdashboardtypename\"] : \"\";\r\n            inputData[\"dashboardtype\"][\"nquerycode\"] = this.state.selectedRecord[\"nsqlquerycode\"] ? this.state.selectedRecord[\"nsqlquerycode\"].value : -1;\r\n            inputData[\"dashboardtype\"][\"ncharttypecode\"] = this.state.selectedRecord[\"ncharttypecode\"] ? this.state.selectedRecord[\"ncharttypecode\"].value : -1;\r\n            if (operation !== \"create\") {\r\n                inputData[\"dashboardtype\"][\"ndashboardtypecode\"] = this.state.selectedRecord[\"ndashboardtypecode\"] ? this.state.selectedRecord[\"ndashboardtypecode\"] : -1;\r\n            }\r\n            if (this.state.selectedRecord[\"ncharttypecode\"] && this.state.selectedRecord[\"ncharttypecode\"].value !== chartType.BUBBLE) {\r\n\r\n                i++;\r\n                this.props.Login.ChartProperty.forEach(prop => {\r\n\r\n                    if (prop.schartpropertyname === \"xField\") {\r\n                        data.push({\r\n                            \"ndashboardtypecode\": 1,\r\n                            \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[\"xColumnName\"].item.Value\r\n                        });\r\n                    }\r\n                    else if (prop.schartpropertyname === \"displayName\") {\r\n                        data.push({\r\n                            \"ndashboardtypecode\": 1,\r\n                            \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[\"xColumnName\"].item.Value\r\n                        });\r\n                    }\r\n                })\r\n\r\n                this.state.selectedRecord[\"yColumnName\"] && this.state.selectedRecord[\"yColumnName\"].map(item => {\r\n                    i++;\r\n                    this.props.Login.ChartProperty.forEach(prop => {\r\n                        if (prop.schartpropertyname === \"yField\") {\r\n                            data.push({\r\n                                \"ndashboardtypecode\": 1,\r\n                                \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": item.item.Value\r\n                            });\r\n                        }\r\n                        else if (prop.schartpropertyname === \"displayName\") {\r\n                            data.push({\r\n                                \"ndashboardtypecode\": 1,\r\n                                \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": item.item.Value\r\n                            });\r\n                        }\r\n                        else if (prop.schartpropertyname === \"areaFill\") {\r\n                            data.push({\r\n                                \"ndashboardtypecode\": 1,\r\n                                \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": item.item.Color\r\n                            });\r\n                        }\r\n                    });\r\n                    return null;\r\n                })\r\n\r\n            }\r\n            else {\r\n\r\n                i++;\r\n                this.props.Login.ChartProperty.filter((field) => field.schartpropertyname === \"xFieldBubble\").forEach(prop => {\r\n                    data.push({\r\n                        \"ndashboardtypecode\": 1,\r\n                        \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[\"xFieldBubble\"].item.Value\r\n                    });\r\n                });\r\n\r\n                this.state.selectedRecord[\"sizeField\"] && this.state.selectedRecord[\"sizeField\"].forEach((item, index) => {\r\n                    i++;\r\n                    this.props.Login.ChartProperty.filter((field) => field.schartpropertyname !== \"xFieldBubble\").forEach(prop => {\r\n                        if (prop.schartpropertyname === \"colorFill\") {\r\n                            data.push({\r\n                                \"ndashboardtypecode\": 1,\r\n                                \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": item.item.Color\r\n                            });\r\n                        }\r\n                        else {\r\n                            data.push({\r\n                                \"ndashboardtypecode\": 1,\r\n                                \"nchartpropertycode\": prop.nchartpropertycode, \"nseries\": i, \"schartpropvalue\": this.state.selectedRecord[prop.schartpropertyname][index].item.Value\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            inputData[\"chartproptransaction\"] = data;\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"DashBoardTypes\",//this.props.Login.inputParam.methodUrl,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: operation, saveType, formRef, dataState, selectedId,\r\n                postParam, searchRef: this.searchRef\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n            this.setState({ isChartSeries: false });\r\n        }\r\n    }\r\n\r\n    getQueryColumns = () => {\r\n        this.props.getSqlQueryColumns(this.state.sqlQueryCode, this.state.chartTypeCode, this.props.Login.userInfo);\r\n    }\r\n\r\n    handleChange = (item, fieldName, isXField) => {\r\n\r\n        if (item !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};          \r\n            let xSeriesColumns = this.state.xSeriesColumns || {};\r\n            let ySeriesColumns = this.state.ySeriesColumns || {};\r\n\r\n            if (fieldName === \"ncharttypecode\") {\r\n                selectedRecord[fieldName] = item;\r\n                selectedRecord.nsqlquerycode = \"\";\r\n                this.props.getSqlQueryDataService(item.value, selectedRecord, this.props.Login.userInfo);\r\n             //   this.setState({ chartTypeCode: item.value, selectedRecord });\r\n            }\r\n            else if (fieldName === \"nsqlquerycode\") {\r\n                selectedRecord[fieldName] = item;\r\n                this.props.getSqlQueryColumns(item.value, selectedRecord[\"ncharttypecode\"].value, this.props.Login.userInfo, selectedRecord);\r\n\r\n            }\r\n            else {\r\n                selectedRecord[fieldName] = item;\r\n            }\r\n            if (isXField !== \"ChartType\") {\r\n                \r\n                let chartSeries = [...this.state.chartSeries];\r\n                // let index = 0;\r\n                let newXCols = [];\r\n                let newYCols = [];\r\n\r\n                if (this.props.Login.SqlColumns && this.props.Login.SqlColumns.xSeriesColumns) {\r\n                   // console.log(\" xSeriesColumns 1 : \", this.props.Login.SqlColumns.xSeriesColumns);\r\n\r\n                    if (selectedRecord[\"ncharttypecode\"] && (selectedRecord[\"ncharttypecode\"].value !== chartType.PIECHART\r\n                        && selectedRecord[\"ncharttypecode\"].value !== chartType.DONUT)) {\r\n\r\n                        if (selectedRecord[\"xColumnName\"] && [selectedRecord[\"xColumnName\"]].length >= 0) {\r\n\r\n                            newYCols = this.props.Login.SqlColumns.ySeriesColumns.filter(item => ![selectedRecord[\"xColumnName\"].value].includes(item.value))\r\n                        }\r\n                        else {\r\n                            newYCols = this.props.Login.SqlColumns.ySeriesColumns\r\n                        }\r\n\r\n                        if (selectedRecord[\"yColumnName\"] && selectedRecord[\"yColumnName\"].length >= 0) {\r\n\r\n                            newXCols = this.props.Login.SqlColumns.xSeriesColumns.filter(item => !selectedRecord[\"yColumnName\"].some(itemValue => itemValue.value === item.value))\r\n                        }\r\n                        else {\r\n                            newXCols = this.props.Login.SqlColumns.xSeriesColumns\r\n                        }\r\n                        if (isXField === \"xField\") {\r\n                            chartSeries[0].xField = item;\r\n                        }\r\n                        else if (isXField === \"yField\" || isXField === \"sizeField\") {\r\n                            chartSeries[0].yField = item;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (selectedRecord[\"field\"] && [selectedRecord[\"field\"]].length >= 0) {\r\n\r\n                            newYCols = this.props.Login.SqlColumns.ySeriesColumns.filter(item => ![selectedRecord[\"field\"].value].includes(item.value))\r\n                        }\r\n                        else {\r\n                            newYCols = this.props.Login.SqlColumns.ySeriesColumns\r\n                        }\r\n\r\n                        if (selectedRecord[\"nameField\"] && [selectedRecord[\"nameField\"]].length >= 0) {\r\n\r\n                            newXCols = this.props.Login.SqlColumns.xSeriesColumns.filter(item => ![selectedRecord[\"nameField\"].value].includes(item.value))\r\n                        }\r\n                        else {\r\n                            newXCols = this.props.Login.SqlColumns.xSeriesColumns\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    selectedRecord, sqlQueryCode: item.value,\r\n                    sqlColumns: { xSeriesColumns: newXCols, ySeriesColumns: newYCols },\r\n                    xSeriesColumns, ySeriesColumns\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                const addDesignParam = [];\r\n                const gridData = [];\r\n    \r\n                this.props.Login.masterData.selectedDesignConfig &&\r\n                    this.props.Login.masterData.selectedDesignConfig.forEach(item => {\r\n                        addDesignParam.push({\r\n                            ...item,\r\n                            ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n                            nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n                        });\r\n                        gridData.push({\r\n                            ...item,\r\n                            ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n                            nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n                        });\r\n                    });\r\n    \r\n                const addMappingParam = [];\r\n                const mappingGridData = [];\r\n    \r\n                this.props.Login.masterData.DashBoardParameterMapping &&\r\n                    this.props.Login.masterData.DashBoardParameterMapping.forEach(item => {\r\n                        addMappingParam.push({ ...item });\r\n                        mappingGridData.push({ ...item });\r\n                    });\r\n                \r\n                this.setState({addDesignParam, gridData,\r\n                    addMappingParam, mappingGridData,\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    // dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n               \r\n                const addDesignParam = [];\r\n                const gridData = [];\r\n    \r\n                this.props.Login.masterData.selectedDesignConfig &&\r\n                    this.props.Login.masterData.selectedDesignConfig.forEach(item => {\r\n                        addDesignParam.push({\r\n                            ...item,\r\n                            ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n                            nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n                        });\r\n                        gridData.push({\r\n                            ...item,\r\n                            ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n                            nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n                        });\r\n                    });\r\n    \r\n                const addMappingParam = [];\r\n                const mappingGridData = [];\r\n    \r\n                this.props.Login.masterData.DashBoardParameterMapping &&\r\n                    this.props.Login.masterData.DashBoardParameterMapping.forEach(item => {\r\n                        addMappingParam.push({ ...item });\r\n                        mappingGridData.push({ ...item });\r\n                    });\r\n                              \r\n                this.setState({  addDesignParam, gridData,\r\n                    addMappingParam, mappingGridData,\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    isOpen: false\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            let chartSeries = [...this.state.chartSeries];\r\n\r\n            chartSeries[0].xField = this.props.Login.selectedRecord.xColumnName;\r\n            if (this.props.Login.selectedRecord[\"ncharttypecode\"] && this.props.Login.selectedRecord[\"ncharttypecode\"].value === chartType.BUBBLE) {\r\n                chartSeries[0].yField = this.props.Login.selectedRecord.sizeField;\r\n            }\r\n            else {\r\n                chartSeries[0].yField = this.props.Login.selectedRecord.yColumnName;\r\n            }\r\n\r\n\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.SqlColumns !== previousProps.Login.SqlColumns) {\r\n            let newXCols = [];\r\n            let newYCols = [];\r\n\r\n            if (this.props.Login.operation === \"update\") {\r\n                if (this.props.Login.selectedRecord[\"ncharttypecode\"] && (this.props.Login.selectedRecord[\"ncharttypecode\"].value === chartType.PIECHART ||\r\n                    this.props.Login.selectedRecord[\"ncharttypecode\"].value === chartType.DONUT)) {\r\n\r\n                    this.props.Login.selectedRecord[\"field\"] && this.props.Login.selectedRecord[\"field\"].value !== undefined ?\r\n\r\n                        newYCols = this.props.Login.SqlColumns.ySeriesColumns.filter(item => ![this.props.Login.selectedRecord[\"field\"].value].includes(item.value))\r\n                        :\r\n                        newYCols = this.props.Login.SqlColumns.ySeriesColumns\r\n\r\n                    if (this.props.Login.selectedRecord[\"nameField\"] && this.props.Login.selectedRecord[\"nameField\"].value !== undefined) {\r\n\r\n                        newXCols = this.props.Login.SqlColumns.xSeriesColumns.filter(item => ![this.props.Login.selectedRecord[\"nameField\"].value].includes(item.value))\r\n                    }\r\n                    else {\r\n                        newXCols = this.props.Login.SqlColumns.xSeriesColumns\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.props.Login.selectedRecord[\"xColumnName\"] && this.props.Login.selectedRecord[\"xColumnName\"].value !== undefined ?\r\n\r\n                        newYCols = this.props.Login.SqlColumns.ySeriesColumns.filter(item => ![this.props.Login.selectedRecord[\"xColumnName\"].value].includes(item.value))\r\n                        :\r\n                        newYCols = this.props.Login.SqlColumns.ySeriesColumns\r\n\r\n                    if (this.props.Login.selectedRecord[\"yColumnName\"] && this.props.Login.selectedRecord[\"yColumnName\"].length >= 0) {\r\n                        newXCols = this.props.Login.SqlColumns.xSeriesColumns.filter(item => !this.props.Login.selectedRecord[\"yColumnName\"].some(itemValue => itemValue.value === item.value))\r\n                    }\r\n                    else {\r\n                        newXCols = this.props.Login.SqlColumns.xSeriesColumns\r\n                    }\r\n\r\n                }\r\n                this.setState({ sqlColumns: { xSeriesColumns: newXCols, ySeriesColumns: newYCols } });\r\n            }\r\n            else {\r\n                this.setState({ sqlColumns: this.props.Login.SqlColumns });\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.xSeriesColumns !== previousProps.Login.xSeriesColumns) {\r\n            this.setState({ xSeriesColumns: this.props.Login.xSeriesColumns });\r\n        }\r\n        if (this.props.Login.ySeriesColumns !== previousProps.Login.ySeriesColumns) {\r\n            this.setState({ ySeriesColumns: this.props.Login.ySeriesColumns });\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, fetchRecordDashBoardType, selectCheckBoxDashBoardTypes, getSqlQueryDataService,\r\n        getSqlQueryColumns, getAddDashboardDesign, getDashBoardParameterMappingComboService, updateStore,\r\n        validateEsignCredential, filterColumnData, checkParametersAvailableForDefaultValue,\r\n        getReportViewChildDataListForDashBoard, //showDefaultValueInDataGrid, \r\n        updateDashBoarddesignDefaultValue\r\n    })(injectIntl(DashBoardTypes));"]},"metadata":{},"sourceType":"module"}