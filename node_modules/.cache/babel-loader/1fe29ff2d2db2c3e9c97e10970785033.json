{"ast":null,"code":"import React from'react';import{Form,Image}from'react-bootstrap';import{ReactComponent as Manufacturer}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/manufacturer.svg\";import{ReactComponent as DiscountBand}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/discount band.svg\";import{ReactComponent as VATBand}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/vat band.svg\";import{ReactComponent as OEM}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/oem.svg\";import{ReactComponent as Quotation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/quotation.svg\";import{ReactComponent as SampleRegistration}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample registration.svg\";import{ReactComponent as JobAllocation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/job allocation.svg\";import{ReactComponent as Worklist}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/worklist.svg\";import{ReactComponent as MyJobs}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/my jobs.svg\";import{ReactComponent as RunBatchCreation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/run batch creation.svg\";import{ReactComponent as ResultEntry}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/result entry.svg\";import{ReactComponent as TestApproval}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test approval.svg\";import{ReactComponent as StorageCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage category.svg\";import{ReactComponent as ChainofCustody}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/chain of custody.svg\";import{ReactComponent as ReleaseReport}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/release.svg\";import{ReactComponent as Reason}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reason.svg\";import{ReactComponent as UnitofMeasurement}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/unit of measurement.svg\";import{ReactComponent as StorageCondition}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage condition.svg\";import{ReactComponent as StorageLocation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage location.svg\";import{ReactComponent as ContainerType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/container type.svg\";import{ReactComponent as Barcode}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/barcode.svg\";import{ReactComponent as SampleTestComments}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample test comments.svg\";import{ReactComponent as RegistrationType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/registration type.svg\";import{ReactComponent as RegistrationSubType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/registration sub type.svg\";import{ReactComponent as TemplateDesign}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template design.svg\";import{ReactComponent as TemplateMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template mapping.svg\";import{ReactComponent as UserRoleTemplate}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role template.svg\";import{ReactComponent as ApprovalConfiguration}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/approval configuration.svg\";import{ReactComponent as FTPConfig}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/ftp config.svg\";import{ReactComponent as UserMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user mapping.svg\";import{ReactComponent as Language}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/language.svg\";import{ReactComponent as Designation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/designation.svg\";import{ReactComponent as PasswordPolicy}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/password policy.svg\";import{ReactComponent as ScreenRights}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/screen rights.svg\";import{ReactComponent as UserRole}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role template.svg\";import{ReactComponent as Users}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/users.svg\";import{ReactComponent as MISRights}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mis rights.svg\";import{ReactComponent as AuditTrail}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/audit trail.svg\";import{ReactComponent as UserRoleConfiguration}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role configuration.svg\";import{ReactComponent as ExceptionLogs}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/exception logs.svg\";import{ReactComponent as LIMSELNSiteMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lims eln sitemapping.svg\";import{ReactComponent as LIMSELNUserMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lims eln usermapping.svg\";import{ReactComponent as Site}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/site.svg\";import{ReactComponent as Department}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/department.svg\";import{ReactComponent as Lab}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lab.svg\";import{ReactComponent as Section}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/section.svg\";import{ReactComponent as Organisation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/organisation.svg\";import{ReactComponent as MethodCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/method category.svg\";import{ReactComponent as Method}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/method.svg\";import{ReactComponent as TestCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test category.svg\";import{ReactComponent as TestMaster}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test master.svg\";import{ReactComponent as TestPricing}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test pricing.svg\";import{ReactComponent as TemplateMaster}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template master.svg\";import{ReactComponent as TestGroup}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test group.svg\";import{ReactComponent as InstrumentCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/instrument category.svg\";import{ReactComponent as Instrument}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/instrument.svg\";import{ReactComponent as MaterialCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material category.svg\";import{ReactComponent as Material}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material.svg\";import{ReactComponent as MaterialInventory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/materialinventory.svg\";import{ReactComponent as MaterialGrade}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material grade.svg\";import{ReactComponent as QBCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/qb category.svg\";import{ReactComponent as QB}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/qb.svg\";import{ReactComponent as Checklist}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/checklist.svg\";import{ReactComponent as Country}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/country.svg\";import{ReactComponent as SupplierCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/supplier category.svg\";import{ReactComponent as Supplier}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/supplier.svg\";import{ReactComponent as ClientCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/client category.svg\";import{ReactComponent as Client}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/client.svg\";import{ReactComponent as Courier}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/courier.svg\";import{ReactComponent as SampleCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample category.svg\";import{ReactComponent as SampleType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/product.svg\";import{ReactComponent as Component}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/component.svg\";import{ReactComponent as ReportDesigner}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/report designer.svg\";import{ReactComponent as Region}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/region.svg\";import{ReactComponent as District}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/district.svg\";import{ReactComponent as City}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/city.svg\";import{ReactComponent as InstitutionCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution category.svg\";import{ReactComponent as Institution}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution.svg\";import{ReactComponent as InstitutionDepartment}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution department.svg\";import{ReactComponent as Submitter}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/submitter.svg\";import{ReactComponent as PatientMaster}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/patient master.svg\";import{ReactComponent as ProjectType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project type.svg\";import{ReactComponent as ProjectMaster}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project master.svg\";import{ReactComponent as ProjectView}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project view.svg\";import{ReactComponent as ReportingTool}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/stimulsoft.svg\";import{ReactComponent as Reports}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reports.svg\";import{ReactComponent as SqlBuilder}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sql builder.svg\";import{ReactComponent as DashboardTypes}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard types.svg\";import{ReactComponent as DashboardView}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard view.svg\";import{ReactComponent as DashboardHomeConfig}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard home config.svg\";import{ReactComponent as AlertView}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/alert view.svg\";import{ReactComponent as QueryBuilder}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/query builder.svg\";import{ReactComponent as Technique}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/technique.svg\";import{ReactComponent as TrainingCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training category.svg\";import{ReactComponent as TrainingCertification}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training & certification.svg\";import{ReactComponent as TrainingUpdate}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training update.svg\";import{ReactComponent as ReScheduleLog}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reschedule log.svg\";import{ReactComponent as UserView}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user view.svg\";import{ReactComponent as GoodsIn}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/goods in.svg\";import{ReactComponent as MailHost}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail host.svg\";import{ReactComponent as MailTemplate}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail template.svg\";import{ReactComponent as MailConfig}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail config.svg\";import{ReactComponent as MailAlertTransaction}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail alert transaction.svg\";import{ReactComponent as MailStatus}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail status.svg\";import{ReactComponent as StorageStructure}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample storage structure.svg\";import{ReactComponent as InterfacerMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Interfacer Mapping.svg\";import{ReactComponent as InstrumentLocation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Instrument Location.svg\";import{ReactComponent as SyncHistory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sync History.svg\";import{ReactComponent as SampleCycle}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample cycle.svg\";import{ReactComponent as SampleCollectionType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Collection Type.svg\";import{ReactComponent as ContainerStructure}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Container Structure.svg\";import{ReactComponent as MaterialRetrievalCertificate}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Material Retrieval Certificate.svg\";import{ReactComponent as SampleStorageMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Storage Mapping.svg\";import{ReactComponent as SampleStorage}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Storage.svg\";import{ReactComponent as SampleListPreparation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample List preparation.svg\";import{ReactComponent as SampleRetrievalandDisposal}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Retrieval and Disposal.svg\";import{ReactComponent as VisitNumber}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/visit number.svg\";import{ReactComponent as SampleDonor}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Donor.svg\";import{ReactComponent as PatientCategory}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Patient Category.svg\";import{ReactComponent as CollectionTubType}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Collection tube type.svg\";import{ReactComponent as StudyIdentity}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Study Identity.svg\";import{ReactComponent as CollectionSite}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Collection Site.svg\";import{ReactComponent as SamplePunchSite}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Punch Site.svg\";import{ReactComponent as ContainerRelocation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Container Relocation.svg\";import{ReactComponent as PlantGroup}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Plant Group.svg\";import{ReactComponent as FusionPlant}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Plant.svg\";import{ReactComponent as FusionSite}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Site.svg\";import{ReactComponent as FusionUsers}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Users.svg\";import{ReactComponent as FusionPlantUser}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Plant User.svg\";import{ReactComponent as SampleGroup}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Group.svg\";import{ReactComponent as SamplePlantMapping}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Plant Mapping.svg\";import{ReactComponent as HolidayPlanner}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/holiday planner.svg\";import{ReactComponent as BarcodeTemplate}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/barcode template.svg\";import{ReactComponent as BarcodeConfiguration}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/barcode configuration.svg\";import{ReactComponent as UnitConversion}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/unit conversion.svg\";import{ReactComponent as SampleAppearence}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample appearance.svg\";import{ReactComponent as ADSSettings}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/ads settings.svg\";import{ReactComponent as ADSUsers}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/ads users.svg\";import{ReactComponent as TransactionFilterConfig}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/transaction filter config.svg\";import{ReactComponent as TransactionUser}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Transaactionnn user.svg\";import{ReactComponent as CalenderProperties}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/calender properties.svg\";var _require=require(\"@fortawesome/free-solid-svg-icons\"),faAd=_require.faAd,faMagic=_require.faMagic,faUniversity=_require.faUniversity,faAddressBook=_require.faAddressBook;var _require2=require(\"@fortawesome/react-fontawesome\"),FontAwesomeIcon=_require2.FontAwesomeIcon;var FormsIcon=function FormsIcon(props){switch(props.form.nformcode){case 2:return/*#__PURE__*/React.createElement(Manufacturer,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 3:return/*#__PURE__*/React.createElement(Users,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 5:return/*#__PURE__*/React.createElement(Country,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 7:return/*#__PURE__*/React.createElement(GoodsIn,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 8:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 15:return/*#__PURE__*/React.createElement(Component,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 20:return/*#__PURE__*/React.createElement(ClientCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 21:return/*#__PURE__*/React.createElement(MethodCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 22:return/*#__PURE__*/React.createElement(Method,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 23:return/*#__PURE__*/React.createElement(MaterialCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 24:return/*#__PURE__*/React.createElement(SampleCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 25:return/*#__PURE__*/React.createElement(TestCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 27:return/*#__PURE__*/React.createElement(InstrumentCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 28:return/*#__PURE__*/React.createElement(Instrument,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 29:return/*#__PURE__*/React.createElement(Site,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 30:return/*#__PURE__*/React.createElement(Department,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 31:return/*#__PURE__*/React.createElement(Section,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 32:return/*#__PURE__*/React.createElement(Lab,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 33:return/*#__PURE__*/React.createElement(UnitofMeasurement,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 34:return/*#__PURE__*/React.createElement(StorageCondition,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 35:return/*#__PURE__*/React.createElement(StorageLocation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 36:return/*#__PURE__*/React.createElement(Designation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 39:return/*#__PURE__*/React.createElement(SampleType,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 40:return/*#__PURE__*/React.createElement(Material,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 41:return/*#__PURE__*/React.createElement(TestMaster,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 43:return/*#__PURE__*/React.createElement(SampleRegistration,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 45:return/*#__PURE__*/React.createElement(ContainerType,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 47:return/*#__PURE__*/React.createElement(SupplierCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 48:return/*#__PURE__*/React.createElement(Supplier,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 49:return/*#__PURE__*/React.createElement(Courier,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 50:return/*#__PURE__*/React.createElement(Client,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 51:return/*#__PURE__*/React.createElement(PasswordPolicy,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 52:return/*#__PURE__*/React.createElement(ScreenRights,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 54:return/*#__PURE__*/React.createElement(Organisation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 55:return/*#__PURE__*/React.createElement(ApprovalConfiguration,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 56:return/*#__PURE__*/React.createElement(ResultEntry,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 57:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 58:return/*#__PURE__*/React.createElement(UserRoleTemplate,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 60:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 61:return/*#__PURE__*/React.createElement(TestApproval,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 62:return/*#__PURE__*/React.createElement(TestGroup,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 63:return/*#__PURE__*/React.createElement(TemplateMaster,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 64:return/*#__PURE__*/React.createElement(QBCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 65:return/*#__PURE__*/React.createElement(QB,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 66:return/*#__PURE__*/React.createElement(Checklist,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 67:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 70:return/*#__PURE__*/React.createElement(UserRole,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 74:return/*#__PURE__*/React.createElement(MailHost,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 75:return/*#__PURE__*/React.createElement(MailTemplate,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 76:return/*#__PURE__*/React.createElement(MailConfig,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 77:return/*#__PURE__*/React.createElement(ReportDesigner,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 78:return/*#__PURE__*/React.createElement(AuditTrail,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 81:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 82:return/*#__PURE__*/React.createElement(DashboardTypes,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 83:return/*#__PURE__*/React.createElement(SqlBuilder,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 86:return/*#__PURE__*/React.createElement(Technique,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 87:return/*#__PURE__*/React.createElement(TrainingCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 88:return/*#__PURE__*/React.createElement(TrainingCertification,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 89:return/*#__PURE__*/React.createElement(TrainingUpdate,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 95:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 96:return/*#__PURE__*/React.createElement(UserView,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 98:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 107:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 108:return/*#__PURE__*/React.createElement(Barcode,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 110:return/*#__PURE__*/React.createElement(JobAllocation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 111:return/*#__PURE__*/React.createElement(FTPConfig,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 112:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 113:return/*#__PURE__*/React.createElement(TestPricing,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 114:return/*#__PURE__*/React.createElement(MailAlertTransaction,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 115:return/*#__PURE__*/React.createElement(MailStatus,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 117:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 118:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 119:return/*#__PURE__*/React.createElement(UserRoleConfiguration,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 121:return/*#__PURE__*/React.createElement(Reports,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 123:return/*#__PURE__*/React.createElement(DashboardView,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 124:return/*#__PURE__*/React.createElement(DashboardHomeConfig,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 125:return/*#__PURE__*/React.createElement(AlertView,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 126:return/*#__PURE__*/React.createElement(UserMapping,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 130:return/*#__PURE__*/React.createElement(MISRights,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 131:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 132:return/*#__PURE__*/React.createElement(TemplateDesign,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 133:return/*#__PURE__*/React.createElement(RegistrationType,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 134:return/*#__PURE__*/React.createElement(TemplateMapping,null);case 135:return/*#__PURE__*/React.createElement(RegistrationSubType,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 136:return/*#__PURE__*/React.createElement(ReScheduleLog,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 137:return/*#__PURE__*/React.createElement(PatientMaster,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 138:return/*#__PURE__*/React.createElement(MaterialInventory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 140:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 141:return/*#__PURE__*/React.createElement(SampleTestComments,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 142:return/*#__PURE__*/React.createElement(MyJobs,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 143:return/*#__PURE__*/React.createElement(ReleaseReport,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 144:return/*#__PURE__*/React.createElement(QueryBuilder,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 145:return/*#__PURE__*/React.createElement(ExceptionLogs,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 146:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 147:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 148:return/*#__PURE__*/React.createElement(Language,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 149:return/*#__PURE__*/React.createElement(InstitutionDepartment,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 150:return/*#__PURE__*/React.createElement(City,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 151:return/*#__PURE__*/React.createElement(InstitutionCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 152:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 153:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 154:return/*#__PURE__*/React.createElement(StorageCategory,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 156:return/*#__PURE__*/React.createElement(MaterialGrade,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 158:return/*#__PURE__*/React.createElement(Institution,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 159:return/*#__PURE__*/React.createElement(Submitter,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 160:return/*#__PURE__*/React.createElement(Region,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 161:return/*#__PURE__*/React.createElement(District,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 162:return/*#__PURE__*/React.createElement(Reason,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 163:return/*#__PURE__*/React.createElement(ProjectType,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 164:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 165:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 166:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 167:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 168:return/*#__PURE__*/React.createElement(StorageStructure,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 169:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 170:return/*#__PURE__*/React.createElement(ReportingTool,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 171:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 172:return/*#__PURE__*/React.createElement(ProjectMaster,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 173:return/*#__PURE__*/React.createElement(Worklist,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 174:return/*#__PURE__*/React.createElement(RunBatchCreation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 175:return/*#__PURE__*/React.createElement(ChainofCustody,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 176:return/*#__PURE__*/React.createElement(DiscountBand,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 177:return/*#__PURE__*/React.createElement(Quotation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 178:return/*#__PURE__*/React.createElement(VATBand,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 179:return/*#__PURE__*/React.createElement(ProjectView,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 180:return/*#__PURE__*/React.createElement(LIMSELNUserMapping,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 181:return/*#__PURE__*/React.createElement(LIMSELNSiteMapping,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 182:return/*#__PURE__*/React.createElement(OEM,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 183:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 184:return/*#__PURE__*/React.createElement(Image,{src:require(\"../../assets/image/forms-icon/\".concat(props.form.sformname.toLowerCase(),\".svg\")),alt:\"sidebar\",height:\"60\"});break;case 185:return/*#__PURE__*/React.createElement(InstrumentLocation,null);break;case 187:return/*#__PURE__*/React.createElement(CollectionTubType,null);break;case 188:return/*#__PURE__*/React.createElement(PatientCategory,null);break;case 189:return/*#__PURE__*/React.createElement(SampleCycle,null);break;case 190:return/*#__PURE__*/React.createElement(SampleCollectionType,null);break;case 191:return/*#__PURE__*/React.createElement(SampleDonor,null);break;case 192:return/*#__PURE__*/React.createElement(StudyIdentity,null);break;case 193:return/*#__PURE__*/React.createElement(CollectionSite,null);break;case 194:return/*#__PURE__*/React.createElement(SamplePunchSite,null);break;case 195:return/*#__PURE__*/React.createElement(VisitNumber,null);break;case 196:return/*#__PURE__*/React.createElement(SyncHistory,null);break;case 197:return/*#__PURE__*/React.createElement(SampleStorageMapping,null);break;case 198:return/*#__PURE__*/React.createElement(SampleListPreparation,null);break;case 199:return/*#__PURE__*/React.createElement(SampleStorage,null);break;case 200:return/*#__PURE__*/React.createElement(InterfacerMapping,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 201:return/*#__PURE__*/React.createElement(ContainerStructure,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 202:return/*#__PURE__*/React.createElement(MaterialRetrievalCertificate,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 203:return/*#__PURE__*/React.createElement(SampleRetrievalandDisposal,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 208:return/*#__PURE__*/React.createElement(ContainerRelocation,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 210:return/*#__PURE__*/React.createElement(FusionPlant,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 211:return/*#__PURE__*/React.createElement(FusionSite,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 212:return/*#__PURE__*/React.createElement(FusionUsers,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 213:return/*#__PURE__*/React.createElement(SampleGroup,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 215:return/*#__PURE__*/React.createElement(PlantGroup,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 209:return/*#__PURE__*/React.createElement(FusionPlantUser,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 219:return/*#__PURE__*/React.createElement(SamplePlantMapping,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 127:return/*#__PURE__*/React.createElement(HolidayPlanner,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 204:return/*#__PURE__*/React.createElement(BarcodeTemplate,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 205:return/*#__PURE__*/React.createElement(BarcodeConfiguration,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 206:return/*#__PURE__*/React.createElement(UnitConversion,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 207:return/*#__PURE__*/React.createElement(SampleAppearence,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 214:return/*#__PURE__*/React.createElement(ADSSettings,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 216:return/*#__PURE__*/React.createElement(ADSUsers,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 224:return/*#__PURE__*/React.createElement(TransactionFilterConfig,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 225:return/*#__PURE__*/React.createElement(TransactionUser,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;case 226:return/*#__PURE__*/React.createElement(CalenderProperties,null);// <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\nbreak;default:return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{className:\"home-default-icon\"},props.form['sdisplayname'].substring(0,1).toUpperCase()));break;}};export default FormsIcon;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/home/FormIcon.js"],"names":["React","Form","Image","require","faAd","faMagic","faUniversity","faAddressBook","FontAwesomeIcon","FormsIcon","props","form","nformcode","sformname","toLowerCase","substring","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Image } from 'react-bootstrap'\r\nimport { ReactComponent as Manufacturer } from '../../assets/image/forms-icon/manufacturer.svg';\r\nimport { ReactComponent as DiscountBand } from '../../assets/image/forms-icon/discount band.svg';\r\nimport { ReactComponent as VATBand } from '../../assets/image/forms-icon/vat band.svg';\r\nimport { ReactComponent as OEM } from '../../assets/image/forms-icon/oem.svg';\r\nimport { ReactComponent as Quotation } from '../../assets/image/forms-icon/quotation.svg';\r\nimport { ReactComponent as SampleRegistration } from '../../assets/image/forms-icon/sample registration.svg';            \r\nimport { ReactComponent as JobAllocation} from '../../assets/image/forms-icon/job allocation.svg';            \r\nimport { ReactComponent as Worklist} from '../../assets/image/forms-icon/worklist.svg';             \r\nimport { ReactComponent as MyJobs} from '../../assets/image/forms-icon/my jobs.svg';             \r\nimport { ReactComponent as RunBatchCreation} from '../../assets/image/forms-icon/run batch creation.svg';             \r\nimport { ReactComponent as ResultEntry} from '../../assets/image/forms-icon/result entry.svg';             \r\nimport { ReactComponent as TestApproval} from '../../assets/image/forms-icon/test approval.svg';             \r\nimport { ReactComponent as StorageCategory} from '../../assets/image/forms-icon/storage category.svg';             \r\nimport { ReactComponent as ChainofCustody} from '../../assets/image/forms-icon/chain of custody.svg';             \r\nimport { ReactComponent as ReleaseReport} from '../../assets/image/forms-icon/release.svg';             \r\nimport { ReactComponent as Reason} from '../../assets/image/forms-icon/reason.svg';             \r\nimport { ReactComponent as UnitofMeasurement} from '../../assets/image/forms-icon/unit of measurement.svg';             \r\nimport { ReactComponent as StorageCondition} from '../../assets/image/forms-icon/storage condition.svg';              \r\nimport { ReactComponent as StorageLocation} from '../../assets/image/forms-icon/storage location.svg';              \r\nimport { ReactComponent as ContainerType} from '../../assets/image/forms-icon/container type.svg';              \r\nimport { ReactComponent as Barcode} from '../../assets/image/forms-icon/barcode.svg';              \r\nimport { ReactComponent as SampleTestComments} from '../../assets/image/forms-icon/sample test comments.svg';              \r\nimport { ReactComponent as RegistrationType} from '../../assets/image/forms-icon/registration type.svg';              \r\nimport { ReactComponent as RegistrationSubType} from '../../assets/image/forms-icon/registration sub type.svg';              \r\nimport { ReactComponent as TemplateDesign} from '../../assets/image/forms-icon/template design.svg';              \r\nimport { ReactComponent as TemplateMapping} from '../../assets/image/forms-icon/template mapping.svg';              \r\nimport { ReactComponent as UserRoleTemplate} from '../../assets/image/forms-icon/user role template.svg';              \r\nimport { ReactComponent as ApprovalConfiguration} from '../../assets/image/forms-icon/approval configuration.svg';              \r\nimport { ReactComponent as FTPConfig} from '../../assets/image/forms-icon/ftp config.svg';              \r\nimport { ReactComponent as UserMapping} from '../../assets/image/forms-icon/user mapping.svg';              \r\nimport { ReactComponent as Language} from '../../assets/image/forms-icon/language.svg';              \r\nimport { ReactComponent as Designation} from '../../assets/image/forms-icon/designation.svg';              \r\nimport { ReactComponent as PasswordPolicy} from '../../assets/image/forms-icon/password policy.svg';              \r\nimport { ReactComponent as ScreenRights} from '../../assets/image/forms-icon/screen rights.svg';              \r\nimport { ReactComponent as UserRole} from '../../assets/image/forms-icon/user role template.svg';              \r\nimport { ReactComponent as Users} from '../../assets/image/forms-icon/users.svg';              \r\nimport { ReactComponent as MISRights} from '../../assets/image/forms-icon/mis rights.svg';              \r\nimport { ReactComponent as AuditTrail} from '../../assets/image/forms-icon/audit trail.svg';              \r\nimport { ReactComponent as UserRoleConfiguration} from '../../assets/image/forms-icon/user role configuration.svg';              \r\nimport { ReactComponent as ExceptionLogs} from '../../assets/image/forms-icon/exception logs.svg';              \r\nimport { ReactComponent as LIMSELNSiteMapping} from '../../assets/image/forms-icon/lims eln sitemapping.svg';              \r\nimport { ReactComponent as LIMSELNUserMapping} from '../../assets/image/forms-icon/lims eln usermapping.svg';              \r\nimport { ReactComponent as Site} from '../../assets/image/forms-icon/site.svg';              \r\nimport { ReactComponent as Department} from '../../assets/image/forms-icon/department.svg';              \r\nimport { ReactComponent as Lab} from '../../assets/image/forms-icon/lab.svg';              \r\nimport { ReactComponent as Section} from '../../assets/image/forms-icon/section.svg';              \r\nimport { ReactComponent as Organisation} from '../../assets/image/forms-icon/organisation.svg';              \r\nimport { ReactComponent as MethodCategory} from '../../assets/image/forms-icon/method category.svg';              \r\nimport { ReactComponent as Method} from '../../assets/image/forms-icon/method.svg';              \r\nimport { ReactComponent as TestCategory} from '../../assets/image/forms-icon/test category.svg';              \r\nimport { ReactComponent as TestMaster} from '../../assets/image/forms-icon/test master.svg';              \r\nimport { ReactComponent as TestPricing} from '../../assets/image/forms-icon/test pricing.svg';              \r\nimport { ReactComponent as TemplateMaster} from '../../assets/image/forms-icon/template master.svg';              \r\nimport { ReactComponent as TestGroup} from '../../assets/image/forms-icon/test group.svg';              \r\nimport { ReactComponent as InstrumentCategory} from '../../assets/image/forms-icon/instrument category.svg';              \r\nimport { ReactComponent as Instrument} from '../../assets/image/forms-icon/instrument.svg';              \r\nimport { ReactComponent as MaterialCategory} from '../../assets/image/forms-icon/material category.svg';              \r\nimport { ReactComponent as Material} from '../../assets/image/forms-icon/material.svg';              \r\nimport { ReactComponent as MaterialInventory} from '../../assets/image/forms-icon/materialinventory.svg';              \r\nimport { ReactComponent as MaterialGrade} from '../../assets/image/forms-icon/material grade.svg';              \r\nimport { ReactComponent as QBCategory} from '../../assets/image/forms-icon/qb category.svg';              \r\nimport { ReactComponent as QB} from '../../assets/image/forms-icon/qb.svg';              \r\nimport { ReactComponent as Checklist} from '../../assets/image/forms-icon/checklist.svg';              \r\nimport { ReactComponent as Country} from '../../assets/image/forms-icon/country.svg';              \r\nimport { ReactComponent as SupplierCategory} from '../../assets/image/forms-icon/supplier category.svg';              \r\nimport { ReactComponent as Supplier} from '../../assets/image/forms-icon/supplier.svg';              \r\nimport { ReactComponent as ClientCategory} from '../../assets/image/forms-icon/client category.svg';              \r\nimport { ReactComponent as Client} from '../../assets/image/forms-icon/client.svg';              \r\nimport { ReactComponent as Courier} from '../../assets/image/forms-icon/courier.svg';              \r\nimport { ReactComponent as SampleCategory} from '../../assets/image/forms-icon/sample category.svg';              \r\nimport { ReactComponent as SampleType} from '../../assets/image/forms-icon/product.svg';              \r\nimport { ReactComponent as Component} from '../../assets/image/forms-icon/component.svg';              \r\nimport { ReactComponent as ReportDesigner} from '../../assets/image/forms-icon/report designer.svg';              \r\nimport { ReactComponent as Region} from '../../assets/image/forms-icon/region.svg';              \r\nimport { ReactComponent as District} from '../../assets/image/forms-icon/district.svg';              \r\nimport { ReactComponent as City} from '../../assets/image/forms-icon/city.svg';              \r\nimport { ReactComponent as InstitutionCategory} from '../../assets/image/forms-icon/institution category.svg';              \r\nimport { ReactComponent as Institution} from '../../assets/image/forms-icon/institution.svg';              \r\nimport { ReactComponent as InstitutionDepartment} from '../../assets/image/forms-icon/institution department.svg';              \r\nimport { ReactComponent as Submitter} from '../../assets/image/forms-icon/submitter.svg';              \r\nimport { ReactComponent as PatientMaster} from '../../assets/image/forms-icon/patient master.svg';              \r\nimport { ReactComponent as ProjectType} from '../../assets/image/forms-icon/project type.svg';           \r\nimport { ReactComponent as ProjectMaster} from '../../assets/image/forms-icon/project master.svg';             \r\nimport { ReactComponent as ProjectView} from '../../assets/image/forms-icon/project view.svg';              \r\nimport { ReactComponent as ReportingTool} from '../../assets/image/forms-icon/stimulsoft.svg';              \r\nimport { ReactComponent as Reports} from '../../assets/image/forms-icon/reports.svg';              \r\nimport { ReactComponent as SqlBuilder} from '../../assets/image/forms-icon/sql builder.svg';              \r\nimport { ReactComponent as DashboardTypes} from '../../assets/image/forms-icon/dashboard types.svg';              \r\nimport { ReactComponent as DashboardView} from '../../assets/image/forms-icon/dashboard view.svg';              \r\nimport { ReactComponent as DashboardHomeConfig} from '../../assets/image/forms-icon/dashboard home config.svg';              \r\nimport { ReactComponent as AlertView} from '../../assets/image/forms-icon/alert view.svg';              \r\nimport { ReactComponent as QueryBuilder} from '../../assets/image/forms-icon/query builder.svg';              \r\nimport { ReactComponent as Technique} from '../../assets/image/forms-icon/technique.svg';              \r\nimport { ReactComponent as TrainingCategory} from '../../assets/image/forms-icon/training category.svg';              \r\nimport { ReactComponent as TrainingCertification} from '../../assets/image/forms-icon/training & certification.svg';              \r\nimport { ReactComponent as TrainingUpdate} from '../../assets/image/forms-icon/training update.svg';              \r\nimport { ReactComponent as ReScheduleLog} from '../../assets/image/forms-icon/reschedule log.svg';              \r\nimport { ReactComponent as UserView} from '../../assets/image/forms-icon/user view.svg';              \r\nimport { ReactComponent as GoodsIn} from '../../assets/image/forms-icon/goods in.svg';              \r\nimport { ReactComponent as MailHost} from '../../assets/image/forms-icon/mail host.svg';              \r\nimport { ReactComponent as MailTemplate} from '../../assets/image/forms-icon/mail template.svg';              \r\nimport { ReactComponent as MailConfig} from '../../assets/image/forms-icon/mail config.svg';              \r\nimport { ReactComponent as MailAlertTransaction} from '../../assets/image/forms-icon/mail alert transaction.svg';              \r\nimport { ReactComponent as MailStatus} from '../../assets/image/forms-icon/mail status.svg';              \r\nimport { ReactComponent as StorageStructure} from '../../assets/image/forms-icon/sample storage structure.svg';              \r\nimport { ReactComponent as InterfacerMapping} from '../../assets/image/forms-icon/Interfacer Mapping.svg';              \r\nimport { ReactComponent as InstrumentLocation} from '../../assets/image/forms-icon/Instrument Location.svg';              \r\nimport { ReactComponent as SyncHistory} from '../../assets/image/forms-icon/Sync History.svg';              \r\nimport { ReactComponent as SampleCycle} from '../../assets/image/forms-icon/sample cycle.svg';              \r\nimport { ReactComponent as SampleCollectionType} from '../../assets/image/forms-icon/Sample Collection Type.svg';                 \r\nimport { ReactComponent as ContainerStructure} from '../../assets/image/forms-icon/Container Structure.svg';              \r\nimport { ReactComponent as MaterialRetrievalCertificate} from '../../assets/image/forms-icon/Material Retrieval Certificate.svg';              \r\nimport { ReactComponent as SampleStorageMapping} from '../../assets/image/forms-icon/Sample Storage Mapping.svg';              \r\nimport { ReactComponent as SampleStorage} from '../../assets/image/forms-icon/Sample Storage.svg';       \r\nimport { ReactComponent as SampleListPreparation} from '../../assets/image/forms-icon/Sample List preparation.svg'; \r\nimport { ReactComponent as SampleRetrievalandDisposal} from '../../assets/image/forms-icon/Sample Retrieval and Disposal.svg'; \r\nimport { ReactComponent as VisitNumber} from '../../assets/image/forms-icon/visit number.svg'; \r\nimport { ReactComponent as SampleDonor} from '../../assets/image/forms-icon/Sample Donor.svg'; \r\nimport { ReactComponent as PatientCategory} from '../../assets/image/forms-icon/Patient Category.svg'; \r\nimport { ReactComponent as CollectionTubType} from '../../assets/image/forms-icon/Collection tube type.svg'; \r\nimport { ReactComponent as StudyIdentity} from '../../assets/image/forms-icon/Study Identity.svg'; \r\nimport { ReactComponent as CollectionSite} from '../../assets/image/forms-icon/Collection Site.svg'; \r\nimport { ReactComponent as SamplePunchSite} from '../../assets/image/forms-icon/Sample Punch Site.svg'; \r\nimport { ReactComponent as ContainerRelocation } from '../../assets/image/forms-icon/Container Relocation.svg'; \r\nimport { ReactComponent as PlantGroup } from '../../assets/image/forms-icon/Plant Group.svg'; \r\nimport { ReactComponent as FusionPlant  } from '../../assets/image/forms-icon/Fusion Plant.svg'; \r\nimport { ReactComponent as FusionSite  } from '../../assets/image/forms-icon/Fusion Site.svg'; \r\nimport { ReactComponent as FusionUsers  } from '../../assets/image/forms-icon/Fusion Users.svg'; \r\nimport { ReactComponent as FusionPlantUser  } from '../../assets/image/forms-icon/Fusion Plant User.svg'; \r\nimport { ReactComponent as SampleGroup  } from '../../assets/image/forms-icon/Sample Group.svg'; \r\nimport { ReactComponent as SamplePlantMapping  } from '../../assets/image/forms-icon/Sample Plant Mapping.svg'; \r\n\r\n\r\nimport { ReactComponent as HolidayPlanner  } from '../../assets/image/forms-icon/holiday planner.svg'; \r\nimport { ReactComponent as BarcodeTemplate  } from '../../assets/image/forms-icon/barcode template.svg'; \r\nimport { ReactComponent as BarcodeConfiguration   } from '../../assets/image/forms-icon/barcode configuration.svg'; \r\nimport { ReactComponent as UnitConversion  } from '../../assets/image/forms-icon/unit conversion.svg'; \r\nimport { ReactComponent as SampleAppearence  } from '../../assets/image/forms-icon/sample appearance.svg'; \r\nimport { ReactComponent as ADSSettings  } from '../../assets/image/forms-icon/ads settings.svg'; \r\nimport { ReactComponent as ADSUsers  } from '../../assets/image/forms-icon/ads users.svg'; \r\nimport { ReactComponent as TransactionFilterConfig  } from '../../assets/image/forms-icon/transaction filter config.svg'; \r\nimport { ReactComponent as TransactionUser  } from '../../assets/image/forms-icon/Transaactionnn user.svg'; \r\nimport { ReactComponent as CalenderProperties  } from '../../assets/image/forms-icon/calender properties.svg'; \r\n\r\nconst { faAd, faMagic, faUniversity, faAddressBook } = require(\"@fortawesome/free-solid-svg-icons\")\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\")\r\n\r\n\r\n\r\nconst FormsIcon = (props) => {\r\n    switch (props.form.nformcode) {            \r\n\r\n        case 2:\r\n            return   <Manufacturer />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 3:\r\n            return   <Users />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 5:\r\n            return   <Country />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 7:\r\n            return   <GoodsIn />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 8:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 15:\r\n            return   <Component />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 20:\r\n            return   <ClientCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 21:\r\n            return   <MethodCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 22:\r\n            return   <Method />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 23:\r\n            return   <MaterialCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 24:\r\n            return   <SampleCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 25:\r\n            return   <TestCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 27:\r\n            return   <InstrumentCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 28:\r\n            return   <Instrument />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 29:\r\n            return   <Site />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 30:\r\n            return   <Department />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 31:\r\n            return   <Section />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 32:\r\n            return   <Lab />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 33:\r\n            return   <UnitofMeasurement />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 34:\r\n            return   <StorageCondition />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 35:\r\n            return   <StorageLocation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 36:\r\n            return   <Designation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;   \r\n        \r\n        case 39:\r\n            return   <SampleType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 40:\r\n            return   <Material />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        \r\n        case 41:\r\n            return   <TestMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 43:\r\n            return   <SampleRegistration  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 45:\r\n            return   <ContainerType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 47:\r\n            return   <SupplierCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 48:\r\n            return   <Supplier />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 49:\r\n            return   <Courier />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 50:\r\n            return   <Client />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 51:\r\n            return   <PasswordPolicy />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 52:\r\n            return   <ScreenRights />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n\r\n        case 54:\r\n            return   <Organisation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 55:\r\n            return   <ApprovalConfiguration />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 56:\r\n            return   <ResultEntry  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 57:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 58:\r\n            return   <UserRoleTemplate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;    \r\n\r\n        case 60:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 61:\r\n            return   <TestApproval  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 62:\r\n            return   <TestGroup />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 63:\r\n            return   <TemplateMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n         case 64:\r\n            return   <QBCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n         case 65:\r\n            return   <QB />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 66:\r\n            return   <Checklist />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 67:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 70:\r\n            return   <UserRole />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 74:\r\n            return   <MailHost  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 75:\r\n            return   <MailTemplate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 76:\r\n            return   <MailConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 77:\r\n            return   <ReportDesigner />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 78:\r\n            return   <AuditTrail />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 81:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 82:\r\n            return   <DashboardTypes />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 83:\r\n            return   <SqlBuilder />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 86:\r\n            return   <Technique />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 87:\r\n            return   <TrainingCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;   \r\n\r\n        case 88:\r\n            return   <TrainingCertification />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;     \r\n\r\n        case 89:\r\n            return   <TrainingUpdate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;  \r\n            \r\n        case 95:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 96:\r\n            return   <UserView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 98:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 107:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 108:\r\n        return   <Barcode  />\r\n        // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n        break;\r\n\r\n        case 110:\r\n            return   <JobAllocation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 111:\r\n            return   <FTPConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 112:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 113:\r\n            return   <TestPricing/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 114:\r\n            return   <MailAlertTransaction />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 115:\r\n            return   <MailStatus  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 117:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n\r\n        case 118:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 119:\r\n            return   <UserRoleConfiguration />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 121:\r\n            return   <Reports />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 123:\r\n            return   <DashboardView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 124:\r\n            return   <DashboardHomeConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 125:\r\n            return   <AlertView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 126:\r\n            return   <UserMapping />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 130:\r\n            return   <MISRights />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 131:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;        \r\n        \r\n\r\n        case 132:\r\n            return   <TemplateDesign />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 133:\r\n            return   <RegistrationType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 134:\r\n            return   <TemplateMapping />            \r\n \r\n        case 135:\r\n            return   <RegistrationSubType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 136:\r\n            return   <ReScheduleLog/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 137:\r\n            return   <PatientMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 138:\r\n            return   <MaterialInventory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 140:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 141:\r\n            return   <SampleTestComments />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 142:\r\n            return   <MyJobs />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 143:\r\n            return   <ReleaseReport />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n                break;\r\n\r\n        case 144:\r\n            return   <QueryBuilder />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 145:\r\n            return   <ExceptionLogs />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 146:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 147:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 148:\r\n            return   <Language />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 149:\r\n            return   <InstitutionDepartment />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 150:\r\n            return   <City />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 151:\r\n            return   <InstitutionCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 152:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 153:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 154:\r\n            return   <StorageCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 156:\r\n            return   <MaterialGrade />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 158:\r\n            return   <Institution />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 159:\r\n            return   <Submitter />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 160:\r\n            return   <Region />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 161:\r\n            return   <District />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 162:\r\n            return   <Reason />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 163:\r\n            return   <ProjectType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 164:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 165:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 166:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 167:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 168:\r\n            return   <StorageStructure />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 169:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 170:\r\n            return   <ReportingTool />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n\r\n        case 171:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n\r\n        case 172:\r\n            return   <ProjectMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 173:\r\n            return   <Worklist />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 174:\r\n            return   <RunBatchCreation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 175:\r\n            return   <ChainofCustody />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 176:\r\n            return   <DiscountBand />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 177:\r\n            return   <Quotation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 178:\r\n            return   <VATBand />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 179:\r\n            return   <ProjectView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 180:\r\n            return   <LIMSELNUserMapping  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 181:\r\n            return   <LIMSELNSiteMapping />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 182:\r\n            return   <OEM  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 183:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 184:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            break; \r\n\r\n        case 185:\r\n            return   <InstrumentLocation />            \r\n            break; \r\n            \r\n        case 187:\r\n            return   <CollectionTubType />            \r\n            break;\r\n\r\n        case 188:\r\n            return   <PatientCategory />            \r\n            break;\r\n        \r\n        case 189:\r\n            return   <SampleCycle />            \r\n            break;\r\n\r\n        case 190:\r\n            return   <SampleCollectionType/>            \r\n            break;\r\n\r\n        case 191:\r\n            return   <SampleDonor/>            \r\n            break;\r\n\r\n        case 192:\r\n            return   <StudyIdentity/>            \r\n            break;\r\n\r\n        case 193:\r\n            return   <CollectionSite />            \r\n            break; \r\n\r\n        case 194:\r\n            return   <SamplePunchSite />            \r\n            break; \r\n            \r\n        case 195:\r\n            return   <VisitNumber />            \r\n            break; \r\n\r\n        case 196:\r\n            return   <SyncHistory />            \r\n            break;  \r\n            \r\n        case 197:\r\n            return   <SampleStorageMapping />            \r\n            break;  \r\n        \r\n        case 198:\r\n            return   <SampleListPreparation />            \r\n            break;\r\n\r\n        case 199:\r\n            return   <SampleStorage/>            \r\n            break;        \r\n        \r\n        case 200:\r\n            return   <InterfacerMapping/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;      \r\n        \r\n        case 201:\r\n            return   <ContainerStructure/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;  \r\n        \r\n        case 202:\r\n            return   <MaterialRetrievalCertificate/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 203:\r\n            return   <SampleRetrievalandDisposal/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 208:\r\n            return   <ContainerRelocation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 210:\r\n            return   <FusionPlant  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 211:\r\n            return   <FusionSite  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 212:\r\n            return   <FusionUsers  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 213:\r\n            return   <SampleGroup  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 215:\r\n            return   <PlantGroup  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 209:\r\n            return   <FusionPlantUser  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 219:\r\n            return   <SamplePlantMapping  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n\r\n        \r\n        case 127:\r\n            return   <HolidayPlanner   />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 204:\r\n            return   <BarcodeTemplate  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 205:\r\n            return   <BarcodeConfiguration   />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 206:\r\n            return   <UnitConversion  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 207:\r\n            return   <SampleAppearence  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 214:\r\n            return   <ADSSettings  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 216:\r\n            return   <ADSUsers   />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 224:\r\n            return   <TransactionFilterConfig   />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 225:\r\n            return   <TransactionUser  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n        \r\n        case 226:\r\n            return   <CalenderProperties   />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        default:\r\n            return   <>\r\n                        <span className='home-default-icon'>\r\n                            {/* <FontAwesomeIcon icon={faUniversity} size={props.size}/>  */}\r\n                            {props.form['sdisplayname'].substring(0, 1).toUpperCase()}\r\n                        </span>\r\n                    </>           \r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default FormsIcon;"]},"metadata":{},"sourceType":"module"}