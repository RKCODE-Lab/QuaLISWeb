{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\TestEditForm.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { MediaHeader } from '../../components/App.styles';\n\nconst TestEditForm = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.selecteRecord).length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }, \"Test: \", \" \" + props.selecteRecord.stestsynonym))) : \"\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SOURCE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isSearchable: false,\n    name: \"nsourcecode\",\n    isDisabled: false,\n    isMandatory: true,\n    options: props.sourceValues || [],\n    optionId: \"nsourcecode\",\n    optionValue: \"ssourcename\",\n    value: props.selecteRecord ? props.selecteRecord.nsourcecode : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboChange(event, 'nsourcecode'),\n    isMulti: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_METHOD\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isSearchable: false,\n    name: \"nmethodcode\",\n    isDisabled: false,\n    isMandatory: true,\n    options: props.methodValues || [],\n    optionId: \"nmethodcode\",\n    optionValue: \"smethodname\",\n    value: props.selecteRecord ? props.selecteRecord.nmethodcode : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboChange(event, 'nmethodcode'),\n    isMulti: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(TestEditForm);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/ResultEntryBySample/TestEditForm.jsx"],"names":["React","Row","Col","FormSelectSearch","injectIntl","MediaHeader","TestEditForm","props","Object","values","selecteRecord","length","stestsynonym","intl","formatMessage","id","sourceValues","nsourcecode","event","onComboChange","methodValues","nmethodcode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport { injectIntl } from 'react-intl';\r\nimport { MediaHeader } from '../../components/App.styles';\r\n\r\nconst TestEditForm = (props) => {\r\n    return (\r\n        <>\r\n            {\r\n                Object.values(props.selecteRecord).length > 0 ?\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>Test: {\" \" + props.selecteRecord.stestsynonym}</MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                    : \"\"\r\n            }\r\n\r\n            < Row >\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_SOURCE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"nsourcecode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.sourceValues || []}\r\n                        optionId='nsourcecode'\r\n                        optionValue='ssourcename'\r\n                        value={props.selecteRecord ? props.selecteRecord.nsourcecode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboChange(event, 'nsourcecode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_METHOD\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"nmethodcode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.methodValues || []}\r\n                        optionId='nmethodcode'\r\n                        optionValue='smethodname'\r\n                        value={props.selecteRecord ? props.selecteRecord.nmethodcode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboChange(event, 'nmethodcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n            </Row >\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(TestEditForm);\r\n"]},"metadata":{},"sourceType":"module"}