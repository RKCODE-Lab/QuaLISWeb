{"ast":null,"code":"import*as React from'react';import{injectIntl}from'react-intl';import{Row,Col,Form}from'react-bootstrap';import'@progress/kendo-react-animation';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var StorageMappingFilter=function StorageMappingFilter(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nstoragecategorycode\",formLabel:props.intl.formatMessage({id:\"IDS_STORAGECATEGORY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.storageCategoryOptions,value:props.selectedRecordFilter&&props.selectedRecordFilter[\"nstoragecategorycode\"]?props.selectedRecordFilter[\"nstoragecategorycode\"]:{},isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nstoragecategorycode',0);}})));};export default injectIntl(StorageMappingFilter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/StorageMappingFilter.jsx"],"names":["React","injectIntl","Row","Col","Form","FormSelectSearch","StorageMappingFilter","props","intl","formatMessage","id","storageCategoryOptions","selectedRecordFilter","event","onComboChange"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,MAAO,iCAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACpC,mBACI,oBAAC,GAAD,mBAEI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,sBADV,CAEI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,qBAAN,CAAzB,CAFf,CAGI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAHjB,CAII,OAAO,CAAEH,KAAK,CAACI,sBAJnB,CAKI,KAAK,CAAEJ,KAAK,CAACK,oBAAN,EACHL,KAAK,CAACK,oBAAN,CAA2B,sBAA3B,CADG,CAEHL,KAAK,CAACK,oBAAN,CAA2B,sBAA3B,CAFG,CAEkD,EAP7D,CAQI,WAAW,CAAE,KARjB,CASI,OAAO,CAAE,KATb,CAUI,YAAY,CAAE,IAVlB,CAWI,UAAU,CAAE,KAXhB,CAYI,iBAAiB,CAAE,IAZvB,CAaI,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,sBAA3B,CAAmD,CAAnD,CAAX,EAbd,EADJ,CAFJ,CADJ,CAyDH,CA1DD,CA2DA,cAAeZ,CAAAA,UAAU,CAACK,oBAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst StorageMappingFilter = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nstoragecategorycode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.storageCategoryOptions}\r\n                    value={props.selectedRecordFilter &&\r\n                        props.selectedRecordFilter[\"nstoragecategorycode\"] ?\r\n                        props.selectedRecordFilter[\"nstoragecategorycode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nstoragecategorycode', 0)}\r\n                />\r\n            </Col>\r\n\r\n            {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nsamplestoragelocationcode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.storageLocationOptions}\r\n                    value={props.selectedRecordFilter &&\r\n                        props.selectedRecordFilter[\"nsamplestoragelocationcode\"] ?\r\n                        props.selectedRecordFilter[\"nsamplestoragelocationcode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nsamplestoragelocationcode')}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nsamplestorageversioncode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGEVERSION\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.sampleStorageVersionOptions}\r\n                    value={props.selectedRecordFilter && props.selectedRecordFilter[\"nsamplestorageversioncode\"] ?\r\n                        props.selectedRecordFilter[\"nsamplestorageversioncode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nsamplestorageversioncode')}\r\n                />\r\n            </Col> */}\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(StorageMappingFilter);"]},"metadata":{},"sourceType":"module"}