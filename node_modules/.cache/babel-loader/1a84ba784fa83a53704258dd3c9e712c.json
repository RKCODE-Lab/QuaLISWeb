{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';// import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormTextarea from'../../components/form-textarea/form-textarea.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{injectIntl}from'react-intl';var AddQuotation=function AddQuotation(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CLIENTCATEGORY\"}),isSearchable:true,name:\"nclientcatcode\",isDisabled:false//     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n,isMandatory:true,isClearable:false,options:props.ClientCategory,value:props.selectedRecord[\"nclientcatcode\"]||\"\",defaultValue:props.selectedRecord[\"nclientcatcode\"],onChange:function onChange(event){return props.onComboChange(event,\"nclientcatcode\",1);},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CLIENT\"}),isSearchable:true,name:\"nclientcode\",isDisabled:false//     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n,isMandatory:true,isClearable:false,options:props.Client,value:props.selectedRecord[\"nclientcode\"]||\"\"// value={props.selectedRecord ? { \"label\": props.selectedRecord.sclientname, \"value\": props.selectedRecord.nclientcode } : \"\"}\n,defaultValue:props.selectedRecord[\"nclientcode\"],onChange:function onChange(event){return props.onComboChange(event,\"nclientcode\",1);},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sclientsiteaddress\",label:props.intl.formatMessage({id:\"IDS_CLIENTADDRESS\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_CLIENTADDRESS\"}),value:props.selectedRecord?props.selectedRecord.sclientsiteaddress:\"\",rows:\"2\",required:false,maxLength:255,isMandatory:false,isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sinvoiceaddress\",label:props.intl.formatMessage({id:\"IDS_INVOICEADDRESS\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_INVOICEADDRESS\"}),value:props.selectedRecord?props.selectedRecord[\"sinvoiceaddress\"]:\"\",rows:\"2\",required:false,maxLength:500,isMandatory:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"sdescription\"]===\"-\"?\"\":props.selectedRecord[\"sdescription\"]:\"\",rows:\"2\",required:false,maxLength:500})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdeviationremarks\",label:props.intl.formatMessage({id:\"IDS_DEVIATIONREMARKS\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_DEVIATIONREMARKS\"}),value:props.selectedRecord?props.selectedRecord[\"sdeviationremarks\"]===\"-\"?\"\":props.selectedRecord[\"sdeviationremarks\"]:\"\",rows:\"2\",required:false,maxLength:1000})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dquotationdate\",label:props.intl.formatMessage({id:\"IDS_QUOTATIONDATE\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),dateFormat:props.userInfo?props.userInfo.ssitedate||[]:[],timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:false,isClearable:false,isMandatory:true,required:true,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"dquotationdate\",date);}//     value={props.selectedRecord[\"dquotationdate\"]}\n//      selected={props.selectedRecord[\"dquotationdate\"]}\n,selected:props.selectedRecord&&props.selectedRecord[\"dquotationdate\"]?props.selectedRecord[\"dquotationdate\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isSearchable:true,name:\"nprojecttypecode\",isDisabled:false//     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n,isMandatory:true,isClearable:false,options:props.ProjectType,value:props.selectedRecord[\"nprojecttypecode\"]||\"\",defaultValue:props.selectedRecord[\"nprojecttypecode\"],onChange:function onChange(event){return props.onComboChange(event,\"nprojecttypecode\",4);},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROJECTCODE\"}),isSearchable:true,name:\"nprojectmastercode\",isDisabled:false//     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n,isMandatory:true,isClearable:false,options:props.ProjectCode,value:props.selectedRecord[\"nprojectmastercode\"]||\"\"// value={props.ProjectCode? { \"label\": props.ProjectCode[0].label, \"value\": props.ProjectCode[0].value } : \"\"}\n,defaultValue:props.selectedRecord[\"nprojectmastercode\"],onChange:function onChange(event){return props.onComboChange(event,\"nprojectmastercode\",4);},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sprojecttitle\",label:props.intl.formatMessage({id:\"IDS_PROJECTTITLE\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_PROJECTTITLE\"})//       value={props.ProjectMaster ? props.ProjectMaster[\"sprojecttitle\"] : \"\"}\n,value:props.selectedRecord?props.selectedRecord[\"sprojecttitle\"]:\"\",rows:\"2\",required:false,maxLength:255,isMandatory:false,isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"srfwdate\",label:props.intl.formatMessage({id:\"IDS_RFWDATE\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"})// value={props.selectedRecord[\"srfwdate\"]}\n,dateFormat:props.userInfo?props.userInfo.ssitedate||[]:[],timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:false,isClearable:false,isMandatory:false,required:true//maxDate={props.currentTime}\n,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"srfwdate\",date);}//     selected={props.ProjectMaster ? props.ProjectMaster[\"srfwdate\"] : \"\"}\n,selected:props.selectedRecord?props.selectedRecord[\"srfwdate\"]:\"\",isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INCHARGE\"}),name:\"susername\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_INCHARGE\"})//    value={props.ProjectMaster ? props.ProjectMaster[\"susername\"] : \"\"}\n,value:props.selectedRecord?props.selectedRecord[\"susername\"]:\"\",isMandatory:false,required:true,maxLength:\"100\",isDisabled:true})))));};export default injectIntl(AddQuotation);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/AddQuotation.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","FormTextarea","DateTimePicker","injectIntl","AddQuotation","props","intl","formatMessage","id","ClientCategory","selectedRecord","event","onComboChange","Client","onInputOnChange","sclientsiteaddress","userInfo","ssitedate","currentTime","date","handleDateChange","Date","ProjectType","ProjectCode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n// import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddQuotation = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}\r\n                            isSearchable={true}\r\n                            name={\"nclientcatcode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ClientCategory}\r\n                            value={props.selectedRecord[\"nclientcatcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcatcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENT\" })}\r\n                            isSearchable={true}\r\n                            name={\"nclientcode\"}\r\n                            isDisabled={false}\r\n                     //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Client}\r\n                            value={props.selectedRecord[\"nclientcode\"] || \"\"}\r\n                            // value={props.selectedRecord ? { \"label\": props.selectedRecord.sclientname, \"value\": props.selectedRecord.nclientcode } : \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sclientsiteaddress\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_CLIENTADDRESS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_CLIENTADDRESS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord.sclientsiteaddress : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isMandatory={false}\r\n                            isDisabled={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sinvoiceaddress\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_INVOICEADDRESS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_INVOICEADDRESS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sinvoiceaddress\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={500}\r\n                            isMandatory={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    {/* <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_QUOTATIONTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nquotationtypecode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.QuotationType}\r\n                            value={props.selectedRecord[\"nquotationtypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nquotationtypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nquotationtypecode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col> */}\r\n\r\n                   <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sdescription\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] === \"-\" ? \"\" : props.selectedRecord[\"sdescription\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={500}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sdeviationremarks\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_DEVIATIONREMARKS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DEVIATIONREMARKS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdeviationremarks\"] === \"-\" ? \"\" : props.selectedRecord[\"sdeviationremarks\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={1000}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n            <Col md={6}>\r\n                <Row>\r\n\r\n                <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"dquotationdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_QUOTATIONDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dquotationdate\", date)}\r\n                     //     value={props.selectedRecord[\"dquotationdate\"]}\r\n                    //      selected={props.selectedRecord[\"dquotationdate\"]}\r\n                            selected={props.selectedRecord && props.selectedRecord[\"dquotationdate\"] ?\r\n                                 props.selectedRecord[\"dquotationdate\"] : new Date()}\r\n\r\n\r\n                        />\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ProjectType}\r\n                            value={props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojecttypecode\", 4)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojectmastercode\"}\r\n                            isDisabled={false}\r\n                     //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ProjectCode}\r\n                            value={props.selectedRecord[\"nprojectmastercode\"] || \"\"}\r\n                            // value={props.ProjectCode? { \"label\": props.ProjectCode[0].label, \"value\": props.ProjectCode[0].value } : \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojectmastercode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojectmastercode\", 4)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sprojecttitle\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                   //       value={props.ProjectMaster ? props.ProjectMaster[\"sprojecttitle\"] : \"\"}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sprojecttitle\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isMandatory={false}\r\n                            isDisabled={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>  \r\n\r\n                <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"srfwdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                           // value={props.selectedRecord[\"srfwdate\"]}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={false}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"srfwdate\", date)}\r\n                       //     selected={props.ProjectMaster ? props.ProjectMaster[\"srfwdate\"] : \"\"}\r\n                            selected={props.selectedRecord ? props.selectedRecord[\"srfwdate\"] : \"\"}\r\n                            isDisabled={true}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                            name={\"susername\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                      //    value={props.ProjectMaster ? props.ProjectMaster[\"susername\"] : \"\"}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"susername\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                            isDisabled={true}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default injectIntl(AddQuotation);"]},"metadata":{},"sourceType":"module"}