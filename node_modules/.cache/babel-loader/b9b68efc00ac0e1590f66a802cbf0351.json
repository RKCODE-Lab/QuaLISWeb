{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{faBarcode}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{Button}from\"react-bootstrap\";//import { openBarcodeModal } from '../../actions'\nimport{injectIntl}from\"react-intl\";//import { connect } from \"react-redux\";\nimport SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from\"../audittrail/Esign\";import{constructOptionList}from\"../../components/CommonScript\";import rsapi from\"../../rsapi\";import Axios from\"axios\";import{toast}from\"react-toastify\";import AddBarcode from\"./AddBarcode\";import{FontIconWrap}from'../../components/data-grid/data-grid.styles';import Preloader from'../../components/preloader/preloader.component';var BarcodeButton=/*#__PURE__*/function(_React$Component){_inherits(BarcodeButton,_React$Component);var _super=_createSuper(BarcodeButton);function BarcodeButton(props){var _this;_classCallCheck(this,BarcodeButton);_this=_super.call(this,props);_this.openBarcodeModal=function(selectedMaster,ncontrolCode,userinfo){_this.setState({loading:true});var urlArray=[];var getPrinter=rsapi.post(\"barcode/getPrinter\",userinfo);var getControlBasedBarcode=rsapi.post(\"barcodeconfiguration/checkConfiguration\",{selectedMaster:selectedMaster,ncontrolCode:ncontrolCode,userinfo:userinfo,Multiselect:Array.isArray(selectedMaster)});urlArray=[getPrinter,getControlBasedBarcode];Axios.all(urlArray).then(function(response){var printer=constructOptionList(response[0].data||[],\"sprintername\",\"sprintername\",undefined,undefined,true).get(\"OptionList\");var barcode=constructOptionList(response[1].data.Barcode||[],\"sbarcodename\",\"sbarcodename\",undefined,undefined,true).get(\"OptionList\");var selectedRecord={};if(printer.length>0)selectedRecord['sprintername']=printer[0];if(barcode.length>0)selectedRecord['nbarcode']=barcode[0];selectedRecord['nbarcodeprint']=1;_this.setState({openBarcodeModal:true,ncontrolCode:ncontrolCode,Printer:printer,BarcodeList:barcode,operation:\"Printbarcode\",nbarcodeprint:response[1].data.nbarcodeprint,selectedRecord:selectedRecord,loadBarcode:true,loading:false});}).catch(function(error){// dispatch(initRequest(false));\nif(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.barcodeGeneration=function(){//dispatch(initRequest(true));\n_this.setState({loading:true});var list=[];var selectedMaster=_this.props.selectedMaster;if(Array.isArray(selectedMaster)){list=selectedMaster;}else{list.push(selectedMaster);}rsapi.post(\"barcodeconfiguration/barcodeGeneration\",{selectedMaster:list,ncontrolCode:_this.state.ncontrolCode,userinfo:_this.props.userInfo,nbarcode:_this.state.selectedRecord.nbarcode.item.nbarcode,sprintername:_this.state.selectedRecord.sprintername.value,nbarcodeprintcount:_this.state.selectedRecord.nbarcodeprintcount?_this.state.selectedRecord.nbarcodeprintcount:1}).then(function(response){toast.info(response.data);_this.setState({openBarcodeModal:false,loadEsign:false,selectedRecord:{},Printer:[],BarcodeList:[],loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;if(event.target.name==='nclientprinter'&&event.target.checked===true){//const printers =   window.navigator.printer.getPrinters();\n/////const names = printers.map(printer => printer.name);\n//selectedPrinterDatas {printername: { = names;\n// this.setState({ selectedPrinterData });\n}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.state.loadEsign;var openBarcodeModal=_this.state.openBarcodeModal;var selectedRecord=_this.state.selectedRecord;if(loadEsign){_this.setState({loadEsign:false,loading:false});}else{_this.setState({loadEsign:false,openBarcodeModal:false,selectedRecord:{},loading:false});}};_this.mandatoryFields=function(){var mandatory=[{\"mandatory\":true,\"idsName\":\"IDS_BARCODENAME\",\"dataField\":\"nbarcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PRINTER\",\"dataField\":\"sprintername\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return mandatory;};_this.state={selectedRecord:\"\",ncontrolCode:-1,nbarcodeprint:1,BarcodeList:[],operation:\"Printbarcode\",Printer:[],openBarcodeModal:false,loadEsign:false,loadBarcode:false,loading:false};return _this;}_createClass(BarcodeButton,[{key:\"render\",value:function render(){var _this2=this;var barcodeControl=this.props.controlMap&&this.props.controlMap.has(this.props.methodUrl)&&this.props.controlMap.get(this.props.methodUrl).ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),this.props.isDataGrid?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_BARCODEGENERATE\"}),\"data-place\":\"left\",hidden:this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(barcodeControl)===-1,onClick:function onClick(){return _this2.openBarcodeModal(_this2.props.selectedMaster,barcodeControl,_this2.props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBarcode})):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.props.userRoleControlRights.indexOf(barcodeControl)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_BARCODEGENERATE\"}),onClick:function onClick(){return _this2.openBarcodeModal(_this2.props.selectedMaster,barcodeControl,_this2.props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBarcode})),this.state.openBarcodeModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.state.openBarcodeModal,closeModal:this.closeModal,operation:this.state.operation,inputParam:{methodUrl:this.props.methodUrl},screenName:this.props.screenName,onSaveClick:this.barcodeGeneration,esign:this.state.loadEsign,validateEsign:this.validateEsign// masterStatus={this.props.Login.masterStatus}\n// updateStore={this.props.updateStore}\n,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.mandatoryFields(),addComponent:this.state.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.state.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange//inputParam={this.props.Login.inputParam}\n,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddBarcode,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,onComboChange:this.onComboChange,BarcodeList:this.state.BarcodeList,Printer:this.state.Printer,nbarcodeprint:this.state.nbarcodeprint})}));}}]);return BarcodeButton;}(React.Component);export default injectIntl(BarcodeButton);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/BarcodeTemplate/BarcodeButton.jsx"],"names":["React","faBarcode","FontAwesomeIcon","Button","injectIntl","SlideOutModal","Esign","constructOptionList","rsapi","Axios","toast","AddBarcode","FontIconWrap","Preloader","BarcodeButton","props","openBarcodeModal","selectedMaster","ncontrolCode","userinfo","setState","loading","urlArray","getPrinter","post","getControlBasedBarcode","Multiselect","Array","isArray","all","then","response","printer","data","undefined","get","barcode","Barcode","selectedRecord","length","Printer","BarcodeList","operation","nbarcodeprint","loadBarcode","catch","error","status","message","warn","intl","formatMessage","id","barcodeGeneration","list","push","state","userInfo","nbarcode","item","sprintername","value","nbarcodeprintcount","info","loadEsign","onNumericInputChange","name","onInputOnChange","event","target","type","checked","onComboChange","comboData","fieldName","closeModal","mandatoryFields","mandatory","barcodeControl","controlMap","has","methodUrl","ncontrolcode","isDataGrid","userRoleControlRights","indexOf","screenName","validateEsign","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { faBarcode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button } from \"react-bootstrap\";\r\n//import { openBarcodeModal } from '../../actions'\r\nimport { injectIntl } from \"react-intl\";\r\n//import { connect } from \"react-redux\";\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal'\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { constructOptionList } from \"../../components/CommonScript\";\r\nimport rsapi from \"../../rsapi\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddBarcode from \"./AddBarcode\";\r\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport Preloader from '../../components/preloader/preloader.component'\r\n\r\n\r\nclass BarcodeButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            selectedRecord: \"\",\r\n            ncontrolCode: -1,\r\n            nbarcodeprint: 1,\r\n            BarcodeList: [],\r\n            operation: \"Printbarcode\",\r\n            Printer: [],\r\n            openBarcodeModal: false,\r\n            loadEsign: false,\r\n            loadBarcode: false,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    openBarcodeModal = (selectedMaster, ncontrolCode, userinfo) => {\r\n\r\n\r\n        this.setState({ loading: true })\r\n\r\n        let urlArray = [];\r\n        const getPrinter = rsapi.post(\"barcode/getPrinter\", userinfo);\r\n        const getControlBasedBarcode = rsapi.post(\"barcodeconfiguration/checkConfiguration\", { selectedMaster, ncontrolCode, userinfo, Multiselect: Array.isArray(selectedMaster) });\r\n        urlArray = [getPrinter, getControlBasedBarcode]\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n            const printer = constructOptionList(response[0].data || [], \"sprintername\",\r\n                \"sprintername\", undefined, undefined, true).get(\"OptionList\");\r\n\r\n            const barcode = constructOptionList(response[1].data.Barcode || [], \"sbarcodename\",\r\n                \"sbarcodename\", undefined, undefined, true).get(\"OptionList\");\r\n\r\n            const selectedRecord = {}\r\n\r\n            if (printer.length > 0)\r\n                selectedRecord['sprintername'] = printer[0];\r\n\r\n            if (barcode.length > 0) selectedRecord['nbarcode'] = barcode[0];\r\n            selectedRecord['nbarcodeprint'] = 1\r\n\r\n\r\n            this.setState({\r\n                openBarcodeModal: true, ncontrolCode, Printer: printer,\r\n                BarcodeList: barcode, operation: \"Printbarcode\",\r\n                nbarcodeprint: response[1].data.nbarcodeprint, selectedRecord, loadBarcode: true, loading: false\r\n            })\r\n        }).catch(error => {\r\n\r\n            // dispatch(initRequest(false));\r\n\r\n            if (error.response.status === 500) {\r\n\r\n                toast.error(error.message);\r\n\r\n            } else {\r\n\r\n                toast.warn(this.props.intl.formatMessage({\r\n\r\n                    id: error.response.data\r\n\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    barcodeGeneration = () => {\r\n        //dispatch(initRequest(true));\r\n        this.setState({ loading: true })\r\n        let list = []\r\n        const selectedMaster = this.props.selectedMaster\r\n        if (Array.isArray(selectedMaster)) {\r\n            list = selectedMaster\r\n        } else {\r\n            list.push(selectedMaster)\r\n        }\r\n        rsapi.post(\"barcodeconfiguration/barcodeGeneration\", {\r\n            selectedMaster: list, ncontrolCode: this.state.ncontrolCode,\r\n            userinfo: this.props.userInfo, nbarcode: this.state.selectedRecord.nbarcode.item.nbarcode, sprintername: this.state.selectedRecord.sprintername.value,\r\n            nbarcodeprintcount: this.state.selectedRecord.nbarcodeprintcount ? this.state.selectedRecord.nbarcodeprintcount : 1\r\n        })\r\n            .then(response => {\r\n                toast.info(response.data)\r\n                this.setState({ openBarcodeModal: false, loadEsign: false, selectedRecord: {}, Printer: [], BarcodeList: [], loading: false })\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                } else {\r\n\r\n                    toast.warn(this.props.intl.formatMessage({\r\n\r\n                        id: error.response.data\r\n\r\n                    }));\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            if (event.target.name === 'nclientprinter' && event.target.checked === true) {\r\n                //const printers =   window.navigator.printer.getPrinters();\r\n                /////const names = printers.map(printer => printer.name);\r\n\r\n                //selectedPrinterDatas {printername: { = names;\r\n                // this.setState({ selectedPrinterData });\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.state.loadEsign;\r\n        let openBarcodeModal = this.state.openBarcodeModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n\r\n        if (loadEsign) {\r\n            this.setState({ loadEsign: false,loading:false })\r\n        }\r\n        else {\r\n            this.setState({ loadEsign: false, openBarcodeModal: false, selectedRecord: {} ,loading:false})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    mandatoryFields = () => {\r\n\r\n        const mandatory = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_BARCODENAME\", \"dataField\": \"nbarcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_PRINTER\", \"dataField\": \"sprintername\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ]\r\n\r\n        return mandatory;\r\n    }\r\n\r\n\r\n    render() {\r\n        const barcodeControl = this.props.controlMap && this.props.controlMap.has(this.props.methodUrl) && this.props.controlMap.get(this.props.methodUrl).ncontrolcode;\r\n        return (\r\n            <>\r\n\r\n                <Preloader loading={this.state.loading} />\r\n\r\n                {this.props.isDataGrid ?\r\n\r\n                    <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BARCODEGENERATE\" })}\r\n                        data-place=\"left\"\r\n                        hidden={this.props.\r\n                            userRoleControlRights && this.props.userRoleControlRights.indexOf(barcodeControl) === -1}\r\n                        onClick={() => this.openBarcodeModal(this.props.selectedMaster, barcodeControl, this.props.userInfo)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faBarcode} />\r\n                    </FontIconWrap>\r\n                    :\r\n                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                        hidden={this.props.userRoleControlRights.indexOf(barcodeControl) === -1}\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BARCODEGENERATE\" })}\r\n                        onClick={() => this.openBarcodeModal(this.props.selectedMaster, barcodeControl, this.props.userInfo)}>\r\n                        <FontAwesomeIcon icon={faBarcode} />\r\n                    </Button>\r\n                }\r\n\r\n                {this.state.openBarcodeModal &&\r\n                    <SlideOutModal\r\n                        show={this.state.openBarcodeModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.state.operation}\r\n                        inputParam={{ methodUrl: this.props.methodUrl }}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.barcodeGeneration}\r\n                        esign={this.state.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        // masterStatus={this.props.Login.masterStatus}\r\n                        // updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.mandatoryFields()}\r\n                        addComponent={this.state.loadEsign ?\r\n                            <Esign operation={this.state.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                //inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> : <AddBarcode\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onNumericInputChange={this.onNumericInputChange}\r\n                                onComboChange={this.onComboChange}\r\n                                BarcodeList={this.state.BarcodeList}\r\n                                Printer={this.state.Printer}\r\n                                nbarcodeprint={this.state.nbarcodeprint}\r\n                            >\r\n                            </AddBarcode>\r\n                        }\r\n                    ></SlideOutModal>\r\n\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default (injectIntl(BarcodeButton));"]},"metadata":{},"sourceType":"module"}