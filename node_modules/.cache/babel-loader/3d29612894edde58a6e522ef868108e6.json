{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\add-design\\\\add-design.component.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport FormInput from '../form-input/form-input.component'; //import CustomSwitch from '../custom-switch/custom-switch.component';\n\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\nimport DataGrid from '../data-grid/data-grid.component';\nimport { designComponents } from '../Enumeration';\n\nclass AddDesign extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataState = {\n      skip: 0,\n      take: 10 // group: [{ field: 'schildparametername' }]\n\n    };\n    this.state = {\n      dataState: dataState,\n      dataResult: [],\n      selectedRecord: {}\n    };\n  } // dataStateChange = (event) => {\n  //     this.setState({\n  //         dataResult: process(this.props.addDesignParam, event.dataState),\n  //         dataState: event.dataState\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[0].idsName\n      }),\n      name: this.props.inputColumnList[0].dataField,\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[0].idsName\n      }),\n      value: this.props.designName,\n      readOnly: true,\n      maxLength: this.props.inputColumnList[0].maxLength,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[1].idsName\n      }),\n      name: this.props.inputColumnList[1].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[1].listName],\n      value: this.props.selectedRecord[this.props.inputColumnList[1].dataField] || \"\",\n      closeMenuOnSelect: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      isMandatory: true,\n      isClearable: false,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[1].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[2].idsName\n      }),\n      name: this.props.inputColumnList[2].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[2].listName],\n      value: this.props.selectedRecord[this.props.inputColumnList[2].dataField] || \"\",\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      isMandatory: true,\n      isMulti: false,\n      isClearable: false,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[2].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[3].idsName\n      }),\n      name: this.props.inputColumnList[3].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[3].listName],\n      value: this.props.selectedRecord ? this.props.selectedRecord[this.props.inputColumnList[3].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX ? this.props.selectedRecord[this.props.inputColumnList[3].dataField] : \"\" : \"\",\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      isDisabled: Object.values(this.props.selectedRecord).length > 0 ? this.props.selectedRecord[this.props.inputColumnList[1].dataField] === undefined ? true : this.props.selectedRecord[this.props.inputColumnList[1].dataField].value !== designComponents.COMBOBOX ? true : false : true,\n      isMandatory: this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX ? true : false,\n      required: this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX ? true : false,\n      isMulti: false,\n      isClearable: true,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[3].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[4].idsName\n      }),\n      name: this.props.inputColumnList[4].dataField,\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[4].idsName\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[this.props.inputColumnList[4].dataField] : \"\",\n      isMandatory: true,\n      required: true,\n      maxLength: this.props.inputColumnList[4].maxLength,\n      onChange: this.props.onInputOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[5].idsName\n      }),\n      name: this.props.inputColumnList[5].dataField,\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[5].idsName\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER ? this.props.selectedRecord[this.props.inputColumnList[5].dataField] : \"\" : \"\",\n      isMandatory: this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER ? true : false,\n      readOnly: this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value !== designComponents.DATEPICKER ? true : false,\n      required: this.props.selectedRecord[this.props.inputColumnList[1].dataField] && this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER ? true : false,\n      maxLength: this.props.inputColumnList[5].maxLength //onChange={(event) => this.props.onInputOnChange(event)}     \n      ,\n      onChange: this.props.onInputOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex justify-content-end p-2\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.props.addParametersInDataGrid(this.props.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: this.props.gridPrimaryKey,\n      data: this.props.gridData || [],\n      dataResult: process(this.props.gridData || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: event => this.setState({\n        dataState: event.dataState\n      }),\n      extractedColumnList: this.props.gridColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      deleteRecordWORights: this.props.deleteRecordWORights,\n      pageable: false,\n      scrollable: \"scrollable\",\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: null,\n      hideColumnFilter: true,\n      hasControlWithOutRights: true,\n      showdeleteRecordWORights: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(AddDesign);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/add-design/add-design.component.jsx"],"names":["React","FormattedMessage","injectIntl","faSave","FontAwesomeIcon","Button","Row","Col","process","FormInput","FormSelectSearch","DataGrid","designComponents","AddDesign","Component","constructor","props","dataState","skip","take","state","dataResult","selectedRecord","render","intl","formatMessage","id","inputColumnList","idsName","dataField","designName","maxLength","event","onInputOnChange","listName","value","handleChange","COMBOBOX","Object","values","length","undefined","DATEPICKER","addParametersInDataGrid","gridPrimaryKey","gridData","setState","gridColumnList","controlMap","userRoleControlRights","inputParam","userInfo","deleteRecordWORights"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport FormInput from '../form-input/form-input.component';\r\n//import CustomSwitch from '../custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DataGrid from '../data-grid/data-grid.component';\r\nimport { designComponents } from '../Enumeration';\r\n\r\nclass AddDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10\r\n            // group: [{ field: 'schildparametername' }]\r\n        };\r\n        this.state = {\r\n            dataState: dataState, dataResult: [],\r\n            selectedRecord: {},\r\n\r\n        }\r\n    }\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.props.addDesignParam, event.dataState),\r\n    //         dataState: event.dataState\r\n    //     });\r\n    // }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={this.props.intl.formatMessage({ id: this.props.inputColumnList[0].idsName })}\r\n                            name={this.props.inputColumnList[0].dataField}\r\n                            type=\"text\"\r\n                            placeholder={this.props.intl.formatMessage({ id: this.props.inputColumnList[0].idsName })}\r\n                            value={this.props.designName}\r\n                            readOnly={true}\r\n                            maxLength={this.props.inputColumnList[0].maxLength}\r\n                            onChange={(event) => this.props.onInputOnChange(event)}\r\n\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[1].idsName })}\r\n                            name={this.props.inputColumnList[1].dataField}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props[this.props.inputColumnList[1].listName]}\r\n                            value={this.props.selectedRecord[this.props.inputColumnList[1].dataField] || \"\"}\r\n                            closeMenuOnSelect={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            onChange={value => this.props.handleChange(value, this.props.inputColumnList[1].dataField)}\r\n\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[2].idsName })}\r\n                            name={this.props.inputColumnList[2].dataField}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props[this.props.inputColumnList[2].listName]}\r\n                            value={this.props.selectedRecord[this.props.inputColumnList[2].dataField] || \"\"}\r\n                            closeMenuOnSelect={true}\r\n                            isSearchable={true}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isClearable={false}\r\n                            onChange={value => this.props.handleChange(value, this.props.inputColumnList[2].dataField)}\r\n\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[3].idsName })}\r\n                            name={this.props.inputColumnList[3].dataField}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props[this.props.inputColumnList[3].listName]}\r\n                            value={this.props.selectedRecord ? (this.props.selectedRecord[this.props.inputColumnList[3].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX\r\n                                ? this.props.selectedRecord[this.props.inputColumnList[3].dataField] : \"\") : \"\"}\r\n\r\n                            closeMenuOnSelect={true}\r\n                            isSearchable={true}\r\n                            isDisabled={Object.values(this.props.selectedRecord).length > 0 ? (this.props.selectedRecord[this.props.inputColumnList[1].dataField] === undefined ? true :\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value !== designComponents.COMBOBOX ? true : false):true}\r\n                            isMandatory={this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX ? true : false}\r\n                            required={this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.COMBOBOX ? true : false}\r\n                            isMulti={false}\r\n                            isClearable={true}\r\n                            onChange={value => this.props.handleChange(value, this.props.inputColumnList[3].dataField)}\r\n\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={this.props.intl.formatMessage({ id: this.props.inputColumnList[4].idsName })}\r\n                            name={this.props.inputColumnList[4].dataField}\r\n                            type=\"text\"\r\n                            placeholder={this.props.intl.formatMessage({ id: this.props.inputColumnList[4].idsName })}\r\n                            value={this.props.selectedRecord ? this.props.selectedRecord[this.props.inputColumnList[4].dataField] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={this.props.inputColumnList[4].maxLength}\r\n                            onChange={this.props.onInputOnChange}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={this.props.intl.formatMessage({ id: this.props.inputColumnList[5].idsName })}\r\n                            name={this.props.inputColumnList[5].dataField}\r\n                            type=\"text\"\r\n                            placeholder={this.props.intl.formatMessage({ id: this.props.inputColumnList[5].idsName })}\r\n                            value={this.props.selectedRecord ? (this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER\r\n                                ? this.props.selectedRecord[this.props.inputColumnList[5].dataField] : \"\") : \"\"}\r\n                            isMandatory={this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER ? true : false}\r\n                            readOnly={this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value !== designComponents.DATEPICKER ? true : false}\r\n                            required={this.props.selectedRecord[this.props.inputColumnList[1].dataField] &&\r\n                                this.props.selectedRecord[this.props.inputColumnList[1].dataField].value === designComponents.DATEPICKER ? true : false}\r\n                            maxLength={this.props.inputColumnList[5].maxLength}\r\n                            //onChange={(event) => this.props.onInputOnChange(event)}     \r\n                            onChange={this.props.onInputOnChange}\r\n                        />\r\n                    </Col>\r\n                    {/* <Col md={6}>\r\n                       <CustomSwitch                          \r\n                           name={this.props.inputColumnList[6].dataField}\r\n                           type=\"switch\"\r\n                           label={ this.props.intl.formatMessage({ id: this.props.inputColumnList[6].idsName })}                          \r\n                           placeholder={ this.props.intl.formatMessage({ id: this.props.inputColumnList[6].idsName })}\r\n                           defaultValue ={ this.props.selectedRecord[this.props.inputColumnList[6].dataField] === transactionStatus.YES ? true :false}\r\n                           //isMandatory={false}\r\n                           //required={false}\r\n                           checked={ this.props.selectedRecord[this.props.inputColumnList[6].dataField] === transactionStatus.YES ? true :false }\r\n                           //onChange={(event)=> this.props.onInputOnChange(event)}\r\n                           onChange={this.props.onInputOnChange} \r\n                          />\r\n                   </Col> */}\r\n                    <Col className=\"d-flex justify-content-end p-2\" md={12}>\r\n                        <Button className=\"btn-user btn-primary-blue\"\r\n                            onClick={() => this.props.addParametersInDataGrid(this.props.selectedRecord)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Col md={12}>\r\n                        <DataGrid primaryKeyField={this.props.gridPrimaryKey}\r\n                            data={this.props.gridData || []}\r\n                            dataResult={process(this.props.gridData || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n                            extractedColumnList={this.props.gridColumnList}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            deleteRecordWORights={this.props.deleteRecordWORights}\r\n                            pageable={false}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={false}\r\n                            selectedId={null}\r\n                            hideColumnFilter={true}\r\n                            hasControlWithOutRights={true}\r\n                            showdeleteRecordWORights={true}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default injectIntl(AddDesign);\r\n"]},"metadata":{},"sourceType":"module"}