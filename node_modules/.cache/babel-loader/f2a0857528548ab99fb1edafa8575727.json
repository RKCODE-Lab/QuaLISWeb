{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\ListAttachment.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, Media, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudDownloadAlt, faTrashAlt, faPencilAlt, faExternalLinkAlt, faThumbtack } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl } from 'react-intl';\nimport { attachmentType, designProperties } from './Enumeration';\nimport ConfirmDialog from './confirm-alert/confirm-alert.component';\nimport { Attachments } from './dropzone/dropzone.styles';\nimport { getAttachedFileIcon } from './FileIcon';\nimport { MediaLabel, MediaSubHeader } from './App.styles';\nimport { Nav } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport '../pages/registration/registration.css';\nimport { bytesToSize } from './CommonScript';\nimport ReactTooltip from 'react-tooltip';\nimport CustomPager from './CustomPager';\n\nclass ListAttachment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showHideDetails = (event, index) => {\n      event.stopPropagation();\n      let showMore = { ...this.state.showMore,\n        [index]: !this.state.showMore[index]\n      };\n      this.setState({\n        showMore\n      });\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.state = {\n      showMore: {},\n      buttonCount: 2,\n      info: true,\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n  }\n\n  render() {\n    const {\n      fileName,\n      deleteId,\n      editId,\n      defaultId,\n      viewId\n    } = this.props;\n    let data = this.props.hidePaging ? this.props.attachmentList : this.props.attachmentList.slice(this.state.skip, this.state.skip + this.state.take);\n    return /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, data.length > 0 ? data.map((file, index) => {\n      let fileExtension = \"\";\n\n      if (file.nattachmenttypecode === attachmentType.FTP) {\n        const splittedFileName = file[fileName].split('.');\n        fileExtension = file[fileName].split('.')[splittedFileName.length - 1];\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactTooltip, {\n        place: \"bottom\",\n        globalEventOff: \"true\",\n        id: \"tooltip_attachment_wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: `file_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Attachments, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        width: 40,\n        height: 40,\n        className: \"mr-2\",\n        src: getAttachedFileIcon(fileExtension),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Media.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-0 attatchment-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 49\n        }\n      }, file[fileName]), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attatchment-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 49\n        }\n      }, this.props.subFields && this.props.subFields.map((field, i) => /*#__PURE__*/React.createElement(React.Fragment, null, field['fieldType'] === 'size' ? /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 69\n        }\n      }, bytesToSize(file[field[designProperties.VALUE]])) : /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 69\n        }\n      }, file[field[designProperties.VALUE]]), i !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 106\n        }\n      }, \"|\") : \"\")), this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: `show-wrap_${index}`,\n        className: `show-more-action showmore`,\n        onClick: event => this.showHideDetails(event, index),\n        style: {\n          display: \"inline\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: `show-more-link showmore`,\n        for: `show-wrap_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 73\n        }\n      }, ` ...${this.props.intl.formatMessage({\n        id: this.state.showMore[index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\"\n      })}`))), /*#__PURE__*/React.createElement(Media.Body, {\n        className: `show-more-wrap ${this.state.showMore[index] ? \"showmore\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(MediaSubHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 69\n        }\n      }, this.props.moreField.map((field, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 81\n        }\n      }, field[1] ? this.props.intl.formatMessage({\n        id: field[designProperties.LABEL]\n      }) + \": \" : \"\", \" \"), /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 81\n        }\n      }, file[field[designProperties.VALUE]]), field['fieldType'] === 'size' ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", \" bytes\") : \"\", i % 2 === 0 && i !== this.props.moreField.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 85\n        }\n      }, \"|\") : \"\", (i + 1) % 2 === 0 ? /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 102\n        }\n      }) : \"\"))))) : \"\")), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"action-icons-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 49\n        }\n      }, file.nattachmenttypecode === attachmentType.FTP ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCloudDownloadAlt,\n        className: \"mr-3\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(viewId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOAD\"\n        }),\n        \"data-for\": \"tooltip_attachment_wrap\",\n        onClick: () => this.props.viewFile(file),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 57\n        }\n      }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faExternalLinkAlt,\n        className: \"mr-3\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(viewId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_LINK\"\n        }),\n        \"data-for\": \"tooltip_attachment_wrap\",\n        onClick: () => this.props.viewFile(file),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 59\n        }\n      }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faThumbtack,\n        className: \"mr-3\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(defaultId) === -1,\n        onClick: () => this.props.defaultRecord({ ...this.props.defaultParam,\n          selectedRecord: file\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        className: \"mr-3 d-font-icon\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(editId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDIT\"\n        }),\n        \"data-for\": \"tooltip_attachment_wrap\",\n        onClick: () => this.props.fetchRecord({ ...this.props.editParam,\n          selectedRecord: file,\n          operation: \"update\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(ConfirmDialog, {\n        name: \"deleteMessage\",\n        message: this.props.intl.formatMessage({\n          id: \"IDS_DELETECONFIRMMSG\"\n        }),\n        cardTitle: this.props.intl.formatMessage({\n          id: \"IDS_CONFIRMATION\"\n        }),\n        doLabel: this.props.intl.formatMessage({\n          id: \"IDS_OK\"\n        }),\n        doNotLabel: this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }),\n        dataforprops: \"tooltip_attachment_wrap\",\n        icon: faTrashAlt,\n        size: \"lg\",\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        hidden: this.props.userRoleControlRights.indexOf(deleteId) === -1,\n        handleClickDelete: () => this.props.deleteRecord({ ...this.props.deleteParam,\n          selectedRecord: file,\n          ncontrolCode: deleteId,\n          data,\n          skip: this.props.skip ? this.props.skip : this.state.skip,\n          take: this.props.take ? this.props.take : this.state.take\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 53\n        }\n      })))))));\n    }) : /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Attachments, {\n      className: \"norecordtxt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    }))), this.props.hidePaging ? \"\" : /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.state.skip,\n      take: this.state.take // width={20}\n      ,\n      pagershowwidth: 33,\n      handlePageChange: this.handlePageChange,\n      total: this.props.attachmentList ? this.props.attachmentList.length : 0,\n      buttonCount: this.state.buttonCount,\n      info: this.state.info,\n      pageSize: this.props.settings ? this.props.settings[15].split(\",\").map(setting => parseInt(setting)) : [5, 10, 15],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.attachmentList !== previousProps.attachmentList) {\n      if (this.props.skip === undefined && this.props.attachmentList && this.props.attachmentList.length <= this.state.skip) {\n        this.setState({\n          skip: 0\n        });\n      }\n    }\n\n    if (this.props.skip !== undefined && this.props.skip !== previousProps.skip) {\n      this.setState({\n        skip: this.props.skip,\n        take: this.props.take\n      });\n    }\n  }\n\n}\n\nexport default injectIntl(ListAttachment);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/ListAttachment.jsx"],"names":["React","Component","ListGroup","Media","Image","FontAwesomeIcon","faCloudDownloadAlt","faTrashAlt","faPencilAlt","faExternalLinkAlt","faThumbtack","injectIntl","attachmentType","designProperties","ConfirmDialog","Attachments","getAttachedFileIcon","MediaLabel","MediaSubHeader","Nav","Form","bytesToSize","ReactTooltip","CustomPager","ListAttachment","constructor","props","showHideDetails","event","index","stopPropagation","showMore","state","setState","handlePageChange","e","skip","take","buttonCount","info","settings","parseInt","render","fileName","deleteId","editId","defaultId","viewId","data","hidePaging","attachmentList","slice","length","map","file","fileExtension","nattachmenttypecode","FTP","splittedFileName","split","subFields","field","i","VALUE","moreField","display","intl","formatMessage","id","fontWeight","LABEL","userRoleControlRights","indexOf","viewFile","defaultRecord","defaultParam","selectedRecord","fetchRecord","editParam","operation","deleteRecord","deleteParam","ncontrolCode","setting","componentDidUpdate","previousProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, Media, Image } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudDownloadAlt, faTrashAlt, faPencilAlt, faExternalLinkAlt, faThumbtack } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl } from 'react-intl';\r\nimport { attachmentType, designProperties } from './Enumeration';\r\nimport ConfirmDialog from './confirm-alert/confirm-alert.component';\r\nimport { Attachments } from './dropzone/dropzone.styles';\r\nimport { getAttachedFileIcon } from './FileIcon';\r\nimport { MediaLabel, MediaSubHeader } from './App.styles';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport '../pages/registration/registration.css'\r\nimport { bytesToSize } from './CommonScript';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport CustomPager from './CustomPager';\r\nclass ListAttachment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            buttonCount: 2,\r\n            info: true,\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { fileName, deleteId, editId, defaultId, viewId } = this.props;\r\n        let data = this.props.hidePaging ? this.props.attachmentList : this.props.attachmentList.slice(this.state.skip, ((this.state.skip) + (this.state.take)))\r\n        return (\r\n            <ListGroup variant=\"flush\">\r\n                {data.length > 0 ?\r\n                    data.map((file, index) => {\r\n                        let fileExtension = \"\";\r\n                        if (file.nattachmenttypecode === attachmentType.FTP) {\r\n                            const splittedFileName = file[fileName].split('.');\r\n                            fileExtension = file[fileName].split('.')[splittedFileName.length - 1];\r\n                        }\r\n                        return (\r\n                            <>\r\n                                <ReactTooltip place=\"bottom\" globalEventOff=\"true\" id=\"tooltip_attachment_wrap\" />\r\n                                <ListGroup.Item key={`file_${index}`}>\r\n                                    <Attachments>\r\n                                        <Media>\r\n                                            <Image\r\n                                                width={40}\r\n                                                height={40}\r\n                                                className=\"mr-2\"\r\n                                                src={getAttachedFileIcon(fileExtension)}\r\n                                            />\r\n                                            <Media.Body>\r\n                                                <h5 className=\"mt-0 attatchment-title\">{file[fileName]}</h5>\r\n                                                <div className=\"attatchment-details\">\r\n                                                    {/* {file[this.props.mainField]?<>{file[this.props.mainField]}<span className=\"seperator\">|</span></>:\"\"}{file.screateddate} \r\n                                        {\r\n                                            file.nattachmenttypecode === attachmentType.FTP?\r\n                                                <>\r\n                                                    {file[filesize]?<><span className=\"seperator\">|</span>{file[filesize]} bytes</>:\"\"}\r\n                                                    {file[defaultStatusName]?<><span className=\"seperator\">|</span>{file[defaultStatusName]} </>:\"\"}\r\n                                                </>\r\n                                            :\r\n                                                <>\r\n                                                    {file[linkname]?<><span className=\"seperator\">|</span>{file[linkname]}</>:\"\"}\r\n                                                    {file[defaultStatusName]?<><span className=\"seperator\">|</span>{file[defaultStatusName]}</>:\"\"}\r\n                                                </>\r\n                                        } */}\r\n                                                    {\r\n                                                        this.props.subFields && this.props.subFields.map((field, i) =>\r\n                                                            <>\r\n                                                                {field['fieldType'] === 'size' ?\r\n                                                                    <MediaLabel>{bytesToSize(file[field[designProperties.VALUE]])}</MediaLabel> :\r\n                                                                    <MediaLabel>{file[field[designProperties.VALUE]]}</MediaLabel>}\r\n                                                                {/* {this.props.subFields.length > 1 && i % 2 === 0 ?<MediaLabel className=\"seperator\">|</MediaLabel>: \"\"} */}\r\n                                                                {i !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                            </>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        this.props.moreField && this.props.moreField.length > 0 ?\r\n                                                            <>\r\n                                                                <MediaLabel>\r\n                                                                    <Nav.Link name={`show-wrap_${index}`} className={`show-more-action showmore`} onClick={(event) => this.showHideDetails(event, index)} style={{ display: \"inline\" }}>\r\n                                                                        <Form.Label className={`show-more-link showmore`} for={`show-wrap_${index}`}>{` ...${this.props.intl.formatMessage({ id: this.state.showMore[index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}</Form.Label>\r\n                                                                    </Nav.Link>\r\n                                                                </MediaLabel>\r\n                                                                <Media.Body className={`show-more-wrap ${this.state.showMore[index] ? \"showmore\" : \"\"}`}>\r\n                                                                    <MediaSubHeader>\r\n                                                                        {this.props.moreField.map((field, i) =>\r\n                                                                            <>\r\n                                                                                <MediaLabel style={{ fontWeight: \"bold\" }}>{field[1] ? this.props.intl.formatMessage({ id: field[designProperties.LABEL] }) + \": \" : \"\"} </MediaLabel>\r\n                                                                                <MediaLabel>{file[field[designProperties.VALUE]]}</MediaLabel>\r\n                                                                                {field['fieldType'] === 'size' ? <>{\" \"} bytes</> : \"\"}\r\n                                                                                {i % 2 === 0 && i !== this.props.moreField.length - 1 ?\r\n                                                                                    <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                                                {(i + 1) % 2 === 0 ? <br></br> : \"\"}\r\n                                                                            </>\r\n                                                                        )}\r\n                                                                    </MediaSubHeader>\r\n                                                                </Media.Body>\r\n                                                            </>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                </div>\r\n                                            </Media.Body>\r\n                                            <>\r\n                                                <Nav.Link className=\"action-icons-wrap\">\r\n                                                    {file.nattachmenttypecode === attachmentType.FTP ?\r\n                                                        <FontAwesomeIcon icon={faCloudDownloadAlt} className=\"mr-3\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                            data-for=\"tooltip_attachment_wrap\"\r\n                                                            onClick={() => this.props.viewFile(file)} />\r\n                                                        : <FontAwesomeIcon icon={faExternalLinkAlt} className=\"mr-3\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                                                            data-for=\"tooltip_attachment_wrap\"\r\n                                                            onClick={() => this.props.viewFile(file)} />\r\n\r\n                                                    }\r\n                                                    <FontAwesomeIcon icon={faThumbtack} className=\"mr-3\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(defaultId) === -1}\r\n                                                        onClick={() => this.props.defaultRecord({ ...this.props.defaultParam, selectedRecord: file })} />\r\n                                                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-3 d-font-icon\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                        data-for=\"tooltip_attachment_wrap\"\r\n                                                        onClick={() => this.props.fetchRecord({ ...this.props.editParam, selectedRecord: file, operation: \"update\"  })} />\r\n                                                    <ConfirmDialog\r\n                                                        name=\"deleteMessage\"\r\n                                                        message={this.props.intl.formatMessage({ id: \"IDS_DELETECONFIRMMSG\" })}\r\n                                                        cardTitle={this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" })}\r\n                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                        dataforprops=\"tooltip_attachment_wrap\"\r\n                                                        icon={faTrashAlt}\r\n                                                        size=\"lg\"\r\n                                                        title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                        hidden={this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                        handleClickDelete={() => this.props.deleteRecord({ ...this.props.deleteParam, selectedRecord: file, ncontrolCode: deleteId, data, skip: this.props.skip ? this.props.skip : this.state.skip, take: this.props.take ? this.props.take : this.state.take })}\r\n                                                    />\r\n                                                </Nav.Link>\r\n                                            </>\r\n                                        </Media>\r\n                                    </Attachments>\r\n                                </ListGroup.Item>\r\n                            </>\r\n                        );\r\n                    }) : <ListGroup.Item>\r\n                        <Attachments className=\"norecordtxt\">\r\n                            {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                        </Attachments>\r\n                    </ListGroup.Item>\r\n                }\r\n                {this.props.hidePaging ? \"\" :\r\n                    <CustomPager\r\n                        skip={this.state.skip}\r\n                        take={this.state.take}\r\n                        // width={20}\r\n                        pagershowwidth={33}\r\n                        handlePageChange={this.handlePageChange}\r\n                        total={this.props.attachmentList ? this.props.attachmentList.length : 0}\r\n                        buttonCount={this.state.buttonCount}\r\n                        info={this.state.info}\r\n                        pageSize={this.props.settings ? this.props.settings[15].split(\",\").map(setting => parseInt(setting)):[5, 10,15]}\r\n\r\n                    >\r\n                    </CustomPager>\r\n                }\r\n            </ListGroup>\r\n        );\r\n    }\r\n    showHideDetails = (event, index) => {\r\n\r\n        event.stopPropagation();\r\n        let showMore = { ...this.state.showMore, [index]: !this.state.showMore[index] }\r\n        this.setState({ showMore })\r\n\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.attachmentList !== previousProps.attachmentList) {\r\n            if (this.props.skip === undefined && this.props.attachmentList && this.props.attachmentList.length <= this.state.skip) {\r\n                this.setState({ skip: 0 });\r\n            }\r\n        }\r\n        if (this.props.skip !== undefined && this.props.skip !== previousProps.skip) {\r\n            this.setState({ skip: this.props.skip, take: this.props.take });\r\n        }\r\n    }\r\n}\r\nexport default injectIntl(ListAttachment);"]},"metadata":{},"sourceType":"module"}