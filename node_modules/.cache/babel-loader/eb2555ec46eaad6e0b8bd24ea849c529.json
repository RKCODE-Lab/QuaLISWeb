{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var AddYear=function AddYear(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"syear\",label:props.intl.formatMessage({id:\"IDS_YEAR\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_YEAR\"}),selected:props.selectedRecord.syear// showYearDropdown={true}\n,dateFormat:\"yyyy\",isClearable:false,onChange:function onChange(date){return props.handleFilterDateChange(\"syear\",date);},value:props.selectedRecord.syear,showYearPicker:true,isMandatory:true//minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\n,maxDate:new Date(2999,12,30)// scrollableYearDropdown={true}\n,yearDropdownItemNumber:5})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"sdescription\"]:\"\",maxLength:250,onChange:function onChange(event){return props.onInputOnChange(event);},isMandatory:false,required:false})));};export default injectIntl(AddYear);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/configurationmaster/AddYear.jsx"],"names":["React","Row","Col","FormTextarea","injectIntl","DateTimePicker","AddYear","props","intl","formatMessage","id","selectedRecord","syear","date","handleFilterDateChange","Date","event","onInputOnChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eA2BI,oBAAC,cAAD,EACI,IAAI,CAAE,OADV,CAEI,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAFX,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAJrB,CAKI,QAAQ,CAAEH,KAAK,CAACI,cAAN,CAAqBC,KAC/B;AANJ,CAOI,UAAU,CAAE,MAPhB,CAQI,WAAW,CAAE,KARjB,CASI,QAAQ,CAAE,kBAAAC,IAAI,QAAIN,CAAAA,KAAK,CAACO,sBAAN,CAA6B,OAA7B,CAAsCD,IAAtC,CAAJ,EATlB,CAUI,KAAK,CAAEN,KAAK,CAACI,cAAN,CAAqBC,KAVhC,CAWI,cAAc,KAXlB,CAYI,WAAW,CAAE,IACb;AAbJ,CAcI,OAAO,CAAE,GAAIG,CAAAA,IAAJ,CAAS,IAAT,CAAe,EAAf,CAAmB,EAAnB,CACT;AAfJ,CAgBI,sBAAsB,CAAE,CAhB5B,EA3BJ,CADJ,cA+CI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAE,cADV,CAEI,KAAK,CAAER,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CAFX,CAGI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CAHjB,CAII,KAAK,CAAEH,KAAK,CAACI,cAAN,CAAuBJ,KAAK,CAACI,cAAN,CAAqB,cAArB,CAAvB,CAA8D,EAJzE,CAKI,SAAS,CAAE,GALf,CAMI,QAAQ,CAAE,kBAACK,KAAD,QAAWT,CAAAA,KAAK,CAACU,eAAN,CAAsBD,KAAtB,CAAX,EANd,CAOI,WAAW,CAAE,KAPjB,CAQI,QAAQ,CAAE,KARd,EADJ,CA/CJ,CADJ,CA8DH,CA/DD,CAgEA,cAAeZ,CAAAA,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddYear = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                {/* <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    name={\"syear\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"syear\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={4}\r\n                /> */}\r\n                {/* <FormNumericInput\r\n                //     name=\"syear\"\r\n                //     label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                //     placeholder={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                //     type=\"number\"\r\n                //     value={props.selectedRecord ? props.selectedRecord[\"syear\"] : \"\"}                   \r\n                //     strict={true}\r\n                //     maxLength={4}\r\n                //     onChange={(event) => props.onNumericInputOnChange(event, 'syear')}\r\n                //     noStyle={true}\r\n                //     precision={0}\r\n                //     className=\"form-control\"                   \r\n                //     isMandatory={true}\r\n                //     // errors=\"Please provide a valid number.\"\r\n                // /> */}\r\n                <DateTimePicker\r\n                    name={\"syear\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    selected={props.selectedRecord.syear}\r\n                    // showYearDropdown={true}\r\n                    dateFormat={\"yyyy\"}\r\n                    isClearable={false}\r\n                    onChange={date => props.handleFilterDateChange(\"syear\", date)}\r\n                    value={props.selectedRecord.syear}\r\n                    showYearPicker\r\n                    isMandatory={true}\r\n                    //minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\r\n                    maxDate={new Date(2999, 12, 30)}\r\n                    // scrollableYearDropdown={true}\r\n                    yearDropdownItemNumber={5}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sdescription\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    maxLength={250}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddYear);"]},"metadata":{},"sourceType":"module"}