{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import rsapi from\"../rsapi\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{attachmentType,parameterType,SampleType,transactionStatus,MaterialType}from\"../components/Enumeration\";import{constructjsonOptionList,constructOptionList,rearrangeDateFormat,//formatInputDate,\nsortData,getComboLabelValue}from\"../components/CommonScript\";import Axios from\"axios\";import{intl}from\"../components/App\";import{initRequest}from\"./LoginAction\";export var sampleTypeOnChange=function sampleTypeOnChange(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var url=\"/testgroup\";if(inputParam.classUrl){url=inputParam.classUrl;}rsapi.post(url+inputParam.methodUrl,inputParam.inputData).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{tempFilterData:inputParam.inputData.tempFilterData,masterData:_objectSpread(_objectSpread({},masterData),response.data),loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){masterData[\"ExistingLinkTable\"]=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});toast.warn(error.response.data);}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);}});};};export var filterTestGroup=function filterTestGroup(inputParam,masterData,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup/filterTestGroup\",inputParam.inputData).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}dispatch({type:DEFAULT_RETURN,payload:{filterData:inputParam.inputData.filterData,masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{isrulesenginerequired:inputParam['inputData']['filterData']['nsampletypecode']['item']['nrulesenginerequired'],searchedData:undefined}),loading:false,testskip:0,historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var createTree=function createTree(selectedRecord,userInfo,masterData,ncontrolCode){return function(dispatch){//ALPD-1466,1465\nvar isValid=false;if(selectedRecord&&selectedRecord.ntreeversiontempcode!==\"\"){// if (selectedRecord && selectedRecord.nsampletypecode.item.nportalrequired === transactionStatus.YES &&\n//     masterData.FocusKey === \"root\" && masterData && masterData.TreeTemplateManipulation.length > 0) {\n//     toast.warn(intl.formatMessage({\n//         id: \"IDS_MORETHANONEPROFILENOTALLOWEDCLINICALTYPE\"\n//     }));\n// } else \nif(selectedRecord.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.YES){isValid=true;}else if(selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES||selectedRecord.nproductcode){isValid=true;}else{toast.warn(intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}if(isValid){var inputParam={sampletype:selectedRecord.nsampletypecode.item,ncategorycode:selectedRecord.nproductcatcode.value,ntreeversiontempcode:selectedRecord.ntreeversiontempcode.value,nprojectmastercode:selectedRecord.nprojectmastercode?selectedRecord.nprojectmastercode.value:-1,userinfo:userInfo,treetemplatemanipulation:masterData.selectedNode};dispatch(initRequest(true));rsapi.post(\"/testgroup/getTemplateMasterDetails\",_objectSpread({},inputParam)).then(function(response){var treetempTranstestGroup=response.data[\"TreetempTranstestGroup\"]||[];// const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\n//         return {\n//             \"idsName\": item.slabelname,\n//             \"dataField\": \"sleveldescription_\" + index,\n//             \"mandatory\": true\n//         }\n// });\n//  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\nvar mandatoryFields=[];treetempTranstestGroup.forEach(function(item,index){if(item.sleveldescription===null){mandatoryFields.push({\"idsName\":item.slabelname,\"dataField\":\"sleveldescription_\"+index,\"mandatory\":true});}});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_PROFILETREE\",TreetempTranstestGroup:treetempTranstestGroup,treeMandatoryFields:mandatoryFields,//selectedRecord,\nncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export var editTree=function editTree(operation,selectedNode,userinfo,ncontrolCode,filterData,masterData){return function(dispatch){if(!selectedNode){return toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}//console.log(\"edit Tree:\", selectedNode, masterData);\nvar treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===selectedNode[\"ntreeversiontempcode\"];});// if (treeVersionTemplateIndex !== -1){\nvar templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;//}\nif(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedNode){dispatch(initRequest(true));rsapi.post(\"/testgroup/getTreeById\",{userinfo:userinfo,treetemplatemanipulation:selectedNode,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var treetempTranstestGroup=response.data;var treeMandatoryFields=treetempTranstestGroup&&[{\"idsName\":treetempTranstestGroup.slabelname,\"dataField\":\"sleveldescription\",\"mandatory\":true}];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_EDITTREE\",selectedRecord:_objectSpread({},treetempTranstestGroup),treeMandatoryFields:treeMandatoryFields,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}}};};export var addSpecification=function addSpecification(operation,inputParam,ncontrolCode,masterDatas){return function(dispatch){//if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\nif(inputParam.selectedRecord&&inputParam.selectedRecord.ntreeversiontempcode!==\"\"){if(inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.selectedNode!=null&&inputParam.selectedNode.nnextchildcode===-1){if(masterDatas&&masterDatas.SelectedSpecification===null&&operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{var urlArray=[];if(operation===\"update\"){var testgroupspecification=inputParam.testgroupspecification[0];// let isValidOperation = false;\n// if (operation === \"update\"){\n//     if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\n//         testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\n//             isValidOperation = true;\n//     }\n//     else {\n//         toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         return;\n//     }\n// }\n// else{\n//     isValidOperation = true;\n// }\nif(testgroupspecification.napprovalstatus===transactionStatus.CORRECTION||testgroupspecification.napprovalstatus===transactionStatus.DRAFT){urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\",{testgroupspecification:testgroupspecification,userinfo:inputParam.userinfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value}));}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));return;}}else{urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\",{userinfo:inputParam.userInfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value,nprojectmastercode:masterDatas.selectedNode.nprojectmastercode//currentdate: formatInputDate(new Date(), true)\n}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var masterData=inputParam.masterData!==undefined?inputParam.masterData:masterDatas;if(operation===\"update\"){masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response[1].data),{},{testgroupspecification:inputParam.testgroupspecification});selectedRecord=_objectSpread(_objectSpread({sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode&&inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow},response[1].data.SelectedSpecification),{},{//dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\ndexpirydate:rearrangeDateFormat(inputParam.userinfo,response[1].data.SelectedSpecification[\"sexpirydate\"]),ntzexpirydate:{\"label\":response[1].data.SelectedSpecification.stimezoneid,\"value\":response[1].data.SelectedSpecification.ntzexpirydate}});}else{selectedRecord={sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode&&inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,sspecname:inputParam.selectedNode.sleveldescription,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,dexpirydate:rearrangeDateFormat(inputParam.userInfo,response[1].data.ExpiryDate),selectedCopyProfileName:inputParam.selectedNode.sleveldescription,selectedCopyNodeManipulationCode:inputParam.selectedNode.ntemplatemanipulationcode,CopyFocusKey:masterData.FocusKey,CopyActiveKey:masterData.ActiveKey,//ncomponentrequired: inputParam.selectedNode.nsampletypecode === SampleType.CLINICALTYPE ? transactionStatus.YES : transactionStatus.NO,\n// ncomponentrequired: transactionStatus.YES,\n// ncomponentrequired :inputParam.selectedRecord.nproductcatcode.item.nmaterialtypecode == MaterialType.IQCSTANDARDMATERIALTYPE ?transactionStatus.NO:transactionStatus.YES,\nncomponentrequired:inputParam.selectedRecord.nsampletypecode&&inputParam.selectedRecord.nsampletypecode.item.ncomponentrequired?inputParam.selectedRecord.nsampletypecode.item.ncomponentrequired:transactionStatus.YES,// nclinicalspec: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\nntransactionstatus:transactionStatus.ACTIVE,ntzexpirydate:{\"label\":inputParam.userInfo.stimezoneid,\"value\":inputParam.userInfo.ntimezonecode}};}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_SPECIFICATION\",masterData:masterData,selectedRecord:selectedRecord,timeZoneList:constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",false,false,true).get(\"OptionList\"),ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}else{if(operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTLASTLEVELNODETOADDSPEC\"}));}}}}else{toast.warn(intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}};};export var addComponent=function addComponent(SelectedSpecification,userInfo,ncontrolCode,masterData,genericLabel){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{rsapi.post(\"/testgroup/getAvailableComponent\",{userinfo:userInfo,testgroupspecification:_objectSpread(_objectSpread({},SelectedSpecification),{},{nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"],nclinicaltyperequired:masterData.nsampletypecode.item.nclinicaltyperequired})}).then(function(response){var testGroupSpecSampleType=response.data[\"TestGroupSpecSampleType\"]||[];if(testGroupSpecSampleType.length>0){var testCategory=constructOptionList(response.data[\"TestCategory\"]||[],\"ntestcategorycode\",\"stestcategoryname\",'ntestcategorycode','ascending',false);var sampleTypeMap=constructOptionList(testGroupSpecSampleType,\"ncomponentcode\",\"scomponentname\",false,false,true);// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][userInfo.slanguagetypecode],testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupSpecSampleType:sampleTypeMap.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ncomponentcode:sampleTypeMap.get(\"DefaultValue\"),ntestcategorycode:testCategory.get(\"DefaultValue\")?testCategory.get(\"DefaultValue\"):testCategory.get(\"OptionList\")[0]},ncontrolCode:ncontrolCode}});}else{toast.warn(genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][userInfo.slanguagetypecode]+\" \"+intl.formatMessage({id:\"IDS_NOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export var addTestGroupTest=function addTestGroupTest(selectedComponent,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){if(masterData.selectedNode!==undefined&&masterData.selectedNode!==null){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var openTestModal=false;if(selectedSpecification.ncomponentrequired===transactionStatus.YES){if(selectedComponent==undefined){toast.warn(intl.formatMessage({id:\"IDS_NEEDCOMPONENTTOADDTEST\"}));}else{openTestModal=true;}}else{openTestModal=true;}if(openTestModal===true){rsapi.post(\"/testgroup/getAvailableTest\",{userinfo:userInfo,testgroupspecsampletype:selectedComponent,ntreeversiontempcode:filterData.ntreeversiontempcode.value,nprojectmastercode:masterData.selectedNode.nprojectmastercode,nclinicaltyperequired:filterData.nsampletypecode&&filterData.nsampletypecode.item.nclinicaltyperequired}).then(function(response){var testCategory;// = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\n// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\nif(response.data[\"TestCategory\"].length>0){testCategory=constructOptionList(response.data[\"TestCategory\"],\"ntestcategorycode\",\"stestcategoryname\",\"ntestcategorycode\",\"ascending\",false);dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_TEST\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ntestcategorycode:{label:response.data[\"SelectedTestCategory\"].stestcategoryname,value:response.data[\"SelectedTestCategory\"].stestcategorycode,item:response.data[\"SelectedTestCategory\"]}//ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\n},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};};export var editTestGroupTest=function editTestGroupTest(operation,selectedTest,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var ntestcode=selectedTest.ntestcode;var urlArray=[rsapi.post(\"/testgroup/getActiveTestById\",{userinfo:userInfo,testgrouptest:selectedTest,ntreeversiontempcode:filterData.ntreeversiontempcode.value,nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"]?masterData[\"selectedNode\"][\"nprojectmastercode\"]:-1}),// rsapi.post(\"/source/getSource\", {\n//     userinfo: userInfo\n// }),\nrsapi.post(\"/testmaster/getSection\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getMethod\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getInstrumentCategory\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getTestAttachment\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getContainerType\",{ntestcode:ntestcode,userinfo:userInfo}),//ALPD-3418\nrsapi.post(\"/testmaster/getTestPackage\",{ntestcode:ntestcode,userinfo:userInfo})];Axios.all(urlArray).then(function(response){// const editObject = response[0].data.TestGroupTest;\n// const testFileItem = response[0].data.TestGroupTestFile;\n// const SelectedTest = response[0].data.TestGroupTest;\nvar editObject=response[0].data.SelectedTestGroupTest;var testFileItem=response[0].data.TestGroupTestFile;var SelectedTest=response[0].data.SelectedTest;//const TestGroupTest = response[0].data.TestGroupTest;\nvar selectedRecord=_objectSpread(_objectSpread({},editObject),{},{// nsourcecode: {\n//     \"label\": editObject.ssourcename,\n//     \"value\": editObject.nsourcecode\n// },\nnsectioncode:{\"label\":editObject.ssectionname,\"value\":editObject.nsectioncode},nmethodcode:{\"label\":editObject.smethodname,\"value\":editObject.nmethodcode},ninstrumentcatcode:{\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode},ncontainertypecode:{\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode},ntestpackagecode:{\"label\":editObject.stestpackagename,\"value\":editObject.ntestpackagecode}});if(testFileItem){selectedRecord[\"ntestfilecode\"]={\"label\":testFileItem.sfilename,\"value\":testFileItem.ntestgroupfilecode,item:testFileItem};selectedRecord[\"ntestgroupfilecode\"]=testFileItem.ntestgroupfilecode;}if(editObject.nmethodcode!==-1){selectedRecord[\"nmethodcode\"]={\"label\":editObject.smethodname,\"value\":editObject.nmethodcode};}else{selectedRecord[\"nmethodcode\"]=undefined;}if(editObject.ninstrumentcatcode!==-1){selectedRecord[\"ninstrumentcatcode\"]={\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode};}else{selectedRecord[\"ninstrumentcatcode\"]=undefined;}if(editObject.ncontainertypecode!==-1){selectedRecord[\"ncontainertypecode\"]={\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode};}else{selectedRecord[\"ncontainertypecode\"]=undefined;}//ALPD-3418\nif(editObject.ntestpackagecode!==-1){selectedRecord[\"ntestpackagecode\"]={\"label\":editObject.stestpackagename,\"value\":editObject.ntestpackagecode};}else{selectedRecord[\"ntestpackagecode\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response[0].data),{},{SelectedTest:SelectedTest//TestGroupTest : [TestGroupTest]\n}),openModal:true,operation:operation,screenName:\"IDS_EDITTESTGROUPTEST\",testGroupInputData:{// source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\nsection:constructOptionList(response[1].data||[],\"nsectioncode\",\"ssectionname\",false,false,true).get(\"OptionList\"),method:constructOptionList(response[2].data||[],\"nmethodcode\",\"smethodname\",false,false,true).get(\"OptionList\"),instrumentCategory:constructOptionList(response[3].data||[],\"ninstrumentcatcode\",\"sinstrumentcatname\",false,false,true).get(\"OptionList\"),containerType:constructOptionList(response[5].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true).get(\"OptionList\"),testFile:constructOptionList(response[4].data||[],\"ntestfilecode\",\"sfilename\",false,false,true).get(\"OptionList\"),testpackage:constructOptionList(response[6].data||[],\"ntestpackagecode\",\"stestpackagename\",false,false,true).get(\"OptionList\")},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode}});}).catch(function(error){//console.log(\"errror:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var editTestGroupParameter=function editTestGroupParameter(operation,selectedParameter,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/testgroup/getActiveParameterById\",{userinfo:userInfo,testgrouptestparameter:_objectSpread(_objectSpread({},selectedParameter),{},{nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"]}),ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/parametertype/getParameterType\",{userinfo:userInfo}),rsapi.post(\"unit/getUnit\",{userinfo:userInfo}),rsapi.post(\"grade/getGrade\",{userinfo:userInfo}),rsapi.post(\"checklist/getApprovedChecklist\",{\"userinfo\":userInfo})];Axios.all(urlArray).then(function(response){var parameterObject=response[0].data.TestGroupTestParameter[0];var predefinedObject=response[0].data.TestGroupTestPredefinedParameter;var characterObject=response[0].data.TestGroupTestCharParameter;var numericObject=response[0].data.TestGroupTestNumericParameter&&response[0].data.TestGroupTestNumericParameter.length>0?response[0].data.TestGroupTestNumericParameter[0]:{};var selectedRecord=_objectSpread(_objectSpread({},parameterObject),{},{nunitcode:{\"label\":parameterObject.sunitname,\"value\":parameterObject.nunitcode},nparametertypecode:{\"label\":parameterObject.sdisplaystatus,\"value\":parameterObject.nparametertypecode},parameterTypeCode:parameterObject.nparametertypecode,nchecklistversioncode:{\"label\":parameterObject.schecklistname,\"value\":parameterObject.nchecklistversioncode},schecklistversionname:parameterObject.schecklistversionname,ntestformulacode:parameterObject.ntestformulacode>0?{\"label\":parameterObject.sformulacalculationdetail,\"value\":parameterObject.ntestformulacode,item:{sformulacalculationdetail:parameterObject.sformulacalculationdetail,ntestformulacode:parameterObject.ntestformulacode,sformulacalculationcode:parameterObject.sformulacalculationcode}}:\"\"});if(selectedRecord[\"schecklistname\"]===\"NA\"){delete selectedRecord[\"nchecklistversioncode\"];}if(selectedRecord[\"schecklistversionname\"]===\"NA\"){delete selectedRecord[\"schecklistversionname\"];}if(selectedRecord[\"sunitname\"]===\"NA\"){delete selectedRecord[\"nunitcode\"];}if(characterObject){selectedRecord[\"scharname\"]=characterObject.scharname;selectedRecord[\"ntestgrouptestcharcode\"]=characterObject.ntestgrouptestcharcode;}if(predefinedObject){selectedRecord[\"ntestgrouptestpredefcode\"]=predefinedObject.ntestgrouptestpredefcode;selectedRecord[\"spredefinedname\"]=predefinedObject.spredefinedname;selectedRecord[\"ndefaultstatus\"]=predefinedObject.ndefaultstatus;selectedRecord[\"ngradecode\"]={\"label\":predefinedObject.sdisplaystatus,\"value\":predefinedObject.ngradecode};}if(numericObject){selectedRecord[\"ntestgrouptestnumericcode\"]=numericObject.ntestgrouptestnumericcode;selectedRecord[\"sminlod\"]=numericObject.sminlod;selectedRecord[\"smaxlod\"]=numericObject.smaxlod;selectedRecord[\"sminb\"]=numericObject.sminb;selectedRecord[\"smina\"]=numericObject.smina;selectedRecord[\"smaxa\"]=numericObject.smaxa;selectedRecord[\"smaxb\"]=numericObject.smaxb;selectedRecord[\"sminloq\"]=numericObject.sminloq;selectedRecord[\"smaxloq\"]=numericObject.smaxloq;selectedRecord[\"sdisregard\"]=numericObject.sdisregard;selectedRecord[\"sresultvalue\"]=numericObject.sresultvalue;selectedRecord[\"ngradecode\"]={\"label\":numericObject.sgradename,\"value\":numericObject.ngradecode};}var gradeMap=constructOptionList(response[3].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var unitMap=constructOptionList(response[2].data||[],\"nunitcode\",\"sunitname\",false,false,true);var grade=gradeMap.get(\"OptionList\");var unit=unitMap.get(\"OptionList\");var disabled=parameterObject.nparametertypecode===parameterType.NUMERIC?false:true;dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:operation,screenName:\"IDS_PARAMETER\",testGroupInputData:{unit:unit,grade:grade,testFormula:constructOptionList(response[0].data.TestFormula||[],\"ntestformulacode\",\"sformulacalculationdetail\",false,false,true).get(\"OptionList\"),parameterType:constructOptionList(response[1].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true).get(\"OptionList\"),checkListVersion:constructOptionList(response[4].data||[],\"nchecklistversioncode\",\"schecklistname\",false,false,true).get(\"OptionList\"),needRoundingDigit:disabled,needUnit:disabled},parameterData:{grade:grade,defaultUnit:unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\"},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\n//     return dispatch => {\n//         const testgroupspecification = optionalData.testgroupspecification;\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\n//             dispatch(initRequest(true));\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\n//             .then(response=>{\n//                 dispatch({\n//                     type: DEFAULT_RETURN, \n//                     payload:{\n//                         openChildModal: true,\n//                         operation: \"create\",\n//                         screenName: \"IDS_FORMULA\",\n//                         testGroupInputData: {testFormula: response.data},\n//                         selectedRecord: {},\n//                         ncontrolCode\n//                 }});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\n//                 if(error.response.status === 409 || error.response.status === 417) {\n//                     toast.warn(error.response.data);\n//                 } else {\n//                     toast.error(error.message)\n//                 }\n//             });\n//         } else {\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         }\n//     }\n// }\nexport var getTestGroupParameter=function getTestGroupParameter(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestParameter\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getComponentBySpecId=function getComponentBySpecId(inputParam,masterData,searchRef){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.keyName,inputParam.selectedRecord.testgroupspecification[0]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}var historyDataState=_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),historyDataState:historyDataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupDetails=function getTestGroupDetails(inputParam){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestGroupTest\",{ntestgrouptestcode:parseInt(inputParam['ntestgrouptestcode']),userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data),testskip:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupComponentDetails=function getTestGroupComponentDetails(inputParam,masterData,searchRef){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestByComponentId\",{testgroupspecsampletype:inputParam['testgroupspecsampletype'],userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),testskip:0,testtake:5,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecification=function getSpecification(inputParam,masterData,searchRef){return function(dispatch){if(inputParam.selectedRecord!==null){rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},_defineProperty({},inputParam.keyName,inputParam.selectedRecord))).then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),{},{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey},response.data),{},{selectedNode:inputParam.selectedRecord,searchedData:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedNode:inputParam.selectedRecord,TestGroupSpecification:[],SelectedSpecification:{},TestGroupTest:[],TestGroupTestParameter:[],TestGroupTestNumericParameter:[],TestGroupTestFormula:[],TestGroupTestPredefinedParameter:[],TestGroupTestClinicalSpec:[],TestGroupTestCharParameter:[],ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,SelectedTest:{},selectedParameter:{},TestGroupSpecFile:[],TestGroupSpecificationHistory:[],SelectedComponent:undefined,RulesEngine:[]})}});}};};export var changeTestCategory=function changeTestCategory(inputParam,testGroupInputData){return function(dispatch){rsapi.post(\"/testgroup/getTestMasterByCategory\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);inputParam.selectedRecord.ntestcode=[];dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:inputParam.selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},testGroupInputData),response.data)}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecificationDetails=function getSpecificationDetails(inputParam,masterData,searchRef){return function(dispatch){rsapi.post(\"/testgroup/get\"+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),screenName:inputParam.screenName}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var editSpecFile=function editSpecFile(inputParam){return function(dispatch){var masterData=inputParam.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputParam.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo}),rsapi.post(\"/testgroup/getActiveSpecFileById\",{userinfo:inputParam.userInfo,testgroupspecfile:inputParam.selectedRecord,ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})];Axios.all(urlArray).then(function(response){var linkmaster=response[0].data.LinkMaster;var defaultLink=linkmaster.filter(function(item){return item.ndefaultlink===transactionStatus.YES;});var editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?{\"label\":defaultLink[0].slinkname,\"value\":defaultLink[0].nlinkcode}:\"\";link={slinkfilename:'',slinkdescription:'',sdescription:editObject.sdescription,nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}var selectedRecord=_objectSpread(_objectSpread({},link),{},{nallotedspeccode:editObject.nallotedspeccode,nspecfilecode:editObject.nspecfilecode,stypename:editObject.stypename,nattachmenttypecode:editObject.nattachmenttypecode,nlinkcode:nlinkcode// disabled: true\n});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",screenName:\"IDS_SPECFILE\",editFiles:Object.values(editObject).length>0&&editObject.nattachmenttypecode===attachmentType.FTP?editObject:{},selectedRecord:selectedRecord,ncontrolCode:inputParam.ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var addTestGroupCodedResult=function addTestGroupCodedResult(operation,paramdata,userInfo,ncontrolCode,optionalData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterSubCodedById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var selectedsubcodedresult=[];var selectsubcodedelete=[];var gradeMap=constructOptionList(response[0].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestpredefcode:paramdata[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],ngradecode:{\"label\":editCodedResult[\"sdisplaystatus\"],\"value\":editCodedResult[\"ngradecode\"]},spredefinedname:editCodedResult[\"spredefinedname\"],//sresultparacomment: editCodedResult[\"sresultparacomment\"],\nspredefinedsynonym:editCodedResult[\"spredefinedsynonym\"],spredefinedcomments:editCodedResult[\"spredefinedcomments\"],nneedresultentryalert:editCodedResult[\"nneedresultentryalert\"],nneedsubcodedresult:editCodedResult[\"nneedsubcodedresult\"],salertmessage:editCodedResult[\"salertmessage\"]};selectedsubcodedresult=response[2].data;}else{selectedRecord={ngradecode:gradeMap.get(\"DefaultValue\"),nneedresultentryalert:4,nneedsubcodedresult:4// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CODEDRESULT\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false,selectedsubcodedresult:selectedsubcodedresult,selectsubcodedelete:selectsubcodedelete}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var subCodedResultView=function subCodedResultView(operation,paramdata,userInfo,ncontrolCode,optionalData,masterData){return function(dispatch){rsapi.post(\"testgroup/getActivePredefinedParameterSubCoded\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo}).then(function(response){var selectedsubcoderesult=[];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"View\",screenName:\"IDS_SUBCODERESULT\",selectedsubcoderesult:response.data,masterData:_objectSpread(_objectSpread({},masterData),{},{selectedsubcoderesult:response.data,searchedData:undefined})//screenName: inputParam.screenName\n}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var addTestGroupNumericTab=function addTestGroupNumericTab(operation,paramdata,userInfo,optionalData,masterData,ncontrolCode){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"patient/getGender\",{\"userinfo\":userInfo}),rsapi.post(\"grade/getGrade\",{userinfo:userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var gradeMap=constructOptionList(response[0].data.genderList||[],\"ngendercode\",\"sgendername\",false,false,true);var gender=gradeMap.get(\"OptionList\");var gradeNewMap=constructOptionList(response[1].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var grade=gradeNewMap.get(\"OptionList\");sortData(grade||[],\"ascending\",\"value\");if(operation===\"update\"){var editCodedResult=response[2].data;selectedRecord={ntestgrouptestclinicspeccode:paramdata[\"ntestgrouptestclinicspeccode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],nfromage:paramdata[\"nfromage\"],ntoage:paramdata[\"ntoage\"],ngradecode:getComboLabelValue(editCodedResult,response[1].data,\"ngradecode\",\"sgradename\"),ngendercode:{\"label\":editCodedResult[\"sgendername\"],\"value\":editCodedResult[\"ngendercode\"]},// ngradecode: {\n//     \"label\": editCodedResult[\"sgradename\"],\n//     \"value\": editCodedResult[\"ngradecode\"]\n// },\nnhigha:editCodedResult[\"shigha\"]==='null'?'':editCodedResult[\"shigha\"],nhighb:editCodedResult[\"shighb\"]==='null'?'':editCodedResult[\"shighb\"],nlowa:editCodedResult[\"slowa\"]==='null'?'':editCodedResult[\"slowa\"],nlowb:editCodedResult[\"slowb\"]==='null'?'':editCodedResult[\"slowb\"],sminlod:editCodedResult[\"sminlod\"]==='null'?'':editCodedResult[\"sminlod\"],smaxlod:editCodedResult[\"smaxlod\"]==='null'?'':editCodedResult[\"smaxlod\"],sminloq:editCodedResult[\"sminloq\"]==='null'?'':editCodedResult[\"sminloq\"],smaxloq:editCodedResult[\"smaxloq\"]==='null'?'':editCodedResult[\"smaxloq\"],sdisregard:editCodedResult[\"sdisregard\"]==='null'?'':editCodedResult[\"sdisregard\"],sresultvalue:editCodedResult[\"sresultvalue\"]==='null'?'':editCodedResult[\"sresultvalue\"]};}else{selectedRecord={ngendercode:gradeMap.get(\"DefaultValue\")// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CLINICALSPEC\",parameterData:{gender:gender,grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var viewTestGroupCheckList=function viewTestGroupCheckList(inputParam,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"checklist/viewTemplate\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:true,testGroupCheckList:{templateData:response.data},loading:false,selectedRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var reportSpecification=function reportSpecification(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/specReportGenerate\",_objectSpread(_objectSpread({},inputParam),{},{ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var retireSpecification=function retireSpecification(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/retireSpec\",_objectSpread({},inputParam)).then(function(response){// const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\nsortData(response.data);masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForTestMaterial=function getDataForTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,masterData,primaryKeyName){return function(dispatch){if(masterData.selectedNode!==undefined&&masterData.selectedNode!==null&&masterData.SelectedSpecification!==null){var testgroupspecification=masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:masterData.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){console.log(ncontrolCode);if(masterData.SelectedTest&&masterData.SelectedTest!==undefined){if(response[1].data===\"Success\"){var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialTypedefault=materialTypeMap.get(\"DefaultValue\");selectedRecord[\"nmaterialtypecode\"]=materialTypedefault;if(selectedRecord[\"nmaterialtypecode\"]!==undefined){var _inputParam;var inputData=[];var inputParam=(_inputParam={operation:operation,selectedRecord:selectedRecord,materialType:materialType,inputData:{nmaterialtypecode:materialTypedefault.value}},_defineProperty(_inputParam,\"materialType\",materialType),_defineProperty(_inputParam,\"masterData\",masterData),_defineProperty(_inputParam,\"screenName\",screenName),_defineProperty(_inputParam,\"ncontrolCode\",ncontrolCode),_inputParam);dispatch(getMaterialCategoryBasedMaterialType(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:undefined,materialCategoryList:undefined,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:response[1].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:\"IDS_NEEDTOADDTEST\"}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};};export function getMaterialCategoryBasedMaterialType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode}).then(function(response){var selectedRecord={};selectedRecord=inputParam.selectedRecord;var materialCategoryMap=constructOptionList(response.data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialCategorydefault=materialCategoryMap.get(\"DefaultValue\");selectedRecord['nmaterialcatcode']=materialCategorydefault;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(response.data.MaterialCategoryMain.length===0){if(selectedRecord['nmaterialcatcode']){delete selectedRecord['nmaterialcatcode'];}if(selectedRecord['nmaterialcode']){delete selectedRecord['nmaterialcode'];}}var materialList=[];if(materialCategoryList.length!==0){materialList=materialList;inputParam=_objectSpread(_objectSpread({},inputParam),{},{responsecat:response,materialCategoryList:materialCategoryList,selectedRecord:selectedRecord,inputData:{//nmaterialcatcode: materialCategorydefault.value,\nnmaterialtypecode:inputParam.inputData.nmaterialtypecode}});dispatch(getMaterialBasedMaterialCategory(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,screenName:inputParam.screenName,masterData:masterData,loading:false,materialCategoryList:materialCategoryList,materialType:inputParam.materialType,materialList:materialList,selectedRecord:selectedRecord,operation:inputParam.operation,ncontrolCode:inputParam.ncontrolCode}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getMaterialBasedMaterialCategory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"testgroup/getAvailableMaterial\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode,nmaterialcatcode:inputParam.inputData.nmaterialcatcode!==undefined?inputParam.inputData.nmaterialcatcode:inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,ntestgrouptestcode:inputParam.masterData.SelectedTest.ntestgrouptestcode}).then(function(response){var selectedRecord=inputParam.selectedRecord;var materialMap=constructjsonOptionList(response.data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");if(response.data.MaterialCombo.length===0){delete selectedRecord['nmaterialcode'];}var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(inputParam.materialCategoryList){dispatch({type:DEFAULT_RETURN,payload:{materialCategoryList:inputParam.materialCategoryList,masterData:masterData,loading:false,materialList:materialList,openChildModal:true,screenName:inputParam.screenName,selectedRecord:inputParam.selectedRecord,materialType:inputParam.materialType,operation:inputParam.operation,ncontrolCode:inputParam.ncontrolCode}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,materialList:materialList,openChildModal:true}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export var getTestGroupMaterial=function getTestGroupMaterial(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestMaterial\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForEditTestMaterial=function getDataForEditTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,Data,primaryKeyName){return function(dispatch){var testgroupspecification=Data.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var _rsapi$post2;var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var materialCatUrl=rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode});var materialUrl=rsapi.post(\"testgroup/getAvailableMaterial\",{nmaterialcatcode:Data.selectedMaterial.nmaterialcatcode,nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode,ntestgrouptestcode:Data.SelectedTest.ntestgrouptestcode});var materialById=rsapi.post(\"testgroup/getActiveTestMaterialById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,primaryKeyName,Data.selectedMaterial.ntestgrouptestmaterialcode),_defineProperty(_rsapi$post2,\"userinfo\",userInfo),_rsapi$post2));var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:Data.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,materialCatUrl,materialUrl,materialById,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[4].data===\"Success\"){var _selectedRecord={};var MaterialCategoryData=[];var MaterialTypeData=[];var MaterialData=[];var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialCategoryMap=constructOptionList(response[1].data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialMap=constructjsonOptionList(response[2].data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");MaterialCategoryData.push({\"value\":response[3].data[\"nmaterialcatcode\"],\"label\":response[3].data[\"smaterialcatname\"]});MaterialTypeData.push({\"value\":response[3].data[\"nmaterialtypecode\"],\"label\":response[3].data[\"smaterialtypename\"]});MaterialData.push({\"value\":response[3].data[\"nmaterialcode\"],\"label\":response[3].data[\"smaterialname\"]});_selectedRecord=response[3].data;_selectedRecord[\"nmaterialcatcode\"]=MaterialCategoryData[0];_selectedRecord[\"nmaterialtypecode\"]=MaterialTypeData[0];_selectedRecord[\"nmaterialcode\"]=MaterialData[0];dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:materialList,materialCategoryList:materialCategoryList,selectedRecord:_selectedRecord,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}else{toast.warn(intl.formatMessage({id:response[4].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TestGroupAction.js"],"names":["toast","rsapi","DEFAULT_RETURN","attachmentType","parameterType","SampleType","transactionStatus","MaterialType","constructjsonOptionList","constructOptionList","rearrangeDateFormat","sortData","getComboLabelValue","Axios","intl","initRequest","sampleTypeOnChange","inputParam","masterData","dispatch","url","classUrl","post","methodUrl","inputData","then","response","data","type","payload","tempFilterData","loading","catch","error","status","warn","message","filterTestGroup","searchRef","current","value","filterData","isrulesenginerequired","searchedData","undefined","testskip","historyDataState","sort","filter","createTree","selectedRecord","userInfo","ncontrolCode","isValid","ntreeversiontempcode","nsampletypecode","item","ncategorybasedflowrequired","YES","nproductcatcode","ncategorybasedflow","nproductcode","formatMessage","id","sampletype","ncategorycode","nprojectmastercode","userinfo","treetemplatemanipulation","selectedNode","treetempTranstestGroup","mandatoryFields","forEach","index","sleveldescription","push","slabelname","openModal","operation","screenName","TreetempTranstestGroup","treeMandatoryFields","editTree","treeVersionTemplateIndex","findIndex","x","templateVersionStatus","ntransactionstatus","RETIRED","addSpecification","masterDatas","nnextchildcode","SelectedSpecification","urlArray","testgroupspecification","napprovalstatus","CORRECTION","DRAFT","all","sproductname","label","sproductcatname","dexpirydate","ntzexpirydate","stimezoneid","sspecname","ExpiryDate","selectedCopyProfileName","selectedCopyNodeManipulationCode","ntemplatemanipulationcode","CopyFocusKey","FocusKey","CopyActiveKey","ActiveKey","ncomponentrequired","ACTIVE","ntimezonecode","timeZoneList","get","addComponent","genericLabel","nclinicaltyperequired","testGroupSpecSampleType","length","testCategory","sampleTypeMap","slanguagetypecode","testGroupInputData","TestCategory","TestGroupSpecSampleType","TestGroupTest","ncomponentcode","ntestcategorycode","addTestGroupTest","selectedComponent","selectedSpecification","openTestModal","testgroupspecsampletype","stestcategoryname","stestcategorycode","editTestGroupTest","selectedTest","ntestcode","testgrouptest","editObject","SelectedTestGroupTest","testFileItem","TestGroupTestFile","SelectedTest","nsectioncode","ssectionname","nmethodcode","smethodname","ninstrumentcatcode","sinstrumentcatname","ncontainertypecode","scontainertype","ntestpackagecode","stestpackagename","sfilename","ntestgroupfilecode","section","method","instrumentCategory","containerType","testFile","testpackage","editTestGroupParameter","selectedParameter","testgrouptestparameter","parameterObject","TestGroupTestParameter","predefinedObject","TestGroupTestPredefinedParameter","characterObject","TestGroupTestCharParameter","numericObject","TestGroupTestNumericParameter","nunitcode","sunitname","nparametertypecode","sdisplaystatus","parameterTypeCode","nchecklistversioncode","schecklistname","schecklistversionname","ntestformulacode","sformulacalculationdetail","sformulacalculationcode","scharname","ntestgrouptestcharcode","ntestgrouptestpredefcode","spredefinedname","ndefaultstatus","ngradecode","ntestgrouptestnumericcode","sminlod","smaxlod","sminb","smina","smaxa","smaxb","sminloq","smaxloq","sdisregard","sresultvalue","sgradename","gradeMap","unitMap","grade","unit","disabled","NUMERIC","openChildModal","testFormula","TestFormula","checkListVersion","needRoundingDigit","needUnit","parameterData","defaultUnit","getTestGroupParameter","getComponentBySpecId","keyName","getTestGroupDetails","ntestgrouptestcode","parseInt","getTestGroupComponentDetails","testtake","getSpecification","activeKey","focusKey","primaryKey","TestGroupSpecification","TestGroupTestFormula","TestGroupTestClinicalSpec","TestGroupSpecFile","TestGroupSpecificationHistory","SelectedComponent","RulesEngine","changeTestCategory","getSpecificationDetails","editSpecFile","testgroupspecfile","linkmaster","LinkMaster","defaultLink","ndefaultlink","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","slinkdescription","sdescription","nlinkdefaultstatus","sfilesize","nfilesize","nallotedspeccode","nspecfilecode","stypename","editFiles","Object","values","FTP","addTestGroupCodedResult","paramdata","optionalData","testgrouptestpredefinedparameter","selectedsubcodedresult","selectsubcodedelete","editCodedResult","ntestgrouptestparametercode","spredefinedsynonym","spredefinedcomments","nneedresultentryalert","nneedsubcodedresult","salertmessage","showSaveContinue","needCodedResult","subCodedResultView","selectedsubcoderesult","addTestGroupNumericTab","genderList","gender","gradeNewMap","ntestgrouptestclinicspeccode","nfromage","ntoage","ngendercode","nhigha","nhighb","nlowa","nlowb","viewTestGroupCheckList","openTemplateModal","testGroupCheckList","templateData","reportSpecification","loadEsign","showConfirmAlert","document","getElementById","setAttribute","filepath","click","retireSpecification","getDataForTestMaterial","primaryKeyName","materialTypeUrl","validationUrl","console","log","materialTypeMap","materialType","materialTypedefault","nmaterialtypecode","getMaterialCategoryBasedMaterialType","materialList","materialCategoryList","isOpen","materialCategoryMap","MaterialCategoryMain","materialCategorydefault","responsecat","getMaterialBasedMaterialCategory","nmaterialcatcode","materialMap","MaterialCombo","getTestGroupMaterial","getDataForEditTestMaterial","Data","materialCatUrl","selectedMaterial","materialUrl","materialById","ntestgrouptestmaterialcode","MaterialCategoryData","MaterialTypeData","MaterialData"],"mappings":"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","sourcesContent":["import {\r\n    toast\r\n} from \"react-toastify\";\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    attachmentType,\r\n    parameterType,\r\n    SampleType,\r\n    transactionStatus,MaterialType\r\n} from \"../components/Enumeration\";\r\nimport {\r\n    constructjsonOptionList,\r\n    constructOptionList,\r\n    rearrangeDateFormat,\r\n    //formatInputDate,\r\n    sortData,getComboLabelValue\r\n} from \"../components/CommonScript\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    intl\r\n} from \"../components/App\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\n\r\n\r\nexport const sampleTypeOnChange = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let url = \"/testgroup\";\r\n        if (inputParam.classUrl) {\r\n            url = inputParam.classUrl;\r\n        }\r\n        rsapi.post(url + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        tempFilterData: inputParam.inputData.tempFilterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data\r\n                        },\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    masterData[\"ExistingLinkTable\"] = [];\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const filterTestGroup = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/filterTestGroup\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        filterData: inputParam.inputData.filterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            isrulesenginerequired:inputParam['inputData']['filterData']['nsampletypecode']['item']['nrulesenginerequired'],\r\n                            searchedData: undefined\r\n                        }, \r\n                        loading: false,\r\n                        testskip: 0,\r\n                        historyDataState: {\r\n                            ...inputParam.historyDataState,\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createTree = (selectedRecord, userInfo, masterData, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        //ALPD-1466,1465\r\n     let isValid =false;\r\n        if (selectedRecord && selectedRecord.ntreeversiontempcode !== \"\") {\r\n            // if (selectedRecord && selectedRecord.nsampletypecode.item.nportalrequired === transactionStatus.YES &&\r\n            //     masterData.FocusKey === \"root\" && masterData && masterData.TreeTemplateManipulation.length > 0) {\r\n            //     toast.warn(intl.formatMessage({\r\n            //         id: \"IDS_MORETHANONEPROFILENOTALLOWEDCLINICALTYPE\"\r\n            //     }));\r\n            // } else \r\n            if (selectedRecord.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES) {\r\n                isValid=true;\r\n            } else if ((selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES) || (selectedRecord.nproductcode)) {\r\n                isValid=true;\r\n            } else {\r\n               \r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_PRODUCTNOTAVAILABLE\"\r\n                }));\r\n            }\r\n        }\r\n         else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n            }\r\n            if(isValid){\r\n                const inputParam = {\r\n                    sampletype: selectedRecord.nsampletypecode.item,\r\n                    ncategorycode: selectedRecord.nproductcatcode.value,\r\n                    ntreeversiontempcode: selectedRecord.ntreeversiontempcode.value,\r\n                    nprojectmastercode: selectedRecord.nprojectmastercode ? selectedRecord.nprojectmastercode.value : -1,\r\n                    userinfo: userInfo,\r\n                    treetemplatemanipulation: masterData.selectedNode\r\n                }\r\n                dispatch(initRequest(true));\r\n                rsapi.post(\"/testgroup/getTemplateMasterDetails\", {\r\n                    ...inputParam\r\n                })\r\n                    .then(response => {\r\n                        const treetempTranstestGroup = response.data[\"TreetempTranstestGroup\"] || [];\r\n\r\n                        // const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\r\n                        //         return {\r\n                        //             \"idsName\": item.slabelname,\r\n                        //             \"dataField\": \"sleveldescription_\" + index,\r\n                        //             \"mandatory\": true\r\n                        //         }\r\n                        // });\r\n\r\n                        //  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\r\n                        const mandatoryFields = [];\r\n                        treetempTranstestGroup.forEach((item, index) => {\r\n                            if (item.sleveldescription === null) {\r\n                                mandatoryFields.push({\r\n                                    \"idsName\": item.slabelname,\r\n                                    \"dataField\": \"sleveldescription_\" + index,\r\n                                    \"mandatory\": true\r\n                                })\r\n                            }\r\n                        });\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"create\",\r\n                                screenName: \"IDS_PROFILETREE\",\r\n                                TreetempTranstestGroup: treetempTranstestGroup,\r\n                                treeMandatoryFields: mandatoryFields,\r\n                                //selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            }\r\n}\r\n}\r\n \r\nexport const editTree = (operation, selectedNode, userinfo, ncontrolCode, filterData, masterData) => {\r\n    return (dispatch) => {\r\n        if (!selectedNode) {\r\n            return toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n            }))\r\n        }\r\n        //console.log(\"edit Tree:\", selectedNode, masterData);\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === selectedNode[\"ntreeversiontempcode\"]);\r\n        // if (treeVersionTemplateIndex !== -1){\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        //}\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedNode) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(\"/testgroup/getTreeById\", {\r\n                    userinfo,\r\n                    treetemplatemanipulation: selectedNode,\r\n                    ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                })\r\n                    .then(response => {\r\n                        const treetempTranstestGroup = response.data;\r\n                        const treeMandatoryFields = treetempTranstestGroup && [{\r\n                            \"idsName\": treetempTranstestGroup.slabelname,\r\n                            \"dataField\": \"sleveldescription\",\r\n                            \"mandatory\": true\r\n                        }];\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTREE\",\r\n                                selectedRecord: {\r\n                                    ...treetempTranstestGroup\r\n                                },\r\n                                treeMandatoryFields,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n                }))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addSpecification = (operation, inputParam, ncontrolCode, masterDatas) => {\r\n    return (dispatch) => {\r\n        //if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\r\n        if (inputParam.selectedRecord && inputParam.selectedRecord.ntreeversiontempcode !== \"\") {\r\n            if (inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus === transactionStatus.RETIRED) {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                if (inputParam.selectedNode != null && inputParam.selectedNode.nnextchildcode === -1) {\r\n\r\n                    if (masterDatas && masterDatas.SelectedSpecification === null && operation === \"copy\") {\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n                    }\r\n                    else {\r\n                        let urlArray = [];\r\n                        if (operation === \"update\") {\r\n                            const testgroupspecification = inputParam.testgroupspecification[0];\r\n                            // let isValidOperation = false;\r\n                            // if (operation === \"update\"){\r\n                            //     if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                            //         testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                            //             isValidOperation = true;\r\n                            //     }\r\n                            //     else {\r\n                            //         toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n                            //         return;\r\n                            //     }\r\n                            // }\r\n                            // else{\r\n                            //     isValidOperation = true;\r\n                            // }\r\n                            if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                                testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                                urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                                urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\", {\r\n                                    testgroupspecification,\r\n                                    userinfo: inputParam.userinfo,\r\n                                    ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value\r\n                                }));\r\n                            }\r\n                            else {\r\n                                toast.warn(intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n                                return;\r\n                            }\r\n                        }\r\n                        else {\r\n                            urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                            urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\", {\r\n                                userinfo: inputParam.userInfo,\r\n                                ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value,\r\n                                nprojectmastercode:masterDatas.selectedNode.nprojectmastercode\r\n                                //currentdate: formatInputDate(new Date(), true)\r\n                            }));\r\n                        }\r\n                        Axios.all(urlArray)\r\n                            .then(response => {\r\n                                let selectedRecord = {};\r\n                                let masterData = inputParam.masterData !== undefined ? inputParam.masterData : masterDatas;\r\n\r\n                                if (operation === \"update\") {\r\n                                    masterData = {\r\n                                        ...inputParam.masterData,\r\n                                        ...response[1].data,\r\n                                        testgroupspecification: inputParam.testgroupspecification\r\n                                    }\r\n                                    selectedRecord = {\r\n                                        sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode && inputParam.selectedRecord.nproductcode.label,\r\n                                        sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                        ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                        ...response[1].data.SelectedSpecification,\r\n                                        //dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\r\n                                        dexpirydate: rearrangeDateFormat(inputParam.userinfo, response[1].data.SelectedSpecification[\"sexpirydate\"]),\r\n                                        ntzexpirydate: {\r\n                                            \"label\": response[1].data.SelectedSpecification.stimezoneid,\r\n                                            \"value\": response[1].data.SelectedSpecification.ntzexpirydate\r\n                                        }\r\n                                    };\r\n                                } else {\r\n                                    selectedRecord = {\r\n                                        sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode && inputParam.selectedRecord.nproductcode.label,\r\n                                        sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                        sspecname: inputParam.selectedNode.sleveldescription,\r\n                                        ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                        dexpirydate: rearrangeDateFormat(inputParam.userInfo, response[1].data.ExpiryDate),\r\n                                        selectedCopyProfileName: inputParam.selectedNode.sleveldescription,\r\n                                        selectedCopyNodeManipulationCode: inputParam.selectedNode.ntemplatemanipulationcode,\r\n                                        CopyFocusKey: masterData.FocusKey,\r\n                                        CopyActiveKey: masterData.ActiveKey,\r\n                                        //ncomponentrequired: inputParam.selectedNode.nsampletypecode === SampleType.CLINICALTYPE ? transactionStatus.YES : transactionStatus.NO,\r\n                                       // ncomponentrequired: transactionStatus.YES,\r\n                                        // ncomponentrequired :inputParam.selectedRecord.nproductcatcode.item.nmaterialtypecode == MaterialType.IQCSTANDARDMATERIALTYPE ?transactionStatus.NO:transactionStatus.YES,\r\n                                        ncomponentrequired : inputParam.selectedRecord.nsampletypecode && inputParam.selectedRecord.nsampletypecode.item.ncomponentrequired ? inputParam.selectedRecord.nsampletypecode.item.ncomponentrequired : transactionStatus.YES,\r\n                                        // nclinicalspec: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\r\n                                        ntransactionstatus: transactionStatus.ACTIVE,\r\n                                        ntzexpirydate: {\r\n                                            \"label\": inputParam.userInfo.stimezoneid,\r\n                                            \"value\": inputParam.userInfo.ntimezonecode\r\n                                        }\r\n                                    };\r\n                                }\r\n                                dispatch({\r\n                                    type: DEFAULT_RETURN,\r\n                                    payload: {\r\n                                        openModal: true,\r\n                                        operation: operation,\r\n                                        screenName: \"IDS_SPECIFICATION\",\r\n                                        masterData,\r\n                                        selectedRecord,\r\n                                        timeZoneList: constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", false, false, true).get(\"OptionList\"),\r\n                                        ncontrolCode\r\n                                    }\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.status === 500) {\r\n                                    toast.error(error.message);\r\n                                } else {\r\n                                    toast.warn(error.response.data);\r\n                                }\r\n                            })\r\n                    }\r\n                } else {\r\n                    if (operation === \"copy\") {\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_SELECTLASTLEVELNODETOADDSPEC\" }));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const addComponent = (SelectedSpecification, userInfo, ncontrolCode, masterData,genericLabel) => {\r\n    return (dispatch) => {\r\n\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            rsapi.post(\"/testgroup/getAvailableComponent\", {\r\n                userinfo: userInfo,\r\n                testgroupspecification: {...SelectedSpecification,nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"],\r\n                nclinicaltyperequired:masterData.nsampletypecode.item.nclinicaltyperequired}\r\n            })\r\n                .then(response => {\r\n                    const testGroupSpecSampleType = response.data[\"TestGroupSpecSampleType\"] || [];\r\n                    if (testGroupSpecSampleType.length > 0) {\r\n                        const testCategory = constructOptionList(response.data[\"TestCategory\"] || [], \"ntestcategorycode\", \"stestcategoryname\", 'ntestcategorycode', 'ascending', false);\r\n                        const sampleTypeMap = constructOptionList(testGroupSpecSampleType, \"ncomponentcode\", \"scomponentname\", false, false, true);\r\n                        // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"create\",\r\n                                screenName:genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][userInfo.slanguagetypecode],\r\n                                testGroupInputData: {\r\n                                    TestCategory: testCategory.get(\"OptionList\"),\r\n                                    TestGroupSpecSampleType: sampleTypeMap.get(\"OptionList\"),\r\n                                    TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                },\r\n                                selectedRecord: {\r\n                                    ncomponentcode: sampleTypeMap.get(\"DefaultValue\"),\r\n                                    ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                },\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    } else {\r\n                        toast.warn(\r\n                             genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][userInfo.slanguagetypecode]+\" \"+intl.formatMessage({ id: \"IDS_NOTAVAILABLE\" })\r\n                        );\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupTest = (selectedComponent, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        if (masterData.selectedNode !== undefined && masterData.selectedNode !== null) {\r\n            const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n                x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n            const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n            if (templateVersionStatus === transactionStatus.RETIRED) {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                if (selectedSpecification) {\r\n                    if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                        selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n                        let openTestModal = false;\r\n                        if (selectedSpecification.ncomponentrequired === transactionStatus.YES) {\r\n                            if (selectedComponent == undefined) {\r\n                                toast.warn(intl.formatMessage({\r\n                                    id: \"IDS_NEEDCOMPONENTTOADDTEST\"\r\n                                }));\r\n                            } else {\r\n                                openTestModal = true;\r\n                            }\r\n                        } else {\r\n                            openTestModal = true;\r\n                        }\r\n\r\n                        if (openTestModal === true) {\r\n                            rsapi.post(\"/testgroup/getAvailableTest\", {\r\n                                userinfo: userInfo,\r\n                                testgroupspecsampletype: selectedComponent,\r\n                                ntreeversiontempcode: filterData.ntreeversiontempcode.value,\r\n                                nprojectmastercode: masterData.selectedNode.nprojectmastercode,\r\n                                nclinicaltyperequired:filterData.nsampletypecode && filterData.nsampletypecode.item.nclinicaltyperequired\r\n                            })\r\n                                .then(response => {\r\n                                    let testCategory;\r\n                                    // = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                    // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                                    if (response.data[\"TestCategory\"].length > 0) {\r\n                                        testCategory = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                        dispatch({\r\n                                            type: DEFAULT_RETURN,\r\n                                            payload: {\r\n                                                openModal: true,\r\n                                                operation: \"create\",\r\n                                                screenName: \"IDS_TEST\",\r\n                                                testGroupInputData: {\r\n                                                    TestCategory: testCategory.get(\"OptionList\"),\r\n                                                    TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                                },\r\n                                                selectedRecord: {\r\n                                                    ntestcategorycode: {\r\n                                                        label: response.data[\"SelectedTestCategory\"].stestcategoryname,\r\n                                                        value: response.data[\"SelectedTestCategory\"].stestcategorycode,\r\n                                                        item: response.data[\"SelectedTestCategory\"]\r\n                                                    }\r\n                                                    //ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                                },\r\n                                                ncontrolCode\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        toast.warn(intl.formatMessage({\r\n                                            id: \"IDS_TESTCATEGORYNOTAVAILABLE\"\r\n                                        }))\r\n                                    }\r\n                                })\r\n                                .catch(error => {\r\n                                    if (error.response.status === 409 || error.response.status === 417) {\r\n                                        toast.warn(error.response.data);\r\n                                    } else {\r\n                                        toast.error(error.message);\r\n                                    }\r\n                                });\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                        }));\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SELECTSPECIFICATION\"\r\n                    }));\r\n                }\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTSPECIFICATION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupTest = (operation, selectedTest, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const ntestcode = selectedTest.ntestcode;\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveTestById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptest: selectedTest,\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value,\r\n                        nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"] ? masterData[\"selectedNode\"][\"nprojectmastercode\"]  :-1                  \r\n                    }),\r\n                    // rsapi.post(\"/source/getSource\", {\r\n                    //     userinfo: userInfo\r\n                    // }),\r\n                    rsapi.post(\"/testmaster/getSection\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getMethod\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getInstrumentCategory\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getTestAttachment\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getContainerType\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n\t\t\t//ALPD-3418\r\n                    rsapi.post(\"/testmaster/getTestPackage\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        // const editObject = response[0].data.TestGroupTest;\r\n                        // const testFileItem = response[0].data.TestGroupTestFile;\r\n                        // const SelectedTest = response[0].data.TestGroupTest;\r\n\r\n                        const editObject = response[0].data.SelectedTestGroupTest;\r\n                        const testFileItem = response[0].data.TestGroupTestFile;\r\n                        const SelectedTest = response[0].data.SelectedTest;\r\n                        //const TestGroupTest = response[0].data.TestGroupTest;\r\n\r\n                        const selectedRecord = {\r\n                            ...editObject,\r\n                            // nsourcecode: {\r\n                            //     \"label\": editObject.ssourcename,\r\n                            //     \"value\": editObject.nsourcecode\r\n                            // },\r\n                            nsectioncode: {\r\n                                \"label\": editObject.ssectionname,\r\n                                \"value\": editObject.nsectioncode\r\n                            },\r\n                            nmethodcode: {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            },\r\n                            ninstrumentcatcode: {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            },\r\n                            ncontainertypecode: {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            },\r\n                            ntestpackagecode: {\r\n                                \"label\": editObject.stestpackagename,\r\n                                \"value\": editObject.ntestpackagecode\r\n                            }\r\n                        };\r\n                        if (testFileItem) {\r\n                            selectedRecord[\"ntestfilecode\"] = {\r\n                                \"label\": testFileItem.sfilename,\r\n                                \"value\": testFileItem.ntestgroupfilecode,\r\n                                item: testFileItem\r\n                            };\r\n                            selectedRecord[\"ntestgroupfilecode\"] = testFileItem.ntestgroupfilecode\r\n                        }\r\n                        if (editObject.nmethodcode !== -1) {\r\n                            selectedRecord[\"nmethodcode\"] = {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"nmethodcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ninstrumentcatcode !== -1) {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ncontainertypecode !== -1) {\r\n                            selectedRecord[\"ncontainertypecode\"] = {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ncontainertypecode\"] = undefined;\r\n                        }\r\n\t\t\t\t\t\t\t//ALPD-3418\r\n                        if (editObject.ntestpackagecode !== -1) {\r\n                            selectedRecord[\"ntestpackagecode\"]= {\r\n                                \"label\": editObject.stestpackagename,\r\n                                \"value\": editObject.ntestpackagecode\r\n                            }\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"ntestpackagecode\"] = undefined;\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                masterData: {\r\n                                    ...masterData,\r\n                                    ...response[0].data,\r\n                                    SelectedTest: SelectedTest,\r\n                                    //TestGroupTest : [TestGroupTest]\r\n                                },\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTESTGROUPTEST\",\r\n                                testGroupInputData: {\r\n                                    // source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\r\n                                    section: constructOptionList(response[1].data || [], \"nsectioncode\", \"ssectionname\", false, false, true).get(\"OptionList\"),\r\n                                    method: constructOptionList(response[2].data || [], \"nmethodcode\", \"smethodname\", false, false, true).get(\"OptionList\"),\r\n                                    instrumentCategory: constructOptionList(response[3].data || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", false, false, true).get(\"OptionList\"),\r\n                                    containerType: constructOptionList(response[5].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true).get(\"OptionList\"),\r\n                                    testFile: constructOptionList(response[4].data || [], \"ntestfilecode\", \"sfilename\", false, false, true).get(\"OptionList\"),\r\n                                    testpackage:constructOptionList(response[6].data || [], \"ntestpackagecode\", \"stestpackagename\", false, false, true).get(\"OptionList\")\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        //console.log(\"errror:\", error);\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupParameter = (operation, selectedParameter, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveParameterById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptestparameter: {...selectedParameter,nprojectmastercode:masterData[\"selectedNode\"][\"nprojectmastercode\"]},\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                    }),\r\n                    rsapi.post(\"/parametertype/getParameterType\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"unit/getUnit\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"checklist/getApprovedChecklist\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const parameterObject = response[0].data.TestGroupTestParameter[0];\r\n                        const predefinedObject = response[0].data.TestGroupTestPredefinedParameter;\r\n                        const characterObject = response[0].data.TestGroupTestCharParameter;\r\n                        const numericObject = response[0].data.TestGroupTestNumericParameter && response[0].data.TestGroupTestNumericParameter.length > 0 ? response[0].data.TestGroupTestNumericParameter[0] : {};\r\n                        const selectedRecord = {\r\n                            ...parameterObject,\r\n                            nunitcode: {\r\n                                \"label\": parameterObject.sunitname,\r\n                                \"value\": parameterObject.nunitcode\r\n                            },\r\n                            nparametertypecode: {\r\n                                \"label\": parameterObject.sdisplaystatus,\r\n                                \"value\": parameterObject.nparametertypecode\r\n                            },\r\n                            parameterTypeCode: parameterObject.nparametertypecode,\r\n                            nchecklistversioncode: {\r\n                                \"label\": parameterObject.schecklistname,\r\n                                \"value\": parameterObject.nchecklistversioncode\r\n                            },\r\n                            schecklistversionname: parameterObject.schecklistversionname,\r\n                            ntestformulacode: parameterObject.ntestformulacode > 0 ? {\r\n                                \"label\": parameterObject.sformulacalculationdetail,\r\n                                \"value\": parameterObject.ntestformulacode,\r\n                                item: {\r\n                                    sformulacalculationdetail: parameterObject.sformulacalculationdetail,\r\n                                    ntestformulacode: parameterObject.ntestformulacode,\r\n                                    sformulacalculationcode: parameterObject.sformulacalculationcode\r\n                                }\r\n                            } : \"\"\r\n                        };\r\n                        if (selectedRecord[\"schecklistname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nchecklistversioncode\"]\r\n                        }\r\n                        if (selectedRecord[\"schecklistversionname\"] === \"NA\") {\r\n                            delete selectedRecord[\"schecklistversionname\"]\r\n                        }\r\n                        if (selectedRecord[\"sunitname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nunitcode\"]\r\n                        }\r\n                        if (characterObject) {\r\n                            selectedRecord[\"scharname\"] = characterObject.scharname;\r\n                            selectedRecord[\"ntestgrouptestcharcode\"] = characterObject.ntestgrouptestcharcode;\r\n                        }\r\n                        if (predefinedObject) {\r\n                            selectedRecord[\"ntestgrouptestpredefcode\"] = predefinedObject.ntestgrouptestpredefcode;\r\n                            selectedRecord[\"spredefinedname\"] = predefinedObject.spredefinedname;\r\n                            selectedRecord[\"ndefaultstatus\"] = predefinedObject.ndefaultstatus;\r\n                            selectedRecord[\"ngradecode\"] = {\r\n                                \"label\": predefinedObject.sdisplaystatus,\r\n                                \"value\": predefinedObject.ngradecode\r\n                            };\r\n                        }\r\n                        if (numericObject) {\r\n                            selectedRecord[\"ntestgrouptestnumericcode\"] = numericObject.ntestgrouptestnumericcode;\r\n                            selectedRecord[\"sminlod\"] = numericObject.sminlod;\r\n                            selectedRecord[\"smaxlod\"] = numericObject.smaxlod;\r\n                            selectedRecord[\"sminb\"] = numericObject.sminb;\r\n                            selectedRecord[\"smina\"] = numericObject.smina;\r\n                            selectedRecord[\"smaxa\"] = numericObject.smaxa;\r\n                            selectedRecord[\"smaxb\"] = numericObject.smaxb;\r\n                            selectedRecord[\"sminloq\"] = numericObject.sminloq;\r\n                            selectedRecord[\"smaxloq\"] = numericObject.smaxloq;\r\n                            selectedRecord[\"sdisregard\"] = numericObject.sdisregard;\r\n                            selectedRecord[\"sresultvalue\"] = numericObject.sresultvalue;\r\n                            selectedRecord[\"ngradecode\"] = {\r\n                                \"label\": numericObject.sgradename,\r\n                                \"value\": numericObject.ngradecode\r\n                            };\r\n                        }\r\n                        const gradeMap = constructOptionList(response[3].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const unitMap = constructOptionList(response[2].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        const unit = unitMap.get(\"OptionList\");\r\n                        const disabled = parameterObject.nparametertypecode === parameterType.NUMERIC ? false : true;\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_PARAMETER\",\r\n                                testGroupInputData: {\r\n                                    unit,\r\n                                    grade,\r\n                                    testFormula: constructOptionList(response[0].data.TestFormula || [], \"ntestformulacode\", \"sformulacalculationdetail\", false, false, true).get(\"OptionList\"),\r\n                                    parameterType: constructOptionList(response[1].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true).get(\"OptionList\"),\r\n                                    checkListVersion: constructOptionList(response[4].data || [], \"nchecklistversioncode\", \"schecklistname\", false, false, true).get(\"OptionList\"),\r\n                                    needRoundingDigit: disabled,\r\n                                    needUnit: disabled\r\n                                },\r\n                                parameterData: {\r\n                                    grade,\r\n                                    defaultUnit: unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\",\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\r\n//     return dispatch => {\r\n//         const testgroupspecification = optionalData.testgroupspecification;\r\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \r\n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\r\n//             .then(response=>{\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, \r\n//                     payload:{\r\n//                         openChildModal: true,\r\n//                         operation: \"create\",\r\n//                         screenName: \"IDS_FORMULA\",\r\n//                         testGroupInputData: {testFormula: response.data},\r\n//                         selectedRecord: {},\r\n//                         ncontrolCode\r\n//                 }});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\r\n//                 if(error.response.status === 409 || error.response.status === 417) {\r\n//                     toast.warn(error.response.data);\r\n//                 } else {\r\n//                     toast.error(error.message)\r\n//                 }\r\n//             });\r\n//         } else {\r\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const getTestGroupParameter = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestParameter\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getComponentBySpecId = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n            [inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                const historyDataState = {\r\n                    ...inputParam.historyDataState,\r\n                    sort: undefined,\r\n                    filter: undefined\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        historyDataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupDetails = (inputParam) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestGroupTest\", {\r\n            ntestgrouptestcode: parseInt(inputParam['ntestgrouptestcode']),\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                    sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        },\r\n                        testskip: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupComponentDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestByComponentId\", {\r\n            testgroupspecsampletype: inputParam['testgroupspecsampletype'],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        testskip: 0,\r\n                        testtake: 5,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecification = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedRecord !== null) {\r\n            rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n                ...inputParam,\r\n                [inputParam.keyName]: inputParam.selectedRecord\r\n            })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    if (searchRef.current)\r\n                        searchRef.current.value = \"\";\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ActiveKey: inputParam.activeKey,\r\n                                FocusKey: inputParam.focusKey,\r\n                                primaryKey: inputParam.primaryKey,\r\n                                ...response.data,\r\n                                selectedNode: inputParam.selectedRecord,\r\n                                searchedData: undefined,\r\n\r\n                            },\r\n                            historyDataState: {\r\n                                ...inputParam.historyDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData: {\r\n                        ...masterData,\r\n                        selectedNode: inputParam.selectedRecord,\r\n                        TestGroupSpecification: [],\r\n                        SelectedSpecification: {},\r\n                        TestGroupTest: [],\r\n                        TestGroupTestParameter: [],\r\n                        TestGroupTestNumericParameter: [],\r\n                        TestGroupTestFormula: [],\r\n                        TestGroupTestPredefinedParameter: [],\r\n                        TestGroupTestClinicalSpec: [],\r\n                        TestGroupTestCharParameter: [],\r\n                        ActiveKey: inputParam.activeKey,\r\n                        FocusKey: inputParam.focusKey,\r\n                        SelectedTest: {},\r\n                        selectedParameter: {},\r\n                        TestGroupSpecFile: [],\r\n                        TestGroupSpecificationHistory: [],\r\n                        SelectedComponent: undefined,\r\n                        RulesEngine: []\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTestCategory = (inputParam, testGroupInputData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestMasterByCategory\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                inputParam.selectedRecord.ntestcode = [];\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: inputParam.selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...testGroupInputData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecificationDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/get\" + inputParam.methodUrl, {\r\n            ...inputParam.inputData\r\n        })\r\n            .then(response => {\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const editSpecFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        const masterData = inputParam.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (inputParam.testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                inputParam.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                    userinfo: inputParam.userInfo\r\n                }),\r\n                rsapi.post(\"/testgroup/getActiveSpecFileById\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    testgroupspecfile: inputParam.selectedRecord,\r\n                    ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n                })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const linkmaster = response[0].data.LinkMaster;\r\n                        const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\r\n                        const editObject = response[1].data;\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = {\r\n                                \"label\": editObject.slinkname,\r\n                                \"value\": editObject.nlinkcode\r\n                            }\r\n                            link = {\r\n                                slinkfilename: editObject.sfilename,\r\n                                slinkdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                                sfilesize: '',\r\n                                nfilesize: 0,\r\n                                ndefaultstatus: 4,\r\n                                sfilename: '',\r\n                            }\r\n\r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ? {\r\n                                \"label\": defaultLink[0].slinkname,\r\n                                \"value\": defaultLink[0].nlinkcode\r\n                            } : \"\"\r\n\r\n                            link = {\r\n                                slinkfilename: '',\r\n                                slinkdescription: '',\r\n                                sdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: 4,\r\n                                sfilesize: editObject.sfilesize,\r\n                                nfilesize: editObject.nfilesize,\r\n                                ndefaultstatus: editObject.ndefaultstatus,\r\n                                sfilename: editObject.sfilename,\r\n                            }\r\n                        }\r\n                        const selectedRecord = {\r\n                            // ...editObject,\r\n                            ...link,\r\n                            nallotedspeccode: editObject.nallotedspeccode,\r\n                            nspecfilecode: editObject.nspecfilecode,\r\n                            stypename: editObject.stypename,\r\n                            nattachmenttypecode: editObject.nattachmenttypecode,\r\n                            nlinkcode,\r\n                            // disabled: true\r\n                        };\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"update\",\r\n                                screenName: \"IDS_SPECFILE\",\r\n                                editFiles: Object.values(editObject).length > 0 && editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {},\r\n                                selectedRecord,\r\n                                ncontrolCode: inputParam.ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupCodedResult = (operation, paramdata, userInfo, ncontrolCode, optionalData, masterData) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterSubCodedById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        let selectedsubcodedresult = [];\r\n                        let selectsubcodedelete = [];\r\n                        const gradeMap = constructOptionList(response[0].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[1].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestpredefcode: paramdata[\"ntestgrouptestpredefcode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                ngradecode: {\r\n                                    \"label\": editCodedResult[\"sdisplaystatus\"],\r\n                                    \"value\": editCodedResult[\"ngradecode\"]\r\n                                },\r\n                                spredefinedname: editCodedResult[\"spredefinedname\"],\r\n                                //sresultparacomment: editCodedResult[\"sresultparacomment\"],\r\n                                spredefinedsynonym: editCodedResult[\"spredefinedsynonym\"],\r\n                                spredefinedcomments: editCodedResult[\"spredefinedcomments\"],\r\n                                nneedresultentryalert: editCodedResult[\"nneedresultentryalert\"],\r\n                                nneedsubcodedresult: editCodedResult[\"nneedsubcodedresult\"],\r\n                                salertmessage: editCodedResult[\"salertmessage\"]\r\n                            }\r\n\r\n                            selectedsubcodedresult = response[2].data;\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngradecode: gradeMap.get(\"DefaultValue\"),\r\n                                nneedresultentryalert: 4,\r\n                                nneedsubcodedresult: 4\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CODEDRESULT\",\r\n                                parameterData: {\r\n                                    grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false,\r\n                                selectedsubcodedresult,\r\n                                selectsubcodedelete\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const subCodedResultView = (operation, paramdata, userInfo, ncontrolCode, optionalData, masterData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"testgroup/getActivePredefinedParameterSubCoded\", {\r\n            testgrouptestpredefinedparameter: paramdata,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                let selectedsubcoderesult = [];\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n\r\n                    payload: {\r\n                        openModal: true,\r\n                        operation: \"View\",\r\n                        screenName: \"IDS_SUBCODERESULT\",\r\n                        selectedsubcoderesult: response.data,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            selectedsubcoderesult: response.data,\r\n                            searchedData: undefined,\r\n                        },\r\n                        //screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addTestGroupNumericTab = (operation, paramdata, userInfo, optionalData, masterData, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"patient/getGender\", {\r\n                        \"userinfo\": userInfo\r\n                    }),\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        const gradeMap = constructOptionList(response[0].data.genderList || [], \"ngendercode\", \"sgendername\", false, false, true);\r\n                        const gender = gradeMap.get(\"OptionList\");                       \r\n                        const gradeNewMap = constructOptionList(response[1].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);                        \r\n                        const grade = gradeNewMap.get(\"OptionList\");\r\n                        sortData(grade || [], \"ascending\", \"value\")\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[2].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestclinicspeccode: paramdata[\"ntestgrouptestclinicspeccode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                nfromage: paramdata[\"nfromage\"],\r\n                                ntoage: paramdata[\"ntoage\"],\r\n                                ngradecode: getComboLabelValue(editCodedResult, response[1].data, \r\n                                    \"ngradecode\", \"sgradename\"),\r\n                                ngendercode: {\r\n                                    \"label\": editCodedResult[\"sgendername\"],\r\n                                    \"value\": editCodedResult[\"ngendercode\"]\r\n                                },\r\n                                // ngradecode: {\r\n                                //     \"label\": editCodedResult[\"sgradename\"],\r\n                                //     \"value\": editCodedResult[\"ngradecode\"]\r\n                                // },\r\n                                nhigha: editCodedResult[\"shigha\"]==='null'?'':editCodedResult[\"shigha\"],\r\n                                nhighb: editCodedResult[\"shighb\"]==='null'?'':editCodedResult[\"shighb\"],\r\n                                nlowa: editCodedResult[\"slowa\"]==='null'?'':editCodedResult[\"slowa\"],\r\n                                nlowb: editCodedResult[\"slowb\"]==='null'?'':editCodedResult[\"slowb\"],\r\n                                sminlod: editCodedResult[\"sminlod\"] ==='null'?'':editCodedResult[\"sminlod\"],\r\n                                smaxlod: editCodedResult[\"smaxlod\"] ==='null'?'':editCodedResult[\"smaxlod\"],\r\n                                sminloq: editCodedResult[\"sminloq\"] ==='null'?'':editCodedResult[\"sminloq\"],\r\n                                smaxloq: editCodedResult[\"smaxloq\"] ==='null'?'':editCodedResult[\"smaxloq\"],\r\n                                sdisregard: editCodedResult[\"sdisregard\"] ==='null'?'':editCodedResult[\"sdisregard\"],\r\n                                sresultvalue: editCodedResult[\"sresultvalue\"]==='null'?'':editCodedResult[\"sresultvalue\"]\r\n\r\n                            }\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngendercode: gradeMap.get(\"DefaultValue\")\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CLINICALSPEC\",\r\n                                parameterData: {\r\n                                    gender,grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const viewTestGroupCheckList = (inputParam, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/viewTemplate\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openTemplateModal: true,\r\n                        testGroupCheckList: {\r\n                            templateData: response.data\r\n                        },\r\n                        loading: false,\r\n                        selectedRecord: {}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const reportSpecification = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/specReportGenerate\", {\r\n            ...inputParam,\r\n            ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const retireSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/retireSpec\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n\r\n                // const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\r\n                sortData(response.data);\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, masterData, primaryKeyName) => {\r\n    return function (dispatch) {\r\n        if (masterData.selectedNode !== undefined && masterData.selectedNode !== null && masterData.SelectedSpecification !== null) {\r\n            const testgroupspecification = masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let urlArray = [];\r\n                const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n                const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo, ntreeversiontempcode: masterData.selectedNode.ntreeversiontempcode});\r\n\r\n                urlArray = [materialTypeUrl, validationUrl];\r\n\r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        console.log(ncontrolCode)\r\n                        if (masterData.SelectedTest && masterData.SelectedTest !== undefined) {\r\n\r\n                            if (response[1].data === \"Success\") {\r\n\r\n                                const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                                    \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                                const materialType = materialTypeMap.get(\"OptionList\");\r\n                                const materialTypedefault = materialTypeMap.get(\"DefaultValue\");\r\n\r\n                                selectedRecord[\"nmaterialtypecode\"] = materialTypedefault;\r\n                                if (selectedRecord[\"nmaterialtypecode\"] !== undefined) {\r\n                                    let inputData = []\r\n                                    let inputParam = { operation: operation, selectedRecord: selectedRecord, materialType: materialType, inputData: { nmaterialtypecode: materialTypedefault.value }, materialType: materialType, masterData: masterData, screenName: screenName, ncontrolCode }\r\n                                    dispatch(getMaterialCategoryBasedMaterialType(inputParam));\r\n\r\n                                } else {\r\n                                    dispatch({\r\n                                        type: DEFAULT_RETURN,\r\n                                        payload: {\r\n                                            materialType: materialType,\r\n                                            materialList: undefined,\r\n                                            materialCategoryList: undefined,\r\n                                            isOpen: true,\r\n                                            operation: operation,\r\n                                            screenName: screenName,\r\n                                            openChildModal: true,\r\n                                            ncontrolCode: ncontrolCode,\r\n                                            loading: false,\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                toast.warn(intl.formatMessage({\r\n                                    id: response[1].data\r\n                                }));\r\n                                dispatch({\r\n                                    type: DEFAULT_RETURN,\r\n                                    payload: {\r\n                                        operation: operation,\r\n                                        screenName: screenName,\r\n                                        ncontrolCode: ncontrolCode,\r\n                                        loading: false\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                        else {\r\n\r\n                            toast.warn(intl.formatMessage({\r\n                                id: \"IDS_NEEDTOADDTEST\"\r\n                            }));\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    operation: operation,\r\n                                    screenName: screenName,\r\n                                    ncontrolCode: ncontrolCode,\r\n                                    loading: false\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({\r\n                                id: error.message\r\n                            }));\r\n                        } else {\r\n                            toast.warn(intl.formatMessage({\r\n                                id: error.response.data\r\n                            }));\r\n                        }\r\n                    })\r\n\r\n\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTSPECIFICATION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getMaterialCategoryBasedMaterialType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: inputParam.inputData.nmaterialtypecode })\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                selectedRecord = inputParam.selectedRecord\r\n\r\n                const materialCategoryMap = constructOptionList(response.data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                const materialCategorydefault = materialCategoryMap.get(\"DefaultValue\");\r\n                selectedRecord['nmaterialcatcode'] = materialCategorydefault;\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (response.data.MaterialCategoryMain.length === 0) {\r\n                    if (selectedRecord['nmaterialcatcode']) {\r\n                        delete selectedRecord['nmaterialcatcode']\r\n\r\n                    }\r\n                    if (selectedRecord['nmaterialcode']) {\r\n                        delete selectedRecord['nmaterialcode']\r\n\r\n                    }\r\n                }\r\n                let materialList = []\r\n                if (materialCategoryList.length !== 0) {\r\n                    materialList = materialList\r\n                    inputParam = {\r\n                        ...inputParam, responsecat: response, materialCategoryList: materialCategoryList, selectedRecord: selectedRecord,\r\n                        inputData: {\r\n                            //nmaterialcatcode: materialCategorydefault.value,\r\n                            nmaterialtypecode: inputParam.inputData.nmaterialtypecode\r\n                        }\r\n                    }\r\n                    dispatch(getMaterialBasedMaterialCategory(inputParam));\r\n                }\r\n\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            masterData, loading: false,\r\n                            materialCategoryList: materialCategoryList,\r\n                            materialType: inputParam.materialType,\r\n                            materialList: materialList,\r\n                            selectedRecord: selectedRecord,\r\n                            operation: inputParam.operation,\r\n                            ncontrolCode: inputParam.ncontrolCode\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getMaterialBasedMaterialCategory(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"testgroup/getAvailableMaterial\", {\r\n            nmaterialtypecode: inputParam.inputData.nmaterialtypecode, nmaterialcatcode: inputParam.inputData.nmaterialcatcode !== undefined\r\n                ? inputParam.inputData.nmaterialcatcode : inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,\r\n            ntestgrouptestcode: inputParam.masterData.SelectedTest.ntestgrouptestcode\r\n        })\r\n            .then(response => {\r\n\r\n                let selectedRecord = inputParam.selectedRecord;\r\n\r\n                const materialMap = constructjsonOptionList(response.data.MaterialCombo || [], \"nmaterialcode\",\r\n                    \"Material Name\", undefined, undefined, false);\r\n\r\n                const materialList = materialMap.get(\"OptionList\");\r\n\r\n                if (response.data.MaterialCombo.length === 0) {\r\n                    delete selectedRecord['nmaterialcode']\r\n                }\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (inputParam.materialCategoryList) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            materialCategoryList: inputParam.materialCategoryList,\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            materialType: inputParam.materialType,\r\n                            operation: inputParam.operation,\r\n                            ncontrolCode: inputParam.ncontrolCode\r\n\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getTestGroupMaterial = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestMaterial\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForEditTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, Data, primaryKeyName) => {\r\n    return function (dispatch) {\r\n\r\n        const testgroupspecification = Data.SelectedSpecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n\r\n            let urlArray = [];\r\n            const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n            const materialCatUrl = rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode });\r\n            const materialUrl = rsapi.post(\"testgroup/getAvailableMaterial\", {\r\n                nmaterialcatcode: Data.selectedMaterial.nmaterialcatcode, nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode,\r\n                ntestgrouptestcode: Data.SelectedTest.ntestgrouptestcode\r\n            });\r\n            const materialById = rsapi.post(\"testgroup/getActiveTestMaterialById\", {\r\n                [primaryKeyName]: Data.selectedMaterial.ntestgrouptestmaterialcode, \"userinfo\": userInfo\r\n            });\r\n            const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo, ntreeversiontempcode: Data.selectedNode.ntreeversiontempcode });\r\n\r\n            urlArray = [materialTypeUrl, materialCatUrl, materialUrl, materialById, validationUrl];\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    if (response[4].data === \"Success\") {\r\n\r\n                        let selectedRecord = {};\r\n                        let MaterialCategoryData = [];\r\n                        let MaterialTypeData = [];\r\n                        let MaterialData = [];\r\n\r\n                        const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                            \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                        const materialType = materialTypeMap.get(\"OptionList\");\r\n\r\n                        const materialCategoryMap = constructOptionList(response[1].data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                            \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                        const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                        const materialMap = constructjsonOptionList(response[2].data.MaterialCombo || [], \"nmaterialcode\",\r\n                            \"Material Name\", undefined, undefined, false);\r\n\r\n                        const materialList = materialMap.get(\"OptionList\");\r\n\r\n                        MaterialCategoryData.push({\r\n                            \"value\": response[3].data[\"nmaterialcatcode\"],\r\n                            \"label\": response[3].data[\"smaterialcatname\"]\r\n                        });\r\n                        MaterialTypeData.push({\r\n                            \"value\": response[3].data[\"nmaterialtypecode\"],\r\n                            \"label\": response[3].data[\"smaterialtypename\"]\r\n                        });\r\n                        MaterialData.push({\r\n                            \"value\": response[3].data[\"nmaterialcode\"],\r\n                            \"label\": response[3].data[\"smaterialname\"]\r\n                        });\r\n\r\n                        selectedRecord = response[3].data;\r\n                        selectedRecord[\"nmaterialcatcode\"] = MaterialCategoryData[0];\r\n                        selectedRecord[\"nmaterialtypecode\"] = MaterialTypeData[0];\r\n                        selectedRecord[\"nmaterialcode\"] = MaterialData[0];\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                materialType: materialType,\r\n                                materialList: materialList,\r\n                                materialCategoryList: materialCategoryList,\r\n                                selectedRecord: selectedRecord,\r\n                                isOpen: true,\r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                openChildModal: true,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false,\r\n                            }\r\n                        });\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: response[4].data\r\n                        }));\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                                 id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}