{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\AddTestGroupNumericSpecification.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row, FormGroup, Card } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nconst AddTestGroupNumericSpecification = props => {\n  const {\n    needActualResult,\n    grade\n  } = props.parameterData;\n  return /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_GENDER\"\n    }),\n    isSearchable: true,\n    name: \"ngendercode\" // isDisabled={needActualResult}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // isMandatory={!needActualResult}\n    ,\n    isMandatory: true,\n    options: grade || [],\n    optionId: \"ngendercode\",\n    optionValue: \"sgendername\",\n    value: props.selectedRecord && props.selectedRecord[\"ngendercode\"] ? props.selectedRecord[\"ngendercode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"ngendercode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nfromage\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FROMAGE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nfromage\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FROMAGE\"\n    }),\n    strict: true,\n    min: 0,\n    isMandatory: true //max={9999999.99}\n    ,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"nfromage\"),\n    noStyle: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ntoage\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TOAGE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ntoage\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOAGE\"\n    }),\n    strict: true,\n    min: 0,\n    isMandatory: true //max={9999999.99}\n    ,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"ntoage\"),\n    noStyle: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_OUTERBAND\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nlowb\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOWB\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nlowb\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOWB\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nlowb\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nhighb\",\n    label: props.intl.formatMessage({\n      id: \"IDS_HIGHB\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nhighb\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HIGHB\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nhighb\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_INNERBAND\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nlowa\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOWA\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nlowa\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOWA\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nlowa\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nhigha\",\n    label: props.intl.formatMessage({\n      id: \"IDS_HIGHA\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nhigha\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HIGHA\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nhigha\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"sresultvalue\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTRESULT\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"sresultvalue\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTRESULT\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"sresultvalue\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  })))))));\n};\n\nexport default injectIntl(AddTestGroupNumericSpecification);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupNumericSpecification.jsx"],"names":["React","FormSelectSearch","Col","Row","FormGroup","Card","FormInput","injectIntl","FormTextarea","FormNumericInput","AddTestGroupNumericSpecification","props","needActualResult","grade","parameterData","intl","formatMessage","id","selectedRecord","value","onComboChange","onNumericInputChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row, FormGroup, Card } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddTestGroupNumericSpecification = (props) => {\r\n    const { needActualResult, grade } = props.parameterData;\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_GENDER\" })}\r\n                isSearchable={true}\r\n                name={\"ngendercode\"}\r\n                // isDisabled={needActualResult}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                // isMandatory={!needActualResult}\r\n                isMandatory={true}\r\n                options={grade || []}\r\n                optionId='ngendercode'\r\n                optionValue='sgendername'\r\n                value={props.selectedRecord && props.selectedRecord[\"ngendercode\"] ? props.selectedRecord[\"ngendercode\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"ngendercode\", 1)}\r\n                alphabeticalSort={true}\r\n            >\r\n            </FormSelectSearch>\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"nfromage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"nfromage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"nfromage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"ntoage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"ntoage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"ntoage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n\r\n            <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_OUTERBAND\" })}</Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nlowb\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nlowb\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nlowb\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col>\r\n\r\n\r\n\r\n                            {/* <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nhigha\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nhigha\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nhigha\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n                            </Col> */}\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nhighb\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nhighb\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nhighb\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_INNERBAND\" })}</Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nlowa\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nlowa\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nlowa\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nhigha\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nhigha\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nhigha\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nlowb\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nlowb\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nlowb\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col> */}\r\n                        </Row>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Card>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                            <FormNumericInput\r\n                                    name={\"sresultvalue\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTRESULT\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"sresultvalue\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTRESULT\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"sresultvalue\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col>\r\n                           \r\n                            \r\n                        </Row>\r\n\r\n                    </Card.Body>\r\n                    </Card>\r\n            </FormGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddTestGroupNumericSpecification);"]},"metadata":{},"sourceType":"module"}