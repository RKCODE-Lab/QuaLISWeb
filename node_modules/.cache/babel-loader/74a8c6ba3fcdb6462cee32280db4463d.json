{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import rsapi from\"../rsapi\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{attachmentType,parameterType,SampleType,transactionStatus}from\"../components/Enumeration\";import{constructjsonOptionList,constructOptionList,rearrangeDateFormat,//formatInputDate,\nsortData}from\"../components/CommonScript\";import Axios from\"axios\";import{intl}from\"../components/App\";import{initRequest}from\"./LoginAction\";export var sampleTypeOnChange=function sampleTypeOnChange(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var url=\"/testgroup\";if(inputParam.classUrl){url=inputParam.classUrl;}rsapi.post(url+inputParam.methodUrl,inputParam.inputData).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{tempFilterData:inputParam.inputData.tempFilterData,masterData:_objectSpread(_objectSpread({},masterData),response.data),loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){masterData[\"ExistingLinkTable\"]=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});toast.warn(error.response.data);}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);}});};};export var filterTestGroup=function filterTestGroup(inputParam,masterData,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup/filterTestGroup\",inputParam.inputData).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}dispatch({type:DEFAULT_RETURN,payload:{filterData:inputParam.inputData.filterData,masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),loading:false,testskip:0,historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var createTree=function createTree(selectedRecord,userInfo,selectedNode,ncontrolCode){return function(dispatch){if(selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES||selectedRecord.nproductcode){var inputParam={sampletype:selectedRecord.nsampletypecode.item,ncategorycode:selectedRecord.nproductcatcode.value,ntreeversiontempcode:selectedRecord.ntreeversiontempcode.value,nprojectmastercode:selectedRecord.nprojectmastercode?selectedRecord.nprojectmastercode.value:-1,userinfo:userInfo,treetemplatemanipulation:selectedNode};dispatch(initRequest(true));rsapi.post(\"/testgroup/getTemplateMasterDetails\",_objectSpread({},inputParam)).then(function(response){var treetempTranstestGroup=response.data[\"TreetempTranstestGroup\"]||[];// const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\n//         return {\n//             \"idsName\": item.slabelname,\n//             \"dataField\": \"sleveldescription_\" + index,\n//             \"mandatory\": true\n//         }\n// });\n//  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\nvar mandatoryFields=[];treetempTranstestGroup.forEach(function(item,index){if(item.sleveldescription===null){mandatoryFields.push({\"idsName\":item.slabelname,\"dataField\":\"sleveldescription_\"+index,\"mandatory\":true});}});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_PROFILETREE\",TreetempTranstestGroup:treetempTranstestGroup,treeMandatoryFields:mandatoryFields,//selectedRecord,\nncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}};};export var editTree=function editTree(operation,selectedNode,userinfo,ncontrolCode,filterData,masterData){return function(dispatch){if(!selectedNode){return toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}//console.log(\"edit Tree:\", selectedNode, masterData);\nvar treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===selectedNode[\"ntreeversiontempcode\"];});// if (treeVersionTemplateIndex !== -1){\nvar templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;//}\nif(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedNode){dispatch(initRequest(true));rsapi.post(\"/testgroup/getTreeById\",{userinfo:userinfo,treetemplatemanipulation:selectedNode,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var treetempTranstestGroup=response.data;var treeMandatoryFields=treetempTranstestGroup&&[{\"idsName\":treetempTranstestGroup.slabelname,\"dataField\":\"sleveldescription\",\"mandatory\":true}];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_EDITTREE\",selectedRecord:_objectSpread({},treetempTranstestGroup),treeMandatoryFields:treeMandatoryFields,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}}};};export var addSpecification=function addSpecification(operation,inputParam,ncontrolCode,masterDatas){return function(dispatch){//if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\nif(inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.selectedNode!=null&&inputParam.selectedNode.nnextchildcode===-1){if(masterDatas&&masterDatas.SelectedSpecification===null&&operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{var urlArray=[];if(operation===\"update\"){var testgroupspecification=inputParam.testgroupspecification[0];// let isValidOperation = false;\n// if (operation === \"update\"){\n//     if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\n//         testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\n//             isValidOperation = true;\n//     }\n//     else {\n//         toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         return;\n//     }\n// }\n// else{\n//     isValidOperation = true;\n// }\nif(testgroupspecification.napprovalstatus===transactionStatus.CORRECTION||testgroupspecification.napprovalstatus===transactionStatus.DRAFT){urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\",{testgroupspecification:testgroupspecification,userinfo:inputParam.userinfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value}));}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));return;}}else{urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\",{userinfo:inputParam.userInfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value//currentdate: formatInputDate(new Date(), true)\n}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var masterData=inputParam.masterData!==undefined?inputParam.masterData:masterDatas;if(operation===\"update\"){masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response[1].data),{},{testgroupspecification:inputParam.testgroupspecification});selectedRecord=_objectSpread(_objectSpread({sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow},response[1].data.SelectedSpecification),{},{//dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\ndexpirydate:rearrangeDateFormat(inputParam.userinfo,response[1].data.SelectedSpecification[\"sexpirydate\"]),ntzexpirydate:{\"label\":response[1].data.SelectedSpecification.stimezoneid,\"value\":response[1].data.SelectedSpecification.ntzexpirydate}});}else{selectedRecord={sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,sspecname:inputParam.selectedNode.sleveldescription,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,dexpirydate:rearrangeDateFormat(inputParam.userInfo,response[1].data.ExpiryDate),//ncomponentrequired: inputParam.selectedNode.nsampletypecode === SampleType.CLINICALTYPE ? transactionStatus.YES : transactionStatus.NO,\nncomponentrequired:transactionStatus.YES,// nclinicalspec: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\nntransactionstatus:transactionStatus.ACTIVE,ntzexpirydate:{\"label\":inputParam.userInfo.stimezoneid,\"value\":inputParam.userInfo.ntimezonecode}};}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_SPECIFICATION\",masterData:masterData,selectedRecord:selectedRecord,timeZoneList:constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",false,false,true).get(\"OptionList\"),ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}else{if(operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTLASTLEVELNODETOADDSPEC\"}));}}}};};export var addComponent=function addComponent(SelectedSpecification,userInfo,ncontrolCode,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{rsapi.post(\"/testgroup/getAvailableComponent\",{userinfo:userInfo,testgroupspecification:SelectedSpecification}).then(function(response){var testGroupSpecSampleType=response.data[\"TestGroupSpecSampleType\"]||[];if(testGroupSpecSampleType.length>0){var testCategory=constructOptionList(response.data[\"TestCategory\"]||[],\"ntestcategorycode\",\"stestcategoryname\",'ntestcategorycode','ascending',false);var sampleTypeMap=constructOptionList(testGroupSpecSampleType,\"ncomponentcode\",\"scomponentname\",false,false,true);// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_COMPONENT\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupSpecSampleType:sampleTypeMap.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ncomponentcode:sampleTypeMap.get(\"DefaultValue\"),ntestcategorycode:testCategory.get(\"DefaultValue\")?testCategory.get(\"DefaultValue\"):testCategory.get(\"OptionList\")[0]},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_COMPONENTNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export var addTestGroupTest=function addTestGroupTest(selectedComponent,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){if(masterData.selectedNode!==undefined&&masterData.selectedNode!==null){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var openTestModal=false;if(selectedSpecification.ncomponentrequired===transactionStatus.YES){if(selectedComponent==undefined){toast.warn(intl.formatMessage({id:\"IDS_NEEDCOMPONENTTOADDTEST\"}));}else{openTestModal=true;}}else{openTestModal=true;}if(openTestModal===true){rsapi.post(\"/testgroup/getAvailableTest\",{userinfo:userInfo,testgroupspecsampletype:selectedComponent,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var testCategory;// = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\n// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\nif(response.data[\"TestCategory\"].length>0){testCategory=constructOptionList(response.data[\"TestCategory\"],\"ntestcategorycode\",\"stestcategoryname\",\"ntestcategorycode\",\"ascending\",false);dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_TEST\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ntestcategorycode:{label:response.data[\"SelectedTestCategory\"].stestcategoryname,value:response.data[\"SelectedTestCategory\"].stestcategorycode,item:response.data[\"SelectedTestCategory\"]}//ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\n},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};};export var editTestGroupTest=function editTestGroupTest(operation,selectedTest,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var ntestcode=selectedTest.ntestcode;var urlArray=[rsapi.post(\"/testgroup/getActiveTestById\",{userinfo:userInfo,testgrouptest:selectedTest,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/source/getSource\",{userinfo:userInfo}),rsapi.post(\"/testmaster/getSection\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getMethod\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getInstrumentCategory\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getTestAttachment\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getContainerType\",{ntestcode:ntestcode,userinfo:userInfo})];Axios.all(urlArray).then(function(response){// const editObject = response[0].data.TestGroupTest;\n// const testFileItem = response[0].data.TestGroupTestFile;\n// const SelectedTest = response[0].data.TestGroupTest;\nvar editObject=response[0].data.SelectedTestGroupTest;var testFileItem=response[0].data.TestGroupTestFile;var SelectedTest=response[0].data.SelectedTest;//const TestGroupTest = response[0].data.TestGroupTest;\nvar selectedRecord=_objectSpread(_objectSpread({},editObject),{},{// nsourcecode: {\n//     \"label\": editObject.ssourcename,\n//     \"value\": editObject.nsourcecode\n// },\nnsectioncode:{\"label\":editObject.ssectionname,\"value\":editObject.nsectioncode},nmethodcode:{\"label\":editObject.smethodname,\"value\":editObject.nmethodcode},ninstrumentcatcode:{\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode},ncontainertypecode:{\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode}});if(testFileItem){selectedRecord[\"ntestfilecode\"]={\"label\":testFileItem.sfilename,\"value\":testFileItem.ntestgroupfilecode,item:testFileItem};selectedRecord[\"ntestgroupfilecode\"]=testFileItem.ntestgroupfilecode;}if(editObject.nmethodcode!==-1){selectedRecord[\"nmethodcode\"]={\"label\":editObject.smethodname,\"value\":editObject.nmethodcode};}else{selectedRecord[\"nmethodcode\"]=undefined;}if(editObject.ninstrumentcatcode!==-1){selectedRecord[\"ninstrumentcatcode\"]={\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode};}else{selectedRecord[\"ninstrumentcatcode\"]=undefined;}if(editObject.ncontainertypecode!==-1){selectedRecord[\"ncontainertypecode\"]={\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode};}else{selectedRecord[\"ncontainertypecode\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response[0].data),{},{SelectedTest:SelectedTest//TestGroupTest : [TestGroupTest]\n}),openModal:true,operation:operation,screenName:\"IDS_EDITTESTGROUPTEST\",testGroupInputData:{// source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\nsection:constructOptionList(response[2].data||[],\"nsectioncode\",\"ssectionname\",false,false,true).get(\"OptionList\"),method:constructOptionList(response[3].data||[],\"nmethodcode\",\"smethodname\",false,false,true).get(\"OptionList\"),instrumentCategory:constructOptionList(response[4].data||[],\"ninstrumentcatcode\",\"sinstrumentcatname\",false,false,true).get(\"OptionList\"),containerType:constructOptionList(response[6].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true).get(\"OptionList\"),testFile:constructOptionList(response[5].data||[],\"ntestfilecode\",\"sfilename\",false,false,true).get(\"OptionList\")},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode}});}).catch(function(error){//console.log(\"errror:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var editTestGroupParameter=function editTestGroupParameter(operation,selectedParameter,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/testgroup/getActiveParameterById\",{userinfo:userInfo,testgrouptestparameter:selectedParameter,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/parametertype/getParameterType\",{userinfo:userInfo}),rsapi.post(\"unit/getUnit\",{userinfo:userInfo}),rsapi.post(\"grade/getGrade\",{userinfo:userInfo}),rsapi.post(\"checklist/getApprovedChecklist\",{\"userinfo\":userInfo})];Axios.all(urlArray).then(function(response){var parameterObject=response[0].data.TestGroupTestParameter[0];var predefinedObject=response[0].data.TestGroupTestPredefinedParameter;var characterObject=response[0].data.TestGroupTestCharParameter;var numericObject=response[0].data.TestGroupTestNumericParameter&&response[0].data.TestGroupTestNumericParameter.length>0?response[0].data.TestGroupTestNumericParameter[0]:{};var selectedRecord=_objectSpread(_objectSpread({},parameterObject),{},{nunitcode:{\"label\":parameterObject.sunitname,\"value\":parameterObject.nunitcode},nparametertypecode:{\"label\":parameterObject.sdisplaystatus,\"value\":parameterObject.nparametertypecode},parameterTypeCode:parameterObject.nparametertypecode,nchecklistversioncode:{\"label\":parameterObject.schecklistname,\"value\":parameterObject.nchecklistversioncode},schecklistversionname:parameterObject.schecklistversionname,ntestformulacode:parameterObject.ntestformulacode>0?{\"label\":parameterObject.sformulacalculationdetail,\"value\":parameterObject.ntestformulacode,item:{sformulacalculationdetail:parameterObject.sformulacalculationdetail,ntestformulacode:parameterObject.ntestformulacode,sformulacalculationcode:parameterObject.sformulacalculationcode}}:\"\"});if(selectedRecord[\"schecklistname\"]===\"NA\"){delete selectedRecord[\"nchecklistversioncode\"];}if(selectedRecord[\"schecklistversionname\"]===\"NA\"){delete selectedRecord[\"schecklistversionname\"];}if(selectedRecord[\"sunitname\"]===\"NA\"){delete selectedRecord[\"nunitcode\"];}if(characterObject){selectedRecord[\"scharname\"]=characterObject.scharname;selectedRecord[\"ntestgrouptestcharcode\"]=characterObject.ntestgrouptestcharcode;}if(predefinedObject){selectedRecord[\"ntestgrouptestpredefcode\"]=predefinedObject.ntestgrouptestpredefcode;selectedRecord[\"spredefinedname\"]=predefinedObject.spredefinedname;selectedRecord[\"ndefaultstatus\"]=predefinedObject.ndefaultstatus;selectedRecord[\"ngradecode\"]={\"label\":predefinedObject.sdisplaystatus,\"value\":predefinedObject.ngradecode};}if(numericObject){selectedRecord[\"ntestgrouptestnumericcode\"]=numericObject.ntestgrouptestnumericcode;selectedRecord[\"sminlod\"]=numericObject.sminlod;selectedRecord[\"smaxlod\"]=numericObject.smaxlod;selectedRecord[\"sminb\"]=numericObject.sminb;selectedRecord[\"smina\"]=numericObject.smina;selectedRecord[\"smaxa\"]=numericObject.smaxa;selectedRecord[\"smaxb\"]=numericObject.smaxb;selectedRecord[\"sminloq\"]=numericObject.sminloq;selectedRecord[\"smaxloq\"]=numericObject.smaxloq;selectedRecord[\"sdisregard\"]=numericObject.sdisregard;selectedRecord[\"sresultvalue\"]=numericObject.sresultvalue;}var gradeMap=constructOptionList(response[3].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var unitMap=constructOptionList(response[2].data||[],\"nunitcode\",\"sunitname\",false,false,true);var grade=gradeMap.get(\"OptionList\");var unit=unitMap.get(\"OptionList\");var disabled=parameterObject.nparametertypecode===parameterType.NUMERIC?false:true;dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:operation,screenName:\"IDS_PARAMETER\",testGroupInputData:{unit:unit,grade:grade,testFormula:constructOptionList(response[0].data.TestFormula||[],\"ntestformulacode\",\"sformulacalculationdetail\",false,false,true).get(\"OptionList\"),parameterType:constructOptionList(response[1].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true).get(\"OptionList\"),checkListVersion:constructOptionList(response[4].data||[],\"nchecklistversioncode\",\"schecklistname\",false,false,true).get(\"OptionList\"),needRoundingDigit:disabled,needUnit:disabled},parameterData:{grade:grade,defaultUnit:unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\"},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\n//     return dispatch => {\n//         const testgroupspecification = optionalData.testgroupspecification;\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\n//             dispatch(initRequest(true));\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\n//             .then(response=>{\n//                 dispatch({\n//                     type: DEFAULT_RETURN, \n//                     payload:{\n//                         openChildModal: true,\n//                         operation: \"create\",\n//                         screenName: \"IDS_FORMULA\",\n//                         testGroupInputData: {testFormula: response.data},\n//                         selectedRecord: {},\n//                         ncontrolCode\n//                 }});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\n//                 if(error.response.status === 409 || error.response.status === 417) {\n//                     toast.warn(error.response.data);\n//                 } else {\n//                     toast.error(error.message)\n//                 }\n//             });\n//         } else {\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         }\n//     }\n// }\nexport var getTestGroupParameter=function getTestGroupParameter(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestParameter\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getComponentBySpecId=function getComponentBySpecId(inputParam,masterData,searchRef){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.keyName,inputParam.selectedRecord.testgroupspecification[0]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}var historyDataState=_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),historyDataState:historyDataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupDetails=function getTestGroupDetails(inputParam){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestGroupTest\",{ntestgrouptestcode:parseInt(inputParam['ntestgrouptestcode']),userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data),testskip:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupComponentDetails=function getTestGroupComponentDetails(inputParam,masterData,searchRef){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestByComponentId\",{testgroupspecsampletype:inputParam['testgroupspecsampletype'],userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),testskip:0,testtake:5,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecification=function getSpecification(inputParam,masterData,searchRef){return function(dispatch){if(inputParam.selectedRecord!==null){rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},_defineProperty({},inputParam.keyName,inputParam.selectedRecord))).then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),{},{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey},response.data),{},{selectedNode:inputParam.selectedRecord,searchedData:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedNode:inputParam.selectedRecord,TestGroupSpecification:[],SelectedSpecification:{},TestGroupTest:[],TestGroupTestParameter:[],TestGroupTestNumericParameter:[],TestGroupTestFormula:[],TestGroupTestPredefinedParameter:[],TestGroupTestClinicalSpec:[],TestGroupTestCharParameter:[],ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,SelectedTest:{},selectedParameter:{},TestGroupSpecFile:[],TestGroupSpecificationHistory:[],SelectedComponent:undefined,RulesEngine:[]})}});}};};export var changeTestCategory=function changeTestCategory(inputParam,testGroupInputData){return function(dispatch){rsapi.post(\"/testgroup/getTestMasterByCategory\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);inputParam.selectedRecord.ntestcode=[];dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:inputParam.selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},testGroupInputData),response.data)}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecificationDetails=function getSpecificationDetails(inputParam,masterData,searchRef){return function(dispatch){rsapi.post(\"/testgroup/get\"+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),screenName:inputParam.screenName}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var editSpecFile=function editSpecFile(inputParam){return function(dispatch){var masterData=inputParam.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputParam.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo}),rsapi.post(\"/testgroup/getActiveSpecFileById\",{userinfo:inputParam.userInfo,testgroupspecfile:inputParam.selectedRecord,ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})];Axios.all(urlArray).then(function(response){var linkmaster=response[0].data.LinkMaster;var defaultLink=linkmaster.filter(function(item){return item.ndefaultlink===transactionStatus.YES;});var editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?{\"label\":defaultLink[0].slinkname,\"value\":defaultLink[0].nlinkcode}:\"\";link={slinkfilename:'',slinkdescription:'',sdescription:editObject.sdescription,nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}var selectedRecord=_objectSpread(_objectSpread({},link),{},{nallotedspeccode:editObject.nallotedspeccode,nspecfilecode:editObject.nspecfilecode,stypename:editObject.stypename,nattachmenttypecode:editObject.nattachmenttypecode,nlinkcode:nlinkcode// disabled: true\n});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",screenName:\"IDS_SPECFILE\",editFiles:Object.values(editObject).length>0&&editObject.nattachmenttypecode===attachmentType.FTP?editObject:{},selectedRecord:selectedRecord,ncontrolCode:inputParam.ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var addTestGroupCodedResult=function addTestGroupCodedResult(operation,paramdata,userInfo,ncontrolCode,optionalData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterSubCodedById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var selectedsubcodedresult=[];var selectsubcodedelete=[];var gradeMap=constructOptionList(response[0].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestpredefcode:paramdata[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],ngradecode:{\"label\":editCodedResult[\"sdisplaystatus\"],\"value\":editCodedResult[\"ngradecode\"]},spredefinedname:editCodedResult[\"spredefinedname\"],//sresultparacomment: editCodedResult[\"sresultparacomment\"],\nspredefinedsynonym:editCodedResult[\"spredefinedsynonym\"],spredefinedcomments:editCodedResult[\"spredefinedcomments\"],nneedresultentryalert:editCodedResult[\"nneedresultentryalert\"],nneedsubcodedresult:editCodedResult[\"nneedsubcodedresult\"],salertmessage:editCodedResult[\"salertmessage\"]};selectedsubcodedresult=response[2].data;}else{selectedRecord={ngradecode:gradeMap.get(\"DefaultValue\"),nneedresultentryalert:4,nneedsubcodedresult:4// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CODEDRESULT\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false,selectedsubcodedresult:selectedsubcodedresult,selectsubcodedelete:selectsubcodedelete}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var subCodedResultView=function subCodedResultView(operation,paramdata,userInfo,ncontrolCode,optionalData,masterData){return function(dispatch){rsapi.post(\"testgroup/getActivePredefinedParameterSubCoded\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo}).then(function(response){var selectedsubcoderesult=[];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"View\",screenName:\"IDS_SUBCODERESULT\",selectedsubcoderesult:response.data,masterData:_objectSpread(_objectSpread({},masterData),{},{selectedsubcoderesult:response.data,searchedData:undefined})//screenName: inputParam.screenName\n}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var addTestGroupNumericTab=function addTestGroupNumericTab(operation,paramdata,userInfo,optionalData,masterData,ncontrolCode){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"patient/getGender\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var gradeMap=constructOptionList(response[0].data.genderList||[],\"ngendercode\",\"sgendername\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestclinicspeccode:paramdata[\"ntestgrouptestclinicspeccode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],nfromage:paramdata[\"nfromage\"],ntoage:paramdata[\"ntoage\"],ngendercode:{\"label\":editCodedResult[\"sgendername\"],\"value\":editCodedResult[\"ngendercode\"]},nhigha:editCodedResult[\"shigha\"],nhighb:editCodedResult[\"shighb\"],nlowa:editCodedResult[\"slowa\"],nlowb:editCodedResult[\"slowb\"],sresultvalue:editCodedResult[\"sresultvalue\"]};}else{selectedRecord={ngendercode:gradeMap.get(\"DefaultValue\")// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CLINICALSPEC\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var viewTestGroupCheckList=function viewTestGroupCheckList(inputParam,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"checklist/viewTemplate\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:true,testGroupCheckList:{templateData:response.data},loading:false,selectedRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var reportSpecification=function reportSpecification(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/specReportGenerate\",_objectSpread(_objectSpread({},inputParam),{},{ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var retireSpecification=function retireSpecification(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/retireSpec\",_objectSpread({},inputParam)).then(function(response){// const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\nsortData(response.data);masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForTestMaterial=function getDataForTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,masterData,primaryKeyName){return function(dispatch){if(masterData.selectedNode!==undefined&&masterData.selectedNode!==null&&masterData.SelectedSpecification!==null){var testgroupspecification=masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:masterData.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){console.log(ncontrolCode);if(masterData.SelectedTest&&masterData.SelectedTest!==undefined){if(response[1].data===\"Success\"){var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialTypedefault=materialTypeMap.get(\"DefaultValue\");selectedRecord[\"nmaterialtypecode\"]=materialTypedefault;if(selectedRecord[\"nmaterialtypecode\"]!==undefined){var _inputParam;var inputData=[];var inputParam=(_inputParam={operation:operation,selectedRecord:selectedRecord,materialType:materialType,inputData:{nmaterialtypecode:materialTypedefault.value}},_defineProperty(_inputParam,\"materialType\",materialType),_defineProperty(_inputParam,\"masterData\",masterData),_defineProperty(_inputParam,\"screenName\",screenName),_defineProperty(_inputParam,\"ncontrolCode\",ncontrolCode),_inputParam);dispatch(getMaterialCategoryBasedMaterialType(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:undefined,materialCategoryList:undefined,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:response[1].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:\"IDS_NEEDTOADDTEST\"}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};};export function getMaterialCategoryBasedMaterialType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode}).then(function(response){var selectedRecord={};selectedRecord=inputParam.selectedRecord;var materialCategoryMap=constructOptionList(response.data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialCategorydefault=materialCategoryMap.get(\"DefaultValue\");selectedRecord['nmaterialcatcode']=materialCategorydefault;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(response.data.MaterialCategoryMain.length===0){if(selectedRecord['nmaterialcatcode']){delete selectedRecord['nmaterialcatcode'];}if(selectedRecord['nmaterialcode']){delete selectedRecord['nmaterialcode'];}}var materialList=[];if(materialCategoryList.length!==0){materialList=materialList;inputParam=_objectSpread(_objectSpread({},inputParam),{},{responsecat:response,materialCategoryList:materialCategoryList,selectedRecord:selectedRecord,inputData:{//nmaterialcatcode: materialCategorydefault.value,\nnmaterialtypecode:inputParam.inputData.nmaterialtypecode}});dispatch(getMaterialBasedMaterialCategory(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,screenName:inputParam.screenName,masterData:masterData,loading:false,materialCategoryList:materialCategoryList,materialType:inputParam.materialType,materialList:materialList,selectedRecord:selectedRecord,operation:inputParam.operation,ncontrolCode:inputParam.ncontrolCode}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getMaterialBasedMaterialCategory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"testgroup/getAvailableMaterial\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode,nmaterialcatcode:inputParam.inputData.nmaterialcatcode!==undefined?inputParam.inputData.nmaterialcatcode:inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,ntestgrouptestcode:inputParam.masterData.SelectedTest.ntestgrouptestcode}).then(function(response){var selectedRecord=inputParam.selectedRecord;var materialMap=constructjsonOptionList(response.data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");if(response.data.MaterialCombo.length===0){delete selectedRecord['nmaterialcode'];}var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(inputParam.materialCategoryList){dispatch({type:DEFAULT_RETURN,payload:{materialCategoryList:inputParam.materialCategoryList,masterData:masterData,loading:false,materialList:materialList,openChildModal:true,screenName:inputParam.screenName,selectedRecord:inputParam.selectedRecord,materialType:inputParam.materialType,operation:inputParam.operation,ncontrolCode:inputParam.ncontrolCode}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,materialList:materialList,openChildModal:true}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export var getTestGroupMaterial=function getTestGroupMaterial(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestMaterial\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForEditTestMaterial=function getDataForEditTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,Data,primaryKeyName){return function(dispatch){var testgroupspecification=Data.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var _rsapi$post2;var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var materialCatUrl=rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode});var materialUrl=rsapi.post(\"testgroup/getAvailableMaterial\",{nmaterialcatcode:Data.selectedMaterial.nmaterialcatcode,nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode,ntestgrouptestcode:Data.SelectedTest.ntestgrouptestcode});var materialById=rsapi.post(\"testgroup/getActiveTestMaterialById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,primaryKeyName,Data.selectedMaterial.ntestgrouptestmaterialcode),_defineProperty(_rsapi$post2,\"userinfo\",userInfo),_rsapi$post2));var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:Data.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,materialCatUrl,materialUrl,materialById,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[4].data===\"Success\"){var _selectedRecord={};var MaterialCategoryData=[];var MaterialTypeData=[];var MaterialData=[];var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialCategoryMap=constructOptionList(response[1].data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialMap=constructjsonOptionList(response[2].data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");MaterialCategoryData.push({\"value\":response[3].data[\"nmaterialcatcode\"],\"label\":response[3].data[\"smaterialcatname\"]});MaterialTypeData.push({\"value\":response[3].data[\"nmaterialtypecode\"],\"label\":response[3].data[\"smaterialtypename\"]});MaterialData.push({\"value\":response[3].data[\"nmaterialcode\"],\"label\":response[3].data[\"smaterialname\"]});_selectedRecord=response[3].data;_selectedRecord[\"nmaterialcatcode\"]=MaterialCategoryData[0];_selectedRecord[\"nmaterialtypecode\"]=MaterialTypeData[0];_selectedRecord[\"nmaterialcode\"]=MaterialData[0];dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:materialList,materialCategoryList:materialCategoryList,selectedRecord:_selectedRecord,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}else{toast.warn(intl.formatMessage({id:response[4].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TestGroupAction.js"],"names":["toast","rsapi","DEFAULT_RETURN","attachmentType","parameterType","SampleType","transactionStatus","constructjsonOptionList","constructOptionList","rearrangeDateFormat","sortData","Axios","intl","initRequest","sampleTypeOnChange","inputParam","masterData","dispatch","url","classUrl","post","methodUrl","inputData","then","response","data","type","payload","tempFilterData","loading","catch","error","status","warn","message","filterTestGroup","searchRef","current","value","filterData","searchedData","undefined","testskip","historyDataState","sort","filter","createTree","selectedRecord","userInfo","selectedNode","ncontrolCode","nproductcatcode","item","ncategorybasedflow","YES","nproductcode","sampletype","nsampletypecode","ncategorycode","ntreeversiontempcode","nprojectmastercode","userinfo","treetemplatemanipulation","treetempTranstestGroup","mandatoryFields","forEach","index","sleveldescription","push","slabelname","openModal","operation","screenName","TreetempTranstestGroup","treeMandatoryFields","formatMessage","id","editTree","treeVersionTemplateIndex","findIndex","x","templateVersionStatus","ntransactionstatus","RETIRED","addSpecification","masterDatas","nnextchildcode","SelectedSpecification","urlArray","testgroupspecification","napprovalstatus","CORRECTION","DRAFT","all","sproductname","label","sproductcatname","dexpirydate","ntzexpirydate","stimezoneid","sspecname","ExpiryDate","ncomponentrequired","ACTIVE","ntimezonecode","timeZoneList","get","addComponent","testGroupSpecSampleType","length","testCategory","sampleTypeMap","testGroupInputData","TestCategory","TestGroupSpecSampleType","TestGroupTest","ncomponentcode","ntestcategorycode","addTestGroupTest","selectedComponent","selectedSpecification","openTestModal","testgroupspecsampletype","stestcategoryname","stestcategorycode","editTestGroupTest","selectedTest","ntestcode","testgrouptest","editObject","SelectedTestGroupTest","testFileItem","TestGroupTestFile","SelectedTest","nsectioncode","ssectionname","nmethodcode","smethodname","ninstrumentcatcode","sinstrumentcatname","ncontainertypecode","scontainertype","sfilename","ntestgroupfilecode","section","method","instrumentCategory","containerType","testFile","editTestGroupParameter","selectedParameter","testgrouptestparameter","parameterObject","TestGroupTestParameter","predefinedObject","TestGroupTestPredefinedParameter","characterObject","TestGroupTestCharParameter","numericObject","TestGroupTestNumericParameter","nunitcode","sunitname","nparametertypecode","sdisplaystatus","parameterTypeCode","nchecklistversioncode","schecklistname","schecklistversionname","ntestformulacode","sformulacalculationdetail","sformulacalculationcode","scharname","ntestgrouptestcharcode","ntestgrouptestpredefcode","spredefinedname","ndefaultstatus","ngradecode","ntestgrouptestnumericcode","sminlod","smaxlod","sminb","smina","smaxa","smaxb","sminloq","smaxloq","sdisregard","sresultvalue","gradeMap","unitMap","grade","unit","disabled","NUMERIC","openChildModal","testFormula","TestFormula","checkListVersion","needRoundingDigit","needUnit","parameterData","defaultUnit","getTestGroupParameter","getComponentBySpecId","keyName","getTestGroupDetails","ntestgrouptestcode","parseInt","getTestGroupComponentDetails","testtake","getSpecification","ActiveKey","activeKey","FocusKey","focusKey","primaryKey","TestGroupSpecification","TestGroupTestFormula","TestGroupTestClinicalSpec","TestGroupSpecFile","TestGroupSpecificationHistory","SelectedComponent","RulesEngine","changeTestCategory","getSpecificationDetails","editSpecFile","testgroupspecfile","linkmaster","LinkMaster","defaultLink","ndefaultlink","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","slinkdescription","sdescription","nlinkdefaultstatus","sfilesize","nfilesize","nallotedspeccode","nspecfilecode","stypename","editFiles","Object","values","FTP","addTestGroupCodedResult","paramdata","optionalData","testgrouptestpredefinedparameter","selectedsubcodedresult","selectsubcodedelete","editCodedResult","ntestgrouptestparametercode","spredefinedsynonym","spredefinedcomments","nneedresultentryalert","nneedsubcodedresult","salertmessage","showSaveContinue","needCodedResult","subCodedResultView","selectedsubcoderesult","addTestGroupNumericTab","genderList","ntestgrouptestclinicspeccode","nfromage","ntoage","ngendercode","nhigha","nhighb","nlowa","nlowb","viewTestGroupCheckList","openTemplateModal","testGroupCheckList","templateData","reportSpecification","loadEsign","showConfirmAlert","document","getElementById","setAttribute","filepath","click","retireSpecification","getDataForTestMaterial","primaryKeyName","materialTypeUrl","validationUrl","console","log","materialTypeMap","materialType","materialTypedefault","nmaterialtypecode","getMaterialCategoryBasedMaterialType","materialList","materialCategoryList","isOpen","materialCategoryMap","MaterialCategoryMain","materialCategorydefault","responsecat","getMaterialBasedMaterialCategory","nmaterialcatcode","materialMap","MaterialCombo","getTestGroupMaterial","getDataForEditTestMaterial","Data","materialCatUrl","selectedMaterial","materialUrl","materialById","ntestgrouptestmaterialcode","MaterialCategoryData","MaterialTypeData","MaterialData"],"mappings":"qUAAA,OACIA,KADJ,KAEO,gBAFP,CAGA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OACIC,cADJ,KAEO,cAFP,CAGA,OACIC,cADJ,CAEIC,aAFJ,CAGIC,UAHJ,CAIIC,iBAJJ,KAKO,2BALP,CAMA,OACIC,uBADJ,CAEIC,mBAFJ,CAGIC,mBAHJ,CAII;AACAC,QALJ,KAMO,4BANP,CAOA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,IADJ,KAEO,mBAFP,CAGA,OACIC,WADJ,KAEO,eAFP,CAKA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,UAAD,CAAaC,UAAb,CAA4B,CAC1D,MAAO,UAACC,QAAD,CAAc,CACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAIK,CAAAA,GAAG,CAAG,YAAV,CACA,GAAGH,UAAU,CAACI,QAAd,CAAuB,CACnBD,GAAG,CAAGH,UAAU,CAACI,QAAjB,CACH,CACDlB,KAAK,CAACmB,IAAN,CAAWF,GAAG,CAAGH,UAAU,CAACM,SAA5B,CAAuCN,UAAU,CAACO,SAAlD,EACKC,IADL,CACU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLC,cAAc,CAAEb,UAAU,CAACO,SAAX,CAAqBM,cADhC,CAELZ,UAAU,gCACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,CAFL,CAMLI,OAAO,CAAE,KANJ,CAFJ,CAAD,CAAR,CAWH,CAdL,EAeKC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhB,UAAU,CAAC,mBAAD,CAAV,CAAkC,EAAlC,CACAC,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,CAAVA,UADK,CAELa,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAOA7B,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAVD,IAUO,CACHR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA7B,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAnCL,EAoCH,CA1CD,CA2CH,CA5CM,CA8CP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACpB,UAAD,CAAaC,UAAb,CAAyBoB,SAAzB,CAAuC,CAClE,MAAO,UAACnB,QAAD,CAAc,CACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,4BAAX,CAAyCL,UAAU,CAACO,SAApD,EACKC,IADL,CACU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACA,GAAIW,SAAS,CAACC,OAAd,CAAuB,CACnBD,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACH,CACDrB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLY,UAAU,CAAExB,UAAU,CAACO,SAAX,CAAqBiB,UAD5B,CAELvB,UAAU,8CACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,MAGNe,YAAY,CAAEC,SAHR,EAFL,CAOLZ,OAAO,CAAE,KAPJ,CAQLa,QAAQ,CAAE,CARL,CASLC,gBAAgB,gCACT5B,UAAU,CAAC4B,gBADF,MAEZC,IAAI,CAAEH,SAFM,CAGZI,MAAM,CAAEJ,SAHI,EATX,CAFJ,CAAD,CAAR,CAkBH,CAxBL,EAyBKX,KAzBL,CAyBW,SAAAC,KAAK,CAAI,CAEZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,CAAVA,UADK,CAELa,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAOA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CAvCL,EAwCH,CA1CD,CA2CH,CA5CM,CA8CP,MAAO,IAAMqB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,cAAD,CAAiBC,QAAjB,CAA2BC,YAA3B,CAAyCC,YAAzC,CAA0D,CAChF,MAAO,UAACjC,QAAD,CAAc,CACjB,GAAI8B,cAAc,CAACI,eAAf,CAA+BC,IAA/B,CAAoCC,kBAApC,GAA2D/C,iBAAiB,CAACgD,GAA7E,EAAoFP,cAAc,CAACQ,YAAvG,CAAqH,CACjH,GAAMxC,CAAAA,UAAU,CAAG,CACfyC,UAAU,CAAET,cAAc,CAACU,eAAf,CAA+BL,IAD5B,CAEfM,aAAa,CAAEX,cAAc,CAACI,eAAf,CAA+Bb,KAF/B,CAGfqB,oBAAoB,CAAEZ,cAAc,CAACY,oBAAf,CAAoCrB,KAH3C,CAIfsB,kBAAkB,CAAGb,cAAc,CAACa,kBAAf,CAAoCb,cAAc,CAACa,kBAAf,CAAkCtB,KAAtE,CAA8E,CAAC,CAJrF,CAKfuB,QAAQ,CAAEb,QALK,CAMfc,wBAAwB,CAAEb,YANX,CAAnB,CAQAhC,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,qCAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMuC,CAAAA,sBAAsB,CAAGvC,QAAQ,CAACC,IAAT,CAAc,wBAAd,GAA2C,EAA1E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAMuC,CAAAA,eAAe,CAAG,EAAxB,CACAD,sBAAsB,CAACE,OAAvB,CAA+B,SAACb,IAAD,CAAOc,KAAP,CAAiB,CAC5C,GAAId,IAAI,CAACe,iBAAL,GAA2B,IAA/B,CAAqC,CACjCH,eAAe,CAACI,IAAhB,CAAqB,CACjB,UAAWhB,IAAI,CAACiB,UADC,CAEjB,YAAa,qBAAuBH,KAFnB,CAGjB,YAAa,IAHI,CAArB,EAKH,CACJ,CARD,EAUAjD,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,iBAHP,CAILC,sBAAsB,CAAEV,sBAJnB,CAKLW,mBAAmB,CAAEV,eALhB,CAML;AACAd,YAAY,CAAZA,YAPK,CAQLrB,OAAO,CAAE,KARJ,CAFJ,CAAD,CAAR,CAaH,CAvCL,EAwCKC,KAxCL,CAwCW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CApDL,EAqDH,CA/DD,IA+DO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,yBADsB,CAAnB,CAAX,EAGH,CACJ,CArED,CAsEH,CAvEM,CAyEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,SAAD,CAAYtB,YAAZ,CAA0BY,QAA1B,CAAoCX,YAApC,CAAkDX,UAAlD,CAA8DvB,UAA9D,CAA6E,CACjG,MAAO,UAACC,QAAD,CAAc,CACjB,GAAI,CAACgC,YAAL,CAAmB,CACf,MAASjD,CAAAA,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CACnCC,EAAE,CAAE,6BAD+B,CAAnB,CAAX,CAAT,CAGH,CACD;AACA,GAAME,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8B/B,YAAY,CAAC,sBAAD,CAA9C,EAD4B,CAAjC,CAEA;AACA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA;AACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI3B,YAAJ,CAAkB,CACdhC,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,wBAAX,CAAqC,CACjCyC,QAAQ,CAARA,QADiC,CAEjCC,wBAAwB,CAAEb,YAFO,CAGjCU,oBAAoB,CAAEpB,UAAU,CAACoB,oBAAX,CAAgCrB,KAHrB,CAArC,EAKKf,IALL,CAKU,SAAAC,QAAQ,CAAI,CACd,GAAMuC,CAAAA,sBAAsB,CAAGvC,QAAQ,CAACC,IAAxC,CACA,GAAMiD,CAAAA,mBAAmB,CAAGX,sBAAsB,EAAI,CAAC,CACnD,UAAWA,sBAAsB,CAACM,UADiB,CAEnD,YAAa,mBAFsC,CAGnD,YAAa,IAHsC,CAAD,CAAtD,CAKApD,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAEA,SAFN,CAGLC,UAAU,CAAE,cAHP,CAILzB,cAAc,kBACPgB,sBADO,CAJT,CAOLW,mBAAmB,CAAnBA,mBAPK,CAQLxB,YAAY,CAAZA,YARK,CASLrB,OAAO,CAAE,KATJ,CAFJ,CAAD,CAAR,CAcH,CA1BL,EA2BKC,KA3BL,CA2BW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAvCL,EAwCH,CA1CD,IA0CO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,6BADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CAhED,CAiEH,CAlEM,CAoEP,MAAO,IAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACb,SAAD,CAAYxD,UAAZ,CAAwBmC,YAAxB,CAAsCmC,WAAtC,CAAsD,CAClF,MAAO,UAACpE,QAAD,CAAc,CACjB;AACA,GAAIF,UAAU,CAACgC,cAAX,CAA0BY,oBAA1B,CAA+CP,IAA/C,CAAoD8B,kBAApD,GAA2E5E,iBAAiB,CAAC6E,OAAjG,CAA0G,CACtGnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI7D,UAAU,CAACkC,YAAX,EAA2B,IAA3B,EAAmClC,UAAU,CAACkC,YAAX,CAAwBqC,cAAxB,GAA2C,CAAC,CAAnF,CAAsF,CAElF,GAAID,WAAW,EAAIA,WAAW,CAACE,qBAAZ,GAAsC,IAArD,EAA6DhB,SAAS,GAAK,MAA/E,CAAuF,CACnFvE,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,yBAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAIY,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIjB,SAAS,GAAK,QAAlB,CAA6B,CACzB,GAAMkB,CAAAA,sBAAsB,CAAG1E,UAAU,CAAC0E,sBAAX,CAAkC,CAAlC,CAA/B,CACD;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIA,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACqF,UAA7D,EACAF,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACsF,KADjE,CACwE,CACpEJ,QAAQ,CAAG,CAACvF,KAAK,CAACmB,IAAN,CAAW,sBAAX,CAAD,CAAX,CAEAoE,QAAQ,CAACpB,IAAT,CAAcnE,KAAK,CAACmB,IAAN,CAAW,uCAAX,CAAoD,CAC9DqE,sBAAsB,CAAtBA,sBAD8D,CAE9D5B,QAAQ,CAAE9C,UAAU,CAAC8C,QAFyC,CAG9DF,oBAAoB,CAAE5C,UAAU,CAACgC,cAAX,CAA0BY,oBAA1B,CAA+CrB,KAHP,CAApD,CAAd,EAKH,CATD,IAUI,CACAtC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAACC,EAAE,CAAE,8CAAL,CAAnB,CAAX,EACA,OACH,CACJ,CA9BD,IA+BK,CACDY,QAAQ,CAAG,CAACvF,KAAK,CAACmB,IAAN,CAAW,sBAAX,CAAD,CAAX,CAEAoE,QAAQ,CAACpB,IAAT,CAAcnE,KAAK,CAACmB,IAAN,CAAW,gCAAX,CAA6C,CACvDyC,QAAQ,CAAE9C,UAAU,CAACiC,QADkC,CAEvDW,oBAAoB,CAAE5C,UAAU,CAACgC,cAAX,CAA0BY,oBAA1B,CAA+CrB,KACrE;AAHuD,CAA7C,CAAd,EAKH,CACD3B,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIuB,CAAAA,cAAc,CAAG,EAArB,CACA,GAAI/B,CAAAA,UAAU,CAAGD,UAAU,CAACC,UAAX,GAA0ByB,SAA1B,CAAsC1B,UAAU,CAACC,UAAjD,CAA8DqE,WAA/E,CAEA,GAAId,SAAS,GAAK,QAAlB,CAA6B,CACzBvD,UAAU,8CACHD,UAAU,CAACC,UADR,EAEHQ,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAFT,MAGNgE,sBAAsB,CAAE1E,UAAU,CAAC0E,sBAH7B,EAAV,CAKA1C,cAAc,8BACV+C,YAAY,CAAE/E,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0CC,IAA1C,CAA+CC,kBAA/C,GAAsE/C,iBAAiB,CAACgD,GAAxF,CAA8F,EAA9F,CAAmGvC,UAAU,CAACgC,cAAX,CAA0BQ,YAA1B,CAAuCwC,KAD9I,CAEVC,eAAe,CAAEjF,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0C4C,KAFjD,CAGV1C,kBAAkB,CAAEtC,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0CC,IAA1C,CAA+CC,kBAHzD,EAIP7B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB8D,qBAJV,MAKV;AACAU,WAAW,CAAExF,mBAAmB,CAACM,UAAU,CAAC8C,QAAZ,CAAsBrC,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB8D,qBAAjB,CAAuC,aAAvC,CAAtB,CANtB,CAOVW,aAAa,CAAE,CACX,QAAS1E,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB8D,qBAAjB,CAAuCY,WADrC,CAEX,QAAS3E,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB8D,qBAAjB,CAAuCW,aAFrC,CAPL,EAAd,CAYH,CAlBD,IAkBO,CACHnD,cAAc,CAAG,CACb+C,YAAY,CAAE/E,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0CC,IAA1C,CAA+CC,kBAA/C,GAAsE/C,iBAAiB,CAACgD,GAAxF,CAA8F,EAA9F,CAAmGvC,UAAU,CAACgC,cAAX,CAA0BQ,YAA1B,CAAuCwC,KAD3I,CAEbC,eAAe,CAAEjF,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0C4C,KAF9C,CAGbK,SAAS,CAAErF,UAAU,CAACkC,YAAX,CAAwBkB,iBAHtB,CAIbd,kBAAkB,CAAEtC,UAAU,CAACgC,cAAX,CAA0BI,eAA1B,CAA0CC,IAA1C,CAA+CC,kBAJtD,CAKb4C,WAAW,CAAExF,mBAAmB,CAACM,UAAU,CAACiC,QAAZ,CAAsBxB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB4E,UAAvC,CALnB,CAMb;AACAC,kBAAkB,CAAEhG,iBAAiB,CAACgD,GAPzB,CAQb;AACA4B,kBAAkB,CAAE5E,iBAAiB,CAACiG,MATzB,CAUbL,aAAa,CAAE,CACX,QAASnF,UAAU,CAACiC,QAAX,CAAoBmD,WADlB,CAEX,QAASpF,UAAU,CAACiC,QAAX,CAAoBwD,aAFlB,CAVF,CAAjB,CAeH,CACDvF,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAEA,SAFN,CAGLC,UAAU,CAAE,mBAHP,CAILxD,UAAU,CAAVA,UAJK,CAKL+B,cAAc,CAAdA,cALK,CAML0D,YAAY,CAAEjG,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,eAAzB,CAA0C,aAA1C,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAAnB,CAAgGiF,GAAhG,CAAoG,YAApG,CANT,CAOLxD,YAAY,CAAZA,YAPK,CAFJ,CAAD,CAAR,CAYH,CApDL,EAqDKpB,KArDL,CAqDW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CA3DL,EA4DH,CACJ,CA5GD,IA4GO,CACH,GAAI8C,SAAS,GAAK,MAAlB,CAA0B,CACtBvE,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,yBAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD5E,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,kCAAN,CAAnB,CAAX,EACH,CACJ,CACJ,CACJ,CA3HD,CA4HH,CA7HM,CA+HP,MAAO,IAAM+B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACpB,qBAAD,CAAwBvC,QAAxB,CAAkCE,YAAlC,CAAgDlC,UAAhD,CAA+D,CACvF,MAAO,UAACC,QAAD,CAAc,CAEjB,GAAM6D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD3E,KAAK,CAACmB,IAAN,CAAW,kCAAX,CAA+C,CAC3CyC,QAAQ,CAAEb,QADiC,CAE3CyC,sBAAsB,CAAEF,qBAFmB,CAA/C,EAIKhE,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACd,GAAMoF,CAAAA,uBAAuB,CAAGpF,QAAQ,CAACC,IAAT,CAAc,yBAAd,GAA4C,EAA5E,CACA,GAAImF,uBAAuB,CAACC,MAAxB,CAAiC,CAArC,CAAwC,CACpC,GAAMC,CAAAA,YAAY,CAAGtG,mBAAmB,CAACgB,QAAQ,CAACC,IAAT,CAAc,cAAd,GAAiC,EAAlC,CAAsC,mBAAtC,CAA2D,mBAA3D,CAAgF,mBAAhF,CAAqG,WAArG,CAAkH,KAAlH,CAAxC,CACA,GAAMsF,CAAAA,aAAa,CAAGvG,mBAAmB,CAACoG,uBAAD,CAA0B,gBAA1B,CAA4C,gBAA5C,CAA8D,KAA9D,CAAqE,KAArE,CAA4E,IAA5E,CAAzC,CACA;AACA3F,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,eAHP,CAILwC,kBAAkB,CAAE,CAChBC,YAAY,CAAEH,YAAY,CAACJ,GAAb,CAAiB,YAAjB,CADE,CAEhBQ,uBAAuB,CAAEH,aAAa,CAACL,GAAd,CAAkB,YAAlB,CAFT,CAGhBS,aAAa,CAAE3F,QAAQ,CAACC,IAAT,CAAc,eAAd,GAAkC,EAAG;AAHpC,CAJf,CASLsB,cAAc,CAAE,CACZqE,cAAc,CAAEL,aAAa,CAACL,GAAd,CAAkB,cAAlB,CADJ,CAEZW,iBAAiB,CAAEP,YAAY,CAACJ,GAAb,CAAiB,cAAjB,EAAmCI,YAAY,CAACJ,GAAb,CAAiB,cAAjB,CAAnC,CAAsEI,YAAY,CAACJ,GAAb,CAAiB,YAAjB,EAA+B,CAA/B,CAF7E,CATX,CAaLxD,YAAY,CAAZA,YAbK,CAFJ,CAAD,CAAR,CAkBH,CAtBD,IAsBO,CACHlD,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,2BADsB,CAAnB,CAAX,EAGH,CACJ,CAjCL,EAkCK9C,KAlCL,CAkCW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAxCL,EAyCH,CACJ,CApDD,CAqDH,CAtDM,CAwDP,MAAO,IAAMoF,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,iBAAD,CAAoBvE,QAApB,CAA8BE,YAA9B,CAA4CsE,qBAA5C,CAAmEjF,UAAnE,CAA+EvB,UAA/E,CAA8F,CAC1H,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAID,UAAU,CAACiC,YAAX,GAA4BR,SAA5B,EAAyCzB,UAAU,CAACiC,YAAX,GAA4B,IAAzE,CAA+E,CAC3E,GAAM6B,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI4C,qBAAJ,CAA2B,CACvB,GAAIA,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACsF,KAA5D,EACA4B,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACqF,UADhE,CAC4E,CAExE,GAAI8B,CAAAA,aAAa,CAAG,KAApB,CACA,GAAID,qBAAqB,CAAClB,kBAAtB,GAA6ChG,iBAAiB,CAACgD,GAAnE,CAAwE,CACpE,GAAIiE,iBAAiB,EAAI9E,SAAzB,CAAoC,CAChCzC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,4BADsB,CAAnB,CAAX,EAGH,CAJD,IAIK,CACD6C,aAAa,CAAG,IAAhB,CACH,CACJ,CARD,IAQO,CACHA,aAAa,CAAG,IAAhB,CACH,CAED,GAAIA,aAAa,GAAK,IAAtB,CAA4B,CACxBxH,KAAK,CAACmB,IAAN,CAAW,6BAAX,CAA0C,CACtCyC,QAAQ,CAAEb,QAD4B,CAEtC0E,uBAAuB,CAAEH,iBAFa,CAGtC5D,oBAAoB,CAAEpB,UAAU,CAACoB,oBAAX,CAAgCrB,KAHhB,CAA1C,EAKKf,IALL,CAKU,SAAAC,QAAQ,CAAI,CACd,GAAIsF,CAAAA,YAAJ,CACA;AACA;AACA,GAAItF,QAAQ,CAACC,IAAT,CAAc,cAAd,EAA8BoF,MAA9B,CAAuC,CAA3C,CAA8C,CAC1CC,YAAY,CAAGtG,mBAAmB,CAACgB,QAAQ,CAACC,IAAT,CAAc,cAAd,CAAD,CAAgC,mBAAhC,CAAqD,mBAArD,CAA0E,mBAA1E,CAA+F,WAA/F,CAA4G,KAA5G,CAAlC,CACAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,UAHP,CAILwC,kBAAkB,CAAE,CAChBC,YAAY,CAAEH,YAAY,CAACJ,GAAb,CAAiB,YAAjB,CADE,CAEhBS,aAAa,CAAE3F,QAAQ,CAACC,IAAT,CAAc,eAAd,GAAkC,EAAG;AAFpC,CAJf,CAQLsB,cAAc,CAAE,CACZsE,iBAAiB,CAAE,CACftB,KAAK,CAAEvE,QAAQ,CAACC,IAAT,CAAc,sBAAd,EAAsCkG,iBAD9B,CAEfrF,KAAK,CAAEd,QAAQ,CAACC,IAAT,CAAc,sBAAd,EAAsCmG,iBAF9B,CAGfxE,IAAI,CAAE5B,QAAQ,CAACC,IAAT,CAAc,sBAAd,CAHS,CAKnB;AANY,CARX,CAgBLyB,YAAY,CAAZA,YAhBK,CAFJ,CAAD,CAAR,CAqBH,CAvBD,IAuBO,CACHlD,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8BADsB,CAAnB,CAAX,EAGH,CACJ,CArCL,EAsCK9C,KAtCL,CAsCW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CA5CL,EA6CH,CAGJ,CAjED,IAiEO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CAEJ,CAxED,IAyEK,CACD5E,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,yBADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CAxFD,IAwFQ,CACJ5E,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,yBADsB,CAAnB,CAAX,EAGH,CACJ,CA9FD,CA+FH,CAhGM,CAkGP,MAAO,IAAMiD,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACtD,SAAD,CAAYuD,YAAZ,CAA0B9E,QAA1B,CAAoCE,YAApC,CAAkDsE,qBAAlD,CAAyEjF,UAAzE,CAAqFvB,UAArF,CAAoG,CACjI,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAM6D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI4C,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACsF,KAA5D,EACA4B,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACqF,UADhE,CAC4E,CACxE,GAAMoC,CAAAA,SAAS,CAAGD,YAAY,CAACC,SAA/B,CACA,GAAMvC,CAAAA,QAAQ,CAAG,CACbvF,KAAK,CAACmB,IAAN,CAAW,8BAAX,CAA2C,CACvCyC,QAAQ,CAAEb,QAD6B,CAEvCgF,aAAa,CAAEF,YAFwB,CAGvCnE,oBAAoB,CAAEpB,UAAU,CAACoB,oBAAX,CAAgCrB,KAHf,CAA3C,CADa,CAMbrC,KAAK,CAACmB,IAAN,CAAW,mBAAX,CAAgC,CAC5ByC,QAAQ,CAAEb,QADkB,CAAhC,CANa,CASb/C,KAAK,CAACmB,IAAN,CAAW,wBAAX,CAAqC,CACjC2G,SAAS,CAATA,SADiC,CAEjClE,QAAQ,CAAEb,QAFuB,CAArC,CATa,CAab/C,KAAK,CAACmB,IAAN,CAAW,uBAAX,CAAoC,CAChC2G,SAAS,CAATA,SADgC,CAEhClE,QAAQ,CAAEb,QAFsB,CAApC,CAba,CAiBb/C,KAAK,CAACmB,IAAN,CAAW,mCAAX,CAAgD,CAC5C2G,SAAS,CAATA,SAD4C,CAE5ClE,QAAQ,CAAEb,QAFkC,CAAhD,CAjBa,CAqBb/C,KAAK,CAACmB,IAAN,CAAW,+BAAX,CAA4C,CACxC2G,SAAS,CAATA,SADwC,CAExClE,QAAQ,CAAEb,QAF8B,CAA5C,CArBa,CAyBb/C,KAAK,CAACmB,IAAN,CAAW,8BAAX,CAA2C,CACvC2G,SAAS,CAATA,SADuC,CAEvClE,QAAQ,CAAEb,QAF6B,CAA3C,CAzBa,CAAjB,CA8BArC,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd;AACA;AACA;AAEA,GAAMyG,CAAAA,UAAU,CAAGzG,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiByG,qBAApC,CACA,GAAMC,CAAAA,YAAY,CAAG3G,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB2G,iBAAtC,CACA,GAAMC,CAAAA,YAAY,CAAG7G,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB4G,YAAtC,CACA;AAEA,GAAMtF,CAAAA,cAAc,gCACbkF,UADa,MAEhB;AACA;AACA;AACA;AACAK,YAAY,CAAE,CACV,QAASL,UAAU,CAACM,YADV,CAEV,QAASN,UAAU,CAACK,YAFV,CANE,CAUhBE,WAAW,CAAE,CACT,QAASP,UAAU,CAACQ,WADX,CAET,QAASR,UAAU,CAACO,WAFX,CAVG,CAchBE,kBAAkB,CAAE,CAChB,QAAST,UAAU,CAACU,kBADJ,CAEhB,QAASV,UAAU,CAACS,kBAFJ,CAdJ,CAkBhBE,kBAAkB,CAAE,CAChB,QAASX,UAAU,CAACY,cADJ,CAEhB,QAASZ,UAAU,CAACW,kBAFJ,CAlBJ,EAApB,CAuBA,GAAIT,YAAJ,CAAkB,CACdpF,cAAc,CAAC,eAAD,CAAd,CAAkC,CAC9B,QAASoF,YAAY,CAACW,SADQ,CAE9B,QAASX,YAAY,CAACY,kBAFQ,CAG9B3F,IAAI,CAAE+E,YAHwB,CAAlC,CAKApF,cAAc,CAAC,oBAAD,CAAd,CAAuCoF,YAAY,CAACY,kBAApD,CACH,CACD,GAAId,UAAU,CAACO,WAAX,GAA2B,CAAC,CAAhC,CAAmC,CAC/BzF,cAAc,CAAC,aAAD,CAAd,CAAgC,CAC5B,QAASkF,UAAU,CAACQ,WADQ,CAE5B,QAASR,UAAU,CAACO,WAFQ,CAAhC,CAIH,CALD,IAKO,CACHzF,cAAc,CAAC,aAAD,CAAd,CAAgCN,SAAhC,CACH,CACD,GAAIwF,UAAU,CAACS,kBAAX,GAAkC,CAAC,CAAvC,CAA0C,CACtC3F,cAAc,CAAC,oBAAD,CAAd,CAAuC,CACnC,QAASkF,UAAU,CAACU,kBADe,CAEnC,QAASV,UAAU,CAACS,kBAFe,CAAvC,CAIH,CALD,IAKO,CACH3F,cAAc,CAAC,oBAAD,CAAd,CAAuCN,SAAvC,CACH,CACD,GAAIwF,UAAU,CAACW,kBAAX,GAAkC,CAAC,CAAvC,CAA0C,CACtC7F,cAAc,CAAC,oBAAD,CAAd,CAAuC,CACnC,QAASkF,UAAU,CAACY,cADe,CAEnC,QAASZ,UAAU,CAACW,kBAFe,CAAvC,CAIH,CALD,IAKO,CACH7F,cAAc,CAAC,oBAAD,CAAd,CAAuCN,SAAvC,CACH,CACDxB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,8CACHA,UADG,EAEHQ,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAFT,MAGN4G,YAAY,CAAEA,YACd;AAJM,EADL,CAOL/D,SAAS,CAAE,IAPN,CAQLC,SAAS,CAAEA,SARN,CASLC,UAAU,CAAE,uBATP,CAULwC,kBAAkB,CAAE,CAChB;AACAgC,OAAO,CAAExI,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,cAAzB,CAAyC,cAAzC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAAnB,CAAgGiF,GAAhG,CAAoG,YAApG,CAFO,CAGhBuC,MAAM,CAAEzI,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,aAAzB,CAAwC,aAAxC,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,IAArE,CAAnB,CAA8FiF,GAA9F,CAAkG,YAAlG,CAHQ,CAIhBwC,kBAAkB,CAAE1I,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,oBAA/C,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAAnB,CAA4GiF,GAA5G,CAAgH,YAAhH,CAJJ,CAKhByC,aAAa,CAAE3I,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAnB,CAAwGiF,GAAxG,CAA4G,YAA5G,CALC,CAMhB0C,QAAQ,CAAE5I,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,eAAzB,CAA0C,WAA1C,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,IAArE,CAAnB,CAA8FiF,GAA9F,CAAkG,YAAlG,CANM,CAVf,CAkBL3D,cAAc,CAAdA,cAlBK,CAmBLG,YAAY,CAAZA,YAnBK,CAFJ,CAAD,CAAR,CAwBH,CA1FL,EA2FKpB,KA3FL,CA2FW,SAAAC,KAAK,CAAI,CACZ;AACAd,QAAQ,CAAC,CAACS,IAAI,CAAExB,cAAP,CAAwByB,OAAO,CAAE,CAACE,OAAO,CAAE,KAAV,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAnGL,EAoGH,CArID,IAqIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CApJD,CAqJH,CAtJM,CAwJP,MAAO,IAAMyE,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAC9E,SAAD,CAAY+E,iBAAZ,CAA+BtG,QAA/B,CAAyCE,YAAzC,CAAuDsE,qBAAvD,CAA8EjF,UAA9E,CAA0FvB,UAA1F,CAAyG,CAC3I,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAM6D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI4C,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACsF,KAA5D,EACA4B,qBAAqB,CAAC9B,eAAtB,GAA0CpF,iBAAiB,CAACqF,UADhE,CAC4E,CACxE1E,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAM2E,CAAAA,QAAQ,CAAG,CACbvF,KAAK,CAACmB,IAAN,CAAW,mCAAX,CAAgD,CAC5CyC,QAAQ,CAAEb,QADkC,CAE5CuG,sBAAsB,CAAED,iBAFoB,CAG5C3F,oBAAoB,CAAEpB,UAAU,CAACoB,oBAAX,CAAgCrB,KAHV,CAAhD,CADa,CAMbrC,KAAK,CAACmB,IAAN,CAAW,iCAAX,CAA8C,CAC1CyC,QAAQ,CAAEb,QADgC,CAA9C,CANa,CASb/C,KAAK,CAACmB,IAAN,CAAW,cAAX,CAA2B,CACvByC,QAAQ,CAAEb,QADa,CAA3B,CATa,CAYb/C,KAAK,CAACmB,IAAN,CAAW,gBAAX,CAA6B,CACzByC,QAAQ,CAAEb,QADe,CAA7B,CAZa,CAeb/C,KAAK,CAACmB,IAAN,CAAW,gCAAX,CAA6C,CACzC,WAAY4B,QAD6B,CAA7C,CAfa,CAAjB,CAmBArC,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMgI,CAAAA,eAAe,CAAGhI,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBgI,sBAAjB,CAAwC,CAAxC,CAAxB,CACA,GAAMC,CAAAA,gBAAgB,CAAGlI,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBkI,gCAA1C,CACA,GAAMC,CAAAA,eAAe,CAAGpI,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBoI,0BAAzC,CACA,GAAMC,CAAAA,aAAa,CAAGtI,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBsI,6BAAjB,EAAkDvI,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBsI,6BAAjB,CAA+ClD,MAA/C,CAAwD,CAA1G,CAA8GrF,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBsI,6BAAjB,CAA+C,CAA/C,CAA9G,CAAkK,EAAxL,CACA,GAAMhH,CAAAA,cAAc,gCACbyG,eADa,MAEhBQ,SAAS,CAAE,CACP,QAASR,eAAe,CAACS,SADlB,CAEP,QAAST,eAAe,CAACQ,SAFlB,CAFK,CAMhBE,kBAAkB,CAAE,CAChB,QAASV,eAAe,CAACW,cADT,CAEhB,QAASX,eAAe,CAACU,kBAFT,CANJ,CAUhBE,iBAAiB,CAAEZ,eAAe,CAACU,kBAVnB,CAWhBG,qBAAqB,CAAE,CACnB,QAASb,eAAe,CAACc,cADN,CAEnB,QAASd,eAAe,CAACa,qBAFN,CAXP,CAehBE,qBAAqB,CAAEf,eAAe,CAACe,qBAfvB,CAgBhBC,gBAAgB,CAAEhB,eAAe,CAACgB,gBAAhB,CAAmC,CAAnC,CAAuC,CACrD,QAAShB,eAAe,CAACiB,yBAD4B,CAErD,QAASjB,eAAe,CAACgB,gBAF4B,CAGrDpH,IAAI,CAAE,CACFqH,yBAAyB,CAAEjB,eAAe,CAACiB,yBADzC,CAEFD,gBAAgB,CAAEhB,eAAe,CAACgB,gBAFhC,CAGFE,uBAAuB,CAAElB,eAAe,CAACkB,uBAHvC,CAH+C,CAAvC,CAQd,EAxBY,EAApB,CA0BA,GAAI3H,cAAc,CAAC,gBAAD,CAAd,GAAqC,IAAzC,CAA+C,CAC3C,MAAOA,CAAAA,cAAc,CAAC,uBAAD,CAArB,CACH,CACD,GAAIA,cAAc,CAAC,uBAAD,CAAd,GAA4C,IAAhD,CAAsD,CAClD,MAAOA,CAAAA,cAAc,CAAC,uBAAD,CAArB,CACH,CACD,GAAIA,cAAc,CAAC,WAAD,CAAd,GAAgC,IAApC,CAA0C,CACtC,MAAOA,CAAAA,cAAc,CAAC,WAAD,CAArB,CACH,CACD,GAAI6G,eAAJ,CAAqB,CACjB7G,cAAc,CAAC,WAAD,CAAd,CAA8B6G,eAAe,CAACe,SAA9C,CACA5H,cAAc,CAAC,wBAAD,CAAd,CAA2C6G,eAAe,CAACgB,sBAA3D,CACH,CACD,GAAIlB,gBAAJ,CAAsB,CAClB3G,cAAc,CAAC,0BAAD,CAAd,CAA6C2G,gBAAgB,CAACmB,wBAA9D,CACA9H,cAAc,CAAC,iBAAD,CAAd,CAAoC2G,gBAAgB,CAACoB,eAArD,CACA/H,cAAc,CAAC,gBAAD,CAAd,CAAmC2G,gBAAgB,CAACqB,cAApD,CACAhI,cAAc,CAAC,YAAD,CAAd,CAA+B,CAC3B,QAAS2G,gBAAgB,CAACS,cADC,CAE3B,QAAST,gBAAgB,CAACsB,UAFC,CAA/B,CAIH,CACD,GAAIlB,aAAJ,CAAmB,CACf/G,cAAc,CAAC,2BAAD,CAAd,CAA8C+G,aAAa,CAACmB,yBAA5D,CACAlI,cAAc,CAAC,SAAD,CAAd,CAA4B+G,aAAa,CAACoB,OAA1C,CACAnI,cAAc,CAAC,SAAD,CAAd,CAA4B+G,aAAa,CAACqB,OAA1C,CACApI,cAAc,CAAC,OAAD,CAAd,CAA0B+G,aAAa,CAACsB,KAAxC,CACArI,cAAc,CAAC,OAAD,CAAd,CAA0B+G,aAAa,CAACuB,KAAxC,CACAtI,cAAc,CAAC,OAAD,CAAd,CAA0B+G,aAAa,CAACwB,KAAxC,CACAvI,cAAc,CAAC,OAAD,CAAd,CAA0B+G,aAAa,CAACyB,KAAxC,CACAxI,cAAc,CAAC,SAAD,CAAd,CAA4B+G,aAAa,CAAC0B,OAA1C,CACAzI,cAAc,CAAC,SAAD,CAAd,CAA4B+G,aAAa,CAAC2B,OAA1C,CACA1I,cAAc,CAAC,YAAD,CAAd,CAA+B+G,aAAa,CAAC4B,UAA7C,CACA3I,cAAc,CAAC,cAAD,CAAd,CAAiC+G,aAAa,CAAC6B,YAA/C,CACH,CACD,GAAMC,CAAAA,QAAQ,CAAGpL,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,YAAzB,CAAuC,gBAAvC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAApC,CACA,GAAMoK,CAAAA,OAAO,CAAGrL,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,WAAzB,CAAsC,WAAtC,CAAmD,KAAnD,CAA0D,KAA1D,CAAiE,IAAjE,CAAnC,CACA,GAAMqK,CAAAA,KAAK,CAAGF,QAAQ,CAAClF,GAAT,CAAa,YAAb,CAAd,CACA,GAAMqF,CAAAA,IAAI,CAAGF,OAAO,CAACnF,GAAR,CAAY,YAAZ,CAAb,CACA,GAAMsF,CAAAA,QAAQ,CAAGxC,eAAe,CAACU,kBAAhB,GAAuC9J,aAAa,CAAC6L,OAArD,CAA+D,KAA/D,CAAuE,IAAxF,CACAhL,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLuK,cAAc,CAAE,IADX,CAEL3H,SAAS,CAAEA,SAFN,CAGLC,UAAU,CAAE,eAHP,CAILwC,kBAAkB,CAAE,CAChB+E,IAAI,CAAJA,IADgB,CAEhBD,KAAK,CAALA,KAFgB,CAGhBK,WAAW,CAAE3L,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB2K,WAAjB,EAAgC,EAAjC,CAAqC,kBAArC,CAAyD,2BAAzD,CAAsF,KAAtF,CAA6F,KAA7F,CAAoG,IAApG,CAAnB,CAA6H1F,GAA7H,CAAiI,YAAjI,CAHG,CAIhBtG,aAAa,CAAEI,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAnB,CAAwGiF,GAAxG,CAA4G,YAA5G,CAJC,CAKhB2F,gBAAgB,CAAE7L,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,uBAAzB,CAAkD,gBAAlD,CAAoE,KAApE,CAA2E,KAA3E,CAAkF,IAAlF,CAAnB,CAA2GiF,GAA3G,CAA+G,YAA/G,CALF,CAMhB4F,iBAAiB,CAAEN,QANH,CAOhBO,QAAQ,CAAEP,QAPM,CAJf,CAaLQ,aAAa,CAAE,CACXV,KAAK,CAALA,KADW,CAEXW,WAAW,CAAEZ,OAAO,CAACnF,GAAR,CAAY,cAAZ,EAA8BmF,OAAO,CAACnF,GAAR,CAAY,cAAZ,CAA9B,CAA4D,EAF9D,CAbV,CAiBL3D,cAAc,CAAdA,cAjBK,CAkBLG,YAAY,CAAZA,YAlBK,CAmBLrB,OAAO,CAAE,KAnBJ,CAFJ,CAAD,CAAR,CAwBH,CAhGL,EAiGKC,KAjGL,CAiGW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CA7GL,EA8GH,CApID,IAoIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CAnJD,CAoJH,CArJM,CAuJP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAM8H,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAC3L,UAAD,CAAgB,CACjD,MAAO,UAACE,QAAD,CAAc,CACjBhB,KAAK,CAACmB,IAAN,CAAW,sCAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,gCACHD,UAAU,CAACC,UADR,EAEHQ,QAAQ,CAACC,IAFN,CADL,CAFJ,CAAD,CAAR,CASH,CAdL,EAeKK,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CArBL,EAsBH,CAvBD,CAwBH,CAzBM,CA2BP,MAAO,IAAMkL,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAC5L,UAAD,CAAaC,UAAb,CAAyBoB,SAAzB,CAAuC,CACvE,MAAO,UAACnB,QAAD,CAAc,iBACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,cAAgBL,UAAU,CAACwD,SAA3B,CAAuCxD,UAAU,CAACM,SAA7D,6CACKN,UAAU,CAAC6L,OADhB,CAC0B7L,UAAU,CAACgC,cAAX,CAA0B0C,sBAA1B,CAAiD,CAAjD,CAD1B,yCAEc1E,UAAU,CAACiC,QAFzB,gBAIKzB,IAJL,CAIU,SAAAC,QAAQ,CAAI,CAEdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACA,GAAIW,SAAS,CAACC,OAAd,CAAuB,CACnBD,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACH,CACD,GAAMK,CAAAA,gBAAgB,gCACf5B,UAAU,CAAC4B,gBADI,MAElBC,IAAI,CAAEH,SAFY,CAGlBI,MAAM,CAAEJ,SAHU,EAAtB,CAMAxB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,8CACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,MAGNe,YAAY,CAAEC,SAHR,EADL,CAMLE,gBAAgB,CAAhBA,gBANK,CAOLd,OAAO,CAAE,KAPJ,CAFJ,CAAD,CAAR,CAYH,CA5BL,EA6BKC,KA7BL,CA6BW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAACS,IAAI,CAAExB,cAAP,CAAwByB,OAAO,CAAE,CAACE,OAAO,CAAE,KAAV,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CApCL,EAqCH,CAvCD,CAwCH,CAzCM,CA2CP,MAAO,IAAM2K,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAC9L,UAAD,CAAgB,CAC/C,MAAO,UAACE,QAAD,CAAc,CAAE;AACnBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,6BAAX,CAA0C,CACtC0L,kBAAkB,CAAEC,QAAQ,CAAChM,UAAU,CAAC,oBAAD,CAAX,CADU,CAEtC8C,QAAQ,CAAE9C,UAAU,CAACiC,QAFiB,CAA1C,CAII;AACA;AALJ,CAMKzB,IANL,CAMU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,gCACHD,UAAU,CAACC,UADR,EAEHQ,QAAQ,CAACC,IAFN,CADL,CAKLiB,QAAQ,CAAED,SALL,CAMLZ,OAAO,CAAE,KANJ,CAFJ,CAAD,CAAR,CAWH,CAnBL,EAoBKC,KApBL,CAoBW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAACS,IAAI,CAAExB,cAAP,CAAwByB,OAAO,CAAE,CAACE,OAAO,CAAE,KAAV,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CA3BL,EA4BH,CA9BD,CA+BH,CAhCM,CAkCP,MAAO,IAAM8K,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACjM,UAAD,CAAaC,UAAb,CAAyBoB,SAAzB,CAAuC,CAC/E,MAAO,UAACnB,QAAD,CAAc,CAAE;AACnBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,iCAAX,CAA8C,CAC1CsG,uBAAuB,CAAE3G,UAAU,CAAC,yBAAD,CADO,CAE1C8C,QAAQ,CAAE9C,UAAU,CAACiC,QAFqB,CAA9C,CAII;AACA;AALJ,CAMKzB,IANL,CAMU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACA,GAAIW,SAAS,CAACC,OAAd,CACID,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACJrB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,8CACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,MAGNe,YAAY,CAAEC,SAHR,EADL,CAMLC,QAAQ,CAAE,CANL,CAOLuK,QAAQ,CAAE,CAPL,CAQLpL,OAAO,CAAE,KARJ,CAFJ,CAAD,CAAR,CAaH,CAvBL,EAwBKC,KAxBL,CAwBW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAACS,IAAI,CAAExB,cAAP,CAAwByB,OAAO,CAAE,CAACE,OAAO,CAAE,KAAV,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAsCP,MAAO,IAAMgL,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnM,UAAD,CAAaC,UAAb,CAAyBoB,SAAzB,CAAuC,CACnE,MAAO,UAACnB,QAAD,CAAc,CACjB,GAAIF,UAAU,CAACgC,cAAX,GAA8B,IAAlC,CAAwC,CACpC9C,KAAK,CAACmB,IAAN,CAAW,cAAgBL,UAAU,CAACwD,SAA3B,CAAuCxD,UAAU,CAACM,SAA7D,gCACON,UADP,wBAEKA,UAAU,CAAC6L,OAFhB,CAE0B7L,UAAU,CAACgC,cAFrC,IAIKxB,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACA,GAAIW,SAAS,CAACC,OAAd,CACID,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACJrB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,8CACHA,UADG,MAENmM,SAAS,CAAEpM,UAAU,CAACqM,SAFhB,CAGNC,QAAQ,CAAEtM,UAAU,CAACuM,QAHf,CAINC,UAAU,CAAExM,UAAU,CAACwM,UAJjB,EAKH/L,QAAQ,CAACC,IALN,MAMNwB,YAAY,CAAElC,UAAU,CAACgC,cANnB,CAONP,YAAY,CAAEC,SAPR,EADL,CAWLE,gBAAgB,gCACT5B,UAAU,CAAC4B,gBADF,MAEZC,IAAI,CAAEH,SAFM,CAGZI,MAAM,CAAEJ,SAHI,EAXX,CAFJ,CAAD,CAAR,CAoBH,CA5BL,EA6BKX,KA7BL,CA6BW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAnCL,EAoCH,CArCD,IAqCO,CACHjB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,gCACHA,UADG,MAENiC,YAAY,CAAElC,UAAU,CAACgC,cAFnB,CAGNyK,sBAAsB,CAAE,EAHlB,CAINjI,qBAAqB,CAAE,EAJjB,CAKN4B,aAAa,CAAE,EALT,CAMNsC,sBAAsB,CAAE,EANlB,CAONM,6BAA6B,CAAE,EAPzB,CAQN0D,oBAAoB,CAAE,EARhB,CASN9D,gCAAgC,CAAE,EAT5B,CAUN+D,yBAAyB,CAAE,EAVrB,CAWN7D,0BAA0B,CAAE,EAXtB,CAYNsD,SAAS,CAAEpM,UAAU,CAACqM,SAZhB,CAaNC,QAAQ,CAAEtM,UAAU,CAACuM,QAbf,CAcNjF,YAAY,CAAE,EAdR,CAeNiB,iBAAiB,CAAE,EAfb,CAgBNqE,iBAAiB,CAAE,EAhBb,CAiBNC,6BAA6B,CAAE,EAjBzB,CAkBNC,iBAAiB,CAAEpL,SAlBb,CAmBNqL,WAAW,CAAC,EAnBN,EADL,CAFJ,CAAD,CAAR,CA0BH,CACJ,CAlED,CAmEH,CApEM,CAsEP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAChN,UAAD,CAAaiG,kBAAb,CAAoC,CAClE,MAAO,UAAC/F,QAAD,CAAc,CACjBhB,KAAK,CAACmB,IAAN,CAAW,oCAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAV,UAAU,CAACgC,cAAX,CAA0BgF,SAA1B,CAAsC,EAAtC,CACA9G,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLoB,cAAc,CAAEhC,UAAU,CAACgC,cADtB,CAELiE,kBAAkB,gCACXA,kBADW,EAEXxF,QAAQ,CAACC,IAFE,CAFb,CAFJ,CAAD,CAAR,CAUH,CAhBL,EAiBKK,KAjBL,CAiBW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAvBL,EAwBH,CAzBD,CA0BH,CA3BM,CA6BP,MAAO,IAAM8L,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACjN,UAAD,CAAaC,UAAb,CAAyBoB,SAAzB,CAAuC,CAC1E,MAAO,UAACnB,QAAD,CAAc,CACjBhB,KAAK,CAACmB,IAAN,CAAW,iBAAmBL,UAAU,CAACM,SAAzC,kBACON,UAAU,CAACO,SADlB,GAGKC,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAIY,SAAS,CAACC,OAAd,CACID,SAAS,CAACC,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACJrB,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,8CACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,MAGNe,YAAY,CAAEC,SAHR,EADL,CAML+B,UAAU,CAAEzD,UAAU,CAACyD,UANlB,CAFJ,CAAD,CAAR,CAWH,CAjBL,EAkBK1C,KAlBL,CAkBW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAxBL,EAyBH,CA1BD,CA2BH,CA5BM,CA8BP,MAAO,IAAM+L,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAClN,UAAD,CAAgB,CACxC,MAAO,UAACE,QAAD,CAAc,CACjB,GAAMD,CAAAA,UAAU,CAAGD,UAAU,CAACC,UAA9B,CACA,GAAM8D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAI7D,UAAU,CAAC0E,sBAAX,CAAkCC,eAAlC,GAAsDpF,iBAAiB,CAACsF,KAAxE,EACA7E,UAAU,CAAC0E,sBAAX,CAAkCC,eAAlC,GAAsDpF,iBAAiB,CAACqF,UAD5E,CACwF,CACpF,GAAIH,CAAAA,QAAQ,CAAG,CAACvF,KAAK,CAACmB,IAAN,CAAW,2BAAX,CAAwC,CACpDyC,QAAQ,CAAE9C,UAAU,CAACiC,QAD+B,CAAxC,CAAD,CAGf/C,KAAK,CAACmB,IAAN,CAAW,kCAAX,CAA+C,CAC3CyC,QAAQ,CAAE9C,UAAU,CAACiC,QADsB,CAE3CkL,iBAAiB,CAAEnN,UAAU,CAACgC,cAFa,CAG3CY,oBAAoB,CAAE5C,UAAU,CAACwB,UAAX,CAAsBoB,oBAAtB,CAA2CrB,KAHtB,CAA/C,CAHe,CAAf,CASA3B,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAM2M,CAAAA,UAAU,CAAG3M,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB2M,UAApC,CACA,GAAMC,CAAAA,WAAW,CAAGF,UAAU,CAACtL,MAAX,CAAkB,SAAAO,IAAI,QAAIA,CAAAA,IAAI,CAACkL,YAAL,GAAsBhO,iBAAiB,CAACgD,GAA5C,EAAtB,CAApB,CACA,GAAM2E,CAAAA,UAAU,CAAGzG,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA/B,CACA,GAAI8M,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIvG,UAAU,CAACwG,mBAAX,GAAmCtO,cAAc,CAACuO,IAAtD,CAA4D,CACxDH,SAAS,CAAG,CACR,QAAStG,UAAU,CAAC0G,SADZ,CAER,QAAS1G,UAAU,CAACsG,SAFZ,CAAZ,CAIAC,IAAI,CAAG,CACHI,aAAa,CAAE3G,UAAU,CAACa,SADvB,CAEH+F,gBAAgB,CAAE5G,UAAU,CAAC6G,YAF1B,CAGHC,kBAAkB,CAAE9G,UAAU,CAAC8C,cAH5B,CAIHiE,SAAS,CAAE,EAJR,CAKHC,SAAS,CAAE,CALR,CAMHlE,cAAc,CAAE,CANb,CAOHjC,SAAS,CAAE,EAPR,CAAP,CAUH,CAfD,IAeO,CACHyF,SAAS,CAAGF,WAAW,CAACxH,MAAZ,CAAqB,CAArB,CAAyB,CACjC,QAASwH,WAAW,CAAC,CAAD,CAAX,CAAeM,SADS,CAEjC,QAASN,WAAW,CAAC,CAAD,CAAX,CAAeE,SAFS,CAAzB,CAGR,EAHJ,CAKAC,IAAI,CAAG,CACHI,aAAa,CAAE,EADZ,CAEHC,gBAAgB,CAAE,EAFf,CAGHC,YAAY,CAAE7G,UAAU,CAAC6G,YAHtB,CAIHC,kBAAkB,CAAE,CAJjB,CAKHC,SAAS,CAAE/G,UAAU,CAAC+G,SALnB,CAMHC,SAAS,CAAEhH,UAAU,CAACgH,SANnB,CAOHlE,cAAc,CAAE9C,UAAU,CAAC8C,cAPxB,CAQHjC,SAAS,CAAEb,UAAU,CAACa,SARnB,CAAP,CAUH,CACD,GAAM/F,CAAAA,cAAc,gCAEbyL,IAFa,MAGhBU,gBAAgB,CAAEjH,UAAU,CAACiH,gBAHb,CAIhBC,aAAa,CAAElH,UAAU,CAACkH,aAJV,CAKhBC,SAAS,CAAEnH,UAAU,CAACmH,SALN,CAMhBX,mBAAmB,CAAExG,UAAU,CAACwG,mBANhB,CAOhBF,SAAS,CAATA,SACA;AARgB,EAApB,CAUAtN,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,cAHP,CAIL6K,SAAS,CAAEC,MAAM,CAACC,MAAP,CAActH,UAAd,EAA0BpB,MAA1B,CAAmC,CAAnC,EAAwCoB,UAAU,CAACwG,mBAAX,GAAmCtO,cAAc,CAACqP,GAA1F,CAAgGvH,UAAhG,CAA6G,EAJnH,CAKLlF,cAAc,CAAdA,cALK,CAMLG,YAAY,CAAEnC,UAAU,CAACmC,YANpB,CAFJ,CAAD,CAAR,CAWH,CA5DL,EA6DKpB,KA7DL,CA6DW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CAnEL,EAoEH,CA/ED,IA+EO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CA/FD,CAgGH,CAjGM,CAmGP,MAAO,IAAM6K,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAClL,SAAD,CAAYmL,SAAZ,CAAuB1M,QAAvB,CAAiCE,YAAjC,CAA+CyM,YAA/C,CAA6D3O,UAA7D,CAA4E,CAC/G,MAAO,UAACC,QAAD,CAAc,CACjB,GAAM6D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAMa,CAAAA,sBAAsB,CAAGkK,YAAY,CAAClK,sBAA5C,CACA,GAAIA,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACsF,KAA7D,EACAH,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACqF,UADjE,CAC6E,CACzE1E,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAM2E,CAAAA,QAAQ,CAAG,CACbvF,KAAK,CAACmB,IAAN,CAAW,gBAAX,CAA6B,CACzB,WAAY4B,QADa,CAA7B,CADa,CAAjB,CAKA,GAAIuB,SAAS,GAAK,QAAlB,CAA4B,CACxBiB,QAAQ,CAACpB,IAAT,CAAcnE,KAAK,CAACmB,IAAN,CAAW,4CAAX,CAAyD,CACnEwO,gCAAgC,CAAEF,SADiC,CAEnE,WAAY1M,QAFuD,CAGnEyC,sBAAsB,CAAtBA,sBAHmE,CAAzD,CAAd,EAMAD,QAAQ,CAACpB,IAAT,CAAcnE,KAAK,CAACmB,IAAN,CAAW,oDAAX,CAAiE,CAC3EwO,gCAAgC,CAAEF,SADyC,CAE3E,WAAY1M,QAF+D,CAG3EyC,sBAAsB,CAAtBA,sBAH2E,CAAjE,CAAd,EAKH,CACD9E,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIuB,CAAAA,cAAc,CAAG,EAArB,CACA,GAAI8M,CAAAA,sBAAsB,CAAG,EAA7B,CACA,GAAIC,CAAAA,mBAAmB,CAAC,EAAxB,CACA,GAAMlE,CAAAA,QAAQ,CAAGpL,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,YAAzB,CAAuC,gBAAvC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAApC,CACA,GAAMqK,CAAAA,KAAK,CAAGF,QAAQ,CAAClF,GAAT,CAAa,YAAb,CAAd,CACA,GAAInC,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAMwL,CAAAA,eAAe,CAAGvO,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAApC,CACAsB,cAAc,CAAG,CACb8H,wBAAwB,CAAE6E,SAAS,CAAC,0BAAD,CADtB,CAEbM,2BAA2B,CAAEN,SAAS,CAAC,6BAAD,CAFzB,CAGb1E,UAAU,CAAE,CACR,QAAS+E,eAAe,CAAC,gBAAD,CADhB,CAER,QAASA,eAAe,CAAC,YAAD,CAFhB,CAHC,CAObjF,eAAe,CAAEiF,eAAe,CAAC,iBAAD,CAPnB,CAQb;AACAE,kBAAkB,CAAEF,eAAe,CAAC,oBAAD,CATtB,CAUbG,mBAAmB,CAAEH,eAAe,CAAC,qBAAD,CAVvB,CAWbI,qBAAqB,CAAEJ,eAAe,CAAC,uBAAD,CAXzB,CAYbK,mBAAmB,CAAEL,eAAe,CAAC,qBAAD,CAZvB,CAabM,aAAa,CAAEN,eAAe,CAAC,eAAD,CAbjB,CAAjB,CAgBAF,sBAAsB,CAACrO,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAnC,CACH,CAnBD,IAmBO,CACHsB,cAAc,CAAG,CACbiI,UAAU,CAAEY,QAAQ,CAAClF,GAAT,CAAa,cAAb,CADC,CAEbyJ,qBAAqB,CAAC,CAFT,CAGbC,mBAAmB,CAAC,CACpB;AACA;AACA;AACA;AAPa,CAAjB,CAUH,CACDnP,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLuK,cAAc,CAAE,IADX,CAELoE,gBAAgB,CAAE,KAFb,CAGL/L,SAAS,CAAEA,SAHN,CAILC,UAAU,CAAE,iBAJP,CAKLgI,aAAa,CAAE,CACXV,KAAK,CAALA,KADW,CAEXyE,eAAe,CAAE,KAFN,CALV,CASLxN,cAAc,CAAdA,cATK,CAULG,YAAY,CAAZA,YAVK,CAWLrB,OAAO,CAAE,KAXJ,CAYLgO,sBAAsB,CAAtBA,sBAZK,CAaLC,mBAAmB,CAAnBA,mBAbK,CAFJ,CAAD,CAAR,CAkBH,CAxDL,EAyDKhO,KAzDL,CAyDW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CArEL,EAsEH,CA3FD,IA2FO,CACHzB,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CA3GD,CA4GH,CA7GM,CAmHP,MAAO,IAAM4L,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACjM,SAAD,CAAYmL,SAAZ,CAAuB1M,QAAvB,CAAiCE,YAAjC,CAA+CyM,YAA/C,CAA6D3O,UAA7D,CAA4E,CAC1G,MAAO,UAACC,QAAD,CAAc,CACjBhB,KAAK,CAACmB,IAAN,CAAW,gDAAX,CAA6D,CACzDwO,gCAAgC,CAAEF,SADuB,CAEzD,WAAY1M,QAF6C,CAA7D,EAIKzB,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACd,GAAIiP,CAAAA,qBAAqB,CAAG,EAA5B,CACAxP,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAGLyB,OAAO,CAAE,CACL2C,SAAS,CAAE,IADN,CAELC,SAAS,CAAE,MAFN,CAGLC,UAAU,CAAE,mBAHP,CAILiM,qBAAqB,CAACjP,QAAQ,CAACC,IAJ1B,CAKLT,UAAU,gCACHA,UADG,MAENyP,qBAAqB,CAACjP,QAAQ,CAACC,IAFzB,CAGNe,YAAY,CAAEC,SAHR,EAKV;AAVK,CAHJ,CAAD,CAAR,CAgBH,CAtBL,EAuBKX,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAChEhC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHzB,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CACJ,CA7BL,EA8BH,CA/BD,CAgCH,CAjCM,CAuCP,MAAO,IAAMwO,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACnM,SAAD,CAAYmL,SAAZ,CAAuB1M,QAAvB,CAAiC2M,YAAjC,CAA+C3O,UAA/C,CAA2DkC,YAA3D,CAA4E,CAC9G,MAAO,UAACjC,QAAD,CAAc,CACjB,GAAM6D,CAAAA,wBAAwB,CAAG9D,UAAU,CAAC,qBAAD,CAAV,CAAkC+D,SAAlC,CAC7B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,sBAAD,CAAD,GAA8BhE,UAAU,CAACiC,YAAX,CAAwB,sBAAxB,CAAlC,EAD4B,CAAjC,CAGA,GAAMgC,CAAAA,qBAAqB,CAAGjE,UAAU,CAAC,qBAAD,CAAV,CAAkC8D,wBAAlC,EAA4DI,kBAA1F,CACA,GAAID,qBAAqB,GAAK3E,iBAAiB,CAAC6E,OAAhD,CAAyD,CACrDnF,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAAEC,EAAE,CAAE,+BAAN,CAAnB,CAAX,EACH,CAFD,IAGK,CACD,GAAMa,CAAAA,sBAAsB,CAAGkK,YAAY,CAAClK,sBAA5C,CACA,GAAIA,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACsF,KAA7D,EACAH,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACqF,UADjE,CAC6E,CACzE1E,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAM2E,CAAAA,QAAQ,CAAG,CACbvF,KAAK,CAACmB,IAAN,CAAW,mBAAX,CAAgC,CAC5B,WAAY4B,QADgB,CAAhC,CADa,CAAjB,CAKA,GAAIuB,SAAS,GAAK,QAAlB,CAA4B,CACxBiB,QAAQ,CAACpB,IAAT,CAAcnE,KAAK,CAACmB,IAAN,CAAW,qCAAX,CAAkD,CAC5DwO,gCAAgC,CAAEF,SAD0B,CAE5D,WAAY1M,QAFgD,CAG5DyC,sBAAsB,CAAtBA,sBAH4D,CAAlD,CAAd,EAKH,CACD9E,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIuB,CAAAA,cAAc,CAAG,EAArB,CACA,GAAM6I,CAAAA,QAAQ,CAAGpL,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBkP,UAAjB,EAA+B,EAAhC,CAAoC,aAApC,CAAmD,aAAnD,CAAkE,KAAlE,CAAyE,KAAzE,CAAgF,IAAhF,CAApC,CACA,GAAM7E,CAAAA,KAAK,CAAGF,QAAQ,CAAClF,GAAT,CAAa,YAAb,CAAd,CACA,GAAInC,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAMwL,CAAAA,eAAe,CAAGvO,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAApC,CACAsB,cAAc,CAAG,CACb6N,4BAA4B,CAAElB,SAAS,CAAC,8BAAD,CAD1B,CAEbM,2BAA2B,CAAEN,SAAS,CAAC,6BAAD,CAFzB,CAGbmB,QAAQ,CAAEnB,SAAS,CAAC,UAAD,CAHN,CAIboB,MAAM,CAAEpB,SAAS,CAAC,QAAD,CAJJ,CAKbqB,WAAW,CAAE,CACT,QAAShB,eAAe,CAAC,aAAD,CADf,CAET,QAASA,eAAe,CAAC,aAAD,CAFf,CALA,CASbiB,MAAM,CAAEjB,eAAe,CAAC,QAAD,CATV,CAUbkB,MAAM,CAAElB,eAAe,CAAC,QAAD,CAVV,CAWbmB,KAAK,CAAEnB,eAAe,CAAC,OAAD,CAXT,CAYboB,KAAK,CAAEpB,eAAe,CAAC,OAAD,CAZT,CAabpE,YAAY,CAAEoE,eAAe,CAAC,cAAD,CAbhB,CAAjB,CAgBH,CAlBD,IAkBO,CACHhN,cAAc,CAAG,CACbgO,WAAW,CAAEnF,QAAQ,CAAClF,GAAT,CAAa,cAAb,CACb;AACA;AACA;AACA;AALa,CAAjB,CAOH,CACDzF,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLuK,cAAc,CAAE,IADX,CAELoE,gBAAgB,CAAE,KAFb,CAGL/L,SAAS,CAAEA,SAHN,CAILC,UAAU,CAAE,kBAJP,CAKLgI,aAAa,CAAE,CACXV,KAAK,CAALA,KADW,CAEXyE,eAAe,CAAE,KAFN,CALV,CASLxN,cAAc,CAAdA,cATK,CAULG,YAAY,CAAZA,YAVK,CAWLrB,OAAO,CAAE,KAXJ,CAFJ,CAAD,CAAR,CAgBH,CAhDL,EAiDKC,KAjDL,CAiDW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CA7DL,EA8DH,CA7ED,IA6EO,CACHzB,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CACJ,CA7FD,CA8FH,CA/FM,CAmGP,MAAO,IAAMwM,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACrQ,UAAD,CAAaiC,QAAb,CAA0B,CAC5D,MAAO,UAAC/B,QAAD,CAAc,CACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,wBAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdP,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL0P,iBAAiB,CAAE,IADd,CAELC,kBAAkB,CAAE,CAChBC,YAAY,CAAE/P,QAAQ,CAACC,IADP,CAFf,CAKLI,OAAO,CAAE,KALJ,CAMLkB,cAAc,CAAE,EANX,CAFJ,CAAD,CAAR,CAWH,CAfL,EAgBKjB,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CA5BL,EA6BH,CA/BD,CAgCH,CAjCM,CAoCP,MAAO,IAAM+P,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACzQ,UAAD,CAAgB,CAC/C,MAAO,UAACE,QAAD,CAAc,CACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,8BAAX,gCACOL,UADP,MAEI4C,oBAAoB,CAAE5C,UAAU,CAACwB,UAAX,CAAsBoB,oBAAtB,CAA2CrB,KAFrE,IAIKf,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACdP,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAEL4P,SAAS,CAAE,KAFN,CAGLnN,SAAS,CAAE,KAHN,CAILoN,gBAAgB,CAAE,KAJb,CAFJ,CAAD,CAAR,CASAC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,YAAzC,CAAsD,MAAtD,CAA8DrQ,QAAQ,CAACC,IAAT,CAAcqQ,QAA5E,EACAH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCG,KAAzC,GACH,CAhBL,EAgBOjQ,KAhBP,CAgBa,SAAAC,KAAK,CAAI,CACdd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CA5BL,EA6BH,CA/BD,CAkCH,CAnCM,CAsCP,MAAO,IAAMuQ,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACjR,UAAD,CAAaC,UAAb,CAA4B,CAC3D,MAAO,UAACC,QAAD,CAAc,CACjBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAZ,KAAK,CAACmB,IAAN,CAAW,sBAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CAEd;AACAd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAT,UAAU,gCACHA,UADG,EAEHQ,QAAQ,CAACC,IAFN,CAAV,CAKAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,CAAVA,UADK,CAELa,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAOH,CAnBL,EAmBOC,KAnBP,CAmBa,SAAAC,KAAK,CAAI,CACdd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAqCP,MAAO,IAAMwQ,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACzN,UAAD,CAAaD,SAAb,CAAwBvB,QAAxB,CAAkCE,YAAlC,CAAgDH,cAAhD,CAAgE/B,UAAhE,CAA4EkR,cAA5E,CAA+F,CACjI,MAAO,UAAUjR,QAAV,CAAoB,CACvB,GAAID,UAAU,CAACiC,YAAX,GAA4BR,SAA5B,EAAyCzB,UAAU,CAACiC,YAAX,GAA4B,IAArE,EAA6EjC,UAAU,CAACuE,qBAAX,GAAmC,IAApH,CAA0H,CACrH,GAAME,CAAAA,sBAAsB,CAAGzE,UAAU,CAACuE,qBAA1C,CACA,GAAIE,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACsF,KAA7D,EACAH,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACqF,UADjE,CAC6E,CAC9E,GAAIH,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAM2M,CAAAA,eAAe,CAAGlS,KAAK,CAACmB,IAAN,CAAW,kCAAX,CAA+C,CAAE,WAAY4B,QAAd,CAA/C,CAAxB,CACA,GAAMoP,CAAAA,aAAa,CAAGnS,KAAK,CAACmB,IAAN,CAAW,wCAAX,CAAqD,CAAE,WAAY4B,QAAd,CAAwBW,oBAAoB,CAAE3C,UAAU,CAACiC,YAAX,CAAwBU,oBAAtE,CAArD,CAAtB,CAEA6B,QAAQ,CAAG,CAAC2M,eAAD,CAAkBC,aAAlB,CAAX,CAEAnR,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd6Q,OAAO,CAACC,GAAR,CAAYpP,YAAZ,EACA,GAAIlC,UAAU,CAACqH,YAAX,EAA2BrH,UAAU,CAACqH,YAAX,GAA4B5F,SAA3D,CAAsE,CAElE,GAAIjB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,GAAqB,SAAzB,CAAoC,CAEhC,GAAM8Q,CAAAA,eAAe,CAAG/R,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,mBAAzB,CACvC,mBADuC,CAClBgB,SADkB,CACPA,SADO,CACI,KADJ,CAA3C,CAGA,GAAM+P,CAAAA,YAAY,CAAGD,eAAe,CAAC7L,GAAhB,CAAoB,YAApB,CAArB,CACA,GAAM+L,CAAAA,mBAAmB,CAAGF,eAAe,CAAC7L,GAAhB,CAAoB,cAApB,CAA5B,CAEA3D,cAAc,CAAC,mBAAD,CAAd,CAAsC0P,mBAAtC,CACA,GAAI1P,cAAc,CAAC,mBAAD,CAAd,GAAwCN,SAA5C,CAAuD,iBACnD,GAAInB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIP,CAAAA,UAAU,eAAKwD,SAAS,CAAEA,SAAhB,CAA2BxB,cAAc,CAAEA,cAA3C,CAA2DyP,YAAY,CAAEA,YAAzE,CAAuFlR,SAAS,CAAE,CAAEoR,iBAAiB,CAAED,mBAAmB,CAACnQ,KAAzC,CAAlG,6CAAkKkQ,YAAlK,2CAA4LxR,UAA5L,2CAAoNwD,UAApN,6CAA+NtB,YAA/N,cAAd,CACAjC,QAAQ,CAAC0R,oCAAoC,CAAC5R,UAAD,CAArC,CAAR,CAEH,CALD,IAKO,CACHE,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL6Q,YAAY,CAAEA,YADT,CAELI,YAAY,CAAEnQ,SAFT,CAGLoQ,oBAAoB,CAAEpQ,SAHjB,CAILqQ,MAAM,CAAE,IAJH,CAKLvO,SAAS,CAAEA,SALN,CAMLC,UAAU,CAAEA,UANP,CAOL0H,cAAc,CAAE,IAPX,CAQLhJ,YAAY,CAAEA,YART,CASLrB,OAAO,CAAE,KATJ,CAFJ,CAAD,CAAR,CAcH,CACJ,CA9BD,IA+BK,CACD7B,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAEpD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IADU,CAAnB,CAAX,EAGAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL4C,SAAS,CAAEA,SADN,CAELC,UAAU,CAAEA,UAFP,CAGLtB,YAAY,CAAEA,YAHT,CAILrB,OAAO,CAAE,KAJJ,CAFJ,CAAD,CAAR,CAUH,CACJ,CAhDD,IAiDK,CAED7B,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,mBADsB,CAAnB,CAAX,EAGA3D,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL4C,SAAS,CAAEA,SADN,CAELC,UAAU,CAAEA,UAFP,CAGLtB,YAAY,CAAEA,YAHT,CAILrB,OAAO,CAAE,KAJJ,CAFJ,CAAD,CAAR,CAUH,CACJ,CApEL,EAqEKC,KArEL,CAqEW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYnB,IAAI,CAAC+D,aAAL,CAAmB,CAC3BC,EAAE,CAAE7C,KAAK,CAACG,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE7C,KAAK,CAACP,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CArFL,EAwFC,CAjGA,IAkGI,CACDzB,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CAzGD,IAyGO,CACH5E,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,yBADsB,CAAnB,CAAX,EAGH,CACJ,CA/GD,CAgHH,CAjHM,CAkHP,MAAO,SAAS+N,CAAAA,oCAAT,CAA8C5R,UAA9C,CAA0D,CAC7D,MAAO,UAAUE,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOZ,CAAAA,KAAK,CAACmB,IAAN,CAAW,2BAAX,CAAwC,CAAEsR,iBAAiB,CAAE3R,UAAU,CAACO,SAAX,CAAqBoR,iBAA1C,CAAxC,EACFnR,IADE,CACG,SAAAC,QAAQ,CAAI,CACd,GAAIuB,CAAAA,cAAc,CAAG,EAArB,CACAA,cAAc,CAAGhC,UAAU,CAACgC,cAA5B,CAEA,GAAMgQ,CAAAA,mBAAmB,CAAGvS,mBAAmB,CAACgB,QAAQ,CAACC,IAAT,CAAcuR,oBAAd,EAAsC,EAAvC,CAA2C,kBAA3C,CAC3C,kBAD2C,CACvBvQ,SADuB,CACZA,SADY,CACD,KADC,CAA/C,CAGA,GAAMoQ,CAAAA,oBAAoB,CAAGE,mBAAmB,CAACrM,GAApB,CAAwB,YAAxB,CAA7B,CACA,GAAMuM,CAAAA,uBAAuB,CAAGF,mBAAmB,CAACrM,GAApB,CAAwB,cAAxB,CAAhC,CACA3D,cAAc,CAAC,kBAAD,CAAd,CAAqCkQ,uBAArC,CACA,GAAIjS,CAAAA,UAAU,gCAAQD,UAAU,CAACC,UAAnB,EAAkCQ,QAAQ,CAACC,IAA3C,CAAd,CACA,GAAID,QAAQ,CAACC,IAAT,CAAcuR,oBAAd,CAAmCnM,MAAnC,GAA8C,CAAlD,CAAqD,CACjD,GAAI9D,cAAc,CAAC,kBAAD,CAAlB,CAAwC,CACpC,MAAOA,CAAAA,cAAc,CAAC,kBAAD,CAArB,CAEH,CACD,GAAIA,cAAc,CAAC,eAAD,CAAlB,CAAqC,CACjC,MAAOA,CAAAA,cAAc,CAAC,eAAD,CAArB,CAEH,CACJ,CACD,GAAI6P,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,oBAAoB,CAAChM,MAArB,GAAgC,CAApC,CAAuC,CACnC+L,YAAY,CAAGA,YAAf,CACA7R,UAAU,gCACHA,UADG,MACSmS,WAAW,CAAE1R,QADtB,CACgCqR,oBAAoB,CAAEA,oBADtD,CAC4E9P,cAAc,CAAEA,cAD5F,CAENzB,SAAS,CAAE,CACP;AACAoR,iBAAiB,CAAE3R,UAAU,CAACO,SAAX,CAAqBoR,iBAFjC,CAFL,EAAV,CAOAzR,QAAQ,CAACkS,gCAAgC,CAACpS,UAAD,CAAjC,CAAR,CACH,CAVD,IAYK,CACDE,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLuK,cAAc,CAAE,IADX,CAEL1H,UAAU,CAAEzD,UAAU,CAACyD,UAFlB,CAGLxD,UAAU,CAAVA,UAHK,CAGOa,OAAO,CAAE,KAHhB,CAILgR,oBAAoB,CAAEA,oBAJjB,CAKLL,YAAY,CAAEzR,UAAU,CAACyR,YALpB,CAMLI,YAAY,CAAEA,YANT,CAOL7P,cAAc,CAAEA,cAPX,CAQLwB,SAAS,CAAExD,UAAU,CAACwD,SARjB,CASLrB,YAAY,CAACnC,UAAU,CAACmC,YATnB,CAFJ,CAAD,CAAR,CAcH,CAEJ,CApDE,EAqDFpB,KArDE,CAqDI,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAAES,IAAI,CAAExB,cAAR,CAAwByB,OAAO,CAAE,CAAEE,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYnB,IAAI,CAAC+D,aAAL,CAAmB,CAC3BC,EAAE,CAAE7C,KAAK,CAACG,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE7C,KAAK,CAACP,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CAhEE,CAAP,CAiEH,CAnED,CAoEH,CACD,MAAO,SAAS0R,CAAAA,gCAAT,CAA0CpS,UAA1C,CAAsD,CACzD,MAAO,UAAUE,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOZ,CAAAA,KAAK,CAACmB,IAAN,CAAW,gCAAX,CAA6C,CAChDsR,iBAAiB,CAAE3R,UAAU,CAACO,SAAX,CAAqBoR,iBADQ,CACWU,gBAAgB,CAAErS,UAAU,CAACO,SAAX,CAAqB8R,gBAArB,GAA0C3Q,SAA1C,CACvE1B,UAAU,CAACO,SAAX,CAAqB8R,gBADkD,CAC/BrS,UAAU,CAACmS,WAAX,CAAuBzR,IAAvB,CAA4BuR,oBAA5B,CAAiD,CAAjD,EAAoDI,gBAFlD,CAGhDtG,kBAAkB,CAAE/L,UAAU,CAACC,UAAX,CAAsBqH,YAAtB,CAAmCyE,kBAHP,CAA7C,EAKFvL,IALE,CAKG,SAAAC,QAAQ,CAAI,CAEd,GAAIuB,CAAAA,cAAc,CAAGhC,UAAU,CAACgC,cAAhC,CAEA,GAAMsQ,CAAAA,WAAW,CAAG9S,uBAAuB,CAACiB,QAAQ,CAACC,IAAT,CAAc6R,aAAd,EAA+B,EAAhC,CAAoC,eAApC,CACvC,eADuC,CACtB7Q,SADsB,CACXA,SADW,CACA,KADA,CAA3C,CAGA,GAAMmQ,CAAAA,YAAY,CAAGS,WAAW,CAAC3M,GAAZ,CAAgB,YAAhB,CAArB,CAEA,GAAIlF,QAAQ,CAACC,IAAT,CAAc6R,aAAd,CAA4BzM,MAA5B,GAAuC,CAA3C,CAA8C,CAC1C,MAAO9D,CAAAA,cAAc,CAAC,eAAD,CAArB,CACH,CACD,GAAI/B,CAAAA,UAAU,gCAAQD,UAAU,CAACC,UAAnB,EAAkCQ,QAAQ,CAACC,IAA3C,CAAd,CACA,GAAIV,UAAU,CAAC8R,oBAAf,CAAqC,CACjC5R,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLkR,oBAAoB,CAAE9R,UAAU,CAAC8R,oBAD5B,CAEL7R,UAAU,CAAVA,UAFK,CAEOa,OAAO,CAAE,KAFhB,CAGL+Q,YAAY,CAAEA,YAHT,CAIL1G,cAAc,CAAE,IAJX,CAKL1H,UAAU,CAAEzD,UAAU,CAACyD,UALlB,CAMLzB,cAAc,CAAEhC,UAAU,CAACgC,cANtB,CAOLyP,YAAY,CAAEzR,UAAU,CAACyR,YAPpB,CAQLjO,SAAS,CAAExD,UAAU,CAACwD,SARjB,CASLrB,YAAY,CAACnC,UAAU,CAACmC,YATnB,CAFJ,CAAD,CAAR,CAiBH,CAlBD,IAmBK,CACDjC,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,CAAVA,UADK,CACOa,OAAO,CAAE,KADhB,CAEL+Q,YAAY,CAAEA,YAFT,CAGL1G,cAAc,CAAE,IAHX,CAFJ,CAAD,CAAR,CAUH,CAEJ,CAlDE,EAmDFpK,KAnDE,CAmDI,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAAES,IAAI,CAAExB,cAAR,CAAwByB,OAAO,CAAE,CAAEE,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYnB,IAAI,CAAC+D,aAAL,CAAmB,CAC3BC,EAAE,CAAE7C,KAAK,CAACG,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE7C,KAAK,CAACP,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CA9DE,CAAP,CA+DH,CAjED,CAkEH,CAED,MAAO,IAAM8R,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACxS,UAAD,CAAgB,CAChD,MAAO,UAACE,QAAD,CAAc,CACjBhB,KAAK,CAACmB,IAAN,CAAW,qCAAX,kBACOL,UADP,GAGKQ,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdd,QAAQ,CAACc,QAAQ,CAACC,IAAV,CAAR,CACAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLX,UAAU,gCACHD,UAAU,CAACC,UADR,EAEHQ,QAAQ,CAACC,IAFN,CADL,CAFJ,CAAD,CAAR,CASH,CAdL,EAeKK,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYA,KAAK,CAACG,OAAlB,EACH,CAFD,IAEO,CACHlC,KAAK,CAACiC,IAAN,CAAWF,KAAK,CAACP,QAAN,CAAeC,IAA1B,EACH,CACJ,CArBL,EAsBH,CAvBD,CAwBH,CAzBM,CA0BP,MAAO,IAAM+R,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAAChP,UAAD,CAAaD,SAAb,CAAwBvB,QAAxB,CAAkCE,YAAlC,CAAgDH,cAAhD,CAAgE0Q,IAAhE,CAAsEvB,cAAtE,CAAyF,CAC/H,MAAO,UAAUjR,QAAV,CAAoB,CAEvB,GAAMwE,CAAAA,sBAAsB,CAAGgO,IAAI,CAAClO,qBAApC,CACA,GAAIE,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACsF,KAA7D,EACAH,sBAAsB,CAACC,eAAvB,GAA2CpF,iBAAiB,CAACqF,UADjE,CAC6E,kBAG7E,GAAIH,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAM2M,CAAAA,eAAe,CAAGlS,KAAK,CAACmB,IAAN,CAAW,kCAAX,CAA+C,CAAE,WAAY4B,QAAd,CAA/C,CAAxB,CACA,GAAM0Q,CAAAA,cAAc,CAAGzT,KAAK,CAACmB,IAAN,CAAW,2BAAX,CAAwC,CAAEsR,iBAAiB,CAAEe,IAAI,CAACE,gBAAL,CAAsBjB,iBAA3C,CAAxC,CAAvB,CACA,GAAMkB,CAAAA,WAAW,CAAG3T,KAAK,CAACmB,IAAN,CAAW,gCAAX,CAA6C,CAC7DgS,gBAAgB,CAAEK,IAAI,CAACE,gBAAL,CAAsBP,gBADqB,CACHV,iBAAiB,CAAEe,IAAI,CAACE,gBAAL,CAAsBjB,iBADtC,CAE7D5F,kBAAkB,CAAE2G,IAAI,CAACpL,YAAL,CAAkByE,kBAFuB,CAA7C,CAApB,CAIA,GAAM+G,CAAAA,YAAY,CAAG5T,KAAK,CAACmB,IAAN,CAAW,qCAAX,+CAChB8Q,cADgB,CACCuB,IAAI,CAACE,gBAAL,CAAsBG,0BADvB,+BACmD,UADnD,CAC+D9Q,QAD/D,gBAArB,CAGA,GAAMoP,CAAAA,aAAa,CAAGnS,KAAK,CAACmB,IAAN,CAAW,wCAAX,CAAqD,CAAE,WAAY4B,QAAd,CAAwBW,oBAAoB,CAAE8P,IAAI,CAACxQ,YAAL,CAAkBU,oBAAhE,CAArD,CAAtB,CAEA6B,QAAQ,CAAG,CAAC2M,eAAD,CAAkBuB,cAAlB,CAAkCE,WAAlC,CAA+CC,YAA/C,CAA6DzB,aAA7D,CAAX,CAEAnR,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,KAAK,CAACkF,GAAN,CAAUL,QAAV,EACKjE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,GAAqB,SAAzB,CAAoC,CAEhC,GAAIsB,CAAAA,eAAc,CAAG,EAArB,CACA,GAAIgR,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA,GAAM1B,CAAAA,eAAe,CAAG/R,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,mBAAzB,CACvC,mBADuC,CAClBgB,SADkB,CACPA,SADO,CACI,KADJ,CAA3C,CAGA,GAAM+P,CAAAA,YAAY,CAAGD,eAAe,CAAC7L,GAAhB,CAAoB,YAApB,CAArB,CAEA,GAAMqM,CAAAA,mBAAmB,CAAGvS,mBAAmB,CAACgB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBuR,oBAAjB,EAAyC,EAA1C,CAA8C,kBAA9C,CAC3C,kBAD2C,CACvBvQ,SADuB,CACZA,SADY,CACD,KADC,CAA/C,CAGA,GAAMoQ,CAAAA,oBAAoB,CAAGE,mBAAmB,CAACrM,GAApB,CAAwB,YAAxB,CAA7B,CACA,GAAM2M,CAAAA,WAAW,CAAG9S,uBAAuB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB6R,aAAjB,EAAkC,EAAnC,CAAuC,eAAvC,CACvC,eADuC,CACtB7Q,SADsB,CACXA,SADW,CACA,KADA,CAA3C,CAGA,GAAMmQ,CAAAA,YAAY,CAAGS,WAAW,CAAC3M,GAAZ,CAAgB,YAAhB,CAArB,CAEAqN,oBAAoB,CAAC3P,IAArB,CAA0B,CACtB,QAAS5C,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,kBAAjB,CADa,CAEtB,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,kBAAjB,CAFa,CAA1B,EAIAuS,gBAAgB,CAAC5P,IAAjB,CAAsB,CAClB,QAAS5C,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,mBAAjB,CADS,CAElB,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,mBAAjB,CAFS,CAAtB,EAIAwS,YAAY,CAAC7P,IAAb,CAAkB,CACd,QAAS5C,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,eAAjB,CADK,CAEd,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,eAAjB,CAFK,CAAlB,EAKAsB,eAAc,CAAGvB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CACAsB,eAAc,CAAC,kBAAD,CAAd,CAAqCgR,oBAAoB,CAAC,CAAD,CAAzD,CACAhR,eAAc,CAAC,mBAAD,CAAd,CAAsCiR,gBAAgB,CAAC,CAAD,CAAtD,CACAjR,eAAc,CAAC,eAAD,CAAd,CAAkCkR,YAAY,CAAC,CAAD,CAA9C,CAEAhT,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL6Q,YAAY,CAAEA,YADT,CAELI,YAAY,CAAEA,YAFT,CAGLC,oBAAoB,CAAEA,oBAHjB,CAIL9P,cAAc,CAAEA,eAJX,CAKL+P,MAAM,CAAE,IALH,CAMLvO,SAAS,CAAEA,SANN,CAOLC,UAAU,CAAEA,UAPP,CAQL0H,cAAc,CAAE,IARX,CASLhJ,YAAY,CAAEA,YATT,CAULrB,OAAO,CAAE,KAVJ,CAFJ,CAAD,CAAR,CAeH,CAtDD,IAsDO,CACH7B,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAEpD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IADU,CAAnB,CAAX,EAGAR,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACL4C,SAAS,CAAEA,SADN,CAELC,UAAU,CAAEA,UAFP,CAGLtB,YAAY,CAAEA,YAHT,CAILrB,OAAO,CAAE,KAJJ,CAFJ,CAAD,CAAR,CAUH,CACJ,CAvEL,EAwEKC,KAxEL,CAwEW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLS,IAAI,CAAExB,cADD,CAELyB,OAAO,CAAE,CACLE,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA9B,CAAmC,CAC/BhC,KAAK,CAAC+B,KAAN,CAAYnB,IAAI,CAAC+D,aAAL,CAAmB,CAC3BC,EAAE,CAAE7C,KAAK,CAACG,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHlC,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE7C,KAAK,CAACP,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CAxFL,EA2FC,CA9GD,IA+GI,CACAzB,KAAK,CAACiC,IAAN,CAAWrB,IAAI,CAAC+D,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8CADsB,CAAnB,CAAX,EAGH,CACJ,CAvHD,CAwHH,CAzHM","sourcesContent":["import {\r\n    toast\r\n} from \"react-toastify\";\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    attachmentType,\r\n    parameterType,\r\n    SampleType,\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport {\r\n    constructjsonOptionList,\r\n    constructOptionList,\r\n    rearrangeDateFormat,\r\n    //formatInputDate,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    intl\r\n} from \"../components/App\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\n\r\n\r\nexport const sampleTypeOnChange = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let url = \"/testgroup\";\r\n        if(inputParam.classUrl){\r\n            url = inputParam.classUrl;\r\n        }\r\n        rsapi.post(url + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        tempFilterData: inputParam.inputData.tempFilterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data\r\n                        },\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    masterData[\"ExistingLinkTable\"] = [];\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const filterTestGroup = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/filterTestGroup\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        filterData: inputParam.inputData.filterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        loading: false,\r\n                        testskip: 0,\r\n                        historyDataState: {\r\n                            ...inputParam.historyDataState,\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createTree = (selectedRecord, userInfo, selectedNode, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        if (selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES || selectedRecord.nproductcode) {\r\n            const inputParam = {\r\n                sampletype: selectedRecord.nsampletypecode.item,\r\n                ncategorycode: selectedRecord.nproductcatcode.value,\r\n                ntreeversiontempcode: selectedRecord.ntreeversiontempcode.value,\r\n                nprojectmastercode : selectedRecord.nprojectmastercode ? selectedRecord.nprojectmastercode.value : -1,\r\n                userinfo: userInfo,\r\n                treetemplatemanipulation: selectedNode\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/testgroup/getTemplateMasterDetails\", {\r\n                ...inputParam\r\n            })\r\n                .then(response => {\r\n                    const treetempTranstestGroup = response.data[\"TreetempTranstestGroup\"] || [];\r\n\r\n                    // const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\r\n                    //         return {\r\n                    //             \"idsName\": item.slabelname,\r\n                    //             \"dataField\": \"sleveldescription_\" + index,\r\n                    //             \"mandatory\": true\r\n                    //         }\r\n                    // });\r\n\r\n                    //  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\r\n                    const mandatoryFields = [];\r\n                    treetempTranstestGroup.forEach((item, index) => {\r\n                        if (item.sleveldescription === null) {\r\n                            mandatoryFields.push({\r\n                                \"idsName\": item.slabelname,\r\n                                \"dataField\": \"sleveldescription_\" + index,\r\n                                \"mandatory\": true\r\n                            })\r\n                        }\r\n                    });\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: \"create\",\r\n                            screenName: \"IDS_PROFILETREE\",\r\n                            TreetempTranstestGroup: treetempTranstestGroup,\r\n                            treeMandatoryFields: mandatoryFields,\r\n                            //selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PRODUCTNOTAVAILABLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTree = (operation, selectedNode, userinfo, ncontrolCode, filterData, masterData) => {\r\n    return (dispatch) => {\r\n        if (!selectedNode) {\r\n            return   toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n            }))\r\n        }\r\n        //console.log(\"edit Tree:\", selectedNode, masterData);\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === selectedNode[\"ntreeversiontempcode\"]);\r\n        // if (treeVersionTemplateIndex !== -1){\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        //}\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedNode) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(\"/testgroup/getTreeById\", {\r\n                    userinfo,\r\n                    treetemplatemanipulation: selectedNode,\r\n                    ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                })\r\n                    .then(response => {\r\n                        const treetempTranstestGroup = response.data;\r\n                        const treeMandatoryFields = treetempTranstestGroup && [{\r\n                            \"idsName\": treetempTranstestGroup.slabelname,\r\n                            \"dataField\": \"sleveldescription\",\r\n                            \"mandatory\": true\r\n                        }];\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTREE\",\r\n                                selectedRecord: {\r\n                                    ...treetempTranstestGroup\r\n                                },\r\n                                treeMandatoryFields,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n                }))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addSpecification = (operation, inputParam, ncontrolCode, masterDatas) => {\r\n    return (dispatch) => {\r\n        //if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\r\n        if (inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (inputParam.selectedNode != null && inputParam.selectedNode.nnextchildcode === -1) {\r\n\r\n                if (masterDatas && masterDatas.SelectedSpecification === null && operation === \"copy\") {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n                }\r\n                else {\r\n                    let urlArray = [];\r\n                    if (operation === \"update\" ) {\r\n                        const testgroupspecification = inputParam.testgroupspecification[0];\r\n                       // let isValidOperation = false;\r\n                       // if (operation === \"update\"){\r\n                        //     if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                        //         testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                        //             isValidOperation = true;\r\n                        //     }\r\n                        //     else {\r\n                        //         toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n                        //         return;\r\n                        //     }\r\n                        // }\r\n                        // else{\r\n                        //     isValidOperation = true;\r\n                        // }\r\n                        if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                            testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                            urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                            urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\", {\r\n                                testgroupspecification,\r\n                                userinfo: inputParam.userinfo,\r\n                                ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value\r\n                            }));\r\n                        }\r\n                        else{\r\n                            toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n                            return;\r\n                        }\r\n                    }\r\n                    else {\r\n                        urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                        urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\", {\r\n                            userinfo: inputParam.userInfo,\r\n                            ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value\r\n                            //currentdate: formatInputDate(new Date(), true)\r\n                        }));\r\n                    }\r\n                    Axios.all(urlArray)\r\n                        .then(response => {\r\n                            let selectedRecord = {};\r\n                            let masterData = inputParam.masterData !== undefined ? inputParam.masterData : masterDatas;\r\n\r\n                            if (operation === \"update\" ) {\r\n                                masterData = {\r\n                                    ...inputParam.masterData,\r\n                                    ...response[1].data,\r\n                                    testgroupspecification: inputParam.testgroupspecification\r\n                                }\r\n                                selectedRecord = {\r\n                                    sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode.label,\r\n                                    sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                    ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                    ...response[1].data.SelectedSpecification,\r\n                                    //dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\r\n                                    dexpirydate: rearrangeDateFormat(inputParam.userinfo, response[1].data.SelectedSpecification[\"sexpirydate\"]),\r\n                                    ntzexpirydate: {\r\n                                        \"label\": response[1].data.SelectedSpecification.stimezoneid,\r\n                                        \"value\": response[1].data.SelectedSpecification.ntzexpirydate\r\n                                    }\r\n                                };\r\n                            } else {\r\n                                selectedRecord = {\r\n                                    sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode.label,\r\n                                    sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                    sspecname: inputParam.selectedNode.sleveldescription,\r\n                                    ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                    dexpirydate: rearrangeDateFormat(inputParam.userInfo, response[1].data.ExpiryDate),\r\n                                    //ncomponentrequired: inputParam.selectedNode.nsampletypecode === SampleType.CLINICALTYPE ? transactionStatus.YES : transactionStatus.NO,\r\n                                    ncomponentrequired: transactionStatus.YES,\r\n                                    // nclinicalspec: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\r\n                                    ntransactionstatus: transactionStatus.ACTIVE,\r\n                                    ntzexpirydate: {\r\n                                        \"label\": inputParam.userInfo.stimezoneid,\r\n                                        \"value\": inputParam.userInfo.ntimezonecode\r\n                                    }\r\n                                };\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    openModal: true,\r\n                                    operation: operation,\r\n                                    screenName: \"IDS_SPECIFICATION\",\r\n                                    masterData,\r\n                                    selectedRecord,\r\n                                    timeZoneList: constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", false, false, true).get(\"OptionList\"),\r\n                                    ncontrolCode\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            } else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                }\r\n            } else {\r\n                if (operation === \"copy\") {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\"}));\r\n                } \r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTLASTLEVELNODETOADDSPEC\"}));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addComponent = (SelectedSpecification, userInfo, ncontrolCode, masterData) => {\r\n    return (dispatch) => {\r\n\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            rsapi.post(\"/testgroup/getAvailableComponent\", {\r\n                userinfo: userInfo,\r\n                testgroupspecification: SelectedSpecification\r\n            })\r\n                .then(response => {\r\n                    const testGroupSpecSampleType = response.data[\"TestGroupSpecSampleType\"] || [];\r\n                    if (testGroupSpecSampleType.length > 0) {\r\n                        const testCategory = constructOptionList(response.data[\"TestCategory\"] || [], \"ntestcategorycode\", \"stestcategoryname\", 'ntestcategorycode', 'ascending', false);\r\n                        const sampleTypeMap = constructOptionList(testGroupSpecSampleType, \"ncomponentcode\", \"scomponentname\", false, false, true);\r\n                        // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"create\",\r\n                                screenName: \"IDS_COMPONENT\",\r\n                                testGroupInputData: {\r\n                                    TestCategory: testCategory.get(\"OptionList\"),\r\n                                    TestGroupSpecSampleType: sampleTypeMap.get(\"OptionList\"),\r\n                                    TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                },\r\n                                selectedRecord: {\r\n                                    ncomponentcode: sampleTypeMap.get(\"DefaultValue\"),\r\n                                    ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                },\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_COMPONENTNOTAVAILABLE\"\r\n                        }));\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupTest = (selectedComponent, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        if (masterData.selectedNode !== undefined && masterData.selectedNode !== null) {\r\n            const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n                x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n            const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n            if (templateVersionStatus === transactionStatus.RETIRED) {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                if (selectedSpecification) {\r\n                    if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                        selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n                        let openTestModal = false;\r\n                        if (selectedSpecification.ncomponentrequired === transactionStatus.YES) {\r\n                            if (selectedComponent == undefined) {\r\n                                toast.warn(intl.formatMessage({\r\n                                    id: \"IDS_NEEDCOMPONENTTOADDTEST\"\r\n                                }));\r\n                            }else{\r\n                                openTestModal = true;\r\n                            }\r\n                        } else {\r\n                            openTestModal = true;\r\n                        }\r\n\r\n                        if (openTestModal === true) {\r\n                            rsapi.post(\"/testgroup/getAvailableTest\", {\r\n                                userinfo: userInfo,\r\n                                testgroupspecsampletype: selectedComponent,\r\n                                ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                            })\r\n                                .then(response => {\r\n                                    let testCategory;\r\n                                    // = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                    // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                                    if (response.data[\"TestCategory\"].length > 0) {\r\n                                        testCategory = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                        dispatch({\r\n                                            type: DEFAULT_RETURN,\r\n                                            payload: {\r\n                                                openModal: true,\r\n                                                operation: \"create\",\r\n                                                screenName: \"IDS_TEST\",\r\n                                                testGroupInputData: {\r\n                                                    TestCategory: testCategory.get(\"OptionList\"),\r\n                                                    TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                                },\r\n                                                selectedRecord: {\r\n                                                    ntestcategorycode: {\r\n                                                        label: response.data[\"SelectedTestCategory\"].stestcategoryname,\r\n                                                        value: response.data[\"SelectedTestCategory\"].stestcategorycode,\r\n                                                        item: response.data[\"SelectedTestCategory\"]\r\n                                                    }\r\n                                                    //ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                                },\r\n                                                ncontrolCode\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        toast.warn(intl.formatMessage({\r\n                                            id: \"IDS_TESTCATEGORYNOTAVAILABLE\"\r\n                                        }))\r\n                                    }\r\n                                })\r\n                                .catch(error => {\r\n                                    if (error.response.status === 409 || error.response.status === 417) {\r\n                                        toast.warn(error.response.data);\r\n                                    } else {\r\n                                        toast.error(error.message);\r\n                                    }\r\n                                });\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                        }));\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SELECTSPECIFICATION\"\r\n                    }));\r\n                }\r\n            }\r\n        }  else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTSPECIFICATION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupTest = (operation, selectedTest, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const ntestcode = selectedTest.ntestcode;\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveTestById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptest: selectedTest,\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                    }),\r\n                    rsapi.post(\"/source/getSource\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getSection\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getMethod\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getInstrumentCategory\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getTestAttachment\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getContainerType\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        // const editObject = response[0].data.TestGroupTest;\r\n                        // const testFileItem = response[0].data.TestGroupTestFile;\r\n                        // const SelectedTest = response[0].data.TestGroupTest;\r\n\r\n                        const editObject = response[0].data.SelectedTestGroupTest;\r\n                        const testFileItem = response[0].data.TestGroupTestFile;\r\n                        const SelectedTest = response[0].data.SelectedTest;\r\n                        //const TestGroupTest = response[0].data.TestGroupTest;\r\n\r\n                        const selectedRecord = {\r\n                            ...editObject,\r\n                            // nsourcecode: {\r\n                            //     \"label\": editObject.ssourcename,\r\n                            //     \"value\": editObject.nsourcecode\r\n                            // },\r\n                            nsectioncode: {\r\n                                \"label\": editObject.ssectionname,\r\n                                \"value\": editObject.nsectioncode\r\n                            },\r\n                            nmethodcode: {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            },\r\n                            ninstrumentcatcode: {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            },\r\n                            ncontainertypecode: {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            }\r\n                        };\r\n                        if (testFileItem) {\r\n                            selectedRecord[\"ntestfilecode\"] = {\r\n                                \"label\": testFileItem.sfilename,\r\n                                \"value\": testFileItem.ntestgroupfilecode,\r\n                                item: testFileItem\r\n                            };\r\n                            selectedRecord[\"ntestgroupfilecode\"] = testFileItem.ntestgroupfilecode\r\n                        }\r\n                        if (editObject.nmethodcode !== -1) {\r\n                            selectedRecord[\"nmethodcode\"] = {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"nmethodcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ninstrumentcatcode !== -1) {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ncontainertypecode !== -1) {\r\n                            selectedRecord[\"ncontainertypecode\"] = {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ncontainertypecode\"] = undefined;\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                masterData: {\r\n                                    ...masterData,\r\n                                    ...response[0].data,\r\n                                    SelectedTest: SelectedTest,\r\n                                    //TestGroupTest : [TestGroupTest]\r\n                                },\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTESTGROUPTEST\",\r\n                                testGroupInputData: {\r\n                                    // source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\r\n                                    section: constructOptionList(response[2].data || [], \"nsectioncode\", \"ssectionname\", false, false, true).get(\"OptionList\"),\r\n                                    method: constructOptionList(response[3].data || [], \"nmethodcode\", \"smethodname\", false, false, true).get(\"OptionList\"),\r\n                                    instrumentCategory: constructOptionList(response[4].data || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", false, false, true).get(\"OptionList\"),\r\n                                    containerType: constructOptionList(response[6].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true).get(\"OptionList\"),\r\n                                    testFile: constructOptionList(response[5].data || [], \"ntestfilecode\", \"sfilename\", false, false, true).get(\"OptionList\")\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        //console.log(\"errror:\", error);\r\n                        dispatch({type: DEFAULT_RETURN,  payload: {loading: false}});\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupParameter = (operation, selectedParameter, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveParameterById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptestparameter: selectedParameter,\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                    }),\r\n                    rsapi.post(\"/parametertype/getParameterType\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"unit/getUnit\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"checklist/getApprovedChecklist\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const parameterObject = response[0].data.TestGroupTestParameter[0];\r\n                        const predefinedObject = response[0].data.TestGroupTestPredefinedParameter;\r\n                        const characterObject = response[0].data.TestGroupTestCharParameter;\r\n                        const numericObject = response[0].data.TestGroupTestNumericParameter && response[0].data.TestGroupTestNumericParameter.length > 0 ? response[0].data.TestGroupTestNumericParameter[0] : {};\r\n                        const selectedRecord = {\r\n                            ...parameterObject,\r\n                            nunitcode: {\r\n                                \"label\": parameterObject.sunitname,\r\n                                \"value\": parameterObject.nunitcode\r\n                            },\r\n                            nparametertypecode: {\r\n                                \"label\": parameterObject.sdisplaystatus,\r\n                                \"value\": parameterObject.nparametertypecode\r\n                            },\r\n                            parameterTypeCode: parameterObject.nparametertypecode,\r\n                            nchecklistversioncode: {\r\n                                \"label\": parameterObject.schecklistname,\r\n                                \"value\": parameterObject.nchecklistversioncode\r\n                            },\r\n                            schecklistversionname: parameterObject.schecklistversionname,\r\n                            ntestformulacode: parameterObject.ntestformulacode > 0 ? {\r\n                                \"label\": parameterObject.sformulacalculationdetail,\r\n                                \"value\": parameterObject.ntestformulacode,\r\n                                item: {\r\n                                    sformulacalculationdetail: parameterObject.sformulacalculationdetail,\r\n                                    ntestformulacode: parameterObject.ntestformulacode,\r\n                                    sformulacalculationcode: parameterObject.sformulacalculationcode\r\n                                }\r\n                            } : \"\"\r\n                        };\r\n                        if (selectedRecord[\"schecklistname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nchecklistversioncode\"]\r\n                        }\r\n                        if (selectedRecord[\"schecklistversionname\"] === \"NA\") {\r\n                            delete selectedRecord[\"schecklistversionname\"]\r\n                        }\r\n                        if (selectedRecord[\"sunitname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nunitcode\"]\r\n                        }\r\n                        if (characterObject) {\r\n                            selectedRecord[\"scharname\"] = characterObject.scharname;\r\n                            selectedRecord[\"ntestgrouptestcharcode\"] = characterObject.ntestgrouptestcharcode;\r\n                        }\r\n                        if (predefinedObject) {\r\n                            selectedRecord[\"ntestgrouptestpredefcode\"] = predefinedObject.ntestgrouptestpredefcode;\r\n                            selectedRecord[\"spredefinedname\"] = predefinedObject.spredefinedname;\r\n                            selectedRecord[\"ndefaultstatus\"] = predefinedObject.ndefaultstatus;\r\n                            selectedRecord[\"ngradecode\"] = {\r\n                                \"label\": predefinedObject.sdisplaystatus,\r\n                                \"value\": predefinedObject.ngradecode\r\n                            };\r\n                        }\r\n                        if (numericObject) {\r\n                            selectedRecord[\"ntestgrouptestnumericcode\"] = numericObject.ntestgrouptestnumericcode;\r\n                            selectedRecord[\"sminlod\"] = numericObject.sminlod;\r\n                            selectedRecord[\"smaxlod\"] = numericObject.smaxlod;\r\n                            selectedRecord[\"sminb\"] = numericObject.sminb;\r\n                            selectedRecord[\"smina\"] = numericObject.smina;\r\n                            selectedRecord[\"smaxa\"] = numericObject.smaxa;\r\n                            selectedRecord[\"smaxb\"] = numericObject.smaxb;\r\n                            selectedRecord[\"sminloq\"] = numericObject.sminloq;\r\n                            selectedRecord[\"smaxloq\"] = numericObject.smaxloq;\r\n                            selectedRecord[\"sdisregard\"] = numericObject.sdisregard;\r\n                            selectedRecord[\"sresultvalue\"] = numericObject.sresultvalue;\r\n                        }\r\n                        const gradeMap = constructOptionList(response[3].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const unitMap = constructOptionList(response[2].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        const unit = unitMap.get(\"OptionList\");\r\n                        const disabled = parameterObject.nparametertypecode === parameterType.NUMERIC ? false : true;\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_PARAMETER\",\r\n                                testGroupInputData: {\r\n                                    unit,\r\n                                    grade,\r\n                                    testFormula: constructOptionList(response[0].data.TestFormula || [], \"ntestformulacode\", \"sformulacalculationdetail\", false, false, true).get(\"OptionList\"),\r\n                                    parameterType: constructOptionList(response[1].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true).get(\"OptionList\"),\r\n                                    checkListVersion: constructOptionList(response[4].data || [], \"nchecklistversioncode\", \"schecklistname\", false, false, true).get(\"OptionList\"),\r\n                                    needRoundingDigit: disabled,\r\n                                    needUnit: disabled\r\n                                },\r\n                                parameterData: {\r\n                                    grade,\r\n                                    defaultUnit: unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\",\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\r\n//     return dispatch => {\r\n//         const testgroupspecification = optionalData.testgroupspecification;\r\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \r\n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\r\n//             .then(response=>{\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, \r\n//                     payload:{\r\n//                         openChildModal: true,\r\n//                         operation: \"create\",\r\n//                         screenName: \"IDS_FORMULA\",\r\n//                         testGroupInputData: {testFormula: response.data},\r\n//                         selectedRecord: {},\r\n//                         ncontrolCode\r\n//                 }});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\r\n//                 if(error.response.status === 409 || error.response.status === 417) {\r\n//                     toast.warn(error.response.data);\r\n//                 } else {\r\n//                     toast.error(error.message)\r\n//                 }\r\n//             });\r\n//         } else {\r\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const getTestGroupParameter = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestParameter\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getComponentBySpecId = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n            [inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                const historyDataState = {\r\n                    ...inputParam.historyDataState,\r\n                    sort: undefined,\r\n                    filter: undefined\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        historyDataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN,  payload: {loading: false}});\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupDetails = (inputParam) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestGroupTest\", {\r\n            ntestgrouptestcode: parseInt(inputParam['ntestgrouptestcode']),\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        },\r\n                        testskip: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN,  payload: {loading: false}});\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupComponentDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestByComponentId\", {\r\n            testgroupspecsampletype: inputParam['testgroupspecsampletype'],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        testskip: 0,\r\n                        testtake: 5,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN,  payload: {loading: false}});\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecification = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedRecord !== null) {\r\n            rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n                ...inputParam,\r\n                [inputParam.keyName]: inputParam.selectedRecord\r\n            })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    if (searchRef.current)\r\n                        searchRef.current.value = \"\";\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ActiveKey: inputParam.activeKey,\r\n                                FocusKey: inputParam.focusKey,\r\n                                primaryKey: inputParam.primaryKey,\r\n                                ...response.data,\r\n                                selectedNode: inputParam.selectedRecord,\r\n                                searchedData: undefined,\r\n\r\n                            },\r\n                            historyDataState: {\r\n                                ...inputParam.historyDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData: {\r\n                        ...masterData,\r\n                        selectedNode: inputParam.selectedRecord,\r\n                        TestGroupSpecification: [],\r\n                        SelectedSpecification: {},\r\n                        TestGroupTest: [],\r\n                        TestGroupTestParameter: [],\r\n                        TestGroupTestNumericParameter: [],\r\n                        TestGroupTestFormula: [],\r\n                        TestGroupTestPredefinedParameter: [],\r\n                        TestGroupTestClinicalSpec: [],\r\n                        TestGroupTestCharParameter: [],\r\n                        ActiveKey: inputParam.activeKey,\r\n                        FocusKey: inputParam.focusKey,\r\n                        SelectedTest: {},\r\n                        selectedParameter: {},\r\n                        TestGroupSpecFile: [],\r\n                        TestGroupSpecificationHistory: [],\r\n                        SelectedComponent: undefined,\r\n                        RulesEngine:[]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTestCategory = (inputParam, testGroupInputData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestMasterByCategory\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                inputParam.selectedRecord.ntestcode = [];\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: inputParam.selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...testGroupInputData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecificationDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/get\" + inputParam.methodUrl, {\r\n            ...inputParam.inputData\r\n        })\r\n            .then(response => {\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const editSpecFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        const masterData = inputParam.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (inputParam.testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                inputParam.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                    userinfo: inputParam.userInfo\r\n                }),\r\n                rsapi.post(\"/testgroup/getActiveSpecFileById\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    testgroupspecfile: inputParam.selectedRecord,\r\n                    ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n                })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const linkmaster = response[0].data.LinkMaster;\r\n                        const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\r\n                        const editObject = response[1].data;\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = {\r\n                                \"label\": editObject.slinkname,\r\n                                \"value\": editObject.nlinkcode\r\n                            }\r\n                            link = {\r\n                                slinkfilename: editObject.sfilename,\r\n                                slinkdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                                sfilesize: '',\r\n                                nfilesize: 0,\r\n                                ndefaultstatus: 4,\r\n                                sfilename: '',\r\n                            }\r\n\r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ? {\r\n                                \"label\": defaultLink[0].slinkname,\r\n                                \"value\": defaultLink[0].nlinkcode\r\n                            } : \"\"\r\n\r\n                            link = {\r\n                                slinkfilename: '',\r\n                                slinkdescription: '',\r\n                                sdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: 4,\r\n                                sfilesize: editObject.sfilesize,\r\n                                nfilesize: editObject.nfilesize,\r\n                                ndefaultstatus: editObject.ndefaultstatus,\r\n                                sfilename: editObject.sfilename,\r\n                            }\r\n                        }\r\n                        const selectedRecord = {\r\n                            // ...editObject,\r\n                            ...link,\r\n                            nallotedspeccode: editObject.nallotedspeccode,\r\n                            nspecfilecode: editObject.nspecfilecode,\r\n                            stypename: editObject.stypename,\r\n                            nattachmenttypecode: editObject.nattachmenttypecode,\r\n                            nlinkcode,\r\n                            // disabled: true\r\n                        };\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"update\",\r\n                                screenName: \"IDS_SPECFILE\",\r\n                                editFiles: Object.values(editObject).length > 0 && editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {},\r\n                                selectedRecord,\r\n                                ncontrolCode: inputParam.ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupCodedResult = (operation, paramdata, userInfo, ncontrolCode, optionalData, masterData) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterSubCodedById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        let selectedsubcodedresult = [];\r\n                        let selectsubcodedelete=[];\r\n                        const gradeMap = constructOptionList(response[0].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[1].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestpredefcode: paramdata[\"ntestgrouptestpredefcode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                ngradecode: {\r\n                                    \"label\": editCodedResult[\"sdisplaystatus\"],\r\n                                    \"value\": editCodedResult[\"ngradecode\"]\r\n                                },\r\n                                spredefinedname: editCodedResult[\"spredefinedname\"],\r\n                                //sresultparacomment: editCodedResult[\"sresultparacomment\"],\r\n                                spredefinedsynonym: editCodedResult[\"spredefinedsynonym\"],\r\n                                spredefinedcomments: editCodedResult[\"spredefinedcomments\"],\r\n                                nneedresultentryalert: editCodedResult[\"nneedresultentryalert\"],\r\n                                nneedsubcodedresult: editCodedResult[\"nneedsubcodedresult\"],\r\n                                salertmessage: editCodedResult[\"salertmessage\"]\r\n                            }\r\n\r\n                            selectedsubcodedresult=response[2].data;\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngradecode: gradeMap.get(\"DefaultValue\"),\r\n                                nneedresultentryalert:4,\r\n                                nneedsubcodedresult:4\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n                            \r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CODEDRESULT\",\r\n                                parameterData: {\r\n                                    grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false,\r\n                                selectedsubcodedresult,\r\n                                selectsubcodedelete\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const subCodedResultView = (operation, paramdata, userInfo, ncontrolCode, optionalData, masterData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"testgroup/getActivePredefinedParameterSubCoded\", {\r\n            testgrouptestpredefinedparameter: paramdata,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                let selectedsubcoderesult = []; \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                   \r\n                    payload: {\r\n                        openModal: true,\r\n                        operation: \"View\",\r\n                        screenName: \"IDS_SUBCODERESULT\",\r\n                        selectedsubcoderesult:response.data,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            selectedsubcoderesult:response.data,\r\n                            searchedData: undefined,\r\n                        },\r\n                        //screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addTestGroupNumericTab = (operation, paramdata, userInfo, optionalData, masterData, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"patient/getGender\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        const gradeMap = constructOptionList(response[0].data.genderList || [], \"ngendercode\", \"sgendername\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[1].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestclinicspeccode: paramdata[\"ntestgrouptestclinicspeccode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                nfromage: paramdata[\"nfromage\"],\r\n                                ntoage: paramdata[\"ntoage\"],\r\n                                ngendercode: {\r\n                                    \"label\": editCodedResult[\"sgendername\"],\r\n                                    \"value\": editCodedResult[\"ngendercode\"]\r\n                                },\r\n                                nhigha: editCodedResult[\"shigha\"],\r\n                                nhighb: editCodedResult[\"shighb\"],\r\n                                nlowa: editCodedResult[\"slowa\"],\r\n                                nlowb: editCodedResult[\"slowb\"],\r\n                                sresultvalue: editCodedResult[\"sresultvalue\"]\r\n\r\n                            }\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngendercode: gradeMap.get(\"DefaultValue\")\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CLINICALSPEC\",\r\n                                parameterData: {\r\n                                    grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const viewTestGroupCheckList = (inputParam, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/viewTemplate\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openTemplateModal: true,\r\n                        testGroupCheckList: {\r\n                            templateData: response.data\r\n                        },\r\n                        loading: false,\r\n                        selectedRecord: {}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const reportSpecification = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/specReportGenerate\", {\r\n            ...inputParam,\r\n            ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const retireSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/retireSpec\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n\r\n                // const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\r\n                sortData(response.data);\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, masterData, primaryKeyName) => {\r\n    return function (dispatch) {\r\n        if (masterData.selectedNode !== undefined && masterData.selectedNode !== null && masterData.SelectedSpecification!==null) {\r\n             const testgroupspecification = masterData.SelectedSpecification;\r\n             if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                 testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            let urlArray = [];\r\n            const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n            const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo, ntreeversiontempcode: masterData.selectedNode.ntreeversiontempcode });\r\n\r\n            urlArray = [materialTypeUrl, validationUrl];\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    console.log(ncontrolCode)\r\n                    if (masterData.SelectedTest && masterData.SelectedTest !== undefined) {\r\n\r\n                        if (response[1].data === \"Success\") {\r\n\r\n                            const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                                \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                            const materialType = materialTypeMap.get(\"OptionList\");\r\n                            const materialTypedefault = materialTypeMap.get(\"DefaultValue\");\r\n\r\n                            selectedRecord[\"nmaterialtypecode\"] = materialTypedefault;\r\n                            if (selectedRecord[\"nmaterialtypecode\"] !== undefined) {\r\n                                let inputData = []\r\n                                let inputParam = { operation: operation, selectedRecord: selectedRecord, materialType: materialType, inputData: { nmaterialtypecode: materialTypedefault.value }, materialType: materialType, masterData: masterData, screenName: screenName,ncontrolCode }\r\n                                dispatch(getMaterialCategoryBasedMaterialType(inputParam));\r\n\r\n                            } else {\r\n                                dispatch({\r\n                                    type: DEFAULT_RETURN,\r\n                                    payload: {\r\n                                        materialType: materialType,\r\n                                        materialList: undefined,\r\n                                        materialCategoryList: undefined,\r\n                                        isOpen: true,\r\n                                        operation: operation,\r\n                                        screenName: screenName,\r\n                                        openChildModal: true,\r\n                                        ncontrolCode: ncontrolCode,\r\n                                        loading: false,\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            toast.warn(intl.formatMessage({\r\n                                id: response[1].data\r\n                            }));\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    operation: operation,\r\n                                    screenName: screenName,\r\n                                    ncontrolCode: ncontrolCode,\r\n                                    loading: false\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_NEEDTOADDTEST\"\r\n                        }));\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n\r\n\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTSPECIFICATION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getMaterialCategoryBasedMaterialType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: inputParam.inputData.nmaterialtypecode })\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                selectedRecord = inputParam.selectedRecord\r\n\r\n                const materialCategoryMap = constructOptionList(response.data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                const materialCategorydefault = materialCategoryMap.get(\"DefaultValue\");\r\n                selectedRecord['nmaterialcatcode'] = materialCategorydefault;\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (response.data.MaterialCategoryMain.length === 0) {\r\n                    if (selectedRecord['nmaterialcatcode']) {\r\n                        delete selectedRecord['nmaterialcatcode']\r\n\r\n                    }\r\n                    if (selectedRecord['nmaterialcode']) {\r\n                        delete selectedRecord['nmaterialcode']\r\n\r\n                    }\r\n                }\r\n                let materialList = []\r\n                if (materialCategoryList.length !== 0) {\r\n                    materialList = materialList\r\n                    inputParam = {\r\n                        ...inputParam, responsecat: response, materialCategoryList: materialCategoryList, selectedRecord: selectedRecord,\r\n                        inputData: {\r\n                            //nmaterialcatcode: materialCategorydefault.value,\r\n                            nmaterialtypecode: inputParam.inputData.nmaterialtypecode\r\n                        }\r\n                    }\r\n                    dispatch(getMaterialBasedMaterialCategory(inputParam));\r\n                }\r\n\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            masterData, loading: false,\r\n                            materialCategoryList: materialCategoryList,\r\n                            materialType: inputParam.materialType,\r\n                            materialList: materialList,\r\n                            selectedRecord: selectedRecord,\r\n                            operation: inputParam.operation,\r\n                            ncontrolCode:inputParam.ncontrolCode\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getMaterialBasedMaterialCategory(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"testgroup/getAvailableMaterial\", {\r\n            nmaterialtypecode: inputParam.inputData.nmaterialtypecode, nmaterialcatcode: inputParam.inputData.nmaterialcatcode !== undefined\r\n                ? inputParam.inputData.nmaterialcatcode : inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,\r\n            ntestgrouptestcode: inputParam.masterData.SelectedTest.ntestgrouptestcode\r\n        })\r\n            .then(response => {\r\n\r\n                let selectedRecord = inputParam.selectedRecord;\r\n\r\n                const materialMap = constructjsonOptionList(response.data.MaterialCombo || [], \"nmaterialcode\",\r\n                    \"Material Name\", undefined, undefined, false);\r\n\r\n                const materialList = materialMap.get(\"OptionList\");\r\n\r\n                if (response.data.MaterialCombo.length === 0) {\r\n                    delete selectedRecord['nmaterialcode']\r\n                }\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (inputParam.materialCategoryList) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            materialCategoryList: inputParam.materialCategoryList,\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            materialType: inputParam.materialType,\r\n                            operation: inputParam.operation,\r\n                            ncontrolCode:inputParam.ncontrolCode\r\n\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getTestGroupMaterial = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestMaterial\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForEditTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, Data, primaryKeyName) => {\r\n    return function (dispatch) {\r\n\r\n        const testgroupspecification = Data.SelectedSpecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n\r\n        let urlArray = [];\r\n        const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n        const materialCatUrl = rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode });\r\n        const materialUrl = rsapi.post(\"testgroup/getAvailableMaterial\", {\r\n            nmaterialcatcode: Data.selectedMaterial.nmaterialcatcode, nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode,\r\n            ntestgrouptestcode: Data.SelectedTest.ntestgrouptestcode\r\n        });\r\n        const materialById = rsapi.post(\"testgroup/getActiveTestMaterialById\", {\r\n            [primaryKeyName]: Data.selectedMaterial.ntestgrouptestmaterialcode, \"userinfo\": userInfo\r\n        });\r\n        const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo, ntreeversiontempcode: Data.selectedNode.ntreeversiontempcode });\r\n\r\n        urlArray = [materialTypeUrl, materialCatUrl, materialUrl, materialById, validationUrl];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (response[4].data === \"Success\") {\r\n\r\n                    let selectedRecord = {};\r\n                    let MaterialCategoryData = [];\r\n                    let MaterialTypeData = [];\r\n                    let MaterialData = [];\r\n\r\n                    const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                        \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                    const materialType = materialTypeMap.get(\"OptionList\");\r\n\r\n                    const materialCategoryMap = constructOptionList(response[1].data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                        \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                    const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                    const materialMap = constructjsonOptionList(response[2].data.MaterialCombo || [], \"nmaterialcode\",\r\n                        \"Material Name\", undefined, undefined, false);\r\n\r\n                    const materialList = materialMap.get(\"OptionList\");\r\n\r\n                    MaterialCategoryData.push({\r\n                        \"value\": response[3].data[\"nmaterialcatcode\"],\r\n                        \"label\": response[3].data[\"smaterialcatname\"]\r\n                    });\r\n                    MaterialTypeData.push({\r\n                        \"value\": response[3].data[\"nmaterialtypecode\"],\r\n                        \"label\": response[3].data[\"smaterialtypename\"]\r\n                    });\r\n                    MaterialData.push({\r\n                        \"value\": response[3].data[\"nmaterialcode\"],\r\n                        \"label\": response[3].data[\"smaterialname\"]\r\n                    });\r\n\r\n                    selectedRecord = response[3].data;\r\n                    selectedRecord[\"nmaterialcatcode\"] = MaterialCategoryData[0];\r\n                    selectedRecord[\"nmaterialtypecode\"] = MaterialTypeData[0];\r\n                    selectedRecord[\"nmaterialcode\"] = MaterialData[0];\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            materialType: materialType,\r\n                            materialList: materialList,\r\n                            materialCategoryList: materialCategoryList,\r\n                            selectedRecord: selectedRecord,\r\n                            isOpen: true,\r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            openChildModal: true,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n                        }\r\n                    });\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response[4].data\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}