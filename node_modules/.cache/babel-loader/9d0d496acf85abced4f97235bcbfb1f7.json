{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\attachmentscomments\\\\attachments\\\\AddAttachment.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../../components/dropzone/dropzone.component';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport { attachmentType, transactionStatus } from '../../../components/Enumeration';\nimport { MediaHeader } from '../../../components/App.styles';\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\n\nconst AddAttachment = props => {\n  const {\n    nattachmenttypecode,\n    disabled\n  } = props.selectedRecord; // let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\n\n  let nameString = [];\n\n  if (props.operation === 'update') {\n    if (props.selectedRecord && props.selectedRecord[props.displayName] && props.selectedRecord[props.displayName] !== \"-\") {\n      nameString = [props.selectedRecord[props.displayName]];\n    } else if (props.masterList) {\n      nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\n    }\n  } else if (props.operation === 'create') {\n    if (props.masterList) {\n      nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\n    }\n  }\n\n  let message = `${nameString.length} ${props.intl.formatMessage({\n    id: props.selectedListName || \"IDS_TESTS\"\n  })} ${props.intl.formatMessage({\n    id: \"IDS_SELECTED\"\n  })}`;\n  const sdescrption = nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\"; //console.log(\"props in file:\", props, nameString);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, props.masterList && Object.values(props.masterList).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, nameString.length === 1 ? `${props.intl.formatMessage({\n    id: props.selectedListName || \"IDS_TESTS\"\n  })}: ${nameString[0]}` : /*#__PURE__*/React.createElement(TestPopOver, {\n    stringList: nameString,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }))))) : \"\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"nattachmenttypecode\",\n    type: \"radio\",\n    id: \"AddFiles\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FTP\"\n    }),\n    inline: true,\n    onChange: event => props.onInputOnChange(event, 1, attachmentType.FTP),\n    checked: nattachmenttypecode === attachmentType.FTP ? true : false,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"nattachmenttypecode\",\n    type: \"radio\",\n    id: \"AddLink\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LINK\"\n    }),\n    inline: true,\n    onChange: event => props.onInputOnChange(event, 1, attachmentType.LINK),\n    checked: nattachmenttypecode === attachmentType.LINK ? true : false,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }))), props.selectedRecord && nattachmenttypecode === attachmentType.FTP && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"AttachmentFile\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FILE\"\n    }),\n    isMandatory: true,\n    maxFiles: props.maxFiles,\n    minSize: 0,\n    maxSize: props.maxSize,\n    onDrop: event => props.onDrop(event, 'sfilename', props.maxFiles),\n    deleteAttachment: props.deleteAttachment,\n    actionType: props.actionType,\n    fileNameLength: props.fileNameLength,\n    multiple: props.multiple !== undefined ? props.multiple : true,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.editFiles && props.editFiles.nattachmenttypecode,\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\" //disabled={disabled}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), props.selectedRecord && nattachmenttypecode === attachmentType.LINK && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slinkfilename\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"slinkfilename\"] : \"\",\n    isMandatory: \"*\",\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_LINKNAME\"\n    }),\n    isSearchable: true,\n    name: \"nlinkcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.linkMaster || [],\n    optionId: \"nlinkcode\",\n    optionValue: \"slinkname\",\n    value: props.selectedRecord[\"nlinkcode\"],\n    onChange: value => props.onComboChange(value, \"nlinkcode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }))), props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedHeader ? /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sheader\",\n    label: props.intl.formatMessage({\n      id: \"IDS_HEADER\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HEADER\"\n    }),\n    value: props.selectedRecord[\"sheader\"] ? props.selectedRecord[\"sheader\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: sdescrption,\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[sdescrption] ? props.selectedRecord[sdescrption] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  })), props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedReport ? /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INCULDEINREPORT\"\n    }),\n    type: \"switch\",\n    name: \"nneedreport\",\n    onChange: event => props.onInputOnChange(event, 1),\n    defaultValue: false,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedRecord ? props.selectedRecord.nneedreport == transactionStatus.YES ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  })) : \"\"));\n};\n\nexport default injectIntl(AddAttachment);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/attachmentscomments/attachments/AddAttachment.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormTextarea","FormInput","FormSelectSearch","attachmentType","transactionStatus","MediaHeader","TestPopOver","CustomSwitch","AddAttachment","props","nattachmenttypecode","disabled","selectedRecord","nameString","operation","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","sdescrption","LINK","Object","values","event","onInputOnChange","FTP","maxFiles","maxSize","onDrop","deleteAttachment","actionType","fileNameLength","multiple","undefined","editFiles","linkMaster","value","onComboChange","isneedHeader","isneedReport","nneedreport","YES"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,2DAAzB;AACA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,OAAOC,gBAAP,MAA6B,qEAA7B;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,iCAAlD;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,YAAP,MAAyB,2DAAzB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAoCF,KAAK,CAACG,cAAhD,CAD2B,CAE3B;;AAEA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIJ,KAAK,CAACK,SAAN,KAAoB,QAAxB,EAAkC;AAC9B,QAAIL,KAAK,CAACG,cAAN,IAAwBH,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACM,WAA3B,CAAxB,IAAmEN,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACM,WAA3B,MAA4C,GAAnH,EAAwH;AACpHF,MAAAA,UAAU,GAAG,CAACJ,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACM,WAA3B,CAAD,CAAb;AACH,KAFD,MAGK,IAAIN,KAAK,CAACO,UAAV,EAAsB;AACvBH,MAAAA,UAAU,GAAGJ,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAqBC,GAAG,IAAIA,GAAG,CAACT,KAAK,CAACM,WAAP,CAAH,IAA0BG,GAAG,CAACT,KAAK,CAACU,SAAP,CAAH,CAAqBV,KAAK,CAACM,WAA3B,CAAtD,CAAb;AACH;AACJ,GAPD,MAOO,IAAIN,KAAK,CAACK,SAAN,KAAoB,QAAxB,EAAkC;AACrC,QAAIL,KAAK,CAACO,UAAV,EAAsB;AAClBH,MAAAA,UAAU,GAAGJ,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAqBC,GAAG,IAAIA,GAAG,CAACT,KAAK,CAACM,WAAP,CAAH,IAA0BG,GAAG,CAACT,KAAK,CAACU,SAAP,CAAH,CAAqBV,KAAK,CAACM,WAA3B,CAAtD,CAAb;AACH;AACJ;;AAED,MAAIK,OAAO,GAAI,GAAEP,UAAU,CAACQ,MAAO,IAAGZ,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAEf,KAAK,CAACgB,gBAAN,IAA0B;AAAhC,GAAzB,CAAwE,IAAGhB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAzB,CAAiD,EAAlK;AACA,QAAME,WAAW,GAAGhB,mBAAmB,KAAKP,cAAc,CAACwB,IAAvC,GAA8C,kBAA9C,GAAmE,cAAvF,CAnB2B,CAoB3B;;AAEA,sBACI,uDACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,KAAK,CAACO,UAAN,IAAoBY,MAAM,CAACC,MAAP,CAAcpB,KAAK,CAACO,UAApB,EAAgCK,MAAhC,GAAyC,CAA7D,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UAAU,CAACQ,MAAX,KAAsB,CAAtB,GACI,GAAEZ,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAEf,KAAK,CAACgB,gBAAN,IAA0B;AAAhC,GAAzB,CAAwE,KAAIZ,UAAU,CAAC,CAAD,CAAI,EADhG,gBAEG,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEA,UAAzB;AAAqC,IAAA,OAAO,EAAEO,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ,CADJ,CADJ,CADH,GAcK,EAfV,CADJ,eAkBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,IAAI,EAAC,qBADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,KAAK,EAAEX,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJX;AAKI,IAAA,MAAM,EAAE,IALZ;AAMI,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,EAAgC3B,cAAc,CAAC6B,GAA/C,CANzB;AAOI,IAAA,OAAO,EAAEtB,mBAAmB,KAAKP,cAAc,CAAC6B,GAAvC,GAA6C,IAA7C,GAAoD,KAPjE;AAQI,IAAA,QAAQ,EAAErB,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,IAAI,EAAC,qBADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,EAAE,EAAC,SAHP;AAII,IAAA,KAAK,EAAEF,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJX;AAKI,IAAA,MAAM,EAAE,IALZ;AAMI,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,EAAgC3B,cAAc,CAACwB,IAA/C,CANzB;AAOI,IAAA,OAAO,EAAEjB,mBAAmB,KAAKP,cAAc,CAACwB,IAAvC,GAA8C,IAA9C,GAAqD,KAPlE;AAQI,IAAA,QAAQ,EAAEhB,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,CADJ,EA2BKF,KAAK,CAACG,cAAN,IAAwBF,mBAAmB,KAAKP,cAAc,CAAC6B,GAA/D,iBAEG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,gBADT;AAEI,IAAA,KAAK,EAAEvB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,WAAW,EAAE,IAHjB;AAII,IAAA,QAAQ,EAAEf,KAAK,CAACwB,QAJpB;AAKI,IAAA,OAAO,EAAE,CALb;AAMI,IAAA,OAAO,EAAExB,KAAK,CAACyB,OANnB;AAOI,IAAA,MAAM,EAAGJ,KAAD,IAAWrB,KAAK,CAAC0B,MAAN,CAAaL,KAAb,EAAoB,WAApB,EAAiCrB,KAAK,CAACwB,QAAvC,CAPvB;AAQI,IAAA,gBAAgB,EAAExB,KAAK,CAAC2B,gBAR5B;AASI,IAAA,UAAU,EAAE3B,KAAK,CAAC4B,UATtB;AAUI,IAAA,cAAc,EAAE5B,KAAK,CAAC6B,cAV1B;AAWI,IAAA,QAAQ,EAAE7B,KAAK,CAAC8B,QAAN,KAAmBC,SAAnB,GAA+B/B,KAAK,CAAC8B,QAArC,GAAgD,IAX9D;AAYI,IAAA,SAAS,EAAE9B,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACG,cAA7B,GAA8C,EAZ7D;AAaI,IAAA,kBAAkB,EAAEH,KAAK,CAACgC,SAAN,IAAmBhC,KAAK,CAACgC,SAAN,CAAgB/B,mBAb3D;AAcI,IAAA,YAAY,EAAC,WAdjB;AAeI,IAAA,QAAQ,EAAC,WAfb,CAgBA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7BR,EAkDKD,KAAK,CAACG,cAAN,IAAwBF,mBAAmB,KAAKP,cAAc,CAACwB,IAA/D,iBACG,uDACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAE,eADV;AAEI,IAAA,KAAK,EAAElB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAJzB;AAKI,IAAA,WAAW,EAAErB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEf,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACG,cAAN,CAAqB,eAArB,CAAvB,GAA+D,EAN1E;AAOI,IAAA,WAAW,EAAC,GAPhB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAcI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEH,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,WAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEf,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,UAAU,EAAE,IAPhB;AAQI,IAAA,OAAO,EAAEf,KAAK,CAACiC,UAAN,IAAoB,EARjC;AASI,IAAA,QAAQ,EAAC,WATb;AAUI,IAAA,WAAW,EAAC,WAVhB;AAWI,IAAA,KAAK,EAAEjC,KAAK,CAACG,cAAN,CAAqB,WAArB,CAXX;AAYI,IAAA,QAAQ,EAAE+B,KAAK,IAAIlC,KAAK,CAACmC,aAAN,CAAoBD,KAApB,EAA2B,WAA3B,EAAwC,CAAxC,CAZvB;AAaI,IAAA,gBAAgB,EAAE,IAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CAnDR,EAqFKlC,KAAK,CAACG,cAAN,IAAwBF,mBAAmB,KAAKP,cAAc,CAAC6B,GAA/D,IAAsEvB,KAAK,CAACoC,YAA5E,gBAEG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAE,SADV;AAEI,IAAA,KAAK,EAAEpC,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAHzB;AAII,IAAA,WAAW,EAAErB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJjB;AAKI,IAAA,KAAK,EAAEf,KAAK,CAACG,cAAN,CAAqB,SAArB,IAAkCH,KAAK,CAACG,cAAN,CAAqB,SAArB,CAAlC,GAAoE,EAL/E;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,QAAQ,EAAE,KAPd;AAQI,IAAA,SAAS,EAAE,GARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFH,GAcY,EAnGjB,eAsGI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAEc,WADV;AAEI,IAAA,KAAK,EAAEjB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAHzB;AAII,IAAA,WAAW,EAAErB,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJjB;AAKI,IAAA,KAAK,EAAEf,KAAK,CAACG,cAAN,CAAqBc,WAArB,IAAoCjB,KAAK,CAACG,cAAN,CAAqBc,WAArB,CAApC,GAAwE,EALnF;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,QAAQ,EAAE,KAPd;AAQI,IAAA,SAAS,EAAE,IARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtGJ,EAoHKjB,KAAK,CAACG,cAAN,IAAwBF,mBAAmB,KAAKP,cAAc,CAAC6B,GAA/D,IAAsEvB,KAAK,CAACqC,YAA5E,gBACG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAErC,KAAK,CAACa,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,IAAI,EAAE,aAHV;AAII,IAAA,QAAQ,EAAGM,KAAD,IAAWrB,KAAK,CAACsB,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAJzB;AAKI,IAAA,YAAY,EAAE,KALlB;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,OAAO,EAAErB,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACG,cAAN,CAAqBmC,WAArB,IAAoC3C,iBAAiB,CAAC4C,GAAtD,GAA4D,IAA5D,GAAmE,KAA1F,GAAkG,KAR/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAaK,EAjIV,CAlBJ,CADJ;AAwJH,CA9KD;;AAgLA,eAAerD,UAAU,CAACa,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { attachmentType, transactionStatus } from '../../../components/Enumeration';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\n\r\nconst AddAttachment = props => {\r\n    const { nattachmenttypecode, disabled } = props.selectedRecord;\r\n    // let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\r\n\r\n    let nameString = [];\r\n    if (props.operation === 'update') {\r\n        if (props.selectedRecord && props.selectedRecord[props.displayName] && props.selectedRecord[props.displayName] !== \"-\") {\r\n            nameString = [props.selectedRecord[props.displayName]];\r\n        }\r\n        else if (props.masterList) {\r\n            nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\r\n        }\r\n    } else if (props.operation === 'create') {\r\n        if (props.masterList) {\r\n            nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\r\n        }\r\n    }\r\n\r\n    let message = `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    const sdescrption = nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\";\r\n    //console.log(\"props in file:\", props, nameString);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {props.masterList && Object.values(props.masterList).length > 0 ?\r\n                    <div>\r\n                        <Row className=\"mb-4\">\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>\r\n                                    {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })}: ${nameString[0]}` :\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                    }\r\n                                </MediaHeader>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    : \"\"}\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Form.Group>\r\n                        <Form.Check\r\n                            name=\"nattachmenttypecode\"\r\n                            type=\"radio\"\r\n                            id=\"AddFiles\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                            inline={true}\r\n                            onChange={(event) => props.onInputOnChange(event, 1, attachmentType.FTP)}\r\n                            checked={nattachmenttypecode === attachmentType.FTP ? true : false}\r\n                            disabled={disabled}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            name=\"nattachmenttypecode\"\r\n                            type=\"radio\"\r\n                            id=\"AddLink\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                            inline={true}\r\n                            onChange={(event) => props.onInputOnChange(event, 1, attachmentType.LINK)}\r\n                            checked={nattachmenttypecode === attachmentType.LINK ? true : false}\r\n                            disabled={disabled}\r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                </Col>\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP &&\r\n\r\n                    <Col md={12}>\r\n                        <DropZone\r\n                            name='AttachmentFile'\r\n                            label={props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                            isMandatory={true}\r\n                            maxFiles={props.maxFiles}\r\n                            minSize={0}\r\n                            maxSize={props.maxSize}\r\n                            onDrop={(event) => props.onDrop(event, 'sfilename', props.maxFiles)}\r\n                            deleteAttachment={props.deleteAttachment}\r\n                            actionType={props.actionType}\r\n                            fileNameLength={props.fileNameLength}\r\n                            multiple={props.multiple !== undefined ? props.multiple : true}\r\n                            editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                            attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                            fileSizeName=\"nfilesize\"\r\n                            fileName=\"sfilename\"\r\n                        //disabled={disabled}\r\n                        />\r\n                    </Col>\r\n                }\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.LINK &&\r\n                    <>\r\n                        <Col md=\"12\">\r\n                            <FormInput\r\n                                name={\"slinkfilename\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                value={props.selectedRecord ? props.selectedRecord[\"slinkfilename\"] : \"\"}\r\n                                isMandatory=\"*\"\r\n                                required={true}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_LINKNAME\" })}\r\n                                isSearchable={true}\r\n                                name={\"nlinkcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                                isMandatory={true}\r\n                                showOption={true}\r\n                                options={props.linkMaster || []}\r\n                                optionId='nlinkcode'\r\n                                optionValue='slinkname'\r\n                                value={props.selectedRecord[\"nlinkcode\"]}\r\n                                onChange={value => props.onComboChange(value, \"nlinkcode\", 1)}\r\n                                alphabeticalSort={true}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </>\r\n                }\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedHeader ?\r\n\r\n                    <Col md=\"12\" className=\"mt-4\">\r\n                        <FormTextarea\r\n                            name={\"sheader\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_HEADER\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_HEADER\" })}\r\n                            value={props.selectedRecord[\"sheader\"] ? props.selectedRecord[\"sheader\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col> : \"\"\r\n                }\r\n\r\n                <Col md=\"12\" className=\"mt-4\">\r\n                    <FormTextarea\r\n                        name={sdescrption}\r\n                        label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                        value={props.selectedRecord[sdescrption] ? props.selectedRecord[sdescrption] : \"\"}\r\n                        rows=\"2\"\r\n                        required={false}\r\n                        maxLength={1000}\r\n                    >\r\n                    </FormTextarea>\r\n                </Col>\r\n\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedReport ?\r\n                    <Col md=\"12\" className=\"mt-4\">\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_INCULDEINREPORT\" })}\r\n                            type=\"switch\"\r\n                            name={\"nneedreport\"}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            defaultValue={false}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedRecord ? props.selectedRecord.nneedreport == transactionStatus.YES ? true : false : false}\r\n                        />\r\n                    </Col>\r\n                    : \"\"}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddAttachment);"]},"metadata":{},"sourceType":"module"}