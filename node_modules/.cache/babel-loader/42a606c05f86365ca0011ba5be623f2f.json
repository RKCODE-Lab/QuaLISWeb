{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../../components/Enumeration';import FormMultiSelect from'../../../components/form-multi-select/form-multi-select.component';var AddEmailConfig=function AddEmailConfig(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_HOSTNAME\"}),name:\"nemailhostcode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord[\"nemailhostcode\"]?props.selectedRecord[\"nemailhostcode\"]:\"\",options:props.emailHost,optionId:\"nemailhostcode\",optionValue:\"shostname\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",isDisabled:props.operation===\"update\"?true:false,onChange:function onChange(event){return props.onComboChange(event,\"nemailhostcode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SCREENNAME\"}),name:\"nemailscreencode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord[\"nemailscreencode\"]?props.selectedRecord[\"nemailscreencode\"]:\"\",options:props.emailScreen,optionId:\"nemailscreencode\",optionValue:\"sscreenname\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"nemailscreencode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TEMPLATENAME\"}),name:\"nemailtemplatecode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord[\"nemailtemplatecode\"]?props.selectedRecord[\"nemailtemplatecode\"]:\"\",options:props.emailTemplate,optionId:\"nemailtemplatecode\",optionValue:\"stemplatename\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"nemailtemplatecode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CONTROLNAME\"}),name:\"ncontrolcode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord[\"ncontrolcode\"]?props.selectedRecord[\"ncontrolcode\"]:\"\",options:props.formControls,optionId:\"ncontrolcode\",optionValue:\"scontrolname\",isMandatory:true,isMulti:false,isSearchable:true,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"ncontrolcode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_EMAILQUERY\"}),name:\"nemailuserquerycode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord[\"nemailuserquerycode\"]?props.selectedRecord[\"nemailuserquerycode\"]:\"\",options:props.emailQueryList,optionId:\"nemailuserquerycode\",optionValue:\"squery\",isMandatory:false,isMulti:false,isClearable:true,isSearchable:true,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"nemailuserquerycode\");}}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_MAILENABLE\"}),type:\"switch\",name:\"nenableemail\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAILENABLE\"}),defaultValue:props.selectedRecord[\"nenableemail\"]?props.selectedRecord[\"nenableemail\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:props.selectedRecord[\"nenableemail\"]?props.selectedRecord[\"nenableemail\"]===transactionStatus.YES?true:false:false,disabled:false})),props.operation==='create'?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"nusercode\",label:props.intl.formatMessage({id:\"IDS_USERS\"}),options:props.users||[],placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),optionId:\"nusercode\",optionValue:\"semail\",value:props.selectedRecord[\"nusercode\"]?props.selectedRecord[\"nusercode\"]||[]:[],isMandatory:false,isClearable:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,\"nusercode\");}})):\"\");};export default injectIntl(AddEmailConfig);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/mail/emailconfig/AddEmailConfig.jsx"],"names":["React","injectIntl","Row","Col","CustomSwitch","FormSelectSearch","transactionStatus","FormMultiSelect","AddEmailConfig","props","intl","formatMessage","id","selectedRecord","emailHost","operation","event","onComboChange","emailScreen","emailTemplate","formControls","emailQueryList","onInputOnChange","YES","users"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\r\n\r\nconst AddEmailConfig = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_HOSTNAME\" })}\r\n                    name={\"nemailhostcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"nemailhostcode\"] ? props.selectedRecord[\"nemailhostcode\"] : \"\"}\r\n                    options={props.emailHost}\r\n                    optionId=\"nemailhostcode\"\r\n                    optionValue=\"shostname\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    isDisabled={props.operation=== \"update\"? true : false}\r\n                    onChange={(event) => props.onComboChange(event, \"nemailhostcode\")}\r\n                />\r\n         \r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                    name={\"nemailscreencode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"nemailscreencode\"] ? props.selectedRecord[\"nemailscreencode\"] : \"\"}\r\n                    options={props.emailScreen}\r\n                    optionId=\"nemailscreencode\"\r\n                    optionValue=\"sscreenname\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"nemailscreencode\")}\r\n                />\r\n           \r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                    name={\"nemailtemplatecode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"nemailtemplatecode\"] ? props.selectedRecord[\"nemailtemplatecode\"] : \"\"}\r\n                    options={props.emailTemplate}\r\n                    optionId=\"nemailtemplatecode\"\r\n                    optionValue=\"stemplatename\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"nemailtemplatecode\")}\r\n                />\r\n           \r\n            {/* <Col md={12}>\r\n            <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_ACTIONTYPE\" })}\r\n                            name={\"ntranscode\"} \r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            value={props.selectedRecord[\"nactiontype\"] ? props.selectedRecord[\"nactiontype\"] : \"\"}\r\n                            options={props.actionType}\r\n                            optionId=\"nactiontype\"\r\n                            optionValue=\"stransdisplaystatus\"\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            as={\"select\"}\r\n                            onChange={(event) => props.onComboChange(event, \"nactiontype\")} \r\n                        />\r\n            </Col> */}\r\n            {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                    name={\"ntranscode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"nformcode\"] ? props.selectedRecord[\"nformcode\"] : \"\"}\r\n                    options={props.formName}\r\n                    optionId=\"nformcode\"\r\n                    optionValue=\"sformname\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"nformcode\")}\r\n                />\r\n            </Col> */}\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_CONTROLNAME\" })}\r\n                    name={\"ncontrolcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"ncontrolcode\"] ? props.selectedRecord[\"ncontrolcode\"] : \"\"}\r\n                    options={props.formControls}\r\n                    optionId=\"ncontrolcode\"\r\n                    optionValue=\"scontrolname\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ncontrolcode\")}\r\n                />\r\n           \r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_EMAILQUERY\" })}\r\n                    name={\"nemailuserquerycode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord[\"nemailuserquerycode\"] ? props.selectedRecord[\"nemailuserquerycode\"] : \"\"}\r\n                    options={props.emailQueryList}\r\n                    optionId=\"nemailuserquerycode\"\r\n                    optionValue=\"squery\"\r\n                    isMandatory={false}\r\n                    isMulti={false}\r\n                    isClearable={true}\r\n                    isSearchable={true}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"nemailuserquerycode\")}\r\n                />\r\n\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_MAILENABLE\" })}\r\n                    type=\"switch\"\r\n                    name={\"nenableemail\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_MAILENABLE\" })}\r\n                    defaultValue={props.selectedRecord[\"nenableemail\"] ? props.selectedRecord[\"nenableemail\"] === transactionStatus.YES ? true : false : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord[\"nenableemail\"] ? props.selectedRecord[\"nenableemail\"] === transactionStatus.YES ? true : false : false}\r\n                    disabled={false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n            {props.operation === 'create' ?\r\n                <Col md={12}>\r\n                    <FormMultiSelect\r\n                        name={\"nusercode\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                        options={props.users || []}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                  \r\n                        optionId=\"nusercode\"\r\n                        optionValue=\"semail\"\r\n                        value={props.selectedRecord[\"nusercode\"] ? props.selectedRecord[\"nusercode\"] || [] :[]}\r\n                        isMandatory={false}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, \"nusercode\")}\r\n                    />\r\n                </Col> : \"\"}\r\n\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddEmailConfig);"]},"metadata":{},"sourceType":"module"}