{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\project\\\\AddProjectMaster.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component'; // import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { injectIntl } from 'react-intl';\nimport { transactionStatus } from \"../../components/Enumeration\"; //ALPD-3566\n\nconst AddProjectMaster = props => {\n  //console.log('12', props.selectedRecord);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nprojecttypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.ProjectType,\n    value: props.selectedRecord[\"nprojecttypecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nprojecttypecode\"],\n    onChange: event => props.onComboChange(event, \"nprojecttypecode\", 3),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sprojecttitle\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTTITLE\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTTITLE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sprojecttitle\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    isMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTCODE\"\n    }),\n    name: \"sprojectcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTCODE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sprojectcode\"] : \"\",\n    isMandatory: parseInt(props.settings[31]) != 3 ? true : false,\n    required: true,\n    maxLength: \"100\",\n    readOnly: parseInt(props.settings[31]) === transactionStatus.YES ? true : false,\n    isDisabled: parseInt(props.settings[31]) === transactionStatus.YES ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTNAME\"\n    }),\n    name: \"sprojectname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sprojectname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sprojectdescription\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTDESCRIPTION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTDESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sprojectdescription\"] === \"-\" ? \"\" : props.selectedRecord[\"sprojectdescription\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch //  formLabel={props.intl.formatMessage({ id: \"\"+props.StudyDirector.suserrolename })}\n  , {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_ROLE\"\n    }),\n    isSearchable: true,\n    name: \"nuserrolecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Userrole,\n    value: props.selectedRecord[\"nuserrolecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nuserrolecode\"],\n    onChange: event => props.onComboChange(event, \"nuserrolecode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch // formLabel={props.intl.formatMessage({ id: \"\"+props.StudyDirector.suserrolename })}\n  , {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INCHARGE\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Users,\n    value: props.selectedRecord[\"nusercode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nusercode\"],\n    onChange: event => props.onComboChange(event, \"nusercode\", 3),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_RFWID\"\n    }),\n    name: \"srfwid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_RFWID\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"srfwid\"] === \"-\" ? \"\" : props.selectedRecord[\"srfwid\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"drfwdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RFWDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"drfwdate\"] //    dateFormat={props.userInfo.ssitedate}\n    ,\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: false,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"drfwdate\", date) //    value={props.selectedRecord[\"drfwdate\"]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"nprojecttypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.ClientCategory,\n    value: props.selectedRecord[\"nclientcatcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nclientcatcode\"],\n    onChange: event => props.onComboChange(event, \"nclientcatcode\", 4),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENT\"\n    }),\n    isSearchable: true,\n    name: \"nprojecttypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Client,\n    value: props.selectedRecord[\"nclientcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nclientcode\"],\n    onChange: event => props.onComboChange(event, \"nclientcode\", 5),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dprojectstartdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_STARTDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dprojectstartdate\"] //      dateFormat={props.userInfo.ssitedate}\n    ,\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: true,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dprojectstartdate\", date),\n    value: props.selectedRecord[\"dprojectstartdate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nprojectduration\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTDURATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTDURATION\"\n    }),\n    className: \"form-control\",\n    value: props.selectedRecord[\"nprojectduration\"] && typeof props.selectedRecord[\"nprojectduration\"] === \"number\" ? props.selectedRecord[\"nprojectduration\"].toString() : props.selectedRecord[\"nprojectduration\"],\n    onChange: value => props.onNumericInputChange(value, \"nprojectduration\"),\n    maxLength: 2,\n    isMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DURATIONPERIOD\"\n    }),\n    isSearchable: true,\n    name: \"nperiodcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.PeriodByControl,\n    value: props.selectedRecord[\"nperiodcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nperiodcode\"],\n    onChange: event => props.onComboChange(event, \"nperiodcode\", 3),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dexpectcompletiondate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EXPECTEDPROJECTCOMPLETIONDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dexpectcompletiondate\"] //    dateFormat={props.userInfo.ssitedate}\n    ,\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: false,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dexpectcompletiondate\", date) //    value={props.selectedRecord[\"drfwdate\"]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(AddProjectMaster);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/project/AddProjectMaster.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","FormTextarea","DateTimePicker","injectIntl","transactionStatus","AddProjectMaster","props","intl","formatMessage","id","ProjectType","selectedRecord","event","onComboChange","onInputOnChange","parseInt","settings","YES","Userrole","Users","userInfo","ssitedate","currentTime","date","handleDateChange","ClientCategory","Client","toString","value","onNumericInputChange","PeriodByControl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n// import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\n\r\n//ALPD-3566\r\nconst AddProjectMaster = (props) => {\r\n    //console.log('12', props.selectedRecord);\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ProjectType}\r\n                            value={props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojecttypecode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sprojecttitle\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sprojecttitle\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isMandatory={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            name={\"sprojectcode\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sprojectcode\"] : \"\"}\r\n                            isMandatory={parseInt(props.settings[31])!=3?true:false}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                            readOnly={parseInt(props.settings[31])===transactionStatus.YES?true:false}\r\n                            isDisabled={parseInt(props.settings[31])===transactionStatus.YES?true:false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTNAME\" })}\r\n                            name={\"sprojectname\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTNAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sprojectname\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sprojectdescription\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTDESCRIPTION\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTDESCRIPTION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sprojectdescription\"] === \"-\" ? \"\" : props.selectedRecord[\"sprojectdescription\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            //  formLabel={props.intl.formatMessage({ id: \"\"+props.StudyDirector.suserrolename })}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_ROLE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nuserrolecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Userrole}\r\n                            value={props.selectedRecord[\"nuserrolecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nuserrolecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nuserrolecode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            // formLabel={props.intl.formatMessage({ id: \"\"+props.StudyDirector.suserrolename })}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nusercode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Users}\r\n                            value={props.selectedRecord[\"nusercode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nusercode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nusercode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_RFWID\" })}\r\n                            name={\"srfwid\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_RFWID\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"srfwid\"] === \"-\" ? \"\" : props.selectedRecord[\"srfwid\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"100\"}\r\n                \r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"drfwdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"drfwdate\"]}\r\n                            //    dateFormat={props.userInfo.ssitedate}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"drfwdate\", date)}\r\n                      //    value={props.selectedRecord[\"drfwdate\"]}\r\n\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n            <Col md={6}>\r\n                <Row>\r\n                <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ClientCategory}\r\n                            value={props.selectedRecord[\"nclientcatcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcatcode\", 4)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENT\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Client}\r\n                            value={props.selectedRecord[\"nclientcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcode\", 5)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    {/* <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_QUOTATIONNO\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={true}\r\n                            options={props.QuotationNo}\r\n                            value={props.selectedRecord[\"nquotationcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nquotationcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nquotationcode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col> */}\r\n\r\n                  \r\n\r\n                    {/* <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_TEAMMEMBERS\" })}\r\n                            isSearchable={true}\r\n                            name={\"nteammembercode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.TeamMembers}\r\n                            value={props.selectedRecord[\"nteammembercode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nteammembercode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nteammembercode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col> */}\r\n\r\n                    \r\n\r\n\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"dprojectstartdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_STARTDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dprojectstartdate\"]}\r\n                            //      dateFormat={props.userInfo.ssitedate}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dprojectstartdate\", date)}\r\n                            value={props.selectedRecord[\"dprojectstartdate\"]}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    \r\n                    \r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n\r\n                            name={\"nprojectduration\"}\r\n                            type=\"text\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTDURATION\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTDURATION\" })}\r\n                            className=\"form-control\"\r\n                            value={props.selectedRecord[\"nprojectduration\"] && typeof props.selectedRecord[\"nprojectduration\"] === \"number\" ?\r\n                            props.selectedRecord[\"nprojectduration\"].toString() : props.selectedRecord[\"nprojectduration\"]}\r\n                            onChange={value => props.onNumericInputChange(value, \"nprojectduration\")}\r\n                            maxLength={2}\r\n                            isMandatory={true}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_DURATIONPERIOD\" })}\r\n                            isSearchable={true}\r\n                            name={\"nperiodcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.PeriodByControl}\r\n                            value={props.selectedRecord[\"nperiodcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nperiodcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nperiodcode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"dexpectcompletiondate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_EXPECTEDPROJECTCOMPLETIONDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dexpectcompletiondate\"]}\r\n                            //    dateFormat={props.userInfo.ssitedate}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dexpectcompletiondate\", date)}\r\n                      //    value={props.selectedRecord[\"drfwdate\"]}\r\n\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default injectIntl(AddProjectMaster);"]},"metadata":{},"sourceType":"module"}