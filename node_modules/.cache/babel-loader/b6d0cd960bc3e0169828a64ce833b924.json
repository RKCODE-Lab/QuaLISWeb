{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyForDisplay = exports.mongoFormatOp2 = exports.mongoFormatOp1 = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar Widgets = _interopRequireWildcard(require(\"../components/widgets\"));\n\nvar Operators = _interopRequireWildcard(require(\"../components/operators\"));\n\nvar _export = require(\"../utils/export\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _default2 = require(\"../config/default\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar VanillaBooleanWidget = Widgets.VanillaBooleanWidget,\n    VanillaTextWidget = Widgets.VanillaTextWidget,\n    VanillaTextAreaWidget = Widgets.VanillaTextAreaWidget,\n    VanillaDateWidget = Widgets.VanillaDateWidget,\n    VanillaTimeWidget = Widgets.VanillaTimeWidget,\n    VanillaDateTimeWidget = Widgets.VanillaDateTimeWidget,\n    VanillaMultiSelectWidget = Widgets.VanillaMultiSelectWidget,\n    VanillaSelectWidget = Widgets.VanillaSelectWidget,\n    VanillaNumberWidget = Widgets.VanillaNumberWidget,\n    VanillaSliderWidget = Widgets.VanillaSliderWidget,\n    ValueFieldWidget = Widgets.ValueFieldWidget,\n    FuncWidget = Widgets.FuncWidget;\nvar ProximityOperator = Operators.ProximityOperator; //----------------------------  conjunctions\n\nvar conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: function spelFormatConj(children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      return children.size > 1 ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\") : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: function spelFormatConj(children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      return children.size > 1 ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\") : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  }\n}; //----------------------------  operators\n// helpers for mongo format\n\nvar mongoFormatOp1 = function mongoFormatOp1(mop, mc, not, field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  var mv = mc(value, fieldDef);\n  if (mv === undefined) return undefined;\n\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, {\n      \"$ne\": mv\n    }); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, mv)\n    }) : {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, [$field, mv])\n    };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, mv); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (0, _defineProperty2[\"default\"])({}, mop, mv)) : (0, _defineProperty2[\"default\"])({}, mop, [$field, mv]);\n  }\n};\n\nexports.mongoFormatOp1 = mongoFormatOp1;\n\nvar mongoFormatOp2 = function mongoFormatOp2(mops, not, field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n\n  if (not) {\n    var _$not3;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (_$not3 = {}, (0, _defineProperty2[\"default\"])(_$not3, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_$not3, mops[1], values[1]), _$not3)\n    }) : {\n      \"$not\": {\n        \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n      }\n    };\n  } else {\n    var _field2;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (_field2 = {}, (0, _defineProperty2[\"default\"])(_field2, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_field2, mops[1], values[1]), _field2)) : {\n      \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n    };\n  }\n};\n\nexports.mongoFormatOp2 = mongoFormatOp2;\nvar operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      var opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"NOT \".concat(field) : \"\".concat(field);else return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"\".concat(field) : \"NOT \".concat(field);else return \"\".concat(field, \" \").concat(opDef.label, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"!=\"\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\"\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\"\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\"\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, true),\n    valueSources: [\"value\"]\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? \"^\" + (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) + \"$\" : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      var valFrom = values[0];\n      var valTo = values[1];\n      return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    }\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" NOT BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"(\".concat(field, \" < \").concat(valFrom, \" || \").concat(field, \" > \").concat(valTo, \")\");\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      var valFrom = values[0];\n      var valTo = values[1];\n      return \"(\".concat(field, \" < \").concat(valFrom, \" || \").concat(field, \" > \").concat(valTo, \")\");\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"between\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    }\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS EMPTY\") : \"!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") = \").concat(empty);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      //tip: is empty or null\n      return \"\".concat(field, \" <= ''\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!\"\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT EMPTY\") : \"!!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") <> \").concat(empty);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      //tip: is not empty and not null\n      return \"\".concat(field, \" > ''\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\"\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NULL\") : \"!\".concat(field);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      return \"\".concat(field, \" == null\");\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"==\"\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT NULL\") : \"!!\".concat(field);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      return \"\".concat(field, \" != null\");\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\"\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return \"\".concat(field, \" != \").concat(value);\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\"\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    spelOp: \"$contains\",\n    // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" NOT IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_any_in\"\n  },\n  //todo: multiselect_contains - for SpEL it would be `.containsAll`\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\") return \"\".concat(field, \" \").concat(opStr, \" [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" \").concat(opStr, \" \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" = '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: function jsonLogic(field, op, vals) {\n      return {\n        // it's not \"equals\", but \"includes\" operator - just for example\n        \"all\": [field, {\n          \"in\": [{\n            \"var\": \"\"\n          }, vals]\n        }]\n      };\n    },\n    elasticSearchQueryType: \"term\"\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" != [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" != \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" != '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_equals\"\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [{\n      label: \"Word 1\",\n      placeholder: \"Enter first word\"\n    }, {\n      label: \"Word 2\",\n      placeholder: \"Enter second word\"\n    }],\n    textSeparators: [//'Word 1',\n      //'Word 2'\n    ],\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n      var prox = operatorOptions.get(\"proximity\");\n      return \"\".concat(field, \" \").concat(val1, \" NEAR/\").concat(prox, \" \").concat(val2);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n\n      var aVal1 = _export.SqlString.trim(val1);\n\n      var aVal2 = _export.SqlString.trim(val2);\n\n      var prox = operatorOptions.get(\"proximity\");\n      return \"CONTAINS(\".concat(field, \", 'NEAR((\").concat(aVal1, \", \").concat(aVal2, \"), \").concat(prox, \")')\");\n    },\n    mongoFormatOp: undefined,\n    // not supported\n    jsonLogic: undefined,\n    // not supported\n    options: {\n      optionLabel: \"Near\",\n      // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\",\n      // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\",\n      // placeholder for \"near\" selectbox\n      factory: function factory(props) {\n        return /*#__PURE__*/_react[\"default\"].createElement(ProximityOperator, props);\n      },\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      }\n    }\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: function spelFormatOp(filteredSize) {\n      return \"\".concat(filteredSize, \" > 0\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return 0;\n    }, false)\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: function spelFormatOp(filteredSize, op, fullSize) {\n      return \"\".concat(filteredSize, \" == \").concat(fullSize);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false)\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: function spelFormatOp(filteredSize) {\n      return \"\".concat(filteredSize, \" == 0\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return 0;\n    }, false)\n  }\n}; //----------------------------  widgets\n\nvar stringifyForDisplay = function stringifyForDisplay(v) {\n  return v == null ? \"NULL\" : v.toString();\n};\n\nexports.stringifyForDisplay = stringifyForDisplay;\nvar widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        var regex;\n\n        if (op == \"starts_with\") {\n          regex = \"(?s)^\".concat((0, _stuff.escapeRegExp)(val), \".*\");\n        } else if (op == \"ends_with\") {\n          regex = \"(?s).*\".concat((0, _stuff.escapeRegExp)(val), \"$\");\n        } else {\n          // op == 'like'\n          regex = \"(?s).*\".concat((0, _stuff.escapeRegExp)(val), \".*\"); //tip: can use (?sui) for case-insensitive\n        }\n\n        return (0, _export.spelEscape)(regex);\n      } else {\n        return (0, _export.spelEscape)(val);\n      }\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextAreaWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    },\n    fullWidth: true\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaNumberWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [{\n      label: \"Number from\",\n      placeholder: \"Enter number from\"\n    }, {\n      label: \"Number to\",\n      placeholder: \"Enter number to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef) {\n      var isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return (0, _export.spelEscape)(val, isFloat);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSliderWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSelectWidget, props);\n    },\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var valLabel = (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaMultiSelectWidget, props);\n    },\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function formatValue(vals, fieldDef, wgtDef, isForDisplay) {\n      var valsLabels = vals.map(function (v) {\n        return (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v);\n      });\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function sqlFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(function (v) {\n        return _export.SqlString.escape(v);\n      });\n    },\n    spelFormatValue: function spelFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      var isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      var res = (0, _export.spelEscape)(vals); // inline list\n\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = (0, _export.spelFixList)(res);\n      }\n\n      return res;\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateWidget, props);\n    },\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [{\n      label: \"Date from\",\n      placeholder: \"Enter date from\"\n    }, {\n      label: \"Date to\",\n      placeholder: \"Enter date to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"new java.text.SimpleDateFormat('yyyy-MM-dd').parse('\".concat(dateVal.format(\"YYYY-MM-DD\"), \"')\");\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [{\n      label: \"Time from\",\n      placeholder: \"Enter time from\"\n    }, {\n      label: \"Time to\",\n      placeholder: \"Enter time to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"T(java.time.LocalTime).parse('\".concat(dateVal.format(\"HH:mm:ss\"), \"')\"); //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function toJS(val, fieldSettings) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    }\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [{\n      label: \"Datetime from\",\n      placeholder: \"Enter datetime from\"\n    }, {\n      label: \"Datetime to\",\n      placeholder: \"Enter datetime to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('\".concat(dateVal.format(\"YYYY-MM-DD HH:mm:ss\"), \"')\");\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  \"boolean\": {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaBooleanWidget, props);\n    },\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? val ? \"Yes\" : \"No\" : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return (0, _export.spelEscape)(val);\n    },\n    defaultValue: false,\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ValueFieldWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) {\n      return isForDisplay ? rightFieldDef.label || val : val;\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef, rightFieldDef) {\n      return val;\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(FuncWidget, props);\n    },\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {//showSearch: true\n    }\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val === \"\" ? null : val);\n    },\n    spelImportValue: function spelImportValue(val) {\n      return [val.value, []];\n    },\n    factory: function factory(_ref12) {\n      var value = _ref12.value,\n          setValue = _ref12.setValue;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"text\",\n        value: value || \"\",\n        onChange: function onChange(e) {\n          return setValue(e.target.value);\n        }\n      });\n    }\n  }\n}; //----------------------------  types\n\nvar types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\"equal\", \"not_equal\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"proximity\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      textarea: {\n        operators: [\"equal\", \"not_equal\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      field: {\n        operators: [//unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n        \"equal\", \"not_equal\", \"proximity\" //can exclude if you want\n        ]\n      }\n    }\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      },\n      slider: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\"select_equals\", \"select_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        }\n      },\n      multiselect: {\n        operators: [\"select_any_in\", \"select_not_any_in\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\"multiselect_equals\", \"multiselect_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  \"boolean\": {\n    defaultOperator: \"equal\",\n    widgets: {\n      \"boolean\": {\n        operators: [\"equal\", \"not_equal\", \"is_null\", \"is_not_null\"],\n        widgetProps: {//you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\"equal\", \"not_equal\"]\n      }\n    }\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [// w/o operand\n        \"some\", \"all\", \"none\", // w/ operand - count\n        \"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\"],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  }\n}; //----------------------------  settings\n\nvar settings = _objectSpread(_objectSpread({}, _default2.settings), {}, {\n  formatField: function formatField(field, parts, label2, fieldDefinition, config, isForDisplay) {\n    if (isForDisplay) return label2;else return field;\n  },\n  formatSpelField: function formatSpelField(field, parentField, parts, partsExt, fieldDefinition, config) {\n    var fieldName = partsExt.map(function (_ref13, ind) {\n      var key = _ref13.key,\n          parent = _ref13.parent;\n\n      if (ind == 0) {\n        if (parent == \"[map]\") return \"#this[\".concat((0, _export.spelEscape)(key), \"]\");else if (parent == \"[class]\") return key;else return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\") return \"[\".concat((0, _export.spelEscape)(key), \"]\");else if (parent == \"class\" || parent == \"[class]\") return \".\".concat(key);else return \".\".concat(key);\n      }\n    }).join(\"\");\n\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n\n    return fieldName;\n  },\n  sqlFormatReverse: function sqlFormatReverse(q) {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: function spelFormatReverse(q) {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: function formatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay) return \"NOT (\" + q + \")\";else return \"!(\" + q + \")\";\n  },\n  formatAggr: function formatAggr(whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) {\n    var labelForFormat = opDef.labelForFormat,\n        cardinality = opDef.cardinality;\n\n    if (cardinality == 0) {\n      var cond = whereStr ? \" HAVE \".concat(whereStr) : \"\";\n      return \"\".concat(labelForFormat, \" OF \").concat(aggrField).concat(cond);\n    } else if (cardinality == undefined || cardinality == 1) {\n      var _cond = whereStr ? \" WHERE \".concat(whereStr) : \"\";\n\n      return \"COUNT OF \".concat(aggrField).concat(_cond, \" \").concat(labelForFormat, \" \").concat(value);\n    } else if (cardinality == 2) {\n      var _cond2 = whereStr ? \" WHERE \".concat(whereStr) : \"\";\n\n      var valFrom = value.first();\n      var valTo = value.get(1);\n      return \"COUNT OF \".concat(aggrField).concat(_cond2, \" \").concat(labelForFormat, \" \").concat(valFrom, \" AND \").concat(valTo);\n    }\n  },\n  canCompareFieldWithField: function canCompareFieldWithField(leftField, leftFieldConfig, rightField, rightFieldConfig) {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5\n}); //----------------------------\n\n\nvar _default = {\n  conjunctions: conjunctions,\n  operators: operators,\n  widgets: widgets,\n  types: types,\n  settings: settings\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/config/basic.js"],"names":["_interopRequireDefault","require","_typeof","Object","defineProperty","exports","value","stringifyForDisplay","mongoFormatOp2","mongoFormatOp1","_defineProperty2","_react","Widgets","_interopRequireWildcard","Operators","_export","_stuff","_moment","_default2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","VanillaBooleanWidget","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaMultiSelectWidget","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","ValueFieldWidget","FuncWidget","ProximityOperator","conjunctions","AND","label","mongoConj","jsonLogicConj","sqlConj","spelConj","spelConjs","reversedConj","formatConj","children","conj","not","isForDisplay","size","join","first","sqlFormatConj","spelFormatConj","omitBrackets","OR","mop","mc","field","_op","useExpr","valueSrc","valueType","opDef","operatorOptions","fieldDef","$field","startsWith","mv","undefined","mops","values","valueSrcs","valueTypes","_$not3","_field2","operators","equal","labelForFormat","sqlOp","spelOp","spelOps","reversedOp","formatOp","op","opStr","concat","mongoFormatOp","bind","v","jsonLogic","elasticSearchQueryType","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","escapeRegExp","_jsonLogicIsRevArgs","valueSources","not_like","starts_with","ends_with","between","cardinality","valFrom","valTo","spelFormatOp","valueLabels","textSeparators","validateValues","type","not_between","is_empty","sqlFormatOp","empty","sqlEmptyValue","mongoEmptyValue","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_equals","map","SqlString","trim","jsonLogic2","vals","multiselect_not_equals","proximity","placeholder","val1","val2","prox","aVal1","aVal2","options","optionLabel","optionTextBefore","optionPlaceholder","factory","props","createElement","minProximity","maxProximity","defaults","some","filteredSize","all","fullSize","none","toString","widgets","text","jsType","valueLabel","valuePlaceholder","formatValue","val","wgtDef","JSON","stringify","spelFormatValue","regex","spelEscape","sqlFormatValue","escapeLike","escape","toJS","fieldSettings","mongoFormatValue","textarea","fullWidth","number","isFloat","step","Number","isInteger","slider","select","valLabel","getTitleInListValues","listValues","asyncListValues","multiselect","valsLabels","isCallable","res","spelFixList","date","dateFormat","valueFormat","useKeyboard","dateVal","format","toDate","isValid","time","timeFormat","use12Hours","elasticSearchFormatValue","queryType","operator","fieldName","script","params","min","max","datetime","labelYes","labelNo","defaultValue","rightFieldDef","customProps","showSearch","func","case_value","spelImportValue","_ref12","setValue","onChange","e","types","defaultOperator","mainWidget","widgetProps","opProps","settings","formatField","parts","label2","fieldDefinition","config","formatSpelField","parentField","partsExt","_ref13","ind","parent","isSpelVariable","sqlFormatReverse","q","spelFormatReverse","formatReverse","operatorDefinition","revOperatorDefinition","formatAggr","whereStr","aggrField","aggrFieldDef","cond","_cond","_cond2","canCompareFieldWithField","leftField","leftFieldConfig","rightField","rightFieldConfig","valueSourcesInfo","widget","customFieldSelectProps","defaultSliderWidth","defaultSelectWidth","defaultSearchWidth","defaultMaxRows","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyForDisplay = exports.mongoFormatOp2 = exports.mongoFormatOp1 = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar Widgets = _interopRequireWildcard(require(\"../components/widgets\"));\n\nvar Operators = _interopRequireWildcard(require(\"../components/operators\"));\n\nvar _export = require(\"../utils/export\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _default2 = require(\"../config/default\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar VanillaBooleanWidget = Widgets.VanillaBooleanWidget,\n    VanillaTextWidget = Widgets.VanillaTextWidget,\n    VanillaTextAreaWidget = Widgets.VanillaTextAreaWidget,\n    VanillaDateWidget = Widgets.VanillaDateWidget,\n    VanillaTimeWidget = Widgets.VanillaTimeWidget,\n    VanillaDateTimeWidget = Widgets.VanillaDateTimeWidget,\n    VanillaMultiSelectWidget = Widgets.VanillaMultiSelectWidget,\n    VanillaSelectWidget = Widgets.VanillaSelectWidget,\n    VanillaNumberWidget = Widgets.VanillaNumberWidget,\n    VanillaSliderWidget = Widgets.VanillaSliderWidget,\n    ValueFieldWidget = Widgets.ValueFieldWidget,\n    FuncWidget = Widgets.FuncWidget;\nvar ProximityOperator = Operators.ProximityOperator; //----------------------------  conjunctions\n\nvar conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: function spelFormatConj(children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      return children.size > 1 ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\") : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: function spelFormatConj(children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      return children.size > 1 ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\") : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  }\n}; //----------------------------  operators\n// helpers for mongo format\n\nvar mongoFormatOp1 = function mongoFormatOp1(mop, mc, not, field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  var mv = mc(value, fieldDef);\n  if (mv === undefined) return undefined;\n\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, {\n      \"$ne\": mv\n    }); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, mv)\n    }) : {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, [$field, mv])\n    };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, mv); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (0, _defineProperty2[\"default\"])({}, mop, mv)) : (0, _defineProperty2[\"default\"])({}, mop, [$field, mv]);\n  }\n};\n\nexports.mongoFormatOp1 = mongoFormatOp1;\n\nvar mongoFormatOp2 = function mongoFormatOp2(mops, not, field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n\n  if (not) {\n    var _$not3;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (_$not3 = {}, (0, _defineProperty2[\"default\"])(_$not3, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_$not3, mops[1], values[1]), _$not3)\n    }) : {\n      \"$not\": {\n        \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n      }\n    };\n  } else {\n    var _field2;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (_field2 = {}, (0, _defineProperty2[\"default\"])(_field2, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_field2, mops[1], values[1]), _field2)) : {\n      \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n    };\n  }\n};\n\nexports.mongoFormatOp2 = mongoFormatOp2;\nvar operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      var opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"NOT \".concat(field) : \"\".concat(field);else return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"\".concat(field) : \"NOT \".concat(field);else return \"\".concat(field, \" \").concat(opDef.label, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"!=\"\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\"\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\"\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\"\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, true),\n    valueSources: [\"value\"]\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? \"^\" + (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) + \"$\" : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      var valFrom = values[0];\n      var valTo = values[1];\n      return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    }\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" NOT BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"(\".concat(field, \" < \").concat(valFrom, \" || \").concat(field, \" > \").concat(valTo, \")\");\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      var valFrom = values[0];\n      var valTo = values[1];\n      return \"(\".concat(field, \" < \").concat(valFrom, \" || \").concat(field, \" > \").concat(valTo, \")\");\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"between\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    }\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS EMPTY\") : \"!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") = \").concat(empty);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      //tip: is empty or null\n      return \"\".concat(field, \" <= ''\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!\"\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT EMPTY\") : \"!!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") <> \").concat(empty);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      //tip: is not empty and not null\n      return \"\".concat(field, \" > ''\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\"\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NULL\") : \"!\".concat(field);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      return \"\".concat(field, \" == null\");\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"==\"\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT NULL\") : \"!!\".concat(field);\n    },\n    spelFormatOp: function spelFormatOp(field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) {\n      return \"\".concat(field, \" != null\");\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\"\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return \"\".concat(field, \" != \").concat(value);\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\"\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    spelOp: \"$contains\",\n    // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" NOT IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_any_in\"\n  },\n  //todo: multiselect_contains - for SpEL it would be `.containsAll`\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\") return \"\".concat(field, \" \").concat(opStr, \" [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" \").concat(opStr, \" \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" = '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: function jsonLogic(field, op, vals) {\n      return {\n        // it's not \"equals\", but \"includes\" operator - just for example\n        \"all\": [field, {\n          \"in\": [{\n            \"var\": \"\"\n          }, vals]\n        }]\n      };\n    },\n    elasticSearchQueryType: \"term\"\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" != [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" != \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" != '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_equals\"\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [{\n      label: \"Word 1\",\n      placeholder: \"Enter first word\"\n    }, {\n      label: \"Word 2\",\n      placeholder: \"Enter second word\"\n    }],\n    textSeparators: [//'Word 1',\n      //'Word 2'\n    ],\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n      var prox = operatorOptions.get(\"proximity\");\n      return \"\".concat(field, \" \").concat(val1, \" NEAR/\").concat(prox, \" \").concat(val2);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n\n      var aVal1 = _export.SqlString.trim(val1);\n\n      var aVal2 = _export.SqlString.trim(val2);\n\n      var prox = operatorOptions.get(\"proximity\");\n      return \"CONTAINS(\".concat(field, \", 'NEAR((\").concat(aVal1, \", \").concat(aVal2, \"), \").concat(prox, \")')\");\n    },\n    mongoFormatOp: undefined,\n    // not supported\n    jsonLogic: undefined,\n    // not supported\n    options: {\n      optionLabel: \"Near\",\n      // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\",\n      // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\",\n      // placeholder for \"near\" selectbox\n      factory: function factory(props) {\n        return /*#__PURE__*/_react[\"default\"].createElement(ProximityOperator, props);\n      },\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      }\n    }\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: function spelFormatOp(filteredSize) {\n      return \"\".concat(filteredSize, \" > 0\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return 0;\n    }, false)\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: function spelFormatOp(filteredSize, op, fullSize) {\n      return \"\".concat(filteredSize, \" == \").concat(fullSize);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false)\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: function spelFormatOp(filteredSize) {\n      return \"\".concat(filteredSize, \" == 0\");\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return 0;\n    }, false)\n  }\n}; //----------------------------  widgets\n\nvar stringifyForDisplay = function stringifyForDisplay(v) {\n  return v == null ? \"NULL\" : v.toString();\n};\n\nexports.stringifyForDisplay = stringifyForDisplay;\nvar widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        var regex;\n\n        if (op == \"starts_with\") {\n          regex = \"(?s)^\".concat((0, _stuff.escapeRegExp)(val), \".*\");\n        } else if (op == \"ends_with\") {\n          regex = \"(?s).*\".concat((0, _stuff.escapeRegExp)(val), \"$\");\n        } else {\n          // op == 'like'\n          regex = \"(?s).*\".concat((0, _stuff.escapeRegExp)(val), \".*\"); //tip: can use (?sui) for case-insensitive\n        }\n\n        return (0, _export.spelEscape)(regex);\n      } else {\n        return (0, _export.spelEscape)(val);\n      }\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextAreaWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    },\n    fullWidth: true\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaNumberWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [{\n      label: \"Number from\",\n      placeholder: \"Enter number from\"\n    }, {\n      label: \"Number to\",\n      placeholder: \"Enter number to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef) {\n      var isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return (0, _export.spelEscape)(val, isFloat);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSliderWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSelectWidget, props);\n    },\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var valLabel = (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaMultiSelectWidget, props);\n    },\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function formatValue(vals, fieldDef, wgtDef, isForDisplay) {\n      var valsLabels = vals.map(function (v) {\n        return (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v);\n      });\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function sqlFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(function (v) {\n        return _export.SqlString.escape(v);\n      });\n    },\n    spelFormatValue: function spelFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      var isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      var res = (0, _export.spelEscape)(vals); // inline list\n\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = (0, _export.spelFixList)(res);\n      }\n\n      return res;\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateWidget, props);\n    },\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [{\n      label: \"Date from\",\n      placeholder: \"Enter date from\"\n    }, {\n      label: \"Date to\",\n      placeholder: \"Enter date to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"new java.text.SimpleDateFormat('yyyy-MM-dd').parse('\".concat(dateVal.format(\"YYYY-MM-DD\"), \"')\");\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [{\n      label: \"Time from\",\n      placeholder: \"Enter time from\"\n    }, {\n      label: \"Time to\",\n      placeholder: \"Enter time to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"T(java.time.LocalTime).parse('\".concat(dateVal.format(\"HH:mm:ss\"), \"')\"); //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function toJS(val, fieldSettings) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    }\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [{\n      label: \"Datetime from\",\n      placeholder: \"Enter datetime from\"\n    }, {\n      label: \"Datetime to\",\n      placeholder: \"Enter datetime to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return \"new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('\".concat(dateVal.format(\"YYYY-MM-DD HH:mm:ss\"), \"')\");\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  \"boolean\": {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaBooleanWidget, props);\n    },\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? val ? \"Yes\" : \"No\" : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return (0, _export.spelEscape)(val);\n    },\n    defaultValue: false,\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ValueFieldWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) {\n      return isForDisplay ? rightFieldDef.label || val : val;\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef, rightFieldDef) {\n      return val;\n    },\n    spelFormatValue: function spelFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(FuncWidget, props);\n    },\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {//showSearch: true\n    }\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function spelFormatValue(val) {\n      return (0, _export.spelEscape)(val === \"\" ? null : val);\n    },\n    spelImportValue: function spelImportValue(val) {\n      return [val.value, []];\n    },\n    factory: function factory(_ref12) {\n      var value = _ref12.value,\n          setValue = _ref12.setValue;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"text\",\n        value: value || \"\",\n        onChange: function onChange(e) {\n          return setValue(e.target.value);\n        }\n      });\n    }\n  }\n}; //----------------------------  types\n\nvar types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\"equal\", \"not_equal\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"proximity\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      textarea: {\n        operators: [\"equal\", \"not_equal\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      field: {\n        operators: [//unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n        \"equal\", \"not_equal\", \"proximity\" //can exclude if you want\n        ]\n      }\n    }\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      },\n      slider: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\"select_equals\", \"select_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        }\n      },\n      multiselect: {\n        operators: [\"select_any_in\", \"select_not_any_in\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\"multiselect_equals\", \"multiselect_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  \"boolean\": {\n    defaultOperator: \"equal\",\n    widgets: {\n      \"boolean\": {\n        operators: [\"equal\", \"not_equal\", \"is_null\", \"is_not_null\"],\n        widgetProps: {//you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\"equal\", \"not_equal\"]\n      }\n    }\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [// w/o operand\n        \"some\", \"all\", \"none\", // w/ operand - count\n        \"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\"],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  }\n}; //----------------------------  settings\n\nvar settings = _objectSpread(_objectSpread({}, _default2.settings), {}, {\n  formatField: function formatField(field, parts, label2, fieldDefinition, config, isForDisplay) {\n    if (isForDisplay) return label2;else return field;\n  },\n  formatSpelField: function formatSpelField(field, parentField, parts, partsExt, fieldDefinition, config) {\n    var fieldName = partsExt.map(function (_ref13, ind) {\n      var key = _ref13.key,\n          parent = _ref13.parent;\n\n      if (ind == 0) {\n        if (parent == \"[map]\") return \"#this[\".concat((0, _export.spelEscape)(key), \"]\");else if (parent == \"[class]\") return key;else return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\") return \"[\".concat((0, _export.spelEscape)(key), \"]\");else if (parent == \"class\" || parent == \"[class]\") return \".\".concat(key);else return \".\".concat(key);\n      }\n    }).join(\"\");\n\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n\n    return fieldName;\n  },\n  sqlFormatReverse: function sqlFormatReverse(q) {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: function spelFormatReverse(q) {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: function formatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay) return \"NOT (\" + q + \")\";else return \"!(\" + q + \")\";\n  },\n  formatAggr: function formatAggr(whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) {\n    var labelForFormat = opDef.labelForFormat,\n        cardinality = opDef.cardinality;\n\n    if (cardinality == 0) {\n      var cond = whereStr ? \" HAVE \".concat(whereStr) : \"\";\n      return \"\".concat(labelForFormat, \" OF \").concat(aggrField).concat(cond);\n    } else if (cardinality == undefined || cardinality == 1) {\n      var _cond = whereStr ? \" WHERE \".concat(whereStr) : \"\";\n\n      return \"COUNT OF \".concat(aggrField).concat(_cond, \" \").concat(labelForFormat, \" \").concat(value);\n    } else if (cardinality == 2) {\n      var _cond2 = whereStr ? \" WHERE \".concat(whereStr) : \"\";\n\n      var valFrom = value.first();\n      var valTo = value.get(1);\n      return \"COUNT OF \".concat(aggrField).concat(_cond2, \" \").concat(labelForFormat, \" \").concat(valFrom, \" AND \").concat(valTo);\n    }\n  },\n  canCompareFieldWithField: function canCompareFieldWithField(leftField, leftFieldConfig, rightField, rightFieldConfig) {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5\n}); //----------------------------\n\n\nvar _default = {\n  conjunctions: conjunctions,\n  operators: operators,\n  widgets: widgets,\n  types: types,\n  settings: settings\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}