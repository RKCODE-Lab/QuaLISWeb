{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\InstrumentValidationTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { process } from '@progress/kendo-data-query';\n\nclass InstrumentValidationTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionDataState: {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      }\n    };\n  }\n\n  render() {\n    const addInstvalidationId = this.props.controlMap.has(\"AddInstrumentValidation\") && this.props.controlMap.get(\"AddInstrumentValidation\").ncontrolcode;\n    const instValidationColumnList = [{\n      \"idsName\": \"IDS_INSTRUMENTID\",\n      \"dataField\": \"sinstrumentid\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_VALIDATIONDATE\",\n      \"dataField\": \"dvalidationdate\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_VALIDATIONSTATUS\",\n      \"dataField\": \"nvalidationstatus\",\n      \"width\": \"150px\"\n    }];\n    const methodUrl = \"InstrumentValidation\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addinstrumentvalidtion\",\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addInstvalidationId) === -1,\n      onClick: () => this.props.getAvailableInstData(this.props.selectedSection, \"getInstrumentValidation\", \"InstrumentValidation\", \"IDS_INSTRUMENTVALIDATION\", this.props.userInfo, addInstvalidationId, this.props.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add InstrumentValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"instrumentvalidationkey\",\n      primaryKeyField: \"ninstrumentvalidationcode\",\n      data: this.props.InstrumentValidation,\n      dataResult: process(this.props.InstrumentValidation || [], this.state.sectionDataState),\n      dataState: this.state.sectionDataState,\n      dataStateChange: event => this.setState({\n        sectionDataState: event.dataState\n      }),\n      extractedColumnList: instValidationColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      deleteRecord: this.props.deleteRecord,\n      onSwitchChange: this.props.defaultRecord,\n      pageable: true,\n      scrollable: 'scrollable' //gridHeight = {'600px'}\n      ,\n      isActionRequired: true,\n      deleteParam: {\n        operation: \"delete\",\n        methodUrl,\n        screenName: this.props.screenName\n      },\n      methodUrl: methodUrl,\n      switchParam: {\n        operation: \"Default\",\n        methodUrl,\n        screenName: this.props.screenName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.InstrumentValidation !== previousProps.InstrumentValidation) {\n      let {\n        sectionDataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        sectionDataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        sectionDataState\n      });\n    }\n  }\n\n}\n\n; // export default connect( {\n// getInstrumentValidationStatus\n// }\n// )(injectIntl(InstrumentValidationTab));\n\nexport default injectIntl(InstrumentValidationTab);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/InstrumentValidationTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","transactionStatus","process","InstrumentValidationTab","Component","constructor","props","state","sectionDataState","skip","take","settings","parseInt","render","addInstvalidationId","controlMap","has","get","ncontrolcode","instValidationColumnList","methodUrl","userRoleControlRights","indexOf","getAvailableInstData","selectedSection","userInfo","selectedRecord","InstrumentValidation","event","setState","dataState","inputParam","deleteRecord","defaultRecord","operation","screenName","componentDidUpdate","previousProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nclass  InstrumentValidationTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        sectionDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n\r\n\r\n    render(){\r\n         const addInstvalidationId = this.props.controlMap.has(\"AddInstrumentValidation\") && this.props.controlMap.get(\"AddInstrumentValidation\").ncontrolcode;\r\n        const instValidationColumnList = [\r\n            {\"idsName\":\"IDS_INSTRUMENTID\",\"dataField\":\"sinstrumentid\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_VALIDATIONDATE\",\"dataField\":\"dvalidationdate\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_VALIDATIONSTATUS\",\"dataField\":\"nvalidationstatus\",\"width\":\"150px\"\r\n           \r\n        }\r\n        ];\r\n         const methodUrl = \"InstrumentValidation\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addinstrumentvalidtion\" className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addInstvalidationId) === -1}\r\n                         onClick={()=>this.props.getAvailableInstData(this.props.selectedSection, \r\n                                \"getInstrumentValidation\", \"InstrumentValidation\", \"IDS_INSTRUMENTVALIDATION\", this.props.userInfo, addInstvalidationId,this.props.selectedRecord)}\r\n                            >\r\n                            <FontAwesomeIcon icon = { faPlus } /> { }\r\n                            <FormattedMessage id=\"IDS_ADD\" defaultMessage=\"Add InstrumentValidation\"></FormattedMessage>\r\n                        </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid \r\n                      key=\"instrumentvalidationkey\"\r\n                      primaryKeyField = \"ninstrumentvalidationcode\"\r\n                      data = {this.props.InstrumentValidation}\r\n                      dataResult = {process(this.props.InstrumentValidation||[],this.state.sectionDataState)}\r\n                      dataState = {this.state.sectionDataState}\r\n                       dataStateChange = {(event) => this.setState({ sectionDataState: event.dataState })}\r\n                      extractedColumnList = {instValidationColumnList}\r\n                       controlMap = {this.props.controlMap}\r\n                       userRoleControlRights={this.props.userRoleControlRights}\r\n                       inputParam = {this.props.inputParam}\r\n                       userInfo = {this.props.userInfo}\r\n                      deleteRecord = {this.props.deleteRecord}\r\n                      onSwitchChange = {this.props.defaultRecord}\r\n                       pageable={true}\r\n                       scrollable={'scrollable'}\r\n                       //gridHeight = {'600px'}\r\n                       isActionRequired={true}\r\n                      deleteParam={{operation:\"delete\", methodUrl,screenName:this.props.screenName}}\r\n                      methodUrl={methodUrl}\r\n                     switchParam={{operation:\"Default\", methodUrl,screenName:this.props.screenName}}\r\n                       \r\n                    \r\n                    >\r\n                     </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.InstrumentValidation !== previousProps.InstrumentValidation) {\r\n        let { sectionDataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n                sectionDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ sectionDataState });\r\n    }\r\n\r\n}\r\n};\r\n\r\n// export default connect( {\r\n// getInstrumentValidationStatus\r\n// }\r\n// )(injectIntl(InstrumentValidationTab));\r\nexport default injectIntl(InstrumentValidationTab)"]},"metadata":{},"sourceType":"module"}