{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad,filterRecordBasedOnPrimaryKeyName,reArrangeArrays}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{RegistrationSubType,RegistrationType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.npreregno.length>0){var inputParamData={npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedInstrument\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSample:inputData.selectedSample,selectedTestCode:inputData.ntransactiontestcode}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{toast.warn(\"Please Select a Sample\");}};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){// const RegistrationSubType = response.data[\"RegistrationSubType\"];\n//  console.log(response.data);\n// RegistrationSubType.length > 0 ?\n//     selectedRecord[\"nregsubtypecode\"] = {\n//         \"value\": RegistrationSubType[0].nregsubtypecode,\n//         \"label\": RegistrationSubType[0].sregsubtypename\n//     } : selectedRecord[\"nregsubtypecode\"] = \"\";\n// const [labelname] = event.item;\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getComponentTestBySpec(Map,selectedRecord,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getComponentTestBySpec\",Map).then(function(response){var _response$data=response.data,Component=_response$data.Component,Test=_response$data.Test;var slno=Component.length>0?Component[0].slno:-1;var selectedComponent=Component.length>0?Component[0]:undefined;var SelectedTest=[];if(Object.keys(Test).length>0){SelectedTest=Test[slno];}dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectedComponent:selectedComponent,loading:false,selectedRecord:selectedRecord,popUptestDataState:{skip:0,take:10}}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestfromDB(objComponent,LoginProps,nflag){return function(dispatch){dispatch(initRequest(true));var component=_objectSpread({},objComponent);component[\"ncomponentcode\"]=objComponent[\"ncomponentcode\"]?objComponent[\"ncomponentcode\"].value:-1;component[\"nstoragelocationcode\"]=objComponent[\"nstoragelocationcode\"]?objComponent[\"nstoragelocationcode\"].value:-1;component[\"nstorageconditioncode\"]=objComponent[\"nstorageconditioncode\"]?objComponent[\"nstorageconditioncode\"].value:-1;component[\"slno\"]=LoginProps.Component?Object.keys(LoginProps.Component).length+1:0;component[\"scomponentname\"]=objComponent[\"ncomponentcode\"].label;component[\"sstoragelocationname\"]=objComponent[\"nstoragelocationcode\"]&&objComponent[\"nstoragelocationcode\"].label?objComponent[\"nstoragelocationcode\"].label:\"\";component[\"sstorageconditionname\"]=objComponent[\"nstorageconditioncode\"]&&objComponent[\"nstorageconditioncode\"].label?objComponent[\"nstorageconditioncode\"].label:\"\";component[\"ntzdmanufdate\"]=objComponent[\"ntzdmanufdate\"]?objComponent[\"ntzdmanufdate\"].value:-1;component[\"ntzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].value:-1;component[\"stzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].label:\"\";component[\"nplasmafilecode\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].value:-1;component[\"splasmafilenumber\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].label:\"\";var dreceiveddate=objComponent[\"dreceiveddate\"];component[\"dreceiveddate\"]=dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\ncomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\n// rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\nrsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:component.nspecsampletypecode,slno:component.slno}).then(function(response){var TestData=response.data;var slno=component.slno;var SelectedTest=[];var loadComponent=true;var selectComponent={};var showSaveContinue=true;var SelectedSource=[];// let openChildModal = true;\nvar selectedComponent=undefined;var parentPopUpSize=\"lg\";// selectComponent = objComponent\nif(nflag===1){loadComponent=true;objComponent[\"smanuflotno\"]=\"\";objComponent[\"dreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nobjComponent[\"sreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nselectComponent=objComponent;}else{loadComponent=false;parentPopUpSize=\"xl\";// openChildModal = false;\nshowSaveContinue=false;selectComponent=undefined;}var Test=LoginProps.Test||[];var Component=LoginProps.Component||[];Component.unshift(component);selectedComponent=component;Test[slno]=response.data;SelectedTest=TestData;dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectComponent:selectComponent,selectedComponent:selectedComponent,loadComponent:loadComponent,showSaveContinue:showSaveContinue,parentPopUpSize:parentPopUpSize,loading:false,SelectedSource:SelectedSource}});// console.log(response.data);\n}).catch(function(error){//   console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function EditComponent(Map,component,userInfo){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var TimeZoneField=response[1].data;var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};component[\"dreceiveddate\"]=rearrangeDateFormat(userInfo,component[\"sreceiveddate\"]);component[\"scomments\"]=component[\"scomments\"];var ntzdreceivedate=component.ntzdreceivedate;if(component.ntzdreceivedate!==null&&typeof component.ntzdreceivedate===\"object\"){ntzdreceivedate=component.ntzdreceivedate.value;}component[\"ntzdreceivedate\"]=component.ntzdreceivedate?{\"label\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].stimezoneid,\"value\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].ntimezonecode}:\"\";dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,childoperation:\"update\",lstComponent:lstComponent,ChildscreenName:\"Component\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",timeZoneList:timeZoneList,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";//masterData['searchedTests'] = undefined\nmasterData['searchedTest']=undefined;}// let selectedFilter = inputData.selectedFilter;\n// selectedFilter[\"fromdate\"] = \"\";\n// selectedFilter[\"todate\"] = \"\";\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined//selectedFilter\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTreeByProduct(Map,selectedRecord,comboData,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getTreeByProduct\",Map).then(function(response){var _ref=[],Specification=_ref.Specification,AgaramTree=_ref.AgaramTree,ActiveKey=_ref.ActiveKey,FocusKey=_ref.FocusKey,OpenNodes=_ref.OpenNodes;var selectedSpec={};if(response.data[\"rtn\"]===true){Specification=constructOptionList(response.data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response.data[\"AgaramTree\"];ActiveKey=response.data[\"ActiveKey\"];FocusKey=response.data[\"FocusKey\"];OpenNodes=response.data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;}selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{}})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getNewRegSpecification=function getNewRegSpecification(inputParam,masterData){return function(dispatch){if(inputParam.selectedNode!==null){dispatch(initRequest(true));rsapi.post(\"/registration/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},{ntreetemplatemanipulationcode:inputParam.selectedNode.ntemplatemanipulationcode})).then(function(response){sortData(response.data);var Specification=constructOptionList(response.data||[],\"nallottedspeccode\",\"sspecname\",false,false,true).get(\"OptionList\");var selectedComponent=undefined;inputParam.selectedRecord[\"nallottedspeccode\"]=Specification.length>0?{value:Specification[0].value,label:Specification[0].label,item:Specification[0].item}:\"\";inputParam.selectedRecord[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";inputParam.selectedRecord[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;dispatch({type:DEFAULT_RETURN,payload:{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey,Specification:Specification,selectedNode:inputParam.selectedNode,selectedRecord:inputParam.selectedRecord,Test:[],selectedComponent:selectedComponent,SelectedTest:[],loading:false,showSample:undefined}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export function AddComponents(Map){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");var dreceiveddate=null;if(lstComponent[0].item.sreceiveddate)dreceiveddate=rearrangeDateFormat(Map[\"userinfo\"],lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\nvar selectComponent={sreceiveddate:dreceiveddate,dreceiveddate:dreceiveddate,ntzdreceivedate:{\"label\":Map[\"userinfo\"].stimezoneid,\"value\":Map[\"userinfo\"].ntimezonecode},stzdreceivedate:Map[\"userinfo\"].stimezoneid,scomments:\"\",nallottedspeccode:lstComponent[0].item.nallottedspeccode};var CurrentTime=dreceiveddate;dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,lstComponent:lstComponent,dreceiveddate:dreceiveddate,ChildscreenName:\"Component\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",selectComponent:selectComponent,parentPopUpSize:\"lg\",CurrentTime:CurrentTime,timeZoneList:timeZoneList,loading:false,openPortal:true,openModal:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTest(objComponent,LoginProps,nneedsubsample,specBasedComponent){return function(dispatch){if(Object.keys(objComponent).length>0){dispatch(initRequest(true));rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent}).then(function(response){var TestData=response.data;var Test=LoginProps.Test||[];var componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestgrouptestcode\");// const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\n//\"stestsynonym\", undefined, undefined, true);\ndispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,loadTest:true,openChildModal:false,ChildscreenName:\"Test\",screenName:\"Test\",operation:\"create\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTCOMPONENTTOADDTEST\"}));}};}export function addsubSample(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent}));urlArray[2]=ComponentTestBySpec;}else{Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,//nneedsubsample: nneedsubsample,\n// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList,response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent);var TestCombined=[];var lstComponent=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",screenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent);return function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",_objectSpread(_objectSpread({nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1},Map),{},{// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent})).then(function(response){var TestCombined=response.data;dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:newcomboData.selectedRecord,TestCombined:TestCombined}});});}else{// Component = Component ? Component : []\nrsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent})).then(function(response){// const lstComponent =  response.data.lstComponent\nvar lstComponent=response.data.lstComponent;//filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\nvar lstComponentMap=constructOptionList(lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:newcomboData.selectedRecord,TestCombined:[],selectedTestData:[]}});});}};}}export function componentTest(selectedobject,Reg,specBasedComponent,Component){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestData=response.data;//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({TestCombined:TestData},Map),{},{loading:false,selectedTestData:[]})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function addSubSampleSaveContinue(Map1,Map,specBasedComponent,Component,selectedTestData,lstComponent){//  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\n//     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\nreturn function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],nspecsampletypecode:Map[\"nspecsampletypecode\"],slno:Map1.Component?Object.keys(Map1.Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestCombined=response.data;var selectedTestData1=TestCombined.filter(function(x){return selectedTestData.some(function(y){return x[\"ntestgrouptestcode\"]===y.value;});});// const selectedTestData2 = []\n// TestCombined.map(x=>{\n//     selectedTestData1.map(y=>{\n//         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\n//             selectedTestData2.push(x)\n//         } \n//     })\n// });\n//  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\n// const filterArray = [...selectedTestData1, ...TestCombined]\nselectedTestData=constructOptionList(selectedTestData1,\"ntestgrouptestcode\",\"stestsynonym\");selectedTestData[\"ntestgrouptestcode\"]=selectedTestData.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:TestCombined,selectedTestData:selectedTestData})});});}else{// lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\nMap1.selectComponent[\"ncomponentcode\"]={};Map1.selectComponent[\"Sample Name\"]=\"\";dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:[],selectedTestData:[],lstComponent:lstComponent})});}};}export function editSubSample(Map,component,userInfo,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var Componnet={};if(specBasedComponent){Componnet=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread({},Map));}urlArray=[Componnet];Axios.all(urlArray).then(function(response){var comp=[];if(specBasedComponent){comp=response[0].data.lstComponent;}var lstComponentMap=constructOptionList(comp||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loadSubSample:true,childoperation:\"update\",ChildscreenName:\"SubSample\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createRegistration\",inputParam.inputData).then(function(response){var _objectSpread5;var RegistrationGetSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.RegistrationGetSample);var selectedSample=response.data[\"selectedSample\"];var RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"RegistrationGetTest\"];var selectedSubSample=RegistrationGetSubSample;RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];if(inputParam.inputData.nneedsubsample){RegistrationGetSubSample=sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc');selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=RegistrationGetTest.filter(function(x){return x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode;});selectedTest=RegistrationGetTest.length>0?response.data[\"selectedTest\"]:[];}// RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\nif(inputParam.multipleselectionFlag){selectedSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.selectedSample);updatedObjectWithNewElement(response.data[\"selectedSubSample\"],masterData.RegistrationGetSubSample);updatedObjectWithNewElement(response.data[\"selectedTest\"],masterData.RegistrationGetTest);RegistrationGetSubSample=masterData.RegistrationGetSubSample;RegistrationGetTest=masterData.RegistrationGetTest;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationGetSample:RegistrationGetSample});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread5={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread5,\"selectedRecord\",{}),_defineProperty(_objectSpread5,\"SelectedTest\",[]),_defineProperty(_objectSpread5,\"Test\",[]),_defineProperty(_objectSpread5,\"selectedComponent\",{}),_defineProperty(_objectSpread5,\"subSampleDataGridList\",[]),_objectSpread5));inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getRegistrationSample(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var respObject={};if(inputData.selectedFilter){respObject={selectedFilter:_objectSpread({},inputData.selectedFilter)};}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampleskip:0,subsampletake:undefined,showSample:undefined},respObject),{},{activeSampleTab:inputData.inputData.activeSampleTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,checkBoxOperation:inputData.nneedsubsample===true?inputData.checkBoxOperation===5?3:inputData.checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data,\"descending\",\"npreregno\");var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedTest||[];if(subSample){var oldSelectedSubSample=inputData.masterData.selectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedSubSample:inputData.masterData.RegistrationGetSubSample.length>0?[inputData.masterData.RegistrationGetSubSample[0]]:[]});var RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];//if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \nif(inputData.checkBoxOperation===1){var wholeSubSampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSubSample:oldSelectedSubSample});}var selectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.selectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:selectedTest});}if(inputData.checkBoxOperation===7){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nswitch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData));}var _ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;}if(inputData.checkBoxOperation===3||inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:masterData.RegistrationGetTest.length>0?[masterData.RegistrationGetTest[0]]:[]});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData2=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData2));}var _ntransactiontestcode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData4=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData4));}var _ntransactiontestcode4=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData));var _ntransactiontestcode3=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData3=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData3));}var _ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment2,_ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;var bool=false;if(inputData.masterData.RegistrationGetSubSample.length<inputData.subsampleskip){testskip=0;subsampleskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}}else{//let oldSelectedTest = inputData.masterData.selectedTest\n//  let oldSelectedSubSample = inputData.masterData.selectedSubSample\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],selectedSubSample:inputData.masterData.RegistrationGetSubSample});var _RegistrationTestComment3=[];var _RegistrationParameter2=[];var _RegistrationTestAttachment2=[];if(inputData.checkBoxOperation===7||inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var _ntransactiontestcode5;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode5=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;default:_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData5=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment4=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData5));}var _ntransactiontestcode6=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment4,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData7=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment3=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment3=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData7));}var _ntransactiontestcode8=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestAttachment2=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment3,_ntransactiontestcode8,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData2=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter3=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData2));var _ntransactiontestcode7=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationParameter2=getRecordBasedOnPrimaryKeyName(_RegistrationParameter3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData6=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment5=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment5=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData6));}var _ntransactionTestCode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment5,_ntransactionTestCode2,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=_RegistrationTestComment3;masterData[\"RegistrationParameter\"]=_RegistrationParameter2;masterData['RegistrationTestAttachment']=_RegistrationTestAttachment2;var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.selectedTest;var oldSelectedSubSample=inputData.masterData.selectedSubSample;// let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\nvar isGrandChildGetRequired=false;var TestSelected=[];var subSampleSelected=[];if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var selectedSample=inputData.selectedSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,inputData.masterData.RegistrationGetTest,\"ntransactiontestcode\");var selectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];var ntransactiontestcode=selectedTest.length>0?selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";var selectedSubSample=inputData.masterData.RegistrationGetSubSample;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");selectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.RegistrationGetSubSample[0]];if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest});if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},_defineProperty({childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3,skipInfo:skipInfo},\"masterData\",masterData));if(subSample){if(selectedTest.length===0){inputData[\"npreregno\"]=selectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];dispatch(getRegistrationTestDetail(inputData,true));}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:TestSelected?TestSelected:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],// RegistrationTestComment,\nselectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.RegistrationGetSubSample});var subsamplecheck=true;if(subSample){var SubSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");if(SubSampleSelected.length>0){var _filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");if(_filterSelectedSubSample.length===0){var wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});if(oldSelectedSubSample.length===0&&wholeSubSample.length>0&&_masterData.selectedTest.length===0){var selectedSubSample1=[inputData.masterData.RegistrationGetSubSample[0]];_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:selectedSubSample1,selectedTest:[]});inputData=_objectSpread(_objectSpread({},inputData),_masterData);inputData[\"npreregno\"]=selectedSubSample1.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample1.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];subsamplecheck=false;dispatch(getRegistrationTestDetail(inputData,true));}}else{oldSelectedSubSample=_filterSelectedSubSample;}}else{var _wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!_wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});}if(subsamplecheck){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:oldSelectedSubSample});}if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;_skipInfo={subsampleskip:subsampleskip,subsampletake:subsampletake};}}var wholeTestList=_masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode9;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode9=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode9,\"ntransactiontestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode9,\"ntransactiontestcode\");var _skipInfo={};if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},{testskip:testskip,testtake:testtake});}var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},_skipInfo)});}}};}export function getRegistrationTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionsamplecode:inputData.ntransactionsamplecode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data);var oldSelectedTest=inputData.masterData.selectedTest||[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactionsamplecode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]// RegistrationTestComment,\n});//let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode10=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode10,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData8=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData8));}var _ntransactiontestcode11=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode11,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else if(inputData.checkBoxOperation===7){var testList=reArrangeArrays(inputData.masterData.RegistrationGetSubSample,response.data.RegistrationGetTest,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:testList?testList.length>0?[testList[0]]:[]:[],RegistrationGetTest:testList?testList.length>0?testList:[]:[]//ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData9=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment6=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment6=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData9));}var _ntransactiontestcode12=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment6,_ntransactiontestcode12,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData11=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment4=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData11));}var _ntransactiontestcode14=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment4,_ntransactiontestcode14,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData3=response.data.RegistrationParameter?response.data.RegistrationParameter:[];// let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\nvar _RegistrationParameter4=_toConsumableArray(_resultResponseData3);var _ntransactiontestcode13=testList?testList.length>0?testList[0].ntransactiontestcode:inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter4,_ntransactiontestcode13,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData10=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment7=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment7=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData10));}var _ntransactionTestCode3=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment7,_ntransactionTestCode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;var skipInfo={};if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString():\"-1\";var selectedSubSample=inputData.selectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar selectedTest=inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetailRegistration(inputData,true));}else{var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]});var wholeTestList=_masterData2.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode15;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode15=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData2[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode15,\"ntransactiontestcode\");_masterData2[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode15,\"ntransactiontestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData2[arr.activeName]&&_masterData2[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData2,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},skipInfo)});}}};}export function acceptRegistration(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/acceptRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"||response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));if(response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){toast.warn(intl.formatMessage({id:response.data.rtn}));}}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.warn(response.data.rtn);}}).catch(function(error){toast.error(error.message);});};}export var addMoreTest=function addMoreTest(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedSubSample&&inputParam.selectedSubSample.length>0){value=inputParam.selectedSubSample.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedSubSample[0].nspecsampletypecode;});if(value){return toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}sampleList=sampleList?_toConsumableArray(sampleList.slice(inputParam.skip,inputParam.take)):[];var selectedsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedSample,\"npreregno\");// const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\nif(selectedsample&&selectedsample.length>0){var findTransactionStatus=_toConsumableArray(new Set(selectedsample.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.CERTIFIED&&findTransactionStatus[0]!==transactionStatus.SENT){var findApprovalVersion=_toConsumableArray(new Set(selectedsample.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedsample.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{inputParam[\"snspecsampletypecode\"]=inputParam.selectedSubSample&&_toConsumableArray(new Set(inputParam.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\");dispatch(initRequest(true));rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{availableTest:response.data,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\"}));}}else{////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\ntoast.warn(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}};};export var createRegistrationTest=function createRegistrationTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _respObject;var RegistrationGetTest=updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"],response.data[\"RegistrationGetTest\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationGetTest:RegistrationGetTest,selectedTest:response.data[\"RegistrationGetTest\"],RegistrationParameter:response.data.RegistrationParameter// RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\n});var respObject=(_respObject={masterData:masterData},_defineProperty(_respObject,modalName,false),_defineProperty(_respObject,\"loading\",false),_defineProperty(_respObject,\"loadChildTest\",false),_defineProperty(_respObject,\"showSample\",undefined),_defineProperty(_respObject,\"openModal\",false),_defineProperty(_respObject,\"selectedRecord\",{}),_respObject);inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         [modalName]: false,\n//         loading: false,\n//         loadChildTest: false,\n//         showSample: undefined,\n//         openModal: false,\n//         selectedRecord: {}\n//     }\n// });\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getEditRegistrationComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation;var npreregno=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo});var selectedRegistration=rsapi.post(\"/registration/getEditRegistrationDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{npreregno:npreregno}));urlArray=[timeZoneService,actualService,selectedRegistration];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[2].data[\"SelectedRegistration\"][0]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);// const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\n//  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\nvar timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};//  const newcomboData = parentChildComboLoad(columnList, response[1].data,\n// selectedRecord, childColumnList, withoutCombocomponent)\nif(selectedRecord.ntransactionstatus===transactionStatus.CANCELLED||selectedRecord.ntransactionstatus===transactionStatus.REJECT){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDSAMPLE\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoad(x,comboData,selectedRecord1,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}var _ref2=[],Specification=_ref2.Specification,AgaramTree=_ref2.AgaramTree,ActiveKey=_ref2.ActiveKey,FocusKey=_ref2.FocusKey,OpenNodes=_ref2.OpenNodes;var selectedSpec={};Specification=constructOptionList(response[2].data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response[2].data[\"AgaramTree\"];ActiveKey=response[2].data[\"FocusKey\"];FocusKey=response[2].data[\"ActiveKey\"];OpenNodes=response[2].data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:{AgaramTree:AgaramTree,FocusKey:FocusKey,ActiveKey:ActiveKey,OpenNodes:OpenNodes,selectedSpec:selectedSpec,Specification:Specification,// statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\n// currentTime,\noperation:\"update\",screenName:inputParam.masterData.RealRegSubTypeValue.sregsubtypename,// PopUpLabel: popUpLabel,\ntimeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openPortal:true,ncontrolCode:inputParam.editRegParam.ncontrolCode,loadPreregister:true,parentPopUpSize:\"xl\",loading:false,showSample:undefined,comboData:comboValues.comboData,childColumnList:childColumnList,comboComponents:comboComponents,withoutCombocomponent:withoutCombocomponent,columnList:columnList//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function updateRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistration\",inputParam.inputData).then(function(response){// sortData(response.data);\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],masterData.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],masterData.RegistrationGetTest,\"ntransactiontestcode\");//  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\nmasterData=_objectSpread(_objectSpread({},masterData),{},{//selectedSample: response.data[\"selectedSample\"],\n// selectedSubSample: masterData[\"selectedSubSample\"],\n//selectedTest:masterData[\"selectedTest\"],\n// RegistrationGetTest,\n// RegistrationGetSubSample,\nRegistrationParameter:masterData[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openPortal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadPreregister:false,selectedRecord:{},showSample:undefined}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelTest\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nvar masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedTest:response.data[\"selectedTest\"],// RegistrationGetTest:response.data[\"RegistrationGetTest\"],\nRegistrationGetTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\")//  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\n});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:{},loading:false,loadPreregister:false,showSample:undefined});inputParam.postParamList[0]['clearFilter']='no';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSample\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function addsubSampleRegistration(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList,childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent,userinfo:userinfo}));urlArray[2]=ComponentTestBySpec;}else{var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:specBasedComponent});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList,response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent);var TestCombined=[];var lstComponent=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});dispatch({type:DEFAULT_RETURN,payload:{screenName:\"SubSample\",showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openModal:true,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,specBasedComponent:specBasedComponent}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveSubSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createSubSample\",inputParam.inputData).then(function(response){// let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n// let selectedSample = response.data[\"selectedSample\"];\nvar RegistrationGetSubSample=updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\nRegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];var RegistrationParameter=response.data[\"RegistrationParameter\"];RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode');var masterData=_objectSpread({},inputParam.inputData.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationParameter:RegistrationParameter});var respObject={masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false};inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));//    dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         openModal: false,\n//         loadEsign: false,\n//         loading: false,\n//         showSample: undefined,\n//         selectedRecord: {},\n//         loadRegSubSample:false\n//     }\n// });\n}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getEditSubSampleComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var _inputParam2=_objectSpread({},inputParam),userInfo=_inputParam2.userInfo,operation=_inputParam2.operation;var ntransactionsamplecode=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo});var selectedRegistration=rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{ntransactionsamplecode:ntransactionsamplecode}));urlArray=[timeZoneService,actualService,selectedRegistration];// if(specBasedComponent){\n//     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\n//         ...Map,\n//         specBasedComponent: specBasedComponent\n//     })\n//     urlArray.push(ComponentTestBySpec) \n// }\nAxios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[2].data[\"SelectedRegistrationSubSample\"][0]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};if(selectedRecord.ntransactionstatus!==transactionStatus.PREREGISTER){toast.warn(intl.formatMessage({id:\"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var _payload;//               let lstComponent=[]\nif(specBasedComponent){selectedRecord[\"ncomponentcode\"]={label:selectedRecord[\"scomponentname\"],value:selectedRecord[\"ncomponentcode\"]};}var languagetypeCode=undefined;var comboData=response[1].data;var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList2=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoad(x,comboData,selectedRecord1,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}selectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:(_payload={operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true,screenName:\"IDS_SUBSAMPLE\"},_defineProperty(_payload,\"operation\",\"update\"),_defineProperty(_payload,\"specBasedComponent\",specBasedComponent),_payload)});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function onUpdateSubSampleRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistrationSubSample\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\n//  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\nvar RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{// selectedSample: response.data[\"selectedSample\"],\nselectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,// RegistrationGetSubSample,\nRegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:\"SubSample\"}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelSubSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSubSample\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{// selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\nselectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function preregRecordToQuarantine(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/quarantineRegistration\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\n// replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject={masterData:masterData,loading:false,loadEsign:false,openModal:false,showSample:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function getTestChildTabDetailRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/RegistrationAction.js"],"names":["rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","DEFAULT_RETURN","intl","initRequest","RegistrationSubType","RegistrationType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","getSampleTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","data","item","type","payload","loading","catch","error","message","getSubSampleChildTabDetail","inputData","npreregno","length","inputParamData","userinfo","url","activeSampleTab","responseData","selectedSample","selectedTestCode","ntransactiontestcode","showFilter","screenName","status","warn","getRegTypeChange","getRegSubTypeChange","getComponentTestBySpec","selectedRecord","Component","Test","slno","selectedComponent","undefined","SelectedTest","Object","keys","popUptestDataState","skip","take","getTestfromDB","objComponent","LoginProps","nflag","component","value","label","dreceiveddate","userInfo","nspecsampletypecode","TestData","loadComponent","selectComponent","showSaveContinue","SelectedSource","parentPopUpSize","CurrentTime","unshift","EditComponent","urlArray","ComponentTestBySpec","timezone","all","lstComponentMap","lstComponent","timeZoneListMap","TimeZoneField","get","timeZoneList","scomponentname","ncomponentcode","ntzdreceivedate","findIndex","x","ntimezonecode","stimezoneid","childoperation","ChildscreenName","openChildModal","ReloadData","searchSampleRef","current","searchSubSampleRef","searchTestRef","testskip","testtake","subsampletake","subsampleskip","showSample","getTreeByProduct","comboData","inputParam","Specification","AgaramTree","ActiveKey","FocusKey","OpenNodes","selectedSpec","sversion","ntemplatemanipulationcode","getNewRegSpecification","selectedNode","operation","methodUrl","ntreetemplatemanipulationcode","activeKey","focusKey","primaryKey","AddComponents","sreceiveddate","stzdreceivedate","scomments","nallottedspeccode","openPortal","openModal","getTest","nneedsubsample","specBasedComponent","componentTest","TestCombined","loadTest","formatMessage","id","addsubSample","columnList","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","isServiceRequired","SubSamplecomboData","timeZoneService","actualService","parentcolumnlist","childcolumnlist","TestGet","timeZoneMap","defaultTimeZone","newcomboData","comboData1","selectedRecord1","map","componentrow","inputtype","mandatory","loadcurrentdate","Date","loadSubSample","parentSubSampleColumnList","selectedTestData","selectedobject","Reg","addSubSampleSaveContinue","Map1","selectedTestData1","filter","some","y","editSubSample","Componnet","comp","insertRegistration","RegistrationGetSample","RegistrationGetSubSample","RegistrationGetTest","selectedSubSample","selectedTest","ntransactionsamplecode","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","postParamList","getRegistrationSample","selectedFilter","getRegistrationsubSampleDetail","nsampletypecode","nregtypecode","nregsubtypecode","ntransactionstatus","napprovalconfigcode","activeTestTab","ndesigntemplatemappingcode","checkBoxOperation","activeName","dataStateName","subSample","skipInfo","oldSelectedTest","oldSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","RegistrationTestComment","RegistrationTestAttachment","RegistrationParameter","wholeSubSampleList","b","forEach","subsample","index","includes","splice","ResponseData","RegistrationTestComment1","RegistrationTestAttachment1","resultResponseData","RegistrationParameter1","ntransactiontestcode1","ResponseData1","RegistrationTestComment2","ntransactionTestCode","bool","wholeTestList","test","keepOld","sampleGridDataState","sort","attachmentskip","isGrandChildGetRequired","TestSelected","subSampleSelected","filterTestSameOldSelectedTest","join","filterSelectedSubSample","getRegistrationTestDetail","getTestChildTabDetailRegistration","subsamplecheck","SubSampleSelected","wholeSubSample","selectedSubSample1","dataStateArray","arr","selectedTransactionsamplecode","testList","toString","selectedTransactioncode","acceptRegistration","rtn","addMoreTest","ncontrolCode","sampleList","obj","slice","selectedsample","findTransactionStatus","Set","REJECT","CANCELLED","CERTIFIED","SENT","findApprovalVersion","napprovalversioncode","findSampleSpec","availableTest","loadChildTest","props","createRegistrationTest","modalName","classUrl","getEditRegistrationComboService","comboComponents","withoutCombocomponent","mastertoedit","primaryKeyName","selectedRegistration","editRegParam","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","RealRegSubTypeValue","sregsubtypename","updateRegistration","regDateEditConfirmMessage","regEditParam","cancelTestAction","cancelSampleAction","addsubSampleRegistration","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","saveSubSample","getEditSubSampleComboService","PREREGISTER","editSubSampleRegParam","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","selectedSampleCode","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement, replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList, constructjsonOptionDefault, childComboLoad, filterRecordBasedOnPrimaryKeyName, reArrangeArrays\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { RegistrationSubType, RegistrationType, transactionStatus } from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\n\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.npreregno.length > 0) {\r\n            let inputParamData = {\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSample: inputData.selectedSample,\r\n                                    selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            toast.warn(\"Please Select a Sample\");\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                // const RegistrationSubType = response.data[\"RegistrationSubType\"];\r\n\r\n                //  console.log(response.data);\r\n                // RegistrationSubType.length > 0 ?\r\n                //     selectedRecord[\"nregsubtypecode\"] = {\r\n                //         \"value\": RegistrationSubType[0].nregsubtypecode,\r\n                //         \"label\": RegistrationSubType[0].sregsubtypename\r\n                //     } : selectedRecord[\"nregsubtypecode\"] = \"\";\r\n                // const [labelname] = event.item;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getComponentTestBySpec(Map, selectedRecord, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getComponentTestBySpec\", Map)\r\n            .then(response => {\r\n                const { Component, Test } = response.data;\r\n                let slno = Component.length > 0 ? Component[0].slno : -1;\r\n                let selectedComponent = Component.length > 0 ? Component[0] : undefined\r\n                let SelectedTest = [];\r\n                if (Object.keys(Test).length > 0) {\r\n                    SelectedTest = Test[slno];\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectedComponent, loading: false,\r\n                        selectedRecord, popUptestDataState: { skip: 0, take: 10 }\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getTestfromDB(objComponent, LoginProps, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let component = { ...objComponent };\r\n        component[\"ncomponentcode\"] = objComponent[\"ncomponentcode\"] ? objComponent[\"ncomponentcode\"].value : -1;\r\n        component[\"nstoragelocationcode\"] = objComponent[\"nstoragelocationcode\"] ? objComponent[\"nstoragelocationcode\"].value : -1;\r\n        component[\"nstorageconditioncode\"] = objComponent[\"nstorageconditioncode\"] ? objComponent[\"nstorageconditioncode\"].value : -1;\r\n        component[\"slno\"] = LoginProps.Component ? Object.keys(LoginProps.Component).length + 1 : 0;\r\n        component[\"scomponentname\"] = objComponent[\"ncomponentcode\"].label;\r\n        component[\"sstoragelocationname\"] = objComponent[\"nstoragelocationcode\"] && objComponent[\"nstoragelocationcode\"].label ? objComponent[\"nstoragelocationcode\"].label : \"\";\r\n        component[\"sstorageconditionname\"] = objComponent[\"nstorageconditioncode\"] && objComponent[\"nstorageconditioncode\"].label ? objComponent[\"nstorageconditioncode\"].label : \"\";\r\n        component[\"ntzdmanufdate\"] = objComponent[\"ntzdmanufdate\"] ? objComponent[\"ntzdmanufdate\"].value : -1;\r\n        component[\"ntzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].value : -1;\r\n        component[\"stzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].label : \"\";\r\n        component[\"nplasmafilecode\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].value : -1;\r\n        component[\"splasmafilenumber\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].label : \"\";\r\n        const dreceiveddate = objComponent[\"dreceiveddate\"];\r\n        component[\"dreceiveddate\"] = dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\r\n        component[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\r\n        // rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: component.nspecsampletypecode,\r\n            slno: component.slno\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                let slno = component.slno;\r\n                let SelectedTest = [];\r\n                let loadComponent = true;\r\n                let selectComponent = {};\r\n                let showSaveContinue = true;\r\n                let SelectedSource = [];\r\n                // let openChildModal = true;\r\n                let selectedComponent = undefined;\r\n                let parentPopUpSize = \"lg\"\r\n                // selectComponent = objComponent\r\n                if (nflag === 1) {\r\n                    loadComponent = true;\r\n                    objComponent[\"smanuflotno\"] = \"\";\r\n                    objComponent[\"dreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    objComponent[\"sreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    selectComponent = objComponent;\r\n                } else {\r\n                    loadComponent = false;\r\n                    parentPopUpSize = \"xl\"\r\n                    // openChildModal = false;\r\n                    showSaveContinue = false;\r\n                    selectComponent = undefined\r\n                }\r\n                let Test = LoginProps.Test || [];\r\n                let Component = LoginProps.Component || [];\r\n                Component.unshift(component);\r\n                selectedComponent = component;\r\n                Test[slno] = response.data;\r\n                SelectedTest = TestData;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectComponent, selectedComponent,\r\n                        loadComponent, showSaveContinue, parentPopUpSize, loading: false, SelectedSource\r\n                    }\r\n                });\r\n                // console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                //   console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function EditComponent(Map, component, userInfo) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const TimeZoneField = response[1].data;\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n                component[\"dreceiveddate\"] = rearrangeDateFormat(userInfo, component[\"sreceiveddate\"]);\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n\r\n                let ntzdreceivedate = component.ntzdreceivedate;\r\n                if (component.ntzdreceivedate !== null && typeof component.ntzdreceivedate === \"object\") {\r\n                    ntzdreceivedate = component.ntzdreceivedate.value;\r\n                }\r\n                component[\"ntzdreceivedate\"] = component.ntzdreceivedate ?\r\n                    {\r\n                        \"label\": TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].stimezoneid, \"value\":\r\n                            TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].ntimezonecode\r\n                    } : \"\"\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true, childoperation: \"update\",\r\n                        lstComponent, ChildscreenName: \"Component\",\r\n                        openChildModal: false, selectComponent: component, parentPopUpSize: \"lg\",\r\n                        timeZoneList, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    //masterData['searchedTests'] = undefined\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // let selectedFilter = inputData.selectedFilter;\r\n                // selectedFilter[\"fromdate\"] = \"\";\r\n                // selectedFilter[\"todate\"] = \"\";\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined,\r\n                        //selectedFilter\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTreeByProduct(Map, selectedRecord, comboData, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getTreeByProduct\", Map)\r\n            .then(response => {\r\n                let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                const selectedSpec = {}\r\n                if (response.data[\"rtn\"] === true) {\r\n                    Specification = constructOptionList(response.data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response.data[\"AgaramTree\"];\r\n                    ActiveKey = response.data[\"ActiveKey\"];\r\n                    FocusKey = response.data[\"FocusKey\"];\r\n                    OpenNodes = response.data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1\r\n                }\r\n                selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Specification,\r\n                        selectedRecord,\r\n                        AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                        Test: [],\r\n                        SelectedTest: [],\r\n                        loading: false,\r\n                        comboData,\r\n                        ...inputParam,\r\n                        selectedSpec,\r\n                        Component: [],\r\n                        selectComponent: {},\r\n                        selectedComponent: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getNewRegSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedNode !== null) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam, ntreetemplatemanipulationcode: inputParam.selectedNode.ntemplatemanipulationcode })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let Specification = constructOptionList(response.data || [], \"nallottedspeccode\", \"sspecname\", false, false, true).get(\"OptionList\");\r\n                    let selectedComponent = undefined;\r\n                    inputParam.selectedRecord[\"nallottedspeccode\"] = Specification.length > 0 ? { value: Specification[0].value, label: Specification[0].label, item: Specification[0].item } : \"\";\r\n                    inputParam.selectedRecord[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\";\r\n                    inputParam.selectedRecord[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ActiveKey: inputParam.activeKey,\r\n                            FocusKey: inputParam.focusKey,\r\n                            primaryKey: inputParam.primaryKey,\r\n                            Specification: Specification,\r\n                            selectedNode: inputParam.selectedNode,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            Test: [],\r\n                            selectedComponent,\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            showSample: undefined\r\n                        }\r\n                    }\r\n                    );\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function AddComponents(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone\r\n        ]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                let dreceiveddate = null;\r\n                if (lstComponent[0].item.sreceiveddate)\r\n                    dreceiveddate = rearrangeDateFormat(Map[\"userinfo\"], lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\r\n\r\n                let selectComponent = {\r\n                    sreceiveddate: dreceiveddate,\r\n                    dreceiveddate,\r\n                    ntzdreceivedate: { \"label\": Map[\"userinfo\"].stimezoneid, \"value\": Map[\"userinfo\"].ntimezonecode },\r\n                    stzdreceivedate: Map[\"userinfo\"].stimezoneid,\r\n                    scomments: \"\",\r\n                    nallottedspeccode: lstComponent[0].item.nallottedspeccode\r\n                };\r\n                let CurrentTime = dreceiveddate;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true,\r\n                        lstComponent, dreceiveddate, ChildscreenName: \"Component\",\r\n                        showSaveContinue: true, openChildModal: false, childoperation: \"create\", selectComponent\r\n                        , parentPopUpSize: \"lg\", CurrentTime, timeZoneList, loading: false,\r\n                        openPortal: true, openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function getTest(objComponent, LoginProps, nneedsubsample, specBasedComponent) {\r\n    return function (dispatch) {\r\n        if (Object.keys(objComponent).length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nspecsampletypecode: objComponent.nspecsampletypecode,\r\n                slno: objComponent.slno,\r\n                nneedsubsample: nneedsubsample,\r\n                nallottedspeccode: objComponent.nallottedspeccode,\r\n                specBasedComponent: specBasedComponent\r\n\r\n            })\r\n                .then(response => {\r\n                    let TestData = response.data;\r\n                    let Test = LoginProps.Test || [];\r\n                    let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n                    const TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestgrouptestcode\");\r\n                    // const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\r\n                    //\"stestsynonym\", undefined, undefined, true);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            TestCombined, loadTest: true, openChildModal: false,\r\n                            ChildscreenName: \"Test\",\r\n                            screenName: \"Test\",\r\n                            operation: \"create\",\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\", loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function addsubSample(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired, SubSamplecomboData) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent) {\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                })\r\n                urlArray[2] = ComponentTestBySpec;\r\n            } else {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent\r\n\r\n                })\r\n                urlArray[2] = TestGet;\r\n            }\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                if (specBasedComponent) {\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                } else {\r\n                    TestCombined = response[2].data\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.mandatory) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? new Date() : \"\";\r\n                        }\r\n                        // if (componentrow.timezone) {\r\n                        //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                        //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                        //         defaulttimezone ? defaulttimezone : -1\r\n                        // }\r\n                    }\r\n\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChildscreenName: \"SubSample\",\r\n                        screenName: \"SubSample\",\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        SubSamplecomboData: comboData1,\r\n                        SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        parentSubSampleColumnList: columnList,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n        return (dispatch) => {\r\n            if (!specBasedComponent) {\r\n                rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    ...Map,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent\r\n                }).then(response => {\r\n                    const TestCombined = response.data\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent: [],\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: newcomboData.selectedRecord,\r\n                            TestCombined: TestCombined\r\n                        }\r\n                    });\r\n                })\r\n            } else {\r\n                // Component = Component ? Component : []\r\n                rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                }).then(response => {\r\n                    // const lstComponent =  response.data.lstComponent\r\n                    let lstComponent =response.data.lstComponent //filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\r\n                    const lstComponentMap = constructOptionList(lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent,\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: newcomboData.selectedRecord,\r\n                            TestCombined: [],\r\n                            selectedTestData: []\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function componentTest(selectedobject, Reg, specBasedComponent, Component) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent\r\n\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                //let Test = [];\r\n                // Test[selectedobject.slno] = TestData;\r\n                const Map = {}\r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectComponent\"] = selectedobject\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        TestCombined: TestData, ...Map, loading: false, selectedTestData: []\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function addSubSampleSaveContinue(Map1, Map,\r\n    specBasedComponent, Component, selectedTestData, lstComponent) {\r\n\r\n    //  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n    //     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n    return (dispatch) => {\r\n        if (!specBasedComponent) {\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                nspecsampletypecode: Map[\"nspecsampletypecode\"],\r\n                slno: Map1.Component ? Object.keys(Map1.Component).length + 1 : 1,\r\n                specBasedComponent: specBasedComponent\r\n            }).then(response => {\r\n                let TestCombined = response.data\r\n\r\n                const selectedTestData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestData.some(function (y) {\r\n                        return x[\"ntestgrouptestcode\"] === y.value\r\n                    })\r\n                });\r\n                // const selectedTestData2 = []\r\n                // TestCombined.map(x=>{\r\n                //     selectedTestData1.map(y=>{\r\n                //         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\r\n                //             selectedTestData2.push(x)\r\n                //         } \r\n                //     })\r\n                // });\r\n                \r\n                \r\n              //  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\r\n              // const filterArray = [...selectedTestData1, ...TestCombined]\r\n                \r\n                selectedTestData = constructOptionList(selectedTestData1, \"ntestgrouptestcode\", \"stestsynonym\")\r\n                selectedTestData[\"ntestgrouptestcode\"]= selectedTestData.get(\"OptionList\")\r\n              \r\n     \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...Map1,\r\n                        loading: false,\r\n                        TestCombined,\r\n                        selectedTestData\r\n                    }\r\n                });\r\n            })\r\n        }\r\n        else {\r\n           // lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\r\n            Map1.selectComponent[\"ncomponentcode\"] = {};\r\n            Map1.selectComponent[\"Sample Name\"] = \"\";\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...Map1,\r\n                    loading: false,\r\n                    TestCombined: [],\r\n                    selectedTestData: [],\r\n                    lstComponent\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function editSubSample(Map,\r\n    component, userInfo, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        let Componnet = {}\r\n        if (specBasedComponent) {\r\n            Componnet = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map\r\n            });\r\n        }\r\n        urlArray = [Componnet]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let comp = []\r\n                if (specBasedComponent) {\r\n                    comp = response[0].data.lstComponent\r\n                }\r\n                const lstComponentMap = constructOptionList(comp || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadSubSample: true, childoperation: \"update\",\r\n                        ChildscreenName: \"SubSample\",\r\n                        openChildModal: false, selectComponent: component,\r\n                        parentPopUpSize: \"lg\", loading: false, lstComponent\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                let selectedSubSample = RegistrationGetSubSample;\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                if (inputParam.inputData.nneedsubsample) {\r\n                    RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                    selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                    RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                    selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                }\r\n                // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                if (inputParam.multipleselectionFlag) {\r\n                    selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                    updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                    updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                    RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                    RegistrationGetTest = masterData.RegistrationGetTest;\r\n                }\r\n\r\n\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSample, selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: undefined,\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined,\r\n                    openPortal: false,\r\n                    selectedSpec: {},\r\n                    selectComponent: {},\r\n                    SelectedTest: {},\r\n                    selectedComponent: {},\r\n                    Component: [],\r\n                    selectedRecord: {},\r\n                    SelectedTest: [],\r\n                    Test: [],\r\n                    selectedComponent: {},\r\n                    subSampleDataGridList:[]\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getRegistrationSample(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                let respObject = {};\r\n                if (inputData.selectedFilter) {\r\n                    respObject = { selectedFilter: { ...inputData.selectedFilter } };\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampleskip: 0,\r\n                        subsampletake: undefined,\r\n                        showSample: undefined,\r\n                        ...respObject,\r\n                        activeSampleTab: inputData.inputData.activeSampleTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            checkBoxOperation: inputData.nneedsubsample === true ?\r\n                inputData.checkBoxOperation === 5 ? 3 : inputData.checkBoxOperation : inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data,\"descending\",\"npreregno\");\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetSubSample[0]] : [],\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationParameter = [];\r\n                        //if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \r\n                            if (inputData.checkBoxOperation === 1) {\r\n\r\n                            const wholeSubSampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const selectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.selectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest\r\n                            }\r\n                        }\r\n                        if(inputData.checkBoxOperation === 7 )\r\n                        {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3 || inputData.checkBoxOperation === 5) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: masterData.RegistrationGetTest.length > 0 ? [masterData.RegistrationGetTest[0]] : []\r\n                            }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetSubSample.length < inputData.subsampleskip) {\r\n                            testskip = 0;\r\n                            subsampleskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                        }\r\n                    } else {\r\n\r\n                        //let oldSelectedTest = inputData.masterData.selectedTest\r\n                        //  let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample,\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationTestAttachment = [];\r\n\r\n                        if (inputData.checkBoxOperation === 7 || inputData.checkBoxOperation === 1) {\r\n                            const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest,\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                            inputData.masterData.RegistrationTestAttachment : [] :\r\n                                            getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                        inputData.masterData.RegistrationTestComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (inputData.checkBoxOperation === 5) {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                        }\r\n                        else {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                        [...response.data.RegistrationTestComment] : [];\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                            [...response.data.RegistrationTestAttachment] : [];\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                        masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\"\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n           // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n\r\n\r\n            if(inputData[\"statusNone\"])\r\n            {\r\n             TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n             subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else\r\n            {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let selectedSample = inputData.selectedSample;\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let selectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n                    inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                let ntransactiontestcode = selectedTest.length > 0 ? selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n                let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    selectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.RegistrationGetSubSample[0]];\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, selectedSample, selectedSubSample, selectedTest }\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3, skipInfo,masterData\r\n                }\r\n                if (subSample) {\r\n                    if (selectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = selectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                        dispatch(getRegistrationTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                }\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedPreregno: inputData.npreregno,\r\n                    selectedTest: TestSelected ? TestSelected : inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                    // RegistrationTestComment,\r\n                    selectedSubSample:  subSampleSelected ? subSampleSelected : inputData.masterData.RegistrationGetSubSample\r\n                }\r\n                let subsamplecheck = true;\r\n                if (subSample) {\r\n                    let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                    if (SubSampleSelected.length > 0) {\r\n                        let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                        if (filterSelectedSubSample.length === 0) {\r\n                            let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((test, index) => {\r\n                                if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            if (oldSelectedSubSample.length === 0 && wholeSubSample.length > 0\r\n                                && masterData.selectedTest.length === 0) {\r\n                                const selectedSubSample1 = [inputData.masterData.RegistrationGetSubSample[0]];\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: selectedSubSample1,\r\n                                    selectedTest: []\r\n                                }\r\n                                inputData = { ...inputData, ...masterData }\r\n                                inputData[\"npreregno\"] = selectedSubSample1.map(x => x.npreregno).join(\",\")\r\n                                inputData[\"ntransactionsamplecode\"] = selectedSubSample1.map(x => x.ntransactionsamplecode).join(\",\")\r\n                                inputData[\"checkBoxOperation\"] = 3\r\n                                inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                                subsamplecheck = false;\r\n                                dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n                            }\r\n                        } else {\r\n                            oldSelectedSubSample = filterSelectedSubSample\r\n                        }\r\n\r\n                    } else {\r\n                        let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.forEach((test, index) => {\r\n                            if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (subsamplecheck) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedSubSample: oldSelectedSubSample\r\n                        }\r\n                    }\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampleskip, subsampletake }\r\n                    }\r\n                }\r\n                let wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getRegistrationTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedSubSample: inputData.selectedSubSample,\r\n                        selectedTransactionsamplecode: inputData.ntransactionsamplecode,\r\n                        selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                            [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                        // RegistrationTestComment,\r\n                    }\r\n                    //let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let RegistrationParameter = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.forEach((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n\r\n                        })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest,\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                    inputData.masterData.RegistrationTestComment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                    inputData.masterData.RegistrationTestAttachment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 5) {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 7) {\r\n                        let testList = reArrangeArrays( inputData.masterData.RegistrationGetSubSample, response.data.RegistrationGetTest, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: testList ? testList.length > 0 ?[testList[0]] :[]:[],\r\n                            RegistrationGetTest: testList ? testList.length > 0 ? testList :[]:[],\r\n                            //ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                               // let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                 let RegistrationParameter1 = [...resultResponseData];\r\n                                let ntransactiontestcode1 = testList ? testList.length > 0 ? testList[0].ntransactiontestcode : inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1 : -1\r\n                               \r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                    [...response.data.RegistrationTestComment] : [];\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                    [...response.data.RegistrationTestAttachment] : [];\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                    masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                    masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    let skipInfo = {}\r\n                    if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString() : \"-1\";\r\n                let selectedSubSample = inputData.selectedSubSample;\r\n                // let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                let masterData = { ...inputData.masterData, selectedSubSample, selectedTest }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSubSample: inputData.selectedSubSample,\r\n                    selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                }\r\n\r\n                const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport function acceptRegistration(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/acceptRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === undefined || response.data.rtn === \"Success\"\r\n                    || response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                    || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"RegistrationGetSample\"];\r\n                    delete response.data[\"RegistrationGetSubSample\"];\r\n                    delete response.data[\"RegistrationGetTest\"];\r\n                    let masterData = {\r\n                        ...LoginProps, ...response.data,\r\n                        selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                        selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                        selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showSample: undefined\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    if (response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                        || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                        toast.warn(intl.formatMessage({ id: response.data.rtn }));\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTest = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if (inputParam.selectedSubSample && inputParam.selectedSubSample.length > 0) {\r\n            value = inputParam.selectedSubSample.some(obj => obj.nspecsampletypecode !== inputParam.selectedSubSample[0].nspecsampletypecode)\r\n            if (value) {\r\n                return toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n            }\r\n            sampleList = sampleList ? [...sampleList.slice(inputParam.skip, inputParam.take)] : [];\r\n            const selectedsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedSample, \"npreregno\");\r\n           // const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\r\n            if (selectedsample && selectedsample.length > 0) {\r\n                const findTransactionStatus = [...new Set(selectedsample.map(item => item.ntransactionstatus))];\r\n\r\n                if (findTransactionStatus.length === 1) {\r\n                    if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                        if (findTransactionStatus[0] !== transactionStatus.CERTIFIED && findTransactionStatus[0] !== transactionStatus.SENT) {\r\n                            const findApprovalVersion = [...new Set(selectedsample.map(item => item.napprovalversioncode))];\r\n                            if (findApprovalVersion.length === 1) {\r\n                                const findSampleSpec = [...new Set(selectedsample.map(item => item.nallottedspeccode))];\r\n                                //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                                if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                                {\r\n                                    inputParam[\"snspecsampletypecode\"]= inputParam.selectedSubSample &&\r\n                                    [...new Set(inputParam.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n                                    dispatch(initRequest(true));\r\n                                    rsapi.post(\"/registration/getMoreTest\", { ...inputParam })\r\n                                        .then(response => {\r\n                                            dispatch({\r\n                                                type: DEFAULT_RETURN,\r\n                                                payload: {\r\n                                                    availableTest: response.data,\r\n                                                    loadChildTest: true,\r\n                                                    loading: false, ncontrolCode,\r\n                                                    screenName: \"IDS_TEST\",\r\n                                                    operation: \"create\",\r\n                                                    openModal: true,\r\n                                                    parentPopUpSize: \"lg\",\r\n                                                    selectedRecord: {},\r\n                                                    showSample: undefined\r\n                                                }\r\n                                            });\r\n                                        })\r\n                                        .catch(error => {\r\n                                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                            if (error.response.status === 500) {\r\n                                                toast.error(error.message);\r\n                                            } else {\r\n                                                toast.warn(this.props.formatMessage({ id: error.response.data }));\r\n                                            }\r\n                                        });\r\n                                } else {\r\n                                    toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                                }\r\n                            } else {\r\n                                toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                            }\r\n                        }\r\n                        else {\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\" }));\r\n                        }\r\n                    }\r\n                    else {\r\n                        ////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n                }\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const createRegistrationTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let RegistrationGetTest = updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"], response.data[\"RegistrationGetTest\"]);\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationGetTest,\r\n                    selectedTest: response.data[\"RegistrationGetTest\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    // RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    [modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {}\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n                // dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         [modalName]: false,\r\n                //         loading: false,\r\n                //         loadChildTest: false,\r\n                //         showSample: undefined,\r\n                //         openModal: false,\r\n                //         selectedRecord: {}\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getEditRegistrationComboService(inputParam, columnList, \r\n    selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n\r\n        const npreregno = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationDetails\", { ...inputParam.editRegParam, npreregno })\r\n\r\n        urlArray = [timeZoneService, actualService, selectedRegistration]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n                // const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                //  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n                //  const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                // selectedRecord, childColumnList, withoutCombocomponent)\r\n\r\n                if (selectedRecord.ntransactionstatus === transactionStatus.CANCELLED\r\n                    || selectedRecord.ntransactionstatus === transactionStatus.REJECT) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSAMPLE\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoad(x, comboData, selectedRecord1,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                    let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                    const selectedSpec = {}\r\n                    Specification = constructOptionList(response[2].data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response[2].data[\"AgaramTree\"];\r\n                    ActiveKey = response[2].data[\"FocusKey\"];\r\n                    FocusKey = response[2].data[\"ActiveKey\"];\r\n                    OpenNodes = response[2].data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ?\r\n                        Specification[0].item.ntemplatemanipulationcode : -1\r\n                    selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            AgaramTree,\r\n                            FocusKey,\r\n                            ActiveKey,\r\n                            OpenNodes,\r\n                            selectedSpec,\r\n                            Specification,\r\n                            // statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\r\n                            // currentTime,\r\n                            operation:\"update\",\r\n                             screenName: inputParam.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                            // PopUpLabel: popUpLabel,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openPortal: true,\r\n                            ncontrolCode: inputParam.editRegParam.ncontrolCode,\r\n                            loadPreregister: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            comboData: comboValues.comboData,\r\n                            childColumnList, comboComponents,\r\n                            withoutCombocomponent,\r\n                            columnList\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function updateRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n               // sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], masterData.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                 replaceUpdatedObject(response.data[\"RegistrationGetTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n              //  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                //let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    //selectedSample: response.data[\"selectedSample\"],\r\n                   // selectedSubSample: masterData[\"selectedSubSample\"],\r\n                    //selectedTest:masterData[\"selectedTest\"],\r\n                   // RegistrationGetTest,\r\n                   // RegistrationGetSubSample,\r\n                    RegistrationParameter: masterData[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openPortal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadPreregister: false, selectedRecord: {}, showSample: undefined\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelTest\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    // RegistrationGetTest:response.data[\"RegistrationGetTest\"],\r\n                    RegistrationGetTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\"),\r\n                    //  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSample\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function addsubSampleRegistration(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents,\r\n    regSubSamplewithoutCombocomponent, Map, ncontrolcode, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray[0] = timeZoneService;\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: regcolumnList,\r\n            childcolumnlist: regchildColumnList,\r\n            userinfo\r\n        })\r\n        urlArray[1] = actualService;\r\n\r\n        if (specBasedComponent) {\r\n            const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map,\r\n                specBasedComponent: specBasedComponent,\r\n                userinfo\r\n            })\r\n            urlArray[2] = ComponentTestBySpec;\r\n        } else {\r\n\r\n            const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                slno: 1,\r\n                specBasedComponent: specBasedComponent\r\n\r\n            })\r\n            urlArray[2] = TestGet;\r\n        }\r\n        Axios.all(urlArray).then(response => {\r\n            const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n            const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n            const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n            const newcomboData = parentChildComboLoad(regcolumnList, response[1].data,\r\n                selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent)\r\n            let TestCombined = [];\r\n            let lstComponent = [];\r\n            if (specBasedComponent) {\r\n                const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n\r\n                lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n            } else {\r\n                TestCombined = response[2].data\r\n            }\r\n            const comboData1 = newcomboData.comboData\r\n            const selectedRecord1 = newcomboData.selectedRecord\r\n            regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                if (componentrow.inputtype === \"date\") {\r\n                    if (componentrow.mandatory) {\r\n                        selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? new Date() : \"\";\r\n                    }\r\n                    // if (componentrow.timezone) {\r\n                    //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                    //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                    //         defaulttimezone ? defaulttimezone : -1\r\n                    // }\r\n                }\r\n\r\n            })\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    screenName: \"SubSample\",\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent,\r\n                    openModal: true,\r\n                    operation: \"create\",\r\n                    loadRegSubSample: true,\r\n                    selectedRecord: selectedRecord1,\r\n                    regSubSamplecomboData: comboData1,\r\n                    regSubSamplecomboComponents,\r\n                    regSubSamplewithoutCombocomponent,\r\n                    TestCombined,\r\n                    regparentSubSampleColumnList: regcolumnList,\r\n                    ncontrolCode: ncontrolcode,\r\n                    timeZoneList,\r\n                    defaultTimeZone,\r\n                    masterData,\r\n                    specBasedComponent\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function saveSubSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                // let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample, response.data[\"selectedSubSample\"]);\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample =response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n\r\n                let RegistrationParameter = response.data[\"RegistrationParameter\"]\r\n\r\n                RegistrationParameter = getSameRecordFromTwoArrays(RegistrationParameter, selectedTest, 'ntransactiontestcode')\r\n\r\n                let masterData = { ...inputParam.inputData.masterData }\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationParameter\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample: false\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                //    dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         openModal: false,\r\n                //         loadEsign: false,\r\n                //         loading: false,\r\n                //         showSample: undefined,\r\n                //         selectedRecord: {},\r\n                //         loadRegSubSample:false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getEditSubSampleComboService(inputParam, columnList, selectedRecord1,\r\n    childColumnList, comboComponents,\r\n    withoutCombocomponent, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n\r\n        const ntransactionsamplecode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\", { ...inputParam.editRegParam, ntransactionsamplecode })\r\n\r\n        urlArray = [timeZoneService, actualService, selectedRegistration]\r\n        // if(specBasedComponent){\r\n        //     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n        //         ...Map,\r\n        //         specBasedComponent: specBasedComponent\r\n        //     })\r\n        //     urlArray.push(ComponentTestBySpec) \r\n        // }\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[2].data[\"SelectedRegistrationSubSample\"][0] };\r\n\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    //               let lstComponent=[]\r\n                    if (specBasedComponent) {\r\n                        selectedRecord[\"ncomponentcode\"] = { label: selectedRecord[\"scomponentname\"], value: selectedRecord[\"ncomponentcode\"] }\r\n                    }\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoad(x, comboData, selectedRecord1,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n\r\n                    selectedRecord = { ...selectedRecord }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            screenName: \"IDS_SUBSAMPLE\",\r\n                            operation: \"update\",\r\n                            specBasedComponent\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function onUpdateSubSampleRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistrationSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                //  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    // selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                    // RegistrationGetSubSample,\r\n                    RegistrationParameter: response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: \"SubSample\",\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelSubSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    // selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function preregRecordToQuarantine(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/quarantineRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                // replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                delete response.data[\"RegistrationGetSample\"];\r\n                delete response.data[\"RegistrationGetSubSample\"];\r\n                delete response.data[\"RegistrationGetTest\"];\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestChildTabDetailRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}