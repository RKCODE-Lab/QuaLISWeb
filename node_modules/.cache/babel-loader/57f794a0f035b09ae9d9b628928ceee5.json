{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from'react-toastify';import Axios from'axios';import rsapi from'../rsapi';import{initRequest}from'./LoginAction';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,constructOptionList,rearrangeDateFormat,ageCalculate,formatInputDate}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';import{getLeftPosition}from'@progress/kendo-react-tooltip/dist/npm/utils';import{Utils as QbUtils}from\"@react-awesome-query-builder/ui\";var checkTree=QbUtils.checkTree,loadTree=QbUtils.loadTree,uuid=QbUtils.uuid;export function getPatientDetail(patient,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"patient/getPatient\",{spatientid:patient.spatientid,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientComboService(inputParam){return function(dispatch){var genderService=rsapi.post(\"patient/getGender\",{userinfo:inputParam.userInfo});var UTCtimeZoneService=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:inputParam.userInfo});var countryService=rsapi.post(\"patient/getCountry\",{userinfo:inputParam.userInfo});var regionService=rsapi.post(\"patient/getRegion\",{userinfo:inputParam.userInfo});var urlArray=[];if(inputParam.operation===\"create\"){urlArray=[genderService,UTCtimeZoneService,countryService,regionService];}else{var _rsapi$post;var patientById=rsapi.post(\"patient/getActivePatientById\",(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.primaryKeyName,inputParam.masterData.SelectedPatient[inputParam.primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post));var citySer=rsapi.post(\"/patient/getCity\",{\"userinfo\":inputParam.userInfo,\"ndistrictcode\":inputParam.masterData.SelectedPatient.ndistrictcode});var districtSer=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":inputParam.userInfo,\"nregioncode\":inputParam.masterData.SelectedPatient.nregioncode});var citySertemp=rsapi.post(\"/patient/getCity\",{\"userinfo\":inputParam.userInfo,\"ndistrictcode\":inputParam.masterData.SelectedPatient.ndistrictcodetemp});var districtSertemp=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":inputParam.userInfo,\"nregioncode\":inputParam.masterData.SelectedPatient.nregioncodetemp});urlArray=[genderService,UTCtimeZoneService,countryService,regionService,patientById,citySer,districtSer,citySertemp,districtSertemp];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var gender=[];var city=[];var country=[];var region=[];var regionTemp=[];var districtTemp=[];var district=[];var cityTemp=[];var districtList=[];var cityList=[];var cityListTemp=[];var districtListTemp=[];var genderMap=constructOptionList(response[0].data['genderList']||[],\"ngendercode\",\"sgendername\",undefined,undefined,false);var genderList=genderMap.get(\"OptionList\");var countryMap=constructOptionList(response[2].data['countryList']||[],\"ncountrycode\",\"scountryname\",undefined,undefined,false);var countryList=countryMap.get(\"OptionList\");var regionMap=constructOptionList(response[3].data['regionList']||[],\"nregioncode\",\"sregionname\",undefined,undefined,false);var regionList=regionMap.get(\"OptionList\");if(inputParam.operation===\"update\"){var cityserMap=constructOptionList(response[5].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);cityList=cityserMap.get(\"OptionList\");var distMap=constructOptionList(response[6].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtList=distMap.get(\"OptionList\");var cityserTempMap=constructOptionList(response[7].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);cityListTemp=cityserTempMap.get(\"OptionList\");var distTempMap=constructOptionList(response[8].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtListTemp=distTempMap.get(\"OptionList\");}var selectedRecord={};var currentTime=rearrangeDateFormat(inputParam.userInfo,response[1].data);if(inputParam.operation===\"update\"){selectedRecord=response[4].data;gender.push({\"value\":response[4].data[\"ngendercode\"],\"label\":response[4].data[\"sgendername\"]});city.push({\"value\":response[4].data[\"ncitycode\"],\"label\":response[4].data[\"scityname\"]});country.push({\"value\":response[4].data[\"ncountrycode\"],\"label\":response[4].data[\"scountryname\"]});region.push({\"value\":response[4].data[\"nregioncode\"],\"label\":response[4].data[\"sregionname\"]});regionTemp.push({\"value\":response[4].data[\"nregioncodetemp\"],\"label\":response[4].data[\"sregionnametemp\"]});districtTemp.push({\"value\":response[4].data[\"ndistrictcodetemp\"],\"label\":response[4].data[\"sdistrictnametemp\"]});district.push({\"value\":response[4].data[\"ndistrictcode\"],\"label\":response[4].data[\"sdistrictname\"]});cityTemp.push({\"value\":response[4].data[\"ncitycodetemp\"],\"label\":response[4].data[\"scitynametemp\"]});selectedRecord[\"ngendercode\"]=gender[0];selectedRecord[\"ncitycode\"]=city[0];selectedRecord[\"ncountrycode\"]=country[0];selectedRecord[\"nregioncode\"]=region[0];selectedRecord[\"nregioncodetemp\"]=regionTemp[0];selectedRecord[\"ndistrictcodetemp\"]=districtTemp[0];selectedRecord[\"ndistrictcode\"]=district[0];selectedRecord[\"ncitycodetemp\"]=cityTemp[0];if(selectedRecord[\"ddob\"]!==null){selectedRecord[\"ddob\"]=rearrangeDateFormat(inputParam.userInfo,selectedRecord[\"sdob\"]);}}else{selectedRecord[\"ngendercode\"]=genderMap.get(\"DefaultValue\");//ALPD-3267\n//selectedRecord[\"ddob\"] = rearrangeDateFormat(inputParam.userInfo, response[1].data);\nselectedRecord[\"ddob\"]=\"\";selectedRecord[\"sage\"]=ageCalculate(selectedRecord[\"ddob\"]);selectedRecord[\"nneedcurrentaddress\"]=transactionStatus.NO;selectedRecord[\"today\"]=inputParam.userInfo;}dispatch({type:DEFAULT_RETURN,payload:{genderList:genderList,cityListTemp:cityListTemp,districtListTemp:districtListTemp,districtList:districtList,cityList:cityList,countryList:countryList,operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false,currentTime:currentTime,regionList:regionList,patientHistory:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientReport(patient,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"patient/patientReportGenerate\",{patient:patient,userinfo:userInfo,ncontrolcode:ncontrolCode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientDetailsByFilterQuery(inputParam,masterData,SelectedPatientCaseType){return function(dispatch){var URL=[];var filterData;var filterData1;if(inputParam.displayname===\"Filter\"){filterData=rsapi.post(\"/patient/getFilterByDate\",{\"userinfo\":inputParam.inputData.userinfo,\"formdate\":inputParam.inputData.date.fromDate,\"todate\":inputParam.inputData.date.toDate,\"casetype\":inputParam.inputData.casetype});}else{filterData=rsapi.post(\"/patient/filterByPatient\",{\"filterquery\":inputParam.inputData.filterquery,\"userinfo\":inputParam.inputData.userinfo});if(masterData.QueryName===\"Create New Query\"){filterData1=rsapi.post(\"/patient/createFilterQuery\",_objectSpread(_objectSpread({},inputParam.inputData.patientfilter),{},{userinfo:inputParam.inputData.userinfo}));}}URL=[filterData,filterData1];dispatch(initRequest(true));Axios.all(URL).then(function(response){var slideResult=response[0].data.PatientList;var selectedRecord=response[0].data.PatientList;selectedRecord[\"fromdate\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterFromdate);selectedRecord[\"ToDay\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterToDay);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),{},{SelectedPatientCaseType:SelectedPatientCaseType},response[0].data),{},{searchedData:undefined});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,skip:0,take:20,slideResult:false,openModal:false,openSolidAdvFilter:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}export function getDistrictComboServices(methodParam){return function(dispatch){var URL=[];URL=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":methodParam.inputData.userinfo,\"nregioncode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var _payload;var districtList;var districtMap=constructOptionList(response[0].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtList=districtMap.get(\"OptionList\");var districtListTemp;var districtMapTemp=constructOptionList(response[0].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtListTemp=districtMapTemp.get(\"OptionList\");var cityList=undefined;var cityListTemp=undefined;dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,methodParam.inputData.optionlistname,districtList),_defineProperty(_payload,methodParam.inputData.optionlistname,districtListTemp),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"data\",undefined),_defineProperty(_payload,\"dataState\",undefined),_defineProperty(_payload,\"cityList\",cityList),_defineProperty(_payload,\"cityListTemp\",cityListTemp),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCityComboServices(methodParam){return function(dispatch){var URL=[];URL=rsapi.post(\"/patient/getCity\",{\"userinfo\":methodParam.inputData.userinfo,\"ndistrictcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var _payload2;var cityMap=constructOptionList(response[0].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);var cityList=cityMap.get(\"OptionList\");var cityMapTemp=constructOptionList(response[0].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);var cityListTemp=cityMapTemp.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:(_payload2={},_defineProperty(_payload2,methodParam.inputData.optionlistname,cityList),_defineProperty(_payload2,methodParam.inputData.optionlistname,cityListTemp),_defineProperty(_payload2,\"loading\",false),_defineProperty(_payload2,\"data\",undefined),_defineProperty(_payload2,\"dataState\",undefined),_payload2)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function filtercomboService(methodParam){return function(dispatch){var URL=[];var URL1=[];if(methodParam.displayname===\"onSubmit\"){URL=rsapi.post(\"/patient/createFilterQuery\",_objectSpread({},methodParam.inputParam.inputData));URL1=rsapi.post(\"/patient/filterByPatient\",{\"filterquery\":methodParam.inputParam.inputData.patientfilter.filterquery,\"userinfo\":methodParam.inputParam.inputData.userinfo});}else if(methodParam.displayname===\"ComboList\"){URL=rsapi.post(\"/patient/getFilterQueryList\",{\"userinfo\":methodParam.inputData.userinfo});}else{URL=rsapi.post(\"/patient/getFilterQuery\",{\"userinfo\":methodParam.inputData.userinfo,\"npatientfiltercode\":methodParam.inputData.primarykey});}dispatch(initRequest(true));Axios.all([URL,URL1]).then(function(response){var filterquery;var selectedRecord;var QueryName;var jsonTree;var openSolidAdvFilter;var openAlertModal;var openModal;var masterData={};var slideResult;var patientFilerList;if(methodParam.displayname===\"onSubmit\"){//selectedRecord =response[1].data.PatientList;   \nmasterData=_objectSpread(_objectSpread({},methodParam.masterData),response[1].data);openSolidAdvFilter=false;openAlertModal=false;openModal=false;selectedRecord={};}else if(methodParam.displayname===\"ComboList\"){var patcaseFiltertypeMap=constructOptionList(response[0].data.patientFilterType||[],\"npatientfiltercode\",\"spatientfiltername\",undefined,undefined,false);patientFilerList=patcaseFiltertypeMap.get(\"OptionList\");openSolidAdvFilter=true;openModal=true;selectedRecord={};masterData=_objectSpread(_objectSpread(_objectSpread({},methodParam.masterData),response[0].data),{},{patientFilerList:patientFilerList});}else{masterData=_objectSpread({},methodParam.masterData);selectedRecord=_objectSpread({},methodParam.masterData.selectedRecord);filterquery=response[0].data.SelectedPatientFilterType.filterquery===null?undefined:response[0].data.SelectedPatientFilterType.filterquery;//  QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername;\nQueryName=response[0].data.SelectedPatientFilterType.spatientfiltername!==\"Create New Query\"?response[0].data.SelectedPatientFilterType.spatientfiltername:undefined;var emptyInitValue={\"id\":uuid(),\"type\":\"group\"};var queryFilter=JSON.parse(response[0].data.SelectedPatientFilterType.tree);var initValue=queryFilter&&Object.keys(queryFilter).length>0?queryFilter:emptyInitValue;jsonTree=checkTree(loadTree(initValue),methodParam.Patconfigs);openSolidAdvFilter=true;openModal=true;}dispatch({type:DEFAULT_RETURN,payload:{loading:false,data:undefined,masterData:masterData,dataState:undefined,tree:jsonTree,filterquery:filterquery,QueryName:QueryName,openSolidAdvFilter:openSolidAdvFilter,openAlertModal:openAlertModal,selectedRecord:selectedRecord,openModal:openModal,slideResult:slideResult,patientFilerList:patientFilerList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterStatusCombo(methodParam){return function(dispatch){var URL=[];URL=rsapi.post(\"/patient/getFilterQueryList\",{\"userinfo\":methodParam.inputData.userinfo,\"nfilterstatus\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var patcaseFiltertypeMap=constructOptionList(response[0].data.patientFilterType||[],\"npatientfiltercode\",\"spatientfiltername\",undefined,undefined,false);var patientFilerList=patcaseFiltertypeMap.get(\"OptionList\");var openSolidAdvFilter=true;var openModal=true;var masterData=_objectSpread(_objectSpread(_objectSpread({},methodParam.masterData),response[0].data),{},{patientFilerList:patientFilerList});var filterquery=response[0].data.SelectedPatientFilterType.filterquery===null?undefined:response[0].data.SelectedPatientFilterType.filterquery;// const QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername;\nvar QueryName=response[0].data.SelectedPatientFilterType.spatientfiltername!==\"Create New Query\"?response[0].data.SelectedPatientFilterType.spatientfiltername:undefined;var emptyInitValue={\"id\":uuid(),\"type\":\"group\"};var queryFilter=JSON.parse(response[0].data.SelectedPatientFilterType.tree);var initValue=queryFilter&&Object.keys(queryFilter).length>0?queryFilter:emptyInitValue;var jsonTree=checkTree(loadTree(initValue),methodParam.Patconfigs);dispatch({type:DEFAULT_RETURN,payload:{openSolidAdvFilter:openSolidAdvFilter,openModal:openModal,tree:jsonTree,filterquery:filterquery,QueryName:QueryName,loading:false,data:undefined,dataState:undefined,masterData:masterData,screenName:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientHistory(patient,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"patient/getPatientHistory\",{spatientid:patient.spatientid,userinfo:userInfo}).then(function(response){var patienthist=[];patienthist=response.data;masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,patienthist:patienthist,loading:false,patientHistory:true,openModal:true,loadEsign:false,openSolidAdvFilter:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/PatientAction.js"],"names":["toast","Axios","rsapi","initRequest","DEFAULT_RETURN","sortData","constructOptionList","rearrangeDateFormat","ageCalculate","formatInputDate","intl","transactionStatus","getLeftPosition","Utils","QbUtils","checkTree","loadTree","uuid","getPatientDetail","patient","userInfo","masterData","dispatch","post","spatientid","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getPatientComboService","inputParam","genderService","UTCtimeZoneService","countryService","regionService","urlArray","patientById","primaryKeyName","SelectedPatient","citySer","ndistrictcode","districtSer","nregioncode","citySertemp","ndistrictcodetemp","districtSertemp","nregioncodetemp","all","gender","city","country","region","regionTemp","districtTemp","district","cityTemp","districtList","cityList","cityListTemp","districtListTemp","genderMap","genderList","get","countryMap","countryList","regionMap","regionList","cityserMap","distMap","cityserTempMap","distTempMap","selectedRecord","currentTime","push","NO","screenName","openModal","ncontrolCode","ncontrolcode","patientHistory","getPatientReport","loadEsign","document","getElementById","setAttribute","filepath","click","getPatientDetailsByFilterQuery","SelectedPatientCaseType","URL","filterData","filterData1","displayname","inputData","date","fromDate","toDate","casetype","filterquery","QueryName","patientfilter","slideResult","PatientList","filterFromdate","filterToDay","searchedData","skip","take","openSolidAdvFilter","formatMessage","id","getDistrictComboServices","methodParam","primarykey","districtMap","districtMapTemp","optionlistname","getCityComboServices","cityMap","cityMapTemp","filtercomboService","URL1","jsonTree","openAlertModal","patientFilerList","patcaseFiltertypeMap","patientFilterType","SelectedPatientFilterType","spatientfiltername","emptyInitValue","queryFilter","JSON","parse","tree","initValue","Object","keys","length","Patconfigs","dataState","getFilterStatusCombo","getPatientHistory","patienthist"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport rsapi from '../rsapi';\r\nimport { initRequest } from './LoginAction';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, constructOptionList, rearrangeDateFormat, ageCalculate, formatInputDate } from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { getLeftPosition } from '@progress/kendo-react-tooltip/dist/npm/utils';\r\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\r\n\r\nconst { checkTree, loadTree, uuid } = QbUtils;\r\n\r\nexport function getPatientDetail(patient, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"patient/getPatient\", { spatientid: patient.spatientid, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, operation: null, modalName: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getPatientComboService(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        const genderService = rsapi.post(\"patient/getGender\", { userinfo: inputParam.userInfo });\r\n        const UTCtimeZoneService = rsapi.post(\"timezone/getLocalTimeByZone\", { userinfo: inputParam.userInfo });\r\n        const countryService = rsapi.post(\"patient/getCountry\", { userinfo: inputParam.userInfo });\r\n        const regionService = rsapi.post(\"patient/getRegion\", { userinfo: inputParam.userInfo });\r\n\r\n        let urlArray = [];\r\n        if (inputParam.operation === \"create\") {\r\n            urlArray = [genderService, UTCtimeZoneService, countryService, regionService];\r\n        }\r\n        else {\r\n            const patientById = rsapi.post(\"patient/getActivePatientById\",\r\n                {\r\n                    [inputParam.primaryKeyName]: inputParam.masterData.SelectedPatient[inputParam.primaryKeyName],\r\n                    \"userinfo\": inputParam.userInfo\r\n                });\r\n            const citySer = rsapi.post(\"/patient/getCity\", { \"userinfo\": inputParam.userInfo, \"ndistrictcode\": inputParam.masterData.SelectedPatient.ndistrictcode });\r\n            const districtSer = rsapi.post(\"/patient/getDistrict\", { \"userinfo\": inputParam.userInfo, \"nregioncode\": inputParam.masterData.SelectedPatient.nregioncode })\r\n            const citySertemp = rsapi.post(\"/patient/getCity\", { \"userinfo\": inputParam.userInfo, \"ndistrictcode\": inputParam.masterData.SelectedPatient.ndistrictcodetemp });\r\n            const districtSertemp = rsapi.post(\"/patient/getDistrict\", { \"userinfo\": inputParam.userInfo, \"nregioncode\": inputParam.masterData.SelectedPatient.nregioncodetemp });\r\n            urlArray = [genderService, UTCtimeZoneService, countryService, regionService, patientById, citySer, districtSer, citySertemp, districtSertemp];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let gender = [];\r\n                let city = [];\r\n                let country = [];\r\n                let region = [];\r\n                let regionTemp = [];\r\n                let districtTemp = [];\r\n                let district = [];\r\n                let cityTemp = [];\r\n                let districtList = [];\r\n                let cityList = [];\r\n                let cityListTemp = [];\r\n                let districtListTemp = [];\r\n                const genderMap = constructOptionList(response[0].data['genderList'] || [], \"ngendercode\",\r\n                    \"sgendername\", undefined, undefined, false);\r\n                const genderList = genderMap.get(\"OptionList\");\r\n\r\n                const countryMap = constructOptionList(response[2].data['countryList'] || [], \"ncountrycode\",\r\n                    \"scountryname\", undefined, undefined, false);\r\n                const countryList = countryMap.get(\"OptionList\");\r\n\r\n                const regionMap = constructOptionList(response[3].data['regionList'] || [], \"nregioncode\",\r\n                    \"sregionname\", undefined, undefined, false);\r\n                const regionList = regionMap.get(\"OptionList\");\r\n                if (inputParam.operation === \"update\") {\r\n                    const cityserMap = constructOptionList(response[5].data['cityList'] || [], \"ncitycode\",\r\n                        \"scityname\", undefined, undefined, false);\r\n                    cityList = cityserMap.get(\"OptionList\");\r\n\r\n                    const distMap = constructOptionList(response[6].data['districtList'] || [], \"ndistrictcode\",\r\n                        \"sdistrictname\", undefined, undefined, false);\r\n                    districtList = distMap.get(\"OptionList\");\r\n\r\n                    const cityserTempMap = constructOptionList(response[7].data['cityList'] || [], \"ncitycode\",\r\n                        \"scityname\", undefined, undefined, false);\r\n                    cityListTemp = cityserTempMap.get(\"OptionList\");\r\n\r\n                    const distTempMap = constructOptionList(response[8].data['districtList'] || [], \"ndistrictcode\",\r\n                        \"sdistrictname\", undefined, undefined, false);\r\n                    districtListTemp = distTempMap.get(\"OptionList\");\r\n                }\r\n\r\n                let selectedRecord = {};\r\n                const currentTime = rearrangeDateFormat(inputParam.userInfo, response[1].data);\r\n\r\n                if (inputParam.operation === \"update\") {\r\n                    selectedRecord = response[4].data;\r\n\r\n                    gender.push({ \"value\": response[4].data[\"ngendercode\"], \"label\": response[4].data[\"sgendername\"] });\r\n                    city.push({ \"value\": response[4].data[\"ncitycode\"], \"label\": response[4].data[\"scityname\"] });\r\n                    country.push({ \"value\": response[4].data[\"ncountrycode\"], \"label\": response[4].data[\"scountryname\"] });\r\n                    region.push({ \"value\": response[4].data[\"nregioncode\"], \"label\": response[4].data[\"sregionname\"] });\r\n                    regionTemp.push({ \"value\": response[4].data[\"nregioncodetemp\"], \"label\": response[4].data[\"sregionnametemp\"] });\r\n                    districtTemp.push({ \"value\": response[4].data[\"ndistrictcodetemp\"], \"label\": response[4].data[\"sdistrictnametemp\"] });\r\n                    district.push({ \"value\": response[4].data[\"ndistrictcode\"], \"label\": response[4].data[\"sdistrictname\"] });\r\n                    cityTemp.push({ \"value\": response[4].data[\"ncitycodetemp\"], \"label\": response[4].data[\"scitynametemp\"] });\r\n                    selectedRecord[\"ngendercode\"] = gender[0];\r\n                    selectedRecord[\"ncitycode\"] = city[0];\r\n                    selectedRecord[\"ncountrycode\"] = country[0];\r\n                    selectedRecord[\"nregioncode\"] = region[0];\r\n                    selectedRecord[\"nregioncodetemp\"] = regionTemp[0];\r\n                    selectedRecord[\"ndistrictcodetemp\"] = districtTemp[0];\r\n                    selectedRecord[\"ndistrictcode\"] = district[0];\r\n                    selectedRecord[\"ncitycodetemp\"] = cityTemp[0];\r\n\r\n                    if (selectedRecord[\"ddob\"] !== null) {\r\n                        selectedRecord[\"ddob\"] = rearrangeDateFormat(inputParam.userInfo, selectedRecord[\"sdob\"]);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    selectedRecord[\"ngendercode\"] = genderMap.get(\"DefaultValue\");\r\n                    //ALPD-3267\r\n                    //selectedRecord[\"ddob\"] = rearrangeDateFormat(inputParam.userInfo, response[1].data);\r\n                    selectedRecord[\"ddob\"] = \"\";\r\n                    selectedRecord[\"sage\"] = ageCalculate(selectedRecord[\"ddob\"])\r\n                    selectedRecord[\"nneedcurrentaddress\"] = transactionStatus.NO;\r\n                    selectedRecord[\"today\"] = inputParam.userInfo;\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        genderList,\r\n                        cityListTemp,\r\n                        districtListTemp,\r\n                        districtList,\r\n                        cityList,\r\n                        countryList,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        selectedRecord,\r\n                        openModal: true,\r\n                        ncontrolCode: inputParam.ncontrolcode,\r\n                        loading: false,\r\n                        currentTime,\r\n                        regionList,\r\n                        patientHistory:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getPatientReport(patient, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"patient/patientReportGenerate\", {\r\n            patient, userinfo: userInfo,\r\n            ncontrolcode: ncontrolCode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        loadEsign: false, openModal: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType) {\r\n    return function (dispatch) {\r\n        let URL = [];\r\n        let filterData;\r\n        let filterData1;\r\n        if (inputParam.displayname === \"Filter\") {\r\n            filterData = rsapi.post(\"/patient/getFilterByDate\", {\r\n                \"userinfo\": inputParam.inputData.userinfo,\r\n                \"formdate\": inputParam.inputData.date.fromDate, \"todate\": inputParam.inputData.date.toDate, \"casetype\": inputParam.inputData.casetype\r\n            })\r\n        }\r\n        else {\r\n            filterData = rsapi.post(\"/patient/filterByPatient\", {\r\n                \"filterquery\": inputParam.inputData.filterquery\r\n                , \"userinfo\": inputParam.inputData.userinfo\r\n            })\r\n            if (masterData.QueryName === \"Create New Query\") {\r\n                filterData1 = rsapi.post(\"/patient/createFilterQuery\", { ...inputParam.inputData.patientfilter, userinfo: inputParam.inputData.userinfo })\r\n            }\r\n        }\r\n\r\n        URL = [filterData, filterData1];\r\n        dispatch(initRequest(true));\r\n        Axios.all(URL)\r\n            .then(response => {\r\n                let slideResult = response[0].data.PatientList;\r\n                let selectedRecord = response[0].data.PatientList;\r\n                selectedRecord[\"fromdate\"] = rearrangeDateFormat(inputParam.inputData.userinfo, response[0].data.filterFromdate);\r\n                selectedRecord[\"ToDay\"] = rearrangeDateFormat(inputParam.inputData.userinfo, response[0].data.filterToDay);\r\n                masterData = {\r\n                    ...masterData, SelectedPatientCaseType: SelectedPatientCaseType,\r\n                    ...response[0].data, searchedData: undefined\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false, skip: 0, take: 20, slideResult: false,\r\n                        openModal: false, openSolidAdvFilter: false, selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getDistrictComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = [];\r\n        URL = rsapi.post(\"/patient/getDistrict\", { \"userinfo\": methodParam.inputData.userinfo, \"nregioncode\": methodParam.inputData.primarykey })\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let districtList;\r\n                const districtMap = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\",\r\n                    \"sdistrictname\", undefined, undefined, false);\r\n\r\n                districtList = districtMap.get(\"OptionList\");\r\n                let districtListTemp;\r\n                const districtMapTemp = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\",\r\n                    \"sdistrictname\", undefined, undefined, false);\r\n\r\n                districtListTemp = districtMapTemp.get(\"OptionList\");\r\n\r\n                const cityList = undefined;\r\n                const cityListTemp = undefined;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        [methodParam.inputData.optionlistname]: districtList, [methodParam.inputData.optionlistname]: districtListTemp,\r\n                        loading: false, data: undefined, dataState: undefined, cityList, cityListTemp\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCityComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = [];\r\n        URL = rsapi.post(\"/patient/getCity\", { \"userinfo\": methodParam.inputData.userinfo, \"ndistrictcode\": methodParam.inputData.primarykey })\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                const cityMap = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\",\r\n                    \"scityname\", undefined, undefined, false);\r\n\r\n                const cityList = cityMap.get(\"OptionList\");\r\n                const cityMapTemp = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\",\r\n                    \"scityname\", undefined, undefined, false);\r\n\r\n                const cityListTemp = cityMapTemp.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                        { [methodParam.inputData.optionlistname]: cityList, [methodParam.inputData.optionlistname]: cityListTemp, loading: false, data: undefined, dataState: undefined }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function filtercomboService(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = [];\r\n        let URL1 = [];\r\n        if (methodParam.displayname === \"onSubmit\") {\r\n            URL = rsapi.post(\"/patient/createFilterQuery\", { ...methodParam.inputParam.inputData })\r\n            URL1 = rsapi.post(\"/patient/filterByPatient\", {\r\n                \"filterquery\": methodParam.inputParam.inputData.patientfilter.filterquery\r\n                , \"userinfo\": methodParam.inputParam.inputData.userinfo\r\n            })\r\n        } else if (methodParam.displayname === \"ComboList\") {\r\n            URL = rsapi.post(\"/patient/getFilterQueryList\", { \"userinfo\": methodParam.inputData.userinfo })\r\n\r\n        }\r\n        else {\r\n            URL = rsapi.post(\"/patient/getFilterQuery\", { \"userinfo\": methodParam.inputData.userinfo, \"npatientfiltercode\": methodParam.inputData.primarykey })\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL, URL1])\r\n            .then(response => {\r\n                let filterquery;\r\n                let selectedRecord;\r\n                let QueryName;\r\n                let jsonTree;\r\n                let openSolidAdvFilter;\r\n                let openAlertModal;\r\n                let openModal;\r\n                let masterData = {};\r\n                let slideResult;\r\n                let patientFilerList;\r\n                if (methodParam.displayname === \"onSubmit\") {\r\n                    //selectedRecord =response[1].data.PatientList;   \r\n                    masterData = {\r\n                        ...methodParam.masterData,\r\n                        ...response[1].data,\r\n                    };\r\n                    openSolidAdvFilter = false\r\n                    openAlertModal = false\r\n                    openModal = false\r\n                    selectedRecord={};\r\n                } else if (methodParam.displayname === \"ComboList\") {\r\n                    const patcaseFiltertypeMap = constructOptionList(response[0].data.patientFilterType || [], \"npatientfiltercode\",\r\n                        \"spatientfiltername\", undefined, undefined, false);\r\n                    patientFilerList = patcaseFiltertypeMap.get(\"OptionList\");\r\n                    openSolidAdvFilter = true\r\n                    openModal = true\r\n                    selectedRecord = {};\r\n                    masterData = {\r\n                        ...methodParam.masterData,\r\n                        ...response[0].data, patientFilerList: patientFilerList\r\n                    };\r\n                }\r\n                else {\r\n                    masterData = {\r\n                        ...methodParam.masterData,\r\n                    };\r\n                    selectedRecord = {\r\n                        ...methodParam.masterData.selectedRecord\r\n                    }\r\n                    filterquery = response[0].data.SelectedPatientFilterType.filterquery === null ? undefined : response[0].data.SelectedPatientFilterType.filterquery;\r\n                  //  QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername;\r\n                    QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername !==\"Create New Query\" ? response[0].data.SelectedPatientFilterType.spatientfiltername:undefined;\r\n                    const emptyInitValue = { \"id\": uuid(), \"type\": \"group\" };\r\n                    const queryFilter = JSON.parse((response[0].data.SelectedPatientFilterType.tree))\r\n                    const initValue = queryFilter && Object.keys(queryFilter).length > 0 ? queryFilter : emptyInitValue;\r\n                    jsonTree = checkTree(loadTree(initValue), methodParam.Patconfigs);\r\n                    openSolidAdvFilter = true;\r\n                    openModal = true;\r\n                   \r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        loading: false, data: undefined, masterData, dataState: undefined, tree: jsonTree, filterquery, QueryName,\r\n                        openSolidAdvFilter, openAlertModal,selectedRecord , openModal, slideResult, patientFilerList\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getFilterStatusCombo(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = [];\r\n        URL = rsapi.post(\"/patient/getFilterQueryList\", { \"userinfo\": methodParam.inputData.userinfo, \"nfilterstatus\": methodParam.inputData.primarykey })\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                const patcaseFiltertypeMap = constructOptionList(response[0].data.patientFilterType || [], \"npatientfiltercode\",\r\n                    \"spatientfiltername\", undefined, undefined, false);\r\n                const patientFilerList = patcaseFiltertypeMap.get(\"OptionList\");\r\n                const openSolidAdvFilter = true\r\n                const openModal = true\r\n                const masterData = {\r\n                    ...methodParam.masterData,\r\n                    ...response[0].data, patientFilerList: patientFilerList\r\n                };\r\n                const filterquery = response[0].data.SelectedPatientFilterType.filterquery === null ? undefined : response[0].data.SelectedPatientFilterType.filterquery;\r\n               // const QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername;\r\n                const   QueryName = response[0].data.SelectedPatientFilterType.spatientfiltername !==\"Create New Query\" ? response[0].data.SelectedPatientFilterType.spatientfiltername:undefined;\r\n                const emptyInitValue = { \"id\": uuid(), \"type\": \"group\" };\r\n                const queryFilter = JSON.parse((response[0].data.SelectedPatientFilterType.tree))\r\n                const initValue = queryFilter && Object.keys(queryFilter).length > 0 ? queryFilter : emptyInitValue;\r\n                const jsonTree = checkTree(loadTree(initValue), methodParam.Patconfigs);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        openSolidAdvFilter, openModal, tree: jsonTree, filterquery, QueryName,\r\n                        loading: false, data: undefined, dataState: undefined, masterData,screenName:undefined\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getPatientHistory(patient, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"patient/getPatientHistory\", { spatientid: patient.spatientid, userinfo: userInfo })\r\n            .then(response => {\r\n                let patienthist=[];\r\n                patienthist=response.data;\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, operation: null, modalName: undefined,patienthist,\r\n                        loading: false,patientHistory:true ,openModal:true,loadEsign:false,openSolidAdvFilter:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false} })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}