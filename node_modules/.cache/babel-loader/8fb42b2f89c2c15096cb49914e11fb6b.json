{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport rsapi from \"../rsapi\";\nimport { constructOptionList, constructjsonOptionList } from \"../components/CommonScript\";\nimport { initRequest } from \"./LoginAction\";\nimport axios from \"axios\";\nexport function getBarcodeDynamicChange(inputParem, selectedRecordFilter, control, masterData, parentcolumnlist, childcolumnlist, userinfo, listData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getChildValuesForBarcodeConfiguration\", {\n      child: inputParem.child,\n      parentdata: inputParem.item.jsondata,\n      parentsource: inputParem.source,\n      [inputParem.primarykeyField]: inputParem.value,\n      valuemember: inputParem.primarykeyField,\n      childcolumnlist,\n      userinfo,\n      parentcolumnlist\n    }).then(response => {\n      let returnObj = parentChildComboLoadForBarcode(parentcolumnlist, response.data, selectedRecordFilter, childcolumnlist, userinfo.slanguagetypecode, userinfo);\n      let masterData1 = { ...masterData,\n        ...response.data\n      };\n      listData = { ...listData,\n        ...returnObj.comboData\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          selectedRecordFilter: returnObj.selectedRecord,\n          masterData: masterData1,\n          listData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeTemplateControlBC(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getBarcodeDynamicChange\", {\n      'nformcode': map.selectedRecordFilter.nformcode.value,\n      'nbarcodetemplatecode': map.nbarcodetemplatecode,\n      'userinfo': map.userInfo\n    }).then(response => {\n      let masterData = { ...map.masterData,\n        ...response.data,\n        ComboComponnet: []\n      };\n      const listData = { ...map.listData\n      };\n      const selectedRecordFilter = { ...map.selectedRecordFilter\n      };\n      selectedRecordFilter['ncontrolcode'] = undefined;\n\n      if (response.data.Control) {\n        const data = constructOptionList(response.data.Control || [], 'ncontrolcode', 'scontrolname').get(\"OptionList\");\n        listData['ncontrolcode'] = data;\n      }\n\n      Object.keys(listData).map(x => {\n        if (x !== 'nformcode' && x !== 'ncontrolcode') {\n          listData[x] = [];\n          selectedRecordFilter[x] = undefined;\n        }\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          selectedRecordFilter: selectedRecordFilter,\n          listData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeTemplateControlCombo(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getBarcodeDynamicCombo\", {\n      'ncontrolcode': map.selectedRecordFilter.ncontrolcode.value,\n      nbarcodetemplatecode: map.nbarcodetemplatecode,\n      'userinfo': map.userInfo\n    }).then(response => {\n      const selectedRecordFilter = { ...map.selectedRecordFilter\n      };\n      let masterData = { ...map.masterData,\n        ...response.data\n      };\n      const listData = { ...map.listData\n      };\n      response.data.ComboComponnet && response.data.ComboComponnet.map(x => {\n        const data = constructjsonOptionList(response.data[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, map.userInfo.slanguagetypecode, x).get(\"OptionList\");\n        selectedRecordFilter[x.label] = undefined; // if (data.length !== 0) {\n        //     selectedRecordFilter[x.label] = { ...data.filter(y => y.value === response.data[\"Selected\" + x.label][x.valuemember])[0] }\n        // }else{\n        //     selectedRecordFilter[x.label]=\n        // }\n\n        listData[x.label] = data;\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          selectedRecordFilter: selectedRecordFilter,\n          listData: listData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeConfigFilterSubmit(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getBarcodeConfigurationFilterSubmit\", { ...map\n    }).then(response => {\n      let masterData = { ...map.masterData,\n        ...response.data\n      };\n      Object.keys(map.selectedRecordFilter).map(x => {\n        if (x === \"nformcode\") {\n          masterData = { ...masterData,\n            SelecetedScreen: { ...map.selectedRecordFilter[x].item\n            }\n          };\n        } else if (x === \"ncontrolcode\") {\n          masterData = { ...masterData,\n            SelecetedControl: { ...map.selectedRecordFilter[x].item\n            }\n          };\n        } else {\n          masterData = { ...masterData,\n            [\"Selected\" + x]: { ...map.selectedRecordFilter[x].item.jsondata\n            }\n          };\n        }\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          selectedRecordFilter: { ...map.selectedRecordFilter\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function parentChildComboLoadForBarcode(columnList, comboData, selectedRecord, childColumnList, ParentComboValues, languagetypeCode, userinfo) {\n  let comboValues = {};\n\n  if (columnList.length > 0) {\n    columnList.map((x, index) => {\n      if (x.inputtype === 'combo') {\n        if (comboData[x.label] && comboData[x.label].length > 0) {\n          selectedRecord[x.label] = undefined;\n\n          if (comboData[x.label].length > 0) {\n            if (comboData[x.label][0].label === undefined) {\n              const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n              comboData[x.label] = optionList.get(\"OptionList\");\n            }\n          } else {\n            comboData[x.label] = [];\n          }\n\n          comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList, languagetypeCode, userinfo, selectedRecord[x.label]);\n        } else {\n          selectedRecord[x.label] = undefined;\n          comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList, languagetypeCode, userinfo, selectedRecord[x.label]);\n        }\n      }\n    });\n  } else {\n    comboValues = {\n      \"comboData\": comboData,\n      \"selectedRecord\": selectedRecord\n    };\n  }\n\n  return comboValues;\n}\nexport function childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList, languagetypeCode, userinfo, ParentComboValues) {\n  if (selectedRecord[x.label] !== undefined) {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== -1) {\n          if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\n            selectedRecord = { ...selectedRecord,\n              [childColumnList[x.label][index].label]: {\n                label: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] : ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\n                value: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] : ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\n              }\n            };\n          } else if (comboData[y.label] && comboData[y.label].length > 0) {\n            if (comboData[y.label][0].label === undefined) {\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y);\n              comboData[y.label] = optionChildList.get(\"OptionList\");\n              selectedRecord[y.label] = undefined;\n            } else {\n              selectedRecord[y.label] = undefined;\n            }\n          } else {\n            selectedRecord[y.label] = undefined;\n            comboData[y.label] = [];\n            const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n            selectedRecord = { ...selectedRecord,\n              ...newRecord1.selectedRecord\n            };\n            comboData = { ...comboData,\n              ...newRecord1.comboData\n            };\n          }\n        }\n      });\n    }\n  } else {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        selectedRecord[y.label] = undefined;\n        const index = childColumnList[x.label] && childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== undefined && index !== -1) {\n          comboData[y.label] = undefined;\n          const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList);\n          selectedRecord = { ...selectedRecord,\n            ...newRecord1.selectedRecord\n          };\n          comboData = { ...comboData,\n            ...newRecord1.comboData\n          };\n        }\n      });\n    }\n  }\n\n  const newRecord = {\n    \"comboData\": comboData,\n    \"selectedRecord\": selectedRecord\n  };\n  return newRecord;\n}\nexport function getOpenModalForBarcodeConfig(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getOpenModalForBarcodeConfig\", {\n      'nformcode': map.nformcode,\n      'ncontrolcode': map.ncontrolcode,\n      'nquerybuildertablecode': map.nquerybuildertablecode,\n      'userinfo': map.userInfo,\n      nbarcodetemplatecode: map.nbarcodetemplatecode,\n      lastLevelCode: map.lastLevelCode\n    }).then(response => {\n      const barcodeList = constructOptionList(response.data.Barcode || [], 'nbarcode', 'sbarcodename').get('OptionList'); // if (map.nsqlqueryneed) {\n      //     const masterData = { ...map.masterData, Barcode: barcodeList, BarcodeParameter: [] }\n      //     map={...map,masterData, ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode}\n      //     dispatch(getSqlColumns(map))\n      // } else {\n\n      const mappingList = constructOptionList(response.data.MappingFileds || [], response.data.nisdynamic === 3 ? 'columnname' : 'columnname', response.data.nisdynamic === 3 ? 'columnname' : 'columnname').get('OptionList');\n      const masterData = { ...map.masterData,\n        Barcode: barcodeList,\n        MappingFileds: mappingList,\n        BarcodeParameter: []\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          openModal: true,\n          masterData,\n          operation: \"create\",\n          ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode,\n          selectedRecord: {}\n        }\n      }); //  }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getSqlColumns(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/createsqltable\", {\n      nsqlquerycode: map.nsqlquerycode,\n      'userinfo': map.userInfo\n    }).then(response => {\n      const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\n      const masterData = { ...map.masterData,\n        MappingFileds: mappingList\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          openModal: true,\n          masterData,\n          operation: \"create\",\n          ndesigntemplatemappingcode: map.ndesigntemplatemappingcode,\n          selectedRecord: {}\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeFileParameter(map) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getBarcodeFileParameter\", {\n      'nbarcode': map.selectedRecord.nbarcode.value,\n      'ssystemfilename': map.selectedRecord.nbarcode.item.ssystemfilename,\n      'userinfo': map.userinfo\n    }).then(response => {\n      const masterData = { ...map.masterData,\n        BarcodeParameter: response.data.Parameter\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          selectedRecord: map.selectedRecord\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getEditBarcodeConfigurationComboService(addParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getEditBarcodeConfigurationModal\", {\n      nbarcodeconfigurationcode: addParam.nbarcodeconfigurationcode,\n      'userinfo': addParam.userinfo\n    }).then(response => {\n      let selectedRecord = {};\n      const barcodeConfiguration = response.data.SelectedBarcodeConfig;\n      selectedRecord['nbarcode'] = {\n        label: barcodeConfiguration.sbarcodename,\n        value: barcodeConfiguration.nbarcode,\n        item: {}\n      };\n      const mappingList = constructOptionList(response.data.MappingFileds || [], response.data.nisdynamic === 3 ? 'label' : 'columnname', response.data.nisdynamic === 3 ? 'label' : 'columnname').get('OptionList');\n      const BarcodeParameter = [];\n      selectedRecord[\"columnnamecombo\"] = {};\n\n      if (barcodeConfiguration.jsondata.parameterMapping) {\n        selectedRecord['columnname'] = barcodeConfiguration.jsondata.parameterMapping;\n        Object.keys(barcodeConfiguration.jsondata.parameterMapping).map(x => {\n          BarcodeParameter.push(x);\n          selectedRecord[\"columnnamecombo\"] = { ...selectedRecord[\"columnnamecombo\"],\n            [x]: { ...mappingList.filter(y => y.value === barcodeConfiguration.jsondata.parameterMapping[x])[0]\n            }\n          };\n        });\n      }\n\n      const masterData = { ...addParam.masterData,\n        Barcode: [],\n        MappingFileds: mappingList,\n        BarcodeParameter\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          ncontrolcode: addParam.controlId,\n          openModal: true,\n          operation: 'update',\n          masterData,\n          selectedRecord,\n          ndesigntemplatemappingcode: response.data.ndesigntemplatemappingcode\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeConfigurationDetail(barcodeConfiguration, userinfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodeconfiguration/getBarcodeConfiguration\", {\n      nbarcodeconfigurationcode: barcodeConfiguration.nbarcodeconfigurationcode,\n      'userinfo': userinfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/BarcodeConfigurationAction.js"],"names":["toast","DEFAULT_RETURN","rsapi","constructOptionList","constructjsonOptionList","initRequest","axios","getBarcodeDynamicChange","inputParem","selectedRecordFilter","control","masterData","parentcolumnlist","childcolumnlist","userinfo","listData","dispatch","post","child","parentdata","item","jsondata","parentsource","source","primarykeyField","value","valuemember","then","response","returnObj","parentChildComboLoadForBarcode","data","slanguagetypecode","masterData1","comboData","type","payload","loading","selectedRecord","catch","error","status","message","warn","getBarcodeTemplateControlBC","map","nformcode","nbarcodetemplatecode","userInfo","ComboComponnet","undefined","Control","get","Object","keys","x","getBarcodeTemplateControlCombo","ncontrolcode","label","displaymember","isMultiLingual","getBarcodeConfigFilterSubmit","SelecetedScreen","SelecetedControl","columnList","childColumnList","ParentComboValues","languagetypeCode","comboValues","length","index","inputtype","optionList","childComboLoadForBarcode","hasOwnProperty","y","findIndex","z","readonly","optionChildList","newRecord1","newRecord","getOpenModalForBarcodeConfig","nquerybuildertablecode","lastLevelCode","barcodeList","Barcode","mappingList","MappingFileds","nisdynamic","BarcodeParameter","openModal","operation","ndesigntemplatemappingcode","DesignTempateMapping","getSqlColumns","nsqlquerycode","console","log","getBarcodeFileParameter","nbarcode","ssystemfilename","Parameter","getEditBarcodeConfigurationComboService","addParam","nbarcodeconfigurationcode","barcodeConfiguration","SelectedBarcodeConfig","sbarcodename","parameterMapping","push","filter","controlId","getBarcodeConfigurationDetail"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport rsapi from \"../rsapi\";\r\nimport { constructOptionList, constructjsonOptionList } from \"../components/CommonScript\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function getBarcodeDynamicChange(inputParem, selectedRecordFilter, control, masterData,\r\n    parentcolumnlist, childcolumnlist, userinfo, listData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getChildValuesForBarcodeConfiguration\", {\r\n            child: inputParem.child,\r\n            parentdata: inputParem.item.jsondata,\r\n            parentsource: inputParem.source,\r\n            [inputParem.primarykeyField]: inputParem.value,\r\n            valuemember: inputParem.primarykeyField,\r\n            childcolumnlist,\r\n            userinfo,\r\n            parentcolumnlist\r\n        })\r\n            .then(response => {\r\n\r\n                let returnObj = parentChildComboLoadForBarcode(parentcolumnlist, response.data,\r\n                    selectedRecordFilter, childcolumnlist,\r\n                    userinfo.slanguagetypecode, userinfo)\r\n\r\n                let masterData1 = { ...masterData, ...response.data }\r\n                listData = { ...listData, ...returnObj.comboData }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, selectedRecordFilter: returnObj.selectedRecord, masterData: masterData1, listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeTemplateControlBC(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeDynamicChange\", { 'nformcode': map.selectedRecordFilter.nformcode.value, 'nbarcodetemplatecode': map.nbarcodetemplatecode, 'userinfo': map.userInfo })\r\n            .then(response => {\r\n                let masterData = { ...map.masterData, ...response.data, ComboComponnet: [] }\r\n                const listData = { ...map.listData }\r\n                const selectedRecordFilter = { ...map.selectedRecordFilter }\r\n\r\n                selectedRecordFilter['ncontrolcode'] = undefined\r\n                if (response.data.Control) {\r\n                    const data = constructOptionList(response.data.Control || [], 'ncontrolcode', 'scontrolname').get(\"OptionList\");\r\n                    listData['ncontrolcode'] = data\r\n                }\r\n\r\n                Object.keys(listData).map(x => {\r\n                    if (x !== 'nformcode' && x !== 'ncontrolcode') {\r\n                        listData[x] = []\r\n                        selectedRecordFilter[x] = undefined\r\n                    }\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: selectedRecordFilter, listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeTemplateControlCombo(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeDynamicCombo\", {\r\n            'ncontrolcode': map.selectedRecordFilter.ncontrolcode.value,\r\n            nbarcodetemplatecode: map.nbarcodetemplatecode, 'userinfo': map.userInfo\r\n        })\r\n            .then(response => {\r\n                const selectedRecordFilter = { ...map.selectedRecordFilter }\r\n                let masterData = { ...map.masterData, ...response.data }\r\n                const listData = { ...map.listData }\r\n\r\n                response.data.ComboComponnet\r\n                    && response.data.ComboComponnet\r\n                        .map(x => {\r\n\r\n                            const data = constructjsonOptionList(response.data[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, map.userInfo.slanguagetypecode, x).get(\"OptionList\");\r\n\r\n                            selectedRecordFilter[x.label] = undefined\r\n                            // if (data.length !== 0) {\r\n                            //     selectedRecordFilter[x.label] = { ...data.filter(y => y.value === response.data[\"Selected\" + x.label][x.valuemember])[0] }\r\n                            // }else{\r\n                            //     selectedRecordFilter[x.label]=\r\n                            // }\r\n                            listData[x.label] = data\r\n                        })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: selectedRecordFilter,\r\n                        listData: listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeConfigFilterSubmit(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeConfigurationFilterSubmit\", { ...map })\r\n            .then(response => {\r\n                let masterData = { ...map.masterData, ...response.data }\r\n\r\n                Object.keys(map.selectedRecordFilter).map(x => {\r\n\r\n                    if (x === \"nformcode\") {\r\n                        masterData = { ...masterData, SelecetedScreen: { ...map.selectedRecordFilter[x].item } }\r\n                    } else if (x === \"ncontrolcode\") {\r\n                        masterData = { ...masterData, SelecetedControl: { ...map.selectedRecordFilter[x].item } }\r\n                    } else {\r\n                        masterData = { ...masterData, [\"Selected\" + x]: { ...map.selectedRecordFilter[x].item.jsondata } }\r\n                    }\r\n\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: { ...map.selectedRecordFilter }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function parentChildComboLoadForBarcode(columnList, comboData, selectedRecord,\r\n    childColumnList, ParentComboValues,\r\n    languagetypeCode, userinfo) {\r\n    let comboValues = {}\r\n    if (columnList.length > 0) {\r\n        columnList.map((x, index) => {\r\n            if (x.inputtype === 'combo') {\r\n                if (comboData[x.label] && comboData[x.label].length > 0) {\r\n                    selectedRecord[x.label] = undefined;\r\n                    if (comboData[x.label].length > 0) {\r\n                        if (comboData[x.label][0].label === undefined) {\r\n                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                            comboData[x.label] = optionList.get(\"OptionList\");\r\n\r\n                        }\r\n                    } else {\r\n                        comboData[x.label] = []\r\n                    }\r\n                    comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n                        languagetypeCode, userinfo, selectedRecord[x.label])\r\n                } else {\r\n                    selectedRecord[x.label] = undefined\r\n\r\n                    comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n                        languagetypeCode, userinfo, selectedRecord[x.label])\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        comboValues = {\r\n            \"comboData\": comboData,\r\n            \"selectedRecord\": selectedRecord\r\n        }\r\n    }\r\n\r\n    return comboValues;\r\n}\r\n\r\n\r\n\r\nexport function childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n    languagetypeCode, userinfo, ParentComboValues) {\r\n    if (selectedRecord[x.label] !== undefined) {\r\n        if (x.hasOwnProperty(\"child\")) {\r\n            x.child.map(y => {\r\n                const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n                if (index !== -1) {\r\n                    if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\r\n                        selectedRecord = {\r\n                            ...selectedRecord,\r\n                            [childColumnList[x.label][index].label]: {\r\n                                label: ParentComboValues.item.jsondata ?\r\n                                    ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] :\r\n                                    ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\r\n                                value: ParentComboValues.item.jsondata ?\r\n                                    ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] :\r\n                                    ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (comboData[y.label] && comboData[y.label].length > 0) {\r\n                        if (comboData[y.label][0].label === undefined) {\r\n                            const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y)\r\n                            comboData[y.label] = optionChildList.get(\"OptionList\");\r\n\r\n                            selectedRecord[y.label] = undefined\r\n\r\n                        } else {\r\n                            selectedRecord[y.label] = undefined\r\n                        }\r\n                    } else {\r\n                        selectedRecord[y.label] = undefined\r\n                        comboData[y.label] = []\r\n                        const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                        selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                        comboData = { ...comboData, ...newRecord1.comboData }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        if (x.hasOwnProperty(\"child\")) {\r\n            x.child.map(y => {\r\n                selectedRecord[y.label] = undefined\r\n                const index = childColumnList[x.label] && childColumnList[x.label].findIndex(z => z.label === y.label)\r\n                if (index !== undefined && index !== -1) {\r\n                    comboData[y.label] = undefined\r\n                    const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList)\r\n                    selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                    comboData = { ...comboData, ...newRecord1.comboData }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const newRecord = {\r\n        \"comboData\": comboData,\r\n        \"selectedRecord\": selectedRecord\r\n    }\r\n    return newRecord;\r\n}\r\n\r\n\r\n\r\nexport function getOpenModalForBarcodeConfig(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getOpenModalForBarcodeConfig\", {\r\n            'nformcode': map.nformcode, 'ncontrolcode': map.ncontrolcode,\r\n            'nquerybuildertablecode': map.nquerybuildertablecode,\r\n            'userinfo': map.userInfo, nbarcodetemplatecode: map.nbarcodetemplatecode,\r\n            lastLevelCode: map.lastLevelCode\r\n        })\r\n            .then(response => {\r\n\r\n                const barcodeList = constructOptionList(response.data.Barcode || [], 'nbarcode', 'sbarcodename').get('OptionList');\r\n                // if (map.nsqlqueryneed) {\r\n\r\n                //     const masterData = { ...map.masterData, Barcode: barcodeList, BarcodeParameter: [] }\r\n\r\n                //     map={...map,masterData, ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode}\r\n\r\n                //     dispatch(getSqlColumns(map))\r\n\r\n                // } else {\r\n\r\n                    const mappingList = constructOptionList(response.data.MappingFileds || [], response.data.nisdynamic === 3 ? 'columnname' : 'columnname', response.data.nisdynamic === 3 ? 'columnname' : 'columnname').get('OptionList');\r\n                    const masterData = { ...map.masterData, Barcode: barcodeList, MappingFileds: mappingList, BarcodeParameter: [] }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, openModal: true, masterData,\r\n                            operation: \"create\", ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode, selectedRecord: {}\r\n                        }\r\n                    })\r\n              //  }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getSqlColumns(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/createsqltable\", {\r\n            nsqlquerycode: map.nsqlquerycode\r\n            , 'userinfo': map.userInfo\r\n        }).then(response => {\r\n            const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n            const masterData = { ...map.masterData, MappingFileds: mappingList }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false, openModal: true, masterData,\r\n                    operation: \"create\", ndesigntemplatemappingcode: map.ndesigntemplatemappingcode, selectedRecord: {}\r\n                }\r\n            })\r\n            \r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeFileParameter(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeFileParameter\", {\r\n            'nbarcode': map.selectedRecord.nbarcode.value, 'ssystemfilename': map.selectedRecord.nbarcode.item.ssystemfilename,\r\n            'userinfo': map.userinfo\r\n        })\r\n            .then(response => {\r\n                const masterData = { ...map.masterData, BarcodeParameter: response.data.Parameter }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecord: map.selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getEditBarcodeConfigurationComboService(addParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getEditBarcodeConfigurationModal\", {\r\n            nbarcodeconfigurationcode: addParam.nbarcodeconfigurationcode\r\n            , 'userinfo': addParam.userinfo\r\n        }).then(response => {\r\n            let selectedRecord = {};\r\n\r\n            const barcodeConfiguration = response.data.SelectedBarcodeConfig\r\n\r\n            selectedRecord['nbarcode'] = { label: barcodeConfiguration.sbarcodename, value: barcodeConfiguration.nbarcode, item: {} }\r\n\r\n            const mappingList = constructOptionList(response.data.MappingFileds || [], response.data.nisdynamic === 3 ? 'label' : 'columnname', response.data.nisdynamic === 3 ? 'label' : 'columnname').get('OptionList');\r\n\r\n            const BarcodeParameter = []\r\n\r\n            selectedRecord[\"columnnamecombo\"] = {}\r\n            if (barcodeConfiguration.jsondata.parameterMapping) {\r\n                selectedRecord['columnname'] = barcodeConfiguration.jsondata.parameterMapping\r\n\r\n                Object.keys(barcodeConfiguration.jsondata.parameterMapping\r\n                ).map(x => {\r\n                    BarcodeParameter.push(x)\r\n                    selectedRecord[\"columnnamecombo\"] = { ...selectedRecord[\"columnnamecombo\"], [x]: { ...mappingList.filter(y => y.value === barcodeConfiguration.jsondata.parameterMapping[x])[0] } }\r\n                })\r\n\r\n            }\r\n\r\n            const masterData = { ...addParam.masterData, Barcode: [], MappingFileds: mappingList, BarcodeParameter }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    ncontrolcode: addParam.controlId,\r\n                    openModal: true,\r\n                    operation: 'update',\r\n                    masterData,\r\n                    selectedRecord,\r\n                    ndesigntemplatemappingcode: response.data.ndesigntemplatemappingcode,\r\n\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function getBarcodeConfigurationDetail(barcodeConfiguration, userinfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeConfiguration\", {\r\n            nbarcodeconfigurationcode: barcodeConfiguration.nbarcodeconfigurationcode\r\n            , 'userinfo': userinfo\r\n        }).then(response => {\r\n            masterData = { ...masterData, ...response.data }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    masterData,\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}