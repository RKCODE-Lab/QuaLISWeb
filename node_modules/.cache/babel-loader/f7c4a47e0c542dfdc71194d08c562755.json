{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\ReleaseFilter.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { SampleType } from '../../components/Enumeration';\n\nclass ReleaseFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showMoreToggle = () => {\n      this.setState({\n        showMore: !this.state.showMore\n      });\n    };\n\n    this.state = {\n      showMore: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side_more_filter_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      selected: this.props.fromDate,\n      value: this.props.fromDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"fromDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"todate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      selected: this.props.toDate,\n      value: this.props.toDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"toDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      name: \"nsampletypecode\",\n      optionId: \"nsampletypecode\",\n      optionValue: \"ssampletypename\",\n      className: \"form-control\",\n      options: this.props.SampleType,\n      value: this.props.SampleTypeValue ? {\n        \"label\": this.props.SampleTypeValue.ssampletypename,\n        \"value\": this.props.SampleTypeValue.nsampletypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nsampletypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      name: \"nregtypecode\",\n      className: \"form-control\",\n      options: this.props.RegType,\n      value: this.props.RegTypeValue ? {\n        \"label\": this.props.RegTypeValue.sregtypename,\n        \"value\": this.props.RegTypeValue.nregtypecode\n      } : \"\",\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\",\n      className: \"form-control\",\n      options: this.props.RegSubType,\n      value: this.props.RegSubTypeValue ? {\n        \"label\": this.props.RegSubTypeValue.sregsubtypename,\n        \"value\": this.props.RegSubTypeValue.nregsubtypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregsubtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    })), !this.state.showMore ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_open\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 113\n      }\n    }), \" \") : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: `side_more_filter ${this.state.showMore ? 'active' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_close\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 94\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      name: \"napproveconfversioncode\",\n      optionId: \"napprovalconfigversioncode\",\n      optionValue: \"sversionname\",\n      className: \"form-control\",\n      options: this.props.ApprovalVersion,\n      value: this.props.ApprovalVersionValue ? {\n        \"label\": this.props.ApprovalVersionValue.sversionname,\n        \"value\": this.props.ApprovalVersionValue.napproveconfversioncode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"napproveconfversioncode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }),\n    /*#__PURE__*/\n    //this.props.RegSubTypeValue.nneedtemplatebasedflow ? \n    React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_DESIGNTEMPLATE\"\n      }),\n      isSearchable: true,\n      name: \"ndesigntemplatemappingcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: this.props.ApprovalVersionValue.sversionname ? this.props.DynamicDesignMapping : [],\n      optionId: \"ndesigntemplatemappingcode\",\n      optionValue: \"sregtemplatename\",\n      value: this.props.DesignTemplateMappingValue && this.props.ApprovalVersionValue.sversionname ? {\n        \"label\": this.props.DesignTemplateMappingValue.sregtemplatename,\n        \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode\n      } : \"\",\n      showOption: true,\n      sortField: \"ndesigntemplatemappingcode\",\n      sortOrder: \"ascending\",\n      onChange: event => this.props.onFilterComboChange(event, 'ndesigntemplatemappingcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }) //      :\"\"\n    , /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REPORTTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REPORTTYPE\"\n      }),\n      name: \"ncoareporttypecode\",\n      className: \"form-control\",\n      options: this.props.ReportType,\n      value: this.props.ReportTypeValue ? {\n        \"label\": this.props.ReportTypeValue.scoareporttypename,\n        \"value\": this.props.ReportTypeValue.ncoareporttypecode\n      } : \"\",\n      optionId: \"ncoareporttypecode\",\n      optionValue: \"scoareporttypename\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"ncoareporttypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nexport default injectIntl(ReleaseFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/release/ReleaseFilter.jsx"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","SampleType","ReleaseFilter","Component","constructor","props","showMoreToggle","setState","showMore","state","render","intl","formatMessage","id","fromDate","userInfo","ssitedate","date","handleDateChange","toDate","SampleTypeValue","ssampletypename","nsampletypecode","event","onFilterComboChange","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode","ApprovalVersion","ApprovalVersionValue","sversionname","napproveconfversioncode","DynamicDesignMapping","DesignTemplateMappingValue","sregtemplatename","ndesigntemplatemappingcode","ReportType","ReportTypeValue","scoareporttypename","ncoareporttypecode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { SampleType } from '../../components/Enumeration';\r\n\r\n\r\nclass ReleaseFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: false\r\n        }\r\n    }\r\n    showMoreToggle = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"todate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue ? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nsampletypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue ? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregtypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue ? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregsubtypecode\")}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    {!this.state.showMore ? <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}\r\n                    <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                        <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_CONFIGVERSION\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_CONFIGVERSION\" })}\r\n                                    name=\"napproveconfversioncode\"\r\n                                    optionId=\"napprovalconfigversioncode\"\r\n                                    optionValue=\"sversionname\"\r\n                                    className='form-control'\r\n                                    options={this.props.ApprovalVersion}\r\n                                    value={this.props.ApprovalVersionValue ? { \"label\": this.props.ApprovalVersionValue.sversionname, \"value\": this.props.ApprovalVersionValue.napproveconfversioncode } : \"\"}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    isDisabled={false}\r\n                                    alphabeticalSort={false}\r\n                                    isClearable={false}\r\n                                    onChange={(event) => this.props.onFilterComboChange(event, \"napproveconfversioncode\")}\r\n                                />\r\n                                {/* <Col md={12}> */}\r\n                                {//this.props.RegSubTypeValue.nneedtemplatebasedflow ? \r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_DESIGNTEMPLATE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"ndesigntemplatemappingcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        options={this.props.ApprovalVersionValue.sversionname ? this.props.DynamicDesignMapping : []}\r\n                                        optionId=\"ndesigntemplatemappingcode\"\r\n                                        optionValue=\"sregtemplatename\"\r\n                                        value={this.props.DesignTemplateMappingValue && this.props.ApprovalVersionValue.sversionname ? { \"label\": this.props.DesignTemplateMappingValue.sregtemplatename, \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode } : \"\"}\r\n                                        showOption={true}\r\n                                        sortField=\"ndesigntemplatemappingcode\"\r\n                                        sortOrder=\"ascending\"\r\n                                        onChange={(event) => this.props.onFilterComboChange(event, 'ndesigntemplatemappingcode')}\r\n                                    />\r\n                                    //      :\"\"\r\n                                }\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                name=\"ncoareporttypecode\"\r\n                                className='form-control'\r\n                                options={this.props.ReportType}\r\n                                value={this.props.ReportTypeValue ? { \"label\": this.props.ReportTypeValue.scoareporttypename, \"value\": this.props.ReportTypeValue.ncoareporttypecode } : \"\"}\r\n                                optionId=\"ncoareporttypecode\"\r\n                                optionValue=\"scoareporttypename\"\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"ncoareporttypecode\")}\r\n                            />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ReleaseFilter)"]},"metadata":{},"sourceType":"module"}