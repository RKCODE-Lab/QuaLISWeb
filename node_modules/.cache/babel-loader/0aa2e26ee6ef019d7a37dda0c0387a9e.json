{"ast":null,"code":"import _createForOfIteratorHelper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Nav,Button,Modal,Card}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{ListWrapper}from'../../components/client-group.styles';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import DropZone from'../../components/dropzone/dropzone.component';import'../../components/list-master/list-master.styles';import{attachmentType,parameterType,transactionStatus}from'../../components/Enumeration';import'./result.css';import'../../assets/styles/tree.css';import{MediaHeader,MediaLabel,MediaSubHeader}from'../../components/App.styles';import FormInput from'../../components/form-input/form-input.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCalculator,faEye,faInfo,faInfoCircle,faSave}from'@fortawesome/free-solid-svg-icons';import TestPopOver from'./TestPopOver';import{numberConversion,numericGrade}from'./ResultEntryValidation';import{constructOptionList,deleteAttachmentDropZone,rearrangeDateFormat}from'../../components/CommonScript';import{connect}from'react-redux';import ResultEntryPredefinedComments from'./ResultEntryPredefinedComments';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import ModalShow from'../../components/ModalShow';import DataGrid from'../../components/data-grid/data-grid.component';import{faAddressBook}from'@fortawesome/free-solid-svg-icons';import{// getPredefinedData,\nupdateStore}from'../../actions';import rsapi from'../../rsapi';import Preloader from'../../components/preloader/preloader.component';import{withRouter}from'react-router-dom';import{initRequest}from'../../actions/LoginAction';import{toast}from'react-toastify';import Axios from'axios';import{intl}from'../../components/App';// const mapStatetoProps = (state) => {\n//     return {\n//         Login: state.Login\n//     }\n// }\n// const mapDispatchToProps = dispatch => ({ \n//     dispatch                // ← Add this\n//  })\nvar ResultEntryParameterForm=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryParameterForm,_React$Component);var _super=_createSuper(ResultEntryParameterForm);function ResultEntryParameterForm(props){var _this;_classCallCheck(this,ResultEntryParameterForm);_this=_super.call(this,props);_this.onComboChange=function(comboData,comboName){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;if(comboData){selectedRecord[comboName]=comboData;}else{selectedRecord[comboName]=[];}_this.setState({selectedRecord:selectedRecord});};_this.onInputChange=function(Data,name){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;if(Data){selectedRecord[name]=Data.target.value;}else{selectedRecord[name]=[];}_this.setState({selectedRecord:selectedRecord});};_this.closeModalShow=function(){var showAlertGrid=_this.props.Login.showAlertGrid;var selectedRecord=_this.props.Login.selectedRecord;selectedRecord['ntestgrouptestpredefsubcode']&&delete selectedRecord['ntestgrouptestpredefsubcode'];showAlertGrid=false;var updateInfo={typeName:DEFAULT_RETURN,data:{showAlertGrid:showAlertGrid,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onModalSave=function(){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;var parameterResults=_this.state.parameterResults;var currentntestgrouptestpredefcode=_this.state.currentntestgrouptestpredefcode||0;var bool=parameterResults.some(function(x){return x['ntransactionresultcode']===currentAlertResultCode;});if(bool){parameterResults.map(function(Parameter){if(Parameter['ntransactionresultcode']===currentAlertResultCode){Parameter['additionalInfoUidata']={ntestgrouptestpredefsubcode:selectedRecord['ntestgrouptestpredefsubcode']};if(selectedRecord['ntestgrouptestpredefsubcode']){if(typeof selectedRecord['ntestgrouptestpredefsubcode']==='string'){Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'];}else{Parameter['additionalInfo']=\"\";Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'].map(function(x){return x.label+\",\";}).join('\\n');Parameter['additionalInfo']=Parameter['additionalInfo'].substring(0,Parameter['additionalInfo'].length-1);}}else{Parameter['additionalInfo']=\"\";Parameter['additionalInfoUidata']&&delete Parameter['additionalInfoUidata'];}Parameter['ntestgrouptestpredefcode']=currentntestgrouptestpredefcode;}});}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { parameterResults:parameterResults,selectedRecord: selectedRecord, showAlert: false }\n// }\n// this.props.updateStore(updateInfo);\n//Sync With Parent Component\n_this.props.onResultInputChange(parameterResults);_this.setState({parameterResults:parameterResults,selectedRecord:selectedRecord,showAlert:false});};_this.onGradeEvent=function(ResultParameter,index,parameter){if(ResultParameter.length>0&&ResultParameter[index]!==undefined&&ResultParameter[index].sresult!==null){var selectedRecord=_this.state.selectedRecord||[];var selectedResultGrade=_this.state.selectedResultGrade||[];if(parameter.nparametertypecode===parameterType.NUMERIC){selectedResultGrade[index]={ngradecode:ResultParameter[index].sresult!==\"\"?numericGrade(parameter,numberConversion(parseFloat(ResultParameter[index].sresult),parseInt(parameter.nroundingdigits))):-1};}if(parameter.nparametertypecode===parameterType.PREDEFINED){if(ResultParameter[index].sresult!==null){selectedResultGrade[index]={ngradecode:ResultParameter[index].ngradecode};}else{selectedResultGrade[index]={ngradecode:0};}}if(parameter.nparametertypecode===parameterType.CHARACTER){if(ResultParameter[index].sresult!==null&&ResultParameter[index].sresult.trim()!==\"\"){//selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\nselectedResultGrade[index]={ngradecode:4};}else{selectedResultGrade[index]={ngradecode:-1};}}selectedRecord.selectedResultGrade=selectedResultGrade;//    if (ResultParameter.length > 0 && ResultParameter[index] !== undefined && ResultParameter[index].ngradecode !== selectedResultGrade[index].ngradecode) {\n_this.setState({selectedRecord:selectedRecord});// }\n}};_this.deleteAttachmentParameterFile=function(event,file,fieldName,index){var ResultParameter=_this.state.parameterResults[index];var parameterResults=_this.state.parameterResults;ResultParameter[fieldName]=deleteAttachmentDropZone(ResultParameter[fieldName],file);parameterResults[index]['editable']=true;_this.setState({parameterResults:parameterResults});};_this.onResultInputChange=function(event,index,parameter){var selectedRecord=_this.state.selectedRecord||[];var ResultParameter=_this.state.parameterResults?_toConsumableArray(_this.state.parameterResults):[];var sresult=\"\";var sfinal=\"\";var sresultpredefinedname=\"\";var salertmessage=\"\";var sresultcomment=\"\";var value=-1;var acceptedFile=[];var ncalculatedresult;var currentAlertResultCode=0;var currentntestgrouptestpredefcode=0;var inputData={};//  if ((event[0] && event[0].name!==ResultParameter[index]['sresult']) || (event.target && event.target.value !== ResultParameter[index]['sresult']) ||\n//     (event.item && event.item.ntransactionresultcode ===\n//        ResultParameter[index].ntransactionresultcode && ResultParameter[index]['sresult'] !== event.item && event.item.spredefinedname)) {\nif(parameter.nparametertypecode===parameterType.NUMERIC){if(/^-?\\d*?\\.?\\d*?$/.test(event.target.value)||event.target.value===\"\"){sresult=event.target.value;ncalculatedresult=4;}else{sresult=ResultParameter[index]['sresult']===null?\"\":ResultParameter[index]['sresult'];ncalculatedresult=ResultParameter[index]['ncalculatedresult'];}}if(parameter.nparametertypecode===parameterType.PREDEFINED){currentAlertResultCode=event.item.ntransactionresultcode;currentntestgrouptestpredefcode=event.item.ntestgrouptestpredefcode;if(event!=null){sresult=event.item.spredefinedname;sresultpredefinedname=event.item.sresultpredefinedname;sfinal=event.item.spredefinedsynonym;value=event.item.ngradecode;salertmessage=event.item.salertmessage?event.item.salertmessage:\"\";sresultcomment=event.item.spredefinedcomments?event.item.spredefinedcomments:\"\";ncalculatedresult=4;}else{sresult=\"\";sfinal=\"\";sresultpredefinedname=\"\";value=-1;ncalculatedresult=4;}inputData={'ntestgrouptestpredefcode':event.item.ntestgrouptestpredefcode,'salertmessage':salertmessage,'nneedresultentryalert':event.item.nneedresultentryalert,'nneedsubcodedresult':event.item.nneedsubcodedresult};if(event.item.nneedresultentryalert===transactionStatus.NO&&event.item.nneedsubcodedresult===transactionStatus.NO){if(ResultParameter[index]['additionalInfo']){ResultParameter[index]['additionalInfo']=\"\";}if(ResultParameter[index]['additionalInfoUidata']){ResultParameter[index]['additionalInfoUidata']=\"\";}}}if(parameter.nparametertypecode===parameterType.CHARACTER){sresult=event.target.value;if(event.target.value.trim()===\"\")ncalculatedresult=-1;else ncalculatedresult=4;}if(parameter.nparametertypecode===parameterType.ATTACHMENT){sresult=event[0]&&event[0].name;sfinal=event;ncalculatedresult=4;}ResultParameter[index]['sresult']=sresult;ResultParameter[index]['sfinal']=sfinal;ResultParameter[index]['sresultpredefinedname']=sresultpredefinedname;ResultParameter[index]['sresultcomment']=sresultcomment;ResultParameter[index]['salertmessage']=salertmessage;ResultParameter[index]['acceptedFile']=acceptedFile;ResultParameter[index]['editable']=true;ResultParameter[index]['ngradecode']=value;ResultParameter[index]['ncalculatedresult']=ncalculatedresult;ResultParameter[index]['dummty']='dummty';selectedRecord.ResultParameter=ResultParameter;var parameterResults=ResultParameter;if(parameter.nparametertypecode===parameterType.PREDEFINED&&(event.item.nneedresultentryalert===transactionStatus.YES||event.item.nneedsubcodedresult===transactionStatus.YES)){// this.props.\n_this.getPredefinedData(inputData,selectedRecord,currentAlertResultCode,_this.props.Login.masterData,currentntestgrouptestpredefcode);}else{if(selectedRecord[\"ntestgrouptestpredefsubcode\"]){delete selectedRecord[\"ntestgrouptestpredefsubcode\"];}}//Sync child Data With Parent Component\n_this.props.onResultInputChange(parameterResults);_this.setState({parameterResults:parameterResults,currentAlertResultCode:currentAlertResultCode,currentntestgrouptestpredefcode:currentntestgrouptestpredefcode,selectedRecord:selectedRecord});//}\n};_this.onInputOnChange=function(event,optional){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.renderSwitch=function(parameter,index,result,screenName){var selectedResultGrade=_this.state.selectedResultGrade;//this.props.selectedResultGrade;\nvar gradeValues=_this.props.gradeValues;var gradeCode=selectedResultGrade?selectedResultGrade.length>0?selectedResultGrade[index]?selectedResultGrade[index]['ngradecode']:undefined:\"\":\"\";var isAdditionalInfoRequired=_this.state.parameterResults[index].hasOwnProperty('additionalInfo')&&_this.state.parameterResults[index]['additionalInfo']!==\"\"&&_this.state.parameterResults[index]['additionalInfo']!==null?true:false;//  parameter.jsondata['value'] ? JSON.parse(parameter.jsondata['value']).hasOwnProperty('additionalInfo') &&\n//     JSON.parse(parameter.jsondata['value'])['additionalInfo'] !== \"\" ? true : false :\n//     parameter.jsondata.hasOwnProperty('additionalInfo') &&\n//         parameter.jsondata['additionalInfo'] !== \"\" ? true : false\nswitch(parameter.nparametertypecode){case 1:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row w-100\"},/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{name:_this.state.parameterResults[index].ntransactionresultcode,type:\"text\",required:false,isMandatory:false// value={this.props.parameterResults.length > 0 ?\n//     this.props.parameterResults[index] ? (this.props.parameterResults[index]['sresult'] !== null ? this.props.parameterResults[index]['sresult'] : \"\") : \"\" : \"\"}\n,value:_this.state.parameterResults.length>0?_this.state.parameterResults[index]?_this.state.parameterResults[index]['sresult']!==null?_this.state.parameterResults[index]['sresult']:\"\":\"\":\"\"// placeholder={parameter.sparametersynonym}\n//label={parameter.sparametersynonym}\n// onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\n,onChange:function onChange(event){return _this.onResultInputChange(event,index,parameter);},onBlur:function onBlur(){return _this.onGradeEvent(_this.state.parameterResults,index,parameter);}// onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\n,maxLength:9,onKeyUp:function onKeyUp(event){return _this.props.onKeyPress(event,index,_this.props.paremterResultcode);}})),parameter.ntestgrouptestformulacode>0?/*#__PURE__*/React.createElement(Col,{md:2,className:\"d-flex product-category justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{title:\"Calculate Formula\",className:\"btn btn-circle outline-grey ml-2\",role:\"button\",id:screenName+-+index,onClick:function onClick(event){return _this.props.getFormula(parameter,_this.props.Login.userInfo,_this.props.Login.masterData,index,event);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{title:\"Calculate Formula\",icon:faCalculator}))):\"\",/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename'])))));}case 2:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:isAdditionalInfoRequired?8:10,className:\"pl-0\"},/*#__PURE__*/React.createElement(FormSelectSearch,{name:_this.state.parameterResults[index]&&_this.state.parameterResults[index].ntransactionresultcode,as:\"select\"//formLabel={parameter.sparametersynonym}\n,defaultValue:{\"value\":_this.state.parameterResults[index]&&_this.state.parameterResults[index].sresultpredefinedname,\"label\":_this.state.parameterResults[index]&&_this.state.parameterResults[index].sresultpredefinedname}//  defaultValue={{ \"value\": parameter.sresultpredefinedname, \"label\": parameter.sresultpredefinedname }}\n//  defaultValue={parameter.sresult && (parameter.sresult!=null || parameter.sresult !== \"\") ?  { \"value\": parameter.ngradecode, \"label\": parameter.sresult } :\n//  this.props.predefinedValues ? constructOptionList(this.props.predefinedValues[parameter.ntransactionresultcode]||[],'ngradecode',\n// 'spredefinedname' , undefined, undefined, undefined).get(\"DefaultValue\"):\"\"}\n,options:_this.props.predefinedValues?_this.props.predefinedValues[parameter.ntransactionresultcode]:\"\",optionId:\"ntestgrouptestpredefcode\",optionValue:\"spredefinedname\",isMulti:false,isDisabled:false,matchFrom:'start',isSearchable:true,isClearable:parameter.nresultmandatory===transactionStatus.YES?false:true,isMandatory:false,onKeyUp:function onKeyUp(event){return _this.props.onKeyPress(event,index,_this.props.paremterResultcode);}// onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\n// onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\n,onChange:function onChange(event){_this.onResultInputChange(event,index,parameter);_this.onGradeEvent(_this.state.parameterResults,index,parameter);}//onChange={(event) => this.onResultInputChange(event, index, parameter)}\n//onBlur={() => this.onGradeEvent(this.state.parameterResults, index, parameter)}\n})),/*#__PURE__*/React.createElement(Col,{md:2,className:\"pt-2\"},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename']))),isAdditionalInfoRequired&&/*#__PURE__*/React.createElement(Col,{md:2,className:\"pt-2\"},/*#__PURE__*/React.createElement(TestPopOver,{intl:_this.props.intl,needIcon:true,needPopoverTitleContent:true,placement:\"left\",stringList:// parameter.jsondata['value'] ?\n//      [JSON.parse(parameter.jsondata['value'])['additionalInfo']] :\n//              [parameter.jsondata['additionalInfo']] \n_this.state.parameterResults[index].hasOwnProperty('additionalInfo')&&_this.state.parameterResults[index]['additionalInfo']!==\"\"&&[_this.state.parameterResults[index]['additionalInfo']]})));}case 3:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:10,className:\"pl-0\"},/*#__PURE__*/React.createElement(FormTextarea,{name:parameter.ntransactionresultcode//label={parameter.sparametersynonym}\n//placeholder={parameter.sparametersynonym}\n,type:\"text\"//     defaultValue={parameter.sresult}\n,defaultValue:_this.state.parameterResults[index]&&_this.state.parameterResults[index]['sresult'],isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return _this.onResultInputChange(event,index,parameter);},onBlur:function onBlur(){return _this.onGradeEvent(_this.state.parameterResults,index,parameter);}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename']))));}case 4:{return/*#__PURE__*/React.createElement(Col,{md:12,className:\"pl-0\"},/*#__PURE__*/React.createElement(DropZone,{maxFiles:1,isMandatory:false//label={parameter.sparametersynonym}\n,accept:\".pdf\",minSize:0,maxSize:20,multiple:false// editFiles={parameter.sfinal != null ? parameter : \"\"}\n,editFiles:_this.state.parameterResults[index].sfinal!=null?_this.state.parameterResults[index]:\"\",needdelete:_this.props.needdelete?true:false,attachmentTypeCode:attachmentType.FTP,fileSizeName:\"nfilesize\",fileName:\"sfinal\",index:index// deleteAttachment={this.props.deleteAttachmentParamFile}\n// onDrop={(event) => this.props.onResultInputChange(event, index, parameter)}\n,deleteAttachment:_this.deleteAttachmentParameterFile,onDrop:function onDrop(event){return _this.onResultInputChange(event,index,parameter);}//disabled={disabled}\n}));}default:return\"\";}};_this.onSaveSubCodedResult=function(saveType,formRef){var selectedsubcode=_this.state.selectedsubcode||[];var ssampleid=_this.state.selectedRecord[\"ssampleid\"].trim();if(ssampleid!==\"\"){if(selectedsubcode.length===0){selectedsubcode.push({\"ssampleid\":_this.state.selectedRecord[\"ssampleid\"]});}var isFound=selectedsubcode.some(function(element){if(element.ssampleid===ssampleid){return true;}});if(!isFound){selectedsubcode.push({\"ssampleid\":_this.state.selectedRecord[\"ssampleid\"]});}_this.props.onSampleAdd(selectedsubcode);_this.setState({selectedsubcode:selectedsubcode,selectedRecord:undefined});}};_this.handleKeypress=function(e){//it triggers by pressing the enter key\nif(e.keyCode===13){_this.onSaveSubCodedResult(_this.props.Login.masterData,_this.props.Login.userInfo);}};_this.deleteSubCodedResult=function(index,subCodedResult,index1){var selectedsubcode=_this.state.selectedsubcode;selectedsubcode.splice(index1.dataIndex,1);_this.props.onSampleAdd(selectedsubcode);_this.setState({selectedsubcode:selectedsubcode});};_this.state={parameterResults:_toConsumableArray(_this.props.ResultParameter),selectedResultGrade:_this.props.selectedResultGrade//,\n,controlMap:_toConsumableArray(_this.props.controlMap),userRoleControlRights:_toConsumableArray(_this.props.userRoleControlRights)//loading:false\n};return _this;}// componentDidUpdate(previousProps) {\n//     let bool = false;\n//     let { currentAlertResultCode, currentntestgrouptestpredefcode,selectedRecord,showAlert } = this.state\n//     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//         bool = true;\n//         selectedRecord = this.props.Login.selectedRecord;\n//     }\n//     if (this.props.Login.showAlert !== previousProps.Login.showAlert) {\n//         bool = true;\n//         showAlert = this.props.Login.showAlert;\n//     }\n//     if (this.props.Login.currentAlertResultCode !== previousProps.Login.currentAlertResultCode) {\n//         bool = true;\n//         currentAlertResultCode = this.props.Login.currentAlertResultCode;\n//     }\n//     if (this.props.Login.currentntestgrouptestpredefcode !== previousProps.Login.currentntestgrouptestpredefcode) {\n//         bool = true;\n//         currentntestgrouptestpredefcode = this.props.Login.currentntestgrouptestpredefcode;\n//     }\n//     if (bool) {\n//         this.setState({ currentntestgrouptestpredefcode, currentAlertResultCode,selectedRecord,showAlert })\n//     }\n// }\n//For Subcode Result Start\n_createClass(ResultEntryParameterForm,[{key:\"getPredefinedData\",value:function getPredefinedData(inputData,selectedRecord,currentAlertResultCode,masterData,currentntestgrouptestpredefcode){var _this2=this;//  return function (dispatch) {\n//   this.setState({loading:true})\nvar inputParamData={ntestgrouptestpredefcode:inputData.ntestgrouptestpredefcode};//dispatch(initRequest(true));\nrsapi.post(\"resultentrybysample/getPredefinedData\",inputParamData).then(function(response){var showMultiSelectCombo=false;var ResultParameter=selectedRecord['ResultParameter'];var onlyAlertMsgAvailable=false;var testgrouptestpredefsubresult=response.data['testgrouptestpredefsubresult'];if(inputData['nneedsubcodedresult']===transactionStatus.YES){showMultiSelectCombo=true;masterData['testgrouptestpredefsubresultOptions']=testgrouptestpredefsubresult;}else{onlyAlertMsgAvailable=true;}var _iterator=_createForOfIteratorHelper(ResultParameter),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var Parameter=_step.value;if(Parameter.additionalInfoUidata||Parameter.additionalInfoUidata===\"\"){var additionalInfoUidata=typeof Parameter.additionalInfoUidata==='string'?Parameter.additionalInfoUidata===\"\"?\"\":JSON.parse(Parameter.additionalInfoUidata):Parameter.additionalInfoUidata;if(Parameter['ntransactionresultcode']===currentAlertResultCode&&Parameter['ntestgrouptestpredefcode']===inputData['ntestgrouptestpredefcode']){if(Parameter.additionalInfoUidata){selectedRecord[\"ntestgrouptestpredefsubcode\"]=additionalInfoUidata['ntestgrouptestpredefsubcode'];break;}}else{if(selectedRecord[\"ntestgrouptestpredefsubcode\"]){delete selectedRecord[\"ntestgrouptestpredefsubcode\"];}}}}}catch(err){_iterator.e(err);}finally{_iterator.f();};masterData['salertmessage']=inputData.salertmessage;_this2.setState({masterData:masterData,showAlert:inputData.nneedresultentryalert===transactionStatus.NO?false:true,showAlertForPredefined:true,showMultiSelectCombo:showMultiSelectCombo,onlyAlertMsgAvailable:onlyAlertMsgAvailable,additionalInfoView:false,selectedRecord:selectedRecord,currentAlertResultCode:currentAlertResultCode,currentntestgrouptestpredefcode:currentntestgrouptestpredefcode//,\n//  loading:false\n});// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: { \n//         loading: false,\n//        masterData, \n//         showAlert: inputData.nneedresultentryalert===transactionStatus.NO?false:true,\n//          showAlertForPredefined: true,\n//          showMultiSelectCombo,\n//          onlyAlertMsgAvailable,\n//          additionalInfoView:false,\n//          selectedRecord,\n//          currentAlertResultCode,\n//          currentntestgrouptestpredefcode\n//     }\n// })\n});// .catch(error => {\n//     dispatch({\n//         type: DEFAULT_RETURN,\n//         payload: {\n//             loading: false\n//         }\n//     })\n//     if (error.response.status === 500) {\n//         toast.error(error.message);\n//     } else {\n//         toast.warn(error.response.data);\n//     }\n// })\n//    }\n}// componentDidUpdate(previousProps, prevState, snapshot) {\n//     let parameterResults=[];\n//     if(this.state.parameterResults!==prevState.parameterResults){\n//        // parameterResults=this.props.parameterResults;\n//         //this.setState({parameterResults})\n//         this.props.dispatch({ type: DEFAULT_RETURN });\n//     } \n// }\n},{key:\"componentWillUnmount\",value:// static getDerivedStateFromProps(props, state) {\n//     if( props.Login.showAlert !==  state.showAlert){\n//         //Change in props\n//         return{\n//             showAlert: props.Login.showAlert\n//         };\n//     } \n//     return null; // No change to state\n// }\nfunction componentWillUnmount(){//  let parameterResults = this.state.parameterResults\nvar updateInfo={typeName:DEFAULT_RETURN,//  data: { parameterResults: undefined  }\ndata:{isParameterInitialRender:false//,parameterResults:[] ,selectedRecord :{}\n}};this.props.updateStore(updateInfo);}},{key:\"render\",value:// shouldComponentUpdate (nextProps,nextState) {\n//     // Rendering the component only if\n//     // passed props value is changed\n//     console.log('nextProps',nextProps);\n//     if ((nextProps.Login.parameterResults !==this.props.Login.parameterResults)) {\n//       return false;\n//     }else if(nextState.parameterResults!==this.state.parameterResults){\n//         return true;\n//     } else {\n//       return false;\n//     }\n//   }\n// shouldComponentUpdate (nextProps) { \n//     if ((nextProps.Login.parameterResults !==this.props.Login.parameterResults)&&\n//     nextProps.Login.isParameterInitialRender===false) {\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   }\n// componentDidUpdate (prevProps, prevState) {\n//   //  console.log('Deleted User successfully'); \n//     let parameterResults = this.state.parameterResults\n//     if(this.state.parameterResults!==prevState.parameterResults){\n//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: { parameterResults: parameterResults,isParameterInitialRender:false }\n//         }\n//         this.props.updateStore(updateInfo);\n//     }\n//   }\n// this.props.onSaveClick = (childData) =>{\n//     this.setState({name: childData})\n// }\n// updateStoreResultEntryForm = (updateInfo)  => { \n//     return function (dispatch) {\n//         console.log('updateInfoXXXXX')\n//         dispatch({\n//             type: updateInfo.typeName,\n//             payload: {\n//                 ...updateInfo.data,\n//                 masterStatus: \"\",\n//                 errorCode: undefined\n//             }\n//         }); \n//     } \n// }\nfunction render(){var _this3=this;//  console.log(\"Grand Child Result Entry Form\");\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,//this.props.index===0&&\nthis.state.showAlert&&/*#__PURE__*/React.createElement(ModalShow,{modalShow:this.state.showAlert,modalTitle:this.props.intl.formatMessage({id:\"IDS_ADDITIONALINFOREQURIED\"}),closeModal:this.closeModalShow,onSaveClick:this.onModalSave,removeCancel:this.state.showAlertForPredefined||this.state.additionalInfoView?true:false,needSubmit:this.state.showAlertForPredefined||this.state.additionalInfoView?true:false,needSave:this.state.showAlertForPredefined||this.state.additionalInfoView?\"\":true,selectedRecord:this.state.selectedRecord||{},size:this.state.showAlertForPredefined||this.state.additionalInfoView?\"\":'lg',showAlertMsg:this.state.showAlertForPredefined?true:false,modalBody:/*#__PURE__*/React.createElement(ResultEntryPredefinedComments,{onlyAlertMsgAvailable:this.state.onlyAlertMsgAvailable,salertmessage:this.state.masterData['salertmessage'],showMultiSelectCombo:this.state.showMultiSelectCombo,testgrouptestpredefsubresultOptions:this.state.masterData.testgrouptestpredefsubresultOptions||[],selectedRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,onComboChange:this.onComboChange})}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"pl-0 mt-2\"},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#505f79\"}// style={{ color: \"#97a0af\" }}\n},\" \",this.props.parameterResults.sparametersynonym,this.props.parameterResults.nresultmandatory===transactionStatus.NO?\"(optional)\":\"\")),/*#__PURE__*/React.createElement(React.Fragment,null,this.renderSwitch(this.props.parameterResults,this.props.index,this.props.parameterResults.ntransactionresultcode,this.props.Login.screenName)),this.props.parameterResults.row_num===this.props.ResultParameter.length?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]}),name:\"ssampleid\",type:\"text\",onChange:function onChange(event){return _this3.onInputOnChange(event);},onKeyUp:this.handleKeypress,placeholder:this.props.intl.formatMessage({id:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]}),value:this.state.selectedRecord?this.state.selectedRecord[\"ssampleid\"]:\"\",isMandatory:false,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Nav.Link,{// data-for=\"tooltip-common-wrap\"\n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENTERSAMPLEID\"}),className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this3.onSaveSubCodedResult(_this3.props.Login.masterData,_this3.props.Login.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"ssampleid\",primaryKeyField:\"ssampleid\",dataResult:this.state.selectedsubcode||[],dataState:{}// dataState={this.state.sectionDataState}\n// dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\n,data:[],extractedColumnList:[{\"idsName\":this.props.Login.genericLabel&&this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\"dataField\":\"ssampleid\",\"width\":\"200px\"}],controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,pageable:false,scrollable:'scrollable',gridHeight:'335px',isActionRequired:true,methodUrl:\"SampleID\",hideColumnFilter:true,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_DELETESAMPLE\"}),controlname:\"faTrashAlt\",objectName:\"ExceptionLogs\",hidden:false,onClick:function onClick(item,key,nn){return _this3.deleteSubCodedResult(item,key,nn);}}]//userRoleControlRights={this.props.userRoleControlRights}\n})):\"\")));}}]);return ResultEntryParameterForm;}(React.Component);// export default  \n// connect(mapStatetoProps, mapDispatchToProps, {\n//    updateStore//,getPredefinedData\n// } )\n// //connect()\n//     (injectIntl(ResultEntryForm)) ;\nexport default connect(null,{updateStore:updateStore})(injectIntl(ResultEntryParameterForm));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryParameterForm.jsx"],"names":["React","Row","Col","Nav","Button","Modal","Card","FormattedMessage","injectIntl","ListWrapper","FormSelectSearch","FormTextarea","DropZone","attachmentType","parameterType","transactionStatus","MediaHeader","MediaLabel","MediaSubHeader","FormInput","FontAwesomeIcon","faCalculator","faEye","faInfo","faInfoCircle","faSave","TestPopOver","numberConversion","numericGrade","constructOptionList","deleteAttachmentDropZone","rearrangeDateFormat","connect","ResultEntryPredefinedComments","DEFAULT_RETURN","ModalShow","DataGrid","faAddressBook","updateStore","rsapi","Preloader","withRouter","initRequest","toast","Axios","intl","ResultEntryParameterForm","props","onComboChange","comboData","comboName","selectedRecord","state","currentAlertResultCode","setState","onInputChange","Data","name","target","value","closeModalShow","showAlertGrid","Login","updateInfo","typeName","data","onModalSave","parameterResults","currentntestgrouptestpredefcode","bool","some","x","map","Parameter","ntestgrouptestpredefsubcode","label","join","substring","length","onResultInputChange","showAlert","onGradeEvent","ResultParameter","index","parameter","undefined","sresult","selectedResultGrade","nparametertypecode","NUMERIC","ngradecode","parseFloat","parseInt","nroundingdigits","PREDEFINED","CHARACTER","trim","deleteAttachmentParameterFile","event","file","fieldName","sfinal","sresultpredefinedname","salertmessage","sresultcomment","acceptedFile","ncalculatedresult","inputData","test","item","ntransactionresultcode","ntestgrouptestpredefcode","spredefinedname","spredefinedsynonym","spredefinedcomments","nneedresultentryalert","nneedsubcodedresult","NO","ATTACHMENT","YES","getPredefinedData","masterData","onInputOnChange","optional","type","checked","renderSwitch","result","screenName","gradeValues","gradeCode","isAdditionalInfoRequired","hasOwnProperty","onKeyPress","paremterResultcode","ntestgrouptestformulacode","getFormula","userInfo","color","predefinedValues","nresultmandatory","needdelete","FTP","onSaveSubCodedResult","saveType","formRef","selectedsubcode","ssampleid","push","isFound","element","onSampleAdd","handleKeypress","e","keyCode","deleteSubCodedResult","subCodedResult","index1","splice","dataIndex","controlMap","userRoleControlRights","inputParamData","post","then","response","showMultiSelectCombo","onlyAlertMsgAvailable","testgrouptestpredefsubresult","additionalInfoUidata","JSON","parse","showAlertForPredefined","additionalInfoView","isParameterInitialRender","formatMessage","id","testgrouptestpredefsubresultOptions","sparametersynonym","row_num","genericLabel","slanguagetypecode","title","controlname","objectName","hidden","onClick","key","nn","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Nav, Button, Modal, Card } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport '../../components/list-master/list-master.styles';\r\nimport { attachmentType, parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport './result.css';\r\nimport '../../assets/styles/tree.css';\r\nimport { MediaHeader, MediaLabel, MediaSubHeader } from '../../components/App.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalculator, faEye, faInfo, faInfoCircle, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport TestPopOver from './TestPopOver';\r\nimport { numberConversion, numericGrade } from './ResultEntryValidation';\r\nimport { constructOptionList, deleteAttachmentDropZone, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { connect } from 'react-redux';\r\nimport ResultEntryPredefinedComments from './ResultEntryPredefinedComments';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faAddressBook } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    // getPredefinedData,\r\n    updateStore\r\n} from '../../actions';\r\nimport rsapi from '../../rsapi';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { initRequest } from '../../actions/LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { intl } from '../../components/App';\r\n// const mapStatetoProps = (state) => {\r\n//     return {\r\n//         Login: state.Login\r\n//     }\r\n// }\r\n// const mapDispatchToProps = dispatch => ({ \r\n//     dispatch                // ← Add this\r\n//  })\r\nclass ResultEntryParameterForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            parameterResults: [...this.props.ResultParameter],\r\n            selectedResultGrade: this.props.selectedResultGrade//,\r\n            ,controlMap: [...this.props.controlMap],\r\n            userRoleControlRights: [...this.props.userRoleControlRights]\r\n            //loading:false\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // componentDidUpdate(previousProps) {\r\n    //     let bool = false;\r\n    //     let { currentAlertResultCode, currentntestgrouptestpredefcode,selectedRecord,showAlert } = this.state\r\n    //     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n    //         bool = true;\r\n    //         selectedRecord = this.props.Login.selectedRecord;\r\n    //     }\r\n    //     if (this.props.Login.showAlert !== previousProps.Login.showAlert) {\r\n    //         bool = true;\r\n    //         showAlert = this.props.Login.showAlert;\r\n    //     }\r\n\r\n    //     if (this.props.Login.currentAlertResultCode !== previousProps.Login.currentAlertResultCode) {\r\n    //         bool = true;\r\n    //         currentAlertResultCode = this.props.Login.currentAlertResultCode;\r\n    //     }\r\n    //     if (this.props.Login.currentntestgrouptestpredefcode !== previousProps.Login.currentntestgrouptestpredefcode) {\r\n    //         bool = true;\r\n    //         currentntestgrouptestpredefcode = this.props.Login.currentntestgrouptestpredefcode;\r\n    //     }\r\n    //     if (bool) {\r\n    //         this.setState({ currentntestgrouptestpredefcode, currentAlertResultCode,selectedRecord,showAlert })\r\n    //     }\r\n    // }\r\n    //For Subcode Result Start\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode = this.state.currentAlertResultCode || 0;\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onInputChange = (Data, name) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode = this.state.currentAlertResultCode || 0;\r\n        if (Data) {\r\n            selectedRecord[name] = Data.target.value;\r\n        }\r\n        else {\r\n            selectedRecord[name] = [];\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    closeModalShow = () => {\r\n        let showAlertGrid = this.props.Login.showAlertGrid;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        selectedRecord['ntestgrouptestpredefsubcode'] && delete selectedRecord['ntestgrouptestpredefsubcode']\r\n        showAlertGrid = false;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showAlertGrid, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onModalSave = () => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode = this.state.currentAlertResultCode || 0;\r\n        let parameterResults = this.state.parameterResults\r\n        let currentntestgrouptestpredefcode = this.state.currentntestgrouptestpredefcode || 0;\r\n        let bool = parameterResults.some(x => x['ntransactionresultcode'] === currentAlertResultCode)\r\n        if (bool) {\r\n            parameterResults.map(Parameter => {\r\n                if (Parameter['ntransactionresultcode'] === currentAlertResultCode) {\r\n                    Parameter['additionalInfoUidata'] = { ntestgrouptestpredefsubcode: selectedRecord['ntestgrouptestpredefsubcode'] }\r\n                    if (selectedRecord['ntestgrouptestpredefsubcode']) {\r\n                        if (typeof selectedRecord['ntestgrouptestpredefsubcode'] === 'string') {\r\n                            Parameter['additionalInfo'] = selectedRecord['ntestgrouptestpredefsubcode']\r\n                        } else {\r\n                            Parameter['additionalInfo'] = \"\"\r\n                            Parameter['additionalInfo'] = selectedRecord['ntestgrouptestpredefsubcode'].map(x => x.label + \",\").join('\\n')\r\n                            Parameter['additionalInfo'] = Parameter['additionalInfo'].substring(0,\r\n                                Parameter['additionalInfo'].length - 1)\r\n                        }\r\n                    } else {\r\n                        Parameter['additionalInfo'] = \"\"\r\n                        Parameter['additionalInfoUidata'] && delete Parameter['additionalInfoUidata']\r\n                    }\r\n                    Parameter['ntestgrouptestpredefcode'] = currentntestgrouptestpredefcode\r\n                }\r\n            }\r\n            );\r\n        }\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { parameterResults:parameterResults,selectedRecord: selectedRecord, showAlert: false }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n        //Sync With Parent Component\r\n        this.props.onResultInputChange(parameterResults);\r\n        this.setState({ parameterResults: parameterResults, selectedRecord: selectedRecord, showAlert: false })\r\n    }\r\n\r\n    //For Subcode Result End\r\n\r\n\r\n    onGradeEvent = (ResultParameter, index, parameter) => {\r\n        if (ResultParameter.length > 0 && ResultParameter[index] !== undefined && ResultParameter[index].sresult !== null) {\r\n            let selectedRecord = this.state.selectedRecord || [];\r\n            let selectedResultGrade = this.state.selectedResultGrade || [];\r\n            if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n                selectedResultGrade[index] = {\r\n                    ngradecode: ResultParameter[index].sresult !== \"\" ?\r\n                        numericGrade(parameter, numberConversion(parseFloat(ResultParameter[index].sresult), parseInt(parameter.nroundingdigits))) : -1\r\n                };\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n                if (ResultParameter[index].sresult !== null) {\r\n                    selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: 0 };\r\n                }\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n                if (ResultParameter[index].sresult !== null && ResultParameter[index].sresult.trim() !== \"\") {\r\n                    //selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                    selectedResultGrade[index] = { ngradecode: 4 };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: -1 };\r\n                }\r\n            }\r\n            selectedRecord.selectedResultGrade = selectedResultGrade;\r\n            //    if (ResultParameter.length > 0 && ResultParameter[index] !== undefined && ResultParameter[index].ngradecode !== selectedResultGrade[index].ngradecode) {\r\n\r\n            this.setState({\r\n                selectedRecord\r\n            });\r\n            // }\r\n        }\r\n    }\r\n    deleteAttachmentParameterFile = (event, file, fieldName, index) => {\r\n        let ResultParameter = this.state.parameterResults[index];\r\n        let parameterResults = this.state.parameterResults;\r\n        ResultParameter[fieldName] = deleteAttachmentDropZone(ResultParameter[fieldName],\r\n            file)\r\n        parameterResults[index]['editable'] = true;\r\n        this.setState({\r\n            parameterResults: parameterResults\r\n        });\r\n\r\n    }\r\n    onResultInputChange = (event, index, parameter) => {\r\n        let selectedRecord = this.state.selectedRecord || [];\r\n        let ResultParameter = this.state.parameterResults ? [...this.state.parameterResults] : [];\r\n        let sresult = \"\";\r\n        let sfinal = \"\";\r\n        let sresultpredefinedname = \"\";\r\n        let salertmessage = \"\";\r\n        let sresultcomment = \"\";\r\n        let value = -1;\r\n        let acceptedFile = [];\r\n        let ncalculatedresult;\r\n        let currentAlertResultCode = 0;\r\n        let currentntestgrouptestpredefcode = 0;\r\n        let inputData = {}\r\n        //  if ((event[0] && event[0].name!==ResultParameter[index]['sresult']) || (event.target && event.target.value !== ResultParameter[index]['sresult']) ||\r\n        //     (event.item && event.item.ntransactionresultcode ===\r\n        //        ResultParameter[index].ntransactionresultcode && ResultParameter[index]['sresult'] !== event.item && event.item.spredefinedname)) {\r\n        if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\r\n                sresult = event.target.value;\r\n                ncalculatedresult = 4\r\n            } else {\r\n                sresult = ResultParameter[index]['sresult'] === null ? \"\" : ResultParameter[index]['sresult'];\r\n                ncalculatedresult = ResultParameter[index]['ncalculatedresult'];\r\n            }\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n            currentAlertResultCode = event.item.ntransactionresultcode;\r\n            currentntestgrouptestpredefcode = event.item.ntestgrouptestpredefcode;\r\n            if (event != null) {\r\n                sresult = event.item.spredefinedname;\r\n                sresultpredefinedname = event.item.sresultpredefinedname;\r\n                sfinal = event.item.spredefinedsynonym\r\n                value = event.item.ngradecode;\r\n                salertmessage = event.item.salertmessage ? event.item.salertmessage : \"\";\r\n                sresultcomment = event.item.spredefinedcomments ? event.item.spredefinedcomments : \"\";\r\n                ncalculatedresult = 4;\r\n            }\r\n            else {\r\n                sresult = \"\";\r\n                sfinal = \"\";\r\n                sresultpredefinedname = \"\";\r\n                value = -1;\r\n                ncalculatedresult = 4\r\n            }\r\n            inputData = {\r\n                'ntestgrouptestpredefcode': event.item.ntestgrouptestpredefcode,\r\n                'salertmessage': salertmessage,\r\n                'nneedresultentryalert': event.item.nneedresultentryalert,\r\n                'nneedsubcodedresult': event.item.nneedsubcodedresult\r\n            }\r\n            if (event.item.nneedresultentryalert === transactionStatus.NO &&\r\n                event.item.nneedsubcodedresult === transactionStatus.NO) {\r\n                if (ResultParameter[index]['additionalInfo']) {\r\n                    ResultParameter[index]['additionalInfo'] = \"\"\r\n                }\r\n                if (ResultParameter[index]['additionalInfoUidata']) {\r\n                    ResultParameter[index]['additionalInfoUidata'] = \"\"\r\n                }\r\n            }\r\n\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n            sresult = event.target.value;\r\n            if (event.target.value.trim() === \"\")\r\n                ncalculatedresult = -1;\r\n            else\r\n                ncalculatedresult = 4;\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.ATTACHMENT) {\r\n            sresult = event[0] && event[0].name;\r\n            sfinal = event;\r\n            ncalculatedresult = 4\r\n        }\r\n        ResultParameter[index]['sresult'] = sresult\r\n        ResultParameter[index]['sfinal'] = sfinal\r\n        ResultParameter[index]['sresultpredefinedname'] = sresultpredefinedname\r\n        ResultParameter[index]['sresultcomment'] = sresultcomment\r\n        ResultParameter[index]['salertmessage'] = salertmessage\r\n        ResultParameter[index]['acceptedFile'] = acceptedFile\r\n        ResultParameter[index]['editable'] = true\r\n        ResultParameter[index]['ngradecode'] = value\r\n        ResultParameter[index]['ncalculatedresult'] = ncalculatedresult\r\n        ResultParameter[index]['dummty'] = 'dummty'\r\n        selectedRecord.ResultParameter = ResultParameter\r\n        let parameterResults = ResultParameter\r\n        if (parameter.nparametertypecode === parameterType.PREDEFINED && (event.item.nneedresultentryalert === transactionStatus.YES ||\r\n            event.item.nneedsubcodedresult === transactionStatus.YES)\r\n        ) {\r\n            // this.props.\r\n            this.getPredefinedData(inputData, selectedRecord, currentAlertResultCode, this.props.Login.masterData, currentntestgrouptestpredefcode)\r\n        } else {\r\n            if (selectedRecord[\"ntestgrouptestpredefsubcode\"]) {\r\n                delete selectedRecord[\"ntestgrouptestpredefsubcode\"]\r\n            }\r\n        }\r\n        //Sync child Data With Parent Component\r\n        this.props.onResultInputChange(parameterResults);\r\n        this.setState({\r\n            parameterResults: parameterResults,\r\n            currentAlertResultCode,\r\n            currentntestgrouptestpredefcode,\r\n            selectedRecord\r\n        });\r\n        //}\r\n    }\r\n\r\n    onInputOnChange = (event, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = optional;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    getPredefinedData(inputData, selectedRecord, currentAlertResultCode, masterData, currentntestgrouptestpredefcode) {\r\n        //  return function (dispatch) {\r\n        //   this.setState({loading:true})\r\n        let inputParamData = {\r\n            ntestgrouptestpredefcode: inputData.ntestgrouptestpredefcode,\r\n        }\r\n        //dispatch(initRequest(true));\r\n        rsapi.post(\"resultentrybysample/getPredefinedData\", inputParamData)\r\n            .then(response => {\r\n                let showMultiSelectCombo = false;\r\n                let ResultParameter = selectedRecord['ResultParameter']\r\n                let onlyAlertMsgAvailable = false;\r\n                let testgrouptestpredefsubresult = response.data['testgrouptestpredefsubresult']\r\n                if (inputData['nneedsubcodedresult'] === transactionStatus.YES) {\r\n                    showMultiSelectCombo = true\r\n                    masterData['testgrouptestpredefsubresultOptions'] = testgrouptestpredefsubresult\r\n                }\r\n                else {\r\n                    onlyAlertMsgAvailable = true;\r\n                }\r\n                for (const Parameter of ResultParameter) {\r\n                    if (Parameter.additionalInfoUidata || Parameter.additionalInfoUidata === \"\") {\r\n                        let additionalInfoUidata = typeof Parameter.additionalInfoUidata === 'string' ? Parameter.additionalInfoUidata === \"\" ? \"\" : JSON.parse(Parameter.additionalInfoUidata) :\r\n                            Parameter.additionalInfoUidata\r\n                        if (Parameter['ntransactionresultcode'] === currentAlertResultCode &&\r\n                            Parameter['ntestgrouptestpredefcode'] === inputData['ntestgrouptestpredefcode']) {\r\n                            if (Parameter.additionalInfoUidata) {\r\n                                selectedRecord[\"ntestgrouptestpredefsubcode\"] = additionalInfoUidata['ntestgrouptestpredefsubcode']\r\n                                break;\r\n                            }\r\n                        } else {\r\n                            if (selectedRecord[\"ntestgrouptestpredefsubcode\"]) {\r\n                                delete selectedRecord[\"ntestgrouptestpredefsubcode\"]\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                };\r\n                masterData['salertmessage'] = inputData.salertmessage\r\n\r\n                this.setState({\r\n                    masterData,\r\n                    showAlert: inputData.nneedresultentryalert === transactionStatus.NO ? false : true,\r\n                    showAlertForPredefined: true,\r\n                    showMultiSelectCombo,\r\n                    onlyAlertMsgAvailable,\r\n                    additionalInfoView: false,\r\n                    selectedRecord,\r\n                    currentAlertResultCode,\r\n                    currentntestgrouptestpredefcode//,\r\n                    //  loading:false\r\n                });\r\n\r\n                // dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: { \r\n                //         loading: false,\r\n                //        masterData, \r\n                //         showAlert: inputData.nneedresultentryalert===transactionStatus.NO?false:true,\r\n                //          showAlertForPredefined: true,\r\n                //          showMultiSelectCombo,\r\n                //          onlyAlertMsgAvailable,\r\n                //          additionalInfoView:false,\r\n                //          selectedRecord,\r\n                //          currentAlertResultCode,\r\n                //          currentntestgrouptestpredefcode\r\n                //     }\r\n                // })\r\n            })\r\n        // .catch(error => {\r\n        //     dispatch({\r\n        //         type: DEFAULT_RETURN,\r\n        //         payload: {\r\n        //             loading: false\r\n        //         }\r\n        //     })\r\n        //     if (error.response.status === 500) {\r\n        //         toast.error(error.message);\r\n        //     } else {\r\n        //         toast.warn(error.response.data);\r\n        //     }\r\n        // })\r\n        //    }\r\n\r\n    }\r\n\r\n    // componentDidUpdate(previousProps, prevState, snapshot) {\r\n    //     let parameterResults=[];\r\n    //     if(this.state.parameterResults!==prevState.parameterResults){\r\n    //        // parameterResults=this.props.parameterResults;\r\n    //         //this.setState({parameterResults})\r\n    //         this.props.dispatch({ type: DEFAULT_RETURN });\r\n    //     } \r\n    // }\r\n\r\n    renderSwitch = (parameter, index, result, screenName) => {\r\n        const selectedResultGrade = this.state.selectedResultGrade;//this.props.selectedResultGrade;\r\n        const gradeValues = this.props.gradeValues;\r\n        const gradeCode = selectedResultGrade ? selectedResultGrade.length > 0 ?\r\n            selectedResultGrade[index] ? selectedResultGrade[index]['ngradecode'] : undefined : \"\" : \"\";\r\n        let isAdditionalInfoRequired = this.state.parameterResults[index].hasOwnProperty('additionalInfo') &&\r\n            this.state.parameterResults[index]['additionalInfo'] !== \"\" && this.state.parameterResults[index]['additionalInfo'] !== null ? true : false\r\n        //  parameter.jsondata['value'] ? JSON.parse(parameter.jsondata['value']).hasOwnProperty('additionalInfo') &&\r\n        //     JSON.parse(parameter.jsondata['value'])['additionalInfo'] !== \"\" ? true : false :\r\n        //     parameter.jsondata.hasOwnProperty('additionalInfo') &&\r\n        //         parameter.jsondata['additionalInfo'] !== \"\" ? true : false\r\n\r\n        switch (parameter.nparametertypecode) {\r\n\r\n            case 1: {\r\n                return (\r\n                    <>\r\n                        <div className='row w-100'>\r\n                            <Col md={6}>\r\n                                <FormInput\r\n                                    name={this.state.parameterResults[index].ntransactionresultcode}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    // value={this.props.parameterResults.length > 0 ?\r\n                                    //     this.props.parameterResults[index] ? (this.props.parameterResults[index]['sresult'] !== null ? this.props.parameterResults[index]['sresult'] : \"\") : \"\" : \"\"}\r\n                                    value={this.state.parameterResults.length > 0 ?\r\n                                        this.state.parameterResults[index] ? (this.state.parameterResults[index]['sresult'] !== null ? this.state.parameterResults[index]['sresult'] : \"\") : \"\" : \"\"}\r\n                                    // placeholder={parameter.sparametersynonym}\r\n                                    //label={parameter.sparametersynonym}\r\n                                    // onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                                    onChange={(event) => this.onResultInputChange(event, index, parameter)}\r\n                                    onBlur={() => this.onGradeEvent(this.state.parameterResults, index, parameter)}\r\n                                    // onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\r\n                                    maxLength={9}\r\n                                    onKeyUp={(event) => this.props.onKeyPress(event, index, this.props.paremterResultcode)}\r\n                                />\r\n                            </Col>\r\n                            {parameter.ntestgrouptestformulacode > 0 ?\r\n                                <Col md={2} className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                    <Nav.Link title=\"Calculate Formula\" className=\"btn btn-circle outline-grey ml-2\" role=\"button\" id={screenName + -+index}\r\n                                        onClick={(event) => this.props.getFormula(parameter, this.props.Login.userInfo, this.props.Login.masterData, index, event)}>\r\n                                        <FontAwesomeIcon title=\"Calculate Formula\" icon={faCalculator} />\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                                : \"\"}\r\n                            <Col md={4}>\r\n                                {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                                <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                    {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                                {/* : \"\"} */}\r\n                            </Col>\r\n                        </div>\r\n                    </>\r\n                );\r\n            }\r\n            case 2: {\r\n                return (\r\n                    <>\r\n                        <Col md={isAdditionalInfoRequired ? 8 : 10} className=\"pl-0\" >\r\n                            <FormSelectSearch\r\n                                name={this.state.parameterResults[index] && this.state.parameterResults[index].ntransactionresultcode}\r\n                                as={\"select\"}\r\n                                //formLabel={parameter.sparametersynonym}\r\n\r\n                                defaultValue={{\r\n                                    \"value\": this.state.parameterResults[index] &&\r\n                                        this.state.parameterResults[index].sresultpredefinedname, \"label\":\r\n                                        this.state.parameterResults[index] && this.state.parameterResults[index]\r\n                                            .sresultpredefinedname\r\n                                }}\r\n\r\n                                //  defaultValue={{ \"value\": parameter.sresultpredefinedname, \"label\": parameter.sresultpredefinedname }}\r\n\r\n\r\n                                //  defaultValue={parameter.sresult && (parameter.sresult!=null || parameter.sresult !== \"\") ?  { \"value\": parameter.ngradecode, \"label\": parameter.sresult } :\r\n                                //  this.props.predefinedValues ? constructOptionList(this.props.predefinedValues[parameter.ntransactionresultcode]||[],'ngradecode',\r\n                                // 'spredefinedname' , undefined, undefined, undefined).get(\"DefaultValue\"):\"\"}\r\n\r\n                                options={this.props.predefinedValues ? this.props.predefinedValues[parameter.ntransactionresultcode] : \"\"}\r\n                                optionId={\"ntestgrouptestpredefcode\"}\r\n                                optionValue={\"spredefinedname\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                matchFrom={'start'}\r\n                                isSearchable={true}\r\n                                isClearable={parameter.nresultmandatory === transactionStatus.YES ? false : true}\r\n                                isMandatory={false}\r\n                                onKeyUp={(event) => this.props.onKeyPress(event, index, this.props.paremterResultcode)}\r\n                                // onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                                // onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\r\n                                onChange={(event) => { this.onResultInputChange(event, index, parameter); this.onGradeEvent(this.state.parameterResults, index, parameter) }}\r\n                            //onChange={(event) => this.onResultInputChange(event, index, parameter)}\r\n                            //onBlur={() => this.onGradeEvent(this.state.parameterResults, index, parameter)}\r\n\r\n                            />\r\n                        </Col>\r\n                        <Col md={2} className=\"pt-2\">\r\n                            {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                            <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                            {/* : \"\"} */}\r\n                        </Col>\r\n                        {isAdditionalInfoRequired &&\r\n\r\n                            <Col md={2} className=\"pt-2\">\r\n                                {/* <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                     //   hidden={this.props.userRoleControlRights.indexOf(this.props.viewId) === -1}\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                                        data-tip={  parameter.jsondata['value'] ?\r\n                                        JSON.parse(parameter.jsondata['value'])['additionalInfo'] :\r\n                                        parameter.jsondata['additionalInfo']}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                         onClick={() => this.props.viewAdditionalInfo(parameter.ntransactionresultcode)}\r\n                                        >\r\n                                        <FontAwesomeIcon icon={faEye}/>\r\n                                     </Button>     */}\r\n                                {/* <Modal.Title id=\"password\" className=\"header-primary flex-grow-1\">\r\n                                      <FormattedMessage id='IDS_ADDITIONALINFOREQURIED' defaultMessage='Cancel' />\r\n                                      </Modal.Title> */}\r\n\r\n                                <TestPopOver intl={this.props.intl} needIcon={true} needPopoverTitleContent={true} placement=\"left\" stringList={\r\n                                    // parameter.jsondata['value'] ?\r\n                                    //      [JSON.parse(parameter.jsondata['value'])['additionalInfo']] :\r\n                                    //              [parameter.jsondata['additionalInfo']] \r\n                                    this.state.parameterResults[index].hasOwnProperty('additionalInfo') &&\r\n                                    this.state.parameterResults[index]['additionalInfo'] !== \"\" &&\r\n                                    [this.state.parameterResults[index]['additionalInfo']]} ></TestPopOver>\r\n                                {/* <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        // data-for=\"tooltip-common-wrap\"\r\n                                        //  data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                         data-tip={ parameter.jsondata['value'] ?\r\n                                         JSON.parse(parameter.jsondata['value'])['additionalInfo'] :\r\n                                                 parameter.jsondata['additionalInfo'] }\r\n                                        data-html={true}\r\n                                        //   hidden={this.props.userRoleControlRights.indexOf(this.props.viewId) === -1}\r\n                                        onClick={() => this.props.viewAdditionalInfo(parameter.ntransactionresultcode)}>\r\n                                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                                    </Nav.Link>  */}\r\n\r\n                            </Col>\r\n                        }\r\n\r\n                    </>\r\n                );\r\n            }\r\n            case 3: {\r\n                return (\r\n                    <>\r\n                        <Col md={10} className=\"pl-0\">\r\n                            <FormTextarea\r\n                                name={parameter.ntransactionresultcode}\r\n                                //label={parameter.sparametersynonym}\r\n                                //placeholder={parameter.sparametersynonym}\r\n                                type=\"text\"\r\n                                //     defaultValue={parameter.sresult}\r\n                                defaultValue={this.state.parameterResults[index] && this.state.parameterResults[index]['sresult']}\r\n\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                                onChange={(event) => this.onResultInputChange(event, index, parameter)}\r\n                                onBlur={() => this.onGradeEvent(this.state.parameterResults, index, parameter)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                            <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                            {/* : \"\"} */}\r\n                        </Col>\r\n                    </>\r\n                );\r\n            }\r\n            case 4: {\r\n                return (\r\n                    <Col md={12} className=\"pl-0\">\r\n                        <DropZone\r\n                            maxFiles={1}\r\n                            isMandatory={false}\r\n                            //label={parameter.sparametersynonym}\r\n                            accept=\".pdf\"\r\n                            minSize={0}\r\n                            maxSize={20}\r\n                            multiple={false}\r\n                            // editFiles={parameter.sfinal != null ? parameter : \"\"}\r\n                            editFiles={this.state.parameterResults[index].sfinal != null ? this.state.parameterResults[index] : \"\"}\r\n                            needdelete={this.props.needdelete ? true : false}\r\n                            attachmentTypeCode={attachmentType.FTP}\r\n                            fileSizeName=\"nfilesize\"\r\n                            fileName=\"sfinal\"\r\n                            index={index}\r\n                            // deleteAttachment={this.props.deleteAttachmentParamFile}\r\n                            // onDrop={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                            deleteAttachment={this.deleteAttachmentParameterFile}\r\n                            onDrop={(event) => this.onResultInputChange(event, index, parameter)}\r\n                        //disabled={disabled}\r\n                        />\r\n                    </Col>\r\n                )\r\n            }\r\n\r\n            default:\r\n                return (\"\");\r\n        }\r\n    }\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     if( props.Login.showAlert !==  state.showAlert){\r\n    //         //Change in props\r\n    //         return{\r\n    //             showAlert: props.Login.showAlert\r\n    //         };\r\n    //     } \r\n    //     return null; // No change to state\r\n    // }\r\n    componentWillUnmount() {\r\n\r\n        //  let parameterResults = this.state.parameterResults\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            //  data: { parameterResults: undefined  }\r\n            data: {\r\n                isParameterInitialRender: false//,parameterResults:[] ,selectedRecord :{}\r\n            }\r\n\r\n\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onSaveSubCodedResult = (saveType, formRef) => {\r\n\r\n        let selectedsubcode = this.state.selectedsubcode || [];\r\n        let ssampleid=this.state.selectedRecord[\"ssampleid\"].trim();\r\n        if(ssampleid!==\"\"){\r\n        if(selectedsubcode.length===0)\r\n        { selectedsubcode.push({ \"ssampleid\": this.state.selectedRecord[\"ssampleid\"] });}\r\n        const isFound = selectedsubcode.some(element => {\r\n            if (element.ssampleid === ssampleid) {\r\n              return true;\r\n            }\r\n          });\r\n          if(!isFound){\r\n            selectedsubcode.push({ \"ssampleid\": this.state.selectedRecord[\"ssampleid\"] });\r\n          \r\n        }\r\n        this.props.onSampleAdd(selectedsubcode);\r\n        this.setState({ selectedsubcode, selectedRecord:undefined });\r\n    }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n     handleKeypress = e => {\r\n        //it triggers by pressing the enter key\r\n      if (e.keyCode === 13) {\r\n        this.onSaveSubCodedResult(this.props.Login.masterData, this.props.Login.userInfo)\r\n      }\r\n    };\r\n\r\n    deleteSubCodedResult = (index, subCodedResult, index1) => {\r\n        const selectedsubcode = this.state.selectedsubcode;\r\n        selectedsubcode.splice(index1.dataIndex, 1);\r\n        this.props.onSampleAdd(selectedsubcode);\r\n        this.setState({ selectedsubcode });\r\n    }\r\n\r\n    // shouldComponentUpdate (nextProps,nextState) {\r\n    //     // Rendering the component only if\r\n    //     // passed props value is changed\r\n    //     console.log('nextProps',nextProps);\r\n    //     if ((nextProps.Login.parameterResults !==this.props.Login.parameterResults)) {\r\n    //       return false;\r\n    //     }else if(nextState.parameterResults!==this.state.parameterResults){\r\n    //         return true;\r\n    //     } else {\r\n    //       return false;\r\n    //     }\r\n    //   }\r\n    // shouldComponentUpdate (nextProps) { \r\n    //     if ((nextProps.Login.parameterResults !==this.props.Login.parameterResults)&&\r\n    //     nextProps.Login.isParameterInitialRender===false) {\r\n    //       return false;\r\n    //     } else {\r\n    //       return true;\r\n    //     }\r\n    //   }\r\n\r\n    // componentDidUpdate (prevProps, prevState) {\r\n    //   //  console.log('Deleted User successfully'); \r\n    //     let parameterResults = this.state.parameterResults\r\n    //     if(this.state.parameterResults!==prevState.parameterResults){\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: { parameterResults: parameterResults,isParameterInitialRender:false }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n\r\n    //   }\r\n\r\n    // this.props.onSaveClick = (childData) =>{\r\n    //     this.setState({name: childData})\r\n    // }\r\n\r\n    // updateStoreResultEntryForm = (updateInfo)  => { \r\n    //     return function (dispatch) {\r\n    //         console.log('updateInfoXXXXX')\r\n    //         dispatch({\r\n    //             type: updateInfo.typeName,\r\n    //             payload: {\r\n    //                 ...updateInfo.data,\r\n    //                 masterStatus: \"\",\r\n    //                 errorCode: undefined\r\n    //             }\r\n    //         }); \r\n    //     } \r\n    // }\r\n\r\n    render() {\r\n\r\n        //  console.log(\"Grand Child Result Entry Form\");\r\n        return (\r\n            <>\r\n\r\n\r\n\r\n                {/* <Preloader loading={this.state.loading} /> */}\r\n\r\n                {/* { this.props.index===0&&\r\n                <Button  className=\"btn-user btn-primary-blue\" onClick={() => this.props.onSaveClick(this.state)}>\r\n\r\n                    <FontAwesomeIcon icon={faSave} /> { }\r\n                    <FormattedMessage id='IDS_SAVEFILTER' defaultMessage='Save Filter' />\r\n                </Button> \r\n                \r\n                }     */}\r\n                {//this.props.index===0&&\r\n                    this.state.showAlert &&\r\n                    <ModalShow\r\n                        modalShow={this.state.showAlert}\r\n                        modalTitle={this.props.intl.formatMessage({ id: \"IDS_ADDITIONALINFOREQURIED\" })}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onModalSave}\r\n                        removeCancel={this.state.showAlertForPredefined || this.state.additionalInfoView ? true : false}\r\n                        needSubmit={this.state.showAlertForPredefined || this.state.additionalInfoView ? true : false}\r\n                        needSave={this.state.showAlertForPredefined || this.state.additionalInfoView ? \"\" : true}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        size={this.state.showAlertForPredefined || this.state.additionalInfoView ? \"\" : 'lg'}\r\n                        showAlertMsg={this.state.showAlertForPredefined ? true : false}\r\n                        modalBody={\r\n                            <ResultEntryPredefinedComments\r\n                                onlyAlertMsgAvailable={this.state.onlyAlertMsgAvailable}\r\n                                salertmessage={this.state.masterData['salertmessage']}\r\n                                showMultiSelectCombo={this.state.showMultiSelectCombo}\r\n                                testgrouptestpredefsubresultOptions={this.state.masterData.testgrouptestpredefsubresultOptions || []}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputChange={this.onInputChange}\r\n                                onComboChange={this.onComboChange}\r\n                            />\r\n                        }\r\n                    />}\r\n\r\n                <Row   >\r\n                    {/* {this.props.parameterResults.map((parameterResult, index) => {\r\n                    return (   */}\r\n                    <>\r\n\r\n                        {/* {this.props.parameterResults && this.props.parameterResults.stestsynonym ?\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#007bff\" }}>\r\n                                \r\n                                {this.props.parameterResults.stestsynonym ?\r\n                                    <span className={`labelfont`} //style={{ color: \"#505f79\" }}\r\n                                        style={{ color: \"#007bff\", paddingLeft: '0.2rem' }}>\r\n\r\n                                        { }{ } {this.props.parameterResults.stestsynonym}\r\n                                        \r\n                                    </span>\r\n                                    : \"\"}\r\n                            </MediaHeader>\r\n                            : \"\"\r\n                        } */}\r\n\r\n                        <Col md={12} className=\"pl-0 mt-2\">\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#505f79\" }}\r\n                            // style={{ color: \"#97a0af\" }}\r\n                            >\r\n                                {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" />\r\n                                    <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                { }{ } {this.props.parameterResults.sparametersynonym}{ }{ }{this.props.parameterResults.nresultmandatory === transactionStatus.NO ? \"(optional)\" : \"\"}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                        <>\r\n                        {this.renderSwitch(this.props.parameterResults, this.props.index, this.props.parameterResults.ntransactionresultcode, this.props.Login.screenName)}\r\n                        </>\r\n                        {this.props.parameterResults.row_num === this.props.ResultParameter.length ?\r\n                            <>\r\n                                {/* <Col md={10} className=\"pl-0\"> */}\r\n                               <>\r\n                                \r\n                                    <Col md={8}>\r\n                                        <FormInput\r\n                                            label={this.props.intl.formatMessage({ id: this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] })}\r\n                                            name=\"ssampleid\"\r\n                                            type=\"text\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            onKeyUp={this.handleKeypress}\r\n                                            placeholder={this.props.intl.formatMessage({ id: this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"ssampleid\"] : \"\"}\r\n                                            isMandatory={false}\r\n                                            required={true}\r\n                                            maxLength={100}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Nav.Link\r\n                                            // data-for=\"tooltip-common-wrap\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ENTERSAMPLEID\" })} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.onSaveSubCodedResult(this.props.Login.masterData, this.props.Login.userInfo)}    >\r\n                                            <FontAwesomeIcon icon={faAddressBook} />\r\n                                        </Nav.Link>\r\n                                    </Col>\r\n                                  \r\n                                    </>\r\n\r\n                                <DataGrid\r\n                                    key=\"ssampleid\"\r\n                                    primaryKeyField=\"ssampleid\"\r\n                                    dataResult={this.state.selectedsubcode || []}\r\n                                    dataState={{}}\r\n                                    // dataState={this.state.sectionDataState}\r\n                                    // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                                    data={[]}\r\n                                    extractedColumnList={[{ \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"ssampleid\", \"width\": \"200px\" }]}\r\n                                    controlMap={this.props.controlMap}\r\n                                    userRoleControlRights={this.props.userRoleControlRights}\r\n                                    pageable={false}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'335px'}\r\n                                    isActionRequired={true}\r\n                                    methodUrl=\"SampleID\"\r\n                                    hideColumnFilter={true}\r\n                                    actionIcons={[{\r\n                                        title: this.props.intl.formatMessage({ id: \"IDS_DELETESAMPLE\" }),\r\n                                        controlname: \"faTrashAlt\",\r\n                                        objectName: \"ExceptionLogs\",\r\n                                        hidden: false,\r\n                                        onClick: (item, key, nn) => this.deleteSubCodedResult(item, key, nn)\r\n\r\n                                    }]}\r\n                                //userRoleControlRights={this.props.userRoleControlRights}\r\n\r\n                                >\r\n                                </DataGrid>\r\n\r\n                                {/* </Col> */}\r\n                            </>\r\n                            :\r\n                            \"\"}\r\n                    </>\r\n                    {/* )\r\n            })\r\n            } */}\r\n                </Row ></>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n// export default  \r\n// connect(mapStatetoProps, mapDispatchToProps, {\r\n//    updateStore//,getPredefinedData\r\n// } )\r\n// //connect()\r\n//     (injectIntl(ResultEntryForm)) ;\r\n\r\nexport default connect(null, {\r\n    updateStore\r\n\r\n})(injectIntl(ResultEntryParameterForm));"]},"metadata":{},"sourceType":"module"}