{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Componentrow.jsx\";\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Componentexp from \"./Componentexp\";\nimport { COMPONENT, COMPONENTROW } from \"./constants\";\nimport DropArea from \"./DropArea\";\nimport \"./styles.css\";\n\nconst Componentrow = _ref => {\n  let {\n    data,\n    components,\n    baselength,\n    path,\n    handleDrop,\n    onclickcomponent,\n    selectedFieldRecord\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: COMPONENT,\n    item: {\n      type: COMPONENT,\n      id: data.id,\n      data: data,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const style = {\n    border: `${data.children ? \"1px dashed black\" : \"\"}`,\n    padding: \"0rem 1rem\",\n    // backgroundColor: \"white\",\n    cursor: \"move\"\n  };\n\n  const getScale = () => {\n    let scale = 1;\n\n    if (data.children && data.children.length) {\n      if (baselength == 1) {\n        if (data.children.length < 10) {\n          scale = 1 - (\".\" + data.children.length) / 2;\n        } else {\n          scale = .5 - (\".\" + data.children.length);\n        }\n      } else if (baselength == 2) {\n        if (data.children.length < 10) {\n          scale = 1 - (\".\" + data.children.length) / 1.2;\n        } else {\n          scale = .5 - (\".\" + data.children.length);\n        }\n      } else if (baselength == 3) {\n        if (data.children.length < 10) {\n          scale = 1 - (\".\" + data.children.length) / .7;\n        } else {\n          scale = .5 - (\".\" + data.children.length);\n        }\n      } else if (baselength == 4) {\n        if (data.children.length < 10) {\n          scale = 1 - (\".\" + data.children.length) / .6;\n        } else {\n          scale = .5 - (\".\" + data.children.length);\n        }\n      }\n    }\n\n    return scale < .2 ? .2 : scale;\n  };\n\n  const opacity = isDragging ? 0 : 1;\n  drag(ref); //const component = components[data.id];\n\n  const renderColumn = (column, currentPath) => {\n    return /*#__PURE__*/React.createElement(Componentexp, {\n      key: column.id,\n      data: column,\n      components: components,\n      handleDrop: handleDrop,\n      path: currentPath,\n      onclickcomponent: onclickcomponent,\n      selectedFieldRecord: selectedFieldRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity,\n      \"transform\": \"scale(\" + getScale() + \")\"\n    },\n    className: `base draggable row`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, data.children ? data.children.map((column, index) => {\n    const currentPath = `${path}-${index}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: column.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DropArea, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop,\n      className: \"horizontalDrag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), renderColumn(column, currentPath));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: `${path}-${0}`,\n      childrenCount: 1\n    },\n    onDrop: handleDrop,\n    className: \"horizontalDrag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), renderColumn(data, `${path}-${0}`)), /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: data.children ? `${path}-${data.children.length}` : `${path}-${1}`,\n      childrenCount: data.children ? data.children.length : 1\n    },\n    onDrop: handleDrop,\n    className: \"horizontalDrag\",\n    isLast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Componentrow;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/Componentrow.jsx"],"names":["React","useRef","useDrag","Componentexp","COMPONENT","COMPONENTROW","DropArea","Componentrow","data","components","baselength","path","handleDrop","onclickcomponent","selectedFieldRecord","ref","isDragging","drag","type","item","id","children","collect","monitor","style","border","padding","cursor","getScale","scale","length","opacity","renderColumn","column","currentPath","map","index","childrenCount"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport Componentexp from \"./Componentexp\";\r\nimport { COMPONENT, COMPONENTROW } from \"./constants\";\r\nimport DropArea from \"./DropArea\";\r\nimport \"./styles.css\"\r\n\r\n\r\nconst Componentrow = ({ data, components, baselength, path, handleDrop, onclickcomponent, selectedFieldRecord }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    \r\n    type: COMPONENT,\r\n    item: {\r\n      type: COMPONENT,\r\n      id: data.id,\r\n      data: data,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n  const style = {\r\n    border: `${data.children ? \"1px dashed black\" : \"\"}`,\r\n    padding: \"0rem 1rem\",\r\n    // backgroundColor: \"white\",\r\n    cursor: \"move\"\r\n  };\r\n  const getScale = ()=>{\r\n    let scale = 1;\r\n    if(data.children && data.children.length){\r\n      if(baselength == 1){\r\n        if(data.children.length < 10){\r\n          scale = 1-((\".\"+data.children.length)/2)\r\n        }else{\r\n          scale = .5-((\".\"+data.children.length))\r\n        }\r\n      }else if(baselength == 2){\r\n        if(data.children.length < 10){\r\n          scale = 1-((\".\"+data.children.length)/1.2)\r\n        }else{\r\n          scale = .5-((\".\"+data.children.length))\r\n        }\r\n      } else if(baselength == 3){\r\n        if(data.children.length < 10){\r\n          scale = 1-((\".\"+data.children.length)/.7)\r\n        }else{\r\n          scale = .5-((\".\"+data.children.length))\r\n        }\r\n      }else if(baselength == 4){\r\n        if(data.children.length < 10){\r\n          scale = 1-((\".\"+data.children.length)/.6)\r\n        }else{\r\n          scale = .5-((\".\"+data.children.length))\r\n        }\r\n      }\r\n\r\n\r\n\r\n    }\r\n    return scale < .2 ? .2 : scale;\r\n  }\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  //const component = components[data.id];\r\n\r\n\r\n\r\n  const renderColumn = (column, currentPath) => {\r\n    return (\r\n      <Componentexp\r\n        key={column.id}\r\n        data={column}\r\n        components={components}\r\n        handleDrop={handleDrop}\r\n        path={currentPath}\r\n        onclickcomponent={onclickcomponent}\r\n        selectedFieldRecord={selectedFieldRecord}\r\n        />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} style={{ ...style, opacity , \"transform\": \"scale(\"+getScale()+\")\" }} className={`base draggable row`}>\r\n      <div className=\"columns d-flex justify-content-center\">\r\n        {data.children ?\r\n          data.children.map((column, index) => {\r\n            const currentPath = `${path}-${index}`;\r\n\r\n            return (\r\n              <React.Fragment key={column.id}>\r\n                <DropArea\r\n                  data={{\r\n                    path: currentPath,\r\n                    childrenCount: data.children.length,\r\n                  }}\r\n                  onDrop={handleDrop}\r\n                  className=\"horizontalDrag\"\r\n                />\r\n                {renderColumn(column, currentPath)}\r\n              </React.Fragment>\r\n            );\r\n          }) :\r\n          <React.Fragment key={data.id}>\r\n            <DropArea\r\n              data={{\r\n                path: `${path}-${0}`,\r\n                childrenCount: 1,\r\n              }}\r\n              onDrop={handleDrop}\r\n              className=\"horizontalDrag\"\r\n            />\r\n            {renderColumn(data, `${path}-${0}`)}\r\n          </React.Fragment>\r\n        }\r\n        <DropArea\r\n          data={{\r\n            path: data.children ? `${path}-${data.children.length}` : `${path}-${1}`,\r\n            childrenCount: data.children ? data.children.length : 1\r\n          }}\r\n          onDrop={handleDrop}\r\n          className=\"horizontalDrag\"\r\n          isLast\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Componentrow;\r\n"]},"metadata":{},"sourceType":"module"}