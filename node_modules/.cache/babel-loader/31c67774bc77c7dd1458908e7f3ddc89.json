{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\components\\\\type3component\\\\AddType3Component.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../form-textarea/form-textarea.component';\nimport FormInput from '../form-input/form-input.component';\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\nimport CustomSwitch from '../custom-switch/custom-switch.component'; // import { transactionStatus } from '../Enumeration'\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst AddType3Component = props => {\n  return props.extractedColumnList.map(item => {\n    if (item.child) {\n      let index = props.extractedColumnList.findIndex(x => x.dataField == item.childdatafield);\n\n      if (index != -1) {\n        props.extractedColumnList[index][item.childprops] = props.selectedRecord[item.dataField];\n      }\n    }\n\n    switch (item.ndesigncomponentcode) {\n      case 1:\n        {\n          //TextBox            \n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormInput, {\n            label: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            name: item.dataField,\n            type: item.formInputType ? item.formInputType : \"text\" // ALPD-3660 VISHAKH\n            ,\n            onChange: event => props.onInputOnChange(event, item),\n            placeholder: props.intl.formatMessage({\n              id: item.idsName\n            }),\n            value: props.selectedRecord[item.dataField] || \"\",\n            isMandatory: item.mandatory,\n            required: item.mandatory,\n            maxLength: item.fieldLength,\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }\n          }), item.noteNeed && /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: 'red',\n              position: 'relative',\n              top: '-25px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }\n          }, props.intl.formatMessage({\n            id: \"IDS_NOTE\"\n          }) + \":\" + props.intl.formatMessage({\n            id: item.noteText\n          }))));\n        }\n\n      case 2:\n        {\n          //Textarea           \n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormTextarea, {\n            label: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            name: item.dataField,\n            onChange: event => props.onInputOnChange(event, item),\n            placeholder: props.intl.formatMessage({\n              id: item.idsName\n            }),\n            value: props.selectedRecord[item.dataField] || \"\",\n            rows: \"2\",\n            isMandatory: item.mandatory,\n            required: item.mandatory,\n            maxLength: item.fieldLength,\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 3:\n        {\n          // props.extractedColumnList.map(item => {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n            name: item.dataField,\n            formLabel: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            placeholder: props.intl.formatMessage({\n              id: \"IDS_SELECTRECORD\"\n            }),\n            options: props.dataList[item.dataField] || [],\n            value: props.selectedRecord[item.dataField] ? props.selectedRecord[item.dataField] : \"\",\n            isMandatory: item.mandatory,\n            isMulti: false,\n            isClearable: item.mandatory ? false : true,\n            isSearchable: true // isDisabled={false}\n            ,\n            closeMenuOnSelect: true,\n            onChange: event => props.onComboChange(event, item.dataField, item),\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }\n          }))); // })\n          //Combobox--yet to include functionality & logic to handle this case in Type3Component.jsx\n        }\n\n      case 4:\n        {\n          //Date Picker\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DateTimePicker, {\n            name: item.dataField,\n            label: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            className: \"form-control\",\n            placeholderText: \"Select date..\",\n            selected: props.selectedRecord[item.dataField] || \"\",\n            dateFormat: item.showtime === true ? props.userInfo.ssitedatetime : props.userInfo.ssitedate,\n            showTimeInput: item.showtime ? true : false,\n            isClearable: false,\n            isMandatory: item.mandatory,\n            required: item.mandatory,\n            onChange: date => props.handleDateChange(item.dataField, date, item),\n            value: props.selectedRecord[item.dataField],\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 5:\n        {\n          //Numeric Input             \n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormNumericInput, {\n            name: item.dataField,\n            label: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            placeholder: props.intl.formatMessage({\n              id: item.idsName\n            }) //    value ={ props.selectedRecord[item.dataField] || \"\"}\n            ,\n            value: props.selectedRecord[item.dataField],\n            type: \"number\",\n            strict: true,\n            maxLength: item.fieldLength ? item.fieldLength : 10,\n            noStyle: true,\n            onChange: event => props.onNumericInputOnChange(event, item.dataField, item),\n            precision: item.precision ? item.precision : 0,\n            min: 0,\n            className: \"form-control\",\n            isMandatory: item.mandatory,\n            required: item.mandatory,\n            errors: \"Please provide a valid number.\",\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 6:\n        {\n          //Check box/switch           \n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(CustomSwitch, {\n            name: item.controlName,\n            type: \"switch\",\n            label: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            placeholder: props.intl.formatMessage({\n              id: item.idsName\n            }),\n            isMandatory: item.mandatory,\n            required: item.mandatory,\n            onChange: event => props.onInputOnChange(event, item),\n            defaultValue: props.selectedRecord[item.controlName] === 3 ? true : false,\n            checked: props.selectedRecord[item.controlName] === 3 ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 7:\n        {\n          //BackEndSearch        \n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-primary btn-padd-custom\",\n            disabled: false,\n            onClick: e => props.custombuttonclick(e, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faSearch,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }\n          }), \" \", props.intl.formatMessage({\n            id: item.idsName\n          }))));\n        }\n\n      case 8:\n        {\n          //multi select\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n            name: item.dataField,\n            formLabel: props.Login && props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ? props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({\n              id: item.idsName\n            }),\n            placeholder: props.intl.formatMessage({\n              id: \"IDS_SELECTRECORD\"\n            }),\n            options: props.dataList[item.dataField] || [],\n            value: props.selectedRecord[item.dataField] ? props.selectedRecord[item.dataField] : \"\",\n            isMandatory: item.mandatory,\n            isMulti: props.operation === \"create\" ? true : false,\n            isClearable: item.mandatory ? false : true,\n            isSearchable: true // isDisabled={false}\n            ,\n            closeMenuOnSelect: true,\n            onChange: event => props.onComboChange(event, item.dataField, item),\n            isDisabled: item.isDisabled !== \"\" ? item.isDisabled : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      default:\n        return \"\";\n    }\n  });\n};\n\nexport default injectIntl(AddType3Component);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/components/type3component/AddType3Component.js"],"names":["React","Row","Col","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","faSearch","FontAwesomeIcon","AddType3Component","props","extractedColumnList","map","item","child","index","findIndex","x","dataField","childdatafield","childprops","selectedRecord","ndesigncomponentcode","Login","genericLabelIDS","idsName","undefined","userInfo","slanguagetypecode","intl","formatMessage","id","formInputType","event","onInputOnChange","mandatory","fieldLength","isDisabled","noteNeed","fontSize","color","position","top","noteText","dataList","onComboChange","showtime","ssitedatetime","ssitedate","date","handleDateChange","onNumericInputOnChange","precision","controlName","e","custombuttonclick","operation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../form-textarea/form-textarea.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\n// import { transactionStatus } from '../Enumeration'\r\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst AddType3Component = (props) => {\r\n    \r\n \r\n    \r\n    return(      \r\n       props.extractedColumnList.map(item=>{\r\n        if(item.child){ \r\n            let index=props.extractedColumnList.findIndex(x=>x.dataField== item.childdatafield ) \r\n                if(index!=-1)\r\n                    { \r\n                        props.extractedColumnList[index][item.childprops]= props.selectedRecord[item.dataField] ;\r\n                    }  \r\n            }\r\n\r\n\r\n        switch (item.ndesigncomponentcode) {\r\n\r\n            case 1: {    \r\n                //TextBox            \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                name={item.dataField}\r\n                                type={item.formInputType ? item.formInputType : \"text\"} // ALPD-3660 VISHAKH\r\n                                onChange={(event)=>props.onInputOnChange(event, item)}\r\n                                placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                                value ={props.selectedRecord[item.dataField]  || \"\"}\r\n                                isMandatory={item.mandatory}\r\n                                required={item.mandatory}\r\n                                maxLength={item.fieldLength}\r\n                                isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false}\r\n                            />\r\n                            {item.noteNeed &&\r\n                                <div style={{ fontSize: '12px', color: 'red',position: 'relative', top: '-25px'}}>\r\n                                    {props.intl.formatMessage({id: \"IDS_NOTE\" })+\":\"+props.intl.formatMessage({ id: item.noteText })}\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 2: {     \r\n                //Textarea           \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                name={item.dataField}\r\n                                onChange={(event)=>props.onInputOnChange(event,item)}\r\n                                placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                                value ={props.selectedRecord[item.dataField] || \"\"}\r\n                                rows=\"2\"\r\n                                isMandatory={item.mandatory}\r\n                                required={item.mandatory}\r\n                                maxLength={item.fieldLength}\r\n                                isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false}\r\n                            />\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 3: {\r\n                // props.extractedColumnList.map(item => {\r\n                    return (\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    name={item.dataField}\r\n                                    formLabel={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                           \r\n                                    options={props.dataList[item.dataField] || []}\r\n                                    value = { props.selectedRecord[item.dataField] ? props.selectedRecord[item.dataField] : \"\" }\r\n                                    isMandatory={item.mandatory}\r\n                                    isMulti={false}\r\n                                    isClearable={item.mandatory ? false : true}\r\n                                    isSearchable={true}                                \r\n                                    // isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, item.dataField, item)}  \r\n                                    isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false}                             \r\n                                />  \r\n                               \r\n                            </Col>\r\n                        </Row>\r\n                    );\r\n                // })\r\n                //Combobox--yet to include functionality & logic to handle this case in Type3Component.jsx\r\n               \r\n            }\r\n            case 4: {\r\n                //Date Picker\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <DateTimePicker\r\n                                    name={item.dataField} \r\n                                    label={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={props.selectedRecord[item.dataField] || \"\"}\r\n                                    dateFormat={item.showtime===true?props.userInfo.ssitedatetime:props.userInfo.ssitedate}\r\n                                    showTimeInput={item.showtime?true:false}\r\n                                    isClearable={false}\r\n                                    isMandatory={item.mandatory}                       \r\n                                    required={item.mandatory}\r\n                                    onChange={date => props.handleDateChange(item.dataField, date, item)}\r\n                                    value={props.selectedRecord[item.dataField]}\r\n                                    isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false} \r\n                              />\r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 5: {   \r\n                //Numeric Input             \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                   name={item.dataField}\r\n                                   label={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                   placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                             //    value ={ props.selectedRecord[item.dataField] || \"\"}\r\n                                   value ={ props.selectedRecord[item.dataField]}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={item.fieldLength ? item.fieldLength : 10}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, item.dataField, item)}\r\n                                   precision={ item.precision ? item.precision : 0}\r\n                                   min={0}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={item.mandatory}                       \r\n                                   required={item.mandatory}\r\n                                   errors=\"Please provide a valid number.\"\r\n                                   isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false}\r\n                              />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 6: {     \r\n                //Check box/switch           \r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <CustomSwitch\r\n                                   name={item.controlName}\r\n                                   type=\"switch\"\r\n                                   label={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                   placeholder={props.intl.formatMessage({ id:item.idsName})}                            \r\n                                   isMandatory={item.mandatory}                       \r\n                                   required={item.mandatory}                                   \r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\r\n                                   checked={props.selectedRecord[item.controlName] === 3 ? true :false}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 7: {     \r\n                //BackEndSearch        \r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <button className=\"btn btn-primary btn-padd-custom\"\r\n                                disabled={false}                              \r\n                                onClick={(e) => props.custombuttonclick(e, item)}\r\n                            >\r\n                                <FontAwesomeIcon icon={faSearch}></FontAwesomeIcon> { }\r\n                                {props.intl.formatMessage({ id: item.idsName })}\r\n                            </button>\r\n                        </Col>\r\n                    </Row>)\r\n            }\r\n            case 8:{\r\n                //multi select\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={item.dataField}\r\n                                formLabel={props.Login&&props.Login.genericLabelIDS && props.Login.genericLabelIDS[item.idsName] !== undefined ?  props.Login.genericLabelIDS[item.idsName][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.intl.formatMessage({ id: item.idsName })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                           \r\n                                options={props.dataList[item.dataField] || []}\r\n                                value = { props.selectedRecord[item.dataField] ? props.selectedRecord[item.dataField] : \"\" }\r\n                                isMandatory={item.mandatory}\r\n                                isMulti={props.operation === \"create\" ? true : false}\r\n                                isClearable={item.mandatory ? false : true}\r\n                                isSearchable={true}\r\n                                // isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                onChange = {(event)=> props.onComboChange(event, item.dataField, item)}  \r\n                                isDisabled = {item.isDisabled !== \"\" ? item.isDisabled : false}                             \r\n                            />  \r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n\r\n            }\r\n\r\n            default :\r\n                return \"\";\r\n        }\r\n        \r\n        } )\r\n\r\n    )\r\n}\r\n\r\nexport default injectIntl(AddType3Component);"]},"metadata":{},"sourceType":"module"}