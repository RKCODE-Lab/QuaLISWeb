{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\reports\\\\reportsconfig\\\\AddReportMaster.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { transactionStatus, attachmentType, reportTypeEnum, reportCOAType } from '../../../components/Enumeration';\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\nimport DropZone from '../../../components/dropzone/dropzone.component';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport ReactSelectAddEdit from '../../../components/react-select-add-edit/react-select-add-edit-component';\n\nconst AddReportMaster = props => {\n  //console.log(\"propsiin reportmaster:\", props.selectedRecord)\n  let isReportTypeDisabled = false;\n\n  if (props.operation === \"update\") {\n    isReportTypeDisabled = true;\n  } else {\n    if (props.filterReportType && props.filterReportType.nreporttypecode !== 0) {\n      isReportTypeDisabled = true;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nreporttypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.reportTypeList || [],\n    value: props.selectedRecord[\"nreporttypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true //isDisabled={props.operation === \"update\"}\n    ,\n    isDisabled: isReportTypeDisabled,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nreporttypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }\n  }), props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsampletypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLETYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.sampleTypeList || [] //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\n    ,\n    value: props.selectedRecord[\"nsampletypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nsampletypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nregtypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REGTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.regTypeList || [] //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\n    ,\n    value: props.selectedRecord[\"nregtypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nregtypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nregsubtypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REGSUBTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.regSubTypeList || [],\n    value: props.selectedRecord[\"nregsubtypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nregsubtypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 57\n    }\n  }))) : \"\", props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"napproveconfversioncode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_APPROVECONFIGVERSION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.ApproveConfigList || [],\n    value: props.selectedRecord[\"napproveconfversioncode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"napproveconfversioncode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 49\n    }\n  })), props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsectioncode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_LAB\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.sectionList || [],\n    value: props.selectedRecord[\"nsectioncode\"] || \"\",\n    isMandatory: false,\n    isMulti: false,\n    isClearable: true,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nsectioncode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 65\n    }\n  })) : \"\") : \"\", props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.MIS && props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.SCREENWISE ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncoareporttypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTSUBTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.coaReportTypeList || [],\n    value: props.selectedRecord[\"ncoareporttypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"ncoareporttypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  })) : \"\", props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.COA && props.selectedRecord[\"ncoareporttypecode\"] && props.selectedRecord[\"ncoareporttypecode\"].value === reportCOAType.PROJECTWISE ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nreporttemplatecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTTEMPLATE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.reportTemplateList || [],\n    value: props.selectedRecord[\"nreporttemplatecode\"] || \"\",\n    isMandatory: false,\n    isMulti: false,\n    isClearable: true,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nreporttemplatecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 41\n    }\n  }) : \"\", props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SCREENWISE ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nformcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SCREENNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.controlScreen || [],\n    value: props.selectedRecord[\"nformcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nformcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 43\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncontrolcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CONTROLNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.controlButton || [],\n    value: props.selectedRecord[\"ncontrolcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"ncontrolcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 49\n    }\n  })) : \"\", props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.MIS ? /*#__PURE__*/React.createElement(ReactSelectAddEdit, {\n    name: \"nreportmodulecode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    className: \"color-select\",\n    classNamePrefix: \"react-select\",\n    optionId: \"nreportmodulecode\",\n    optionValue: \"sdisplayname\",\n    options: props.reportModuleList || [],\n    isMandatory: true,\n    getValue: value => props.onComboChange(value, \"nreportmodulecode\"),\n    value: props.selectedRecord[\"nreportmodulecode\"] ? props.selectedRecord[\"nreportmodulecode\"] : \"\" // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }) : \"\", props.selectedRecord[\"nreporttypecode\"] && (props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.BATCH || props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE) ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncertificatetypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CERTIFICATETYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.certificateTypeList || [],\n    value: props.selectedRecord[\"ncertificatetypecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"ncertificatetypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REPORTBATCHTYPE\"\n    }),\n    name: \"sbatchdisplayname\",\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REPORTBATCHTYPE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sbatchdisplayname\"] : \"\",\n    isMandatory: false,\n    required: false,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 57\n    }\n  }))) : \"\", /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REPORTNAME\"\n    }),\n    name: \"sreportname\",\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REPORTNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    readOnly: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdescription\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sdescription\"] || \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    isDisabled: props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ntransactionstatus\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    value: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }), props.operation === \"create\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"nisplsqlquery\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ISPLSQLQUERY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ISPLSQLQUERY\"\n    }),\n    value: props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }), Object.keys(props.selectedRecord).length > 0 && /*#__PURE__*/React.createElement(DropZone, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FILE\"\n    }),\n    maxFiles: 1,\n    accept: \".jrxml,.mrt\",\n    minSize: 0,\n    maxSize: 10,\n    fileNameLength: 150,\n    onDrop: event => props.onDropImage(event, \"sfilename\", 1),\n    multiple: false,\n    isMandatory: true,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.operation === \"update\" ? attachmentType.OTHERS : \"\",\n    fileName: \"sfilename\",\n    deleteAttachment: () => props.deleteFile(\"sfilename\"),\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 49\n    }\n  })) : \"\"));\n};\n\nexport default injectIntl(AddReportMaster);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/reportsconfig/AddReportMaster.js"],"names":["React","Row","Col","injectIntl","transactionStatus","attachmentType","reportTypeEnum","reportCOAType","CustomSwitch","DropZone","FormTextarea","FormInput","FormSelectSearch","ReactSelectAddEdit","AddReportMaster","props","isReportTypeDisabled","operation","filterReportType","nreporttypecode","intl","formatMessage","id","reportTypeList","selectedRecord","event","onComboChange","isneedregtype","YES","sampleTypeList","reportVersionStatus","APPROVED","regTypeList","regSubTypeList","isneedsection","ApproveConfigList","sectionList","value","MIS","SCREENWISE","coaReportTypeList","COA","PROJECTWISE","reportTemplateList","controlScreen","controlButton","reportModuleList","BATCH","SAMPLE","certificateTypeList","onInputOnChange","ACTIVE","Object","keys","length","onDropImage","OTHERS","deleteFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus, attachmentType, reportTypeEnum, reportCOAType } from '../../../components/Enumeration';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport ReactSelectAddEdit from '../../../components/react-select-add-edit/react-select-add-edit-component'\r\n\r\nconst AddReportMaster = (props) => {\r\n        //console.log(\"propsiin reportmaster:\", props.selectedRecord)\r\n        let isReportTypeDisabled = false;\r\n        if (props.operation === \"update\") {\r\n                isReportTypeDisabled = true;\r\n        }\r\n        else {\r\n                if (props.filterReportType && props.filterReportType.nreporttypecode !== 0) {\r\n                        isReportTypeDisabled = true;\r\n                }\r\n        }\r\n        return (\r\n                <Row>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        name={\"nreporttypecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.reportTypeList || []}\r\n                                        value={props.selectedRecord[\"nreporttypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}\r\n                                        //isDisabled={props.operation === \"update\"}\r\n                                        isDisabled={isReportTypeDisabled}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => props.onComboChange(event, \"nreporttypecode\")}\r\n                                />\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ?\r\n                                        <Row>\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nsampletypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.sampleTypeList || []}\r\n                                                                //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\r\n                                                                value={props.selectedRecord[\"nsampletypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nsampletypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nregtypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_REGTYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.regTypeList || []}\r\n                                                                //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\r\n                                                                value={props.selectedRecord[\"nregtypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nregtypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nregsubtypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_REGSUBTYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.regSubTypeList || []}\r\n                                                                value={props.selectedRecord[\"nregsubtypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nregsubtypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n\r\n                                        </Row>\r\n                                        : \"\"}\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ?\r\n                                        <Row>\r\n                                                 <Col md={props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES?6:12}>\r\n                                                <FormSelectSearch\r\n                                                        name={\"napproveconfversioncode\"}\r\n                                                        formLabel={props.intl.formatMessage({ id: \"IDS_APPROVECONFIGVERSION\" })}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={props.ApproveConfigList || []}\r\n                                                        value={props.selectedRecord[\"napproveconfversioncode\"] || \"\"}\r\n                                                        isMandatory={true}\r\n                                                        isMulti={false}\r\n                                                        isClearable={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => props.onComboChange(event, \"napproveconfversioncode\")}\r\n                                                />\r\n                                                </Col>\r\n\r\n                                                {props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES ?\r\n                                                        <Col md={6}>\r\n                                                                <FormSelectSearch\r\n                                                                        name={\"nsectioncode\"}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        options={props.sectionList || []}\r\n                                                                        value={props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={false}\r\n                                                                        isClearable={true}\r\n                                                                        isSearchable={true}\r\n                                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        onChange={(event) => props.onComboChange(event, \"nsectioncode\")}\r\n                                                                />\r\n\r\n                                                        </Col> : \"\"}\r\n\r\n                                        </Row> : \"\"}\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.MIS\r\n                                        && props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.SCREENWISE ? <>\r\n\r\n                                        <FormSelectSearch\r\n                                                name={\"ncoareporttypecode\"}\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_REPORTSUBTYPE\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={props.coaReportTypeList || []}\r\n                                                value={props.selectedRecord[\"ncoareporttypecode\"] || \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isClearable={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange={(event) => props.onComboChange(event, \"ncoareporttypecode\")}\r\n                                        />\r\n\r\n                                        {/* {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE?\r\n                                <FormSelectSearch\r\n                                        name={\"nreportdecisiontypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_DECISIONTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                 \r\n                                        options={ props.decisionTypeList || []}\r\n                                        value = { props.selectedRecord[\"nreportdecisiontypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nreportdecisiontypecode\")}                               \r\n                                /> \r\n                           :\"\"} */}\r\n                                </> : \"\"}\r\n\r\n                                { props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.COA \r\n                                        && props.selectedRecord[\"ncoareporttypecode\"] && props.selectedRecord[\"ncoareporttypecode\"].value === reportCOAType.PROJECTWISE ?\r\n                                        \r\n                                        <FormSelectSearch\r\n                                        name={\"nreporttemplatecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.reportTemplateList || []}\r\n                                        value={props.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                        isMandatory={false}\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        isSearchable={true}\r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => props.onComboChange(event, \"nreporttemplatecode\")}\r\n                                /> \r\n                                : \"\"\r\n                                }\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SCREENWISE ?\r\n                                        <><FormSelectSearch\r\n                                                name={\"nformcode\"}\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={props.controlScreen || []}\r\n                                                value={props.selectedRecord[\"nformcode\"] || \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isClearable={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange={(event) => props.onComboChange(event, \"nformcode\")}\r\n                                        />\r\n                                                <FormSelectSearch\r\n                                                        name={\"ncontrolcode\"}\r\n                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CONTROLNAME\" })}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={props.controlButton || []}\r\n                                                        value={props.selectedRecord[\"ncontrolcode\"] || \"\"}\r\n                                                        isMandatory={true}\r\n                                                        isMulti={false}\r\n                                                        isClearable={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => props.onComboChange(event, \"ncontrolcode\")}\r\n                                                />\r\n                                        </>\r\n                                        : \"\"}\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.MIS ?\r\n\r\n                                        <ReactSelectAddEdit\r\n                                                name=\"nreportmodulecode\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                                className=\"color-select\"\r\n                                                classNamePrefix=\"react-select\"\r\n                                                optionId=\"nreportmodulecode\"\r\n                                                optionValue=\"sdisplayname\"\r\n                                                options={props.reportModuleList || []}\r\n                                                isMandatory={true}\r\n                                                getValue={value => props.onComboChange(value, \"nreportmodulecode\")}\r\n                                                value={props.selectedRecord[\"nreportmodulecode\"] ? props.selectedRecord[\"nreportmodulecode\"] : \"\"}\r\n                                        // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                                        />\r\n                                        : \"\"}\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        (props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.BATCH\r\n                                                || props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE) ?\r\n                                        <Row>\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"ncertificatetypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_CERTIFICATETYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.certificateTypeList || []}\r\n                                                                value={props.selectedRecord[\"ncertificatetypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"ncertificatetypecode\")}\r\n                                                        />\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                        <FormInput\r\n                                                                label={props.intl.formatMessage({ id: \"IDS_REPORTBATCHTYPE\" })}\r\n                                                                name={\"sbatchdisplayname\"}\r\n                                                                type=\"text\"\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_REPORTBATCHTYPE\" })}\r\n                                                                value={props.selectedRecord ? props.selectedRecord[\"sbatchdisplayname\"] : \"\"}\r\n                                                                isMandatory={false}\r\n                                                                required={false}\r\n                                                                readOnly={true}\r\n                                                                onChange={(event) => props.onInputOnChange(event)}\r\n                                                        />\r\n                                                </Col>\r\n                                        </Row>\r\n\r\n                                        : \"\"}\r\n\r\n                                <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_REPORTNAME\" })}\r\n                                        name={\"sreportname\"}\r\n                                        type=\"text\"\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_REPORTNAME\" })}\r\n                                        value={props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        readOnly={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n\r\n                                <FormTextarea\r\n                                        name={\"sdescription\"}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        value={props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                        rows=\"2\"\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        maxLength={255}\r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n\r\n                                <CustomSwitch\r\n                                        name={\"ntransactionstatus\"}\r\n                                        type=\"switch\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                        value={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n                                {props.operation === \"create\" ? <>\r\n\r\n                                        <CustomSwitch\r\n                                                name={\"nisplsqlquery\"}\r\n                                                type=\"switch\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_ISPLSQLQUERY\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_ISPLSQLQUERY\" })}\r\n                                                value={props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false}\r\n                                                isMandatory={false}\r\n                                                required={false}\r\n                                                checked={props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false}\r\n                                                onChange={(event) => props.onInputOnChange(event)}\r\n                                        />\r\n\r\n                                        {Object.keys(props.selectedRecord).length > 0 &&\r\n\r\n                                                <DropZone\r\n                                                        label={props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                                                        maxFiles={1}\r\n                                                        accept=\".jrxml,.mrt\"\r\n                                                        minSize={0}\r\n                                                        maxSize={10}\r\n                                                        fileNameLength={150}\r\n                                                        onDrop={(event) => props.onDropImage(event, \"sfilename\", 1)}\r\n                                                        multiple={false}\r\n                                                        isMandatory={true}\r\n                                                        editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                                                        attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                                                        fileName=\"sfilename\"\r\n                                                        deleteAttachment={() => props.deleteFile(\"sfilename\")}\r\n                                                        actionType={props.actionType}\r\n                                                />\r\n\r\n                                        }\r\n                                </>\r\n                                        : \"\"}\r\n                        </Col>\r\n                </Row>\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddReportMaster);"]},"metadata":{},"sourceType":"module"}