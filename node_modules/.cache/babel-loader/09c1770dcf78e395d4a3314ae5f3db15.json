{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddInstrumentValidation.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst AddInstrumentValidation = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    name: \"ninstrumentcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    value: props.instrumentid,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dvalidationdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_VALIDATIONDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dvalidationdate\"] ? props.selectedRecord[\"dvalidationdate\"] : new Date(),\n    dateFormat: \"MM/dd/yyyy\",\n    isClearable: false,\n    isMandatory: false,\n    required: true,\n    isMandatory: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dvalidationdate\", date),\n    value: props.selectedRecord[\"dvalidationdate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzvalidationdate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzvalidationdate\"],\n    defaultValue: props.selectedRecord[\"ntzvalidationdate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzvalidationdate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntranscode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.ValidationStatus,\n    value: props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isMandatory: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntranscode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    name: \"sremarks\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddInstrumentValidation);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentValidation.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","FormTextarea","AddInstrumentValidation","props","intl","formatMessage","id","event","onInputOnChange","instrumentid","selectedRecord","Date","currentTime","date","handleDateChange","TimeZoneList","onComboChange","ValidationStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentValidation = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                name={\"ninstrumentcode\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                value={props.instrumentid}                   \r\n                isDisabled={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dvalidationdate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_VALIDATIONDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dvalidationdate\"]?props.selectedRecord[\"dvalidationdate\"]:new Date()}\r\n                             dateFormat={\"MM/dd/yyyy\"}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dvalidationdate\", date)}\r\n                             value={props.selectedRecord[\"dvalidationdate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzvalidationdate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzvalidationdate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzvalidationdate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzvalidationdate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n                <Col md={12}>\r\n                          <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.ValidationStatus}\r\n                         \r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                               defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMandatory={false}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                               onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    name={\"sremarks\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n\r\n    </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentValidation);"]},"metadata":{},"sourceType":"module"}