{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../../pages/audittrail/Esign';import AddSafetyMarker from'../edqmmaster/AddSafetyMarker';import DataGrid from'../../components/data-grid/data-grid.component';import{ListWrapper}from'../../components/client-group.styles';import{callService,crudMaster,fetchRecordSafetyMarker,getTestMasterDataService,updateStore,validateEsignCredential}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap}from'../../components/CommonScript';import{transactionStatus}from'../../components/Enumeration';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SafetyMarker=/*#__PURE__*/function(_React$Component){_inherits(SafetyMarker,_React$Component);var _super=_createSuper(SafetyMarker);function SafetyMarker(props){var _this;_classCallCheck(this,SafetyMarker);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.handleChange=function(value,valueParam,isTestCategory){if(value!==null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[valueParam]=value;if(isTestCategory===\"TestCategory\"){_this.props.getTestMasterDataService(value.value,selectedRecord,_this.props.Login.userInfo);// selectedRecord.ntestcode = \"\";\nselectedRecord[\"ntestcode\"]=undefined;// {\n//     label: \"\",\n//     value: -1\n// }\n_this.setState({selectedRecord:selectedRecord});}else{_this.setState({selectedRecord:selectedRecord});}}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.deleteRecord=function(deleteParam){var _inputData;if(deleteParam.selectedRecord.expanded!==undefined){delete deleteParam.selectedRecord.expanded;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}//this.props.crudMaster(inputParam);\n};_this.reloadData=function(){var inputParam={inputData:{//\"nsitecode\": this.props.Login.userInfo.nmastersitecode \nuserinfo:_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){//add / edit  \nvar dataState=undefined;var operation=\"\";var inputData=[];var selectedId=null;// let fieldList = [\"nsafetymarkercode\", \"ntestcategorycode\", \"ntestcode\", \"ntransactionstatus\",\n//     \"ssafetymarkername\", \"ssafetymarkerdesc\"];\ninputData[\"userinfo\"]=_this.props.Login.userInfo;if(_this.props.Login.operation===\"update\"){// edit    \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=JSON.parse(JSON.stringify(_this.state.selectedRecord));// fieldList.map(item => {\n//     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n// })\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"nsafetymarkercode\"]=_this.state.selectedRecord[\"nsafetymarkercode\"]?_this.state.selectedRecord[\"nsafetymarkercode\"]:-1;//inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcategorycode\"] = this.state.selectedRecord[\"ntestcategorycode\"] ? this.state.selectedRecord[\"ntestcategorycode\"].value : -1;\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcode\"]=_this.state.selectedRecord[\"ntestcode\"]?_this.state.selectedRecord[\"ntestcode\"].value:-1;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntransactionstatus\"]=_this.state.selectedRecord[\"ntransactionstatus\"]?_this.state.selectedRecord[\"ntransactionstatus\"]:transactionStatus.NO;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkername\"]=_this.state.selectedRecord[\"ssafetymarkername\"]?_this.state.selectedRecord[\"ssafetymarkername\"]:\"\";inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkerdesc\"]=_this.state.selectedRecord[\"ssafetymarkerdesc\"]?_this.state.selectedRecord[\"ssafetymarkerdesc\"]:\"\";operation=\"update\";dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;}else{//add             \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};// fieldList.map(item => {\n//     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\n// })\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"nsafetymarkercode\"]=_this.state.selectedRecord[\"nsafetymarkercode\"]?_this.state.selectedRecord[\"nsafetymarkercode\"]:-1;//inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcategorycode\"] = this.state.selectedRecord[\"ntestcategorycode\"] ? this.state.selectedRecord[\"ntestcategorycode\"].value : -1;\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcode\"]=_this.state.selectedRecord[\"ntestcode\"]?_this.state.selectedRecord[\"ntestcode\"].value:-1;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntransactionstatus\"]=_this.state.selectedRecord[\"ntransactionstatus\"]?_this.state.selectedRecord[\"ntransactionstatus\"]:transactionStatus.NO;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkername\"]=_this.state.selectedRecord[\"ssafetymarkername\"]?_this.state.selectedRecord[\"ssafetymarkername\"]:\"\";inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkerdesc\"]=_this.state.selectedRecord[\"ssafetymarkerdesc\"]?_this.state.selectedRecord[\"ssafetymarkerdesc\"]:\"\";operation=\"create\";}inputData[\"edqmsafetymarker\"][\"ntestcategorycode\"]=_this.state.selectedRecord[\"ntestcategorycode\"]?_this.state.selectedRecord[\"ntestcategorycode\"].value?_this.state.selectedRecord[\"ntestcategorycode\"].value:_this.state.selectedRecord[\"ntestcategorycode\"]:-1;//inputData[\"edqmsafetymarker\"][\"ntestcode\"] =  this.props.Login[\"ntestcode\"] ?this.state.selectedRecord[\"ntestcode\"].value  ? \nvar inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}//this.props.crudMaster(inputParam);\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={// addScreen: false, \ndata:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,testCategory:[],testMaster:[],ntestcode:[],isOpen:false,controlMap:new Map(),userRoleControlRights:[]};return _this;}_createClass(SafetyMarker,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;primaryKeyField=\"nsafetymarkercode\";var addParam={screenName:this.props.Login.screenName,primaryKeyField:primaryKeyField,undefined:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,addId:addId,data:this.state.data};// this.extractedColumnList = [\"nsafetymarkercode\", \"ntestcategorycode\", \"ntestcode\", \"ntransactionstatus\", \"stestcategoryname\",\n//     \"ssafetymarkername\", \"ssafetymarkerdesc\", \"stestname\", \"suploadtoedqm\"];\nthis.mandatoryColumnList=[{\"idsName\":\"IDS_SAFETYMARKERNAME\",\"dataField\":\"ssafetymarkername\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"ntestcategorycode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];this.extractedColumnList=[{\"idsName\":\"IDS_SAFETYMARKERNAME\",\"dataField\":\"ssafetymarkername\",\"width\":\"200px\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\":\"300px\"},{\"idsName\":\"IDS_UPLOADTOEDQM\",\"dataField\":\"suploadtoedqm\",\"width\":\"200px\",\"isIdsField\":true,\"controlName\":\"ntransactionstatus\"}];this.detailedFieldList=[{\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"stestcategoryname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"ssafetymarkerdesc\",\"width\":\"400px\"}];var editParam={screenName:this.props.Login.screenName,primaryKeyField:\"nsafetymarkercode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,data:this.state.data};var deleteParam={operation:\"delete\"};// const AddParam = {screenName:this.props.Login.inputParam && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"create\",  primaryKeyField, \n//inputParam:this.props.Login.inputParam,   userInfo:this.props.Login.userInfo, data:this.state.data, ncontrolCode:addId};\n// const editParam = {screenName:this.props.Login.inputParam && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"update\",  primaryKeyField, \n// inputParam:this.props.Login.inputParam,   userInfo:this.props.Login.userInfo, data:this.state.data, ncontrolCode:editId};\n// const deleteParam ={operation:\"delete\"};\nvar mandatoryFields=[];this.mandatoryColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,detailedFieldList:this.detailedFieldList,expandField:\"expanded\",userInfo:this.props.Login.userInfo,fetchRecord:this.props.fetchRecordSafetyMarker,editParam:editParam,deleteParam:deleteParam,deleteRecord:this.deleteRecord,reloadData:this.reloadData,addRecord:function addRecord(){return _this2.props.fetchRecordSafetyMarker(addParam);}// isComponent={true}\n,gridHeight:\"600px\",scrollable:\"scrollable\",isActionRequired:true,isToolBarRequired:true,selectedId:this.props.Login.selectedId// pageable={{ buttonCount: 4, pageSizes: true }}\n,pageable:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation//formatMessage={this.props.intl.formatMessage}\n,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddSafetyMarker,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,handleChange:this.handleChange// formatMessage={this.props.intl.formatMessage}\n,testCategory:this.props.Login.testCategory||[],testMaster:this.props.Login.testMaster||[],ntestcode:this.props.Login.ntestcode||[],ntestcategorycode:this.props.Login.ntestcategorycode||[],extractedColumnList:this.extractedColumnList})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,isOpen:false,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}// fetchRecord = (primaryKeyName, primaryKeyValue, operation) => {\n//     //  this.props.Login.showScreen = true;\n//     const testCategory = rsapi.post(\"testcategory/getTestCategory\", { \"userinfo\": this.props.Login.userInfo });\n//     let urlArray = [];\n//     let nTestCategoryCode = 0;\n//     if (operation === \"update\") {\n//         this.state.data.map(item => {\n//             if (item.nsafetymarkercode === parseInt(primaryKeyValue)) {\n//                 return nTestCategoryCode = item.ntestcategorycode;\n//             }\n//             return nTestCategoryCode;\n//         })\n//         const safetyMarker = rsapi.post(this.props.Login.inputParam.classUrl + \"/getActiveSafetyMarkerById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo });\n//         const testMasterData = rsapi.post(\"testmaster/getTestMasterBasedOnTestCategory\", { \"userinfo\": this.props.Login.userInfo, \"ntestcategorycode\": parseInt(nTestCategoryCode) });\n//         urlArray = [testCategory, testMasterData, safetyMarker];\n//     }\n//     else {\n//         urlArray = [testCategory];\n//     }\n//     Axios.all(urlArray)\n//         .then(Axios.spread((...response) => {\n//             // console.log(\"Edit : \", response[2].data);\n//             let ntestcategorycode = [];\n//             let ntestcode = [];\n//             if (operation === \"update\") {\n//                 ntestcategorycode.push({\n//                     label: response[2].data[\"stestcategoryname\"],\n//                     value: response[2].data[\"ntestcategorycode\"]\n//                 });\n//                 ntestcode.push({\n//                     label: response[2].data[\"stestname\"],\n//                     value: response[2].data[\"ntestcode\"]\n//                 });\n//             }\n//             // console.log(\" Combo data: \", this.state.ntestcode[0]);\n//             this.setState({\n//                 testCategory: response[0].data, testMaster: operation === \"update\" ? response[1].data : [],\n//                 ntestcategorycode, ntestcode: ntestcode,\n//                 isOpen: true, selectedRecord: operation === \"update\" ? response[2].data : undefined, operation: operation\n//             });\n//         }))\n//         .catch(error => {\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             }\n//             else {\n//                 toast.warn(error.response.data);\n//             }\n//         })\n// }\n}],[{key:\"getDerivedStateFromProps\",value://    getTestMasterDataService(nTestCategoryCode, selectedRecord) {\n//         rsapi.post(\"testmaster/getTestMasterBasedOnTestCategory\", { \"userinfo\": this.props.Login.userInfo, \"ntestcategorycode\": parseInt(nTestCategoryCode) })\n//             .then(response => {\n//                 this.setState({\n//                     testMaster: response.data, selectedRecord\n//                 });\n//             }).catch(error => {\n//                 console.log('error: ', error);\n//             })\n//     }\nfunction getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;//{ addScreen: props.Login.showScreen }\n}}]);return SafetyMarker;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,fetchRecordSafetyMarker:fetchRecordSafetyMarker,getTestMasterDataService:getTestMasterDataService,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(SafetyMarker));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/edqmmaster/SafetyMarker.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","SlideOutModal","Esign","AddSafetyMarker","DataGrid","ListWrapper","callService","crudMaster","fetchRecordSafetyMarker","getTestMasterDataService","updateStore","validateEsignCredential","DEFAULT_RETURN","showEsign","getControlMap","transactionStatus","mapStateToProps","state","Login","SafetyMarker","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","selectedId","handleChange","value","valueParam","isTestCategory","userInfo","undefined","onInputOnChange","target","type","name","checked","YES","NO","deleteRecord","deleteParam","expanded","inputParam","classUrl","methodUrl","displayName","inputData","toLowerCase","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","intl","formatMessage","id","reloadData","userinfo","onSaveClick","saveType","formRef","JSON","parse","stringify","nmastersitecode","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","testCategory","testMaster","ntestcode","isOpen","controlMap","Map","primaryKeyField","addId","has","concat","get","ncontrolcode","editId","addParam","mandatoryColumnList","detailedFieldList","editParam","mandatoryFields","forEach","item","mandatory","push","ntestcategorycode","previousProps","Object","values","map","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport AddSafetyMarker from '../edqmmaster/AddSafetyMarker';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ListWrapper } from '../../components/client-group.styles'\r\nimport { callService, crudMaster, fetchRecordSafetyMarker, getTestMasterDataService, updateStore, validateEsignCredential } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SafetyMarker extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            // addScreen: false, \r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            testCategory: [], testMaster: [], ntestcode: [],\r\n            isOpen: false, controlMap: new Map(), userRoleControlRights: []\r\n        }\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId:null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    //    getTestMasterDataService(nTestCategoryCode, selectedRecord) {\r\n\r\n    //         rsapi.post(\"testmaster/getTestMasterBasedOnTestCategory\", { \"userinfo\": this.props.Login.userInfo, \"ntestcategorycode\": parseInt(nTestCategoryCode) })\r\n    //             .then(response => {\r\n\r\n    //                 this.setState({\r\n    //                     testMaster: response.data, selectedRecord\r\n    //                 });\r\n\r\n    //             }).catch(error => {\r\n    //                 console.log('error: ', error);\r\n    //             })\r\n\r\n    //     }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;//{ addScreen: props.Login.showScreen }\r\n    }\r\n\r\n    handleChange = (value, valueParam, isTestCategory) => {\r\n\r\n        if (value !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n\r\n            selectedRecord[valueParam] = value;\r\n\r\n            if (isTestCategory === \"TestCategory\") {\r\n                this.props.getTestMasterDataService(value.value, selectedRecord, this.props.Login.userInfo);\r\n                // selectedRecord.ntestcode = \"\";\r\n                selectedRecord[\"ntestcode\"] = undefined;\r\n                // {\r\n                //     label: \"\",\r\n                //     value: -1\r\n                // }\r\n                this.setState({ selectedRecord });\r\n            }\r\n            else {\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let primaryKeyField = \"\";\r\n\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n        primaryKeyField = \"nsafetymarkercode\";\r\n        const addParam = {\r\n            screenName: this.props.Login.screenName,\r\n            primaryKeyField, undefined, operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, addId, data: this.state.data\r\n        }\r\n\r\n        // this.extractedColumnList = [\"nsafetymarkercode\", \"ntestcategorycode\", \"ntestcode\", \"ntransactionstatus\", \"stestcategoryname\",\r\n        //     \"ssafetymarkername\", \"ssafetymarkerdesc\", \"stestname\", \"suploadtoedqm\"];\r\n        this.mandatoryColumnList = [\r\n            { \"idsName\": \"IDS_SAFETYMARKERNAME\", \"dataField\": \"ssafetymarkername\", \"mandatory\": true  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},           \r\n            { \"idsName\": \"IDS_TESTCATEGORY\", \"dataField\": \"ntestcategorycode\",\"mandatory\": true  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestcode\", \"mandatory\": true  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_SAFETYMARKERNAME\", \"dataField\": \"ssafetymarkername\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_UPLOADTOEDQM\", \"dataField\": \"suploadtoedqm\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"ntransactionstatus\" }\r\n        ];\r\n        this.detailedFieldList = [\r\n             { \"idsName\": \"IDS_TESTCATEGORY\", \"dataField\": \"stestcategoryname\", \"width\": \"200px\" },\r\n             { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"ssafetymarkerdesc\", \"width\": \"400px\" },\r\n           \r\n        ];\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"nsafetymarkercode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId, data: this.state.data\r\n        };\r\n        const deleteParam = { operation: \"delete\" };\r\n        // const AddParam = {screenName:this.props.Login.inputParam && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"create\",  primaryKeyField, \r\n        //inputParam:this.props.Login.inputParam,   userInfo:this.props.Login.userInfo, data:this.state.data, ncontrolCode:addId};\r\n\r\n\r\n        // const editParam = {screenName:this.props.Login.inputParam && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"update\",  primaryKeyField, \r\n        // inputParam:this.props.Login.inputParam,   userInfo:this.props.Login.userInfo, data:this.state.data, ncontrolCode:editId};\r\n\r\n        // const deleteParam ={operation:\"delete\"};\r\n        const mandatoryFields=[];\r\n        this.mandatoryColumnList.forEach(item=>item.mandatory === true ? \r\n            mandatoryFields.push(item) :\"\"\r\n        );  \r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                          \r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    detailedFieldList={this.detailedFieldList}\r\n                                    expandField=\"expanded\"\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.fetchRecordSafetyMarker}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    deleteRecord={this.deleteRecord}                                   \r\n                                    reloadData={this.reloadData}\r\n                                    addRecord = {() => this.props.fetchRecordSafetyMarker(addParam)}\r\n                                    // isComponent={true}\r\n                                    gridHeight = {\"600px\"}\r\n                                    scrollable = {\"scrollable\"}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                   // pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                    pageable={true}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                <SlideOutModal show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={mandatoryFields}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            //formatMessage={this.props.intl.formatMessage}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        :\r\n                        <AddSafetyMarker\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            handleChange={this.handleChange}\r\n                           // formatMessage={this.props.intl.formatMessage}\r\n\r\n                            testCategory={this.props.Login.testCategory||[]}\r\n                            testMaster={this.props.Login.testMaster||[]}\r\n\r\n                            ntestcode={this.props.Login.ntestcode || []}\r\n                            ntestcategorycode={this.props.Login.ntestcategorycode || []}\r\n\r\n                            extractedColumnList={this.extractedColumnList}\r\n                        />\r\n                    }\r\n                />\r\n    }\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState }=this.state;\r\n                if(this.props.Login.dataState===undefined){\r\n                    dataState={skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                }   \r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    // fetchRecord = (primaryKeyName, primaryKeyValue, operation) => {\r\n    //     //  this.props.Login.showScreen = true;\r\n\r\n    //     const testCategory = rsapi.post(\"testcategory/getTestCategory\", { \"userinfo\": this.props.Login.userInfo });\r\n\r\n    //     let urlArray = [];\r\n    //     let nTestCategoryCode = 0;\r\n    //     if (operation === \"update\") {\r\n\r\n    //         this.state.data.map(item => {\r\n    //             if (item.nsafetymarkercode === parseInt(primaryKeyValue)) {\r\n    //                 return nTestCategoryCode = item.ntestcategorycode;\r\n    //             }\r\n    //             return nTestCategoryCode;\r\n    //         })\r\n    //         const safetyMarker = rsapi.post(this.props.Login.inputParam.classUrl + \"/getActiveSafetyMarkerById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo });\r\n    //         const testMasterData = rsapi.post(\"testmaster/getTestMasterBasedOnTestCategory\", { \"userinfo\": this.props.Login.userInfo, \"ntestcategorycode\": parseInt(nTestCategoryCode) });\r\n\r\n    //         urlArray = [testCategory, testMasterData, safetyMarker];\r\n    //     }\r\n    //     else {\r\n    //         urlArray = [testCategory];\r\n    //     }\r\n\r\n    //     Axios.all(urlArray)\r\n    //         .then(Axios.spread((...response) => {\r\n\r\n    //             // console.log(\"Edit : \", response[2].data);\r\n    //             let ntestcategorycode = [];\r\n    //             let ntestcode = [];\r\n\r\n    //             if (operation === \"update\") {\r\n    //                 ntestcategorycode.push({\r\n    //                     label: response[2].data[\"stestcategoryname\"],\r\n    //                     value: response[2].data[\"ntestcategorycode\"]\r\n    //                 });\r\n\r\n    //                 ntestcode.push({\r\n    //                     label: response[2].data[\"stestname\"],\r\n    //                     value: response[2].data[\"ntestcode\"]\r\n    //                 });\r\n    //             }\r\n    //             // console.log(\" Combo data: \", this.state.ntestcode[0]);\r\n    //             this.setState({\r\n    //                 testCategory: response[0].data, testMaster: operation === \"update\" ? response[1].data : [],\r\n    //                 ntestcategorycode, ntestcode: ntestcode,\r\n    //                 isOpen: true, selectedRecord: operation === \"update\" ? response[2].data : undefined, operation: operation\r\n\r\n    //             });\r\n    //         }))\r\n\r\n    //         .catch(error => {\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             }\r\n    //             else {\r\n    //                 toast.warn(error.response.data);\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        if(deleteParam.selectedRecord.expanded !== undefined)           \r\n        {\r\n           delete deleteParam.selectedRecord.expanded;\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n        //this.props.crudMaster(inputParam);\r\n    }  \r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { //\"nsitecode\": this.props.Login.userInfo.nmastersitecode \r\n            userinfo:this.props.Login.userInfo\r\n        },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit  \r\n        let dataState = undefined;\r\n        let operation = \"\";\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        // let fieldList = [\"nsafetymarkercode\", \"ntestcategorycode\", \"ntestcode\", \"ntransactionstatus\",\r\n        //     \"ssafetymarkername\", \"ssafetymarkerdesc\"];\r\n\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit    \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord)); \r\n            // fieldList.map(item => {\r\n            //     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            // })\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"nsafetymarkercode\"] = this.state.selectedRecord[\"nsafetymarkercode\"] ? this.state.selectedRecord[\"nsafetymarkercode\"] : -1;\r\n            //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcategorycode\"] = this.state.selectedRecord[\"ntestcategorycode\"] ? this.state.selectedRecord[\"ntestcategorycode\"].value : -1;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcode\"] = this.state.selectedRecord[\"ntestcode\"] ? this.state.selectedRecord[\"ntestcode\"].value : -1;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.NO;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkername\"] = this.state.selectedRecord[\"ssafetymarkername\"] ? this.state.selectedRecord[\"ssafetymarkername\"] : \"\";\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkerdesc\"] = this.state.selectedRecord[\"ssafetymarkerdesc\"] ? this.state.selectedRecord[\"ssafetymarkerdesc\"] : \"\";\r\n\r\n\r\n            operation = \"update\";\r\n            dataState = this.state.dataState;\r\n            selectedId = this.props.Login.selectedId; \r\n        }\r\n        else {\r\n            //add             \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            // fieldList.map(item => {\r\n            //     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\r\n            // })\r\n\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"nsafetymarkercode\"] = this.state.selectedRecord[\"nsafetymarkercode\"] ? this.state.selectedRecord[\"nsafetymarkercode\"] : -1;\r\n            //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcategorycode\"] = this.state.selectedRecord[\"ntestcategorycode\"] ? this.state.selectedRecord[\"ntestcategorycode\"].value : -1;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntestcode\"] = this.state.selectedRecord[\"ntestcode\"] ? this.state.selectedRecord[\"ntestcode\"].value : -1;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.NO;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkername\"] = this.state.selectedRecord[\"ssafetymarkername\"] ? this.state.selectedRecord[\"ssafetymarkername\"] : \"\";\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"ssafetymarkerdesc\"] = this.state.selectedRecord[\"ssafetymarkerdesc\"] ? this.state.selectedRecord[\"ssafetymarkerdesc\"] : \"\";\r\n\r\n\r\n         \r\n            operation = \"create\";\r\n        }\r\n        inputData[\"edqmsafetymarker\"][\"ntestcategorycode\"] = this.state.selectedRecord[\"ntestcategorycode\"]?this.state.selectedRecord[\"ntestcategorycode\"].value ? this.state.selectedRecord[\"ntestcategorycode\"].value:this.state.selectedRecord[\"ntestcategorycode\"] : -1;\r\n        //inputData[\"edqmsafetymarker\"][\"ntestcode\"] =  this.props.Login[\"ntestcode\"] ?this.state.selectedRecord[\"ntestcode\"].value  ? \r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef, dataState, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n        //this.props.crudMaster(inputParam);\r\n\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, fetchRecordSafetyMarker, getTestMasterDataService, updateStore, validateEsignCredential })(injectIntl(SafetyMarker));"]},"metadata":{},"sourceType":"module"}