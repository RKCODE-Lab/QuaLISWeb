{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,getMethodComboService,updateStore,validateEsignCredential}from'../../actions';import DataGrid from'../../components/data-grid/data-grid.component';import Esign from'../../pages/audittrail/Esign';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import AddMethod from'./AddMethod';import{showEsign,getControlMap}from'../../components/CommonScript';import{transactionStatus}from'../../components/Enumeration';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Method=/*#__PURE__*/function(_React$Component){_inherits(Method,_React$Component);var _super=_createSuper(Method);function Method(props){var _this;_classCallCheck(this,Method);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;;_this.setState({selectedRecord:selectedRecord});};_this.deleteRecord=function(deleteParam){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){//add / edit            \nvar inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\ndataState=_this.state.dataState;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=JSON.parse(JSON.stringify(_this.state.selectedRecord));selectedId=_this.props.Login.selectedRecord.nmethodcode;}else{//add               \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};}inputData[\"method\"][\"ndefaultstatus\"]=_this.state.selectedRecord[\"ndefaultstatus\"]?_this.state.selectedRecord[\"ndefaultstatus\"]:transactionStatus.NO;inputData[\"method\"][\"nmethodcatcode\"]=_this.state.selectedRecord[\"nmethodcatcode\"]?_this.state.selectedRecord[\"nmethodcatcode\"].value:\"\";inputData[\"method\"][\"smethodname\"]=_this.state.selectedRecord[\"smethodname\"]?_this.state.selectedRecord[\"smethodname\"]:\"\";inputData[\"method\"][\"sdescription\"]=_this.state.selectedRecord[\"sdescription\"]?_this.state.selectedRecord[\"sdescription\"]:\"\";var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,selectedId:selectedId,dataState:dataState,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map()};_this.extractedColumnList=[{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"smethodcatname\",\"width\":\"200px\"},{\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},{\"idsName\":\"IDS_DISPLAYSTATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"200px\"}];return _this;}_createClass(Method,[{key:\"render\",value:function render(){var _this2=this;var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var addParam={screenName:\"Method\",primaryeyField:\"nmethodcode\",primaryKeyValue:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:addId};var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),operation:\"update\",primaryKeyField:\"nmethodcode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nmethodcode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.getMethodComboService,editParam:editParam,deleteRecord:this.deleteRecord,deleteParam:deleteParam,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,pageable:true,scrollable:'scrollable',gridHeight:'600px',isActionRequired:true,isToolBarRequired:true,selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.getMethodComboService(addParam);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:[{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"nmethodcatcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddMethod,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,methodCategoryList:this.props.Login.methodCategoryList||[],operation:this.props.Login.operation,inputParam:this.props.Login.inputParam})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return Method;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getMethodComboService:getMethodComboService,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(Method));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/Method.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","getMethodComboService","updateStore","validateEsignCredential","DataGrid","Esign","DEFAULT_RETURN","SlideOutModal","AddMethod","showEsign","getControlMap","transactionStatus","mapStateToProps","state","Login","Method","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","selectedId","onInputOnChange","target","type","name","checked","YES","NO","value","onComboChange","comboData","fieldName","deleteRecord","deleteParam","inputParam","classUrl","methodUrl","displayName","inputData","toLowerCase","userInfo","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","intl","formatMessage","id","reloadData","onSaveClick","saveType","formRef","undefined","JSON","parse","stringify","nmethodcode","nmastersitecode","esignNeeded","validateEsign","sreason","password","createRef","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","extractedColumnList","addId","has","concat","get","ncontrolcode","editId","addParam","primaryeyField","primaryKeyValue","editParam","primaryKeyField","methodCategoryList","previousProps","Object","values","map","item","push","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ListWrapper} from '../../components/client-group.styles';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster,getMethodComboService,updateStore, validateEsignCredential, } from '../../actions';\r\n\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddMethod from './AddMethod';\r\n\r\nimport {showEsign, getControlMap} from '../../components/CommonScript';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Method extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);        \r\n        this.formRef = React.createRef();\r\n     \r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {        \r\n            data:[], masterStatus:\"\", error:\"\", selectedRecord:{},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights:[],\r\n            controlMap :new Map()\r\n        };\r\n\r\n        this.extractedColumnList =[{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"smethodcatname\",\"width\":\"200px\"},\r\n                                    {\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\",\"width\":\"200px\"},\r\n                                    {\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},\r\n                                    {\"idsName\":\"IDS_DISPLAYSTATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"200px\"}\r\n                                    ];\r\n\r\n\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign){          \r\n            if (this.props.Login.operation === \"delete\"){\r\n                loadEsign = false;\r\n                openModal =  false;\r\n                selectedRecord = {};\r\n            }\r\n            else{\r\n                loadEsign = false;                \r\n            }\r\n        }\r\n        else{\r\n            openModal =  false;\r\n            selectedRecord ={};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {openModal, loadEsign, selectedRecord, selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        \r\n    }\r\n    \r\n    static getDerivedStateFromProps(props, state){\r\n    \r\n        if (props.Login.masterStatus !== \"\"  && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";           \r\n        } \r\n         \r\n        if (props.Login.error !== state.error){\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }   \r\n        return null;\r\n     }    \r\n\r\n\r\n    render(){\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n                        && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n         \r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n                        && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n            \r\n         const addParam = {screenName:\"Method\", primaryeyField: \"nmethodcode\", primaryKeyValue:undefined,  \r\n                            operation:\"create\", inputParam:this.props.Login.inputParam, userInfo : this.props.Login.userInfo, ncontrolCode: addId};\r\n\r\n        const editParam = {screenName:this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"update\", \r\n                           primaryKeyField:\"nmethodcode\", inputParam:this.props.Login.inputParam,  userInfo:this.props.Login.userInfo,  ncontrolCode:editId};\r\n\r\n        const deleteParam ={operation:\"delete\"};\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col>\r\n                <ListWrapper className=\"client-list-content\">\r\n                    {/* <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                        <HeaderName className=\"header-primary-md\">\r\n                           {this.props.Login.inputParam ? \r\n                            <FormattedMessage id={this.props.Login.inputParam.methodUrl} /> :\"\"}\r\n                        </HeaderName>\r\n                        <Button name=\"addMethod\" className=\"btn btn-user btn-primary-blue\"  \r\n                                hidden ={this.props.Login.inputParam && this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                onClick={()=>this.props.getMethodComboService(addParam) } \r\n                                role=\"button\">\r\n                            <FontAwesomeIcon icon={faPlus} /> { }                          \r\n                            <FormattedMessage id=\"IDS_ADD\" defaultMessage='Add'/> \r\n                        </Button>\r\n                    </PrimaryHeader> */}\r\n                   \r\n                    {this.state.data ? \r\n                        <DataGrid\r\n                            primaryKeyField = {\"nmethodcode\"}\r\n                            data = {this.state.data}\r\n                            dataResult = {this.state.dataResult}\r\n                            dataState = {this.state.dataState}\r\n                            dataStateChange = {this.dataStateChange}\r\n                            extractedColumnList = {this.extractedColumnList}\r\n                            fetchRecord = {this.props.getMethodComboService}\r\n                            editParam={editParam}\r\n                            deleteRecord = {this.deleteRecord}\r\n                            deleteParam={deleteParam}\r\n                            reloadData = {this.reloadData}\r\n                            controlMap = {this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            userInfo = {this.props.Login.userInfo}\r\n                            pageable={true}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight = {'600px'}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={true} \r\n                            selectedId={this.props.Login.selectedId} \r\n                            addRecord={()=>this.props.getMethodComboService(addParam)}                      \r\n                        />\r\n                    :\"\"}    \r\n                </ListWrapper>\r\n            </Col>\r\n        </Row>\r\n        {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n        {this.props.Login.openModal ? \r\n            <SlideOutModal  show={this.props.Login.openModal} \r\n                                closeModal={this.closeModal}  \r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}  \r\n                                screenName={this.props.Login.screenName}   \r\n                                onSaveClick={this.onSaveClick}    \r\n                                esign={this.props.Login.loadEsign}\r\n                                validateEsign={this.validateEsign}\r\n                                masterStatus={this.props.Login.masterStatus}\r\n                                updateStore={this.props.updateStore}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                mandatoryFields={[{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"nmethodcatcode\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                                  {\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}]}\r\n                                addComponent ={this.props.Login.loadEsign ? \r\n                                        <Esign  operation={this.props.Login.operation}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                inputParam={this.props.Login.inputParam}                                               \r\n                                                selectedRecord={this.state.selectedRecord ||{}}\r\n                                                />\r\n                                      : <AddMethod  \r\n                                            selectedRecord={this.state.selectedRecord ||{}}                                  \r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange} \r\n                                            methodCategoryList={this.props.Login.methodCategoryList ||[]}\r\n                                            operation={this.props.Login.operation}\r\n                                            inputParam={this.props.Login.inputParam}  \r\n                                            />}  \r\n                />\r\n            :\"\"}\r\n        </>\r\n      );\r\n    }\r\n\r\n    componentDidUpdate(previousProps){\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData){            \r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode){\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights){\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item=>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({userRoleControlRights, controlMap, data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),});\r\n            }\r\n            else {        \r\n                let {dataState} = this.state;\r\n                if(this.props.Login.dataState === undefined){\r\n                    dataState = {skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                }         \r\n                this.setState({data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData,dataState), dataState\r\n                });\r\n            } \r\n         }\r\n         else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord ){    \r\n            this.setState({selectedRecord:this.props.Login.selectedRecord});\r\n         }       \r\n    }    \r\n\r\n    onInputOnChange=(event) => {\r\n        \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox')\r\n        {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else{\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        \r\n        this.setState({selectedRecord});\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {      \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;   \r\n     \r\n        this.setState({selectedRecord});        \r\n    }\r\n\r\n    deleteRecord =(deleteParam) =>{\r\n        const inputParam = {\r\n                                classUrl: this.props.Login.inputParam.classUrl,\r\n                                methodUrl: this.props.Login.inputParam.methodUrl,                        \r\n                                displayName:this.props.Login.inputParam.displayName,\r\n                                inputData: {[this.props.Login.inputParam.methodUrl.toLowerCase()] :deleteParam.selectedRecord,\r\n                                            \"userinfo\": this.props.Login.userInfo},\r\n                                operation:deleteParam.operation,\r\n                                dataState:this.state.dataState    \r\n                            }       \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData:this.props.Login.masterData}, \r\n                    openModal:true, screenName:this.props.intl.formatMessage({ id:this.props.Login.inputParam.displayName}),\r\n                    operation:deleteParam.operation\r\n                    }\r\n                }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () =>{\r\n        const inputParam = {\r\n                        inputData : {\"userinfo\":this.props.Login.userInfo},                        \r\n                        classUrl: this.props.Login.inputParam.classUrl,\r\n                        methodUrl: this.props.Login.inputParam.methodUrl,\r\n                        displayName:this.props.Login.inputParam.displayName,\r\n                        userInfo: this.props.Login.userInfo\r\n                    };     \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n       \r\n            //add / edit            \r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let dataState = undefined;\r\n            let selectedId = null;\r\n            if ( this.props.Login.operation === \"update\"){\r\n                // edit\r\n                dataState = this.state.dataState;\r\n                inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n                selectedId = this.props.Login.selectedRecord.nmethodcode;              \r\n            }\r\n            else{\r\n                //add               \r\n                inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = {\"nsitecode\":this.props.Login.userInfo.nmastersitecode};      \r\n               \r\n            }   \r\n\r\n            inputData[\"method\"][\"ndefaultstatus\"] = this.state.selectedRecord[\"ndefaultstatus\"]? this.state.selectedRecord[\"ndefaultstatus\"]:transactionStatus.NO;\r\n            inputData[\"method\"][\"nmethodcatcode\"] = this.state.selectedRecord[\"nmethodcatcode\"]? this.state.selectedRecord[\"nmethodcatcode\"].value:\"\";\r\n            inputData[\"method\"][\"smethodname\"] = this.state.selectedRecord[\"smethodname\"]? this.state.selectedRecord[\"smethodname\"]:\"\";\r\n            inputData[\"method\"][\"sdescription\"] = this.state.selectedRecord[\"sdescription\"]? this.state.selectedRecord[\"sdescription\"]:\"\";\r\n                   \r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: this.props.Login.inputParam.methodUrl,\r\n                displayName:this.props.Login.inputParam.displayName,  \r\n                inputData: inputData, selectedId, dataState,\r\n                operation: this.props.Login.operation, saveType, formRef          \r\n            }\r\n           \r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n            if (esignNeeded){\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign:true, screenData:{inputParam, masterData:this.props.Login.masterData}, \r\n                        openModal:true, screenName:this.props.intl.formatMessage({ id:this.props.Login.inputParam.displayName}),\r\n                        operation:this.props.Login.operation\r\n                        }\r\n                    }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else{\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n           \r\n    } \r\n    validateEsign = () =>{\r\n        const inputParam = {\r\n                                inputData: {\"userinfo\": {...this.props.Login.userInfo, \r\n                                                        sreason: this.state.selectedRecord[\"esigncomments\"] },\r\n                                             password : this.state.selectedRecord[\"esignpassword\"]\r\n                                            },\r\n                                screenData : this.props.Login.screenData\r\n                            }        \r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }    \r\n   \r\n }\r\n export default connect(mapStateToProps, {callService, crudMaster, getMethodComboService, updateStore, validateEsignCredential})(injectIntl(Method));"]},"metadata":{},"sourceType":"module"}