{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddSample.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst AddSample = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    name: \"ssamplearno\",\n    type: \"text\",\n    onChange: event => props.onInputChange(event),\n    onKeyUp: event => props.onKeyUp(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssamplearno\"] : \"\",\n    isMandatory: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default injectIntl(AddSample);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/AddSample.jsx"],"names":["React","injectIntl","Row","Col","FormInput","AddSample","props","intl","formatMessage","id","event","onInputChange","onKeyUp","selectedRecord"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAO,iCAAP;AACA,OAAOC,SAAP,MAAsB,kDAAtB;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADT;AAEE,IAAA,IAAI,EAAE,aAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAGC,KAAD,IAAWJ,KAAK,CAACK,aAAN,CAAoBD,KAApB,CAJvB;AAKE,IAAA,OAAO,EAAGA,KAAD,IAAWJ,KAAK,CAACM,OAAN,CAAcF,KAAd,CALtB;AAME,IAAA,WAAW,EAAEJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CANf;AAOE,IAAA,KAAK,EAAEH,KAAK,CAACO,cAAN,GAAuBP,KAAK,CAACO,cAAN,CAAqB,aAArB,CAAvB,GAA6D,EAPtE;AAQE,IAAA,WAAW,EAAE,IARf;AASE,IAAA,QAAQ,EAAE,IATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAiBD,CAlBD;;AAmBA,eAAeZ,UAAU,CAACI,SAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\n\r\nconst AddSample = (props) => {\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <FormInput\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n          name={\"ssamplearno\"}\r\n          type=\"text\"\r\n          onChange={(event) => props.onInputChange(event)}\r\n          onKeyUp={(event) => props.onKeyUp(event)}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplearno\"] : \"\"}\r\n          isMandatory={true}\r\n          required={true}\r\n        />\r\n      </Col>\r\n\r\n    </Row>)\r\n}\r\nexport default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}