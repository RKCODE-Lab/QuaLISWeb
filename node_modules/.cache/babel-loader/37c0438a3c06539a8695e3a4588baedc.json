{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { toast } from 'react-toastify';\nexport function SyncRecords(userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/synchronization/syncRecords\", {\n      'userinfo': userInfo\n    }).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SyncConfigurationAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","toast","SyncRecords","userInfo","dispatch","post","then","response","type","payload","loading","catch","error","status","message","warn","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AACnC,SAAO,UAAUC,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAF,IAAAA,KAAK,CAACO,IAAN,CAAW,8BAAX,EACI;AAAE,kBAAYF;AAAd,KADJ,EAEKG,IAFL,CAEUC,QAAQ,IAAI;AAEdH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAET,cADD;AAELU,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ;AAFJ,OAAD,CAAR;AAOH,KAXL,EAYKC,KAZL,CAYWC,KAAK,IAAI;AACZR,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAET,cADD;AAELU,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ;AAFJ,OAAD,CAAR;;AAMA,UAAIE,KAAK,CAACL,QAAN,CAAeM,MAAf,KAA0B,GAA9B,EAAmC;AAC/BZ,QAAAA,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,OAFD,MAEO;AACHb,QAAAA,KAAK,CAACc,IAAN,CAAWH,KAAK,CAACL,QAAN,CAAeS,IAA1B;AACH;AACJ,KAxBL;AAyBH,GA3BD;AA4BH","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport function SyncRecords (userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/synchronization/syncRecords\",\r\n            { 'userinfo': userInfo})\r\n            .then(response => {             \r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {                       \r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}