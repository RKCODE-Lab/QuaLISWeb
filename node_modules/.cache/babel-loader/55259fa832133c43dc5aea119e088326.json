{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{Col,Form}from'react-bootstrap';import{injectIntl}from'react-intl';import{CONTAINERTYPE,transactionStatus}from'../../components/Enumeration';var AddTestContainerType=function AddTestContainerType(props){//   const { nresourecode,disabled } = props.selectedRecord;\nreturn/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CONTAINERTYPE\"}),name:\"ncontainertypecode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,showOption:props.isMulti,options:props.containertype,optionId:\"ncontainertypecode\",optionValue:\"scontainertype\",defaultValue:props.selectedRecord[\"ncontainertypecode\"],onChange:function onChange(value){return props.onComboChange(value,props.isMulti?\"availableData\":\"ncontainertypecode\",1);},value:props.selectedRecord[\"ncontainertypecode\"]?props.selectedRecord[\"ncontainertypecode\"]||[]:[],isMulti:props.isMulti,isSearchable:true,closeMenuOnSelect:!props.isMulti,alphabeticalSort:true,isClearable:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"nquantity\",label:props.intl.formatMessage({id:\"IDS_QUANTITY\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,4);},placeholder:props.intl.formatMessage({id:\"IDS_QUANTITY\"}),value:props.selectedRecord&&props.selectedRecord[\"nquantity\"]?props.selectedRecord[\"nquantity\"]:\"\",isMandatory:\"*\",required:true,maxLength:5}),/*#__PURE__*/React.createElement(Form.Check,{name:\"noutsourcecode\",type:\"checkbox\",id:\"AddFiles\",label:props.intl.formatMessage({id:\"IDS_OUTSOURCE\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,1,CONTAINERTYPE);},checked:props.selectedRecord?props.selectedRecord[\"noutsourcecode\"]===CONTAINERTYPE.YES?true:false:false// disabled={disabled}\n}));};export default injectIntl(AddTestContainerType);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddTestContainerType.jsx"],"names":["React","FormSelectSearch","FormInput","Col","Form","injectIntl","CONTAINERTYPE","transactionStatus","AddTestContainerType","props","intl","formatMessage","id","isMulti","containertype","selectedRecord","value","onComboChange","event","onInputOnChange","YES"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { CONTAINERTYPE,transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\n\r\nconst AddTestContainerType = (props) => {\r\n //   const { nresourecode,disabled } = props.selectedRecord;\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_CONTAINERTYPE\" })}\r\n                name={\"ncontainertypecode\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                showOption={props.isMulti}\r\n                options={props.containertype}\r\n                optionId='ncontainertypecode'\r\n                optionValue='scontainertype'\r\n                defaultValue={props.selectedRecord[\"ncontainertypecode\"]}\r\n                onChange={value => props.onComboChange(value, props.isMulti?\"availableData\":\"ncontainertypecode\", 1)}\r\n                value={props.selectedRecord[\"ncontainertypecode\"] ? props.selectedRecord[\"ncontainertypecode\"] || [] : []}\r\n                isMulti={props.isMulti}\r\n                isSearchable={true}\r\n                closeMenuOnSelect={!props.isMulti}\r\n                alphabeticalSort={true}\r\n                isClearable={true}\r\n            >\r\n            </FormSelectSearch>\r\n\r\n            <FormInput\r\n                    name={\"nquantity\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_QUANTITY\" })}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event, 4)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_QUANTITY\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"nquantity\"] ? props.selectedRecord[\"nquantity\"] : \"\"}\r\n                    isMandatory=\"*\"\r\n                    required={true}\r\n                    maxLength={5}\r\n                />\r\n\r\n<Form.Check \r\n                        name=\"noutsourcecode\" \r\n                        type=\"checkbox\"\r\n                        id=\"AddFiles\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_OUTSOURCE\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1,CONTAINERTYPE)}\r\n                        checked={props.selectedRecord ? props.selectedRecord[\"noutsourcecode\"] === CONTAINERTYPE.YES ? true : false : false}\r\n                       // disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestContainerType);"]},"metadata":{},"sourceType":"module"}