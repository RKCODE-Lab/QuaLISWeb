{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\EditQuotationTestPricing.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst EditQuotationTestPricing = props => {\n  console.log(\"props.selected:\", props.selectedRecord);\n  return Object.keys(props.selectedRecord).length > 0 ? props.selectedRecord.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: \"at-tabs mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4 card-header\",\n    Style: \"border-bottom: 0px;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TESTNAME\"\n    }),\n    name: \"squotationleadtime\",\n    type: \"text\" // onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TESTNAME\"\n    }),\n    value: item.stestsynonym ? item.stestsynonym === \"-\" ? \"\" : item.stestsynonym : \"\",\n    isMandatory: false,\n    isDisabled: true,\n    required: true // maxLength={\"5\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    name: \"smethodname\",\n    type: \"text\" // onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    value: item.smethodname ? item.smethodname === \"-\" ? \"\" : item.smethodname : \"\",\n    isMandatory: false,\n    isDisabled: true,\n    required: true // maxLength={\"5\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_QUOTATIONLEADTIME\"\n    }),\n    name: \"squotationleadtime\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_QUOTATIONLEADTIME\"\n    }),\n    value: item.squotationleadtime ? item.squotationleadtime === \"-\" ? \"\" : item.squotationleadtime : \"\",\n    isMandatory: false,\n    isDisabled: false,\n    required: true,\n    maxLength: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTBAND\"\n    }),\n    isSearchable: true,\n    name: \"ndiscountbandcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: true,\n    options: props.DiscountBand //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\n    ,\n    value: item.ndiscountbandcode.label !== \"\" ? item.ndiscountbandcode : \"\" //      value={item.ndiscountbandcode || \"\"}\n    //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\n    ,\n    defaultValue: item,\n    onChange: event => props.onComboChange(event, \"ndiscountbandcode\", 5, item.nquotationtestcode),\n    closeMenuOnSelect: true // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AMOUNT\"\n    }),\n    name: \"namount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\n    ,\n    value: item.namount ? item.namount : 0,\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    type: \"number\",\n    value: item.ncost || 0,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    strict: true,\n    min: 0,\n    maxLength: 10 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onNumericInputChange(event, \"ncost\", item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nnoofsamples\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    isMandatory: false,\n    required: true,\n    className: \"form-control\",\n    value: item.nnoofsamples || 0 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    name: \"ntotalamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    value: item.ntotalamount > 0 ? item.ntotalamount : 0 //     value={(item.ncost * item.nnoofsamples) || 0}\n    ,\n    isMandatory: false,\n    required: true,\n    maxLength: 10,\n    isDisabled: true,\n    precision: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"stestplatform\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: item.stestplatform ? item.stestplatform === \"-\" ? \"\" : item.stestplatform : \"\",\n    isMandatory: false,\n    isDisabled: false,\n    required: true,\n    maxLength: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"snotes\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NOTES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NOTES\"\n    }),\n    isMandatory: false,\n    required: true,\n    className: \"form-control\",\n    value: item.snotes ? item.snotes === \"-\" ? \"\" : item.snotes : \"\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  })))))))))) : \"\";\n};\n\nexport default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","Card","injectIntl","FormInput","ReadOnlyText","FormNumericInput","FormSelectSearch","FormTextarea","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","index","intl","formatMessage","id","stestsynonym","smethodname","event","onInputOnChange","nquotationtestcode","squotationleadtime","DiscountBand","ndiscountbandcode","label","onComboChange","namount","ncost","onNumericInputChange","onnetAmountEvent","nnoofsamples","ntotalamount","stestplatform","snotes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAAgC,iBAAhC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;AAGA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,cAArC;AACA,SACIC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACG,cAAlB,EAAkCG,MAAlC,GAA2C,CAA3C,GACIN,KAAK,CAACG,cAAN,CAAqBI,GAArB,CAAyB,CAACC,IAAD,EAAMC,KAAN,kBACzB,uDAIJ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEF,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AACU,IAAA,KAAK,EAAET,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADjB;AAEU,IAAA,IAAI,EAAE,oBAFhB;AAGU,IAAA,IAAI,EAAC,MAHf,CAIU;AAJV;AAKU,IAAA,WAAW,EAAEZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALvB;AAMU,IAAA,KAAK,EAAEJ,IAAI,CAACK,YAAL,GAAoBL,IAAI,CAACK,YAAL,KAAsB,GAAtB,GAA4B,EAA5B,GAAiCL,IAAI,CAACK,YAA1D,GAAyE,EAN1F;AAOU,IAAA,WAAW,EAAE,KAPvB;AAQU,IAAA,UAAU,EAAE,IARtB;AASU,IAAA,QAAQ,EAAE,IATpB,CAUU;AAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,eAkBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AACY,IAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADnB;AAEY,IAAA,IAAI,EAAE,aAFlB;AAGY,IAAA,IAAI,EAAC,MAHjB,CAIY;AAJZ;AAKY,IAAA,WAAW,EAAEZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALzB;AAMY,IAAA,KAAK,EAAEJ,IAAI,CAACM,WAAL,GAAmBN,IAAI,CAACM,WAAL,KAAqB,GAArB,GAA2B,EAA3B,GAAgCN,IAAI,CAACM,WAAxD,GAAsE,EANzF;AAOY,IAAA,WAAW,EAAE,KAPzB;AAQY,IAAA,UAAU,EAAE,IARxB;AASY,IAAA,QAAQ,EAAE,IATtB,CAUY;AAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAlBJ,eAmCI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AACQ,IAAA,KAAK,EAAEd,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEQ,IAAA,IAAI,EAAE,oBAFd;AAGQ,IAAA,IAAI,EAAC,MAHb;AAIQ,IAAA,QAAQ,EAAGG,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,EAA6BP,IAAI,CAACS,kBAAlC,CAJ7B;AAKQ,IAAA,WAAW,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALrB;AAMQ,IAAA,KAAK,EAAEJ,IAAI,CAACU,kBAAL,GAA0BV,IAAI,CAACU,kBAAL,KAA4B,GAA5B,GAAkC,EAAlC,GAAuCV,IAAI,CAACU,kBAAtE,GAA2F,EAN1G;AAOQ,IAAA,WAAW,EAAE,KAPrB;AAQQ,IAAA,UAAU,EAAE,KARpB;AASQ,IAAA,QAAQ,EAAE,IATlB;AAUQ,IAAA,SAAS,EAAE,GAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnCJ,CAFE,eAyDF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AAEI,IAAA,SAAS,EAAElB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFf;AAGI,IAAA,YAAY,EAAE,IAHlB;AAII,IAAA,IAAI,EAAE,mBAJV;AAKI,IAAA,UAAU,EAAE,KALhB;AAMI,IAAA,WAAW,EAAEZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,WAAW,EAAE,IARjB;AASI,IAAA,OAAO,EAAEZ,KAAK,CAACmB,YATnB,CAUI;AAVJ;AAWI,IAAA,KAAK,EAAEX,IAAI,CAACY,iBAAL,CAAuBC,KAAvB,KAAgC,EAAhC,GAAqCb,IAAI,CAACY,iBAA1C,GAA8D,EAXzE,CAYI;AACA;AAbJ;AAcI,IAAA,YAAY,EAAEZ,IAdlB;AAeI,IAAA,QAAQ,EAAGO,KAAD,IAAWf,KAAK,CAACsB,aAAN,CAAoBP,KAApB,EAA2B,mBAA3B,EAAgD,CAAhD,EAAkDP,IAAI,CAACS,kBAAvD,CAfzB;AAgBI,IAAA,iBAAiB,EAAE,IAhBvB,CAiBI;AAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,eA2BI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AACY,IAAA,KAAK,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADnB;AAEY,IAAA,IAAI,EAAE,SAFlB;AAGY,IAAA,IAAI,EAAC,MAHjB;AAIY,IAAA,QAAQ,EAAGG,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,CAJjC;AAKY,IAAA,WAAW,EAAEf,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALzB,CAMS;AANT;AAOY,IAAA,KAAK,EAAEJ,IAAI,CAACe,OAAL,GAAef,IAAI,CAACe,OAApB,GAA8B,CAPjD;AAQY,IAAA,WAAW,EAAE,KARzB;AASY,IAAA,UAAU,EAAE,IATxB;AAUY,IAAA,QAAQ,EAAE,IAVtB;AAWY,IAAA,SAAS,EAAE,KAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA3BJ,eA6CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,gBAAD;AAEY,IAAA,KAAK,EAAEvB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFnB;AAGY,IAAA,IAAI,EAAC,QAHjB;AAIY,IAAA,KAAK,EAAEJ,IAAI,CAACgB,KAAL,IAAc,CAJjC;AAKY,IAAA,WAAW,EAAExB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALzB;AAMY,IAAA,MAAM,EAAE,IANpB;AAOY,IAAA,GAAG,EAAE,CAPjB;AAQY,IAAA,SAAS,EAAE,EARvB,CASY;AATZ;AAUY,IAAA,QAAQ,EAAGG,KAAD,IAAWf,KAAK,CAACyB,oBAAN,CAA2BV,KAA3B,EAAkC,OAAlC,EAA0CP,IAAI,CAACS,kBAA/C,CAVjC;AAWY,IAAA,MAAM,EAAE,MAAMjB,KAAK,CAAC0B,gBAAN,CAAuBlB,IAAI,CAACS,kBAA5B,CAX1B;AAYY,IAAA,OAAO,EAAE,IAZrB;AAaY,IAAA,SAAS,EAAE,CAbvB;AAcY,IAAA,SAAS,EAAC,cAdtB;AAeY,IAAA,MAAM,EAAC,gCAfnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA7CJ,eAmEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AACY,IAAA,IAAI,EAAE,cADlB;AAEY,IAAA,IAAI,EAAC,MAFjB;AAGY,IAAA,KAAK,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAHnB;AAIY,IAAA,WAAW,EAAEZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJzB;AAKY,IAAA,WAAW,EAAE,KALzB;AAMY,IAAA,QAAQ,EAAE,IANtB;AAOY,IAAA,SAAS,EAAC,cAPtB;AAQY,IAAA,KAAK,EAAEJ,IAAI,CAACmB,YAAL,IAAqB,CARxC,CASY;AATZ;AAUY,IAAA,QAAQ,EAAGZ,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,EAA6BP,IAAI,CAACS,kBAAlC,CAVjC;AAWY,IAAA,MAAM,EAAE,MAAMjB,KAAK,CAAC0B,gBAAN,CAAuBlB,IAAI,CAACS,kBAA5B,CAX1B;AAYY,IAAA,SAAS,EAAE,CAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAnEJ,eAsFI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AACY,IAAA,KAAK,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADnB;AAEY,IAAA,IAAI,EAAE,cAFlB;AAGY,IAAA,IAAI,EAAC,MAHjB;AAIY,IAAA,QAAQ,EAAGG,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,EAA6BP,IAAI,CAACS,kBAAlC,CAJjC;AAKY,IAAA,WAAW,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALzB;AAMY,IAAA,KAAK,EAAGJ,IAAI,CAACoB,YAAL,GAAkB,CAAlB,GAAsBpB,IAAI,CAACoB,YAA3B,GAA0C,CAN9D,CAOQ;AAPR;AAQY,IAAA,WAAW,EAAE,KARzB;AASY,IAAA,QAAQ,EAAE,IATtB;AAUY,IAAA,SAAS,EAAE,EAVvB;AAWY,IAAA,UAAU,EAAE,IAXxB;AAYY,IAAA,SAAS,EAAE,CAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAtFJ,CAzDE,eAoKF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,YAAD;AACY,IAAA,KAAK,EAAE5B,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADnB;AAEY,IAAA,IAAI,EAAE,eAFlB;AAGY,IAAA,IAAI,EAAC,MAHjB;AAIY,IAAA,QAAQ,EAAGG,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,EAA6BP,IAAI,CAACS,kBAAlC,CAJjC;AAKY,IAAA,WAAW,EAAEjB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALzB;AAMY,IAAA,KAAK,EAAEJ,IAAI,CAACqB,aAAL,GAAqBrB,IAAI,CAACqB,aAAL,KAAuB,GAAvB,GAA6B,EAA7B,GAAkCrB,IAAI,CAACqB,aAA5D,GAA4E,EAN/F;AAOY,IAAA,WAAW,EAAE,KAPzB;AAQY,IAAA,UAAU,EAAE,KARxB;AASY,IAAA,QAAQ,EAAE,IATtB;AAUY,IAAA,SAAS,EAAE,KAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAFJ,eAkBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,YAAD;AACY,IAAA,IAAI,EAAE,QADlB;AAEY,IAAA,IAAI,EAAC,MAFjB;AAGY,IAAA,KAAK,EAAE7B,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAHnB;AAIY,IAAA,WAAW,EAAEZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJzB;AAKY,IAAA,WAAW,EAAE,KALzB;AAMY,IAAA,QAAQ,EAAE,IANtB;AAOY,IAAA,SAAS,EAAC,cAPtB;AAQY,IAAA,KAAK,EAAEJ,IAAI,CAACsB,MAAL,GAActB,IAAI,CAACsB,MAAL,KAAgB,GAAhB,GAAsB,EAAtB,GAA2BtB,IAAI,CAACsB,MAA9C,GAAuD,EAR1E;AASY,IAAA,QAAQ,EAAGf,KAAD,IAAWf,KAAK,CAACgB,eAAN,CAAsBD,KAAtB,EAA6BP,IAAI,CAACS,kBAAlC,CATjC;AAUY,IAAA,SAAS,EAAE,GAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAlBJ,CApKE,CADF,CADD,CADD,CADF,CAJI,CADA,CADJ,GA2OG,EA5OP;AA8OP,CAhPD;;AAkPA,eAAexB,UAAU,CAACM,wBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card  } from \"react-bootstrap\";\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map((item,index)=>\r\n                <>\r\n                \r\n        {/* <Row> */}\r\n          {/* <Card.Body className=\"form-static-wrap\"> */}\r\n            <Card className=\"at-tabs mb-3\">\r\n              <Row noGutters>\r\n               <Col md={12}>\r\n                <Card>\r\n                  <Card.Body>\r\n\r\n                <Row className=\"mb-4 card-header\" Style=\"border-bottom: 0px;\">\r\n                    <Col md={5}>  \r\n\r\n                      <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                name={\"squotationleadtime\"}\r\n                                type=\"text\" \r\n                                // onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                value={item.stestsynonym ? item.stestsynonym === \"-\" ? \"\" : item.stestsynonym : \"\"}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                // maxLength={\"5\"}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                    <Col md={5}>  \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_METHODNAME\" })}\r\n                                name={\"smethodname\"}\r\n                                type=\"text\" \r\n                                // onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_METHODNAME\" })}\r\n                                value={item.smethodname ? item.smethodname === \"-\" ? \"\" : item.smethodname : \"\"}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                // maxLength={\"5\"}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                      <FormInput\r\n                              label={props.intl.formatMessage({ id: \"IDS_QUOTATIONLEADTIME\" })}\r\n                              name={\"squotationleadtime\"}\r\n                              type=\"text\" \r\n                              onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                              placeholder={props.intl.formatMessage({ id: \"IDS_QUOTATIONLEADTIME\" })}\r\n                              value={item.squotationleadtime ? item.squotationleadtime === \"-\" ? \"\" : item.squotationleadtime : \"\"}\r\n                              isMandatory={false}\r\n                              isDisabled={false}\r\n                              required={true}\r\n                              maxLength={\"5\"}\r\n                      />\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n\r\n                    <Col md={3}>  \r\n\r\n                        <FormSelectSearch\r\n\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}\r\n                            isSearchable={true}\r\n                            name={\"ndiscountbandcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={true}\r\n                            options={props.DiscountBand}\r\n                            //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\r\n                            value={item.ndiscountbandcode.label !==\"\" ? item.ndiscountbandcode : \"\"} \r\n                            //      value={item.ndiscountbandcode || \"\"}\r\n                            //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\r\n                            defaultValue={item }\r\n                            onChange={(event) => props.onComboChange(event, \"ndiscountbandcode\", 5,item.nquotationtestcode)}\r\n                            closeMenuOnSelect={true}\r\n                            // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                             \r\n                         /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={3}>  \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                                name={\"namount\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                             // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\r\n                                value={item.namount ? item.namount : 0}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                maxLength={\"100\"}\r\n                    />\r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormNumericInput\r\n                                        \r\n                                label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                type=\"number\"\r\n                                value={item.ncost || 0}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                strict={true}\r\n                                min={0}\r\n                                maxLength={10}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onNumericInputChange(event, \"ncost\",item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                noStyle={true}\r\n                                precision={2}\r\n                                className=\"form-control\"\r\n                                errors=\"Please provide a valid number.\"\r\n                    /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormInput\r\n                                name={\"nnoofsamples\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.nnoofsamples || 0}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                maxLength={9}\r\n                     />  \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}> \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                name={\"ntotalamount\"}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                value={ item.ntotalamount>0 ? item.ntotalamount : 0 }\r\n                            //     value={(item.ncost * item.nnoofsamples) || 0}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                maxLength={10}\r\n                                isDisabled={true}\r\n                                precision={2}\r\n                        /> \r\n                    \r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    \r\n                    <Col md={6}> \r\n                    \r\n                    <FormTextarea\r\n                                label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                name={\"stestplatform\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                value={item.stestplatform ? item.stestplatform === \"-\" ? \"\" : item.stestplatform : \"\"}\r\n                                isMandatory={false}\r\n                                isDisabled={false}\r\n                                required={true}\r\n                                maxLength={\"500\"}\r\n                    />\r\n                    </Col> \r\n\r\n                    <Col md={6}> \r\n                \r\n                    <FormTextarea\r\n                                name={\"snotes\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.snotes ? item.snotes === \"-\" ? \"\" : item.snotes : \"\"}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                maxLength={500}\r\n                    />\r\n                    </Col> \r\n\r\n                </Row>           \r\n\r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n          {/* </Card.Body> */}\r\n        {/* </Row> */}\r\n\r\n                {/* { (Object.keys(props.selectedRecord).length > 1 && Object.keys(props.selectedRecord).length) !== item.length ? \r\n\r\n                    <Col md={12}>\r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"\r\n\r\n                } */}\r\n\r\n                  {/* { Object.keys(props.selectedRecord).length > 1   ? \r\n       ((Object.keys(props.selectedRecord).length > 1) && ((index+1)=== (Object.keys(props.selectedRecord).length))) ? \r\n            \"\":\r\n                    <Col md={12}>     \r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"  } */}\r\n                 </>\r\n          \r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}