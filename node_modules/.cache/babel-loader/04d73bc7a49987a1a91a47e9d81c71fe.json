{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../../components/data-grid/data-grid.component';import AddEmailHost from'./AddEmailHost';import Esign from'../../audittrail/Esign';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{ListWrapper}from'../../../components/client-group.styles';import{callService,crudMaster,fetchEmailHostById,validateEsignCredential,openEmailHostModal,updateStore}from'../../../actions';import{getControlMap,showEsign,validatePhoneNumber,validateEmail}from'../../../components/CommonScript';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import{transactionStatus}from'../../../components/Enumeration';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var EmailHost=/*#__PURE__*/function(_React$Component){_inherits(EmailHost,_React$Component);var _super=_createSuper(EmailHost);function EmailHost(props){var _this;_classCallCheck(this,EmailHost);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else if(event.target.name===\"nportno\"){if(event.target.value!==\"\"){if(!isNaN(event.target.value)){event.target.value=validatePhoneNumber(event.target.value);if(event.target.value!==\"\")selectedRecord[event.target.name]=event.target.value;else selectedRecord[event.target.name]=selectedRecord[event.target.name];}else{selectedRecord[event.target.name]=selectedRecord[event.target.name];}}else{selectedRecord[event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){if(comboData!==null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.deleteRecord=function(inputData){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),inputData.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.inputParam.displayName};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"emailhost\",selectedObject:\"selectedEmailHost\",primaryKeyField:\"nemailhostcode\"};//inputData[\"emailhost\"] = this.state.selectedRecord;\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=JSON.parse(JSON.stringify(_this.state.selectedRecord));selectedId=_this.props.Login.selectedRecord.nemailhostcode;_this.fieldList.map(function(item){return inputData[\"emailhost\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});}else{inputData[\"emailhost\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};_this.fieldList.map(function(item){return inputData[\"emailhost\"][item]=_this.state.selectedRecord[item];});}inputData[\"emailhost\"][\"sauthenticationname\"]=_this.state.selectedRecord[\"sauthenticationname\"]?_this.state.selectedRecord[\"sauthenticationname\"]:\"True\";if(inputData[\"emailhost\"][\"agree\"]){delete inputData[\"emailhost\"][\"agree\"];}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedId:selectedId};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}// this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();// this.closeModal = this.closeModal.bind(this);\n_this.extractedColumnList=[];_this.fieldList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,isOpen:false,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(EmailHost,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"controlType\":\"textbox\",\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sprofilename\",\"width\":\"200px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_HOSTNAME\",\"dataField\":\"shostname\",\"width\":\"200px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_EMAILID\",\"dataField\":\"semail\",\"width\":\"200px\"},{\"controlType\":\"numericinput\",\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"width\":\"200px\"}];primaryKeyField=\"nemailhostcode\";this.fieldList=[\"nemailhostcode\",\"sprofilename\",\"shostname\",\"nportno\",\"semail\",\"spassword\",\"sauthenticationname\"];}var mandatoryFields=[{\"mandatory\":true,\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sprofilename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_HOSTNAME\",\"dataField\":\"shostname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_EMAILID\",\"dataField\":\"semail\",\"alertPreFix\":this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"spassword\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editID=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var deleteID=this.props.Login.inputParam&&this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),primaryKeyField:\"nemailhostcode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editID};var deleteParam={operation:\"delete\",ncontrolCode:deleteID};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList// detailedFieldList={this.detailedFieldList}\n//expandField=\"expanded\"\n,formatMessage:this.props.intl.formatMessage,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.fetchEmailHostById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,editParam:editParam,deleteParam:deleteParam,addRecord:function addRecord(){return _this2.props.openEmailHostModal(\"IDS_MAILHOST\",\"create\",\"nemailhostcode\",_this2.props.Login.masterData,_this2.props.Login.userInfo,addId);}// isComponent={true}\n,pageable:true,isActionRequired:true,isToolBarRequired:true,scrollable:\"scrollable\",selectedId:this.props.Login.selectedId}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation// formatMessage={this.props.intl.formatMessage}\n,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddEmailHost,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,// isOpen: false,\ndataResult:process(this.props.Login.masterData,dataState),dataState:dataState//,\n//selectedRecord:{ncalibrationreq:transactionStatus.NO,ncategorybasedflow:transactionStatus.NO,ndefaultstatus:transactionStatus.NO}\n});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return EmailHost;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,fetchEmailHostById:fetchEmailHostById,validateEsignCredential:validateEsignCredential,openEmailHostModal:openEmailHostModal,updateStore:updateStore})(injectIntl(EmailHost));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/mail/emailhost/EmailHost.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","AddEmailHost","Esign","SlideOutModal","ListWrapper","callService","crudMaster","fetchEmailHostById","validateEsignCredential","openEmailHostModal","updateStore","getControlMap","showEsign","validatePhoneNumber","validateEmail","DEFAULT_RETURN","transactionStatus","mapStateToProps","state","Login","EmailHost","props","dataStateChange","event","setState","dataResult","masterData","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","onInputOnChange","target","type","name","checked","YES","NO","value","isNaN","onComboChange","comboData","fieldName","deleteRecord","inputData","inputParam","classUrl","methodUrl","toLowerCase","userInfo","displayName","esignNeeded","userRoleControlRights","nformcode","ncontrolCode","screenData","screenName","intl","formatMessage","id","reloadData","onSaveClick","saveType","formRef","postParam","undefined","inputListName","selectedObject","primaryKeyField","JSON","parse","stringify","nemailhostcode","fieldList","map","item","nmastersitecode","searchRef","ncontrolcode","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","isOpen","controlMap","Map","mandatoryFields","addId","has","concat","get","editID","deleteID","editParam","deleteParam","previousProps","Object","values","push","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport AddEmailHost from './AddEmailHost';\r\nimport Esign from '../../audittrail/Esign';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { ListWrapper } from '../../../components/client-group.styles';\r\nimport { callService, crudMaster, fetchEmailHostById, validateEsignCredential, openEmailHostModal, updateStore } from '../../../actions';\r\nimport { getControlMap, showEsign,validatePhoneNumber, validateEmail } from '../../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass EmailHost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        // this.closeModal = this.closeModal.bind(this);\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord ,selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let primaryKeyField = \"\";\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                    { \"controlType\": \"textbox\", \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sprofilename\", \"width\": \"200px\" },\r\n                    { \"controlType\": \"textbox\", \"idsName\": \"IDS_HOSTNAME\", \"dataField\": \"shostname\", \"width\": \"200px\" },\r\n                    { \"controlType\": \"textbox\", \"idsName\": \"IDS_EMAILID\", \"dataField\": \"semail\", \"width\": \"200px\" },\r\n                    { \"controlType\": \"numericinput\", \"idsName\": \"IDS_PORTNO\", \"dataField\": \"nportno\", \"width\": \"200px\" },\r\n               ]\r\n       \r\n            primaryKeyField = \"nemailhostcode\";\r\n            this.fieldList = [\"nemailhostcode\",\"sprofilename\", \"shostname\", \"nportno\", \"semail\",\"spassword\",\"sauthenticationname\"];\r\n        }\r\n        const mandatoryFields=[ { \"mandatory\": true, \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sprofilename\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                                 { \"mandatory\": true, \"idsName\": \"IDS_HOSTNAME\", \"dataField\": \"shostname\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                 { \"mandatory\": true, \"idsName\": \"IDS_EMAILID\", \"dataField\": \"semail\", \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }), \"validateFunction\": validateEmail ,\"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                 { \"mandatory\": true, \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"spassword\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                 { \"mandatory\": true, \"idsName\": \"IDS_PORTNO\", \"dataField\": \"nportno\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n\r\n                                ];\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editID = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n            const deleteID = this.props.Login.inputParam && this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nemailhostcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editID\r\n        };\r\n        const deleteParam = { operation: \"delete\",ncontrolCode:deleteID};\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                   // detailedFieldList={this.detailedFieldList}\r\n                                    //expandField=\"expanded\"\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.fetchEmailHostById}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    addRecord={() => this.props.openEmailHostModal(\"IDS_MAILHOST\", \"create\", \"nemailhostcode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                    // isComponent={true}\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n\r\n                                />\r\n                            : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                               // formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddEmailHost\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    // isOpen: false,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState//,\r\n                    //selectedRecord:{ncalibrationreq:transactionStatus.NO,ncategorybasedflow:transactionStatus.NO,ndefaultstatus:transactionStatus.NO}\r\n                });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') \r\n        {\r\n           selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else if (event.target.name === \"nportno\")\r\n        {\r\n           if (event.target.value !== \"\"){\r\n                \r\n                if(!isNaN(event.target.value)){\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                 if (event.target.value !== \"\")\r\n                      selectedRecord[event.target.name] = event.target.value;\r\n                 else\r\n                     selectedRecord[event.target.name] = selectedRecord[event.target.name];\r\n                }else{\r\n                    selectedRecord[event.target.name] = selectedRecord[event.target.name]; \r\n                }\r\n            }\r\n            else{     \r\n                selectedRecord[event.target.name] = event.target.value;               \r\n            }\r\n        } \r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    deleteRecord = (inputData) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: inputData.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: inputData.operation,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            dataState: this.state.dataState\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: inputData.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        let selectedId = null;\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"emailhost\", selectedObject: \"selectedEmailHost\", \r\n                          primaryKeyField: \"nemailhostcode\" }\r\n            //inputData[\"emailhost\"] = this.state.selectedRecord;\r\n\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            selectedId = this.props.Login.selectedRecord.nemailhostcode;\r\n            this.fieldList.map(item => {\r\n               return inputData[\"emailhost\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n              })\r\n        } else {\r\n            inputData[\"emailhost\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n             this.fieldList.map(item => {\r\n                return inputData[\"emailhost\"][item] = this.state.selectedRecord[item]\r\n              });\r\n        }\r\n        inputData[\"emailhost\"][\"sauthenticationname\"] = this.state.selectedRecord[\"sauthenticationname\"]? this.state.selectedRecord[\"sauthenticationname\"]:\"True\";\r\n\r\n        if (inputData[\"emailhost\"][\"agree\"]){\r\n            delete inputData[\"emailhost\"][\"agree\"]\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef, selectedId\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n        // this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, fetchEmailHostById, validateEsignCredential, openEmailHostModal, updateStore })(injectIntl(EmailHost));"]},"metadata":{},"sourceType":"module"}