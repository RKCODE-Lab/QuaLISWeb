{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../../components/data-grid/data-grid.component';import{ListWrapper}from'../../../components/client-group.styles';import{callService,crudMaster,validateEsignCredential,updateStore}from'../../../actions';import{getControlMap,showEsign}from'../../../components/CommonScript';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import Esign from'../../audittrail/Esign';import{transactionStatus}from'../../../components/Enumeration';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var EmailStatus=/*#__PURE__*/function(_React$Component){_inherits(EmailStatus,_React$Component);var _super=_createSuper(EmailStatus);function EmailStatus(props){var _this;_classCallCheck(this,EmailStatus);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){loadEsign=false;openModal=false;}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.reSent=function(event,operation,ncontrolcode){var inputParam={classUrl:\"emailstatus\",methodUrl:\"reSentMail\",inputData:{\"nrunningno\":event.nrunningno,\"ncontrolcode\":ncontrolcode,\"userinfo\":_this.props.Login.userInfo},operation:\"create\",displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolcode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:\"create\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"EmailStatus\",userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.inputParam.displayName};_this.props.callService(inputParam);};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.fieldList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(EmailStatus,[{key:\"render\",value:function render(){if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"controlType\":\"textbox\",\"idsName\":\"IDS_SUBJECT\",\"dataField\":\"ssubject\",\"width\":\"250px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_RECIPICIENT\",\"dataField\":\"srecipientusers\",\"width\":\"250px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_MAILSTATUS\",\"dataField\":\"ssentstatus\",\"width\":\"250px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_SENTDATE\",\"dataField\":\"stransdate\",\"width\":\"250px\"}];}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nrunningno\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList// detailedFieldList={this.detailedFieldList}\n//expandField=\"expanded\"\n,formatMessage:this.props.intl.formatMessage,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo//fetchRecord={this.props.fetchEmailHostById}\n//  deleteRecord={this.deleteRecord}\n,reloadData:this.reloadData//editParam={editParam}\n// deleteParam={deleteParam}\n// addRecord={() => this.props.openEmailHostModal(\"IDS_MAILHOST\", \"create\", \"nemailhostcode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\n// isComponent={true}\n,pageable:true,isActionRequired:true,isToolBarRequired:true,scrollable:\"scrollable\",selectedId:this.props.Login.selectedId,reSent:this.reSent}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,selectedRecord:this.state.selectedRecord||{},validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):\"\"}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return EmailStatus;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore})(injectIntl(EmailStatus));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/mail/emailstatus/EmailStatus.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","ListWrapper","callService","crudMaster","validateEsignCredential","updateStore","getControlMap","showEsign","DEFAULT_RETURN","SlideOutModal","Esign","transactionStatus","mapStateToProps","state","Login","EmailStatus","props","dataStateChange","event","setState","dataResult","masterData","dataState","closeModal","loadEsign","openModal","selectedRecord","updateInfo","typeName","data","selectedId","onInputOnChange","target","type","name","checked","YES","NO","value","reSent","operation","ncontrolcode","inputParam","classUrl","methodUrl","inputData","nrunningno","userInfo","displayName","esignNeeded","userRoleControlRights","nformcode","screenData","screenName","intl","formatMessage","id","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","formRef","createRef","extractedColumnList","fieldList","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","undefined","onSaveClick","previousProps","Object","values","map","item","push","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport { ListWrapper } from '../../../components/client-group.styles';\r\nimport { callService, crudMaster, validateEsignCredential, updateStore } from '../../../actions';\r\nimport { getControlMap, showEsign } from '../../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../audittrail/Esign';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass EmailStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n                loadEsign = false;\r\n                openModal = false;\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,selectedId:null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_SUBJECT\", \"dataField\": \"ssubject\", \"width\": \"250px\" },\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_RECIPICIENT\", \"dataField\": \"srecipientusers\", \"width\": \"250px\" },\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_MAILSTATUS\", \"dataField\": \"ssentstatus\", \"width\": \"250px\" },\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_SENTDATE\", \"dataField\": \"stransdate\", \"width\": \"250px\" },\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nrunningno\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                   // detailedFieldList={this.detailedFieldList}\r\n                                    //expandField=\"expanded\"\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    //fetchRecord={this.props.fetchEmailHostById}\r\n                                  //  deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    //editParam={editParam}\r\n                                   // deleteParam={deleteParam}\r\n                                   // addRecord={() => this.props.openEmailHostModal(\"IDS_MAILHOST\", \"create\", \"nemailhostcode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                    // isComponent={true}\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    reSent={this.reSent}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>   \r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : \"\"\r\n                        }\r\n                    />\r\n                }\r\n               \r\n            </>\r\n        );\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    reSent=(event,operation,ncontrolcode)=>{\r\n        const inputParam = {\r\n            classUrl: \"emailstatus\",\r\n            methodUrl: \"reSentMail\",\r\n\r\n            inputData: {\r\n                \"nrunningno\": event.nrunningno,\r\n                \"ncontrolcode\": ncontrolcode,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: \"create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            dataState: this.state.dataState\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: \"create\"\r\n\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        } \r\n    }\r\n\r\n   \r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"EmailStatus\",\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n   \r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, validateEsignCredential, updateStore })(injectIntl(EmailStatus));"]},"metadata":{},"sourceType":"module"}