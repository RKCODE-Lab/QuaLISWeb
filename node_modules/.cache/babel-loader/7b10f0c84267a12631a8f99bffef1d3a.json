{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import React from'react';import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad,filterRecordBasedOnPrimaryKeyName,reArrangeArrays,childComboLoadForEdit}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{//RegistrationSubType, RegistrationType, \nSampleType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';import{Operators,TextFilter,NumericFilter,// BooleanFilter,\nDateFilter// EnumFilter,\n//  EnumFilterProps,\n}from\"@progress/kendo-react-data-tools\";import{ComboBox}from\"@progress/kendo-react-dropdowns\";import{Utils as QbUtils}from\"react-awesome-query-builder\";var checkTree=QbUtils.checkTree,loadTree=QbUtils.loadTree;export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.ntransactionsamplecode.length>0){var inputParamData={ntransactionsamplecode:inputData.ntransactionsamplecode,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"comments/getSubSampleComment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_defineProperty({masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSubSample:inputData.selectedSubSample// selectedTestCode: inputData.ntransactiontestcode,\n}),loading:false,showFilter:false,activeSubSampleTab:inputData.activeSubSampleTab,screenName:inputData.screenName,activeTestTab:inputData.activeSubSampleTab},\"screenName\",inputData.screenName)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{//toast.info(\"Please Select a Sample\");\ntoast.info(intl.formatMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){// const RegistrationSubType = response.data[\"RegistrationSubType\"];\n//  console.log(response.data);\n// RegistrationSubType.length > 0 ?\n//     selectedRecord[\"nregsubtypecode\"] = {\n//         \"value\": RegistrationSubType[0].nregsubtypecode,\n//         \"label\": RegistrationSubType[0].sregsubtypename\n//     } : selectedRecord[\"nregsubtypecode\"] = \"\";\n// const [labelname] = event.item;\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function onApprovalConfigVersionChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getApprovalConfigBasedTemplateDesign\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getComponentTestBySpec(Map,selectedRecord,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getComponentTestBySpec\",Map).then(function(response){var _response$data=response.data,Component=_response$data.Component,Test=_response$data.Test;var slno=Component.length>0?Component[0].slno:-1;var selectedComponent=Component.length>0?Component[0]:undefined;var SelectedTest=[];if(Object.keys(Test).length>0){SelectedTest=Test[slno];}dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectedComponent:selectedComponent,loading:false,selectedRecord:selectedRecord,popUptestDataState:{skip:0,take:10}}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestfromDB(objComponent,LoginProps,nflag){return function(dispatch){dispatch(initRequest(true));var component=_objectSpread({},objComponent);component[\"ncomponentcode\"]=objComponent[\"ncomponentcode\"]?objComponent[\"ncomponentcode\"].value:-1;component[\"nstoragelocationcode\"]=objComponent[\"nstoragelocationcode\"]?objComponent[\"nstoragelocationcode\"].value:-1;component[\"nstorageconditioncode\"]=objComponent[\"nstorageconditioncode\"]?objComponent[\"nstorageconditioncode\"].value:-1;component[\"slno\"]=LoginProps.Component?Object.keys(LoginProps.Component).length+1:0;component[\"scomponentname\"]=objComponent[\"ncomponentcode\"].label;component[\"sstoragelocationname\"]=objComponent[\"nstoragelocationcode\"]&&objComponent[\"nstoragelocationcode\"].label?objComponent[\"nstoragelocationcode\"].label:\"\";component[\"sstorageconditionname\"]=objComponent[\"nstorageconditioncode\"]&&objComponent[\"nstorageconditioncode\"].label?objComponent[\"nstorageconditioncode\"].label:\"\";component[\"ntzdmanufdate\"]=objComponent[\"ntzdmanufdate\"]?objComponent[\"ntzdmanufdate\"].value:-1;component[\"ntzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].value:-1;component[\"stzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].label:\"\";component[\"nplasmafilecode\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].value:-1;component[\"splasmafilenumber\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].label:\"\";var dreceiveddate=objComponent[\"dreceiveddate\"];component[\"dreceiveddate\"]=dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\ncomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\n// rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\nrsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:component.nspecsampletypecode,slno:component.slno,nneedsubsample:LoginProps.masterData.RealRegSubTypeValue.nneedsubsample}).then(function(response){var TestData=response.data;var slno=component.slno;var SelectedTest=[];var loadComponent=true;var selectComponent={};var showSaveContinue=true;var SelectedSource=[];// let openChildModal = true;\nvar selectedComponent=undefined;var parentPopUpSize=\"lg\";// selectComponent = objComponent\nif(nflag===1){loadComponent=true;objComponent[\"smanuflotno\"]=\"\";objComponent[\"dreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nobjComponent[\"sreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nselectComponent=objComponent;}else{loadComponent=false;parentPopUpSize=\"xl\";// openChildModal = false;\nshowSaveContinue=false;selectComponent=undefined;}var Test=LoginProps.Test||[];var Component=LoginProps.Component||[];Component.unshift(component);selectedComponent=component;Test[slno]=response.data;SelectedTest=TestData;dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectComponent:selectComponent,selectedComponent:selectedComponent,loadComponent:loadComponent,showSaveContinue:showSaveContinue,parentPopUpSize:parentPopUpSize,loading:false,SelectedSource:SelectedSource}});// console.log(response.data);\n}).catch(function(error){//   console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function EditComponent(Map,component,userInfo){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var TimeZoneField=response[1].data;var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};component[\"dreceiveddate\"]=rearrangeDateFormat(userInfo,component[\"sreceiveddate\"]);component[\"scomments\"]=component[\"scomments\"];var ntzdreceivedate=component.ntzdreceivedate;if(component.ntzdreceivedate!==null&&typeof component.ntzdreceivedate===\"object\"){ntzdreceivedate=component.ntzdreceivedate.value;}component[\"ntzdreceivedate\"]=component.ntzdreceivedate?{\"label\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].stimezoneid,\"value\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].ntimezonecode}:\"\";dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,childoperation:\"update\",lstComponent:lstComponent,ChildscreenName:\"Component\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",timeZoneList:timeZoneList,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";//masterData['searchedTests'] = undefined\nmasterData['searchedTest']=undefined;}// let selectedFilter = inputData.selectedFilter;\n// selectedFilter[\"fromdate\"] = \"\";\n// selectedFilter[\"todate\"] = \"\";\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined//selectedFilter\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function getTreeByProduct(Map,selectedRecord,comboData,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getTreeByProduct\",Map.nsampletypecode===SampleType.CLINICALTYPE&&Map.nportalrequired===transactionStatus.YES&&selectedRecord[\"Order Type\"]&&selectedRecord[\"Order Type\"].value==2?_objectSpread(_objectSpread({},Map),{},{nordertypecode:selectedRecord[\"Order Type\"].value,nallottedspeccode:selectedRecord[\"Order\"]&&selectedRecord[\"Order\"].item.jsondata.nallottedspeccode}):Map).then(function(response){var _ref=[],Specification=_ref.Specification,AgaramTree=_ref.AgaramTree,ActiveKey=_ref.ActiveKey,FocusKey=_ref.FocusKey,OpenNodes=_ref.OpenNodes;var selectedSpec={};if(response.data[\"rtn\"]===true){Specification=constructOptionList(response.data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response.data[\"AgaramTree\"];ActiveKey=response.data[\"ActiveKey\"];FocusKey=response.data[\"FocusKey\"];OpenNodes=response.data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;}selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);if(Map.nsampletypecode===SampleType.CLINICALTYPE&&Map.nportalrequired&&Map.nportalrequired===3&&selectedRecord[\"Order Type\"].value===2){var dispatchData=_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{},subSampleDataGridList:[]});dispatch(autoExternalComponentLoadBasedOnSpec(dispatchData));}else{dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{},subSampleDataGridList:[],addMaster:false,masterIndex:undefined})});}}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getNewRegSpecification=function getNewRegSpecification(inputParam,masterData){return function(dispatch){if(inputParam.selectedNode!==null){dispatch(initRequest(true));rsapi.post(\"/registration/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},{ntreetemplatemanipulationcode:inputParam.selectedNode.ntemplatemanipulationcode})).then(function(response){sortData(response.data);var Specification=constructOptionList(response.data||[],\"nallottedspeccode\",\"sspecname\",false,false,true).get(\"OptionList\");var selectedComponent=undefined;inputParam.selectedRecord[\"nallottedspeccode\"]=Specification.length>0?{value:Specification[0].value,label:Specification[0].label,item:Specification[0].item}:\"\";inputParam.selectedRecord[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";inputParam.selectedRecord[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;dispatch({type:DEFAULT_RETURN,payload:{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey,Specification:Specification,selectedNode:inputParam.selectedNode,selectedRecord:inputParam.selectedRecord,Test:[],selectedComponent:selectedComponent,SelectedTest:[],loading:false,showSample:undefined}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.info(error.response.data);}else{toast.error(error.message);}});}};};export function AddComponents(Map){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");var dreceiveddate=null;if(lstComponent[0].item.sreceiveddate)dreceiveddate=rearrangeDateFormat(Map[\"userinfo\"],lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\nvar selectComponent={sreceiveddate:dreceiveddate,dreceiveddate:dreceiveddate,ntzdreceivedate:{\"label\":Map[\"userinfo\"].stimezoneid,\"value\":Map[\"userinfo\"].ntimezonecode},stzdreceivedate:Map[\"userinfo\"].stimezoneid,scomments:\"\",nallottedspeccode:lstComponent[0].item.nallottedspeccode};var CurrentTime=dreceiveddate;dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,lstComponent:lstComponent,dreceiveddate:dreceiveddate,ChildscreenName:\"Component\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",selectComponent:selectComponent,parentPopUpSize:\"lg\",CurrentTime:CurrentTime,timeZoneList:timeZoneList,loading:false,openPortal:true,openModal:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getAllTest(objComponent,LoginProps,nneedsubsample,specBasedComponent,selectPackage1,specBasedTestPackage,selectPackage){return function(dispatch){if(Object.keys(objComponent).length>0){dispatch(initRequest(true));rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true//    ntestpackagecode:selectPackage.ntestpackagecode.value\n}).then(function(response){var PackageData=[];var TestCombined=[];//   const TestCombined = response.data;\nvar TestData=response.data;var Test=LoginProps.Test||[];var componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestgrouptestcode\");dispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,TestPackage:PackageData,selectPackage:[],loadTest:true,openChildModal:false,ChildscreenName:intl.formatMessage({id:\"IDS_TEST\"}),screenName:intl.formatMessage({id:\"IDS_TEST\"}),operation:\"create\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});}else{toast.info(intl.formatMessage({id:\"IDS_SELECTCOMPONENTTOADDTEST\"}));}};}export function getTest(objComponent,LoginProps,nneedsubsample,specBasedComponent,selectPackage1,specBasedTestPackage,selectPackage){return function(dispatch){// if (Object.keys(objComponent).length > 0) {\nvar urlArray=[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true//    ntestpackagecode:selectPackage.ntestpackagecode.value\n});urlArray[0]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true});urlArray[1]=TestPackageGet;dispatch(initRequest(true));Axios.all(urlArray).then(function(response){// const TestCombined = [];\nvar PackageData=[];//  if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[1].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");//    }\n//    else {\nvar TestData=response[0].data;var Test=LoginProps.Test||[];var componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestcode\");//    }\n// const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\n//\"stestsynonym\", undefined, undefined, true);\ndispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,TestPackage:PackageData,selectPackage:[],AllTest:TestData,loadTest:true,openChildModal:false,ChildscreenName:intl.formatMessage({id:\"IDS_TEST\"}),screenName:intl.formatMessage({id:\"IDS_TEST\"}),operation:\"create\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});// } else {\n//     toast.info(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\n// }\n};}export function addsubSample(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData,selectedRecord,conditionalTestPackage,specBasedTestPackage,LoginProps){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList?columnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}):[],childcolumnlist:childColumnList?childColumnList:[],userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent//   conditionalTestPackage:true\n}));urlArray[2]=ComponentTestBySpec;}else{Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,nneedsubsample:Map[\"nneedsubsample\"],// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage});urlArray[2]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nallottedspeccode:Map[\"nallottedspeccode\"],// slno: Component ? Object.keys(Component).length + 1 : 1,\nspecBasedComponent:specBasedComponent//   specBasedTestPackage: specBasedTestPackage,\n//  conditionalTestPackage: conditionalTestPackage\n});urlArray[5]=TestPackageGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{/// if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[5].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n// }                      \n// }\n// else {\nTestCombined=response[2].data;//}\n}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});//console.log(\"selectedRecord1 action1:\", selectedRecord1);\n// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = comboData1['Container Type'] || []\n//     comboData1['ContainerType'] = comboData1['Container Type'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     comboData1['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),screenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,childSubSampleColumnList:childColumnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,selectPackage:[],TestPackage:PackageData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);return function(dispatch){if(!specBasedComponent){var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getTestfromDB\",_objectSpread(_objectSpread({nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1},Map),{},{// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage}));urlArray[0]=ComponentTestBySpec;var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[1]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[2]=dateService;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{//  nspecsampletypecode: selectedobject.nspecsampletypecode,\nnallottedspeccode:selectedRecord.nallottedspeccode.item.nallottedspeccode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[3]=TestPackageGet;Axios.all(urlArray).then(function(response){var TestCombined=[];var PackageData=[];//  if (!specBasedTestPackage) {\nTestCombined=response[0].data;// } \n// else {\nvar PackageDataMap=constructOptionList(response[3].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//    dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n//} \n// }\nvar selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = SubSamplecomboData['ContainerType'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     SubSamplecomboData['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),screenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),TestCombined:TestCombined,TestPackage:PackageData}});});}else{// Component = Component ? Component : []\nvar _urlArray=[];var _ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent}));_urlArray[0]=_ComponentTestBySpec;var _currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});_urlArray[1]=_currentDate;var _dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});_urlArray[2]=_dateService;Axios.all(_urlArray).then(function(response){// const lstComponent =  response.data.lstComponent\nvar lstComponent=response[0].data.lstComponent;//filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\nvar lstComponentMap=constructOptionList(lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = SubSamplecomboData['ContainerType'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     SubSamplecomboData['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),screenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),TestCombined:[],selectedTestData:[],selectPackage:[]}});});}};}}// export function componentTestPackage(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage) {\n//     return function (dispatch) {\n//         dispatch(initRequest(true));\n//         Component = Component ? Component : []\n//         rsapi.post(\"/registration/getTestfromDB\", {\n//             nspecsampletypecode: selectedobject.selectedSubSample &&\n//             [...new Set(selectedobject.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"),\n//             conditionalTestPackage: true,\n//             specBasedTestPackage: specBasedTestPackage,\n//             specBasedComponent: specBasedComponent,\n//             nallottedspeccode:selectedobject.selectedSample[0].nallottedspeccode\n//         })\n//             .then(response => {\n//                 let PackageData = []\n//                 let TestData=[]\n//                 if (specBasedTestPackage) {\n//                     const PackageDataMap = constructOptionList(response.data.TestPackage || [], \"ntestpackagecode\",\n//                         \"stestpackagename\", undefined, undefined, true);\n//                     PackageData = PackageDataMap.get(\"OptionList\");\n//                     // if (PackageData.length === 0) {\n//                     //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n//                     // } \n//                 }\n//                 else {\n//                      TestData = response.data;\n//                 }\n//                 //let Test = [];\n//                 // Test[selectedobject.slno] = TestData;\n//                 const Map = {}\n//                 if (Reg) {\n//                     delete selectedobject.ntestpackagecode\n//                     delete selectedobject.ntestgrouptestcode\n//                     Map[\"selectedRecord\"] = selectedobject\n//                 } else {\n//                     Map[\"selectComponent\"] = selectedobject\n//                 }\n//                 dispatch({\n//                     type: DEFAULT_RETURN,\n//                     payload: {\n//                         TestCombined: TestData, TestPackage: PackageData,\n//                         ...Map,\n//                         loading: false, selectedTestData: [],\n//                         availableTest:[],\n//                       //  selectPackage: {},\n//                         screenName: \"IDS_TEST\",\n//                         operation: \"create\",\n//                         openModal: true,\n//                         parentPopUpSize: \"lg\",\n//                         loadChildTest: true,\n//                        //selectedRecord:{},\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 toast.error(error.message);\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//             })\n//     }\n// }\nexport function componentTest(selectedobject,Reg,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage){return function(dispatch){dispatch(initRequest(true));var urlArray=[];Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage,nneedsubsample:selectedobject.nneedsubsample});urlArray[0]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[1]=TestPackageGet;Axios.all(urlArray).then(function(response){var PackageData=[];var TestData=[];// if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[1].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n// } \n//   }\n//    else {\nTestData=response[0].data;//  }\n//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({TestCombined:TestData,AllTest:TestData,TestPackage:PackageData},Map),{},{loading:false,selectedTestData:[],selectPackage:[]})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}// export function testPackageTest(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage,selectComponent,objComponent,LoginProps,selectPackage,subSampleBased,selectedSpec,nneedsubsample) {\nexport function testPackageTest(selectedobject,Reg,specBasedComponent,Component,selectComponent,objComponent,LoginProps,selectPackage,subSampleBased,selectedSpec,nneedsubsample){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];// rsapi.post(\"/registration/getTestBasesdTestPackage\", {\n//     nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode: Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,\n//     slno:subSampleBased?Component ? Object.keys(Component).length + 1 : 1:selectComponent.slno,\n//     specBasedComponent: specBasedComponent,\n//     ntestpackagecode: selectPackage.ntestpackagecode.value,\n//     nallottedspeccode:selectedSpec!==undefined?selectedSpec.value:selectedobject.nallottedspeccode\n// })\nrsapi.post(\"/registration/getTestBasesdTestPackage\",{// nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode: Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,\nnspecsampletypecode:selectComponent&&selectComponent.nspecsampletypecode?selectComponent.nspecsampletypecode:selectedobject.nspecsampletypecode,//     slno: subSampleBased ? Component ? Object.keys(Component).length + 1 : 1 : selectComponent.slno,\nspecBasedComponent:specBasedComponent,ntestpackagecode:selectPackage.ntestpackagecode.value,nallottedspeccode:selectedSpec&&selectedSpec.value!==undefined?selectedSpec.value:selectedobject.nallottedspeccode}).then(function(response){var Map={};var TestData=response.data;var Test=LoginProps.Test||[];var componentTest=[];if(subSampleBased){componentTest=Test[Component?Object.keys(Component).length+1:1]?Test[Component?Object.keys(Component).length+1:1]:[];}else{componentTest=objComponent&&Test[objComponent.slno]?Test[objComponent.slno]:[];}var availableTest=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestcode\");var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestcode\");delete selectedobject.ntestgrouptestcode;if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectPackage\"]=selectPackage;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({availableTest:availableTest,TestCombined:TestCombined},Map),{},{loading:false,selectedTestData:[]//, selectPackage: []\n// TestCombined,loadTest: true, openChildModal: false,\n// ChildscreenName: \"Test\",\n//  screenName: \"Test\",\n// operation: \"create\",\n//  childoperation: \"create\",\n//   parentPopUpSize: \"lg\", loading: false\n})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function addSubSampleSaveContinue(Map1,Map,specBasedComponent,Component,selectedTestData,lstComponent){//  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\n//     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\nreturn function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],nspecsampletypecode:Map[\"nspecsampletypecode\"],slno:Map1.Component?Object.keys(Map1.Component).length+1:1,specBasedComponent:specBasedComponent,nneedsubsample:Map[\"nneedsubsample\"]}).then(function(response){var TestCombined=response.data;// let selectedTestPackageData = selectedTestPackageData && selectedTestPackageData.length > 0 ? selectedTestData : []\nvar selectedTestPackageData=selectedTestData&&selectedTestData.length>0?selectedTestData:[];var selectedTestPackageData1=TestCombined.filter(function(x){return selectedTestPackageData.some(function(y){return x[\"ntestpackagetestcode\"]===y.value;});});selectedTestData=selectedTestData&&selectedTestData.length>0?selectedTestPackageData:[];var selectedTestData1=TestCombined.filter(function(x){return selectedTestData.some(function(y){return x[\"ntestgrouptestcode\"]===y.value;});});selectedTestData=constructOptionList(selectedTestData1,\"ntestgrouptestcode\",\"stestsynonym\");selectedTestData[\"ntestgrouptestcode\"]=selectedTestData.get(\"OptionList\");selectedTestPackageData=constructOptionList(selectedTestPackageData1,\"ntestpackagetestcode\",\"stestpackagename\");selectedTestPackageData[\"ntestpackagetestcode\"]=selectedTestPackageData.get(\"OptionList\");// Map1.selectComponent = {};\nMap1.selectComponent=_objectSpread({},Map1.saveContinueData);// Map1.selectComponent[\"ncomponentcode\"] = {};\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:TestCombined,selectPackage:[],//TestPackage\n//selectedTestData,\n//selectedTestPackageData,\nselectedTestData:[],selectedTestPackageData:[],masterStatus:intl.formatMessage({id:\"IDS_SAVESUCCESSFULLY\"})})});});}else{// lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\n// Map1.selectComponent = {};\n// Map1.selectComponent[\"ncomponentcode\"] = {};           \n// Map1.selectComponent[\"Sample Name\"] = \"\";\nMap1.selectComponent=_objectSpread(_objectSpread({},Map1.saveContinueData),{},{\"ncomponentcode\":{}});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:[],selectPackage:[],TestPackage:[],selectedTestData:[],selectedTestPackageData:[],lstComponent:lstComponent,masterStatus:intl.formatMessage({id:\"IDS_SAVESUCCESSFULLY\"})})});}};}export function editSubSample(Map,component,userInfo,specBasedComponent,SubSamplecomboData,selectedRecord){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var Componnet={};if(specBasedComponent){Componnet=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread({},Map));}urlArray=[Componnet];Axios.all(urlArray).then(function(response){var comp=[];if(specBasedComponent){comp=response[0].data.lstComponent;}var lstComponentMap=constructOptionList(comp||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");if(Map.nregsubtypecode===6){var portalOrder=component['Container Type']||{};var containerType=SubSamplecomboData['ContainerType']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});SubSamplecomboData['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{loadSubSample:true,childoperation:\"update\",ChildscreenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,SubSamplecomboData:SubSamplecomboData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===\"Success\"){var _objectSpread6;var RegistrationGetSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.RegistrationGetSample);var selectedSample=response.data[\"selectedSample\"];var RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"RegistrationGetTest\"];var selectedSubSample=RegistrationGetSubSample;RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];if(inputParam.inputData.nneedsubsample){RegistrationGetSubSample=sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc');selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=RegistrationGetTest.filter(function(x){return x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode;});selectedTest=RegistrationGetTest.length>0?response.data[\"selectedTest\"]:[];}// RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\nif(inputParam.multipleselectionFlag){selectedSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.selectedSample);updatedObjectWithNewElement(response.data[\"selectedSubSample\"],masterData.RegistrationGetSubSample);updatedObjectWithNewElement(response.data[\"selectedTest\"],masterData.RegistrationGetTest);RegistrationGetSubSample=masterData.RegistrationGetSubSample;RegistrationGetTest=masterData.RegistrationGetTest;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationGetSample:RegistrationGetSample});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread6={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread6,\"selectedRecord\",{}),_defineProperty(_objectSpread6,\"SelectedTest\",[]),_defineProperty(_objectSpread6,\"Test\",[]),_defineProperty(_objectSpread6,\"selectedComponent\",{}),_defineProperty(_objectSpread6,\"subSampleDataGridList\",[]),_defineProperty(_objectSpread6,\"preregConfirmMessage\",undefined),_objectSpread6));inputParam.postParamList[0]['clearFilter']='yes';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{toast.info(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});}}).catch(function(error){// console.log(error);             \nif(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,preregConfirmMessage:error.response.data.rtn,preregConfirmParam:{inputParam:inputParam,masterData:masterData},loading:false,showSample:undefined}});}else{toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});}}});};}export function insertRegistrationScheduler(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/schedulerinsertRegistration\",inputParam.inputData).then(function(response){var _objectSpread7;// if (response.data.rtn === \"Success\") {\n//     let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n//     let selectedSample = response.data[\"selectedSample\"];\n//     let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//     let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\n//     let selectedSubSample = RegistrationGetSubSample;\n//     RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\n//     let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\n//     if (inputParam.inputData.nneedsubsample) {\n//         RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\n//         selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\n//         RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\n//         selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\n//     }\n//     // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\n//     if (inputParam.multipleselectionFlag) {\n//         selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\n//         updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\n//         updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\n//         RegistrationGetSubSample = masterData.RegistrationGetSubSample;\n//         RegistrationGetTest = masterDat..a.RegistrationGetTest;\n//     }\n//     masterData = {\n//         ...masterData, ...response.data,\n//         selectedSample, selectedSubSample, selectedTest,\n//         RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\n//     }\nvar respObject=_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},masterData),{},{SchedulerTransaction:response[\"data\"].SchedulerTransaction})},inputParam.inputData),{},(_objectSpread7={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread7,\"selectedRecord\",{}),_defineProperty(_objectSpread7,\"SelectedTest\",[]),_defineProperty(_objectSpread7,\"Test\",[]),_defineProperty(_objectSpread7,\"selectedComponent\",{}),_defineProperty(_objectSpread7,\"subSampleDataGridList\",[]),_objectSpread7));// inputParam.postParamList[0]['clearFilter'] = 'yes'\n// dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread({},respObject)});// } else {\n//     toast.info(response.data.rtn);\n//     dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\n// }\n}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getRegistrationSample(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var respObject={};if(inputData.selectedFilter){respObject={selectedFilter:_objectSpread({},inputData.selectedFilter)};}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampleskip:0,subsampletake:undefined,showSample:undefined},respObject),{},{activeSampleTab:inputData.inputData.activeSampleTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function getRegistrationsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeTestTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,//ntype: inputData.checkBoxOperation === 7 ? 2 : undefined,\nntype:inputData.checkBoxOperation===7?4:undefined,//ALPD-497\ncheckBoxOperation:inputData.nneedsubsample===true?inputData.checkBoxOperation===5?3:inputData.checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data,\"descending\",\"npreregno\");sortData(response.data['RegistrationAttachment']);sortData(response.data['RegistrationComment']);var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedTest||[];if(subSample){var oldSelectedSubSample=inputData.masterData.selectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedSubSample:inputData.masterData.RegistrationGetSubSample.length>0?[inputData.masterData.RegistrationGetSubSample[0]]:[]});var RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];var RegistrationComment=[];//if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \nif(inputData.checkBoxOperation===1){var wholeSubSampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSubSample:oldSelectedSubSample});}var selectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.selectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:selectedTest});}if(inputData.checkBoxOperation===7){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nswitch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData));}var _ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationComment\"]=RegistrationComment;}if(inputData.checkBoxOperation===3||inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:masterData.RegistrationGetTest.length>0?[masterData.RegistrationGetTest[0]]:[]});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData2=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData2));}var _ntransactiontestcode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData4=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData4));}var _ntransactiontestcode4=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData));var _ntransactiontestcode3=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:var _ResponseData3=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData3));}var _ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment2,_ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationComment\"]=RegistrationComment;}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;var bool=false;if(inputData.masterData.RegistrationGetSubSample.length<inputData.subsampleskip){testskip=0;subsampleskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}}else{//let oldSelectedTest = inputData.masterData.selectedTest\n//  let oldSelectedSubSample = inputData.masterData.selectedSubSample\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],selectedSubSample:inputData.masterData.RegistrationGetSubSample});var _RegistrationTestComment3=[];var _RegistrationParameter2=[];var _RegistrationTestAttachment2=[];var _RegistrationComment=[];if(inputData.checkBoxOperation===7||inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var _ntransactiontestcode5;var npreregno;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode5=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";npreregno=inputData.masterData.RegistrationGetSample.length>0?inputData.masterData.RegistrationGetSample[0].npreregno:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=keepOld?inputData.masterData.RegistrationComment?inputData.masterData.RegistrationComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationComment,npreregno,\"npreregno\");activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData5=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment4=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData5));}var _ntransactiontestcode6=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment4,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData7=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment3=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment3=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData7));}var _ntransactiontestcode8=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestAttachment2=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment3,_ntransactiontestcode8,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData2=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter3=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData2));var _ntransactiontestcode7=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationParameter2=getRecordBasedOnPrimaryKeyName(_RegistrationParameter3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:var _ResponseData6=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment5=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment5=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData6));}var _ntransactionTestCode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment5,_ntransactionTestCode2,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_SAMPLECOMMENTS\":_RegistrationComment=response.data.RegistrationComment?_toConsumableArray(response.data.RegistrationComment):[];activeName=\"RegistrationComment\";dataStateName=\"sampleCommentsDataState\";break;default:_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=_RegistrationTestComment3;masterData[\"RegistrationParameter\"]=_RegistrationParameter2;masterData['RegistrationTestAttachment']=_RegistrationTestAttachment2;masterData['RegistrationComment']=_RegistrationComment;var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}// let inputParam = { attachmentskip: undefined }\nif(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.selectedTest;var oldSelectedSubSample=inputData.masterData.selectedSubSample;// let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\nvar isGrandChildGetRequired=false;var TestSelected=[];var subSampleSelected=[];if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var selectedSample=inputData.selectedSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,inputData.masterData.RegistrationGetTest,\"ntransactiontestcode\");var selectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];var ntransactiontestcode=selectedTest.length>0?selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";var selectedSubSample=inputData.masterData.RegistrationGetSubSample;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");selectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.RegistrationGetSubSample[0]];if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest});if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},_defineProperty({childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3,skipInfo:skipInfo},\"masterData\",masterData));if(subSample){if(selectedTest.length===0){inputData[\"npreregno\"]=selectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];dispatch(getRegistrationTestDetail(inputData,true));}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:TestSelected?TestSelected:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],// RegistrationTestComment,\nselectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.RegistrationGetSubSample});var subsamplecheck=true;if(subSample){var SubSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");if(SubSampleSelected.length>0){var _filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");if(_filterSelectedSubSample.length===0){var wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});if(oldSelectedSubSample.length===0&&wholeSubSample.length>0&&_masterData.selectedTest.length===0){var selectedSubSample1=[inputData.masterData.RegistrationGetSubSample[0]];_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:selectedSubSample1,selectedTest:[]});inputData=_objectSpread(_objectSpread({},inputData),_masterData);inputData[\"npreregno\"]=selectedSubSample1.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample1.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];subsamplecheck=false;dispatch(getRegistrationTestDetail(inputData,true));}}else{oldSelectedSubSample=_filterSelectedSubSample;}}else{var _wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!_wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});}if(subsamplecheck){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:oldSelectedSubSample});}if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;_skipInfo={subsampleskip:subsampleskip,subsampletake:subsampletake};}}var wholeTestList=_masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode9;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode9=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode9,\"ntransactiontestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode9,\"ntransactiontestcode\");var _skipInfo={};if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},{testskip:testskip,testtake:testtake});}var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},_skipInfo)});}}};}export function getRegistrationTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionsamplecode:inputData.ntransactionsamplecode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,checkBoxOperation:inputData.checkBoxOperation,nneedsubsample:inputData.nneedsubsample};var subSample=inputData.nneedsubsample;var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data);var oldSelectedTest=inputData.masterData.selectedTest||[];var oldSelectedSubSample=inputData.masterData.selectedSubSample||[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactionsamplecode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]// RegistrationTestComment,\n});//let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];var RegistrationSampleComment=[];var RegistrationSampleAttachment=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode10=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode10,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData8=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData8));}var _ntransactiontestcode11=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode11,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else if(inputData.checkBoxOperation===7){var testList=reArrangeArrays(inputData.masterData.RegistrationGetSubSample,response.data.RegistrationGetTest,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:testList?testList.length>0?[testList[0]]:[]:[],RegistrationGetTest:testList?testList.length>0?testList:[]:[]//ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData9=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment6=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment6=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData9));}var _ntransactiontestcode12=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment6,_ntransactiontestcode12,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData11=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment4=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData11));}var _ntransactiontestcode14=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment4,_ntransactiontestcode14,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData3=response.data.RegistrationParameter?response.data.RegistrationParameter:[];// let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\nvar _RegistrationParameter4=_toConsumableArray(_resultResponseData3);var _ntransactiontestcode13=testList?testList.length>0?testList[0].ntransactiontestcode:inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter4,_ntransactiontestcode13,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData10=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment7=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment7=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData10));}var _ntransactionTestCode3=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment7,_ntransactionTestCode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}if(subSample){var wholeSubsampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld=false;var ntransactionsamplecode;if(oldSelectedSubSample.length>0){_keepOld=true;}else{ntransactionsamplecode=masterData.selectedSubSample[0].ntransactionsamplecode;}switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationSampleComment\"]=RegistrationSampleComment;masterData[\"RegistrationSampleAttachment\"]=RegistrationSampleAttachment;var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;var skipInfo={};if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}//  let inputParam = { attachmentskip: undefined }\nif(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTabIndex:inputData.activeTabIndex,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSubSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString():\"-1\";var selectedSubSample=inputData.selectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar selectedTest=inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetailRegistration(inputData,true));}else{var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]});var wholeTestList=_masterData2.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode15;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode15=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData2[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode15,\"ntransactiontestcode\");_masterData2[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode15,\"ntransactiontestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData2[arr.activeName]&&_masterData2[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData2,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,activeTabIndex:inputData.activeTabIndex},skipInfo)});}}};}export function acceptRegistration(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/acceptRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"||response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){if(response.data[\"PortalStatus\"]&&response.data[\"PortalStatus\"].length>0){dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"],inputParam));}replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined,showConfirmAlert:false,acceptConfirmMessage:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));if(response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){toast.info(intl.formatMessage({id:response.data.rtn}));}}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.info(intl.formatMessage({id:response.data.rtn}));}}).catch(function(error){// toast.error(error.message);           \nif(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{//toast.info(intl.formatMessage({ id: error.response.data[\"rtn\"] }));\nif(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,acceptConfirmMessage:error.response.data.rtn,acceptConfirmParam:{inputParam:inputParam,masterData:LoginProps},loading:false}});}else{toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,acceptConfirmMessage:undefined}});}}});};}export var addMoreTest=function addMoreTest(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedSample&&inputParam.selectedSample.length>0){if(inputParam.selectedSubSample&&inputParam.selectedSubSample.length>0){value=inputParam.selectedSubSample.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedSubSample[0].nspecsampletypecode;});if(value){return toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}sampleList=sampleList?_toConsumableArray(sampleList.slice(inputParam.skip,inputParam.take)):[];var selectedsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedSample,\"npreregno\");// const selectsubsample = getSameRecordFromTwoArrays(subsampleList, inputParam.selectedsubsample, \"ntransactionsamplecode\");\nif(selectedsample&&selectedsample.length>0){var findTransactionStatus=_toConsumableArray(new Set(selectedsample.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.RELEASED){// if (selectsubsample && selectsubsample.length > 0) {\n//     const findSubSampleStatus = [...new Set(selectsubsample.map(item => item.ntransactionstatus))];\n//\n//     if (findSubSampleStatus[0] !== transactionStatus.REJECT && findSubSampleStatus[0] !== transactionStatus.CANCELLED) \n//     {                    \nvar findApprovalVersion=_toConsumableArray(new Set(selectedsample.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedsample.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{inputParam[\"snspecsampletypecode\"]=inputParam.selectedSubSample&&_toConsumableArray(new Set(inputParam.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\");dispatch(initRequest(true));var urlArray=[];var TestGet=rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam));urlArray[0]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getMoreTestPackage\",_objectSpread({},inputParam));urlArray[1]=TestPackageGet;Axios.all(urlArray).then(function(response){var PackageData=[];var PackageDataMap=constructOptionList(response[1].data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{availableTest:response[0].data,AllTest:response[0].data,TestPackage:PackageData,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(_this.props.formatMessage({id:error.response.data}));}});}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}//     }\n//     else {\n//         toast.info(intl.formatMessage({ id: \"IDS_SUBSAMPLEISREJECTEDORCANCELLED\" }));\n//     }\n// }                               \n}else{toast.info(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORRELEASEDSAMPLES\"}));}}else{////     toast.info(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\ntoast.info(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};};export var createRegistrationTest=function createRegistrationTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _respObject;var RegistrationGetTest=updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"],response.data[\"RegistrationGetTest\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationGetTest:sortData(RegistrationGetTest,\"descending\",\"ntransactiontestcode\"),selectedTest:response.data[\"RegistrationGetTest\"],RegistrationParameter:response.data.RegistrationParameter// RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\n});var respObject=(_respObject={masterData:masterData},_defineProperty(_respObject,modalName,false),_defineProperty(_respObject,\"loading\",false),_defineProperty(_respObject,\"loadChildTest\",false),_defineProperty(_respObject,\"showSample\",undefined),_defineProperty(_respObject,\"openModal\",false),_defineProperty(_respObject,\"selectedRecord\",{}),_defineProperty(_respObject,\"showConfirmAlert\",false),_defineProperty(_respObject,\"createTestConfirmMessage\",undefined),_respObject);inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='no';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){if(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,createTestConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,createTestConfirmMessage:error.response.data.rtn,createTestConfirmParam:{inputParam:inputParam,masterData:masterData,modalName:modalName},//[modalName]: false,\nloading:false,loadChildTest:true,showSample:undefined//openModal: false,\n//selectedRecord: {}\n}});}else{var _payload2;dispatch({type:DEFAULT_RETURN,payload:(_payload2={},_defineProperty(_payload2,modalName,false),_defineProperty(_payload2,\"loading\",false),_defineProperty(_payload2,\"loadChildTest\",false),_defineProperty(_payload2,\"showSample\",undefined),_defineProperty(_payload2,\"openModal\",false),_defineProperty(_payload2,\"selectedRecord\",{}),_defineProperty(_payload2,\"createTestConfirmMessage\",undefined),_payload2)});toast.info(error.response.data.rtn);}}});};};export function getEditRegistrationComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation;var masterData=inputParam[\"masterData\"];if(masterData[\"selectedSample\"].length>1||masterData[\"selectedSample\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editRegParam[\"getSampleChildDetail\"]=true;}masterData[\"selectedSample\"]=[];masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);var npreregno=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{npreregno:npreregno,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:withoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userInfo});urlArray=[timeZoneService,selectedRegistration,dateService];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);// const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\n//  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\nvar timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};//  const newcomboData = parentChildComboLoad(columnList, response[1].data,\n// selectedRecord, childColumnList, withoutCombocomponent)\nif(selectedRecord.ntransactionstatus===transactionStatus.CANCELLED||selectedRecord.ntransactionstatus===transactionStatus.REJECT){toast.info(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDSAMPLE\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}withoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";if(date.nperiodcode){selectedRecord[date.label+\"value\"]=response[2].data[date.label]?new Date(response[2].data[date.label][\"datevalue\"]):null;}else{selectedRecord[date.label+\"value\"]=new Date();}if(date.hidebeforedate){selectedRecord[date.label+\"min\"]=selectedRecord[date.label+\"value\"];}if(date.hideafterdate){selectedRecord[date.label+\"max\"]=selectedRecord[date.label+\"value\"];}}});var _ref2=[],Specification=_ref2.Specification,AgaramTree=_ref2.AgaramTree,ActiveKey=_ref2.ActiveKey,FocusKey=_ref2.FocusKey,OpenNodes=_ref2.OpenNodes;var selectedSpec={};Specification=constructOptionList(response[1].data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response[1].data[\"AgaramTree\"];ActiveKey=response[1].data[\"FocusKey\"];FocusKey=response[1].data[\"ActiveKey\"];OpenNodes=response[1].data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);if(inputParam.editRegParam[\"getSampleChildDetail\"]===true){masterData=sortData(_objectSpread(_objectSpread({},masterData),response[1].data[\"SampleChildDetail\"]));}dispatch({type:DEFAULT_RETURN,payload:{AgaramTree:AgaramTree,FocusKey:FocusKey,ActiveKey:ActiveKey,OpenNodes:OpenNodes,selectedSpec:selectedSpec,Specification:Specification,// statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\n// currentTime,\noperation:\"update\",screenName:inputParam.masterData.RealRegSubTypeValue.sregsubtypename,// PopUpLabel: popUpLabel,\ntimeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openPortal:true,ncontrolCode:inputParam.editRegParam.ncontrolCode,loadPreregister:true,parentPopUpSize:\"xl\",loading:false,showSample:undefined,comboData:comboValues.comboData,childColumnList:childColumnList,comboComponents:comboComponents,withoutCombocomponent:withoutCombocomponent,columnList:columnList,masterData:masterData//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(intl.formatMessage({id:error.response.data}));}});};}export function updateRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===\"Success\"){// sortData(response.data);\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],masterData.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],masterData.RegistrationGetTest,\"ntransactiontestcode\");//  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\nmasterData=_objectSpread(_objectSpread({},masterData),{},{selectedSample:response.data[\"selectedSample\"],// selectedSubSample: masterData[\"selectedSubSample\"],\n//selectedTest:masterData[\"selectedTest\"],\n// RegistrationGetTest,\n// RegistrationGetSubSample,\nRegistrationParameter:masterData[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openPortal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,openModal:false,loadPreregister:false,selectedRecord:{},showSample:undefined}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}else{toast.info(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.info(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelTest\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nvar masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedTest:response.data[\"selectedTest\"],// RegistrationGetTest:response.data[\"RegistrationGetTest\"],\nRegistrationGetTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\")//  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\n});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:{},loading:false,loadPreregister:false,showSample:undefined});inputParam.postParamList[0]['clearFilter']='no';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSample\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function addsubSampleRegistration(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode,specBasedComponent,specBasedTestPackage){return function(dispatch){//console.log(\"spec:\", specBasedComponent);\nvar urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent,userinfo:userinfo}));urlArray[2]=ComponentTestBySpec;}else{var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true,nneedsubsample:Map[\"nneedsubsample\"]});urlArray[2]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{//  nspecsampletypecode: selectedobject.nspecsampletypecode,\nnallottedspeccode:Map[\"nallottedspeccode\"],//  slno: Component ? Object.keys(Component).length + 1 : 1,\nspecBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage//     conditionalTestPackage: conditionalTestPackage\n});urlArray[5]=TestPackageGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:regSubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{//if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[5].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n// } \n// }\n// else {\nTestCombined=response[2].data;// }\n}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}});dispatch({type:DEFAULT_RETURN,payload:{screenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"}),showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openModal:true,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,regchildSubSampleColumnList:regchildColumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,TestPackage:PackageData,//ALPD-624\ntestskip:0,subsampleskip:0}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveSubSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createSubSample\",inputParam.inputData).then(function(response){// let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n// let selectedSample = response.data[\"selectedSample\"];\nvar RegistrationGetSubSample=updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\nRegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];var RegistrationParameter=response.data[\"RegistrationParameter\"];RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode');var masterData=_objectSpread({},inputParam.inputData.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationParameter:RegistrationParameter});var respObject={masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false,showConfirmAlert:false,subSampleConfirmMessage:undefined};inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));//    dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         openModal: false,\n//         loadEsign: false,\n//         loading: false,\n//         showSample: undefined,\n//         selectedRecord: {},\n//         loadRegSubSample:false\n//     }\n// });\n}).catch(function(error){// console.log(error);\n// toast.error(error.message);\n// dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\nif(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,subSampleConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,subSampleConfirmMessage:error.response.data.rtn,subSampleConfirmParam:{inputParam:inputParam},loading:false}});}else{toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,subSampleConfirmMessage:undefined}});}}});};}export function getEditSubSampleComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent,specBasedComponent){return function(dispatch){var _inputParam2=_objectSpread({},inputParam),userInfo=_inputParam2.userInfo,operation=_inputParam2.operation,masterData=_inputParam2.masterData;if(masterData[\"selectedSubSample\"].length>1||masterData[\"selectedSubSample\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]=true;}masterData[\"selectedSubSample\"]=[];masterData[\"selectedSubSample\"].push(inputParam[\"mastertoedit\"]);inputParam.editSubSampleRegParam[\"npreregno\"]=inputParam[\"mastertoedit\"][\"npreregno\"];inputParam.editSubSampleRegParam[\"checkBoxOperation\"]=3;inputParam.editSubSampleRegParam[\"nfilterstatus\"]=inputParam[\"mastertoedit\"][\"ntransactionstatus\"];inputParam.editSubSampleRegParam[\"napprovalconfigcode\"]=inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];//inputParam.editSubSampleRegParam[\"withoutgetparameter\"] = 3;\nvar ntransactionsamplecode=inputParam.mastertoedit[inputParam.primaryKeyName];if(ntransactionsamplecode===undefined){toast.info(intl.formattedMessage({id:\"IDS_SELECTVALIDSUBSAMPLE\"}));}else{var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\",_objectSpread(_objectSpread({},inputParam.editSubSampleRegParam),{},{ntransactionsamplecode:ntransactionsamplecode,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:withoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userInfo});urlArray=[timeZoneService,selectedRegistration,dateService];// if(specBasedComponent){\n//     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\n//         ...Map,\n//         specBasedComponent: specBasedComponent\n//     })\n//     urlArray.push(ComponentTestBySpec) \n// }\ndispatch(initRequest(true));Axios.all(urlArray).then(function(response){var _payload3;var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};// if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\n//     toast.info(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\n//     dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\n// }\n//else {\n//               let lstComponent=[]\nif(specBasedComponent){selectedRecord[\"ncomponentcode\"]={label:selectedRecord[\"scomponentname\"],value:selectedRecord[\"ncomponentcode\"]};}var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList2=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}// withoutCombocomponent.map(date => {\n//     if (date.inputtype === 'date')\n//         selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\n//             rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\n// })\nwithoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";if(date.nperiodcode){selectedRecord[date.label+\"value\"]=response[2].data[date.label]?new Date(response[2].data[date.label][\"datevalue\"]):null;}else{selectedRecord[date.label+\"value\"]=new Date();}if(date.hidebeforedate){selectedRecord[date.label+\"min\"]=selectedRecord[date.label+\"value\"];}if(date.hideafterdate){selectedRecord[date.label+\"max\"]=selectedRecord[date.label+\"value\"];}}});selectedRecord=_objectSpread({},selectedRecord);if(inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]===true){masterData=_objectSpread(_objectSpread({},masterData),response[1].data[\"SubSampleChildDetail\"]);}dispatch({type:DEFAULT_RETURN,payload:(_payload3={operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true,screenName:\"IDS_SUBSAMPLE\"},_defineProperty(_payload3,\"operation\",\"update\"),_defineProperty(_payload3,\"specBasedComponent\",specBasedComponent),_defineProperty(_payload3,\"masterData\",masterData),_payload3)});// }\n}).catch(function(error){//console.log(\"error:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(intl.formatMessage({id:error.response.data}));}});}};}export function onUpdateSubSampleRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistrationSubSample\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\n//  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\nvar RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{// selectedSample: response.data[\"selectedSample\"],\nselectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,// RegistrationGetSubSample,\nRegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:intl.formatMessage({id:\"IDS_SUBSAMPLE\"})}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.info(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelSubSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSubSample\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{// selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\nselectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function preregRecordToQuarantine(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/quarantineRegistration\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\n// replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject={masterData:masterData,loading:false,loadEsign:false,openModal:false,showSample:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function getTestChildTabDetailRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode===\"\"){inputData.ntransactiontestcode=\"0\";}if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId}});}};}var toTimestamp=function toTimestamp(strDate){// const dt = new Date(strDate).getTime();\n// return dt / 1000;\nvar dt=strDate.getTime();return dt;};export function getDynamicFilter(inputParam){if(inputParam.component.inputtype==='frontendsearchfilter'){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];// const responseparam={}\nvar gridColumns=[];var fields=[];var datefileds=[];var multilingual=[];inputParam.component.filterfields.map(function(item){fields.push(filterObject(item,languageTypeCode,response.data));if(item.ismultilingual){multilingual.push(item.columnname);}if(item.filterinputtype===\"date\"){datefileds.push(item.columnname);}if(item.filterinputtype!=='predefinednumeric'){gridColumns.push(creategridColumns(item,languageTypeCode));}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;datefileds.map(function(x){jsondata[x+\"timestamp\"]=toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo,jsondata[x]));});multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});return jsondata;});var map={};if(inputParam.type==='design'){map=_objectSpread(_objectSpread({},map),{},{showFilter:true,selectedComponentpath:inputParam.selectedComponentpath});}else{map=_objectSpread(_objectSpread({},map),{},{loadCustomSearchFilter:true});}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({lstPatient:optionList,gridColumns:gridColumns,fields:fields,//  loadCustomSearchFilter: true\nloading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,kendoFilter:inputParam.component.kendoFilter||{logic:\"and\",filters:[]}},map)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}else if(inputParam.component.inputtype===\"backendsearchfilter\"){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var languageTypeCode=inputParam.userinfo.slanguagetypecode;var _filterObjectForReact=filterObjectForReactAwesomeFilter(inputParam.component.filterfields,languageTypeCode,response.data),fields=_filterObjectForReact.fields,gridColumns=_filterObjectForReact.gridColumns;var map={};var awesomeTree=inputParam.component.awesomeTree?checkTree(loadTree(inputParam.component.awesomeTree),inputParam.component.awesomeConfig):undefined;if(inputParam.component.awesomeTree&&inputParam.component.filterquery&&inputParam.component.filterquery!==''){map={filterquery:inputParam.component.filterquery};if(inputParam.type==='design'){map=_objectSpread(_objectSpread({},map),{},{filterquery:inputParam.component.filterquery,selectedFieldRecord:_objectSpread(_objectSpread({},inputParam.component),{},{awesomeTree:awesomeTree})});}}else{map={filterquery:''};if(inputParam.type==='design'){map=_objectSpread(_objectSpread({},map),{},{filterquery:inputParam.component.filterquery,selectedFieldRecord:_objectSpread(_objectSpread({},inputParam.component),{},{awesomeTree:awesomeTree})});}}if(inputParam.type==='design'){map=_objectSpread(_objectSpread({},map),{},{showFilter:true,selectedComponentpath:inputParam.selectedComponentpath});}else{map=_objectSpread(_objectSpread({},map),{},{loadCustomSearchFilter:true});}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({lstPatient:[],gridColumns:gridColumns,fields:fields,// loadCustomSearchFilter: true\nloading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,awesomeTree:awesomeTree,onExecute:true},map)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}}var datapredef={};var CustomFilter=function CustomFilter(props){var filter=props.filter,_props$data=props.data,data=_props$data===void 0?[]:_props$data,defaultItem=props.defaultItem;var onChange=function onChange(event){props.onFilterChange.call(undefined,{nextFilter:_objectSpread(_objectSpread({},props.filter),{},{value:event.target.value.value})});};return/*#__PURE__*/React.createElement(ComboBox,{onChange:onChange,data:filter.field?datapredef[filter.field]:[],textField:\"text\"});};export function creategridColumns(item,languageTypeCode){var obj={};if(item.filterinputtype!=='predefinednumeric'){return{field:item.columnname,title:item.displayname[languageTypeCode],width:\"250px\"};}}export function filterObjectForReactAwesomeFilter(filterFields,languageTypeCode,resposedata){var obj={};obj['fields']={};obj['gridColumns']=[];filterFields.map(function(item){if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['title']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];return jsondata;});datapredef[item.columnname]=optionList;}switch(item.filterinputtype){case\"text\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"text\",valueSources:[\"value\",\"func\"],mainWidgetProps:{\"valueLabel\":\"Name\",\"valuePlaceholder\":intl.formatMessage({id:\"IDS_ENTER\"})+\" \"+item.displayname[languageTypeCode]}};break;case\"numeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"number\",valueSources:[\"value\"],fieldSettings:_objectSpread({},item.numericcondition)};break;case\"date\":obj['fields'][item.type==='dynamic'?\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"date\",valueSources:[\"value\"]};break;case\"predefinednumeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;case\"predefinedtext\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":\"\\\"\"+item.columnname+\"\\\"\"]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;}var gridColumns=creategridColumns(item,languageTypeCode);if(item.filterinputtype!=='predefinednumeric'){obj['gridColumns'].push(gridColumns);}});return obj;}export function filterObject(item,languageTypeCode,resposedata){var obj={};var preobj={};if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['text']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];//delete jsondata.jsondata\nreturn jsondata;});datapredef[item.columnname]=optionList;// preobj = {\n//     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\n//     predefinedvaluemember: item.columnname\n// }\n}switch(item.filterinputtype){case\"text\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};case\"numeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:NumericFilter,operators:Operators.numeric};case\"date\":return obj={name:item.columnname+\"timestamp\",label:item.displayname[languageTypeCode],filter:DateFilter,operators:Operators.date};case\"predefinednumeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.numeric};case\"predefinedtext\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.text};default:return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};}//return obj;\n}export function getDynamicFilterExecuteData(inputParam){return function(dispatch){var obj=_objectSpread(_objectSpread({},inputParam.component),{},{filterquery:inputParam.filterquery,userinfo:inputParam.userinfo});dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\",obj).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];var multilingual=[];inputParam.component.filterfields.map(function(item){if(item.ismultilingual){multilingual.push(item.columnname);}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});// let label = isMultiLingual ?\n//   jsondata[optionValue]\n//   [languageTypeCode] || jsondata[optionValue]['en-US']\n//   : jsondata[optionValue];\nreturn jsondata;});if(inputParam.userinfo.nformcode===161){dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,onExecute:false,loading:false,screenName:inputParam.component.displayname[languageTypeCode]}});}else{dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,// onExecute: false,\nloading:false,screenName:inputParam.component.displayname[languageTypeCode]}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function rearrangeDateFormatforKendoDataTool(userInfo,dateValue){var splitChar=\"/\";if(dateValue!==undefined){var index=userInfo.ssitedatetime&&userInfo.ssitedatetime.indexOf(\"/\"||\"-\");if(index!==-1)splitChar=userInfo.ssitedatetime.substring(index,index+1);}//   console.log(\"splitChar:\", splitChar);\nif((splitChar===\"/\"||splitChar===\"-\")&&typeof dateValue===\"string\"){var firstField=userInfo.ssitedatetime&&userInfo.ssitedatetime.split(splitChar)[0];// console.log(\"firstField:\", firstField);\nvar timeSplitChar=dateValue.indexOf(\"T\")!==-1?\"T\":\" \";var datetime=dateValue.split(timeSplitChar);var dateArray=datetime[0].split(splitChar);if(firstField===\"dd\"){var day=dateArray[0];var month=dateArray[1];var year=dateArray[2];var time=datetime[1]||\"00:00:00\";var formatted=year+\"-\"+month+\"-\"+day+\"T\"+time;return new Date(formatted);}else if(firstField===\"yyyy\"){var _year=dateArray[0];var _month=dateArray[1];var _day=dateArray[2];var _time=datetime[1]||\"00:00:00\";var _formatted=_year+\"-\"+_month+\"-\"+_day+\"T\"+_time;return new Date(_formatted);}else{return new Date(dateValue);}}else{return dateValue;}}export function preRegDispatch(inputParam){return function(dispatch){dispatch(initRequest(true));dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});};}export function validateEsignforRegistration(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"registration\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}//dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\ndispatch(dispatchMethods(inputParam[\"screenData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}function dispatchMethods(screenData){return function(dispatch){var action=screenData.inputParam.action;switch(action){case\"preregister\":dispatch(insertRegistration(screenData.inputParam,screenData.masterData));break;case\"editSample\":dispatch(updateRegistration(screenData.inputParam,screenData.masterData,'openModal'));break;case\"accept\":dispatch(acceptRegistration(screenData.inputParam,screenData.masterData));break;case\"quarantine\":dispatch(preregRecordToQuarantine(screenData.inputParam,screenData.masterData));break;case\"cancelTest\":dispatch(cancelTestAction(screenData.inputParam,screenData.masterData));break;case\"cancelSample\":dispatch(cancelSampleAction(screenData.inputParam,screenData.masterData));break;case\"addregsourcecountry\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;case\"deleteregsourcecountry\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;case\"printer\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"openModal\"));break;case\"editSubSample\":dispatch(onUpdateSubSampleRegistration(screenData.inputParam,screenData.masterData));//ALPD-1128\nbreak;case\"cancelSubSample\":dispatch(cancelSubSampleAction(screenData.inputParam,screenData.masterData));break;default:break;}};}export function getStorageCategoryForSendToStore(storeInputParam,selectedRecord,sampleDetails){return function(dispatch){dispatch(initRequest(true));var userInfo=storeInputParam.userInfo;var masterData=storeInputParam.masterData;var sendToStoreId=storeInputParam.controlcode;var geStorageCategory=rsapi.post(\"/storagecategory/getStorageCategory\",{'userinfo':userInfo});var getUnit=rsapi.post(\"/unit/getUnit\",{'userinfo':userInfo});var getApprovedLocation=rsapi.post(\"/samplestoragemaster/getSampleQty\",sampleDetails);var urlArray=[geStorageCategory,getUnit,getApprovedLocation];///////////////////////////////\nif(sampleDetails.needSubSample){if(masterData[\"selectedSubSample\"].length>1||masterData[\"selectedSubSample\"].findIndex(function(x){return x[storeInputParam.primaryKeyName]===storeInputParam[\"mastersendtostore\"][storeInputParam.primaryKeyName];})===-1){storeInputParam.subSampleRegParam[\"getSubSampleChildDetail\"]=true;}masterData[\"selectedSubSample\"]=[];masterData[\"selectedSubSample\"].push(storeInputParam[\"mastersendtostore\"]);// storeInputParam.subSampleRegParam[\"npreregno\"] = storeInputParam[\"mastersendtostore\"][\"npreregno\"];\n// storeInputParam.subSampleRegParam[\"checkBoxOperation\"] = 3;\n// storeInputParam.subSampleRegParam[\"nfilterstatus\"] = storeInputParam[\"mastersendtostore\"][\"ntransactionstatus\"];\n// storeInputParam.subSampleRegParam[\"napprovalconfigcode\"] = storeInputParam[\"mastersendtostore\"][\"napprovalconfigcode\"];\nvar inputParamData={nsampletypecode:storeInputParam[\"subSampleRegParam\"].nsampletypecode,nregtypecode:storeInputParam[\"subSampleRegParam\"].nregtypecode,nregsubtypecode:storeInputParam[\"subSampleRegParam\"].nregsubtypecode,npreregno:String(storeInputParam[\"mastersendtostore\"].npreregno),ntransactionsamplecode:String(storeInputParam[\"mastersendtostore\"].ntransactionsamplecode),ntransactionstatus:storeInputParam[\"mastersendtostore\"].ntransactionstatus,napprovalconfigcode:storeInputParam[\"mastersendtostore\"].napprovalconfigcode,activeTestTab:storeInputParam[\"subSampleRegParam\"].activeTestTab,activeSampleTab:storeInputParam[\"subSampleRegParam\"].activeSampleTab,activeSubSampleTab:storeInputParam[\"subSampleRegParam\"].activeSubSampleTab,userinfo:storeInputParam.userInfo,ndesigntemplatemappingcode:storeInputParam[\"subSampleRegParam\"].ndesigntemplatemappingcode,checkBoxOperation:storeInputParam[\"masterData\"].checkBoxOperation,nneedsubsample:storeInputParam[\"subSampleRegParam\"].nneedsubsample};urlArray.push(rsapi.post(\"registration/getRegistrationTest\",inputParamData));}else{if(masterData[\"selectedSample\"].length>1||masterData[\"selectedSample\"].findIndex(function(x){return x[storeInputParam.primaryKeyName]===storeInputParam[\"mastersendtostore\"][storeInputParam.primaryKeyName];})===-1){storeInputParam.mainSampleRegParam[\"getSampleChildDetail\"]=true;}masterData[\"selectedSample\"]=[];masterData[\"selectedSample\"].push(storeInputParam[\"mastersendtostore\"]);var _inputParamData={nsampletypecode:storeInputParam.mainSampleRegParam.nsampletypecode,nregtypecode:storeInputParam.mainSampleRegParam.nregtypecode,nregsubtypecode:storeInputParam.mainSampleRegParam.nregsubtypecode,npreregno:String(storeInputParam.mastersendtostore.npreregno),ntransactionstatus:storeInputParam.mastersendtostore.ntransactionstatus,napprovalconfigcode:storeInputParam.mastersendtostore.napprovalconfigcode,activeTestTab:storeInputParam.mainSampleRegParam.activeTestTab,activeSampleTab:storeInputParam.mainSampleRegParam.activeTestTab,activeSubSampleTab:storeInputParam.mainSampleRegParam.activeTestTab,userinfo:storeInputParam.userInfo,ndesigntemplatemappingcode:storeInputParam.mainSampleRegParam.ndesigntemplatemappingcode,nneedsubsample:storeInputParam.mainSampleRegParam.nneedsubsample,ntype:storeInputParam.masterData.checkBoxOperation===7?4:undefined,checkBoxOperation:storeInputParam.masterData.nneedsubsample===true?storeInputParam.masterData.checkBoxOperation===5?3:storeInputParam.masterData.checkBoxOperation:storeInputParam.mastersendtostore.checkBoxOperation};urlArray.push(rsapi.post(\"registration/getRegistrationSubSample\",_inputParamData));}///////////\nconsole.log(\"urlArray:\",urlArray);Axios.all(urlArray)//    rsapi.post(\"/storagecategory/getStorageCategory\",\n//     { 'userinfo': userInfo })\n.then(function(response){console.log(\"res:\",response);if(response[2].data[\"ReturnStatus\"]!==undefined){toast.info(response[2].data[\"ReturnStatus\"]);masterData=_objectSpread(_objectSpread({},masterData),response[3].data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,// openChildModal: true,\n// operation: \"sendToStore\",\nncontrolcode:sendToStoreId,selectedRecord:selectedRecord,npreregno:sampleDetails.npreregno,ntransactionsamplecode:sampleDetails.ntransactionsamplecode}});}else{var conditionMap=constructOptionList(response[0].data,\"nstoragecategorycode\",\"sstoragecategoryname\",false,false,true);var conditionMaster=conditionMap.get(\"OptionList\");var conditionUnitMap=constructOptionList(response[1].data,\"nunitcode\",\"sunitname\",false,false,true);var conditionUnitMaster=conditionUnitMap.get(\"OptionList\");var isneedSubSampleQty=false;var approvedTreeData=[];selectedRecord[\"nsamplestoragelocationcode\"]=[];selectedRecord[\"nstoragecategorycode\"]=[];selectedRecord[\"nsampleqty\"]=undefined;selectedRecord[\"sampleToStore\"]=sampleDetails.sample===undefined?\"\":sampleDetails.sample;if(response[2].data!==null&&response[2].data[\"isNeedSubSampleQty\"]&&response[2].data[\"isNeedSubSampleQty\"]!==\"\"){isneedSubSampleQty=false;}else{isneedSubSampleQty=true;}if(response[2].data!==null&&response[2].data.unit&&response[2].data.unit.value!==undefined){conditionUnitMaster.map(function(item){return item.value===response[2].data.unit.value?selectedRecord[\"nunitcode\"]={\"label\":item.label,\"value\":item.value,\"item\":item.item}:\"\";});}masterData=_objectSpread(_objectSpread({},masterData),{},{storageCategory:conditionMaster,approvedTreeData:approvedTreeData,unitMaster:conditionUnitMaster},response[3].data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,openChildModal:true,operation:\"sendToStore\",ncontrolcode:sendToStoreId,selectedRecord:selectedRecord,npreregno:sampleDetails.npreregno,ntransactionsamplecode:sampleDetails.ntransactionsamplecode,isneedSubSampleQty:isneedSubSampleQty}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===503){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function UpdateExternalOrderStatus(portallist,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(String(inputParam.inputData[\"url\"])+\"/portal/UpdateMultiSampleStatus\",JSON.stringify(portallist),{headers:{'Content-Type':'application/json'}}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function autoExternalComponentLoadBasedOnSpec(dispatchData){return function(dispatch){dispatch(initRequest(true));var urlArray=[];rsapi.post(\"/registration/getSampleBasedOnExternalOrder\",{'nexternalordercode':dispatchData.selectedRecord[\"Order\"]?dispatchData.selectedRecord[\"Order\"].value:-1}).then(function(response){var Sample=response.data.Sample;var Test1=response.data.Test;var subSampleDataGridList=[];var Component=[];var Test={};Sample.map(function(sample,index){var saveComponent={};saveComponent[\"slno\"]=index;saveComponent['jsondata']={};saveComponent['jsonuidata']={};saveComponent['ncomponentcode']=sample['ncomponentcode'];saveComponent['nspecsampletypecode']=sample['nspecsampletypecode'];saveComponent['scomponentname']=sample['scomponentname'];//saveComponent['jsondata']['ncomponentcode'] = { label: sample['scomponentname'], value: sample['ncomponentcode'] }\n// saveComponent['jsonuidata']['ncomponentcode'] = sample['scomponentname']\n//  saveComponent['jsondata']['scomponentname'] =  sample['scomponentname']\nsaveComponent['jsonuidata']['scomponentname']=sample['scomponentname'];saveComponent['jsondata']['External Sample ID_child']=sample['sexternalsampleid'];saveComponent['jsonuidata']['External Sample ID_child']=sample['sexternalsampleid'];// saveComponent['jsondata']['Quantity_child'] = sample['nsampleqty']\n// saveComponent['jsonuidata']['Quantity_child'] = sample['nsampleqty']\n// saveComponent['jsondata']['Unit Name_child'] = { label: sample['sunitname'], value: sample['nunitcode'] }\n// saveComponent['jsonuidata']['Unit Name_child'] = sample['sunitname']\nsubSampleDataGridList.push(_objectSpread(_objectSpread({},saveComponent['jsonuidata']),saveComponent));Component.unshift(saveComponent);var filterTest=Test1.filter(function(x){return x.nexternalordersamplecode===sample.nexternalordersamplecode;});filterTest.map(function(x){x['slno']=index;});//selectedTestData=[...selectedTestData,...filterTest]\nTest[index]=filterTest;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},dispatchData),{},{Component:Component,selectedComponent:Component.length>0?_objectSpread({},Component[0]):{},selectComponent:{},SelectedTest:Component.length>0?Test[Component[0].slno]:[],Test:Test,selectedTestData:{},subSampleDataGridList:subSampleDataGridList})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/RegistrationAction.js"],"names":["React","rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","childComboLoadForEdit","DEFAULT_RETURN","intl","initRequest","SampleType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","Operators","TextFilter","NumericFilter","DateFilter","ComboBox","Utils","QbUtils","checkTree","loadTree","getSampleTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","data","item","type","payload","loading","catch","error","message","getSubSampleChildTabDetail","inputData","ntransactionsamplecode","length","inputParamData","userinfo","url","activeSubSampleTab","responseData","selectedSubSample","showFilter","screenName","activeTestTab","status","info","selectedSample","activeSampleTab","formatMessage","id","getRegTypeChange","getRegSubTypeChange","onApprovalConfigVersionChange","getComponentTestBySpec","selectedRecord","Component","Test","slno","selectedComponent","undefined","SelectedTest","Object","keys","popUptestDataState","skip","take","getTestfromDB","objComponent","LoginProps","nflag","component","value","label","dreceiveddate","userInfo","nspecsampletypecode","nneedsubsample","RealRegSubTypeValue","TestData","loadComponent","selectComponent","showSaveContinue","SelectedSource","parentPopUpSize","CurrentTime","unshift","EditComponent","urlArray","ComponentTestBySpec","timezone","all","lstComponentMap","lstComponent","timeZoneListMap","TimeZoneField","get","timeZoneList","scomponentname","ncomponentcode","ntzdreceivedate","findIndex","x","ntimezonecode","stimezoneid","childoperation","ChildscreenName","openChildModal","ReloadData","searchSampleRef","current","searchSubSampleRef","searchTestRef","testskip","testtake","subsampletake","subsampleskip","showSample","getTreeByProduct","comboData","inputParam","nsampletypecode","CLINICALTYPE","nportalrequired","YES","nordertypecode","nallottedspeccode","jsondata","Specification","AgaramTree","ActiveKey","FocusKey","OpenNodes","selectedSpec","sversion","ntemplatemanipulationcode","dispatchData","subSampleDataGridList","autoExternalComponentLoadBasedOnSpec","addMaster","masterIndex","getNewRegSpecification","selectedNode","operation","methodUrl","ntreetemplatemanipulationcode","activeKey","focusKey","primaryKey","AddComponents","sreceiveddate","stzdreceivedate","scomments","openPortal","openModal","getAllTest","specBasedComponent","selectPackage1","specBasedTestPackage","selectPackage","conditionalTestPackage","PackageData","TestCombined","componentTest","TestPackage","loadTest","getTest","TestGet","TestPackageGet","PackageDataMap","AllTest","addsubSample","columnList","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","isServiceRequired","SubSamplecomboData","timeZoneService","actualService","parentcolumnlist","filter","inputtype","readonly","childcolumnlist","currentDate","dateService","datecolumnlist","timeZoneMap","defaultTimeZone","newcomboData","slanguagetypecode","comboData1","selectedRecord1","map","componentrow","loadcurrentdate","nperiodcode","Date","loadselecteddate","hidebeforedate","hideafterdate","radioOptions","tags","text","loadSubSample","saveContinueData","parentSubSampleColumnList","childSubSampleColumnList","selectedTestData","selectedobject","Reg","testPackageTest","subSampleBased","ntestpackagecode","availableTest","ntestgrouptestcode","addSubSampleSaveContinue","Map1","selectedTestPackageData","selectedTestPackageData1","some","y","selectedTestData1","masterStatus","editSubSample","Componnet","comp","nregsubtypecode","portalOrder","containerType","containerList","nportalordercode","push","insertRegistration","rtn","RegistrationGetSample","RegistrationGetSubSample","RegistrationGetTest","selectedTest","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","postParamList","preregConfirmMessage","NeedConfirmAlert","preregConfirmParam","insertRegistrationScheduler","SchedulerTransaction","getRegistrationSample","selectedFilter","getRegistrationsubSampleDetail","nregtypecode","npreregno","ntransactionstatus","napprovalconfigcode","ndesigntemplatemappingcode","ntype","checkBoxOperation","activeName","dataStateName","subSample","skipInfo","oldSelectedTest","oldSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","RegistrationTestComment","RegistrationTestAttachment","RegistrationParameter","RegistrationComment","wholeSubSampleList","b","forEach","subsample","index","includes","splice","ResponseData","RegistrationTestComment1","ntransactiontestcode","RegistrationTestAttachment1","resultResponseData","RegistrationParameter1","ntransactiontestcode1","ResponseData1","RegistrationTestComment2","ntransactionTestCode","bool","wholeTestList","test","keepOld","sampleGridDataState","sort","isGrandChildGetRequired","TestSelected","subSampleSelected","filterTestSameOldSelectedTest","join","filterSelectedSubSample","getRegistrationTestDetail","getTestChildTabDetailRegistration","subsamplecheck","SubSampleSelected","wholeSubSample","selectedSubSample1","dataStateArray","arr","selectedTransactionsamplecode","RegistrationSampleComment","RegistrationSampleAttachment","testList","wholeSubsampleList","activeTabIndex","toString","selectedTransactioncode","acceptRegistration","UpdateExternalOrderStatus","acceptConfirmMessage","acceptConfirmParam","addMoreTest","ncontrolCode","sampleList","obj","slice","selectedsample","findTransactionStatus","Set","REJECT","CANCELLED","RELEASED","findApprovalVersion","napprovalversioncode","findSampleSpec","loadChildTest","props","createRegistrationTest","modalName","classUrl","createTestConfirmMessage","createTestConfirmParam","getEditRegistrationComboService","comboComponents","withoutCombocomponent","primaryKeyName","editRegParam","mastertoedit","selectedRegistration","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","date","sregsubtypename","updateRegistration","regDateEditConfirmMessage","regEditParam","cancelTestAction","cancelSampleAction","addsubSampleRegistration","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","regchildSubSampleColumnList","saveSubSample","subSampleConfirmMessage","subSampleConfirmParam","getEditSubSampleComboService","editSubSampleRegParam","formattedMessage","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","selectedSampleCode","selectedTestCode","activeTabId","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory","toTimestamp","strDate","dt","getTime","getDynamicFilter","languageTypeCode","lstData","gridColumns","fields","datefileds","multilingual","filterfields","filterObject","ismultilingual","columnname","filterinputtype","creategridColumns","JSON","parse","rearrangeDateFormatforKendoDataTool","mul","selectedComponentpath","loadCustomSearchFilter","lstPatient","displayname","seletedFilterComponent","kendoSkip","kendoTake","kendoFilter","logic","filters","filterObjectForReactAwesomeFilter","awesomeTree","awesomeConfig","filterquery","selectedFieldRecord","onExecute","datapredef","CustomFilter","defaultItem","onChange","onFilterChange","call","nextFilter","target","field","title","width","filterFields","resposedata","predefinedtablename","predefinedismultilingual","predefineddisplaymember","predefinedvaluemember","valueSources","mainWidgetProps","fieldSettings","numericcondition","listValues","preobj","name","operators","numeric","getDynamicFilterExecuteData","nformcode","dateValue","splitChar","ssitedatetime","indexOf","substring","firstField","split","timeSplitChar","datetime","dateArray","day","month","year","time","formatted","preRegDispatch","validateEsignforRegistration","toLowerCase","dispatchMethods","screenData","action","getStorageCategoryForSendToStore","storeInputParam","sampleDetails","sendToStoreId","controlcode","geStorageCategory","getUnit","getApprovedLocation","needSubSample","subSampleRegParam","String","mainSampleRegParam","mastersendtostore","console","log","conditionMap","conditionMaster","conditionUnitMap","conditionUnitMaster","isneedSubSampleQty","approvedTreeData","sample","unit","storageCategory","unitMaster","portallist","stringify","headers","warn","Sample","Test1","saveComponent","filterTest","nexternalordersamplecode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString,\r\n    fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement,\r\n    replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList,\r\n    constructjsonOptionDefault, childComboLoad, filterRecordBasedOnPrimaryKeyName, reArrangeArrays, childComboLoadForEdit\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { //RegistrationSubType, RegistrationType, \r\n    SampleType,\r\n    transactionStatus\r\n} from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\nimport {\r\n    Operators,\r\n    TextFilter,\r\n    NumericFilter,\r\n    // BooleanFilter,\r\n    DateFilter,\r\n    // EnumFilter,\r\n    //  EnumFilterProps,\r\n} from \"@progress/kendo-react-data-tools\";\r\nimport { ComboBox } from \"@progress/kendo-react-dropdowns\";\r\nimport { Utils as QbUtils } from \"react-awesome-query-builder\";\r\nconst { checkTree, loadTree } = QbUtils;\r\n\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactionsamplecode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSubSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"comments/getSubSampleComment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSubSample: inputData.selectedSubSample,\r\n                                    // selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSubSampleTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName,\r\n                                activeTestTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.info(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            //toast.info(\"Please Select a Sample\");\r\n\r\n            toast.info(intl.formatMessage({ id: \"IDS_PLSSELECTASAMPLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                // const RegistrationSubType = response.data[\"RegistrationSubType\"];\r\n\r\n                //  console.log(response.data);\r\n                // RegistrationSubType.length > 0 ?\r\n                //     selectedRecord[\"nregsubtypecode\"] = {\r\n                //         \"value\": RegistrationSubType[0].nregsubtypecode,\r\n                //         \"label\": RegistrationSubType[0].sregsubtypename\r\n                //     } : selectedRecord[\"nregsubtypecode\"] = \"\";\r\n                // const [labelname] = event.item;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function onApprovalConfigVersionChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getApprovalConfigBasedTemplateDesign\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getComponentTestBySpec(Map, selectedRecord, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getComponentTestBySpec\", Map)\r\n            .then(response => {\r\n                const { Component, Test } = response.data;\r\n                let slno = Component.length > 0 ? Component[0].slno : -1;\r\n                let selectedComponent = Component.length > 0 ? Component[0] : undefined\r\n                let SelectedTest = [];\r\n                if (Object.keys(Test).length > 0) {\r\n                    SelectedTest = Test[slno];\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectedComponent, loading: false,\r\n                        selectedRecord, popUptestDataState: { skip: 0, take: 10 }\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestfromDB(objComponent, LoginProps, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let component = { ...objComponent };\r\n        component[\"ncomponentcode\"] = objComponent[\"ncomponentcode\"] ? objComponent[\"ncomponentcode\"].value : -1;\r\n        component[\"nstoragelocationcode\"] = objComponent[\"nstoragelocationcode\"] ? objComponent[\"nstoragelocationcode\"].value : -1;\r\n        component[\"nstorageconditioncode\"] = objComponent[\"nstorageconditioncode\"] ? objComponent[\"nstorageconditioncode\"].value : -1;\r\n        component[\"slno\"] = LoginProps.Component ? Object.keys(LoginProps.Component).length + 1 : 0;\r\n        component[\"scomponentname\"] = objComponent[\"ncomponentcode\"].label;\r\n        component[\"sstoragelocationname\"] = objComponent[\"nstoragelocationcode\"] && objComponent[\"nstoragelocationcode\"].label ? objComponent[\"nstoragelocationcode\"].label : \"\";\r\n        component[\"sstorageconditionname\"] = objComponent[\"nstorageconditioncode\"] && objComponent[\"nstorageconditioncode\"].label ? objComponent[\"nstorageconditioncode\"].label : \"\";\r\n        component[\"ntzdmanufdate\"] = objComponent[\"ntzdmanufdate\"] ? objComponent[\"ntzdmanufdate\"].value : -1;\r\n        component[\"ntzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].value : -1;\r\n        component[\"stzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].label : \"\";\r\n        component[\"nplasmafilecode\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].value : -1;\r\n        component[\"splasmafilenumber\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].label : \"\";\r\n        const dreceiveddate = objComponent[\"dreceiveddate\"];\r\n        component[\"dreceiveddate\"] = dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\r\n        component[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\r\n        // rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: component.nspecsampletypecode,\r\n            slno: component.slno,\r\n            nneedsubsample: LoginProps.masterData.RealRegSubTypeValue.nneedsubsample\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                let slno = component.slno;\r\n                let SelectedTest = [];\r\n                let loadComponent = true;\r\n                let selectComponent = {};\r\n                let showSaveContinue = true;\r\n                let SelectedSource = [];\r\n                // let openChildModal = true;\r\n                let selectedComponent = undefined;\r\n                let parentPopUpSize = \"lg\"\r\n                // selectComponent = objComponent\r\n                if (nflag === 1) {\r\n                    loadComponent = true;\r\n                    objComponent[\"smanuflotno\"] = \"\";\r\n                    objComponent[\"dreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    objComponent[\"sreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    selectComponent = objComponent;\r\n                } else {\r\n                    loadComponent = false;\r\n                    parentPopUpSize = \"xl\"\r\n                    // openChildModal = false;\r\n                    showSaveContinue = false;\r\n                    selectComponent = undefined\r\n                }\r\n                let Test = LoginProps.Test || [];\r\n                let Component = LoginProps.Component || [];\r\n                Component.unshift(component);\r\n                selectedComponent = component;\r\n                Test[slno] = response.data;\r\n                SelectedTest = TestData;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectComponent, selectedComponent,\r\n                        loadComponent, showSaveContinue, parentPopUpSize, loading: false, SelectedSource\r\n                    }\r\n                });\r\n                // console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                //   console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function EditComponent(Map, component, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const TimeZoneField = response[1].data;\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n                component[\"dreceiveddate\"] = rearrangeDateFormat(userInfo, component[\"sreceiveddate\"]);\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n\r\n                let ntzdreceivedate = component.ntzdreceivedate;\r\n                if (component.ntzdreceivedate !== null && typeof component.ntzdreceivedate === \"object\") {\r\n                    ntzdreceivedate = component.ntzdreceivedate.value;\r\n                }\r\n                component[\"ntzdreceivedate\"] = component.ntzdreceivedate ?\r\n                    {\r\n                        \"label\": TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].stimezoneid, \"value\":\r\n                            TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].ntimezonecode\r\n                    } : \"\"\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true, childoperation: \"update\",\r\n                        lstComponent, ChildscreenName: \"Component\",\r\n                        openChildModal: false, selectComponent: component, parentPopUpSize: \"lg\",\r\n                        timeZoneList, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    //masterData['searchedTests'] = undefined\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // let selectedFilter = inputData.selectedFilter;\r\n                // selectedFilter[\"fromdate\"] = \"\";\r\n                // selectedFilter[\"todate\"] = \"\";\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined,\r\n                        //selectedFilter\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTreeByProduct(Map, selectedRecord, comboData, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getTreeByProduct\", Map.nsampletypecode===SampleType.CLINICALTYPE&&\r\n        Map.nportalrequired === transactionStatus.YES&&selectedRecord[\"Order Type\"]&&selectedRecord[\"Order Type\"].value==2 ?{...Map,nordertypecode:selectedRecord[\"Order Type\"].value,nallottedspeccode:selectedRecord[\"Order\"]&&selectedRecord[\"Order\"].item.jsondata.nallottedspeccode} : Map)\r\n            .then(response => {\r\n                let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                const selectedSpec = {}\r\n                if (response.data[\"rtn\"] === true) {\r\n                    Specification = constructOptionList(response.data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response.data[\"AgaramTree\"];\r\n                    ActiveKey = response.data[\"ActiveKey\"];\r\n                    FocusKey = response.data[\"FocusKey\"];\r\n                    OpenNodes = response.data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1\r\n                }\r\n                selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                if (Map.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                    Map.nportalrequired && Map.nportalrequired === 3 \r\n                    && selectedRecord[\"Order Type\"].value === 2) {\r\n\r\n                    let dispatchData = {\r\n                        Specification,\r\n                        selectedRecord,\r\n                        AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                        Test: [],\r\n                        SelectedTest: [],\r\n                        loading: false,\r\n                        comboData,\r\n                        ...inputParam,\r\n                        selectedSpec,\r\n                        Component: [],\r\n                        selectComponent: {},\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: []\r\n                    }\r\n\r\n                    dispatch(autoExternalComponentLoadBasedOnSpec(dispatchData))\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            Specification,\r\n                            selectedRecord,\r\n                            AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                            Test: [],\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            comboData,\r\n                            ...inputParam,\r\n                            selectedSpec,\r\n                            Component: [],\r\n                            selectComponent: {},\r\n                            selectedComponent: {},\r\n                            subSampleDataGridList: [],\r\n                            addMaster:false,\r\n                            masterIndex:undefined\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getNewRegSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedNode !== null) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam, ntreetemplatemanipulationcode: inputParam.selectedNode.ntemplatemanipulationcode })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let Specification = constructOptionList(response.data || [], \"nallottedspeccode\", \"sspecname\", false, false, true).get(\"OptionList\");\r\n                    let selectedComponent = undefined;\r\n                    inputParam.selectedRecord[\"nallottedspeccode\"] = Specification.length > 0 ? { value: Specification[0].value, label: Specification[0].label, item: Specification[0].item } : \"\";\r\n                    inputParam.selectedRecord[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\";\r\n                    inputParam.selectedRecord[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ActiveKey: inputParam.activeKey,\r\n                            FocusKey: inputParam.focusKey,\r\n                            primaryKey: inputParam.primaryKey,\r\n                            Specification: Specification,\r\n                            selectedNode: inputParam.selectedNode,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            Test: [],\r\n                            selectedComponent,\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            showSample: undefined\r\n                        }\r\n                    }\r\n                    );\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.info(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddComponents(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone\r\n        ]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                let dreceiveddate = null;\r\n                if (lstComponent[0].item.sreceiveddate)\r\n                    dreceiveddate = rearrangeDateFormat(Map[\"userinfo\"], lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\r\n\r\n                let selectComponent = {\r\n                    sreceiveddate: dreceiveddate,\r\n                    dreceiveddate,\r\n                    ntzdreceivedate: { \"label\": Map[\"userinfo\"].stimezoneid, \"value\": Map[\"userinfo\"].ntimezonecode },\r\n                    stzdreceivedate: Map[\"userinfo\"].stimezoneid,\r\n                    scomments: \"\",\r\n                    nallottedspeccode: lstComponent[0].item.nallottedspeccode\r\n                };\r\n                let CurrentTime = dreceiveddate;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true,\r\n                        lstComponent, dreceiveddate, ChildscreenName: \"Component\",\r\n                        showSaveContinue: true, openChildModal: false, childoperation: \"create\", selectComponent\r\n                        , parentPopUpSize: \"lg\", CurrentTime, timeZoneList, loading: false,\r\n                        openPortal: true, openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAllTest(objComponent, LoginProps, nneedsubsample, specBasedComponent, selectPackage1, specBasedTestPackage, selectPackage) {\r\n    return function (dispatch) {\r\n        if (Object.keys(objComponent).length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nspecsampletypecode: objComponent.nspecsampletypecode,\r\n                slno: objComponent.slno,\r\n                nneedsubsample: nneedsubsample,\r\n                nallottedspeccode: objComponent.nallottedspeccode,\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n                conditionalTestPackage: true,\r\n                //    ntestpackagecode:selectPackage.ntestpackagecode.value\r\n\r\n            })\r\n                .then(response => {\r\n                    let PackageData = [];\r\n                    let TestCombined = [];\r\n                    //   const TestCombined = response.data;\r\n                    let TestData = response.data;\r\n                    let Test = LoginProps.Test || [];\r\n                    let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n                    TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestgrouptestcode\");\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            TestCombined, TestPackage: PackageData, selectPackage: [],\r\n                            loadTest: true, openChildModal: false,\r\n                            ChildscreenName: intl.formatMessage({ id: \"IDS_TEST\" }),\r\n                            screenName: intl.formatMessage({ id: \"IDS_TEST\" }),\r\n                            operation: \"create\",\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\", loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        } else {\r\n            toast.info(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function getTest(objComponent, LoginProps, nneedsubsample, specBasedComponent, selectPackage1, specBasedTestPackage, selectPackage) {\r\n    return function (dispatch) {\r\n\r\n\r\n        // if (Object.keys(objComponent).length > 0) {\r\n        const urlArray = []\r\n\r\n        const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: objComponent.nspecsampletypecode,\r\n            slno: objComponent.slno,\r\n            nneedsubsample: nneedsubsample,\r\n            nallottedspeccode: objComponent.nallottedspeccode,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: true,\r\n            //    ntestpackagecode:selectPackage.ntestpackagecode.value\r\n\r\n        });\r\n        urlArray[0] = TestGet;\r\n        const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n            nspecsampletypecode: objComponent.nspecsampletypecode,\r\n            slno: objComponent.slno,\r\n            nneedsubsample: nneedsubsample,\r\n            nallottedspeccode: objComponent.nallottedspeccode,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: true,\r\n        });\r\n        urlArray[1] = TestPackageGet;\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray).then(response => {\r\n\r\n            // const TestCombined = [];\r\n            let PackageData = [];\r\n            //  if (specBasedTestPackage) {\r\n            const PackageDataMap = constructOptionList(response[1].data.TestPackage || [], \"ntestpackagecode\",\r\n                \"stestpackagename\", undefined, undefined, true);\r\n            PackageData = PackageDataMap.get(\"OptionList\");\r\n            //    }\r\n            //    else {\r\n            let TestData = response[0].data;\r\n            let Test = LoginProps.Test || [];\r\n            let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n            let TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestcode\");\r\n            //    }\r\n            // const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\r\n            //\"stestsynonym\", undefined, undefined, true);\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    TestCombined, TestPackage: PackageData, selectPackage: [], AllTest: TestData,\r\n                    loadTest: true, openChildModal: false,\r\n                    ChildscreenName: intl.formatMessage({ id: \"IDS_TEST\" }),\r\n                    screenName: intl.formatMessage({ id: \"IDS_TEST\" }),\r\n                    operation: \"create\",\r\n                    childoperation: \"create\",\r\n                    parentPopUpSize: \"lg\", loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n        // } else {\r\n        //     toast.info(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        // }\r\n\r\n    }\r\n}\r\n\r\nexport function addsubSample(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired,\r\n    SubSamplecomboData, selectedRecord, conditionalTestPackage, specBasedTestPackage, LoginProps) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList ? columnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)) : [],\r\n                childcolumnlist: childColumnList ? childColumnList : [],\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent) {\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent,\r\n                    //   conditionalTestPackage:true\r\n                })\r\n                urlArray[2] = ComponentTestBySpec;\r\n            } else {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    nneedsubsample: Map[\"nneedsubsample\"],\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage: true,\r\n                    specBasedTestPackage: specBasedTestPackage\r\n                })\r\n                urlArray[2] = TestGet;\r\n                const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    // slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    //   specBasedTestPackage: specBasedTestPackage,\r\n                    //  conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[5] = TestPackageGet;\r\n            }\r\n            const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                userinfo\r\n            })\r\n\r\n            urlArray[3] = currentDate\r\n\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo\r\n            })\r\n            urlArray[4] = dateService\r\n\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)), response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                let PackageData = []\r\n                if (specBasedComponent) {\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                } else {\r\n                    /// if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response[5].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n                    // if (PackageData.length === 0) {\r\n                    //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n                    // }                      \r\n                    // }\r\n                    // else {\r\n                    TestCombined = response[2].data\r\n                    //}\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.loadcurrentdate) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                            selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                        } else if (componentrow.nperiodcode) {\r\n                            selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            if (componentrow.loadselecteddate) {\r\n                                selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                    new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            }\r\n                            //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                            //    new Date(response[2].data[componentrow.label]):null;\r\n                        } else {\r\n                            selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                        }\r\n\r\n                        if (componentrow.hidebeforedate) {\r\n                            selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n                        if (componentrow.hideafterdate) {\r\n                            selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n\r\n                    }\r\n                    else if (componentrow.inputtype === \"radio\") {\r\n                        selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                            componentrow.radioOptions.tags[0].text : \"\";\r\n                    }\r\n\r\n                })\r\n                //console.log(\"selectedRecord1 action1:\", selectedRecord1);\r\n                // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                //     let containerType = comboData1['Container Type'] || []\r\n                //     comboData1['ContainerType'] = comboData1['Container Type'] || []\r\n                //     let containerList = []\r\n                //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                //     containerType.map(x => {\r\n                //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                //             containerList.push(x)\r\n                //         }\r\n                //     })\r\n\r\n                //     comboData1['Container Type'] = containerList\r\n                // }\r\n\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChildscreenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                        screenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        saveContinueData: { ...selectedRecord1 },\r\n                        SubSamplecomboData: comboData1,\r\n                        SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        parentSubSampleColumnList: columnList,\r\n                        childSubSampleColumnList: childColumnList,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                        selectPackage: [],\r\n                        TestPackage: PackageData\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList,\r\n            SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n        return (dispatch) => {\r\n            if (!specBasedComponent) {\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    // nneedsubsample: Map[\"nneedsubsample\"],\r\n                    ...Map,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage: true,\r\n                    specBasedTestPackage: specBasedTestPackage\r\n                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                    //  nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n                    nallottedspeccode: selectedRecord.nallottedspeccode.item.nallottedspeccode,\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    specBasedTestPackage: specBasedTestPackage,\r\n                    conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[3] = TestPackageGet;\r\n                Axios.all(urlArray).then(response => {\r\n                    let TestCombined = []\r\n                    let PackageData = []\r\n\r\n                    //  if (!specBasedTestPackage) {\r\n                    TestCombined = response[0].data\r\n                    // } \r\n                    // else {\r\n                    const PackageDataMap = constructOptionList(response[3].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n                    // if (PackageData.length === 0) {\r\n                    //    dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n                    //} \r\n\r\n                    // }\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\") {\r\n                            selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                componentrow.radioOptions.tags[0].text : \"\";\r\n                        }\r\n\r\n                    })\r\n                    // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    //     let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    //     let containerList = []\r\n                    //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    //     containerType.map(x => {\r\n                    //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                    //             containerList.push(x)\r\n                    //         }\r\n                    //     })\r\n\r\n                    //     SubSamplecomboData['Container Type'] = containerList\r\n                    // }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                            screenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent: [],\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: selectedRecord1,\r\n                            saveContinueData: { ...selectedRecord1 },\r\n                            TestCombined: TestCombined,\r\n                            TestPackage: PackageData\r\n                        }\r\n                    });\r\n                })\r\n            } else {\r\n                // Component = Component ? Component : []\r\n\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                Axios.all(urlArray).then(response => {\r\n                    // const lstComponent =  response.data.lstComponent\r\n                    let lstComponent = response[0].data.lstComponent //filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\r\n                    const lstComponentMap = constructOptionList(lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\") {\r\n                            selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                componentrow.radioOptions.tags[0].text : \"\";\r\n                        }\r\n\r\n                    })\r\n                    // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    //     let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    //     let containerList = []\r\n                    //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    //     containerType.map(x => {\r\n                    //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                    //             containerList.push(x)\r\n                    //         }\r\n                    //     })\r\n\r\n                    //     SubSamplecomboData['Container Type'] = containerList\r\n                    // }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                            screenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent,\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: selectedRecord1,\r\n                            saveContinueData: { ...selectedRecord1 },\r\n                            TestCombined: [],\r\n                            selectedTestData: [],\r\n                            selectPackage: []\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// export function componentTestPackage(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage) {\r\n//     return function (dispatch) {\r\n//         dispatch(initRequest(true));\r\n//         Component = Component ? Component : []\r\n//         rsapi.post(\"/registration/getTestfromDB\", {\r\n//             nspecsampletypecode: selectedobject.selectedSubSample &&\r\n//             [...new Set(selectedobject.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"),\r\n//             conditionalTestPackage: true,\r\n//             specBasedTestPackage: specBasedTestPackage,\r\n//             specBasedComponent: specBasedComponent,\r\n//             nallottedspeccode:selectedobject.selectedSample[0].nallottedspeccode\r\n\r\n//         })\r\n//             .then(response => {\r\n//                 let PackageData = []\r\n//                 let TestData=[]\r\n//                 if (specBasedTestPackage) {\r\n//                     const PackageDataMap = constructOptionList(response.data.TestPackage || [], \"ntestpackagecode\",\r\n//                         \"stestpackagename\", undefined, undefined, true);\r\n//                     PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n//                     // if (PackageData.length === 0) {\r\n//                     //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n//                     // } \r\n//                 }\r\n//                 else {\r\n//                      TestData = response.data;\r\n//                 }\r\n//                 //let Test = [];\r\n//                 // Test[selectedobject.slno] = TestData;\r\n//                 const Map = {}\r\n//                 if (Reg) {\r\n//                     delete selectedobject.ntestpackagecode\r\n//                     delete selectedobject.ntestgrouptestcode\r\n\r\n//                     Map[\"selectedRecord\"] = selectedobject\r\n//                 } else {\r\n//                     Map[\"selectComponent\"] = selectedobject\r\n//                 }\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN,\r\n//                     payload: {\r\n//                         TestCombined: TestData, TestPackage: PackageData,\r\n//                         ...Map,\r\n//                         loading: false, selectedTestData: [],\r\n//                         availableTest:[],\r\n//                       //  selectPackage: {},\r\n//                         screenName: \"IDS_TEST\",\r\n//                         operation: \"create\",\r\n//                         openModal: true,\r\n//                         parentPopUpSize: \"lg\",\r\n//                         loadChildTest: true,\r\n//                        //selectedRecord:{},\r\n\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 toast.error(error.message);\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//             })\r\n//     }\r\n// }\r\n\r\nexport function componentTest(selectedobject, Reg, specBasedComponent, Component, specBasedTestPackage, conditionalTestPackage) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        Component = Component ? Component : []\r\n        const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: conditionalTestPackage,\r\n            nneedsubsample: selectedobject.nneedsubsample\r\n        });\r\n        urlArray[0] = TestGet;\r\n        const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: conditionalTestPackage\r\n        });\r\n        urlArray[1] = TestPackageGet;\r\n        Axios.all(urlArray).then(response => {\r\n            let PackageData = []\r\n            let TestData = []\r\n            // if (specBasedTestPackage) {\r\n            const PackageDataMap = constructOptionList(response[1].data.TestPackage || [], \"ntestpackagecode\",\r\n                \"stestpackagename\", undefined, undefined, true);\r\n            PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n            // if (PackageData.length === 0) {\r\n            //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n            // } \r\n            //   }\r\n            //    else {\r\n            TestData = response[0].data;\r\n            //  }\r\n            //let Test = [];\r\n            // Test[selectedobject.slno] = TestData;\r\n            const Map = {}\r\n            if (Reg) {\r\n                Map[\"selectedRecord\"] = selectedobject\r\n            } else {\r\n                Map[\"selectComponent\"] = selectedobject\r\n            }\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    TestCombined: TestData, AllTest: TestData, TestPackage: PackageData, ...Map, loading: false, selectedTestData: [],\r\n                    selectPackage: []\r\n\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n// export function testPackageTest(selectedobject, Reg, specBasedComponent, Component,specBasedTestPackage,conditionalTestPackage,selectComponent,objComponent,LoginProps,selectPackage,subSampleBased,selectedSpec,nneedsubsample) {\r\nexport function testPackageTest(selectedobject, Reg, specBasedComponent, Component, selectComponent, objComponent, LoginProps, selectPackage, subSampleBased, selectedSpec, nneedsubsample) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        // rsapi.post(\"/registration/getTestBasesdTestPackage\", {\r\n        //     nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode: Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,\r\n        //     slno:subSampleBased?Component ? Object.keys(Component).length + 1 : 1:selectComponent.slno,\r\n        //     specBasedComponent: specBasedComponent,\r\n        //     ntestpackagecode: selectPackage.ntestpackagecode.value,\r\n        //     nallottedspeccode:selectedSpec!==undefined?selectedSpec.value:selectedobject.nallottedspeccode\r\n\r\n        // })\r\n        rsapi.post(\"/registration/getTestBasesdTestPackage\", {\r\n            // nspecsampletypecode:!nneedsubsample?selectedSpec.item.nspecsampletypecode: Object.keys(selectedobject).length!==0?selectedobject.nspecsampletypecode:selectComponent.nspecsampletypecode,\r\n            nspecsampletypecode: selectComponent && selectComponent.nspecsampletypecode ? selectComponent.nspecsampletypecode : selectedobject.nspecsampletypecode,\r\n            //     slno: subSampleBased ? Component ? Object.keys(Component).length + 1 : 1 : selectComponent.slno,\r\n            specBasedComponent: specBasedComponent,\r\n            ntestpackagecode: selectPackage.ntestpackagecode.value,\r\n            nallottedspeccode: selectedSpec && selectedSpec.value !== undefined ? selectedSpec.value : selectedobject.nallottedspeccode\r\n\r\n        })\r\n            .then(response => {\r\n                const Map = {}\r\n                let TestData = response.data;\r\n                let Test = LoginProps.Test || [];\r\n                let componentTest = [];\r\n                if (subSampleBased) {\r\n                    componentTest = Test[Component ? Object.keys(Component).length + 1 : 1] ? Test[Component ? Object.keys(Component).length + 1 : 1] : [];\r\n\r\n                } else {\r\n                    componentTest = objComponent && Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n\r\n                }\r\n                const availableTest = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestcode\");\r\n                const TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestcode\");\r\n\r\n                delete selectedobject.ntestgrouptestcode;\r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectPackage\"] = selectPackage\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        availableTest, TestCombined, ...Map, loading: false, selectedTestData: []\r\n                        //, selectPackage: []\r\n                        // TestCombined,loadTest: true, openChildModal: false,\r\n                        // ChildscreenName: \"Test\",\r\n                        //  screenName: \"Test\",\r\n                        // operation: \"create\",\r\n                        //  childoperation: \"create\",\r\n                        //   parentPopUpSize: \"lg\", loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function addSubSampleSaveContinue(Map1, Map,\r\n    specBasedComponent, Component, selectedTestData, lstComponent) {\r\n\r\n    //  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n    //     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n    return (dispatch) => {\r\n        if (!specBasedComponent) {\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                nspecsampletypecode: Map[\"nspecsampletypecode\"],\r\n                slno: Map1.Component ? Object.keys(Map1.Component).length + 1 : 1,\r\n                specBasedComponent: specBasedComponent, nneedsubsample: Map[\"nneedsubsample\"]\r\n            }).then(response => {\r\n                let TestCombined = response.data\r\n                // let selectedTestPackageData = selectedTestPackageData && selectedTestPackageData.length > 0 ? selectedTestData : []\r\n\r\n                let selectedTestPackageData = selectedTestData && selectedTestData.length > 0 ? selectedTestData : []\r\n\r\n                const selectedTestPackageData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestPackageData.some(function (y) {\r\n                        return x[\"ntestpackagetestcode\"] === y.value\r\n                    })\r\n                });\r\n                selectedTestData = selectedTestData && selectedTestData.length > 0 ? selectedTestPackageData : []\r\n\r\n                const selectedTestData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestData.some(function (y) {\r\n                        return x[\"ntestgrouptestcode\"] === y.value\r\n                    })\r\n                });\r\n\r\n\r\n                selectedTestData = constructOptionList(selectedTestData1, \"ntestgrouptestcode\", \"stestsynonym\")\r\n                selectedTestData[\"ntestgrouptestcode\"] = selectedTestData.get(\"OptionList\")\r\n                selectedTestPackageData = constructOptionList(selectedTestPackageData1, \"ntestpackagetestcode\", \"stestpackagename\")\r\n                selectedTestPackageData[\"ntestpackagetestcode\"] = selectedTestPackageData.get(\"OptionList\")\r\n\r\n                // Map1.selectComponent = {};\r\n                Map1.selectComponent = { ...Map1.saveContinueData };\r\n                // Map1.selectComponent[\"ncomponentcode\"] = {};\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...Map1,\r\n                        loading: false,\r\n                        TestCombined,\r\n                        selectPackage: [],\r\n                        //TestPackage\r\n                        //selectedTestData,\r\n                        //selectedTestPackageData,\r\n                        selectedTestData: [],\r\n                        selectedTestPackageData: [],\r\n                        masterStatus: intl.formatMessage({ id: \"IDS_SAVESUCCESSFULLY\" })\r\n                    }\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            // lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\r\n            // Map1.selectComponent = {};\r\n            // Map1.selectComponent[\"ncomponentcode\"] = {};           \r\n            // Map1.selectComponent[\"Sample Name\"] = \"\";\r\n            Map1.selectComponent = { ...Map1.saveContinueData, \"ncomponentcode\": {} };\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...Map1,\r\n                    loading: false,\r\n                    TestCombined: [],\r\n                    selectPackage: [],\r\n                    TestPackage: [],\r\n                    selectedTestData: [],\r\n                    selectedTestPackageData: [],\r\n                    lstComponent,\r\n                    masterStatus: intl.formatMessage({ id: \"IDS_SAVESUCCESSFULLY\" })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function editSubSample(Map,\r\n    component, userInfo, specBasedComponent,\r\n    SubSamplecomboData, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        let Componnet = {}\r\n        if (specBasedComponent) {\r\n            Componnet = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map\r\n            });\r\n        }\r\n        urlArray = [Componnet]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let comp = []\r\n                if (specBasedComponent) {\r\n                    comp = response[0].data.lstComponent\r\n                }\r\n                const lstComponentMap = constructOptionList(comp || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                if (Map.nregsubtypecode === 6) {\r\n                    let portalOrder = component['Container Type'] || {}\r\n                    let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    let containerList = []\r\n                    const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    containerType.map(x => {\r\n                        if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                            containerList.push(x)\r\n                        }\r\n                    })\r\n\r\n                    SubSamplecomboData['Container Type'] = containerList\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadSubSample: true, childoperation: \"update\",\r\n                        ChildscreenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                        openChildModal: false, selectComponent: component,\r\n                        parentPopUpSize: \"lg\", loading: false, lstComponent, SubSamplecomboData\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                    let selectedSample = response.data[\"selectedSample\"];\r\n                    let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                    let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                    let selectedSubSample = RegistrationGetSubSample;\r\n                    RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                    let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                    if (inputParam.inputData.nneedsubsample) {\r\n                        RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                        selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                        RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                        selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                    }\r\n                    // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                    if (inputParam.multipleselectionFlag) {\r\n                        selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                        RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                        RegistrationGetTest = masterData.RegistrationGetTest;\r\n                    }\r\n\r\n\r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedSample, selectedSubSample, selectedTest,\r\n                        RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,\r\n                        showConfirmAlert: false,\r\n                        selectedRecord: undefined,\r\n                        loading: false,\r\n                        loadPreregister: false,\r\n                        showSample: undefined,\r\n                        openPortal: false,\r\n                        selectedSpec: {},\r\n                        selectComponent: {},\r\n                        SelectedTest: {},\r\n                        selectedComponent: {},\r\n                        Component: [],\r\n                        selectedRecord: {},\r\n                        SelectedTest: [],\r\n                        Test: [],\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: [],\r\n                        preregConfirmMessage:undefined\r\n                    }\r\n                    inputParam.postParamList[0]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                } else {\r\n                    toast.info(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false, preregConfirmMessage:undefined } })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);             \r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false,  preregConfirmMessage:undefined  } })\r\n                    toast.error(error.message);\r\n                } \r\n                else {\r\n                    if(error.response.data.NeedConfirmAlert)\r\n                    {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {                                                  \r\n                                                        showConfirmAlert: true,\r\n                                                        preregConfirmMessage: error.response.data.rtn, \r\n                                                        preregConfirmParam: {inputParam, masterData},\r\n                                                        loading: false,\r\n                                                        showSample: undefined,                                                        \r\n                                                    }\r\n                                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        toast.error(error.message);\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false, \r\n                            showConfirmAlert: false,  preregConfirmMessage:undefined } });\r\n        \r\n                    }\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistrationScheduler(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/schedulerinsertRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // if (response.data.rtn === \"Success\") {\r\n                //     let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                //     let selectedSample = response.data[\"selectedSample\"];\r\n                //     let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                //     let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                //     let selectedSubSample = RegistrationGetSubSample;\r\n                //     RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                //     let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                //     if (inputParam.inputData.nneedsubsample) {\r\n                //         RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                //         selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                //         RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                //         selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                //     }\r\n                //     // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                //     if (inputParam.multipleselectionFlag) {\r\n                //         selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                //         updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                //         updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                //         RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                //         RegistrationGetTest = masterDat..a.RegistrationGetTest;\r\n                //     }\r\n\r\n\r\n                //     masterData = {\r\n                //         ...masterData, ...response.data,\r\n                //         selectedSample, selectedSubSample, selectedTest,\r\n                //         RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                //     }\r\n                let respObject = {\r\n                    masterData: { ...masterData, SchedulerTransaction: response[\"data\"].SchedulerTransaction },\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: undefined,\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined,\r\n                    openPortal: false,\r\n                    selectedSpec: {},\r\n                    selectComponent: {},\r\n                    SelectedTest: {},\r\n                    selectedComponent: {},\r\n                    Component: [],\r\n                    selectedRecord: {},\r\n                    SelectedTest: [],\r\n                    Test: [],\r\n                    selectedComponent: {},\r\n                    subSampleDataGridList: []\r\n                }\r\n                // inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                // dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                dispatch({ type: DEFAULT_RETURN, payload: { ...respObject } })\r\n                // } else {\r\n                //     toast.info(response.data.rtn);\r\n                //     dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                // }\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationSample(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                let respObject = {};\r\n                if (inputData.selectedFilter) {\r\n                    respObject = { selectedFilter: { ...inputData.selectedFilter } };\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampleskip: 0,\r\n                        subsampletake: undefined,\r\n                        showSample: undefined,\r\n                        ...respObject,\r\n                        activeSampleTab: inputData.inputData.activeSampleTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeTestTab,\r\n            activeSubSampleTab: inputData.activeTestTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            //ntype: inputData.checkBoxOperation === 7 ? 2 : undefined,\r\n            ntype: inputData.checkBoxOperation === 7 ? 4 : undefined, //ALPD-497\r\n            checkBoxOperation: inputData.nneedsubsample === true ?\r\n                inputData.checkBoxOperation === 5 ? 3 : inputData.checkBoxOperation : inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data, \"descending\", \"npreregno\");\r\n                    sortData(response.data['RegistrationAttachment']);\r\n                    sortData(response.data['RegistrationComment']);\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetSubSample[0]] : [],\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationComment = [];\r\n                        //if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \r\n                        if (inputData.checkBoxOperation === 1) {\r\n\r\n                            const wholeSubSampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const selectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.selectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 7) {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                            masterData[\"RegistrationComment\"] = RegistrationComment;\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3 || inputData.checkBoxOperation === 5) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: masterData.RegistrationGetTest.length > 0 ? [masterData.RegistrationGetTest[0]] : []\r\n                            }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                            masterData[\"RegistrationComment\"] = RegistrationComment;\r\n\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetSubSample.length < inputData.subsampleskip) {\r\n                            testskip = 0;\r\n                            subsampleskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                        }\r\n                    } else {\r\n\r\n                        //let oldSelectedTest = inputData.masterData.selectedTest\r\n                        //  let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample,\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationComment = [];\r\n\r\n                        if (inputData.checkBoxOperation === 7 || inputData.checkBoxOperation === 1) {\r\n                            const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            let npreregno;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest,\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                                npreregno = inputData.masterData.RegistrationGetSample.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetSample[0].npreregno : \"\"\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                            inputData.masterData.RegistrationTestAttachment : [] :\r\n                                            getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                        inputData.masterData.RegistrationTestComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = keepOld ? inputData.masterData.RegistrationComment ?\r\n                                        inputData.masterData.RegistrationComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationComment, npreregno, \"npreregno\")\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (inputData.checkBoxOperation === 5) {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                        }\r\n                        else {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                        [...response.data.RegistrationTestComment] : [];\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                            [...response.data.RegistrationTestAttachment] : [];\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_SAMPLECOMMENTS\":\r\n                                    RegistrationComment = response.data.RegistrationComment ?\r\n                                        [...response.data.RegistrationComment] : [];\r\n                                    activeName = \"RegistrationComment\"\r\n                                    dataStateName = \"sampleCommentsDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                        masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                        masterData['RegistrationComment'] = RegistrationComment;\r\n\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\"\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    // let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            // inputParam:inputData\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n            // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n\r\n\r\n            if (inputData[\"statusNone\"]) {\r\n                TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let selectedSample = inputData.selectedSample;\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let selectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n                    inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                let ntransactiontestcode = selectedTest.length > 0 ? selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n                let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    selectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.RegistrationGetSubSample[0]];\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, selectedSample, selectedSubSample, selectedTest }\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3, skipInfo, masterData\r\n                }\r\n                if (subSample) {\r\n                    if (selectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = selectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                        dispatch(getRegistrationTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                }\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedPreregno: inputData.npreregno,\r\n                    selectedTest: TestSelected ? TestSelected : inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                    // RegistrationTestComment,\r\n                    selectedSubSample: subSampleSelected ? subSampleSelected : inputData.masterData.RegistrationGetSubSample\r\n                }\r\n                let subsamplecheck = true;\r\n                if (subSample) {\r\n                    let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                    if (SubSampleSelected.length > 0) {\r\n                        let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                        if (filterSelectedSubSample.length === 0) {\r\n                            let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((test, index) => {\r\n                                if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            if (oldSelectedSubSample.length === 0 && wholeSubSample.length > 0\r\n                                && masterData.selectedTest.length === 0) {\r\n                                const selectedSubSample1 = [inputData.masterData.RegistrationGetSubSample[0]];\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: selectedSubSample1,\r\n                                    selectedTest: []\r\n                                }\r\n                                inputData = { ...inputData, ...masterData }\r\n                                inputData[\"npreregno\"] = selectedSubSample1.map(x => x.npreregno).join(\",\")\r\n                                inputData[\"ntransactionsamplecode\"] = selectedSubSample1.map(x => x.ntransactionsamplecode).join(\",\")\r\n                                inputData[\"checkBoxOperation\"] = 3\r\n                                inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                                subsamplecheck = false;\r\n                                dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n                            }\r\n                        } else {\r\n                            oldSelectedSubSample = filterSelectedSubSample\r\n                        }\r\n\r\n                    } else {\r\n                        let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.forEach((test, index) => {\r\n                            if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (subsamplecheck) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedSubSample: oldSelectedSubSample\r\n                        }\r\n                    }\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampleskip, subsampletake }\r\n                    }\r\n                }\r\n                let wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function getRegistrationTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation,\r\n            nneedsubsample: inputData.nneedsubsample\r\n\r\n        }\r\n        const subSample = inputData.nneedsubsample;\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    let oldSelectedSubSample = inputData.masterData.selectedSubSample || []\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedSubSample: inputData.selectedSubSample,\r\n                        selectedTransactionsamplecode: inputData.ntransactionsamplecode,\r\n                        selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                            [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                        // RegistrationTestComment,\r\n                    }\r\n                    //let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let RegistrationParameter = [];\r\n                    let RegistrationSampleComment = [];\r\n                    let RegistrationSampleAttachment = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.forEach((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n\r\n                        })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest,\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                    inputData.masterData.RegistrationTestComment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                    inputData.masterData.RegistrationTestAttachment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 5) {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 7) {\r\n                        let testList = reArrangeArrays(inputData.masterData.RegistrationGetSubSample, response.data.RegistrationGetTest, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: testList ? testList.length > 0 ? [testList[0]] : [] : [],\r\n                            RegistrationGetTest: testList ? testList.length > 0 ? testList : [] : [],\r\n                            //ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                // let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let RegistrationParameter1 = [...resultResponseData];\r\n                                let ntransactiontestcode1 = testList ? testList.length > 0 ? testList[0].ntransactiontestcode : inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1 : -1\r\n\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                    [...response.data.RegistrationTestComment] : [];\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                    [...response.data.RegistrationTestAttachment] : [];\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (subSample) {\r\n                        let wholeSubsampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.map((test, index) => {\r\n                            if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n                        if (oldSelectedSubSample.length > 0) {\r\n                            keepOld = true\r\n                        } else {\r\n                            ntransactionsamplecode = masterData.selectedSubSample[0].ntransactionsamplecode\r\n                        }\r\n\r\n                        switch (inputData.activeSubSampleTab) {\r\n                            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleComment\"\r\n                                dataStateName = \"subSampleCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleAttachment\"\r\n                                dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                    masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                    masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                    masterData[\"RegistrationSampleComment\"] = RegistrationSampleComment;\r\n                    masterData[\"RegistrationSampleAttachment\"] = RegistrationSampleAttachment;\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    let skipInfo = {}\r\n                    if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    //  let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTabIndex: inputData.activeTabIndex,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            //  inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSubSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString() : \"-1\";\r\n                let selectedSubSample = inputData.selectedSubSample;\r\n                // let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                let masterData = { ...inputData.masterData, selectedSubSample, selectedTest }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSubSample: inputData.selectedSubSample,\r\n                    selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                }\r\n\r\n                const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        activeTabIndex: inputData.activeTabIndex,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function acceptRegistration(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/acceptRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === undefined || response.data.rtn === \"Success\"\r\n                    || response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                    || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                    if (response.data[\"PortalStatus\"] && response.data[\"PortalStatus\"].length > 0) {\r\n                        dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"], inputParam));\r\n                    }\r\n\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"RegistrationGetSample\"];\r\n                    delete response.data[\"RegistrationGetSubSample\"];\r\n                    delete response.data[\"RegistrationGetTest\"];\r\n                    let masterData = {\r\n                        ...LoginProps, ...response.data,\r\n                        selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                        selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                        selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showSample: undefined,\r\n                        showConfirmAlert:false,\r\n                        acceptConfirmMessage:undefined\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    if (response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                        || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\"\r\n                        || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                        toast.info(intl.formatMessage({ id: response.data.rtn }));\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.info(intl.formatMessage({ id: response.data.rtn }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // toast.error(error.message);           \r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                } else {                                     \r\n                    //toast.info(intl.formatMessage({ id: error.response.data[\"rtn\"] }));\r\n                    if(error.response.data.NeedConfirmAlert)\r\n                    {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {                                                  \r\n                                                        showConfirmAlert: true,\r\n                                                        acceptConfirmMessage: error.response.data.rtn, \r\n                                                        acceptConfirmParam: {inputParam, masterData:LoginProps},\r\n                                                        loading: false                                                      \r\n                                                    }\r\n                                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        toast.error(error.message);\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false, \r\n                            showConfirmAlert: false,  acceptConfirmMessage:undefined } });\r\n        \r\n                    }\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTest = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if (inputParam.selectedSample && inputParam.selectedSample.length > 0) {\r\n            if (inputParam.selectedSubSample && inputParam.selectedSubSample.length > 0) {\r\n                value = inputParam.selectedSubSample.some(obj => obj.nspecsampletypecode !== inputParam.selectedSubSample[0].nspecsampletypecode)\r\n                if (value) {\r\n                    return toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                }\r\n                sampleList = sampleList ? [...sampleList.slice(inputParam.skip, inputParam.take)] : [];\r\n                const selectedsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedSample, \"npreregno\");\r\n                // const selectsubsample = getSameRecordFromTwoArrays(subsampleList, inputParam.selectedsubsample, \"ntransactionsamplecode\");\r\n                if (selectedsample && selectedsample.length > 0) {\r\n                    const findTransactionStatus = [...new Set(selectedsample.map(item => item.ntransactionstatus))];\r\n\r\n                    if (findTransactionStatus.length === 1) {\r\n                        if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                            if (findTransactionStatus[0] !== transactionStatus.RELEASED) {\r\n\r\n                                // if (selectsubsample && selectsubsample.length > 0) {\r\n                                //     const findSubSampleStatus = [...new Set(selectsubsample.map(item => item.ntransactionstatus))];\r\n                                //\r\n                                //     if (findSubSampleStatus[0] !== transactionStatus.REJECT && findSubSampleStatus[0] !== transactionStatus.CANCELLED) \r\n                                //     {                    \r\n\r\n                                const findApprovalVersion = [...new Set(selectedsample.map(item => item.napprovalversioncode))];\r\n                                if (findApprovalVersion.length === 1) {\r\n                                    const findSampleSpec = [...new Set(selectedsample.map(item => item.nallottedspeccode))];\r\n                                    //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                                    if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                                    {\r\n                                        inputParam[\"snspecsampletypecode\"] = inputParam.selectedSubSample &&\r\n                                            [...new Set(inputParam.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n                                        dispatch(initRequest(true));\r\n                                        const urlArray = []\r\n                                        const TestGet = rsapi.post(\"/registration/getMoreTest\", {\r\n                                            ...inputParam\r\n                                        });\r\n                                        urlArray[0] = TestGet;\r\n                                        const TestPackageGet = rsapi.post(\"/registration/getMoreTestPackage\", {\r\n                                            ...inputParam\r\n                                        });\r\n                                        urlArray[1] = TestPackageGet;\r\n\r\n                                        Axios.all(urlArray)\r\n                                            .then(response => {\r\n                                                let PackageData = []\r\n                                                const PackageDataMap = constructOptionList(response[1].data || [], \"ntestpackagecode\",\r\n                                                    \"stestpackagename\", undefined, undefined, true);\r\n                                                PackageData = PackageDataMap.get(\"OptionList\");\r\n                                                dispatch({\r\n                                                    type: DEFAULT_RETURN,\r\n                                                    payload: {\r\n                                                        availableTest: response[0].data,\r\n                                                        AllTest: response[0].data,\r\n                                                        TestPackage: PackageData,\r\n                                                        loadChildTest: true,\r\n                                                        loading: false, ncontrolCode,\r\n                                                        screenName: \"IDS_TEST\",\r\n                                                        operation: \"create\",\r\n                                                        openModal: true,\r\n                                                        parentPopUpSize: \"lg\",\r\n                                                        selectedRecord: {},\r\n                                                        showSample: undefined\r\n                                                    }\r\n                                                });\r\n                                            })\r\n                                            .catch(error => {\r\n                                                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                                if (error.response.status === 500) {\r\n                                                    toast.error(error.message);\r\n                                                } else {\r\n                                                    toast.info(this.props.formatMessage({ id: error.response.data }));\r\n                                                }\r\n                                            });\r\n                                    } else {\r\n                                        toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                                    }\r\n                                } else {\r\n                                    toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                                }\r\n                                //     }\r\n                                //     else {\r\n                                //         toast.info(intl.formatMessage({ id: \"IDS_SUBSAMPLEISREJECTEDORCANCELLED\" }));\r\n                                //     }\r\n                                // }                               \r\n                            }\r\n                            else {\r\n                                toast.info(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORRELEASEDSAMPLES\" }));\r\n                            }\r\n                        }\r\n                        else {\r\n                            ////     toast.info(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\r\n                            toast.info(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                        }\r\n                    } else {\r\n                        toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n                    }\r\n                } else {\r\n                    toast.info(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n                }\r\n            } else {\r\n                toast.info(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.info(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const createRegistrationTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let RegistrationGetTest = updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"], response.data[\"RegistrationGetTest\"]);\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationGetTest: sortData(RegistrationGetTest, \"descending\", \"ntransactiontestcode\"),\r\n                    selectedTest: response.data[\"RegistrationGetTest\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    // RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    [modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {},\r\n                    showConfirmAlert:false,\r\n                    createTestConfirmMessage:undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'no';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, createTestConfirmMessage:undefined } })\r\n                    toast.error(error.message);\r\n                } \r\n                else {\r\n                    if(error.response.data.NeedConfirmAlert)\r\n                    {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {                                                  \r\n                                                        showConfirmAlert: true,\r\n                                                        createTestConfirmMessage: error.response.data.rtn, \r\n                                                        createTestConfirmParam: {inputParam, masterData, modalName},\r\n                                                     \r\n                                                        //[modalName]: false,\r\n                                                        loading: false,\r\n                                                        loadChildTest: true,\r\n                                                        showSample: undefined,\r\n                                                        //openModal: false,\r\n                                                        //selectedRecord: {}\r\n                                                    }\r\n                                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                [modalName]: false,\r\n                                loading: false,\r\n                                loadChildTest: false,\r\n                                showSample: undefined,\r\n                                openModal: false,\r\n                                selectedRecord: {},\r\n                                createTestConfirmMessage:undefined\r\n                            }\r\n                        });\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getEditRegistrationComboService(inputParam, columnList,\r\n    selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n        let masterData = inputParam[\"masterData\"];\r\n\r\n        if (masterData[\"selectedSample\"].length > 1 ||\r\n            masterData[\"selectedSample\"]\r\n                .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n            === -1) {\r\n            inputParam.editRegParam[\"getSampleChildDetail\"] = true;\r\n        }\r\n        masterData[\"selectedSample\"] = [];\r\n        masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        const npreregno = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n        //     parentcolumnlist: columnList,\r\n        //     childcolumnlist: childColumnList,\r\n        //     userinfo: userInfo\r\n        // })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationDetails\", {\r\n            ...inputParam.editRegParam, npreregno, parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo: userInfo\r\n        })\r\n\r\n        urlArray = [timeZoneService, selectedRegistration, dateService]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n                // const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                //  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\r\n\r\n\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n\r\n                //  const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                // selectedRecord, childColumnList, withoutCombocomponent)\r\n\r\n                if (selectedRecord.ntransactionstatus === transactionStatus.CANCELLED\r\n                    || selectedRecord.ntransactionstatus === transactionStatus.REJECT) {\r\n                    toast.info(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSAMPLE\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n\r\n                            if (date.nperiodcode) {\r\n                                selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                            } else {\r\n                                selectedRecord[date.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (date.hidebeforedate) {\r\n                                selectedRecord[date.label + \"min\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                            if (date.hideafterdate) {\r\n                                selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                    const selectedSpec = {}\r\n                    Specification = constructOptionList(response[1].data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response[1].data[\"AgaramTree\"];\r\n                    ActiveKey = response[1].data[\"FocusKey\"];\r\n                    FocusKey = response[1].data[\"ActiveKey\"];\r\n                    OpenNodes = response[1].data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ?\r\n                        Specification[0].item.ntemplatemanipulationcode : -1\r\n                    selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n\r\n                    if (inputParam.editRegParam[\"getSampleChildDetail\"] === true) {\r\n                        masterData = sortData({ ...masterData, ...response[1].data[\"SampleChildDetail\"] })\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            AgaramTree,\r\n                            FocusKey,\r\n                            ActiveKey,\r\n                            OpenNodes,\r\n                            selectedSpec,\r\n                            Specification,\r\n                            // statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\r\n                            // currentTime,\r\n                            operation: \"update\",\r\n                            screenName: inputParam.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                            // PopUpLabel: popUpLabel,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openPortal: true,\r\n                            ncontrolCode: inputParam.editRegParam.ncontrolCode,\r\n                            loadPreregister: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            comboData: comboValues.comboData,\r\n                            childColumnList, comboComponents,\r\n                            withoutCombocomponent,\r\n                            columnList,\r\n                            masterData\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.info(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function updateRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    // sortData(response.data);\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], masterData.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                    //  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                    //let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedSample: response.data[\"selectedSample\"],\r\n                        // selectedSubSample: masterData[\"selectedSubSample\"],\r\n                        //selectedTest:masterData[\"selectedTest\"],\r\n                        // RegistrationGetTest,\r\n                        // RegistrationGetSubSample,\r\n                        RegistrationParameter: masterData[\"RegistrationParameter\"]\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, openPortal: false, loading: false, showConfirmAlert: false,\r\n                            regDateEditConfirmMessage: undefined, loadEsign: false, openModal: false,\r\n                            loadPreregister: false, selectedRecord: {}, showSample: undefined\r\n                        }\r\n                    });\r\n                    // let inputData = {\r\n                    //     masterData,\r\n                    //     selectedTest: masterData.selectedTest,\r\n                    //     ntransactiontestcode: masterData.selectedTest ?\r\n                    //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    //     npreregno: masterData.selectedSample ?\r\n                    //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    //     userinfo: inputParam.inputData.userinfo,\r\n                    //     activeTestTab : masterData.activeTestTab,\r\n                    //     screenName: masterData.activeTestTab,\r\n                    //     resultDataState: inputParam.resultDataState,\r\n                    //     testCommentDataState: inputParam.testCommentDataState,\r\n                    // }\r\n                    // dispatch(getTestChildTabDetail(inputData, true))\r\n                } else {\r\n                    toast.info(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelTest\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    // RegistrationGetTest:response.data[\"RegistrationGetTest\"],\r\n                    RegistrationGetTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\"),\r\n                    //  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSample\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function addsubSampleRegistration(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents,\r\n    regSubSamplewithoutCombocomponent, Map, ncontrolcode, specBasedComponent, specBasedTestPackage) {\r\n    return function (dispatch) {\r\n        //console.log(\"spec:\", specBasedComponent);\r\n        const urlArray = []\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray[0] = timeZoneService;\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: regcolumnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)),\r\n            childcolumnlist: regchildColumnList,\r\n            userinfo\r\n        })\r\n        urlArray[1] = actualService;\r\n\r\n        if (specBasedComponent) {\r\n            const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map,\r\n                specBasedComponent: specBasedComponent,\r\n                userinfo\r\n            })\r\n            urlArray[2] = ComponentTestBySpec;\r\n        } else {\r\n\r\n            const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                slno: 1,\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n                conditionalTestPackage: true,\r\n                nneedsubsample: Map[\"nneedsubsample\"]\r\n\r\n            })\r\n            urlArray[2] = TestGet;\r\n            const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                //  nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                //  slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n                //     conditionalTestPackage: conditionalTestPackage\r\n            });\r\n            urlArray[5] = TestPackageGet;\r\n\r\n        }\r\n        const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo\r\n        })\r\n\r\n        urlArray[3] = currentDate\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: regSubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo\r\n        })\r\n        urlArray[4] = dateService\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(regcolumnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)), response[1].data,\r\n                    selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                let PackageData = [];\r\n                if (specBasedComponent) {\r\n\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                } else {\r\n                    //if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response[5].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n                    // if (PackageData.length === 0) {\r\n                    //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n                    // } \r\n                    // }\r\n                    // else {\r\n                    TestCombined = response[2].data;\r\n                    // }\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.loadcurrentdate) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                            selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                        } else if (componentrow.nperiodcode) {\r\n                            selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            if (componentrow.loadselecteddate) {\r\n                                selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                    new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            }\r\n                            //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                            //    new Date(response[2].data[componentrow.label]):null;\r\n                        } else {\r\n                            selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                        }\r\n\r\n                        if (componentrow.hidebeforedate) {\r\n                            selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n                        if (componentrow.hideafterdate) {\r\n                            selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n\r\n                    }\r\n                    else if (componentrow.inputtype === \"radio\") {\r\n                        selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                            componentrow.radioOptions.tags[0].text : \"\";\r\n                    }\r\n\r\n                })\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        screenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                        showSaveContinue: false,\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openModal: true,\r\n                        operation: \"create\",\r\n                        loadRegSubSample: true,\r\n                        selectedRecord: selectedRecord1,\r\n                        regSubSamplecomboData: comboData1,\r\n                        regSubSamplecomboComponents,\r\n                        regSubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        regparentSubSampleColumnList: regcolumnList,\r\n                        regchildSubSampleColumnList: regchildColumnList,\r\n                        ncontrolCode: ncontrolcode,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                        specBasedComponent,\r\n                        specBasedTestPackage,\r\n                        TestPackage: PackageData,\r\n                        //ALPD-624\r\n                        testskip: 0,\r\n                        subsampleskip: 0\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function saveSubSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                // let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample, response.data[\"selectedSubSample\"]);\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample = response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n\r\n                let RegistrationParameter = response.data[\"RegistrationParameter\"]\r\n\r\n                RegistrationParameter = getSameRecordFromTwoArrays(RegistrationParameter, selectedTest, 'ntransactiontestcode')\r\n\r\n                let masterData = { ...inputParam.inputData.masterData }\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationParameter\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample: false,\r\n                    showConfirmAlert:false,\r\n                    subSampleConfirmMessage:undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                //    dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         openModal: false,\r\n                //         loadEsign: false,\r\n                //         loading: false,\r\n                //         showSample: undefined,\r\n                //         selectedRecord: {},\r\n                //         loadRegSubSample:false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                // toast.error(error.message);\r\n                // dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false,  subSampleConfirmMessage:undefined  } })\r\n                    toast.error(error.message);\r\n                } \r\n                else {\r\n                    if(error.response.data.NeedConfirmAlert)\r\n                    {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {                                                  \r\n                                                        showConfirmAlert: true,\r\n                                                        subSampleConfirmMessage: error.response.data.rtn, \r\n                                                        subSampleConfirmParam: {inputParam},\r\n                                                        loading: false                                                      \r\n                                                    }\r\n                                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        toast.error(error.message);\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false, \r\n                            showConfirmAlert: false,  subSampleConfirmMessage:undefined } });\r\n        \r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getEditSubSampleComboService(inputParam, columnList, selectedRecord1,\r\n    childColumnList, comboComponents,\r\n    withoutCombocomponent, specBasedComponent) {\r\n    return function (dispatch) {\r\n\r\n        let { userInfo, operation, masterData } = { ...inputParam };\r\n\r\n        if (masterData[\"selectedSubSample\"].length > 1 ||\r\n            masterData[\"selectedSubSample\"]\r\n                .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n            === -1) {\r\n            inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] = true;\r\n        }\r\n\r\n        masterData[\"selectedSubSample\"] = [];\r\n        masterData[\"selectedSubSample\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        inputParam.editSubSampleRegParam[\"npreregno\"] = inputParam[\"mastertoedit\"][\"npreregno\"];\r\n        inputParam.editSubSampleRegParam[\"checkBoxOperation\"] = 3;\r\n        inputParam.editSubSampleRegParam[\"nfilterstatus\"] = inputParam[\"mastertoedit\"][\"ntransactionstatus\"];\r\n        inputParam.editSubSampleRegParam[\"napprovalconfigcode\"] = inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];\r\n        //inputParam.editSubSampleRegParam[\"withoutgetparameter\"] = 3;\r\n\r\n        const ntransactionsamplecode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        if (ntransactionsamplecode === undefined) {\r\n            toast.info(intl.formattedMessage({ id: \"IDS_SELECTVALIDSUBSAMPLE\" }));\r\n        }\r\n        else {\r\n            let urlArray = [];\r\n\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            //     parentcolumnlist: columnList,\r\n            //     childcolumnlist: childColumnList,\r\n            //     userinfo: userInfo\r\n            // })\r\n            const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\", {\r\n                ...inputParam.editSubSampleRegParam, ntransactionsamplecode, parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo: userInfo\r\n            })\r\n\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo: userInfo\r\n            })\r\n\r\n\r\n            urlArray = [timeZoneService, selectedRegistration, dateService]\r\n            // if(specBasedComponent){\r\n            //     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n            //         ...Map,\r\n            //         specBasedComponent: specBasedComponent\r\n            //     })\r\n            //     urlArray.push(ComponentTestBySpec) \r\n            // }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n\r\n                    selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n\r\n                    const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                    const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                    const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                    // if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\r\n                    //     toast.info(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\r\n                    //     dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                    // }\r\n\r\n                    //else {\r\n                    //               let lstComponent=[]\r\n                    if (specBasedComponent) {\r\n                        selectedRecord[\"ncomponentcode\"] = { label: selectedRecord[\"scomponentname\"], value: selectedRecord[\"ncomponentcode\"] }\r\n                    }\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n                    // withoutCombocomponent.map(date => {\r\n                    //     if (date.inputtype === 'date')\r\n                    //         selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                    //             rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\r\n                    // })\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n\r\n                            if (date.nperiodcode) {\r\n                                selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                            } else {\r\n                                selectedRecord[date.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (date.hidebeforedate) {\r\n                                selectedRecord[date.label + \"min\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                            if (date.hideafterdate) {\r\n                                selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    selectedRecord = { ...selectedRecord }\r\n\r\n                    if (inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] === true) {\r\n                        masterData = { ...masterData, ...response[1].data[\"SubSampleChildDetail\"] };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            screenName: \"IDS_SUBSAMPLE\",\r\n                            operation: \"update\",\r\n                            specBasedComponent,\r\n                            //  regRecordToEdit:recordToEdit\r\n                            masterData\r\n                        }\r\n                    })\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    //console.log(\"error:\", error);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.info(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateSubSampleRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistrationSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                //  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    // selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                    // RegistrationGetSubSample,\r\n                    RegistrationParameter: response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: intl.formatMessage({ id: \"IDS_SUBSAMPLE\" }),\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelSubSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    // selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function preregRecordToQuarantine(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/quarantineRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                // replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                delete response.data[\"RegistrationGetSample\"];\r\n                delete response.data[\"RegistrationGetSubSample\"];\r\n                delete response.data[\"RegistrationGetTest\"];\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestChildTabDetailRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode === \"\") {\r\n            inputData.ntransactiontestcode = \"0\";\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                                activeTabIndex: inputData.activeTabIndex,\r\n                                activeTabId: inputData.activeTabId\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    activeTabIndex: inputData.activeTabIndex,\r\n                                    activeTabId: inputData.activeTabId,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.info(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false,\r\n                    activeTabIndex: inputData.activeTabIndex,\r\n                    activeTabId: inputData.activeTabId,\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst toTimestamp = (strDate) => {\r\n    // const dt = new Date(strDate).getTime();\r\n    // return dt / 1000;\r\n    const dt = strDate.getTime();\r\n    return dt;\r\n}\r\n\r\nexport function getDynamicFilter(inputParam) {\r\n    if (inputParam.component.inputtype === 'frontendsearchfilter') {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const source = inputParam.component.source\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const lstData = response.data[inputParam.component.label]\r\n\r\n\r\n                    // const responseparam={}\r\n                    const gridColumns = []\r\n                    const fields = []\r\n                    const datefileds = []\r\n                    const multilingual = []\r\n                    inputParam.component.filterfields.map(item => {\r\n                        fields.push(filterObject(item, languageTypeCode, response.data));\r\n                        if (item.ismultilingual) {\r\n                            multilingual.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype === \"date\") {\r\n                            datefileds.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype !== 'predefinednumeric') {\r\n                            gridColumns.push(creategridColumns(item, languageTypeCode,));\r\n                        }\r\n                    })\r\n\r\n                    const optionList = lstData.map(item => {\r\n                        const jsondata = item[source] ? item[source].value ?\r\n                            JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                        datefileds.map(x => {\r\n                            jsondata[x + \"timestamp\"] = toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo, jsondata[x]))\r\n                        })\r\n                        multilingual.map(mul => {\r\n                            jsondata[mul] =\r\n                                jsondata[mul][languageTypeCode] || jsondata[mul]['en-US']\r\n                                ;\r\n                        })\r\n\r\n\r\n                        return jsondata\r\n                    });\r\n                    let map = {\r\n                    }\r\n                    if (inputParam.type === 'design') {\r\n                        map = { ...map, showFilter: true, selectedComponentpath: inputParam.selectedComponentpath }\r\n                    } else {\r\n                        map = { ...map, loadCustomSearchFilter: true }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList, gridColumns, fields,\r\n                            //  loadCustomSearchFilter: true\r\n                            loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            kendoFilter: inputParam.component.kendoFilter || {\r\n                                logic: \"and\",\r\n                                filters: []\r\n                            },\r\n                            //awesomeTree: undefined,\r\n                            //awesomeConfig: undefined,\r\n                            // showFilter: true,\r\n                            ...map\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    } else if (inputParam.component.inputtype === \"backendsearchfilter\") {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const { fields, gridColumns } = filterObjectForReactAwesomeFilter(inputParam.component.filterfields, languageTypeCode, response.data)\r\n\r\n                    let map = {\r\n                    }\r\n                    let awesomeTree = inputParam.component.awesomeTree ? checkTree(loadTree(inputParam.component.awesomeTree), inputParam.component.awesomeConfig) : undefined\r\n                    if (inputParam.component.awesomeTree\r\n                        && inputParam.component.filterquery && inputParam.component.filterquery !== ''\r\n                    ) {\r\n                        map = {\r\n                            filterquery: inputParam.component.filterquery\r\n                        }\r\n\r\n                        if (inputParam.type === 'design') {\r\n                            map = {\r\n                                ...map, filterquery: inputParam.component.filterquery,\r\n                                selectedFieldRecord: { ...inputParam.component, awesomeTree: awesomeTree }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        map = {\r\n                            filterquery: ''\r\n                        }\r\n                        if (inputParam.type === 'design') {\r\n                            map = {\r\n                                ...map, filterquery: inputParam.component.filterquery,\r\n                                selectedFieldRecord: { ...inputParam.component, awesomeTree: awesomeTree }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputParam.type === 'design') {\r\n                        map = {\r\n                            ...map,\r\n                            showFilter: true, selectedComponentpath: inputParam.selectedComponentpath\r\n                        }\r\n                    } else {\r\n                        map = { ...map, loadCustomSearchFilter: true }\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: [], gridColumns, fields,\r\n                            // loadCustomSearchFilter: true\r\n                            loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            awesomeTree,\r\n                            onExecute: true,\r\n                            // awesomeConfig: inputParam.component.awesomeConfig || undefined,\r\n                            // showFilter: true,\r\n                            ...map\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nlet datapredef = {}\r\nconst CustomFilter = props => {\r\n    const { filter, data = [], defaultItem } = props;\r\n    const onChange = event => {\r\n        props.onFilterChange.call(undefined, {\r\n            nextFilter: { ...props.filter, value: event.target.value.value }\r\n        });\r\n    };\r\n\r\n    return <ComboBox onChange={onChange} data={filter.field ? datapredef[filter.field] : []} textField=\"text\" />;\r\n};\r\n\r\nexport function creategridColumns(item, languageTypeCode) {\r\n    let obj = {}\r\n    if (item.filterinputtype !== 'predefinednumeric') {\r\n        return {\r\n            field: item.columnname,\r\n            title: item.displayname[languageTypeCode], width: \"250px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport function filterObjectForReactAwesomeFilter(filterFields, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    obj['fields'] = {}\r\n    obj['gridColumns'] = []\r\n    filterFields.map(item => {\r\n        if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n            const optionList = resposedata[item.predefinedtablename].map(data => {\r\n                const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                    JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n                jsondata['title'] = item.predefinedismultilingual ?\r\n                    jsondata[item.predefineddisplaymember]\r\n                    [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                    : jsondata[item.predefineddisplaymember];\r\n                jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n                return jsondata\r\n            });\r\n            datapredef[item.columnname] = optionList\r\n        }\r\n        switch (item.filterinputtype) {\r\n            case \"text\":\r\n                obj['fields'][item.type === 'dynamic' ? item.ismultilingual ?\r\n                    \"jsondata->'\" + item.columnname + \"'->>'\" + languageTypeCode + \"'\" :\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                    \"\\\"\" + item.columnname + \"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"text\",\r\n                    valueSources: [\"value\", \"func\"],\r\n                    mainWidgetProps: {\r\n                        \"valueLabel\": \"Name\",\r\n                        \"valuePlaceholder\": intl.formatMessage({ id: \"IDS_ENTER\" })+ \" \" + item.displayname[languageTypeCode]\r\n                    }\r\n                }\r\n                break;\r\n            case \"numeric\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"(jsondata->>'\" + item.columnname + \"')::int\" :\r\n                    \"\\\"\" + item.columnname + \"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"number\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        ...item.numericcondition\r\n                    }\r\n                }\r\n                break;\r\n            case \"date\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                    \"\\\"\" + item.columnname + \"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"date\",\r\n                    valueSources: [\"value\"],\r\n                }\r\n                break;\r\n            case \"predefinednumeric\":\r\n                obj['fields'][item.type === 'dynamic' ?\r\n                    \"(jsondata->>'\" + item.columnname + \"')::int\" :\r\n                    \"\\\"\" + item.columnname + \"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"predefinedtext\":\r\n                obj['fields'][item.type === 'dynamic' ? item.ismultilingual ?\r\n                    \"jsondata->'\" + item.columnname + \"'->>'\" + languageTypeCode + \"'\" :\r\n                    \"jsondata->>'\" + item.columnname + \"'\" :\r\n                    \"\\\"\" + item.columnname + \"\\\"\"] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n        const gridColumns = creategridColumns(item, languageTypeCode)\r\n        if (item.filterinputtype !== 'predefinednumeric') {\r\n            obj['gridColumns'].push(gridColumns)\r\n        }\r\n\r\n\r\n    })\r\n    return obj;\r\n}\r\n\r\nexport function filterObject(item, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    let preobj = {}\r\n    if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n        const optionList = resposedata[item.predefinedtablename].map(data => {\r\n            const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n            jsondata['text'] = item.predefinedismultilingual ?\r\n                jsondata[item.predefineddisplaymember]\r\n                [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                : jsondata[item.predefineddisplaymember];\r\n            jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n            //delete jsondata.jsondata\r\n            return jsondata\r\n        });\r\n        datapredef[item.columnname] = optionList\r\n        // preobj = {\r\n        //     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\r\n        //     predefinedvaluemember: item.columnname\r\n        // }\r\n    }\r\n    switch (item.filterinputtype) {\r\n        case \"text\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n        case \"numeric\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: NumericFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"date\":\r\n            return obj = {\r\n                name: item.columnname + \"timestamp\",\r\n                label: item.displayname[languageTypeCode],\r\n                filter: DateFilter,\r\n                operators: Operators.date,\r\n            }\r\n        case \"predefinednumeric\":\r\n\r\n\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"predefinedtext\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.text,\r\n            }\r\n        default:\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n\r\n    }\r\n\r\n    //return obj;\r\n}\r\n\r\nexport function getDynamicFilterExecuteData(inputParam) {\r\n    return function (dispatch) {\r\n        let obj = { ...inputParam.component, filterquery: inputParam.filterquery, userinfo: inputParam.userinfo }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\", obj)\r\n            .then(response => {\r\n                const source = inputParam.component.source\r\n                const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                const lstData = response.data[inputParam.component.label]\r\n                const multilingual = []\r\n                inputParam.component.filterfields.map(item => {\r\n                    if (item.ismultilingual) {\r\n                        multilingual.push(item.columnname)\r\n                    }\r\n                })\r\n                const optionList = lstData.map(item => {\r\n                    const jsondata = item[source] ? item[source].value ?\r\n                        JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                    multilingual.map(mul => {\r\n                        jsondata[mul] =\r\n                            jsondata[mul][languageTypeCode] || jsondata[mul]['en-US'];\r\n                    })\r\n                    // let label = isMultiLingual ?\r\n                    //   jsondata[optionValue]\r\n                    //   [languageTypeCode] || jsondata[optionValue]['en-US']\r\n                    //   : jsondata[optionValue];\r\n\r\n                    return jsondata\r\n                });\r\n                if (inputParam.userinfo.nformcode === 161) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList,\r\n                            onExecute: false,\r\n                            loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode]\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList,\r\n                            // onExecute: false,\r\n                            loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode]\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function rearrangeDateFormatforKendoDataTool(userInfo, dateValue) {\r\n    let splitChar = \"/\";\r\n\r\n    if (dateValue !== undefined) {\r\n        const index = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\" || \"-\")\r\n        if (index !== -1)\r\n            splitChar = userInfo.ssitedatetime.substring(index, index + 1)\r\n\r\n    }\r\n    //   console.log(\"splitChar:\", splitChar);\r\n    if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\r\n        const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n        // console.log(\"firstField:\", firstField);\r\n        const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n        const datetime = dateValue.split(timeSplitChar);\r\n        const dateArray = datetime[0].split(splitChar);\r\n        if (firstField === \"dd\") {\r\n            const day = dateArray[0];\r\n            const month = dateArray[1];\r\n            const year = dateArray[2];\r\n            const time = datetime[1] || \"00:00:00\";\r\n\r\n            const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n            return new Date(formatted);\r\n        }\r\n        else if (firstField === \"yyyy\") {\r\n            const year = dateArray[0];\r\n            const month = dateArray[1];\r\n            const day = dateArray[2];\r\n            const time = datetime[1] || \"00:00:00\";\r\n            const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n            return new Date(formatted);\r\n        }\r\n        else {\r\n            return new Date(dateValue);\r\n        }\r\n    }\r\n    else {\r\n        return dateValue;\r\n    }\r\n}\r\n\r\nexport function preRegDispatch(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        dispatch({\r\n            type: DEFAULT_RETURN,\r\n            payload: {\r\n                ...inputParam\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function validateEsignforRegistration(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"registration\";\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                    }\r\n                    //dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    dispatch(dispatchMethods(inputParam[\"screenData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nfunction dispatchMethods(screenData) {\r\n    return (dispatch) => {\r\n        let action = screenData.inputParam.action\r\n        switch (action) {\r\n            case \"preregister\":\r\n                dispatch(insertRegistration(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"editSample\":\r\n                dispatch(updateRegistration(screenData.inputParam, screenData.masterData, 'openModal'));\r\n                break;\r\n            case \"accept\":\r\n                dispatch(acceptRegistration(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"quarantine\":\r\n                dispatch(preregRecordToQuarantine(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"cancelTest\":\r\n                dispatch(cancelTestAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"cancelSample\":\r\n                dispatch(cancelSampleAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"addregsourcecountry\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            case \"deleteregsourcecountry\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            case \"printer\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"))\r\n                break;\r\n            case \"editSubSample\":\r\n                dispatch(onUpdateSubSampleRegistration(screenData.inputParam, screenData.masterData));\r\n                //ALPD-1128\r\n                break;\r\n            case \"cancelSubSample\":\r\n                dispatch(cancelSubSampleAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getStorageCategoryForSendToStore(storeInputParam, selectedRecord, sampleDetails) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        const userInfo = storeInputParam.userInfo;\r\n        let masterData = storeInputParam.masterData;\r\n        const sendToStoreId = storeInputParam.controlcode;\r\n\r\n\r\n        const geStorageCategory = rsapi.post(\"/storagecategory/getStorageCategory\", { 'userinfo': userInfo });\r\n        const getUnit = rsapi.post(\"/unit/getUnit\", { 'userinfo': userInfo });\r\n        const getApprovedLocation = rsapi.post(\"/samplestoragemaster/getSampleQty\", sampleDetails);\r\n\r\n        let urlArray = [geStorageCategory, getUnit, getApprovedLocation];\r\n\r\n        ///////////////////////////////\r\n        if (sampleDetails.needSubSample) {\r\n            if (masterData[\"selectedSubSample\"].length > 1 ||\r\n                masterData[\"selectedSubSample\"]\r\n                    .findIndex(x => x[storeInputParam.primaryKeyName] === storeInputParam[\"mastersendtostore\"][storeInputParam.primaryKeyName])\r\n                === -1) {\r\n                storeInputParam.subSampleRegParam[\"getSubSampleChildDetail\"] = true;\r\n            }\r\n\r\n            masterData[\"selectedSubSample\"] = [];\r\n            masterData[\"selectedSubSample\"].push(storeInputParam[\"mastersendtostore\"]);\r\n\r\n            // storeInputParam.subSampleRegParam[\"npreregno\"] = storeInputParam[\"mastersendtostore\"][\"npreregno\"];\r\n            // storeInputParam.subSampleRegParam[\"checkBoxOperation\"] = 3;\r\n            // storeInputParam.subSampleRegParam[\"nfilterstatus\"] = storeInputParam[\"mastersendtostore\"][\"ntransactionstatus\"];\r\n            // storeInputParam.subSampleRegParam[\"napprovalconfigcode\"] = storeInputParam[\"mastersendtostore\"][\"napprovalconfigcode\"];\r\n\r\n            let inputParamData = {\r\n                nsampletypecode: storeInputParam[\"subSampleRegParam\"].nsampletypecode,\r\n                nregtypecode: storeInputParam[\"subSampleRegParam\"].nregtypecode,\r\n                nregsubtypecode: storeInputParam[\"subSampleRegParam\"].nregsubtypecode,\r\n                npreregno: String(storeInputParam[\"mastersendtostore\"].npreregno),\r\n                ntransactionsamplecode: String(storeInputParam[\"mastersendtostore\"].ntransactionsamplecode),\r\n                ntransactionstatus: storeInputParam[\"mastersendtostore\"].ntransactionstatus,\r\n                napprovalconfigcode: storeInputParam[\"mastersendtostore\"].napprovalconfigcode,\r\n                activeTestTab: storeInputParam[\"subSampleRegParam\"].activeTestTab,\r\n                activeSampleTab: storeInputParam[\"subSampleRegParam\"].activeSampleTab,\r\n                activeSubSampleTab: storeInputParam[\"subSampleRegParam\"].activeSubSampleTab,\r\n                userinfo: storeInputParam.userInfo,\r\n                ndesigntemplatemappingcode: storeInputParam[\"subSampleRegParam\"].ndesigntemplatemappingcode,\r\n                checkBoxOperation: storeInputParam[\"masterData\"].checkBoxOperation,\r\n                nneedsubsample: storeInputParam[\"subSampleRegParam\"].nneedsubsample\r\n            }\r\n\r\n            urlArray.push(rsapi.post(\"registration/getRegistrationTest\", inputParamData));\r\n        }\r\n        else {\r\n            if (masterData[\"selectedSample\"].length > 1 ||\r\n                masterData[\"selectedSample\"]\r\n                    .findIndex(x => x[storeInputParam.primaryKeyName] === storeInputParam[\"mastersendtostore\"][storeInputParam.primaryKeyName])\r\n                === -1) {\r\n                storeInputParam.mainSampleRegParam[\"getSampleChildDetail\"] = true;\r\n            }\r\n            masterData[\"selectedSample\"] = [];\r\n            masterData[\"selectedSample\"].push(storeInputParam[\"mastersendtostore\"]);\r\n\r\n            const inputParamData = {\r\n                nsampletypecode: storeInputParam.mainSampleRegParam.nsampletypecode,\r\n                nregtypecode: storeInputParam.mainSampleRegParam.nregtypecode,\r\n                nregsubtypecode: storeInputParam.mainSampleRegParam.nregsubtypecode,\r\n                npreregno: String(storeInputParam.mastersendtostore.npreregno),\r\n                ntransactionstatus: storeInputParam.mastersendtostore.ntransactionstatus,\r\n                napprovalconfigcode: storeInputParam.mastersendtostore.napprovalconfigcode,\r\n                activeTestTab: storeInputParam.mainSampleRegParam.activeTestTab,\r\n                activeSampleTab: storeInputParam.mainSampleRegParam.activeTestTab,\r\n                activeSubSampleTab: storeInputParam.mainSampleRegParam.activeTestTab,\r\n                userinfo: storeInputParam.userInfo,\r\n                ndesigntemplatemappingcode: storeInputParam.mainSampleRegParam.ndesigntemplatemappingcode,\r\n                nneedsubsample: storeInputParam.mainSampleRegParam.nneedsubsample,\r\n                ntype: storeInputParam.masterData.checkBoxOperation === 7 ? 4 : undefined,\r\n                checkBoxOperation: storeInputParam.masterData.nneedsubsample === true ?\r\n                    storeInputParam.masterData.checkBoxOperation === 5 ? 3 : storeInputParam.masterData.checkBoxOperation : storeInputParam.mastersendtostore.checkBoxOperation\r\n\r\n            }\r\n            urlArray.push(rsapi.post(\"registration/getRegistrationSubSample\", inputParamData));\r\n\r\n        }\r\n\r\n        ///////////\r\n        console.log(\"urlArray:\", urlArray);\r\n        Axios.all(urlArray)\r\n            //    rsapi.post(\"/storagecategory/getStorageCategory\",\r\n            //     { 'userinfo': userInfo })\r\n            .then(response => {\r\n                console.log(\"res:\", response);\r\n                if (response[2].data[\"ReturnStatus\"] !== undefined) {\r\n                    toast.info(response[2].data[\"ReturnStatus\"]);\r\n                    masterData = {\r\n                        ...masterData, ...response[3].data\r\n                    };\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            // openChildModal: true,\r\n                            // operation: \"sendToStore\",\r\n                            ncontrolcode: sendToStoreId,\r\n                            selectedRecord,\r\n                            npreregno: sampleDetails.npreregno,\r\n                            ntransactionsamplecode: sampleDetails.ntransactionsamplecode\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    const conditionMap = constructOptionList(response[0].data, \"nstoragecategorycode\", \"sstoragecategoryname\", false, false, true);\r\n                    const conditionMaster = conditionMap.get(\"OptionList\");\r\n\r\n                    const conditionUnitMap = constructOptionList(response[1].data, \"nunitcode\", \"sunitname\", false, false, true);\r\n                    const conditionUnitMaster = conditionUnitMap.get(\"OptionList\");\r\n\r\n                    let isneedSubSampleQty = false;\r\n                    let approvedTreeData = [];\r\n                    selectedRecord[\"nsamplestoragelocationcode\"] = [];\r\n                    selectedRecord[\"nstoragecategorycode\"] = [];\r\n                    selectedRecord[\"nsampleqty\"] = undefined;\r\n                    selectedRecord[\"sampleToStore\"] = sampleDetails.sample === undefined ? \"\" : sampleDetails.sample;\r\n                   \r\n                    if (response[2].data !== null && response[2].data[\"isNeedSubSampleQty\"] && response[2].data[\"isNeedSubSampleQty\"] !== \"\") {\r\n                        isneedSubSampleQty = false;\r\n                    }else{\r\n                        isneedSubSampleQty = true;\r\n                    }\r\n\r\n                    if (response[2].data !== null && response[2].data.unit && response[2].data.unit.value !== undefined) {\r\n                        conditionUnitMaster.map(item => item.value === response[2].data.unit.value ?\r\n                            selectedRecord[\"nunitcode\"] = {\r\n                                \"label\": item.label,\r\n                                \"value\": item.value,\r\n                                \"item\": item.item\r\n                            }\r\n                            : \"\");\r\n\r\n                    }\r\n                    masterData = {\r\n                        ...masterData, storageCategory: conditionMaster, approvedTreeData,\r\n                        unitMaster: conditionUnitMaster, ...response[3].data\r\n                    };\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"sendToStore\",\r\n                            ncontrolcode: sendToStoreId,\r\n                            selectedRecord,\r\n                            npreregno: sampleDetails.npreregno,\r\n                            ntransactionsamplecode: sampleDetails.ntransactionsamplecode,isneedSubSampleQty\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 503) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function UpdateExternalOrderStatus(portallist, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post((String)(inputParam.inputData[\"url\"]) + \"/portal/UpdateMultiSampleStatus\", JSON.stringify(portallist), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function autoExternalComponentLoadBasedOnSpec(dispatchData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        rsapi.post(\"/registration/getSampleBasedOnExternalOrder\",\r\n            { 'nexternalordercode': dispatchData.selectedRecord[\"Order\"]?dispatchData.selectedRecord[\"Order\"].value:-1 }).then(response => {\r\n                let Sample = response.data.Sample\r\n                let Test1 = response.data.Test\r\n                let subSampleDataGridList = []\r\n                let Component = []\r\n                const Test = {};\r\n                Sample.map((sample, index) => {\r\n                    let saveComponent = {};\r\n                    saveComponent[\"slno\"] = index;\r\n                    saveComponent['jsondata'] = {}\r\n                    saveComponent['jsonuidata'] = {}\r\n                    saveComponent['ncomponentcode']=sample['ncomponentcode'] \r\n                    saveComponent['nspecsampletypecode']=sample['nspecsampletypecode'] \r\n                    saveComponent['scomponentname']=sample['scomponentname'] \r\n                    //saveComponent['jsondata']['ncomponentcode'] = { label: sample['scomponentname'], value: sample['ncomponentcode'] }\r\n                   // saveComponent['jsonuidata']['ncomponentcode'] = sample['scomponentname']\r\n\r\n                  //  saveComponent['jsondata']['scomponentname'] =  sample['scomponentname']\r\n                    saveComponent['jsonuidata']['scomponentname'] = sample['scomponentname']\r\n\r\n                    saveComponent['jsondata']['External Sample ID_child'] = sample['sexternalsampleid']\r\n                    saveComponent['jsonuidata']['External Sample ID_child'] = sample['sexternalsampleid']\r\n\r\n                    // saveComponent['jsondata']['Quantity_child'] = sample['nsampleqty']\r\n                    // saveComponent['jsonuidata']['Quantity_child'] = sample['nsampleqty']\r\n\r\n                    // saveComponent['jsondata']['Unit Name_child'] = { label: sample['sunitname'], value: sample['nunitcode'] }\r\n                    // saveComponent['jsonuidata']['Unit Name_child'] = sample['sunitname']\r\n                    \r\n                    subSampleDataGridList.push({ ...saveComponent['jsonuidata'], ...saveComponent });\r\n                    Component.unshift(saveComponent);\r\n\r\n                    const filterTest=Test1.filter(x=>x.nexternalordersamplecode===sample.nexternalordersamplecode)\r\n                    filterTest.map(x=>{\r\n                        x['slno']=index\r\n                    })\r\n                    //selectedTestData=[...selectedTestData,...filterTest]\r\n                    Test[index]=filterTest\r\n\r\n                })\r\n                dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ...dispatchData,\r\n                            Component, \r\n                            selectedComponent: Component.length>0?{...Component[0]}:{},\r\n                            selectComponent: {},\r\n                            SelectedTest:Component.length>0? Test[Component[0].slno]:[],\r\n                            Test: Test, \r\n                            selectedTestData: {},\r\n                            subSampleDataGridList,\r\n                        }\r\n                    });\r\n                })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}