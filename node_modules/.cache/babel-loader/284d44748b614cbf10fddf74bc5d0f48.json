{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\approvalconfig\\\\AddApprovalConfig.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Tab, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport { ApprovalSubType, transactionStatus } from '../../../components/Enumeration';\n\nconst AddApprovalConfig = props => {\n  if (props.operation === 'copy') return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_COPYAPPROVALCONFIG\",\n    message: \"Copy Approval Config\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_APPROVALSUBTYPE\",\n    message: \"Approval Sub Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 49\n    }\n  }, \" \", props.masterData.approvalSubTypeValue[\"label\"]))), props.masterData.registrationTypeValue && props.masterData.registrationSubTypeValue ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_REGISTRATIONTYPE\",\n    message: \"Registration Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 51\n    }\n  }, \" \", props.masterData.registrationTypeValue[\"label\"]))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_REGISTRATIONSUBTYPE\",\n    message: \"Registration Sub Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 51\n    }\n  }, \" \", props.masterData.registrationSubTypeValue[\"label\"])))) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_VERSIONNAME\",\n    message: \"Version Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 51\n    }\n  }, \"  \", props.selectedVersion[\"sversionname\"]))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_VERSIONNO\",\n    message: \"Version No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 51\n    }\n  }, \" \", props.selectedVersion[\"sapproveconfversiondesc\"])))))), \" \"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_VERSIONNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_VERSIONNAME\"\n    }),\n    name: \"sversionname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    value: props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(React.Fragment, null, props.registrationTypeOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REGISTRATIONTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    name: \"regtype\",\n    optionId: \"nregtypecode\",\n    optionValue: \"sregtypename\",\n    options: props.registrationTypeOptions,\n    value: props.selectedRecord ? props.selectedRecord[\"regtype\"] : props.sthis.props.registrationTypeValue,\n    onChange: event => props.onComboChange(event, null, 'regtype'),\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }) : \"\", props.registrationSubTypeOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REGISTRATIONSUBTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    name: \"regsubtype\",\n    optionId: \"nregsubtypecode\",\n    optionValue: \"sregsubtypename\",\n    options: props.registrationSubTypeOptions,\n    value: props.selectedRecord ? props.selectedRecord[\"regsubtype\"] : props.registrationSubTypeValue,\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    onChange: event => props.onComboChange(event, null, 'regsubtype'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }) : \"\") : \"\")));else {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, props.userRoleTree ? props.userRoleTree.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: props.intl.formatMessage({\n        id: \"IDS_VERSIONNAME\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_VERSIONNAME\"\n      }),\n      name: \"sversionname\",\n      type: \"text\",\n      onChange: event => props.onInputOnChange(event),\n      value: props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\",\n      isMandatory: true,\n      required: true,\n      maxLength: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), props.nsubType == ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 35\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_AUTOAPPROVAL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 41\n      }\n    }), \" \")) : \"\", props.nsubType !== ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(React.Fragment, null, props.versionConfig.map(action => /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: 'IDS_AUTOAPPROVAL'\n      }),\n      placeholder: props.intl.formatMessage({\n        id: 'IDS_AUTOAPPROVAL'\n      }),\n      type: \"switch\",\n      name: `${action.stransdisplaystatus}`,\n      onChange: event => props.onInputOnChange(event),\n      defaultValue: props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false,\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    })))) : \"\", props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: \"IDS_AUTOINNERBAND\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_AUTOINNERBAND\"\n      }),\n      type: \"switch\",\n      name: \"nneedautoinnerband\",\n      onChange: event => props.onInputOnChange(event),\n      defaultValue: props.selectedRecord[\"nneedautoinnerband\"] ? props.selectedRecord[\"nneedautoinnerband\"] === transactionStatus.YES ? true : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord[\"nneedautoinnerband\"] ? props.selectedRecord[\"nneedautoinnerband\"] === transactionStatus.YES ? true : false : false,\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    })) : \"\", props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: \"IDS_AUTOOUTERBAND\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_AUTOOUTERBAND\"\n      }),\n      type: \"switch\",\n      name: \"nneedautoouterband\",\n      onChange: event => props.onInputOnChange(event),\n      defaultValue: props.selectedRecord[\"nneedautoouterband\"] ? props.selectedRecord[\"nneedautoouterband\"] === transactionStatus.YES ? true : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord[\"nneedautoouterband\"] ? props.selectedRecord[\"nneedautoouterband\"] === transactionStatus.YES ? true : false : false,\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    })) : \"\", props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(React.Fragment, null, props.versionConfig.map(action => /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: 'IDS_ANYCASE'\n      }),\n      placeholder: props.intl.formatMessage({\n        id: 'IDS_ANYCASE'\n      }),\n      type: \"switch\",\n      name: `${action.stransdisplaystatus}`,\n      onChange: event => props.onInputOnChange(event),\n      defaultValue: props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false,\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    })))) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      defaultActiveKey: props.userRoleTree[0].suserrolename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"d-flex tab-card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      as: \"ul\",\n      className: \"nav nav-tabs card-header-tabs flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 49\n      }\n    }, props.userRoleTree.map((userrole, index) => /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: userrole.suserrolename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 61\n      }\n    }, userrole.suserrolenamelevel))))), /*#__PURE__*/React.createElement(Tab.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 45\n      }\n    }, props.userRoleTree.map((userrole, index1) => /*#__PURE__*/React.createElement(Tab.Pane, {\n      className: \"p-5 fade \",\n      eventKey: userrole.suserrolename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border border-dark border-top-0 border-right-0 border-left-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 61\n      }\n    }, props.roleConfig.map(action => /*#__PURE__*/React.createElement(React.Fragment, null, action.ntranscode !== transactionStatus.SECTIONWISEAPPROVAL && /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      placeholder: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      type: \"switch\",\n      name: `${action.stransstatus}_${userrole.nuserrolecode}`,\n      onChange: event => props.onInputOnChange(event, userrole),\n      defaultValue: props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus + '_' + userrole.nuserrolecode] === transactionStatus.YES ? true : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.YES ? true : false : action.ntranscode === transactionStatus.PARTIALAPPROVAL ? true : false,\n      disabled: props.selectedRecord && props.selectedRecord['IDS_AUTOAPPROVAL'] && props.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES && action.ntranscode === transactionStatus.AUTOAPPROVAL ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 81\n      }\n    })), action.ntranscode === transactionStatus.SECTIONWISEAPPROVAL && /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      placeholder: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      type: \"switch\",\n      name: `${action.stransstatus}_${userrole.nuserrolecode}`,\n      onChange: event => props.onInputOnChange(event, userrole),\n      defaultValue: props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus + '_' + userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.YES && props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.NO ? true : false : false : false,\n      disabled: props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.NO ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 81\n      }\n    })))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 57\n      }\n    }, props.actionStatus.map(action => /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      placeholder: props.intl.formatMessage({\n        id: action.stransdisplaystatus ? action.stransdisplaystatus : ''\n      }),\n      type: \"switch\",\n      name: `${action.stransstatus}_${userrole.nuserrolecode}`,\n      onChange: event => props.onInputOnChange(event, userrole, action),\n      defaultValue: props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false,\n      isMandatory: false,\n      required: false,\n      checked: props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus + '_' + userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false,\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: `napprovalstatuscode_${userrole.nuserrolecode}`,\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_APPROVALSTATUS\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }) //key={`napprovalstatuscode_${userrole.nuserrolecode}`}\n      ,\n      value: props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] : props.approvalStatusValue,\n      options: props.approvalStatusOptions,\n      optionId: \"ntranscode\",\n      optionValue: \"stransdisplaystatus\",\n      isMandatory: true,\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: true,\n      as: \"select\",\n      onChange: event => props.onComboChange(event, userrole, `approvalstatus_${userrole.nuserrolecode}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: `filterstatus_${userrole.nuserrolecode}`,\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_FILTERSTATUS\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      key: `filterstatus_${userrole.nuserrolecode}`,\n      value: props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] : props.filterStatusValues,\n      options: props.filterStatusOptions,\n      optionId: \"ntranscode\",\n      optionValue: \"stransstatus\",\n      isMandatory: true,\n      isMulti: true,\n      isDisabled: false,\n      isSearchable: true,\n      closeMenuOnSelect: false,\n      as: \"select\",\n      onChange: event => props.onComboChange(event, userrole, `filterstatus_${userrole.nuserrolecode}`),\n      isClearable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: `validationstatus_${userrole.nuserrolecode}`,\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_VALIDATIONSTATUS\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      key: `validationstatus_${userrole.nuserrolecode}`,\n      value: props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] : props.validationStatusValues,\n      options: props.userRoleTree.length > 1 && index1 === props.userRoleTree.length - 1 ? props.validationStatusOptions : props.userRoleTree.length === 1 ? props.validationStatusOptions : props.topLevelValidStatusOptions ///options={props.validationStatusOptions}\n      ,\n      optionId: \"ntranscode\",\n      optionValue: \"stransstatus\",\n      isMandatory: true,\n      isMulti: true,\n      isDisabled: false,\n      isSearchable: true,\n      closeMenuOnSelect: false,\n      isClearable: true,\n      as: \"select\",\n      onChange: event => props.onComboChange(event, userrole, `validationstatus_${userrole.nuserrolecode}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 65\n      }\n    }), props.checklistOptions ? props.checklistOptions.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: `checklist_${userrole.nuserrolecode}`,\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_CHECKLIST\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      key: `checklist_${userrole.nuserrolecode}`,\n      value: props.selectedRecord[`checklist_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklist_${userrole.nuserrolecode}`] : props.checklistValues,\n      options: props.checklistOptions,\n      optionId: \"nchecklistcode\",\n      optionValue: \"schecklistname\",\n      isMandatory: true,\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: true,\n      closeMenuOnSelect: true,\n      as: \"select\",\n      onChange: event => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: `checklist_${userrole.nuserrolecode}`,\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_CHECKLIST\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      key: `checklist_${userrole.nuserrolecode}`,\n      value: props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] : props.checklistVersionValues,\n      options: props.checklistVersionOptions,\n      optionId: \"nchecklistversioncode\",\n      optionValue: \"schecklistversionname\",\n      isMandatory: true,\n      isMulti: false,\n      isDisabled: true,\n      isSearchable: true,\n      closeMenuOnSelect: false,\n      as: \"select\",\n      onChange: event => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 69\n      }\n    })) : \"\" : \"\"))))))))))) : \"\" : \"\");\n  }\n};\n\nexport default injectIntl(AddApprovalConfig);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/configurationmaster/approvalconfig/AddApprovalConfig.jsx"],"names":["React","Row","Col","Card","Tab","Nav","FormGroup","FormLabel","injectIntl","FormattedMessage","FormInput","CustomSwitch","FormSelectSearch","ApprovalSubType","transactionStatus","AddApprovalConfig","props","operation","masterData","approvalSubTypeValue","registrationTypeValue","registrationSubTypeValue","selectedVersion","intl","formatMessage","id","event","onInputOnChange","selectedRecord","nsubType","TESTRESULTAPPROVAL","registrationTypeOptions","sthis","onComboChange","registrationSubTypeOptions","userRoleTree","length","versionConfig","map","action","stransdisplaystatus","YES","suserrolename","userrole","index","suserrolenamelevel","index1","roleConfig","ntranscode","SECTIONWISEAPPROVAL","stransstatus","nuserrolecode","PARTIALAPPROVAL","AUTOAPPROVAL","NO","actionStatus","approvalStatusValue","approvalStatusOptions","filterStatusValues","filterStatusOptions","validationStatusValues","validationStatusOptions","topLevelValidStatusOptions","checklistOptions","checklistValues","checklistVersionValues","checklistVersionOptions"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Tab, Nav,FormGroup, FormLabel } from 'react-bootstrap';\r\nimport {injectIntl, FormattedMessage } from 'react-intl';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component'\r\nimport { ApprovalSubType, transactionStatus } from '../../../components/Enumeration'\r\nconst AddApprovalConfig = (props) => {\r\n   \r\n    if (props.operation === 'copy')\r\n        return (\r\n            <>\r\n            <Row>    \r\n                                             \r\n                   <Col md={12}><FormGroup>\r\n                         <Card>\r\n                              <Card.Header><FormattedMessage id=\"IDS_COPYAPPROVALCONFIG\" message=\"Copy Approval Config\"/></Card.Header>\r\n                              <Card.Body>                                \r\n                                   <Row>  \r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_APPROVALSUBTYPE\" message=\"Approval Sub Type\"/></FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.masterData.approvalSubTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n                                        {props.masterData.registrationTypeValue && \r\n                                                       props.masterData.registrationSubTypeValue ? \r\n                                        <>\r\n                                         <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONTYPE\" message=\"Registration Type\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.masterData.registrationTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n\r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONSUBTYPE\" message=\"Registration Sub Type\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.masterData.registrationSubTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>  \r\n                                        </> \r\n                                       :\"\" }    \r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_VERSIONNAME\" message=\"Version Name\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\">  {props.selectedVersion[\"sversionname\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n\r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_VERSIONNO\" message=\"Version No\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.selectedVersion[\"sapproveconfversiondesc\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>                                                                                             \r\n                                   </Row>\r\n                              </Card.Body>       \r\n                         </Card> </FormGroup>                       \r\n                    </Col>                            \r\n               </Row>\r\n              \r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                        name={\"sversionname\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n\r\n                  \r\n\r\n                    {props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ?\r\n                        <>\r\n                            {props.registrationTypeOptions ?\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"regtype\"\r\n                                    optionId=\"nregtypecode\"\r\n                                    optionValue=\"sregtypename\"\r\n                                    options={props.registrationTypeOptions}\r\n                                    value={props.selectedRecord ? props.selectedRecord[\"regtype\"] : props.sthis.props.registrationTypeValue}\r\n                                    onChange={(event) => props.onComboChange(event, null, 'regtype')}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}\r\n                                    isDisabled={false}\r\n                                />\r\n                                : \"\"}\r\n                            {props.registrationSubTypeOptions ?\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"regsubtype\"\r\n                                    optionId=\"nregsubtypecode\"\r\n                                    optionValue=\"sregsubtypename\"\r\n                                    options={props.registrationSubTypeOptions}\r\n                                    value={props.selectedRecord ? props.selectedRecord[\"regsubtype\"] : props.registrationSubTypeValue}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}\r\n                                    isDisabled={false}\r\n                                    onChange={(event) => props.onComboChange(event, null, 'regsubtype')}\r\n\r\n                                />\r\n                                : \"\"}\r\n                        </>\r\n                        : \"\"}\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        )\r\n    else {\r\n        return (\r\n\r\n            <Row>\r\n                \r\n                {props.userRoleTree ? props.userRoleTree.length > 0 ?\r\n                    <>\r\n                 \r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                                name={\"sversionname\"}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                value={props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                    \r\n                        { /*Added by sonia on 14th NOV 2024 for jira id: ALPD-5086\t*/  }\r\n                                               \r\n                            {props.nsubType == ApprovalSubType.TESTRESULTAPPROVAL ?\r\n                                <Col md={12}>\r\n                                  <h6>  <FormattedMessage id={\"IDS_AUTOAPPROVAL\"} /> </h6>\r\n                                </Col>  \r\n                            : \"\"}                                           \r\n                        \r\n                        {props.nsubType !== ApprovalSubType.TESTRESULTAPPROVAL ?\r\n                                <>\r\n                                {props.versionConfig.map(action =>\r\n                                    <Col md={4}>\r\n                                        <CustomSwitch\r\n                                            label={props.intl.formatMessage({ id: 'IDS_AUTOAPPROVAL'})}\r\n                                            placeholder={props.intl.formatMessage({ id: 'IDS_AUTOAPPROVAL'})}\r\n                                            type=\"switch\"\r\n                                            name={`${action.stransdisplaystatus}`}\r\n                                            onChange={(event) => props.onInputOnChange(event)}\r\n                                            defaultValue={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                            isMandatory={false}\r\n                                            required={false}\r\n                                            checked={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                            disabled={false}\r\n                                        >\r\n                                        </CustomSwitch>\r\n                                     </Col>\r\n                                )}\r\n                                </>\r\n                        :\"\"}         \r\n                            {props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ?                                \r\n                                    <Col md={4}>\r\n                                        <CustomSwitch\r\n                                            label={props.intl.formatMessage({ id: \"IDS_AUTOINNERBAND\" })}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_AUTOINNERBAND\" })}\r\n                                            type=\"switch\"\r\n                                            name={\"nneedautoinnerband\"}\r\n                                            onChange={(event) => props.onInputOnChange(event)}\r\n                                            defaultValue={props.selectedRecord[\"nneedautoinnerband\"] ? props.selectedRecord[\"nneedautoinnerband\"] === transactionStatus.YES ? true : false : false}\r\n                                            isMandatory={false}\r\n                                            required={false}\r\n                                            checked={props.selectedRecord[\"nneedautoinnerband\"] ? props.selectedRecord[\"nneedautoinnerband\"] === transactionStatus.YES ? true : false : false}\r\n                                            disabled={false}\r\n                                        >\r\n                                        </CustomSwitch>\r\n                                    </Col>\r\n                            :\"\"}                    \r\n                           {props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ?     \r\n                                <Col md={4}>\r\n                                    <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_AUTOOUTERBAND\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_AUTOOUTERBAND\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"nneedautoouterband\"}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        defaultValue={props.selectedRecord[\"nneedautoouterband\"] ? props.selectedRecord[\"nneedautoouterband\"] === transactionStatus.YES ? true : false : false}\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={props.selectedRecord[\"nneedautoouterband\"] ? props.selectedRecord[\"nneedautoouterband\"] === transactionStatus.YES ? true : false : false}\r\n                                        disabled={false}\r\n                                    >\r\n                                    </CustomSwitch>\r\n                                </Col>\r\n                            :\"\"}\r\n                            {props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ? \r\n                                <>\r\n                                {props.versionConfig.map(action =>\r\n                                    <Col md={4}>\r\n                                        <CustomSwitch\r\n                                            label={props.intl.formatMessage({ id: 'IDS_ANYCASE'})}\r\n                                            placeholder={props.intl.formatMessage({ id: 'IDS_ANYCASE'})}\r\n                                            type=\"switch\"\r\n                                            name={`${action.stransdisplaystatus}`}\r\n                                            onChange={(event) => props.onInputOnChange(event)}\r\n                                            defaultValue={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                            isMandatory={false}\r\n                                            required={false}\r\n                                            checked={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                            disabled={false}\r\n                                        >\r\n                                        </CustomSwitch>\r\n                                    </Col>\r\n                                )}\r\n                                </>  \r\n                                \r\n                            :\"\"}\r\n                        <Col md={12}>\r\n                            <Row noGutters={true}>\r\n                                <Col md=\"12\">\r\n                                    <Card className=\"at-tabs\">\r\n\r\n                                        <Tab.Container defaultActiveKey={props.userRoleTree[0].suserrolename}>\r\n                                            <Card.Header className=\"d-flex tab-card-header\">\r\n                                                <Nav as=\"ul\" className=\"nav nav-tabs card-header-tabs flex-grow-1\">\r\n                                                    {props.userRoleTree.map((userrole, index) =>\r\n                                                        <Nav.Item as=\"li\">\r\n                                                            <Nav.Link eventKey={userrole.suserrolename}>{userrole.suserrolenamelevel}\r\n                                                            {/* {index === props.userRoleTree.length-1  ?\r\n                                                                     `${userrole.suserrolename}( ${props.intl.formatMessage({id:\"IDS_TOPLEVEL\"})} )` \r\n                                                                     :userrole.suserrolename} */}\r\n                                                            </Nav.Link>\r\n                                                        </Nav.Item>\r\n                                                    )}\r\n                                                </Nav>\r\n                                            </Card.Header>\r\n                                            <Tab.Content>\r\n                                                {props.userRoleTree.map((userrole, index1) =>\r\n                                                    <Tab.Pane className=\"p-5 fade \" eventKey={userrole.suserrolename}>\r\n                                                        <div className=\"border border-dark border-top-0 border-right-0 border-left-0\">\r\n                                                            <Row>\r\n                                                            \r\n                                                                {props.roleConfig.map(action =>\r\n                                                                    <>\r\n                                                                        {action.ntranscode !== transactionStatus.SECTIONWISEAPPROVAL &&\r\n                                                                            <Col md={6}>\r\n                                                                                <CustomSwitch\r\n                                                                                    label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    type=\"switch\"\r\n                                                                                    name={`${action.stransstatus}_${userrole.nuserrolecode}`}\r\n                                                                                    onChange={(event) => props.onInputOnChange(event, userrole)}\r\n                                                                                    defaultValue={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false}\r\n                                                                                    isMandatory={false}\r\n                                                                                    required={false}\r\n                                                                                    checked={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : action.ntranscode === transactionStatus.PARTIALAPPROVAL ? true : false}\r\n                                                                                    disabled={props.selectedRecord && props.selectedRecord['IDS_AUTOAPPROVAL'] && props.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES && action.ntranscode === transactionStatus.AUTOAPPROVAL ? true : false}\r\n                                                                                />\r\n\r\n                                                                            </Col>\r\n                                                                        }\r\n                                                                        {action.ntranscode === transactionStatus.SECTIONWISEAPPROVAL &&\r\n                                                                            <Col md={6}>\r\n                                                                                <CustomSwitch\r\n                                                                                    label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    type=\"switch\"\r\n                                                                                    name={`${action.stransstatus}_${userrole.nuserrolecode}`}\r\n                                                                                    onChange={(event) => props.onInputOnChange(event, userrole)}\r\n                                                                                    defaultValue={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                                    isMandatory={false}\r\n                                                                                    required={false}\r\n                                                                                    checked={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.YES && props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.NO ? true : false : false : false}\r\n                                                                                    disabled={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.NO ? false : true}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        }\r\n                                                                    </>\r\n                                                                )}\r\n                                                            \r\n                                                            </Row>\r\n                                                        </div>\r\n                                                        <Row>\r\n                                                            {props.actionStatus.map(action =>\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <CustomSwitch\r\n                                                                        label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                        type=\"switch\"\r\n                                                                        name={`${action.stransstatus}_${userrole.nuserrolecode}`}\r\n                                                                        onChange={(event) => props.onInputOnChange(event, userrole, action)}\r\n                                                                        defaultValue={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                        isMandatory={false}\r\n                                                                        required={false}\r\n                                                                        checked={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransstatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                        disabled={false}\r\n                                                                    >\r\n                                                                    </CustomSwitch>\r\n                                                                </Col>\r\n                                                            )}\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    name={`napprovalstatuscode_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_APPROVALSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    //key={`napprovalstatuscode_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] : props.approvalStatusValue}\r\n                                                                    options={props.approvalStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransdisplaystatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={false}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `approvalstatus_${userrole.nuserrolecode}`)}\r\n                                                                />\r\n                                                                <FormSelectSearch\r\n                                                                    name={`filterstatus_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_FILTERSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    key={`filterstatus_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] : props.filterStatusValues}\r\n                                                                    options={props.filterStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransstatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={true}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    closeMenuOnSelect={false}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `filterstatus_${userrole.nuserrolecode}`)}\r\n                                                                    isClearable={true}\r\n                                                                />\r\n                                                                <FormSelectSearch\r\n                                                                    name={`validationstatus_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_VALIDATIONSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    key={`validationstatus_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] : props.validationStatusValues}\r\n                                                                    options={(props.userRoleTree.length > 1 && index1 === props.userRoleTree.length-1)  ? props.validationStatusOptions : props.userRoleTree.length === 1 ? props.validationStatusOptions : props.topLevelValidStatusOptions}\r\n                                                                 \r\n                                                                    ///options={props.validationStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransstatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={true}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    closeMenuOnSelect={false}\r\n                                                                    isClearable={true}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `validationstatus_${userrole.nuserrolecode}`)}\r\n                                                                />\r\n                                                                {/* {props.decisionStatusOptions ? props.decisionStatusOptions.length > 0 ?\r\n\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`decisionstatus_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_DECISIONSTATUS\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`decisionstatus_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`decisionstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`decisionstatus_${userrole.nuserrolecode}`] : props.decisionStatusValues}\r\n                                                                        options={props.decisionStatusOptions}\r\n                                                                        optionId=\"ntranscode\"\r\n                                                                        optionValue=\"stransstatus\"\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={true}\r\n                                                                        isDisabled={false}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={false}\r\n                                                                        isClearable={true}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `decisionstatus_${userrole.nuserrolecode}`)}\r\n                                                                    /> : \"\" : \"\"} */}\r\n                                                                {props.checklistOptions ? props.checklistOptions.length > 0 ?\r\n                                                                <>\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`checklist_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklist_${userrole.nuserrolecode}`] : props.checklistValues}\r\n                                                                        options={props.checklistOptions}\r\n                                                                        optionId=\"nchecklistcode\"\r\n                                                                        optionValue=\"schecklistname\"\r\n                                                                        isMandatory={true}\r\n                                                                        isMulti={false}\r\n                                                                        isDisabled={false}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`)}\r\n                                                                    />\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] : props.checklistVersionValues}\r\n                                                                        options={props.checklistVersionOptions}\r\n                                                                        optionId=\"nchecklistversioncode\"\r\n                                                                        optionValue=\"schecklistversionname\"\r\n                                                                        isMandatory={true}\r\n                                                                        isMulti={false}\r\n                                                                        isDisabled={true}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={false}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`)}\r\n                                                                    />\r\n                                                                </>\r\n                                                                    : \"\" : \"\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Tab.Pane>\r\n                                                )}\r\n                                            </Tab.Content>\r\n                                        </Tab.Container>\r\n\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                       \r\n                    </>\r\n                    : \"\" : \"\"}\r\n                    \r\n            </Row>\r\n\r\n        );\r\n                                                                    \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default injectIntl(AddApprovalConfig);"]},"metadata":{},"sourceType":"module"}