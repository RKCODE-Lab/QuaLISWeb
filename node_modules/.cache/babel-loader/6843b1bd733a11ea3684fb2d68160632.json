{"ast":null,"code":"import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';var UserMultiRoleTab=function UserMultiRoleTab(props){var addUserMultiRoleId=props.controlMap.has(\"AddRole\")&&props.controlMap.get(\"AddRole\").ncontrolcode;var editUserMultiRoleId=props.controlMap.has(\"EditRole\")&&props.controlMap.get(\"EditRole\").ncontrolcode;var resetPasswordId=props.controlMap.has(\"ResetPassword\")&&props.controlMap.get(\"ResetPassword\").ncontrolcode;var roleAddParam={screenName:\"IDS_ROLE\",operation:\"create\",primaryKeyField:\"nusermultirolecode\",primaryKeyValue:-2,masterData:props.masterData,userInfo:props.userInfo,ncontrolCode:addUserMultiRoleId};var roleEditParam={screenName:\"IDS_ROLE\",operation:\"update\",primaryKeyField:\"nusermultirolecode\",masterData:props.masterData,userInfo:props.userInfo,ncontrolCode:editUserMultiRoleId};var roleDeleteParam={screenName:\"IDS_ROLE\",methodUrl:\"UserMultiRole\",operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"resetrole\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(resetPasswordId)===-1,onClick:function onClick(){return props.resetPassword();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESETPASSWORD\",defaultMessage:\"Reset Password\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"addrole\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addUserMultiRoleId)===-1,onClick:function onClick(){return props.getUserMultiRoleComboDataService(roleAddParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ROLE\",defaultMessage:\"Role\"})))),props.userSite.nusersitecode===props.masterData.UsersSite.nusersitecode?/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nusermultirolecode\",data:props.masterData[\"UserMultiRole\"],dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:props.multiRoleColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,methodUrl:\"Role\",fetchRecord:props.getUserMultiRoleComboDataService,editParam:roleEditParam,deleteRecord:props.deleteRecord,deleteParam:roleDeleteParam,pageable:false,scrollable:\"scrollable\",isActionRequired:true,isToolBarRequired:false,selectedId:props.selectedId,hideColumnFilter:true}))):\"\");};export default injectIntl(UserMultiRoleTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/UserMultiRoleTab.js"],"names":["React","FormattedMessage","injectIntl","Row","Col","Nav","FontAwesomeIcon","faPlus","DataGrid","UserMultiRoleTab","props","addUserMultiRoleId","controlMap","has","get","ncontrolcode","editUserMultiRoleId","resetPasswordId","roleAddParam","screenName","operation","primaryKeyField","primaryKeyValue","masterData","userInfo","ncontrolCode","roleEditParam","roleDeleteParam","methodUrl","userRoleControlRights","indexOf","resetPassword","getUserMultiRoleComboDataService","userSite","nusersitecode","UsersSite","dataResult","dataState","dataStateChange","multiRoleColumnList","inputParam","deleteRecord","selectedId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {Row, Col, Nav} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nconst UserMultiRoleTab = (props) => {    \r\n    \r\n    const addUserMultiRoleId = props.controlMap.has(\"AddRole\") && props.controlMap.get(\"AddRole\").ncontrolcode\r\n    const editUserMultiRoleId = props.controlMap.has(\"EditRole\") && props.controlMap.get(\"EditRole\").ncontrolcode;\r\n       \r\n    const resetPasswordId = props.controlMap.has(\"ResetPassword\") && props.controlMap.get(\"ResetPassword\").ncontrolcode\r\n    \r\n    const roleAddParam = {screenName:\"IDS_ROLE\", operation:\"create\", primaryKeyField:\"nusermultirolecode\", \r\n                          primaryKeyValue:-2, masterData:props.masterData, userInfo:props.userInfo,\r\n                          ncontrolCode:addUserMultiRoleId};\r\n                          \r\n    const roleEditParam = {screenName:\"IDS_ROLE\", operation:\"update\",  primaryKeyField:\"nusermultirolecode\", \r\n                          masterData:props.masterData,   userInfo:props.userInfo,  ncontrolCode:editUserMultiRoleId};\r\n       \r\n    const roleDeleteParam ={screenName:\"IDS_ROLE\", methodUrl:\"UserMultiRole\", operation:\"delete\"};\r\n\r\n    return(<>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"resetrole\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(resetPasswordId) === -1}\r\n                                onClick={()=>props.resetPassword()}>\r\n                        <FormattedMessage id=\"IDS_RESETPASSWORD\" defaultMessage='Reset Password' />\r\n                    </Nav.Link>\r\n                    <Nav.Link name=\"addrole\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addUserMultiRoleId) === -1}\r\n                                onClick={()=>props.getUserMultiRoleComboDataService(roleAddParam)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id='IDS_ROLE' defaultMessage='Role' />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n\r\n            {props.userSite.nusersitecode === props.masterData.UsersSite.nusersitecode ?  \r\n                <Row noGutters={true}>\r\n                    <Col md={12}>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nusermultirolecode\"}\r\n                            data={props.masterData[\"UserMultiRole\"]}\r\n                            dataResult={props.dataResult}\r\n                            dataState={props.dataState}\r\n                            dataStateChange={props.dataStateChange}\r\n                            extractedColumnList={props.multiRoleColumnList}\r\n                            controlMap={props.controlMap}\r\n                            userRoleControlRights={props.userRoleControlRights}\r\n                            inputParam={props.inputParam}\r\n                            userInfo={props.userInfo}\r\n                            methodUrl=\"Role\"\r\n                            fetchRecord={props.getUserMultiRoleComboDataService}\r\n                            editParam={roleEditParam}\r\n                            deleteRecord={props.deleteRecord} \r\n                            deleteParam={roleDeleteParam}                                                                                          \r\n                            pageable={false}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={false}\r\n                            selectedId={props.selectedId}\r\n                            hideColumnFilter={true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            :\"\"}\r\n        </>\r\n    )   \r\n}\r\n                \r\nexport default injectIntl(UserMultiRoleTab);"]},"metadata":{},"sourceType":"module"}