{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var AddInstrumentMaintenance=function AddInstrumentMaintenance(props){console.log(\"123\",props);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INSTRUMENTID\"}),name:\"ninstrumentcode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.instrumentid,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dlastmaintenancedate\",label:props.intl.formatMessage({id:\"IDS_LASTMAINTENANCEDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dlastmaintenancedate\"]?props.selectedRecord[\"dlastmaintenancedate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,required:true,isMandatory:true,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"dlastmaintenancedate\",date);},value:props.selectedRecord[\"dlastmaintenancedate\"]})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dduedate\",label:props.intl.formatMessage({id:\"IDS_DUEDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,required:true,isMandatory:true,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"dduedate\",date);},value:props.selectedRecord[\"dduedate\"]})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.MaintenanceStatus,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMulti:false,isSearchable:true,isMandatory:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntranscode',1);}})));};export default injectIntl(AddInstrumentMaintenance);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentMaintenance.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","AddInstrumentMaintenance","props","console","log","intl","formatMessage","id","event","onInputOnChange","instrumentid","selectedRecord","Date","userInfo","ssitedate","currentTime","date","handleDateChange","MaintenanceStatus","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentMaintenance = (props) => {\r\n    console.log(\"123\",props)\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                name={\"ninstrumentcode\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                value={props.instrumentid}                   \r\n                isDisabled={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dlastmaintenancedate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_LASTMAINTENANCEDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dlastmaintenancedate\"]?props.selectedRecord[\"dlastmaintenancedate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dlastmaintenancedate\", date)}\r\n                             value={props.selectedRecord[\"dlastmaintenancedate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        {/* <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzlastmaintenancedate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzlastmaintenancedate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzlastmaintenancedate',1)}                               \r\n                              />                    \r\n\r\n        </Col> */}\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dduedate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_DUEDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dduedate\", date)}\r\n                             value={props.selectedRecord[\"dduedate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        {/* <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzduedate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                   value = { props.selectedRecord[\"ntzduedate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzduedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzduedate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n         */}\r\n                <Col md={12}>\r\n                          <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.MaintenanceStatus}                   \r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                               defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                               onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n            </Col>\r\n\r\n    </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentMaintenance);"]},"metadata":{},"sourceType":"module"}