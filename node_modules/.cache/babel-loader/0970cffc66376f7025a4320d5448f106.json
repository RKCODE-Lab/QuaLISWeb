{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\Scheduler\\\\SchedulerConfiguration.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, updateStore, onSampleTypeChange, onRegTypeChange, onRegSubTypeChange, changeApprovalConfigVersionChange, getSchedulerConfigSample, filterTransactionList, getSchedulerConfigSubSampleDetail, getPreviewTemplate, getSchedulerTestDetail, ReloadDataSchedulerConfig, getTestChildTabDetailSchedulerConiguration, addsubSampleSchedulerConfiguration, testSectionTest, saveSchedulerSubSample, getEditSchedulerSubSampleComboService, updateSchedulerConfigSubSample, deleteSchedulerSubSample, addMoreSchedulerConfigTest, createSchedulerTest, deleteSchedulerConfigTest, getEditSchedulerConfigComboService, validateEsignforSchedulerConfig, openModal, approveSchedulerConfig, deleteSchedulerConfig, updateActiveStatusSchedulerConfig, getSchedulerMasteDetails } from '../../actions';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Button, Card, Col, Row, Nav } from 'react-bootstrap';\nimport SplitterLayout from \"react-splitter-layout\";\nimport { convertDateValuetoString, rearrangeDateFormat, getControlMap, comboChild, getSameRecordFromTwoArrays, sortDataForDate, childComboClear, ageCalculate, Lims_JSON_stringify, showEsign } from '../../components/CommonScript';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SchedulerConfigurationFilter from './SchedulerConfigurationFilter';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { faFileInvoice, faEye, faPlus, faTrashAlt, faThumbsUp, faLink, faCommentDots, faChevronRight, faComments, faComment, faPaperclip, faFlask, faMicroscope, faHistory, faArrowRight, faBoxOpen, faBox, faLocationArrow, faFolderOpen, faFolder, faPrint, faFileImport, faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { ProductList } from '../product/product.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { constructOptionList } from '../../components/CommonScript';\nimport { ContentPanel } from '../../components/App.styles';\nimport { transactionStatus, checkBoxOperation, SideBarTabIndex, SideBarSeqno, designProperties, SampleType } from '../../components/Enumeration';\nimport { toast } from 'react-toastify';\nimport PreRegisterSlideOutModal from '../registration/PreRegisterSlideOutModal';\nimport PortalModal from '../../PortalModal';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\nimport { ReactComponent as FullviewExpand } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/fullview-expand.svg\";\nimport { ReactComponent as FullviewCollapse } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/fullview-collapse.svg\";\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport SchedulerParameterTab from './SchedulerParameterTab';\nimport SampleGridTab from '../registration/SampleGridTab';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport AddSubSampleConfiguration from './AddSubSampleConfiguration';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { getRegistrationSubSample } from './SchedulerValidation';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport AddTestSchedulerConfig from './AddTestSchedulerConfig';\nimport { ReactComponent as ActiveStatusIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/circle-play-regular.svg\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n}; // ALPD-4914 created SchedulerConfiguration.jsx file for scheduler configuration screen\n\n\nclass SchedulerConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforSchedulerConfig(inputParam, \"openModal\");\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openPortal = this.props.Login.openPortal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openModal = this.props.Login.openModal;\n      let loadPreregister = this.props.Login.loadPreregister;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\n          loadEsign = false;\n          openPortal = false;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign,\n              openPortal\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (this.props.Login.screenData && this.props.Login.screenData.inputParam && this.props.Login.screenData.inputParam.operation === \"approve\" || this.props.Login.screenData && this.props.Login.screenData.inputParam && this.props.Login.screenData.inputParam.operation === \"deleteSample\" || this.props.Login.screenData && this.props.Login.screenData.inputParam && this.props.Login.screenData.inputParam.operation === \"activeInactive\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n          selectedRecord['esignreason'] = '';\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign,\n              openModal,\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          loadEsign = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n          selectedRecord['esignreason'] = '';\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign,\n              openPortal,\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        openPortal = false;\n        selectedRecord = {};\n        loadPreregister = false;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openPortal,\n            selectedRecord,\n            loadPreregister\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.editSchedulerConfiguration = inputParam => {\n      if (this.props.Login.masterData.selectedSample[0].ntransactionstatus === transactionStatus.DRAFT) {\n        let data = [];\n        let editablecombo = [];\n        const withoutCombocomponent = [];\n        const Layout = this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.jsondata;\n\n        if (Layout !== undefined) {\n          Layout.map(row => {\n            return row.children.map(column => {\n              return column.children.map(component => {\n                if (component.hasOwnProperty(\"children\")) {\n                  component.children.map(componentrow => {\n                    if (componentrow.inputtype === \"combo\") {\n                      data.push(componentrow);\n                    } else {\n                      withoutCombocomponent.push(componentrow);\n                    }\n\n                    if (componentrow.inputtype === \"combo\" && componentrow.iseditablereadonly && componentrow.iseditablereadonly === true) {\n                      editablecombo.push(componentrow);\n                    }\n\n                    return null;\n                  });\n                } else {\n                  if (component.inputtype === \"combo\" && component.iseditablereadonly && component.iseditablereadonly === true) {\n                    editablecombo.push(component);\n                  } else if (component.inputtype === \"combo\") {\n                    data.push(component);\n                  } else {\n                    withoutCombocomponent.push(component);\n                  }\n                }\n              });\n            });\n          });\n          const comboComponents = data;\n          let childColumnList = {};\n          data.map(columnList => {\n            const val = comboChild(data, columnList, childColumnList, true);\n            data = val.data;\n            childColumnList = val.childColumnList;\n            return null;\n          }); // data.push(...comboComponents);\n\n          this.props.getEditSchedulerConfigComboService(inputParam, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, editablecombo);\n        } else {\n          toast.info(\"Configure the preregister template for this registrationtype\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DRAFTTOEDITSAMPLE\"\n        }));\n      }\n    };\n\n    this.approveSchedulerConfiguration = inputParam => {\n      if (this.props.Login.masterData.selectedSample.length > 0) {\n        if (this.props.Login.masterData.selectedSample[0].ntransactionstatus !== transactionStatus.APPROVED && this.props.Login.masterData.selectedSample[0].ntransactionstatus !== transactionStatus.RETIRED) {\n          /* if(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT ){            \r\n                    let nschedulersamplecodeberfore = inputParam.masterData.SchedulerConfigGetSample\r\n                    .filter(item => {\r\n                        return item[this.sinstrumentid] === inputParam.masterData.selectedSample[0][this.sinstrumentid] &&\r\n                            item.ntransactionstatus === transactionStatus.APPROVED;\r\n                    })\r\n                    .map(item => item.nschedulersamplecode) \r\n                    .join(\",\"); \r\n                        inputParam={...inputParam,approveSchedulerSampleParam:{\r\n                            \r\n                            ...inputParam.approveSchedulerSampleParam,\r\n                            \"nschedulersamplecodeberfore\":nschedulersamplecodeberfore\r\n                            \r\n                        },\r\n                    action:\"approveSample\",\r\n                    inputData:{\r\n                        \"userinfo\":this.props.Login.userInfo,\r\n                    }\r\n                    }\r\n                }*/\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.approveSchedulerSampleParam.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                parentPopUpSize: \"lg\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.approveSchedulerConfig(inputParam, this.props.Login.masterData);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\"\n          }));\n        }\n      } else {\n        toast.info(\"Configure the preregister template for this registrationtype\");\n      }\n    };\n\n    this.addMoreSchedulerConfigTest = (inputParam, ncontrolCode) => {\n      if (this.props.Login.masterData.selectedSample.length > 0) {\n        if (this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus === transactionStatus.DRAFT) {\n          let sampleList = [];\n          const skip = this.state.skip;\n          const take = this.state.take;\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n            sampleList = list ? list.slice(skip, skip + take) : [];\n          } else {\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\n          }\n\n          let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\n\n          if (addSubSampleList && addSubSampleList.length > 0) {\n            inputParam[\"sampleList\"] = sampleList;\n            this.props.addMoreSchedulerConfigTest(inputParam, ncontrolCode);\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_SELECTSAMPLETOADDTEST\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_DRAFTTOADDTEST\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLE\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = (deleteId, skip, take, subsampleskip, subsampletake) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteSubSample(deleteId, skip, take, subsampleskip, subsampletake));\n    };\n\n    this.ConfirmTestDelete = (deleteId, skip, take, subsampleskip, subsampletake) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteTest(deleteId, skip, take, subsampleskip, subsampletake));\n    };\n\n    this.ConfirmSampleDelete = inputParam => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteSample(inputParam));\n    };\n\n    this.closeChildModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let loadScheduleSubSample = this.props.Login.loadScheduleSubSample;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.state.selectedRecord;\n      let screenName = this.props.Login.screenName;\n      let loadChildTest = this.props.Login.loadChildTest;\n      let TestCombined = [];\n      let TestPackage = [];\n      let availableTest = [];\n      let Test = this.props.Login.Test || [];\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n        selectedRecord[\"esigncomments\"] = \"\";\n        selectedRecord[\"esignpassword\"] = \"\";\n        selectedRecord['esignreason'] = '';\n      }\n\n      if (this.props.Login.loadScheduleSubSample) {\n        loadScheduleSubSample = false;\n        openModal = false;\n        selectedRecord = {};\n      } else if (this.props.Login.loadChildTest) {\n        loadChildTest = false;\n        openModal = false;\n        selectedRecord = {};\n        TestCombined = [];\n        TestPackage = [];\n        availableTest = [];\n        Test = [];\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadScheduleSubSample,\n          screenName,\n          openModal,\n          selectedRecord,\n          loadEsign,\n          loadChildTest,\n          TestCombined,\n          TestPackage,\n          availableTest,\n          Test\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.editSubSampleScheduler = inputParam => {\n      let data = [];\n      const regSubSamplewithoutCombocomponent = [];\n\n      if (inputParam.mastertoedit.ntransactionstatus === transactionStatus.REJECT || inputParam.mastertoedit.ntransactionstatus === transactionStatus.CANCELLED || inputParam.mastertoedit.ntransactionstatus === transactionStatus.RELEASED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_CANNOTEDITCANCELLEDSUBSAMPLE\"\n        }));\n      } else {\n        const Layout = this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata;\n\n        if (Layout !== undefined) {\n          Layout.map(row => {\n            return row.children.map(column => {\n              return column.children.map(component => {\n                return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\") {\n                    data.push(componentrow);\n                  } else {\n                    regSubSamplewithoutCombocomponent.push(componentrow);\n                  }\n\n                  return null;\n                }) : component.inputtype === \"combo\" ? data.push(component) : regSubSamplewithoutCombocomponent.push(component);\n              });\n            });\n          });\n          const regSubSamplecomboComponents = data;\n          let regSubSamplechildColumnList = {};\n          data.map(columnList => {\n            const val = comboChild(data, columnList, regSubSamplechildColumnList, true);\n            data = val.data;\n            regSubSamplechildColumnList = val.childColumnList;\n            return null;\n          });\n          const sampleList = getSameRecordFromTwoArrays(inputParam.masterData.selectedSample, [inputParam.mastertoedit], \"npreregno\");\n          this.props.getEditSchedulerSubSampleComboService(inputParam, data, this.state.selectedRecord, regSubSamplechildColumnList, regSubSamplecomboComponents, regSubSamplewithoutCombocomponent, sampleList[0].ncomponentrequired === 3 ? true : false);\n        } else {\n          toast.info(\"Configure the sub sample template for this registrationtype\");\n        }\n      }\n    };\n\n    this.onSaveChildTestClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData; //console.log(\"test1:\", this.props.Login.masterData);\n\n      let sampleList = [];\n      const skip = this.state.skip;\n      const take = this.state.take;\n\n      if (this.props.Login.masterData.searchedSample !== undefined) {\n        const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n        sampleList = list ? list.slice(skip, skip + take) : [];\n      } else {\n        sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\n      }\n\n      const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, sampleList, \"nschedulersamplecode\");\n      let subsampleList = [];\n      const subsampleskip = this.state.subsampleskip;\n      const subsampletake = this.state.subsampletake;\n\n      if (this.props.Login.masterData.searchedSubSample !== undefined) {\n        const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample : this.props.Login.masterData.GetSubSample;\n        subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\n      } else {\n        subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample && this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\n      }\n\n      const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, subsampleList, \"nschedulersamplecode\"); //const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, masterData.RegistrationGetSubSample.slice(this.state.subsampleskip, (this.state.subsampleskip + this.state.subsampletake)), \"npreregno\");\n      //const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\n      ////  selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\n\n      const nschedulersubsamplecode = selectedSubsample.map(x => x.nschedulersubsamplecode).join(\",\");\n      let data = [];\n      let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n\n      if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n        const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\n        const cTWithoutComboData = [];\n        let cTData = [];\n        Layout.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\") {\n                  cTData.push(componentrow);\n                } else {\n                  cTWithoutComboData.push(componentrow);\n                }\n\n                return null;\n              }) : component.inputtype === \"combo\" ? cTData.push(component) : cTWithoutComboData.push(component);\n            });\n          });\n        });\n        selectedSample.map(item => {\n          let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\");\n          let gender = cTData.filter(x => x.name === \"Gender\");\n          const ageCal = parseInt(ageCalculate(item[dob[0].label], true));\n          data.push({\n            \"npreregno\": parseInt(item.npreregno),\n            \"nage\": ageCal,\n            \"ngendercode\": item.ngendercode\n          });\n        });\n      }\n\n      const inputData = {\n        testgrouptest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\n        RegistrationSample: selectedSubsample.map(x => x.ntransactionsamplecode),\n        nschedulersubsamplecode: nschedulersubsamplecode,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: masterData.RealRegSubTypeValue.nregsubtypecode,\n        nsampletypecode: masterData.RealSampleTypeValue.nsampletypecode,\n        ntype: 3,\n        nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        nschedulersamplecode: selectedSample && selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\n        directAddTest: true,\n        // ntransactionsamplecode: selectedSubsample &&\n        // selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n        FromDate: obj.fromDate,\n        ToDate: obj.toDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        //  checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        ageData: data,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        ntestpackagecode: this.state.selectedRecord['ntestpackagecode'] && this.state.selectedRecord['ntestpackagecode'],\n        skipmethodvalidity: false,\n        loadAdhocTest: false,\n        isParameter: true\n      };\n      const inputParam = {\n        inputData,\n        classUrl: \"schedulerconfiguration\",\n        operation: this.props.Login.operation,\n        methodUrl: \"Test\",\n        responseKeyList: [{\n          \"responseKey\": \"selectedSample\",\n          \"masterDataKey\": \"SchedulerConfigGetSample\",\n          \"primaryKey\": \"npreregno\",\n          \"dataAction\": \"update\"\n        }, {\n          \"responseKey\": \"selectedSubSample\",\n          \"masterDataKey\": \"SchedulerConfigGetSubSample\",\n          \"primaryKey\": \"ntransactionsamplecode\",\n          \"dataAction\": \"update\"\n        }, {\n          \"responseKey\": \"selectedTest\",\n          \"masterDataKey\": \"SchedulerConfigGetSubSample\",\n          \"primaryKey\": \"ntransactiontestcode\",\n          \"dataAction\": \"add\"\n        }],\n        saveType,\n        formRef,\n        postParamList: this.postParamList\n      };\n\n      if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.createSchedulerTest(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onSaveSubSampleClick = (saveType, formRef) => {\n      const operation = this.props.Login.operation;\n\n      if (operation === 'create') {\n        let objSubSample = this.state.selectedRecord;\n        const userInfo = this.props.Login.userInfo; //   let saveSubSample = {};\n\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          //sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode');\n          sampleList = list ? list.slice(this.state.skip, this.state.skip + this.state.take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.SchedulerConfigGetSample && sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode').slice(this.state.skip, this.state.skip + this.state.take);\n        }\n\n        sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.selectedSample, sampleList, 'nschedulersamplecode');\n        const findSampleAlloSpec = [...new Set(sampleList.map(item => item.nallottedspeccode))];\n        const findSampleAlloSpecSampleType = [...new Set(sampleList.map(item => item.nspecsampletypecode))];\n        let selectedTestData = objSubSample[\"ntestgrouptestcode\"];\n        const selectedTestArray = [];\n        selectedTestData && selectedTestData.map(item => {\n          return selectedTestArray.push(item.item);\n        });\n        const map = {};\n        const param = getRegistrationSubSample(objSubSample, this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent, operation);\n        map[\"SchedulerConfigurationSample\"] = param.sampleRegistration;\n\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n          map[\"SchedulerConfigurationSample\"]['jsondata'] = { ...map[\"SchedulerConfigurationSample\"]['jsondata'],\n            externalorderid: sampleList[0]['Order']\n          };\n          map[\"SchedulerConfigurationSample\"]['jsonuidata'] = { ...map[\"SchedulerConfigurationSample\"]['jsonuidata'],\n            externalorderid: sampleList[0]['Order']\n          };\n        }\n\n        map[\"subsampleDateList\"] = param.dateList;\n        map[\"SchedulerConfigurationSample\"][\"nallottedspeccode\"] = findSampleAlloSpec[0] ? findSampleAlloSpec[0] : -1;\n        map[\"SchedulerConfigurationSample\"][\"nspecsampletypecode\"] = findSampleAlloSpecSampleType[0] ? findSampleAlloSpecSampleType[0] : -1;\n        map[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\n        map['subsampledateconstraints'] = this.state.subsampledateconstraints;\n        map['testgrouptest'] = selectedTestArray;\n        map['nschedulersamplecode'] = sampleList.map(item => item.nschedulersamplecode).join(\",\");\n        map['userinfo'] = userInfo;\n        map['checkBoxOperation'] = checkBoxOperation.SINGLESELECT;\n        map['ntype'] = 3;\n        map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n        map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\n        map[\"nregsubtypeversioncode\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\n        map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n        map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n        map[\"masterData\"] = this.props.Login.masterData;\n        map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERS\";\n        map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n        map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n        map[\"specBasedComponent\"] = this.props.Login.specBasedComponent;\n        map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n        map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n        map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n        map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n        map[\"isParameter\"] = true;\n\n        if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n          map[\"order\"] = sampleList[0][\"OrderIdData\"];\n          const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\n          const cTWithoutComboData = [];\n          let cTData = [];\n          Layout.map(row => {\n            return row.children.map(column => {\n              return column.children.map(component => {\n                return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\") {\n                    cTData.push(componentrow);\n                  } else {\n                    cTWithoutComboData.push(componentrow);\n                  }\n\n                  return null;\n                }) : component.inputtype === \"combo\" ? cTData.push(component) : cTWithoutComboData.push(component);\n              });\n            });\n          });\n          let data = [];\n          sampleList.map(item => {\n            let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\");\n            let gender = cTData.filter(x => x.name === \"Gender\");\n            const age = parseInt(ageCalculate(rearrangeDateFormat(this.props.Login.userInfo, item[dob[0].label]), true));\n            data.push({\n              \"npreregno\": parseInt(item.npreregno),\n              \"nage\": age,\n              \"ngendercode\": item.ngendercode\n            });\n            map[\"ageData\"] = data;\n          });\n          map[\"skipmethodvalidity\"] = false;\n        }\n\n        let isFileupload = false;\n        const formData = new FormData();\n        this.props.Login.regSubSamplewithoutCombocomponent.map(item => {\n          if (item.inputtype === 'files') {\n            if (typeof objSubSample[item && item.label] === \"object\") {\n              objSubSample[item && item.label] && objSubSample[item && item.label].forEach((item1, index) => {\n                formData.append(\"uploadedFile\" + index, item1);\n                formData.append(\"uniquefilename\" + index, map[\"RegistrationSample\"].uniquefilename);\n                formData.append(\"filecount\", objSubSample[item && item.label].length);\n                formData.append(\"isFileEdited\", transactionStatus.YES);\n                formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n                delete map[\"RegistrationSample\"].uniquefilename;\n                delete map[\"RegistrationSample\"][item && item.label];\n                formData.append('Map', Lims_JSON_stringify(JSON.stringify(map)));\n                isFileupload = true;\n              });\n            }\n          }\n        });\n        const inputParam = {\n          inputData: map,\n          postParamList: this.postParamList,\n          formData: formData,\n          isFileupload\n        };\n        this.props.saveSchedulerSubSample(inputParam);\n      } else {\n        this.updateSchedulerConfigSubSample(saveType, formRef, operation);\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const selectSection = this.state.selectSection || {};\n      const selectPackage = [];\n      selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\n\n      if (comboData !== null) {\n        selectSection[fieldName] = comboData;\n        selectSection[\"ssectionname\"] = comboData.label;\n        selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode); //commented by sonia on 5th August 2024 for JIRA ID: ALPD-4543\n        //selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample[0].nallottedspeccode;\n        //Added by sonia on 5th August 2024 for JIRA ID: ALPD-4543\n\n        selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nallottedspeccode;\n        selectedRecord[fieldName] = comboData;\n        selectedRecord[\"ssectionname\"] = comboData.label;\n        const specBasedComponent = specBasedComponent1;\n        selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode : parseInt(this.props.Login.masterData.selectedSubSample && [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")); // selectedRecord[\"nspecsampletypecode\"] = parseInt(this.props.Login.masterData.selectedSubSample &&\n        //     [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"));\n\n        this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent, this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent, this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode, this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample);\n      } else {\n        let availableTestData = [];\n\n        if (selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"ntestgrouptestcode\"];\n          availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || [];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            availableTest: this.props.Login.AllTest,\n            TestCombined: availableTestData,\n            TestSection: this.props.Login.TestSection || []\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnSubSampleChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboSubSampleChange = (comboData, fieldName) => {\n      // if (comboData !== null) {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboSubSampleChange = (comboData, control, customName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        let parentList = [];\n        let childComboList = [];\n        let childColumnList = {};\n        let comboName = customName || control.label;\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData ? comboData.value : -1,\n          // item: comboData ? comboData.item : \"\",\n          item: comboData ? { ...comboData.item,\n            pkey: control.valuemember,\n            nquerybuildertablecode: control.nquerybuildertablecode,\n            \"source\": control.source\n          } : \"\",\n          label: comboName,\n          nameofdefaultcomp: control.name\n        };\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          pkey: control.valuemember,\n          nquerybuildertablecode: control.nquerybuildertablecode,\n          \"source\": control.source\n        };\n\n        if (comboData) {\n          selectedRecord[comboName] = comboData;\n        } else {\n          selectedRecord[comboName] = [];\n        }\n\n        if (control.child && control.child.length > 0) {\n          childComboList = getSameRecordFromTwoArrays(this.state.regSubSamplecomboComponents, control.child, \"label\");\n          childColumnList = {};\n          childComboList.map(columnList => {\n            const val = comboChild(this.state.regSubSamplecomboComponents, columnList, childColumnList, false);\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          parentList = getSameRecordFromTwoArrays(this.state.regSubSamplewithoutCombocomponent, control.child, \"label\");\n          this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.regSubSamplecomboData, childComboList, childColumnList, this.state.regSubSamplewithoutCombocomponent, [...childComboList, ...parentList]);\n        } else {\n          this.setState({\n            selectedRecord\n          });\n        }\n      } else {\n        let regSubSamplecomboData = this.props.Login.regSubSamplecomboData;\n        selectedRecord[control.label] = \"\";\n        const inputParam = {\n          control,\n          comboComponents: this.state.regSubSamplecomboData,\n          withoutCombocomponent: this.state.regSubSamplewithoutCombocomponent,\n          selectedRecord: selectedRecord,\n          comboData: regSubSamplecomboData\n        };\n        const childParam = childComboClear(inputParam);\n        selectedRecord = childParam.selectedRecord;\n        regSubSamplecomboData = childParam.comboData;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            regSubSamplecomboData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.mandatoryList = regSubSample => {\n      let mandatory = [];\n\n      if (regSubSample) {\n        let sampleList = [];\n        const skip = this.state.skip;\n        const take = this.state.take;\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          //sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n          sampleList = list ? list.slice(skip, skip + take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\n        }\n\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\n        const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\n\n        if (findComponentReqSpec[0] === 3) {\n          mandatory = [{\n            \"idsName\": \"IDS_COMPONENT\",\n            \"dataField\": \"ncomponentcode\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"combo\"\n          }];\n        }\n\n        this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.mandatory === true) {\n                  mandatory.push({\n                    \"mandatory\": true,\n                    \"idsName\": componentrow.displayname[this.props.Login.userInfo.slanguagetypecode],\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                    \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                  });\n                }\n\n                return mandatory;\n              }) : component.mandatory === true ? mandatory.push({\n                \"mandatory\": true,\n                \"idsName\": component.displayname[this.props.Login.userInfo.slanguagetypecode],\n                \"dataField\": component.label,\n                \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n              }) : \"\";\n            });\n          });\n        });\n      }\n\n      return mandatory;\n    };\n\n    this.addSubSample = (controlcode, skip, take) => {\n      if (this.props.Login.masterData.selectedSample.length > 0) {\n        if (this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus === transactionStatus.DRAFT) {\n          let Map = {};\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n            sampleList = list ? list.slice(skip, skip + take) : [];\n          } else {\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', \"nschedulersamplecode\").slice(skip, skip + take);\n          }\n\n          let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\n          const nsampletypecode = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\n          let check = true;\n\n          if (nsampletypecode === SampleType.CLINICALTYPE && addSubSampleList.length > 1) {\n            check = false;\n          }\n\n          const findTransactionStatus = [...new Set(addSubSampleList.map(item => item.ntransactionstatus))]; // if (findTransactionStatus.length === 1) {\n          // if (findTransactionStatus.indexOf(transactionStatus.REJECT) === -1\n          //     && findTransactionStatus.indexOf(transactionStatus.CANCELLED) === -1\n          //     && findTransactionStatus.indexOf(transactionStatus.RELEASED) === -1) {\n          // if (findTransactionStatus[0] === transactionStatus.PREREGISTER) {\n          //   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\n          //   if (findApprovalVersion.length === 1) {\n\n          const findSampleSpec = [...new Set(addSubSampleList.map(item => item.nallottedspeccode))]; //const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\n\n          const findSampleSpectemplate = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))]; //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\n          //if (findSampleSpec.length === 1)//&& findComponent.length === 1 \n          // {\n\n          const findComponentReqSpec = addSubSampleList[0].ncomponentrequired;\n          let data = [];\n          const regSubSamplewithoutCombocomponent = [];\n          const Layout = this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata;\n\n          if (Layout !== undefined) {\n            Layout.map(row => {\n              return row.children.map(column => {\n                return column.children.map(component => {\n                  return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                      data.push(componentrow);\n                    } else {\n                      regSubSamplewithoutCombocomponent.push(componentrow);\n                    }\n\n                    return null;\n                  }) : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : regSubSamplewithoutCombocomponent.push(component);\n                });\n              });\n            });\n            const regSubSamplecomboComponents = data;\n            let regchildColumnList = {};\n            data.map(columnList => {\n              const val = comboChild(data, columnList, regchildColumnList, true);\n              data = val.data;\n              regchildColumnList = val.childColumnList;\n              return null;\n            });\n            Map[\"nallottedspeccode\"] = findSampleSpec[0];\n            Map[\"ntemplatemanipulationcode\"] = findSampleSpectemplate[0];\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n            Map[\"nschedulersamplecode\"] = addSubSampleList && addSubSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\n            Map[\"schedulersubsample\"] = addSubSampleList; // console.log(\"spec jsx main:\", findComponentReqSpec,findSampleSpec[0] );\n\n            this.props.addsubSampleSchedulerConfiguration(this.props.Login.masterData, this.props.Login.userInfo, data, this.state.selectedRecord, regchildColumnList, regSubSamplecomboComponents, regSubSamplewithoutCombocomponent, Map, controlcode, findComponentReqSpec === 3 ? true : false, this.state.specBasedTestPackage);\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_DRAFTTOADDSUBSAMPLE\"\n          }));\n        } // } \n\n      } // }\n      else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLES\"\n        }));\n      } //  }\n\n    };\n\n    this.deleteSample = inputParam => {\n      if (this.props.Login.masterData.selectedSample !== undefined) {\n        let valid = false;\n        valid = this.props.Login.masterData && this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.some(item => item.ntransactionstatus !== transactionStatus.DRAFT);\n\n        if (!valid) {\n          /*  let Map = {};\r\n            let sampleList = [];\r\n            let subsampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n                const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                    : this.props.Login.masterData.SchedulerConfigGetSample;\r\n                  sampleList = list ? list.slice(skip, skip + take) : [];\r\n              } else {\r\n                sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n            }\r\n            \r\n            \r\n            let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n            Map[\"nschedulersamplecode\"]=addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\r\n            Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n            Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n            Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n            Map[\"nregsubtypeversioncode\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\r\n            Map[\"nfilterstatus\"]= this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n            Map[\"nsampleschedulerconfigtypecode\"]=this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n            */\n          let inputParam1 = {\n            action: \"deleteSample\",\n            operation: \"deleteSample\",\n            Map: inputParam,\n            inputData: {\n              \"userinfo\": this.props.Login.userInfo\n            },\n            ncontrolCode: this.state.deleteSubSampleSchedulerConfigurationId\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam: inputParam1,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.deleteSchedulerConfig(inputParam, this.props.Login.masterData);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DRAFTTODELETESAMPLE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTSTATUSONLY\"\n        }));\n      }\n    };\n\n    this.onInactiveActive = inputParam => {\n      if (this.props.Login.masterData.selectedSample !== undefined) {\n        if (inputParam.selectedSample.length == 1) {\n          if (inputParam.selectedSample[0].ntransactionstatus === transactionStatus.APPROVED) {\n            /*   let Map = {};\r\n               \r\n               \r\n               \r\n               \r\n               Map[\"nschedulersamplecode\"]=this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nschedulersamplecode;\r\n               Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n               Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n               Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n               Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n               Map[\"nregsubtypeversioncode\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\r\n               Map[\"nfilterstatus\"]= this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n               Map[\"nsampleschedulerconfigtypecode\"]=this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n               Map[\"nactivestatus\"]=this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nactivestatus;\r\n               Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n            d\r\n               let inputParam={\r\n               action:\"activeInactive\",\r\n               Map:Map,\r\n               inputData:{\r\n                   \"userinfo\":this.props.Login.userInfo,\r\n               },\r\n               ncontrolCode:this.state.deleteSubSampleSchedulerConfigurationId\r\n              };*/\n            let inputParam1 = {\n              action: \"activeInactive\",\n              ...inputParam,\n              inputData: {\n                \"userinfo\": this.props.Login.userInfo\n              },\n              operation: \"activeInactive\",\n              ncontrolCode: this.state.activeInactiveSchedulerConfigurationId\n            };\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.activeInactiveSchedulerSampleParam.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam: inputParam1,\n                    masterData: this.props.Login.masterData\n                  },\n                  openModal: true\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              this.props.updateActiveStatusSchedulerConfig(inputParam);\n            }\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_SELECTAPPROVERECORD\"\n            }));\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTONERECORD\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }));\n      }\n    };\n\n    this.deleteSubSample = (ncontrolcode, skip, take, subsampleskip, subsampletake) => {\n      if (this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus === transactionStatus.DRAFT) {\n        let Map = {};\n        let sampleList = [];\n        let subsampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n          const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n          sampleList = list ? list.slice(skip, skip + take) : [];\n        } else {\n          sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\n        }\n\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\n          // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n          const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample : this.props.Login.masterData.SchedulerConfigGetSubSample;\n          subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\n        } else {\n          subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample && this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\n        }\n\n        if (this.props.Login.masterData.SchedulerConfigGetSubSample.length == 1) {\n          Map[\"nschedulersamplecodedelete\"] = this.props.Login.masterData.SchedulerConfigGetSubSample[\"nschedulersamplecode\"];\n        }\n\n        let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\n        let addSubSampleList = getSameRecordFromTwoArrays(subsampleList || [], this.props.Login.masterData.selectedSubSample, \"nschedulersubsamplecode\");\n        Map[\"nschedulersamplecode\"] = addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\n        Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\n        Map[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT;\n        Map[\"nschedulersubsamplecode\"] = addSubSampleList && addSubSampleList.map(subample => subample.nschedulersubsamplecode).join(\",\");\n        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n        let inputParam = {\n          action: \"deleteSubSample\",\n          Map: Map,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo\n          },\n          ncontrolCode: this.state.deleteSubSampleSchedulerConfigurationId\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.deleteSchedulerSubSample(Map, this.props.Login.userInfo, this.props.Login.masterData, this.state.deleteSubSampleSchedulerConfigurationId);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DRAFTTODELETESUBSAMPLE\"\n        }));\n      }\n    };\n\n    this.deleteTest = (ncontrolcode, skip, take, subsampleskip, subsampletake) => {\n      if (this.props.Login.masterData.selectedTest.length > 0) {\n        if (this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus === transactionStatus.DRAFT) {\n          let Map = {};\n          let sampleList = [];\n          let subsampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample : this.props.Login.masterData.SchedulerConfigGetSample;\n            sampleList = list ? list.slice(skip, skip + take) : [];\n          } else {\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\n          }\n\n          if (this.props.Login.masterData.searchedSubSample !== undefined) {\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample : this.props.Login.masterData.SchedulerConfigGetSubSample;\n            subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\n          } else {\n            subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample && this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\n          }\n\n          let testList = this.props.Login.masterData.SchedulerConfigGetTest || [];\n          let {\n            testskip,\n            testtake\n          } = this.state;\n          testList = testList.slice(testskip, testskip + testtake);\n          let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"nschedulertestcode\");\n          let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\n          let addSubSampleList = getSameRecordFromTwoArrays(subsampleList || [], this.props.Login.masterData.selectedSubSample, \"nschedulersubsamplecode\");\n          Map[\"nschedulersamplecode\"] = addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\n          Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\n          Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\n          Map[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT;\n          Map[\"ntype\"] = 3;\n          Map[\"nschedulersubsamplecode\"] = addSubSampleList && addSubSampleList.map(subample => subample.nschedulersubsamplecode).join(\",\");\n          Map[\"nschedulertestcode\"] = selectedTestList && selectedTestList.map(subample => subample.nschedulertestcode).join(\",\");\n          Map[\"istestschedulerdelete\"] = true;\n          Map[\"isParameter\"] = true;\n          Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\n          Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\n          let inputParam = {\n            action: \"deleteSchedulerTest\",\n            Map: Map,\n            inputData: {\n              \"userinfo\": this.props.Login.userInfo\n            },\n            ncontrolCode: this.state.deleteTestSchedulerConfigurationId\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteTestSchedulerConfigurationId)) {\n            //if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.deleteSchedulerConfigTest(Map, this.props.Login.userInfo, this.props.Login.masterData, ncontrolcode);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DRAFTTOADDTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name === \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.testDataStateChange = event => {\n      this.setState({\n        resultDataState: event.dataState\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno === SideBarSeqno.TEST) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          selectedTest: this.props.Login.masterData.selectedTest,\n          nschedulertestcode: this.props.Login.masterData.selectedTest ? String(this.props.Login.masterData.selectedTest.map(item => item.nschedulertestcode).join(\",\")) : \"-1\",\n          nschedulersamplecode: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.nschedulersamplecode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          activeTestTab,\n          screenName: activeTestTab,\n          resultDataState: this.state.resultDataState,\n          activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n          activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId,\n          ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\n        };\n        this.props.getTestChildTabDetailSchedulerConiguration(inputData, true);\n      } else if (tabseqno === SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.selectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.selectedSubSample ? this.props.Login.masterData.selectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n            npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\"),\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.selectedSample,\n            npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab,\n            OrderCodeData: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(item => item.hasOwnProperty(\"OrderCodeData\") ? item.OrderCodeData : -1).join(\",\"),\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      }\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.sideNavDetail = (screenName //, sampleGridSkip\n    ) => {\n      let testList = this.props.Login.masterData.SchedulerConfigGetTest || [];\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_PARAMETERS\" //&& this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE \n      ? /*#__PURE__*/React.createElement(SchedulerParameterTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_PARAMETERS\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2957,\n          columnNumber: 19\n        }\n      }) : screenName == \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0 ? this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {},\n        SingleItem: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo // viewFile={this.viewFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2972,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(SampleGridTab, {\n        userInfo: this.props.Login.masterData.userInfo || {},\n        GridData: this.props.Login.masterData.selectedSample || [],\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam //dataState={sampleGridSkip === 0 ? {...this.state.sampleGridDataState, skip:0} : this.state.sampleGridDataState}\n        ,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleInfoDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        primaryKeyField: \"nschedulersamplecode\",\n        expandField: \"expanded\",\n        screenName: \"IDS_SAMPLEINFO\" //viewFile={this.viewFile}\n        //jsonField={\"jsondata\"}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2983,\n          columnNumber: 37\n        }\n      }) : \"\";\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      }); //ALPD-657\n      //this.changePropertyView(1)\n    };\n\n    this.getSchedulerConfigComboService = (ScreenName, operation, primaryKeyField, masterData, userInfo, editId, importData) => {\n      const ndesigntemplatemappingcodefilter = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\n\n      if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\n        let data = [];\n        const withoutCombocomponent = [];\n        const Layout = this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.jsondata;\n      }\n\n      if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\n        let data = [];\n        const withoutCombocomponent = [];\n        const Layout = this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.jsondata;\n\n        if (Layout !== undefined) {\n          Layout.map(row => {\n            return row.children.map(column => {\n              return column.children.map(component => {\n                return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                    data.push(componentrow);\n                  } else {\n                    withoutCombocomponent.push(componentrow);\n                  }\n\n                  return null;\n                }) : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n              });\n            });\n          });\n          const comboComponents = data;\n          let childColumnList = {};\n          data.map(columnList => {\n            const val = comboChild(data, columnList, childColumnList, true);\n            data = val.data;\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          /*  data.push({\r\n                \"source\":\"userssite\",\r\n                \"templatemandatory\":true,\r\n                \"displaymember\": \"sproductcatname\",\r\n                \"componentname\": \"Combo Box\",\r\n                \"displayname\":{\r\n                    \"en-US\": \"Sample Category\",\r\n                    \"ru-RU\": \"Образец категории\",\r\n                    \"tg-TG\": \"Категорияи намунавӣ\"\r\n                },\r\n                \"id\": \"L7BUKHDn3\",\"inputtype\": \"combo\",\r\n              \"label\": \"Sample Category\",\"mandatory\": false,\r\n              \"valuemember\": \"nproductcatcode\"\r\n              })*/\n\n          const mapOfFilterRegData = {\n            nsampletypecode: parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode),\n            sampletypecategorybasedflow: parseInt(this.props.Login.masterData.RealSampleTypeValue.ncategorybasedflowrequired),\n            nneedsubsample: this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample === true ? transactionStatus.YES : transactionStatus.NO,\n            isQualisLite: this.props.Login.settings && parseInt(this.props.Login.settings[71])\n          };\n          this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, true, false, mapOfFilterRegData, false, \"create\", this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename, importData);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_CONFIGURETEMPLATE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\"\n        }));\n      }\n    };\n\n    this.onSampleTypeChange = (event, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map[\"nsampletypecode\"] = parseInt(event.value);\n        Map['userinfo'] = this.props.Login.userInfo;\n        Map['advfilterdata'] = true;\n        this.props.onSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onRegTypeChange = (event, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map[\"nregtypecode\"] = parseInt(event.value);\n        Map['userinfo'] = this.props.Login.userInfo;\n        Map['advfilterdata'] = true;\n        this.props.onRegTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onRegSubTypeChange = (event, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\n        Map[\"nregsubtypecode\"] = parseInt(event.value);\n        Map['userinfo'] = this.props.Login.userInfo;\n        Map['advfilterdata'] = true;\n        this.props.onRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onApprovalConfigVersionChange = (event, labelname) => {\n      if (event !== null) {\n        let Map = {};\n        Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\n        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RegSubTypeValue.nregsubtypecode;\n        Map[\"napproveconfversioncode\"] = event.value;\n        Map['userinfo'] = this.props.Login.userInfo;\n        Map['advfilterdata'] = true;\n        this.props.changeApprovalConfigVersionChange(Map, this.props.Login.masterData, event, labelname);\n      }\n    };\n\n    this.onSchedulerConfigTypeChange = (event, labelname) => {\n      let masterData = this.props.Login.masterData;\n      masterData = { ...masterData,\n        [labelname]: { ...event.item\n        }\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      let Map = {}; //  selectedFilter[\"fromdate\"]\n\n      const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n      Map['inputValues'] = {\n        FromDate: this.props.Login.masterData.RealFromDate || new Date(),\n        ToDate: this.props.Login.masterData.RealToDate || new Date(),\n        fromdate: rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealFromDate) || new Date(),\n        todate: rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealToDate) || new Date(),\n        SampleType: this.props.Login.masterData.RealSampleTypeList || [],\n        SampleTypeValue: this.props.Login.masterData.RealSampleTypeValue || {},\n        RegistrationType: this.props.Login.masterData.RealRegTypeList || [],\n        RegistrationSubType: this.props.Login.masterData.RealRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.RealFilterStatuslist || [],\n        DesignTemplateMapping: this.props.Login.masterData.RealDesignTemplateMappingList || [],\n        ApprovalConfigVersion: this.props.Login.masterData.RealApprovalConfigVersionList || [],\n        RegTypeValue: this.props.Login.masterData.RealRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.RealRegSubTypeValue || {},\n        FilterStatusValue: this.props.Login.masterData.RealFilterStatusValue || {},\n        ApprovalConfigVersionValue: this.props.Login.masterData.RealApprovalConfigVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.RealDesignTemplateMappingValue || {},\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...Map.inputValues\n          },\n          selectedFilter: {\n            todate: Map.inputValues.todate,\n            fromdate: Map.inputValues.fromdate\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterChange = (event, labelname) => {\n      let masterData = this.props.Login.masterData; // masterData[labelname] = {...event.item};\n\n      masterData = { ...masterData,\n        [labelname]: { ...event.item\n        }\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      }); //setTimeout(() => { this._scrollBarRef.updateScroll() })\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subsampleskip: e.skip,\n        subsampletake: e.take\n      });\n    };\n\n    this.onDesignTemplateChange = (event, labelname) => {\n      let masterData = this.props.Login.masterData;\n      masterData = { ...masterData,\n        [labelname]: { ...event.item\n        }\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      }\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status !== \"click\") {\n        if (index === SideBarTabIndex.RESULT) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_PARAMETERS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else {\n          if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n                activeTabId: id\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      } else {// if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        //     const updateInfo = {\n        //         typeName: DEFAULT_RETURN,\n        //         data: {\n        //             activeTabIndex :activeTabIndex\n        //            // activeTabId :  id\n        //         }\n        //     }\n        //     this.props.updateStore(updateInfo);\n        //     }\n      }\n    };\n\n    this.onReload = () => {\n      const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\n      const RealFromDate = obj.fromDate;\n      const RealToDate = obj.toDate;\n      let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue;\n      let RealSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let RealRegTypeList = this.props.Login.masterData.RegistrationType || [];\n      let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || [];\n      let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || [];\n      let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || [];\n      let SampleTypeValue = RealSampleTypeValue;\n      let RegTypeValue = RealRegTypeValue;\n      let RegSubTypeValue = RealRegSubTypeValue;\n      let FilterStatusValue = RealFilterStatusValue;\n      let DesignTemplateMappingValue = RealDesignTemplateMappingValue;\n      let ApprovalConfigVersionValue = RealApprovalConfigVersionValue;\n      const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\n      const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\n      let masterData = { ...this.props.Login.masterData,\n        RealSampleTypeValue,\n        RealRegTypeValue,\n        RealRegSubTypeValue,\n        FromDate,\n        ToDate,\n        RealFilterStatusValue,\n        RealDesignTemplateMappingValue,\n        RealApprovalConfigVersionValue,\n        RealSampleTypeList,\n        RealRegTypeList,\n        RealRegSubTypeList,\n        RealDesignTemplateMappingList,\n        RealApprovalConfigVersionList,\n        RealFilterStatuslist,\n        SampleTypeValue,\n        RegSubTypeValue,\n        RegTypeValue,\n        FilterStatusValue,\n        DesignTemplateMappingValue,\n        RealFromDate,\n        RealToDate\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        userinfo: this.props.Login.userInfo,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        flag: 1,\n        \"isParameter\": true,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        nregsubtypeversioncode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\n        nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus == 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        nsampleschedulerconfigtypecode: this.props.Login.masterData.SchedulerConfigTypeValue && this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\n      };\n\n      if (inputData.nsampletypecode) {\n        // let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\n        inputData['FromDate'] = obj.fromDate;\n        inputData['ToDate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchSampleRef: this.searchSampleRef,\n          searchTestRef: this.searchTestRef,\n          selectedFilter: this.state.selectedFilter\n        };\n        this.props.ReloadDataSchedulerConfig(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      //   const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\n      //const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\n      let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue;\n      let RealSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let RealRegTypeList = this.props.Login.masterData.RegistrationType || [];\n      let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || [];\n      let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || [];\n      let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || [];\n      let RealSchedulerConfigTypeValue = this.props.Login.masterData.SchedulerConfigTypeValue || [];\n      let RealSchedulerConfigType = this.props.Login.masterData.SchedulerConfigType || [];\n      let masterData = { ...this.props.Login.masterData,\n        RealSampleTypeValue,\n        RealRegTypeValue,\n        RealRegSubTypeValue,\n        RealFilterStatusValue,\n        RealDesignTemplateMappingValue,\n        RealApprovalConfigVersionValue,\n        RealSampleTypeList,\n        RealRegTypeList,\n        RealRegSubTypeList,\n        RealDesignTemplateMappingList,\n        RealApprovalConfigVersionList,\n        RealFilterStatuslist,\n        RealSchedulerConfigTypeValue,\n        RealSchedulerConfigType\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus == 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        userinfo: this.props.Login.userInfo,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        nregsubtypeversioncode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\n        nsampleschedulerconfigtypecode: this.props.Login.masterData.SchedulerConfigTypeValue && this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\n      };\n\n      if (inputData.nsampletypecode) {\n        if (inputData.ndesigntemplatemappingcode) {\n          // const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\n          //     this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\n          // inputData['FromDate'] = obj.fromDate;\n          // inputData['ToDate'] = obj.toDate;\n          // ALPD-4130 to clear Additinal Filter config upon Filter Submit- ATE-241\n          masterData['kendoFilterList'] = undefined;\n          const selectedFilter = {}; // selectedFilter[\"fromdate\"] = RealFromDate;\n          // selectedFilter[\"todate\"] = RealToDate;\n\n          const inputParam = {\n            masterData,\n            inputData,\n            searchSubSampleRef: this.searchSubSampleRef,\n            searchSampleRef: this.searchSampleRef,\n            searchTestRef: this.searchTestRef,\n            selectedFilter\n          };\n          this.props.getSchedulerConfigSample(inputParam);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\"\n        }));\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let operation = this.props.Login.operation;\n\n      if (operation === \"update\") {// this.onUpdateRegistration(saveType, formRef, operation);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.state = {\n      splitChangeWidthPercentage: 28.6,\n      enablePropertyPopup: false,\n      addSchedulerConfigurationId: -1,\n      approveSchedulerConfigurationId: -1,\n      deleteSchedulerConfigurationId: -1,\n      activeInactiveSchedulerConfigurationId: -1,\n      addSubSampleSchedulerConfigurationId: -1,\n      editSubSampleSchedulerConfigurationId: -1,\n      deleteSubSampleSchedulerConfigurationId: -1,\n      deleteTestSchedulerConfigurationId: -1,\n      addTestSchedulerConfigurationId: -1,\n      stateSampleType: [],\n      stateRegistrationType: [],\n      stateRegistrationSubType: [],\n      stateSchedulerConfigType: [],\n      stateFilterStatus: [],\n      stateApprovalConfigVersion: [],\n      stateDynamicDesign: [],\n      userRoleControlRights: [],\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampleskip: 0,\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      filterSampleParam: {},\n      selectedRecord: {},\n      columnList: [],\n      childColumnList: [],\n      withoutCombocomponent: [],\n      comboComponents: [],\n      subSampleGetParam: {},\n      testGetParam: {},\n      editSubSampleSchedulerParam: {},\n      DynamicSampleColumns: [],\n      sampleSearchFied: [],\n      subsampleSearchFied: [],\n      testSearchFied: [],\n      testMoreField: [],\n      testListColumns: [],\n      SubSampleDynamicGridItem: [],\n      SubSampleDynamicGridMoreField: [],\n      SubSampleSingleItem: [],\n      sampleCombinationUnique: [],\n      subsampleCombinationUnique: [],\n      DynamicTestColumns: [],\n      SingleItem: [],\n      DynamicGridItem: [],\n      DynamicGridMoreField: [],\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      enableAutoClick: false,\n      sampleSearchField: {},\n      filterTestParam: {},\n      testSearchField: [],\n      filterSubSampleParam: {},\n      subsampleSearchField: [],\n      editSchedulerConfigId: -1,\n      editSchedulerSampleParam: {},\n      approveSchedulerSampleParam: {},\n      deleteSchedulerSampleParam: {},\n      activeInactiveSchedulerSampleParam: {}\n    };\n    this.breadCrumbData = [];\n    this.PrevoiusLoginData = undefined;\n    this.sinstrumentid = undefined;\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  render() {\n    let data = [];\n    let comboComponents;\n    const Layout = this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.jsondata;\n\n    if (Layout !== undefined) {\n      Layout.map(row => {\n        return row.children.map(column => {\n          return column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                data.push(componentrow);\n              }\n\n              return null;\n            }) : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : \"\";\n          });\n        });\n      });\n      comboComponents = data;\n    } // let sinstrumentid;\n\n\n    this.props.Login && comboComponents && comboComponents.forEach(item => {\n      if (item.name === 'Instrument') {\n        this.sinstrumentid = item.label;\n      }\n    });\n    console.log(\"this.state.subsampletake\", this.state.subsampleskip);\n    console.log(\"this.state.subsampletake\", this.state.subsampletake);\n    console.log(\"this.props.Login.masterData.RealRegSubTypeValue\", this.props.Login.masterData.RealRegSubTypeValue); //let sampleList = this.props.Login.masterData.SchedulerConfigGetSample ? this.props.Login.masterData.SchedulerConfigGetSample : [];\n\n    let sampleList = this.props.Login.masterData.SchedulerConfigGetSample ? this.props.Login.regSampleExisted ? sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode') : sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode') : [];\n    let subSampleList = this.props.Login.masterData.SchedulerConfigGetSubSample ? this.props.Login.masterData.SchedulerConfigGetSubSample : [];\n    let testList = this.props.Login.masterData.SchedulerConfigGetTest ? this.props.Login.masterData.SchedulerConfigGetTest : [];\n    this.breadCrumbData = [{\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData && this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.sregtypename\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n    }, {\n      \"label\": \"IDS_SCHEDULERCONFIGTYPE\",\n      \"value\": this.props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue && this.props.Login.masterData.RealSchedulerConfigTypeValue.sschedulerconfigtypename\n    }, {\n      \"label\": \"IDS_STATUS\",\n      \"value\": this.props.Login.masterData && this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedTest || testList,\n      selectedMaster: this.props.Login.masterData.selectedTest,\n      primaryKeyField: \"nschedulertestcode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetailSchedulerConiguration(event, status);\n        this.changePropertyView(1, event, \"click\");\n      },\n      inputParam: { ...this.state.testChildGetParam,\n        resultDataState: this.state.resultDataState,\n        // testCommentDataState: this.state.testCommentDataState,\n        // testAttachmentDataState: this.state.testAttachmentDataState,\n        // registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\n        // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n        // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ?\n        //     this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE ? 1 : 0 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ?\n        //         this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE ? 1 : 0 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n        activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 0 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 0 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n      },\n      selectionList: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"stestsynonym\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedTest\",\n      searchListName: \"searchedTest\",\n      searchRef: this.searchTestRef,\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter // openFilter={this.openFilter}\n      ,\n      closeFilter: this.closeFilter //onFilterSubmit={this.onFilterSubmit}\n      ,\n      subFields: this.state.testListColumns || [],\n      moreField: this.state.testMoreField // needMultiValueFilter={true}\n      ,\n      clearAllFilter: undefined,\n      onMultiFilterClick: undefined // jsonField={'jsondata'}\n      //jsonDesignFields={true}\n      ,\n      needMultiSelect: true,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: this.state.filterTestParam,\n      subFieldsLabel: true,\n      handlePageChange: this.handleTestPageChange // buttonCount={5}\n      ,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      childTabsKey: [\"SchedulerConfigurationParameter\"],\n      actionIcons: undefined,\n      needFilter: false,\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtest\",\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADDTEST\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.addTestSchedulerConfigurationId) === -1,\n        onClick: () => this.addMoreSchedulerConfigTest({ ...this.state.addTestParam,\n          skip: this.state.skip,\n          take: this.state.skip + this.state.take\n        }, this.state.addTestSchedulerConfigurationId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"adddeputy\",\n        className: \"btn btn-circle outline-grey ml-2\" //title={\"Add Test\"}\n        //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DELETETEST\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteTestSchedulerConfigurationId) === -1 // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\n        ,\n        onClick: () => this.ConfirmTestDelete(this.state.deleteTestSchedulerConfigurationId, this.state.skip, this.state.take, this.state.subsampleskip, this.state.subsampletake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 45\n        }\n      })))) // filterComponent={[]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage,\n        onSecondaryPaneSizeChange: this.paneSizeChange,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0 sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n        cardHead: 94,\n        clickIconGroup: true,\n        splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n        masterList: this.props.Login.masterData.searchedSubSample || subSampleList,\n        selectedMaster: this.props.Login.masterData.selectedSubSample,\n        primaryKeyField: \"nschedulersubsamplecode\",\n        filterColumnData: this.props.filterTransactionList,\n        getMasterDetail: (event, status) => {\n          this.props.getSchedulerTestDetail(event, status);\n        },\n        inputParam: { ...this.state.testGetParam,\n          searchTestRef: this.searchTestRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          subsampleskip: this.state.subsampleskip,\n          subsampletake: this.state.subsampletake,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake\n        },\n        selectionList: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n        selectionColorField: \"scolorhexcode\",\n        mainField: 'ssamplearno',\n        showStatusLink: true,\n        showStatusName: true,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        selectedListName: \"selectedSubSample\",\n        searchListName: \"searchedSubSample\",\n        searchRef: this.searchSubSampleRef,\n        objectName: \"subsample\",\n        listName: \"IDS_SUBSAMPLE\",\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"stransdisplaystatus\",\n        showFilter: this.props.Login.showFilter,\n        needValidation: true,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)) // openFilter={this.openFilter}\n        // closeFilter={this.closeFilter}\n        // onFilterSubmit={this.onFilterSubmit}\n        ,\n        subFields: this.state.DynamicSubSampleColumns // needMultiValueFilter={true}\n        // clearAllFilter={undefined}\n        //onMultiFilterClick={undefined}\n        // jsonField={'jsondata'}\n        //jsonDesignFields={true}\n        ,\n        needMultiSelect: true,\n        showStatusBlink: true,\n        callCloseFunction: true,\n        filterParam: { ...this.state.filterSubSampleParam,\n          childRefs: [{\n            ref: this.searchTestRef,\n            childFilteredListName: \"searchedTest\"\n          }]\n        },\n        subFieldsLabel: true,\n        handlePageChange: this.handleSubSamplePageChange,\n        skip: this.state.subsampleskip,\n        take: this.state.subsampletake // pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}                           \n        ,\n        childTabsKey: [\"SchedulerConfigGetTest\"],\n        actionIcons: this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample === true ? [{\n          title: this.props.intl.formatMessage({\n            id: \"IDS_EDIT\"\n          }),\n          controlname: \"faPencilAlt\",\n          objectName: \"mastertoedit\",\n          hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleSchedulerConfigurationId) === -1,\n          onClick: this.editSubSampleScheduler,\n          inputData: {\n            primaryKeyName: \"nschedulersubsamplecode\",\n            operation: \"update\",\n            masterData: this.props.Login.masterData,\n            userInfo: this.props.Login.userInfo,\n            searchTestRef: this.searchTestRef,\n            ncontrolCode: this.state.editSubSampleSchedulerConfigurationId,\n            editSubSampleSchedulerParam: { ...this.state.editSubSampleSchedulerParam,\n              ncontrolCode: this.state.editSubSampleId\n            }\n          }\n        }] : [{\n          title: this.props.intl.formatMessage({\n            id: \"IDS_EDIT\"\n          }),\n          controlname: \"faPencilAlt\",\n          objectName: \"mastertoedit\",\n          hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleId) === -1,\n          onClick: this.editSubSampleScheduler,\n          inputData: {\n            primaryKeyName: \"ntransactionsamplecode\",\n            operation: \"update\",\n            masterData: this.props.Login.masterData,\n            userInfo: this.props.Login.userInfo,\n            searchTestRef: this.searchTestRef,\n            ncontrolCode: this.state.editSubSampleSchedulerConfigurationId,\n            editSubSampleSchedulerParam: { ...this.state.editSubSampleSchedulerParam,\n              ncontrolCode: this.state.editSubSampleId\n            }\n          }\n        }],\n        needFilter: false,\n        commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n          className: \"d-flex justify-content-end icon-group-wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Nav.Link, {\n          name: \"adddeputy\",\n          className: \"btn btn-circle outline-grey ml-2\" //title={\"Add Test\"}\n          //  data-for=\"tooltip-common-wrap\"\n          ,\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_ADDSUBSAMPLE\"\n          }),\n          hidden: this.state.userRoleControlRights.indexOf(this.state.addSubSampleSchedulerConfigurationId) === -1 // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\n          ,\n          onClick: () => this.addSubSample(this.state.addSubSampleSchedulerConfigurationId, this.state.skip, this.state.take),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faPlus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(Nav.Link, {\n          name: \"adddeputy\",\n          className: \"btn btn-circle outline-grey ml-2\" //title={\"Add Test\"}\n          //  data-for=\"tooltip-common-wrap\"\n          ,\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_DELETESUBSAMPLE\"\n          }),\n          hidden: this.state.userRoleControlRights.indexOf(this.state.deleteSubSampleSchedulerConfigurationId) === -1 // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\n          ,\n          onClick: () => this.ConfirmDelete(this.state.deleteSubSampleSchedulerConfigurationId, this.state.skip, this.state.take, this.state.subsampleskip, this.state.subsampletake),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTrashAlt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 45\n          }\n        })))) // filterComponent={[]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"nschedulersamplecode\",\n      fetchUrl: \"schedulerconfiguration/getSchedulerConfigSubSample\",\n      fecthInputObject: { ...this.state.subSampleGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef // resultDataState: this.state.resultDataState,\n        // testCommentDataState: this.state.testCommentDataState,\n        // testAttachmentDataState: this.state.testAttachmentDataState,\n        // sampleGridDataState: this.state.sampleGridDataState\n\n      },\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"selectedSample\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"selectedSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"nschedulersubsamplecode\",\n      fetchUrl: \"schedulerconfiguration/getSchedulerConfigTest\",\n      fecthInputObject: { ...this.state.testGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef // resultDataState: this.state.resultDataState,\n        // testCommentDataState: this.state.testCommentDataState,\n        // testAttachmentDataState: this.state.testAttachmentDataState,\n        // sampleGridDataState: this.state.sampleGridDataState\n\n      },\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"selectedSubSample\",\n      inputListName: \"selectedSubSample\",\n      updatedListname: \"SchedulerConfigGetSubSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }, {\n      filteredListName: \"searchedTest\",\n      updatedListname: \"SchedulerConfigGetTest\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"nschedulertestcode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: { ...this.state.testGetParam,\n        searchTestRef: this.searchTestRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip // resultDataState: this.state.resultDataState\n\n      },\n      selectedObject: \"selectedTest\",\n      inputListName: \"selectedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage // onSecondaryPaneSizeChange={this.paneSizeChange}\n      ,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedSample || sampleList,\n      selectedMaster: this.props.Login.masterData.selectedSample,\n      primaryKeyField: \"nschedulersamplecode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: this.props.getSchedulerConfigSubSampleDetail,\n      inputParam: { ...this.state.subSampleGetParam,\n        searchTestRef: this.searchTestRef,\n        searchSubSampleRef: this.searchSubSampleRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        resultDataState: this.state.resultDataState,\n        activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n      },\n      selectionList: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: this.sinstrumentid,\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" //ALPD-4941--Added by vignesh R(07-02-2025)-->this prop is passed to TransactionListMaster to display the second status color.\n      //start\n      ,\n      secondaryFieldname: \"nactivestaus\",\n      secondaryField: \"sactiveststaus\",\n      statusColor: \"ssecondcolorhexcode\" //end\n      ,\n      selectedListName: \"selectedSample\",\n      searchListName: \"searchedSample\",\n      searchRef: this.searchSampleRef,\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns //needMultiValueFilter={true}\n      ,\n      clearAllFilter: undefined,\n      onMultiFilterClick: undefined,\n      needMultiSelect: false,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: { ...this.state.filterSampleParam,\n        childRefs: [{\n          ref: this.searchSubSampleRef,\n          childFilteredListName: \"searchedSubSample\"\n        }, {\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      subFieldsLabel: true,\n      handlePageChange: this.handlePageChange,\n      skip: this.state.skip,\n      take: this.state.take,\n      childTabsKey: [\"SchedulerConfigGetTest\", \"SchedulerConfigGetSubSample\"],\n      actionIcons: [{\n        title: this.props.intl.formatMessage({\n          id: \"IDS_EDIT\"\n        }),\n        controlname: \"faPencilAlt\",\n        objectName: \"mastertoedit\",\n        hidden: this.state.userRoleControlRights.indexOf(this.state.editSchedulerConfigId) === -1,\n        onClick: this.editSchedulerConfiguration,\n        inputData: {\n          primaryKeyName: \"nschedulersamplecode\",\n          operation: \"update\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          editSchedulerSampleParam: { ...this.state.editSchedulerSampleParam,\n            ncontrolCode: this.state.editSchedulerConfigId,\n            nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample //=== true ? transactionStatus.YES:transactionStatus.NO\n\n          }\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_APPROVE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.approveSchedulerConfigurationId) === -1,\n        objectName: \"mastertoapprove\",\n        onClick: this.approveSchedulerConfiguration,\n        controlname: \"faThumbsUp\",\n        inputData: {\n          primaryKeyName: \"nschedulersamplecode\",\n          operation: \"approve\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          approveSchedulerSampleParam: { ...this.state.approveSchedulerSampleParam,\n            ncontrolCode: this.state.approveSchedulerConfigurationId,\n            nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\n          }\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteSchedulerConfigurationId) === -1,\n        objectName: \"mastertodelete\",\n        onClick: this.ConfirmSampleDelete,\n        controlname: \"faTrashAlt\",\n        inputData: {\n          primaryKeyName: \"nschedulersamplecode\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          deleteSchedulerSampleParam: { ...this.state.deleteSchedulerSampleParam,\n            ncontrolCode: this.state.deleteSchedulerConfigurationId,\n            nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\n          }\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_INACTIVEACTIVE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(this.state.activeInactiveSchedulerConfigurationId) === -1,\n        objectName: \"mastertoupdateactivestatus\",\n        onClick: this.onInactiveActive,\n        controlname: \"faActiveStatus\",\n        inputData: {\n          primaryKeyName: \"nschedulersamplecode\",\n          operation: \"updateactive\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          activeInactiveSchedulerSampleParam: { ...this.state.activeInactiveSchedulerSampleParam,\n            ncontrolCode: this.state.activeInactiveSchedulerConfigurationId,\n            nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\n          }\n        }\n      }],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue ml-2\",\n        role: \"button\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        hidden: this.state.userRoleControlRights.indexOf(this.state.addSchedulerConfigurationId) === -1,\n        onClick: () => this.getSchedulerConfigComboService(\"SchedulerConfig\", \"create\", \"nschedulersamplecode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.addSchedulerConfigurationId, false, true, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) //   data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => this.onReload(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 61\n        }\n      }))),\n      filterComponent: [{\n        \"Scheduler Configuration Filter\": /*#__PURE__*/React.createElement(SchedulerConfigurationFilter, {\n          SampleType: this.state.stateSampleType || [],\n          RegistrationType: this.state.stateRegistrationType || [],\n          RegistrationSubType: this.state.stateRegistrationSubType || [],\n          SchedulerConfigType: this.state.stateSchedulerConfigType || [],\n          FilterStatus: this.state.stateFilterStatus || [],\n          ApprovalConfigVersion: this.state.stateApprovalConfigVersion || {},\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          userInfo: this.props.Login.userInfo || {},\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || {},\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || {},\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || {},\n          SchedulerConfigTypeValue: this.props.Login.masterData.SchedulerConfigTypeValue || {},\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || {},\n          ApprovalConfigVersionValue: this.props.Login.masterData.ApprovalConfigVersionValue || {},\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          onSampleTypeChange: this.onSampleTypeChange,\n          onRegTypeChange: this.onRegTypeChange,\n          onRegSubTypeChange: this.onRegSubTypeChange,\n          onSchedulerConfigTypeChange: this.onSchedulerConfigTypeChange,\n          onFilterChange: this.onFilterChange,\n          onApprovalConfigVersionChange: this.onApprovalConfigVersionChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 87\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: // this.state.showTest === true || this.state.showSubSample === true ?\n      {\n        display: \"block\"\n      } // : \n      // { display: \"none\" }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 41\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 170\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\", 0) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid sm-view-v-t position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(FullviewExpand, {\n      width: \"20\",\n      height: \"20\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(FullviewCollapse, {\n      width: \"24\",\n      height: \"24\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PARAMETERS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex === 1 ? this.sideNavDetail(\"IDS_PARAMETERS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex === 4 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex === 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileInvoice //   data-for=\"tooltip-common-wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PARAMETERS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PARAMETERS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PreRegisterSlideOutModal, {\n      postParamList: this.postParamList,\n      PrevoiusLoginData: this.PrevoiusLoginData,\n      closeModal: this.closeModal,\n      operation: \"create\",\n      screenName: \"IDS_REGISTRATION\",\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      updateStore: this.props.updateStore,\n      comboComponents: this.state.comboComponents,\n      withoutCombocomponent: this.state.withoutCombocomponent,\n      userRoleControlRights: this.state.userRoleControlRights,\n      fromDate: this.fromDate,\n      toDate: this.toDate,\n      samplecombinationunique: this.state.sampleCombinationUnique,\n      subsamplecombinationunique: this.state.subsampleCombinationUnique,\n      exportTemplateId: this.state.exportTemplateId,\n      importTemplateId: this.state.importTemplateId,\n      sampleexportfields: this.state.sampleexportfields,\n      subsampleexportfields: this.state.subsampleexportfields,\n      siteList: this.props.Login.siteList || [],\n      schedulerList: this.props.Login.schedulerList || [],\n      scheduleMasterDetails: this.props.Login.masterData.ScheduleMasterDetails || [],\n      nschedulerconfigtypecode: this.props.Login.masterData.RealSchedulerConfigTypeValue && this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode || -1,\n      nschedulerconfigtypecode: this.props.Login.masterData.RealSchedulerConfigTypeValue && this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode || -1 //  specBasedComponent={this.state.specBasedComponent}\n      ,\n      mandatoryFields: [{\n        \"idsName\": \"IDS_PRODUCTCATEGORY\",\n        \"dataField\": \"nproductcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PRODUCTNAME\",\n        \"dataField\": \"sproductname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 29\n      }\n    })) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal //|| this.props.Login.loadEsign}\n      ,\n      closeModal: this.props.Login.loadScheduleSubSample || this.props.Login.loadChildTest ? this.closeChildModal : this.closeModal,\n      hideSave: false,\n      size: this.props.Login.parentPopUpSize,\n      loginoperation: false,\n      buttonLabel: undefined,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      innerPopup: this.props.Login.loadComponent,\n      onSaveClick: this.props.Login.loadScheduleSubSample ? this.onSaveSubSampleClick : this.props.Login.loadChildTest ? this.onSaveChildTestClick : this.onSaveClick,\n      validateEsign: this.validateEsign,\n      showSaveContinue: this.props.Login.showSaveContinue,\n      selectedRecord: this.state.selectedRecord,\n      mandatoryFields: this.mandatoryList(this.props.Login.loadScheduleSubSample),\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 29\n        }\n      }) : this.props.Login.loadScheduleSubSample ? /*#__PURE__*/React.createElement(AddSubSampleConfiguration, {\n        editfield: this.props.Login.masterData.DynamicDesign && JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value),\n        Component: this.props.Login.lstComponent || [],\n        selectComponent: this.state.selectedRecord,\n        templateData: this.props.Login.masterData.SubSampleTemplate && this.props.Login.masterData.SubSampleTemplate.jsondata,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        handleDateChange: this.handleDateSubSampleChange,\n        onInputOnChange: this.onInputOnSubSampleChange,\n        onNumericInputChange: this.onNumericInputSubSampleChange,\n        onNumericBlur: this.onNumericBlurSubSample,\n        comboData: this.props.Login.regSubSamplecomboData,\n        onComboChange: this.onComboSubSampleChange,\n        onComponentChange: this.onComponentChange,\n        TestCombined: this.props.Login.TestCombined || [],\n        TestChange: this.onComboChange,\n        selectedTestData: this.state.selectedRecord,\n        selectedTestPackageData: this.state.selectedTestPackageData,\n        childoperation: this.props.Login.operation,\n        specBasedComponent: this.props.Login.specBasedComponent,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        selectPackage: this.state.selectedRecord,\n        TestPackage: this.props.Login.TestPackage || [],\n        onTestPackageChange: this.onTestPackageChange,\n        operation: this.props.Login.operation,\n        hideQualisForms: this.props.Login.hideQualisForms,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        hasTest: true,\n        onDropFile: this.onDropFileSubSample,\n        deleteAttachment: this.deleteAttachmentSubSample,\n        onTestSectionChange: this.onTestSectionChange,\n        TestSection: this.props.Login.TestSection || [],\n        selectSection: this.state.selectedRecord,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 49\n        }\n      }) : this.props.Login.loadChildTest ? /*#__PURE__*/React.createElement(AddTestSchedulerConfig, {\n        TestCombined: this.props.Login.TestCombined,\n        selectedTestData: this.state.selectedRecord,\n        TestChange: this.onComboChange,\n        TestPackageChange: this.onComboTestPackageChange,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        selectPackage: this.state.selectedRecord,\n        selectSection: this.state.selectedRecord,\n        TestPackage: this.props.Login.TestPackage || [],\n        TestSection: this.props.Login.TestSection || [],\n        onTestPackageChange: this.onTestPackageChange,\n        onTestSectionChange: this.onTestSectionChange,\n        hideQualisForms: this.props.Login.hideQualisForms,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 48\n        }\n      }) : \"\" //  End of ALPD-4130 Additional Filter Component -ATE-241\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.columnList !== previousProps.Login.columnList) {\n      this.setState({\n        columnList: this.props.Login.columnList,\n        childColumnList: this.props.Login.childColumnList,\n        withoutCombocomponent: this.props.Login.withoutCombocomponent,\n        comboComponents: this.props.Login.comboComponents\n      });\n    }\n\n    if (this.props.Login !== previousProps.Login) {\n      this.PrevoiusLoginData = previousProps;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      const addSchedulerConfigurationId = controlMap.has(\"AddSchedulerConfiguration\") ? controlMap.get(\"AddSchedulerConfiguration\").ncontrolcode : -1;\n      const addSubSampleSchedulerConfigurationId = controlMap.has(\"AddSubSampleSchedulerConfiguration\") ? controlMap.get(\"AddSubSampleSchedulerConfiguration\").ncontrolcode : -1;\n      const editSubSampleSchedulerConfigurationId = controlMap.has(\"EditSubSampleSchedulerConfiguration\") ? controlMap.get(\"EditSubSampleSchedulerConfiguration\").ncontrolcode : -1;\n      const deleteSubSampleSchedulerConfigurationId = controlMap.has(\"DeleteSubSampleSchedulerConfiguration\") ? controlMap.get(\"DeleteSubSampleSchedulerConfiguration\").ncontrolcode : -1;\n      const addTestSchedulerConfigurationId = controlMap.has(\"AddTestSchedulerConfiguration\") ? controlMap.get(\"AddTestSchedulerConfiguration\").ncontrolcode : -1;\n      const deleteTestSchedulerConfigurationId = controlMap.has(\"DeleteTestSchedulerConfiguration\") ? controlMap.get(\"DeleteTestSchedulerConfiguration\").ncontrolcode : -1;\n      const editSchedulerConfigId = controlMap.has(\"EditSchedulerConfiguration\") ? controlMap.get(\"EditSchedulerConfiguration\").ncontrolcode : -1;\n      const approveSchedulerConfigurationId = controlMap.has(\"ApproveSchedulerConfiguration\") ? controlMap.get(\"ApproveSchedulerConfiguration\").ncontrolcode : -1;\n      const deleteSchedulerConfigurationId = controlMap.has(\"DeleteSchedulerConfiguration\") ? controlMap.get(\"DeleteSchedulerConfiguration\").ncontrolcode : -1;\n      const activeInactiveSchedulerConfigurationId = controlMap.has(\"ActiveInActiveSchedulerConfiguration\") ? controlMap.get(\"ActiveInActiveSchedulerConfiguration\").ncontrolcode : -1;\n      this.setState({\n        activeInactiveSchedulerConfigurationId,\n        deleteSchedulerConfigurationId,\n        approveSchedulerConfigurationId,\n        editSchedulerConfigId,\n        deleteTestSchedulerConfigurationId,\n        addTestSchedulerConfigurationId,\n        deleteSubSampleSchedulerConfigurationId,\n        userRoleControlRights,\n        controlMap,\n        addSchedulerConfigurationId,\n        addSubSampleSchedulerConfigurationId,\n        editSubSampleSchedulerConfigurationId\n      });\n    }\n\n    let activeTabIndex = this.state.activeTabIndex || undefined;\n    let activeTabId = this.state.activeTabId || undefined;\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex || this.props.Login.masterData !== previousProps.Login.masterData) {\n      var _this$props$Login$mas, _this$props$Login$mas2, _this$props$Login$mas3, _this$props$Login$mas4, _this$props$Login$mas5, _this$props$Login$mas6, _this$props$Login$mas7, _this$props$Login$mas8, _this$props$Login$mas9, _this$props$Login$mas10, _this$props$Login$mas11, _this$props$Login$mas12, _this$props$Login$mas13, _this$props$Login$mas14, _this$props$Login$mas15, _this$props$Login$mas16, _this$props$Login$mas17, _this$props$Login$mas18;\n\n      let {\n        skip,\n        take,\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        SingleItem,\n        testMoreField,\n        testListColumns,\n        SubSampleDynamicGridItem,\n        SubSampleDynamicGridMoreField,\n        SubSampleSingleItem,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        testAttachmentDataState,\n        registrationTestHistoryDataState,\n        sampleCommentDataState,\n        sampledateconstraints,\n        subsampledateconstraints,\n        activeTabIndex,\n        activeTabId,\n        sampleCombinationUnique,\n        subsampleCombinationUnique,\n        addedOrderSampleList,\n        sampleexportfields,\n        subsampleexportfields,\n        samplefilteritem,\n        sampledisplayfields\n      } = this.state;\n      let stateSampleType = this.state.stateSampleType;\n      let stateRegistrationType = this.state.stateRegistrationType;\n      let stateRegistrationSubType = this.state.stateRegistrationSubType;\n      let stateSchedulerConfigType = this.state.stateSchedulerConfigType;\n      let stateFilterStatus = this.state.stateFilterStatus;\n      let stateApprovalConfigVersion = this.state.stateApprovalConfigVersion;\n      let stateDynamicDesign = this.state.stateDynamicDesign;\n\n      if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n        activeTabIndex = this.props.Login.activeTabIndex;\n        activeTabId = this.props.Login.activeTabId;\n      }\n\n      if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\n        const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", \"nsorter\", \"ascending\", false);\n        stateSampleType = sampleTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.RegistrationType !== previousProps.Login.masterData.RegistrationType) {\n        const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", \"ascending\", false);\n        stateRegistrationType = registrationTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\n        const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", \"ascending\", false);\n        stateRegistrationSubType = registrationSubTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.SchedulerConfigType !== previousProps.Login.masterData.SchedulerConfigType) {\n        const schedulerConfigTypeMap = constructOptionList(this.props.Login.masterData.SchedulerConfigType || [], \"nschedulerconfigtypecode\", \"sschedulerconfigtypename\", \"nschedulerconfigtypecode\", \"ascending\", false);\n        stateSchedulerConfigType = schedulerConfigTypeMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.FilterStatus !== previousProps.Login.masterData.FilterStatus) {\n        const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", \"ntransactionstatus\", \"ascending\", false);\n        stateFilterStatus = filterStatusMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.ApprovalConfigVersion !== previousProps.Login.masterData.ApprovalConfigVersion) {\n        const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napproveconfversioncode\", \"sversionname\", undefined, undefined, false);\n        stateApprovalConfigVersion = DesignTemplateMappingMap.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n        const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n        stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n      }\n\n      const subSampleGetParam = {\n        masterData: this.props.Login.masterData,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\n      };\n\n      if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n        const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n        DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n        DynamicSampleColumns.push({\n          [designProperties.LABEL]: {\n            'en-US': 'Scheduler'\n          },\n          [designProperties.VALUE]: 'SchedulerMaster'\n        });\n        DynamicSampleColumns = DynamicSampleColumns.filter(item => item[designProperties.VALUE] !== this.sinstrumentid);\n\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode == 2) {\n          DynamicSampleColumns.unshift({\n            [designProperties.LABEL]: {\n              'en-US': 'Site'\n            },\n            [designProperties.VALUE]: 'SchedulerSite'\n          });\n        }\n\n        DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n        DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n        DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n        DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n        SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n        SingleItem = SingleItem.filter(item => item[2] !== 'sarno' && item[2] !== 'dregdate');\n        SingleItem.push({\n          [designProperties.LABEL]: {\n            'en-US': 'Scheduler'\n          },\n          [designProperties.VALUE]: 'SchedulerMaster'\n        });\n\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode == 2) {\n          SingleItem.unshift({\n            [designProperties.LABEL]: {\n              'en-US': 'Site'\n            },\n            [designProperties.VALUE]: 'SchedulerSite'\n          });\n        }\n\n        SubSampleDynamicGridItem = dynamicColumn.subsamplegriditem ? dynamicColumn.subsamplegriditem : [];\n        SubSampleDynamicGridMoreField = dynamicColumn.subsamplegridmoreitem ? dynamicColumn.subsamplegridmoreitem : [];\n        SubSampleSingleItem = dynamicColumn.subsampledisplayfields ? dynamicColumn.subsampledisplayfields : [];\n        testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n        testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n        testListColumns = testListColumns.filter(item => item[designProperties.VALUE] !== 'ssamplearno' && item[designProperties.VALUE] !== 'sarno' && item[designProperties.VALUE] !== 'AnalyserName');\n        sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n        subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n        testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n        sampledateconstraints = dynamicColumn.sampledateconstraints || [];\n        subsampledateconstraints = dynamicColumn.subsampledateconstraints || [];\n        sampleCombinationUnique = dynamicColumn.samplecombinationunique || [];\n        subsampleCombinationUnique = dynamicColumn.subsamplecombinationunique || [];\n        sampleexportfields = dynamicColumn.sampleExportFields || [];\n        subsampleexportfields = dynamicColumn.subSampleExportFields || [];\n        samplefilteritem = dynamicColumn.samplefilteritem || [];\n        sampledisplayfields = dynamicColumn.sampledisplayfields || [];\n      }\n\n      const editSchedulerSampleParam = {\n        nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        // ncontrolCode: this.state.editSampleId,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        checkBoxOperation: checkBoxOperation.SINGLESELECT\n      };\n      const deleteSchedulerSampleParam = {\n        //nschedulersamplecode:addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\"),\n        userinfo: this.props.Login.userInfo,\n        nneedsubsamp: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1,\n        nregsubtypeversioncode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\n        nfilterstatus: ((_this$props$Login$mas = this.props.Login.masterData) === null || _this$props$Login$mas === void 0 ? void 0 : (_this$props$Login$mas2 = _this$props$Login$mas.RealFilterStatusValue) === null || _this$props$Login$mas2 === void 0 ? void 0 : _this$props$Login$mas2.ntransactionstatus) === 0 ? (_this$props$Login$mas3 = this.props.Login.masterData) === null || _this$props$Login$mas3 === void 0 ? void 0 : (_this$props$Login$mas4 = _this$props$Login$mas3.FilterStatus) === null || _this$props$Login$mas4 === void 0 ? void 0 : _this$props$Login$mas4.map(item => item.ntransactionstatus).join(\",\") : ((_this$props$Login$mas5 = this.props.Login.masterData) === null || _this$props$Login$mas5 === void 0 ? void 0 : (_this$props$Login$mas6 = _this$props$Login$mas5.FilterStatusValue) === null || _this$props$Login$mas6 === void 0 ? void 0 : _this$props$Login$mas6.ntransactionstatus) || -1,\n        nsampleschedulerconfigtypecode: this.props.Login.masterData.SchedulerConfigTypeValue && this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\n      };\n      const activeInactiveSchedulerSampleParam = {\n        userinfo: this.props.Login.userInfo,\n        nneedsubsamp: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode || -1,\n        nregsubtypeversioncode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\n        nfilterstatus: ((_this$props$Login$mas7 = this.props.Login.masterData) === null || _this$props$Login$mas7 === void 0 ? void 0 : (_this$props$Login$mas8 = _this$props$Login$mas7.RealFilterStatusValue) === null || _this$props$Login$mas8 === void 0 ? void 0 : _this$props$Login$mas8.ntransactionstatus) === 0 ? (_this$props$Login$mas9 = this.props.Login.masterData) === null || _this$props$Login$mas9 === void 0 ? void 0 : (_this$props$Login$mas10 = _this$props$Login$mas9.FilterStatus) === null || _this$props$Login$mas10 === void 0 ? void 0 : _this$props$Login$mas10.map(item => item.ntransactionstatus).join(\",\") : ((_this$props$Login$mas11 = this.props.Login.masterData) === null || _this$props$Login$mas11 === void 0 ? void 0 : (_this$props$Login$mas12 = _this$props$Login$mas11.FilterStatusValue) === null || _this$props$Login$mas12 === void 0 ? void 0 : _this$props$Login$mas12.ntransactionstatus) || -1,\n        nsampleschedulerconfigtypecode: this.props.Login.masterData.SchedulerConfigTypeValue && this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\n      };\n      const approveSchedulerSampleParam = {\n        // nfilterstatus: this.props.Login.masterData && this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus&& this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\n        nfilterstatus: ((_this$props$Login$mas13 = this.props.Login.masterData) === null || _this$props$Login$mas13 === void 0 ? void 0 : (_this$props$Login$mas14 = _this$props$Login$mas13.RealFilterStatusValue) === null || _this$props$Login$mas14 === void 0 ? void 0 : _this$props$Login$mas14.ntransactionstatus) === 0 ? (_this$props$Login$mas15 = this.props.Login.masterData) === null || _this$props$Login$mas15 === void 0 ? void 0 : (_this$props$Login$mas16 = _this$props$Login$mas15.FilterStatus) === null || _this$props$Login$mas16 === void 0 ? void 0 : _this$props$Login$mas16.map(item => item.ntransactionstatus).join(\",\") : ((_this$props$Login$mas17 = this.props.Login.masterData) === null || _this$props$Login$mas17 === void 0 ? void 0 : (_this$props$Login$mas18 = _this$props$Login$mas17.FilterStatusValue) === null || _this$props$Login$mas18 === void 0 ? void 0 : _this$props$Login$mas18.ntransactionstatus) || -1,\n        filterStatus: this.props.Login.masterData.FilterStatus && this.props.Login.masterData.FilterStatus,\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        nregsubtypeversioncode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\n        nsampleschedulerconfigtypecode: this.props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue && this.props.Login.masterData.RealSchedulerConfigTypeValue.nsampleschedulerconfigtypecode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        sinstrumentidLabel: this.sinstrumentid,\n        // ALPD-5332 Added by Abdul for Material Scheduler\n        nschedulerconfigtypecode: this.props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue && this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode // ALPD-5332 End        \n        //sinstrumentid:this.props.Login.masterData.selectedSample[0][this.sinstrumentid]\n\n      };\n      const testGetParam = {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nschedulersamplecode: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        //searchTestRef: this.searchTestRef,\n        // testskip: testskip,\n        //subsampleskip: subsampleskip,\n        // resultDataState: resultDataState,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample //activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n\n      };\n      const editSubSampleSchedulerParam = {\n        nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        sfromdate: this.props.Login.masterData.RealFromDate,\n        stodate: this.props.Login.masterData.RealToDate,\n        // ncontrolCode: this.state.editSampleId,\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      };\n      const testChildGetParam = {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n        nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n        // activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        //activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nschedulersamplecode: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\n        nschedulersubsamplecode: this.props.Login.masterData.selectedSubSample && this.props.Login.masterData.selectedSubSample.map(sample => sample.nschedulersubsamplecode).join(\",\"),\n        nschedulertestcode: this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest.map(sample => sample.nschedulertestcode).join(\",\"),\n        ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n        activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      };\n      const addTestParam = {\n        selectedSample: this.props.Login.masterData.selectedSample,\n        selectedSubSample: this.props.Login.masterData.selectedSubSample,\n        // skip: skip, take: (skip + take),\n        userinfo: this.props.Login.userInfo,\n        sampleList: this.props.Login.masterData.SchedulerConfigGetSample,\n        subsampleList: this.props.Login.masterData.SchedulerConfigGetSubSample,\n        nspecsampletypecode: this.props.Login.masterData.selectedSubSample && [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\n      };\n      const filterSubSampleParam = {\n        inputListName: \"SchedulerConfigGetSubSample\",\n        selectedObject: \"selectedSubSample\",\n        primaryKeyField: \"nschedulersubsamplecode\",\n        fetchUrl: \"schedulerconfiguration/getSchedulerConfigTest\",\n        skip: this.state.skip,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: 0,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        isMultiSort: true,\n        multiSortData: [{\n          pkey: 'nschedulertestcode',\n          list: 'SchedulerConfigGetTest'\n        }],\n        //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\n        fecthInputObject: {\n          masterData: this.props.Login.masterData,\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          nschedulersamplecode: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(x => x.nschedulersamplecode).join(\",\")\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: subsampleSearchField,\n        changeList: [\"SchedulerConfigGetTest\", \"SchedulerConfigurationParameter\", \"selectedSubSample\", \"selectedTest\"]\n      };\n      const filterTestParam = {\n        inputListName: \"SchedulerConfigGetTest\",\n        selectedObject: \"selectedTest\",\n        primaryKeyField: \"nschedulertestcode\",\n        fetchUrl: this.getActiveTestURL(),\n        skip: this.state.skip,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: this.state.subsampleskip,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        fecthInputObject: {\n          nschedulertestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.nschedulertestcode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n          // checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\"\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: testSearchField,\n        changeList: [\"SchedulerConfigurationParameter\"],\n        childTabsKey: [\"SchedulerConfigurationParameter\"]\n      };\n      const filterSampleParam = {\n        inputListName: \"SchedulerConfigGetSample\",\n        selectedObject: \"selectedSample\",\n        primaryKeyField: \"nschedulersamplecode\",\n        fetchUrl: \"schedulerconfiguration/getSchedulerConfigSubSample\",\n        // isSortable: true,\n        // sortValue: 'ntransactionsamplecode',\n        // sortList: ['RegistrationGetSubSample'],\n        isMultiSort: true,\n        multiSortData: [{\n          pkey: 'nschedulersubsamplecode',\n          list: 'SchedulerConfigGetSubSample'\n        }, {\n          pkey: 'nschedulertestcode',\n          list: 'SchedulerConfigGetTest'\n        }],\n        //ALPD-1518\n        skip: 0,\n        take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n        subsampleskip: 0,\n        subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        testskip: 0,\n        testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\n        //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\n        fecthInputObject: {\n          //nflag: 2,\n          // ntype: 2,\n          masterData: this.props.Login.masterData,\n          ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\n          ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n          // checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT\n        },\n        masterData: this.props.Login.masterData,\n        searchFieldList: sampleSearchField,\n        changeList: [\"SchedulerConfigGetSubSample\", \"SchedulerConfigGetTest\", \"selectedSample\", \"selectedSubSample\", \"selectedTest\", \"SchedulerConfigurationParameter\"]\n      };\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip;\n      subsampletake = this.props.Login.subsampletake || subsampletake;\n      this.setState({\n        activeInactiveSchedulerSampleParam,\n        deleteSchedulerSampleParam,\n        approveSchedulerSampleParam,\n        editSchedulerSampleParam,\n        addTestParam,\n        editSubSampleSchedulerParam,\n        testGetParam,\n        subSampleGetParam,\n        stateSampleType,\n        stateRegistrationType,\n        stateRegistrationSubType,\n        stateSchedulerConfigType,\n        stateFilterStatus,\n        stateApprovalConfigVersion,\n        stateDynamicDesign,\n        skip,\n        take,\n        testskip,\n        sampleSearchField,\n        filterSampleParam,\n        filterTestParam,\n        testSearchField,\n        subsampleSearchField,\n        filterSubSampleParam,\n        subsampleskip,\n        subsampletake,\n        testtake,\n        DynamicSampleColumns,\n        testListColumns,\n        testMoreField,\n        DynamicSubSampleColumns,\n        SingleItem,\n        activeTabIndex,\n        activeTabId,\n        DynamicGridMoreField,\n        DynamicGridItem,\n        testChildGetParam\n      });\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  getActiveTestURL() {\n    let url = \"schedulerconfiguration/getSchedulerConfigParameter\";\n    return url;\n  }\n\n  updateSchedulerConfigSubSample(saveType, formRef, operation, flag) {\n    const inputData = {\n      userinfo: this.props.Login.userInfo\n    };\n    let initialParam = {\n      nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n      nflag: 2,\n      ntype: 5,\n      nschedulersamplecode: String(this.state.selectedRecord.nschedulersamplecode),\n      nschedulersubsamplecode: String(this.state.selectedRecord.nschedulersubsamplecode),\n      ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\n      nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\n      // checkBoxOperation: 3,\n      checkBoxOperation: checkBoxOperation.SINGLESELECT,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\" // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      // activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n\n    };\n    inputData[\"initialparam\"] = initialParam; // inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\n    //inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n\n    const param = getRegistrationSubSample(this.state.selectedRecord, this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent, undefined, operation);\n    inputData[\"schedulersample\"] = param.sampleRegistration;\n\n    if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n      inputData[\"registrationsample\"]['jsondata'] = { ...inputData[\"registrationsample\"]['jsondata'],\n        externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid\n      };\n      inputData[\"registrationsample\"]['jsonuidata'] = { ...inputData[\"registrationsample\"]['jsonuidata'],\n        externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid\n      };\n    }\n\n    inputData[\"SubSampleDateList\"] = param.dateList;\n    inputData['subsampledateconstraints'] = this.state.subsampledateconstraints;\n    inputData[\"flag\"] = flag === undefined ? 1 : flag;\n    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n    inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\n    inputData[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\n    inputData[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample; // inputData[\"checkBoxOperation\"] = 3;\n\n    inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT;\n    inputData[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\n    inputData[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERS\";\n    inputData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n    inputData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n    let isFileupload = false;\n    const formData = new FormData();\n    this.props.Login.withoutCombocomponent.map(item => {\n      if (item.inputtype === 'files') {\n        if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\n          this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\n            formData.append(\"uploadedFile\" + index, item1);\n            formData.append(\"uniquefilename\" + index, inputData[\"registrationsample\"].uniquefilename);\n            formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\n            formData.append(\"isFileEdited\", transactionStatus.YES);\n            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo)); // formDataValue={...map[\"RegistrationSample\"].formData,formData};\n\n            delete inputData[\"registrationsample\"].uniquefilename;\n            delete inputData[\"registrationsample\"][item && item.label];\n            formData.append('Map', Lims_JSON_stringify(JSON.stringify(inputData)));\n            isFileupload = true;\n          });\n        }\n      }\n    });\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      methodUrl: \"SchedulerConfigSubSample\",\n      displayName: this.props.Login.inputParam.displayName,\n      inputData: inputData,\n      operation: operation,\n      saveType,\n      formRef,\n      action: 'editSubSample',\n      showConfirmAlert: false,\n      resultDataState: this.state.resultDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      testAttachmentDataState: this.state.testAttachmentDataState,\n      formData: formData,\n      isFileupload // dataState:undefined, selectedId\n\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData: this.props.Login.masterData\n          },\n          openModal: true,\n          saveType,\n          parentPopUpSize: \"lg\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      this.props.updateSchedulerConfigSubSample(inputParam, this.props.Login.masterData, \"openModal\");\n    }\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\",\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\",\n        \"dataType\": [option[designProperties.LISTITEM]]\n      };\n    });\n    return temparray;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  updateStore,\n  onSampleTypeChange,\n  onSampleTypeChange,\n  onRegTypeChange,\n  onRegSubTypeChange,\n  getPreviewTemplate,\n  changeApprovalConfigVersionChange,\n  getSchedulerConfigSample,\n  filterTransactionList,\n  getSchedulerConfigSubSampleDetail,\n  getSchedulerTestDetail,\n  ReloadDataSchedulerConfig,\n  getTestChildTabDetailSchedulerConiguration,\n  addsubSampleSchedulerConfiguration,\n  testSectionTest,\n  saveSchedulerSubSample,\n  getEditSchedulerSubSampleComboService,\n  updateSchedulerConfigSubSample,\n  deleteSchedulerSubSample,\n  addMoreSchedulerConfigTest,\n  createSchedulerTest,\n  deleteSchedulerConfigTest,\n  getEditSchedulerConfigComboService,\n  validateEsignforSchedulerConfig,\n  approveSchedulerConfig,\n  deleteSchedulerConfig,\n  updateActiveStatusSchedulerConfig,\n  getSchedulerMasteDetails\n})(injectIntl(SchedulerConfiguration));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/Scheduler/SchedulerConfiguration.jsx"],"names":["React","connect","injectIntl","callService","updateStore","onSampleTypeChange","onRegTypeChange","onRegSubTypeChange","changeApprovalConfigVersionChange","getSchedulerConfigSample","filterTransactionList","getSchedulerConfigSubSampleDetail","getPreviewTemplate","getSchedulerTestDetail","ReloadDataSchedulerConfig","getTestChildTabDetailSchedulerConiguration","addsubSampleSchedulerConfiguration","testSectionTest","saveSchedulerSubSample","getEditSchedulerSubSampleComboService","updateSchedulerConfigSubSample","deleteSchedulerSubSample","addMoreSchedulerConfigTest","createSchedulerTest","deleteSchedulerConfigTest","getEditSchedulerConfigComboService","validateEsignforSchedulerConfig","openModal","approveSchedulerConfig","deleteSchedulerConfig","updateActiveStatusSchedulerConfig","getSchedulerMasteDetails","ListWrapper","BreadcrumbComponent","Button","Card","Col","Row","Nav","SplitterLayout","convertDateValuetoString","rearrangeDateFormat","getControlMap","comboChild","getSameRecordFromTwoArrays","sortDataForDate","childComboClear","ageCalculate","Lims_JSON_stringify","showEsign","TransactionListMasterJsonView","SchedulerConfigurationFilter","DEFAULT_RETURN","faFileInvoice","faEye","faPlus","faTrashAlt","faThumbsUp","faLink","faCommentDots","faChevronRight","faComments","faComment","faPaperclip","faFlask","faMicroscope","faHistory","faArrowRight","faBoxOpen","faBox","faLocationArrow","faFolderOpen","faFolder","faPrint","faFileImport","faCopy","ProductList","FontAwesomeIcon","constructOptionList","ContentPanel","transactionStatus","checkBoxOperation","SideBarTabIndex","SideBarSeqno","designProperties","SampleType","toast","PreRegisterSlideOutModal","PortalModal","CustomSwitch","SampleInfoView","SchedulerParameterTab","SampleGridTab","CustomTabs","AddSubSampleConfiguration","SlideOutModal","Esign","getRegistrationSubSample","ConfirmMessage","AddTestSchedulerConfig","mapStateToProps","state","Login","SchedulerConfiguration","Component","constructor","props","validateEsign","inputParam","inputData","userInfo","sreason","selectedRecord","nreasoncode","value","spredefinedreason","label","password","screenData","onInputOnChange","event","target","name","setState","closeModal","loadEsign","openPortal","loadPreregister","operation","updateInfo","typeName","data","editSchedulerConfiguration","masterData","selectedSample","ntransactionstatus","DRAFT","editablecombo","withoutCombocomponent","Layout","registrationTemplate","jsondata","undefined","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","iseditablereadonly","comboComponents","childColumnList","columnList","val","info","warn","intl","formatMessage","id","approveSchedulerConfiguration","length","APPROVED","RETIRED","userRoleControlRights","nformcode","approveSchedulerSampleParam","ncontrolCode","parentPopUpSize","sampleList","skip","take","searchedSample","list","SchedulerConfigGetSample","slice","addSubSampleList","ConfirmDelete","deleteId","subsampleskip","subsampletake","confirmMessage","confirm","deleteSubSample","ConfirmTestDelete","deleteTest","ConfirmSampleDelete","deleteSample","closeChildModal","loadScheduleSubSample","screenName","loadChildTest","TestCombined","TestPackage","availableTest","Test","editSubSampleScheduler","regSubSamplewithoutCombocomponent","mastertoedit","REJECT","CANCELLED","RELEASED","SubSampleTemplate","regSubSamplecomboComponents","regSubSamplechildColumnList","ncomponentrequired","onSaveChildTestClick","saveType","formRef","subsampleList","searchedSubSample","GetSubSample","SchedulerConfigGetSubSample","selectedSubsample","selectedSubSample","nschedulersubsamplecode","x","join","obj","RealFromDate","RealToDate","RealSampleTypeValue","nsampletypecode","CLINICALTYPE","cTWithoutComboData","cTData","item","dob","filter","gender","ageCal","parseInt","npreregno","ngendercode","testgrouptest","ntestgrouptestcode","RegistrationSample","ntransactionsamplecode","userinfo","nregtypecode","RealRegTypeValue","nregsubtypecode","RealRegSubTypeValue","ntype","nfilterstatus","FilterStatusValue","nschedulersamplecode","sample","directAddTest","FromDate","fromDate","ToDate","toDate","ndesigntemplatemappingcode","RealDesignTemplateMappingValue","nneedtemplatebasedflow","RegSubTypeValue","nneedsubsample","SINGLESELECT","napproveconfversioncode","RealApprovalConfigVersionValue","activeTestTab","activeSampleTab","activeSubSampleTab","ageData","ntestpackagecode","skipmethodvalidity","loadAdhocTest","isParameter","classUrl","methodUrl","responseKeyList","postParamList","controlMap","onSaveSubSampleClick","objSubSample","findSampleAlloSpec","Set","nallottedspeccode","findSampleAlloSpecSampleType","nspecsampletypecode","selectedTestData","selectedTestArray","param","defaulttimezone","specBasedComponent","sampleRegistration","externalorderid","dateList","subsampleCombinationUnique","subsampledateconstraints","nregsubtypeversioncode","age","isFileupload","formData","FormData","forEach","item1","index","append","uniquefilename","YES","JSON","stringify","onComboChange","comboData","fieldName","onTestSectionChange","specBasedComponent1","caseNo","selectSection","selectPackage","Conponent","selectedComponent","availableTestData","TestPakageTest","AllTest","TestSection","onInputOnSubSampleChange","type","checked","onComboSubSampleChange","control","customName","parentList","childComboList","comboName","inputParem","child","source","primarykeyField","valuemember","pkey","nquerybuildertablecode","nameofdefaultcomp","getChildValues","regSubSamplecomboData","childParam","mandatoryList","regSubSample","mandatory","findComponentReqSpec","displayname","slanguagetypecode","addSubSample","controlcode","Map","check","findTransactionStatus","findSampleSpec","findSampleSpectemplate","ntemplatemanipulationcode","regchildColumnList","specBasedTestPackage","valid","some","inputParam1","action","deleteSubSampleSchedulerConfigurationId","onInactiveActive","activeInactiveSchedulerConfigurationId","activeInactiveSchedulerSampleParam","ncontrolcode","addSampleList","DesignTemplateMappingValue","subample","selectedTest","testList","SchedulerConfigGetTest","testskip","testtake","selectedTestList","nschedulertestcode","deleteTestSchedulerConfigurationId","onInputSwitchOnChange","enablePropertyPopup","enableAutoClick","testDataStateChange","resultDataState","dataState","onTabChange","tabProps","tabseqno","tabSequence","TEST","String","activeTabIndex","activeTabId","SUBSAMPLE","subSampleCommentDataState","subSampleAttachmentDataState","getSubSampleChildTabDetail","OrderCodeData","getSampleChildTabDetail","changePropertyViewClose","sideNavDetail","ntransactiontestcode","test","genericLabel","SingleItem","sampleGridDataState","sampleInfoDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","getSchedulerConfigComboService","ScreenName","primaryKeyField","editId","importData","ndesigntemplatemappingcodefilter","mapOfFilterRegData","sampletypecategorybasedflow","ncategorybasedflowrequired","NO","isQualisLite","settings","sregsubtypename","labelname","RegTypeValue","onApprovalConfigVersionChange","onSchedulerConfigTypeChange","closeFilter","Date","fromdate","todate","RealSampleTypeList","SampleTypeValue","RegistrationType","RealRegTypeList","RegistrationSubType","RealRegSubTypeList","FilterStatus","RealFilterStatuslist","DesignTemplateMapping","RealDesignTemplateMappingList","ApprovalConfigVersion","RealApprovalConfigVersionList","RealFilterStatusValue","ApprovalConfigVersionValue","showFilter","inputValues","selectedFilter","onFilterChange","handlePageChange","e","handleTestPageChange","handleSubSamplePageChange","onDesignTemplateChange","openFilter","changePropertyView","status","window","innerWidth","RESULT","onReload","flag","nsampleschedulerconfigtypecode","SchedulerConfigTypeValue","searchSubSampleRef","searchSampleRef","searchTestRef","onFilterSubmit","RealSchedulerConfigTypeValue","RealSchedulerConfigType","SchedulerConfigType","onSaveClick","createRef","splitChangeWidthPercentage","addSchedulerConfigurationId","approveSchedulerConfigurationId","deleteSchedulerConfigurationId","addSubSampleSchedulerConfigurationId","editSubSampleSchedulerConfigurationId","addTestSchedulerConfigurationId","stateSampleType","stateRegistrationType","stateRegistrationSubType","stateSchedulerConfigType","stateFilterStatus","stateApprovalConfigVersion","stateDynamicDesign","filterSampleParam","subSampleGetParam","testGetParam","editSubSampleSchedulerParam","DynamicSampleColumns","sampleSearchFied","subsampleSearchFied","testSearchFied","testMoreField","testListColumns","SubSampleDynamicGridItem","SubSampleDynamicGridMoreField","SubSampleSingleItem","sampleCombinationUnique","DynamicTestColumns","sampleSearchField","filterTestParam","testSearchField","filterSubSampleParam","subsampleSearchField","editSchedulerConfigId","editSchedulerSampleParam","deleteSchedulerSampleParam","breadCrumbData","PrevoiusLoginData","sinstrumentid","render","console","log","regSampleExisted","subSampleList","sregtypename","sschedulerconfigtypename","stransdisplaystatus","testDesign","borderBottom","display","searchedTest","testChildGetParam","ALL","split","setting","indexOf","addTestParam","mainDesign","paneSizeChange","marginTop","DynamicSubSampleColumns","childRefs","ref","childFilteredListName","title","controlname","objectName","hidden","onClick","primaryKeyName","editSubSampleId","filteredListName","clearFilter","searchRef","fetchUrl","fecthInputObject","selectedObject","inputListName","updatedListname","unchangeList","width","propertyPopupWidth","exportTemplateId","importTemplateId","sampleexportfields","subsampleexportfields","siteList","schedulerList","ScheduleMasterDetails","nschedulerconfigtypecode","loadComponent","showSaveContinue","DynamicDesign","parse","lstComponent","timeZoneList","defaultTimeZone","handleDateSubSampleChange","onNumericInputSubSampleChange","onNumericBlurSubSample","onComponentChange","selectedTestPackageData","onTestPackageChange","hideQualisForms","addMasterRecord","editMasterRecord","onDropFileSubSample","deleteAttachmentSubSample","onComboTestPackageChange","componentDidUpdate","previousProps","Object","values","has","get","testAttachmentDataState","registrationTestHistoryDataState","sampleCommentDataState","sampledateconstraints","addedOrderSampleList","samplefilteritem","sampledisplayfields","sampleTypeMap","registrationTypeMap","registrationSubTypeMap","schedulerConfigTypeMap","filterStatusMap","DesignTemplateMappingMap","dynamicColumn","samplelistitem","LABEL","VALUE","unshift","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","subsamplegriditem","subsamplegridmoreitem","subsampledisplayfields","testListFields","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","samplecombinationunique","subsamplecombinationunique","sampleExportFields","subSampleExportFields","sfromdate","stodate","nneedsubsamp","filterStatus","sinstrumentidLabel","isMultiSort","multiSortData","searchFieldList","changeList","getActiveTestURL","childTabsKey","url","initialParam","nflag","displayName","showConfirmAlert","testCommentDataState","temparray","option","LISTITEM"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, updateStore, onSampleTypeChange, onRegTypeChange, onRegSubTypeChange, changeApprovalConfigVersionChange,\r\n    getSchedulerConfigSample, filterTransactionList, getSchedulerConfigSubSampleDetail, getPreviewTemplate,getSchedulerTestDetail,\r\n    ReloadDataSchedulerConfig,getTestChildTabDetailSchedulerConiguration,addsubSampleSchedulerConfiguration,testSectionTest,\r\n    saveSchedulerSubSample,getEditSchedulerSubSampleComboService,updateSchedulerConfigSubSample,deleteSchedulerSubSample,\r\n    addMoreSchedulerConfigTest,createSchedulerTest,deleteSchedulerConfigTest,getEditSchedulerConfigComboService,validateEsignforSchedulerConfig,\r\n    openModal,approveSchedulerConfig,deleteSchedulerConfig,updateActiveStatusSchedulerConfig,getSchedulerMasteDetails\r\n} from '../../actions';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Button, Card, Col, Row ,Nav} from 'react-bootstrap';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport {  convertDateValuetoString, rearrangeDateFormat, getControlMap, comboChild ,getSameRecordFromTwoArrays,\r\n    sortDataForDate,childComboClear,ageCalculate,Lims_JSON_stringify,showEsign\r\n} from '../../components/CommonScript'\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SchedulerConfigurationFilter from './SchedulerConfigurationFilter';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    faFileInvoice, faEye, faPlus, faTrashAlt, faThumbsUp, faLink, faCommentDots, faChevronRight, faComments, faComment, faPaperclip,\r\n    faFlask, faMicroscope, faHistory, faArrowRight, faBoxOpen, faBox, faLocationArrow, faFolderOpen, faFolder, faPrint, faFileImport, faCopy\r\n\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { transactionStatus,checkBoxOperation,SideBarTabIndex,SideBarSeqno,designProperties,SampleType} from '../../components/Enumeration';\r\nimport { toast } from 'react-toastify';\r\nimport PreRegisterSlideOutModal from '../registration/PreRegisterSlideOutModal';\r\nimport PortalModal from '../../PortalModal';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport { ReactComponent as FullviewExpand } from '../../assets/image/fullview-expand.svg';\r\nimport { ReactComponent as FullviewCollapse } from '../../assets/image/fullview-collapse.svg';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SchedulerParameterTab from './SchedulerParameterTab';\r\nimport SampleGridTab from '../registration/SampleGridTab';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport AddSubSampleConfiguration from './AddSubSampleConfiguration';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { getRegistrationSubSample } from './SchedulerValidation';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddTestSchedulerConfig from './AddTestSchedulerConfig';\r\nimport { ReactComponent as ActiveStatusIcon } from '../../assets/image/circle-play-regular.svg';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n// ALPD-4914 created SchedulerConfiguration.jsx file for scheduler configuration screen\r\nclass SchedulerConfiguration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.state = {\r\n            splitChangeWidthPercentage: 28.6,\r\n            enablePropertyPopup: false,\r\n            addSchedulerConfigurationId: -1,\r\n            approveSchedulerConfigurationId:-1,\r\n            deleteSchedulerConfigurationId:-1,\r\n            activeInactiveSchedulerConfigurationId:-1,\r\n            addSubSampleSchedulerConfigurationId:-1,\r\n            editSubSampleSchedulerConfigurationId:-1,\r\n            deleteSubSampleSchedulerConfigurationId:-1,\r\n            deleteTestSchedulerConfigurationId:-1,\r\n            addTestSchedulerConfigurationId:-1,\r\n            stateSampleType: [],\r\n            stateRegistrationType: [],\r\n            stateRegistrationSubType: [],\r\n            stateSchedulerConfigType: [],\r\n            stateFilterStatus: [],\r\n            stateApprovalConfigVersion: [],\r\n            stateDynamicDesign: [],\r\n            userRoleControlRights: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampleskip: 0,\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            filterSampleParam: {},\r\n            selectedRecord: {},\r\n            columnList: [],\r\n            childColumnList: [],\r\n            withoutCombocomponent: [],\r\n            comboComponents: [],\r\n            subSampleGetParam:{},\r\n            testGetParam:{},\r\n            editSubSampleSchedulerParam:{},\r\n            DynamicSampleColumns: [],\r\n            sampleSearchFied: [],\r\n            subsampleSearchFied: [],\r\n            testSearchFied: [],\r\n            testMoreField: [],\r\n            testListColumns: [],\r\n            SubSampleDynamicGridItem: [],\r\n            SubSampleDynamicGridMoreField: [],\r\n            SubSampleSingleItem: [],\r\n            sampleCombinationUnique: [], subsampleCombinationUnique: [],\r\n            DynamicTestColumns: [],\r\n            SingleItem: [],\r\n            DynamicGridItem: [],\r\n            DynamicGridMoreField: [],\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5 \r\n            },\r\n            enableAutoClick: false,\r\n            sampleSearchField:{},\r\n            filterTestParam:{},\r\n            testSearchField:[],\r\n            filterSubSampleParam:{},\r\n            subsampleSearchField: [],\r\n            editSchedulerConfigId:-1,\r\n            editSchedulerSampleParam:{},\r\n            approveSchedulerSampleParam:{},\r\n            deleteSchedulerSampleParam:{},\r\n            activeInactiveSchedulerSampleParam:{}\r\n\r\n\r\n\r\n        };\r\n        this.breadCrumbData = [];\r\n        this.PrevoiusLoginData = undefined;\r\n        this.sinstrumentid=undefined;\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n    }\r\n\r\n    render() {\r\n            let data = [];\r\n           let comboComponents;\r\n            const Layout = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.jsondata\r\n            if (Layout !== undefined) {\r\n                Layout.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                        || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                        data.push(componentrow)\r\n                                    } \r\n                                    return null;\r\n                                })\r\n                                : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                    || component.inputtype === \"frontendsearchfilter\" ?\r\n                                    data.push(component) : \"\"\r\n                        })\r\n                    })\r\n\r\n                })\r\n                 comboComponents = data\r\n            }\r\n               \r\n            \r\n        // let sinstrumentid;\r\n        this.props.Login&& comboComponents&&comboComponents.forEach(item => {\r\n            if (item.name === 'Instrument') {\r\n                this.sinstrumentid = item.label;\r\n            }\r\n        });\r\n\r\n         console.log(\"this.state.subsampletake\", this.state.subsampleskip);\r\n         console.log(\"this.state.subsampletake\", this.state.subsampletake);\r\n\r\n         console.log(\"this.props.Login.masterData.RealRegSubTypeValue\", this.props.Login.masterData.RealRegSubTypeValue);\r\n\r\n        //let sampleList = this.props.Login.masterData.SchedulerConfigGetSample ? this.props.Login.masterData.SchedulerConfigGetSample : [];\r\n        let sampleList = this.props.Login.masterData.SchedulerConfigGetSample ? this.props.Login.regSampleExisted ? sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode') :\r\n        sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode') : [];\r\n        let subSampleList = this.props.Login.masterData.SchedulerConfigGetSubSample ? this.props.Login.masterData.SchedulerConfigGetSubSample : [];\r\n        let testList = this.props.Login.masterData.SchedulerConfigGetTest ? this.props.Login.masterData.SchedulerConfigGetTest : [];\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData && this.props.Login.masterData.RealRegTypeValue\r\n                    && this.props.Login.masterData.RealRegTypeValue.sregtypename\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue\r\n                    && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            },\r\n            {\r\n                \"label\": \"IDS_SCHEDULERCONFIGTYPE\",\r\n                \"value\": this.props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue\r\n                    && this.props.Login.masterData.RealSchedulerConfigTypeValue.sschedulerconfigtypename\r\n            },\r\n            {\r\n                \"label\": \"IDS_STATUS\",\r\n                \"value\": this.props.Login.masterData && this.props.Login.masterData.RealFilterStatusValue\r\n                    && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\r\n            }\r\n        ];\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager' >\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        clickIconGroup={true}\r\n                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                        masterList={this.props.Login.masterData.searchedTest || testList}\r\n                        selectedMaster={this.props.Login.masterData.selectedTest}\r\n                        primaryKeyField=\"nschedulertestcode\"\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetailSchedulerConiguration(event, status); this.changePropertyView(1, event, \"click\") }}\r\n                        inputParam={{\r\n                            ...this.state.testChildGetParam, \r\n                            resultDataState: this.state.resultDataState,\r\n                            // testCommentDataState: this.state.testCommentDataState,\r\n                            // testAttachmentDataState: this.state.testAttachmentDataState,\r\n                            // registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\r\n                            // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n                            // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ?\r\n                            //     this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE ? 1 : 0 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ?\r\n                            //         this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE ? 1 : 0 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 0 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 0 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                        }}\r\n                        selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                            && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        mainField={\"stestsynonym\"}\r\n                        showStatusLink={true}\r\n                        showStatusName={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        selectedListName=\"selectedTest\"\r\n                        searchListName=\"searchedTest\"\r\n                        searchRef={this.searchTestRef}\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"stransdisplaystatus\"\r\n                        showFilter={this.props.Login.showFilter}\r\n                        // openFilter={this.openFilter}\r\n                       closeFilter={this.closeFilter}\r\n                      //onFilterSubmit={this.onFilterSubmit}\r\n                        subFields={this.state.testListColumns||[]}\r\n                        moreField={this.state.testMoreField}\r\n\r\n                        // needMultiValueFilter={true}\r\n                        clearAllFilter={undefined}\r\n                        onMultiFilterClick={undefined}\r\n                        // jsonField={'jsondata'}\r\n                        //jsonDesignFields={true}\r\n                        needMultiSelect={true}\r\n                        showStatusBlink={true}\r\n                        callCloseFunction={true}\r\n                        filterParam={this.state.filterTestParam}\r\n                        subFieldsLabel={true}\r\n                        handlePageChange={this.handleTestPageChange}\r\n                       // buttonCount={5}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        childTabsKey={[\"SchedulerConfigurationParameter\"]}\r\n                        actionIcons={undefined}\r\n                        needFilter={false}\r\n                        commonActions={<>\r\n                        <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                    <Nav.Link name=\"addtest\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                      \r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(this.state.addTestSchedulerConfigurationId) === -1}\r\n                                        onClick={() => this.addMoreSchedulerConfigTest({\r\n                                            ...this.state.addTestParam,\r\n                                            skip: this.state.skip,\r\n                                            take: (this.state.skip + this.state.take)\r\n                                        },\r\n                                            this.state.addTestSchedulerConfigurationId)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                            //title={\"Add Test\"}\r\n                                            //  data-for=\"tooltip-common-wrap\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETETEST\" })}\r\n                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteTestSchedulerConfigurationId) === -1}\r\n                                            // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\r\n                                            onClick={() => this.ConfirmTestDelete(this.state.deleteTestSchedulerConfigurationId, this.state.skip, this.state.take, this.state.subsampleskip, this.state.subsampletake)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                        </Nav.Link>\r\n                                </ProductList>\r\n                        </>}\r\n                        // filterComponent={[]}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>;\r\n\r\n        let mainDesign = \"\";\r\n\r\n        if (this.props.Login.masterData.RealRegSubTypeValue &&\r\n            this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n\r\n                <Card >\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0 sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            cardHead={94}\r\n                            clickIconGroup={true}\r\n                            splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || subSampleList}\r\n                            selectedMaster={this.props.Login.masterData.selectedSubSample}\r\n                            primaryKeyField=\"nschedulersubsamplecode\"\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            getMasterDetail={(event, status) => { this.props.getSchedulerTestDetail(event, status) }}\r\n                            inputParam={{\r\n                                 ...this.state.testGetParam,\r\n                                 searchTestRef: this.searchTestRef,\r\n                                searchSubSampleRef: this.searchSubSampleRef,\r\n                                subsampleskip: this.state.subsampleskip,\r\n                                subsampletake: this.state.subsampletake,\r\n                                testskip: this.state.testskip,\r\n                                testtake: this.state.testtake,\r\n                            }}\r\n                            selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                                && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                            selectionColorField=\"scolorhexcode\"\r\n                            mainField={'ssamplearno'}\r\n                            showStatusLink={true}\r\n                            showStatusName={true}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectedListName=\"selectedSubSample\"\r\n                            searchListName=\"searchedSubSample\"\r\n                            searchRef={this.searchSubSampleRef}\r\n                            objectName=\"subsample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"stransdisplaystatus\"\r\n                            showFilter={this.props.Login.showFilter}\r\n                            needValidation={true}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}                           \r\n\r\n                            // openFilter={this.openFilter}\r\n                            // closeFilter={this.closeFilter}\r\n                            // onFilterSubmit={this.onFilterSubmit}\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            // needMultiValueFilter={true}\r\n                           // clearAllFilter={undefined}\r\n                            //onMultiFilterClick={undefined}\r\n                            // jsonField={'jsondata'}\r\n                            //jsonDesignFields={true}\r\n                            needMultiSelect={true}\r\n                            showStatusBlink={true}\r\n                            callCloseFunction={true}\r\n                            filterParam={{\r\n                                ...this.state.filterSubSampleParam,\r\n                                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                            }}\r\n                            subFieldsLabel={true}\r\n                           handlePageChange={this.handleSubSamplePageChange}\r\n                            skip={this.state.subsampleskip}\r\n                            take={this.state.subsampletake}\r\n                           // pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}                           \r\n                            childTabsKey={[\"SchedulerConfigGetTest\"]}\r\n                            actionIcons={\r\n                                \r\n                                this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample === true ?\r\n                                    [\r\n                                        \r\n                                        {\r\n                                            title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                            controlname: \"faPencilAlt\",\r\n                                            objectName: \"mastertoedit\",\r\n                                            hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleSchedulerConfigurationId) === -1,\r\n                                            onClick: this.editSubSampleScheduler,\r\n                                            inputData: {\r\n                                                primaryKeyName: \"nschedulersubsamplecode\",\r\n                                                operation: \"update\",\r\n                                                masterData: this.props.Login.masterData,\r\n                                                userInfo: this.props.Login.userInfo,\r\n                                                searchTestRef:this.searchTestRef,\r\n                                                ncontrolCode:this.state.editSubSampleSchedulerConfigurationId,\r\n                                                editSubSampleSchedulerParam: { ...this.state.editSubSampleSchedulerParam, ncontrolCode: this.state.editSubSampleId }\r\n                                            },\r\n                                        }\r\n                                        \r\n                                      \r\n\r\n                                    ]\r\n                                    :\r\n                                    [\r\n                                        {\r\n                                            title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                            controlname: \"faPencilAlt\",\r\n                                            objectName: \"mastertoedit\",\r\n                                            hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleId) === -1,\r\n                                            onClick: this.editSubSampleScheduler,\r\n                                            inputData: {\r\n                                                primaryKeyName: \"ntransactionsamplecode\",\r\n                                                operation: \"update\",\r\n                                                masterData: this.props.Login.masterData,\r\n                                                userInfo: this.props.Login.userInfo,\r\n                                                searchTestRef:this.searchTestRef,\r\n                                                ncontrolCode:this.state.editSubSampleSchedulerConfigurationId,\r\n                                                editSubSampleSchedulerParam: { ...this.state.editSubSampleSchedulerParam, ncontrolCode: this.state.editSubSampleId }\r\n                                            },\r\n                                        }\r\n                                      \r\n\r\n\r\n                                    ]\r\n                            }\r\n                            needFilter={false}\r\n                            commonActions={<>\r\n                                                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                            //title={\"Add Test\"}\r\n                                            //  data-for=\"tooltip-common-wrap\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLE\" })}\r\n                                            hidden={this.state.userRoleControlRights.indexOf(this.state.addSubSampleSchedulerConfigurationId) === -1}\r\n                                            // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\r\n                                            onClick={() => this.addSubSample(this.state.addSubSampleSchedulerConfigurationId, this.state.skip, this.state.take)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Nav.Link>\r\n\r\n                                        <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                            //title={\"Add Test\"}\r\n                                            //  data-for=\"tooltip-common-wrap\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETESUBSAMPLE\" })}\r\n                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteSubSampleSchedulerConfigurationId) === -1}\r\n                                            // onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\r\n                                            onClick={() => this.ConfirmDelete(this.state.deleteSubSampleSchedulerConfigurationId, this.state.skip, this.state.take, this.state.subsampleskip, this.state.subsampletake)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                        </Nav.Link>\r\n                                                                </ProductList>\r\n                            </>}\r\n                        // filterComponent={[]}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>;\r\n        } else {\r\n            mainDesign = testDesign;\r\n        }\r\n        \r\n       \r\n    \r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"nschedulersamplecode\",\r\n                fetchUrl: \"schedulerconfiguration/getSchedulerConfigSubSample\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam, \r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    // resultDataState: this.state.resultDataState,\r\n                    // testCommentDataState: this.state.testCommentDataState,\r\n                    // testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    // sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"selectedSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"nschedulersubsamplecode\",\r\n                fetchUrl: \"schedulerconfiguration/getSchedulerConfigTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam, \r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    // resultDataState: this.state.resultDataState,\r\n                    // testCommentDataState: this.state.testCommentDataState,\r\n                    // testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    // sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedSubSample\",\r\n                inputListName: \"selectedSubSample\",\r\n                updatedListname: \"SchedulerConfigGetSubSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"SchedulerConfigGetTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"nschedulertestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    // resultDataState: this.state.resultDataState\r\n                },\r\n                selectedObject: \"selectedTest\",\r\n                inputListName: \"selectedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                 <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}> \r\n                                <SplitterLayout borderColor=\"#999\"\r\n                                    primaryIndex={1} percentage={true}\r\n                                    secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                    // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                    primaryMinSize={30}\r\n                                    secondaryMinSize={20}\r\n                                >\r\n                                    <div className='toolbar-top-inner'>\r\n                                        <TransactionListMasterJsonView\r\n                                            listMasterShowIcon={1}\r\n                                            clickIconGroup={true}\r\n                                            splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                            masterList={this.props.Login.masterData.searchedSample || sampleList}\r\n                                            selectedMaster={this.props.Login.masterData.selectedSample}\r\n                                            primaryKeyField=\"nschedulersamplecode\"\r\n                                            filterColumnData={this.props.filterTransactionList}\r\n                                            getMasterDetail={this.props.getSchedulerConfigSubSampleDetail}\r\n                                            inputParam={{\r\n                                               \r\n                                                ...this.state.subSampleGetParam,\r\n                                                searchTestRef: this.searchTestRef,\r\n                                                searchSubSampleRef: this.searchSubSampleRef,\r\n                                                testskip: this.state.testskip,\r\n                                                subsampleskip: this.state.subsampleskip,\r\n                                                 resultDataState: this.state.resultDataState,\r\n                                                 activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                                            }}\r\n                                            selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                            selectionColorField=\"scolorhexcode\"\r\n                                            mainField={this.sinstrumentid}\r\n                                            showStatusLink={true}\r\n                                            showStatusName={true}\r\n                                            statusFieldName=\"stransdisplaystatus\"\r\n                                            statusField=\"ntransactionstatus\"\r\n                                            //ALPD-4941--Added by vignesh R(07-02-2025)-->this prop is passed to TransactionListMaster to display the second status color.\r\n                                           //start\r\n                                            secondaryFieldname=\"nactivestaus\"\r\n                                            secondaryField=\"sactiveststaus\"\r\n                                            statusColor=\"ssecondcolorhexcode\"\r\n                                            //end\r\n                                            selectedListName=\"selectedSample\"\r\n                                            searchListName=\"searchedSample\"\r\n                                            searchRef={this.searchSampleRef}\r\n                                            objectName=\"sample\"\r\n                                            listName=\"IDS_SAMPLE\"\r\n                                            selectionField=\"ntransactionstatus\"\r\n                                            selectionFieldName=\"stransdisplaystatus\"\r\n                                            showFilter={this.props.Login.showFilter}\r\n                                            openFilter={this.openFilter}\r\n                                            closeFilter={this.closeFilter}\r\n                                            onFilterSubmit={this.onFilterSubmit}\r\n                                            subFields={this.state.DynamicSampleColumns}\r\n                                            //needMultiValueFilter={true}\r\n                                            clearAllFilter={undefined}\r\n                                            onMultiFilterClick={undefined}\r\n                                           \r\n                                            needMultiSelect={false}\r\n                                            showStatusBlink={true}\r\n                                            callCloseFunction={true}\r\n                                            filterParam={{\r\n                                                ...this.state.filterSampleParam,\r\n                                                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                            }}\r\n                                            subFieldsLabel={true}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            skip={this.state.skip}\r\n                                            take={this.state.take}\r\n                                            childTabsKey={[\"SchedulerConfigGetTest\",\"SchedulerConfigGetSubSample\",]}\r\n                                            actionIcons={\r\n                                                [\r\n                                                  \r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                        controlname: \"faPencilAlt\",\r\n                                                        objectName: \"mastertoedit\",\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.editSchedulerConfigId) === -1,\r\n                                                        onClick: this.editSchedulerConfiguration,\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"nschedulersamplecode\",\r\n                                                            operation: \"update\",\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            editSchedulerSampleParam: {\r\n                                                                ...this.state.editSchedulerSampleParam,\r\n                                                                ncontrolCode: this.state.editSchedulerConfigId,\r\n                                                                nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample //=== true ? transactionStatus.YES:transactionStatus.NO\r\n                                                            }\r\n                                                        },\r\n                                                    },\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.approveSchedulerConfigurationId) === -1,\r\n                                                        objectName: \"mastertoapprove\",\r\n                                                        onClick: this.approveSchedulerConfiguration,\r\n                                                        controlname: \"faThumbsUp\",\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"nschedulersamplecode\",\r\n                                                            operation: \"approve\",\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            approveSchedulerSampleParam: {\r\n                                                                ...this.state.approveSchedulerSampleParam,\r\n                                                                ncontrolCode: this.state.approveSchedulerConfigurationId,\r\n                                                                nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\r\n                                                            }\r\n                                                        },\r\n                                                    },\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.deleteSchedulerConfigurationId) === -1,\r\n                                                        objectName: \"mastertodelete\",\r\n                                                        onClick: this.ConfirmSampleDelete,\r\n                                                        controlname: \"faTrashAlt\",\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"nschedulersamplecode\",                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            deleteSchedulerSampleParam: {\r\n                                                                ...this.state.deleteSchedulerSampleParam,\r\n                                                                ncontrolCode: this.state.deleteSchedulerConfigurationId,\r\n                                                                nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\r\n                                                            }\r\n                                                        },\r\n                                                    },\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_INACTIVEACTIVE\" }),\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.activeInactiveSchedulerConfigurationId) === -1,\r\n                                                        objectName: \"mastertoupdateactivestatus\",\r\n                                                        onClick: this.onInactiveActive,\r\n                                                        controlname: \"faActiveStatus\",\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"nschedulersamplecode\",\r\n                                                            operation: \"updateactive\",\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            activeInactiveSchedulerSampleParam: {\r\n                                                                ...this.state.activeInactiveSchedulerSampleParam,\r\n                                                                ncontrolCode: this.state.activeInactiveSchedulerConfigurationId ,\r\n                                                                nneedsubsample: this.props.Login.masterData && this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\r\n                                                            }\r\n                                                        },\r\n                                                    }\r\n                                                ]}\r\n                                               \r\n                                                   \r\n\r\n                                                  \r\n\r\n                                            \r\n                                            needFilter={true}\r\n                                            commonActions={\r\n                                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\" role=\"button\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.addSchedulerConfigurationId) === -1}\r\n                                                            onClick={() => this.getSchedulerConfigComboService(\"SchedulerConfig\", \"create\", \"nschedulersamplecode\",\r\n                                                                this.props.Login.masterData, this.props.Login.userInfo, this.state.addSchedulerConfigurationId, false, true, true)}>\r\n                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                        </Button>\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                            //   data-for=\"tooltip-common-wrap\"\r\n\r\n                                                            onClick={() => this.onReload()} >\r\n                                                            <RefreshIcon className='custom_icons' />\r\n                                                        </Button>\r\n                                                        {/*<Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            //   data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteSchedulerConfigurationId) === -1}\r\n\r\n                                                            onClick={() => this.ConfirmSampleDelete(this.state.deleteSchedulerConfigurationId, this.state.skip, this.state.take)}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Button>*/}\r\n                                                          {/*  <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_INACTIVEACTIVE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.activeInactiveSchedulerConfigurationId) === -1}\r\n\r\n                                                            //   data-for=\"tooltip-common-wrap\"\r\n                                                            onClick={() => this.onInactiveActive(this.state.activeInactiveSchedulerConfigurationId, this.state.skip, this.state.take)}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Button>*/}\r\n                                                </ProductList>\r\n                                            }\r\n                                            filterComponent={[\r\n                                                {\r\n                                                    \"Scheduler Configuration Filter\": <SchedulerConfigurationFilter\r\n                                                        SampleType={this.state.stateSampleType || []}\r\n                                                        RegistrationType={this.state.stateRegistrationType || []}\r\n                                                        RegistrationSubType={this.state.stateRegistrationSubType || []}\r\n                                                        SchedulerConfigType={this.state.stateSchedulerConfigType || []}\r\n                                                        FilterStatus={this.state.stateFilterStatus || []}\r\n                                                        ApprovalConfigVersion={this.state.stateApprovalConfigVersion || {}}\r\n                                                        DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                        userInfo={this.props.Login.userInfo || {}}\r\n                                                        SampleTypeValue={this.props.Login.masterData.SampleTypeValue || {}}\r\n                                                        RegTypeValue={this.props.Login.masterData.RegTypeValue || {}}\r\n                                                        RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || {}}\r\n                                                        SchedulerConfigTypeValue={this.props.Login.masterData.SchedulerConfigTypeValue || {}}\r\n                                                        FilterStatusValue={this.props.Login.masterData.FilterStatusValue || {}}\r\n                                                        ApprovalConfigVersionValue={this.props.Login.masterData.ApprovalConfigVersionValue || {}}\r\n                                                        DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                        onSampleTypeChange={this.onSampleTypeChange}\r\n                                                        onRegTypeChange={this.onRegTypeChange}\r\n                                                        onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                        onSchedulerConfigTypeChange={this.onSchedulerConfigTypeChange}\r\n                                                        onFilterChange={this.onFilterChange}\r\n                                                        onApprovalConfigVersionChange={this.onApprovalConfigVersionChange}\r\n                                                        onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                    />\r\n                                                }\r\n                                            ]}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div style={\r\n                                            // this.state.showTest === true || this.state.showSubSample === true ?\r\n                                            { display: \"block\" }\r\n                                            // : \r\n                                            // { display: \"none\" }\r\n                                        } >\r\n                                            {mainDesign}\r\n                                        </div>\r\n                                    </div>\r\n                                </SplitterLayout>\r\n                                 </div> \r\n                                 <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        \r\n                                        <div className={` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\", 0) : \"\"}\r\n                                        </div>\r\n                                        {/* {this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && */}\r\n                                        <div className={` vertical-tab-content-grid sm-view-v-t position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <FullviewExpand width=\"20\" height=\"20\" className=\"custom_icons\" /> :\r\n                                                    <FullviewCollapse width=\"24\" height=\"24\" className=\"custom_icons\" />\r\n                                                }   \r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex === 1 ? this.sideNavDetail(\"IDS_PARAMETERS\") : \"\"}\r\n                                        </div>\r\n                                        {/* } */}\r\n                                      \r\n                                   \r\n            \r\n                                     \r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex === 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                         \r\n                                            {/* {this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex === 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1)}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                                    //   data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* } */}\r\n                                        \r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {\r\n                    this.props.Login.openPortal ?\r\n                        <PortalModal>\r\n                            <PreRegisterSlideOutModal\r\n                                postParamList={this.postParamList}\r\n                                PrevoiusLoginData={this.PrevoiusLoginData}\r\n                                closeModal={this.closeModal}\r\n                                operation={\"create\"}\r\n                                screenName={\"IDS_REGISTRATION\"}\r\n                                onSaveClick={this.onSaveClick}\r\n                                validateEsign={this.validateEsign}\r\n                                updateStore={this.props.updateStore}\r\n                                comboComponents={this.state.comboComponents}\r\n                                withoutCombocomponent={this.state.withoutCombocomponent}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                fromDate={this.fromDate}\r\n                                toDate={this.toDate}\r\n                                samplecombinationunique={this.state.sampleCombinationUnique}\r\n                                subsamplecombinationunique={this.state.subsampleCombinationUnique}\r\n                                exportTemplateId={this.state.exportTemplateId}\r\n                                importTemplateId={this.state.importTemplateId}\r\n                                sampleexportfields={this.state.sampleexportfields}\r\n                                subsampleexportfields={this.state.subsampleexportfields}\r\n                                siteList={this.props.Login.siteList ||[]}\r\n                                schedulerList={this.props.Login.schedulerList ||[]}\r\n                                scheduleMasterDetails={this.props.Login.masterData.ScheduleMasterDetails ||[]}                                \r\n                                nschedulerconfigtypecode={this.props.Login.masterData.RealSchedulerConfigTypeValue&&this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode || -1}                                   \r\n                                nschedulerconfigtypecode={this.props.Login.masterData.RealSchedulerConfigTypeValue&&this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode || -1}                                   \r\n\r\n                                //  specBasedComponent={this.state.specBasedComponent}\r\n                                mandatoryFields={[\r\n                                    { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                    { \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n                            />\r\n                        </PortalModal>\r\n                        : \"\"\r\n                }\r\n\r\n{\r\n                    (this.props.Login.openModal) &&\r\n                    <SlideOutModal show={this.props.Login.openModal }\r\n                        //|| this.props.Login.loadEsign}\r\n                        closeModal={\r\n                          \r\n                                this.props.Login.loadScheduleSubSample||this.props.Login.loadChildTest\r\n                                ? this.closeChildModal\r\n                                    : this.closeModal}\r\n                        hideSave={ false}\r\n                        size={this.props.Login.parentPopUpSize}\r\n                        loginoperation={false}\r\n                        buttonLabel={ undefined}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={ this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        innerPopup={this.props.Login.loadComponent}\r\n                        onSaveClick={this.props.Login.loadScheduleSubSample ?   this.onSaveSubSampleClick :this.props.Login.loadChildTest ? this.onSaveChildTestClick: this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        showSaveContinue={this.props.Login.showSaveContinue}\r\n                        selectedRecord={this.state.selectedRecord}\r\n                        mandatoryFields={\r\n                             this.mandatoryList(this.props.Login.loadScheduleSubSample)}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.loadScheduleSubSample ?\r\n                                                <AddSubSampleConfiguration\r\n                                                    editfield={this.props.Login.masterData.DynamicDesign && JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)}\r\n                                                    Component={this.props.Login.lstComponent || []}\r\n                                                    selectComponent={this.state.selectedRecord}\r\n                                                    templateData={this.props.Login.masterData.SubSampleTemplate &&\r\n                                                        this.props.Login.masterData.SubSampleTemplate.jsondata}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                                    defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                    handleDateChange={this.handleDateSubSampleChange}\r\n                                                    onInputOnChange={this.onInputOnSubSampleChange}\r\n                                                    onNumericInputChange={this.onNumericInputSubSampleChange}\r\n                                                    onNumericBlur={this.onNumericBlurSubSample}\r\n                                                    comboData={this.props.Login.regSubSamplecomboData}\r\n                                                    onComboChange={this.onComboSubSampleChange}\r\n                                                    onComponentChange={this.onComponentChange}\r\n                                                    TestCombined={this.props.Login.TestCombined || []}\r\n                                                    TestChange={this.onComboChange}\r\n                                                    selectedTestData={this.state.selectedRecord}\r\n                                                    selectedTestPackageData={this.state.selectedTestPackageData}\r\n                                                    childoperation={this.props.Login.operation}\r\n                                                    specBasedComponent={this.props.Login.specBasedComponent}\r\n                                                    userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                    selectPackage={this.state.selectedRecord}\r\n                                                    TestPackage={this.props.Login.TestPackage || []}\r\n                                                    onTestPackageChange={this.onTestPackageChange}\r\n                                                    operation={this.props.Login.operation}\r\n                                                    hideQualisForms={this.props.Login.hideQualisForms}\r\n                                                    addMasterRecord={this.addMasterRecord}\r\n                                                    editMasterRecord={this.editMasterRecord}\r\n                                                    hasTest={true}\r\n                                                    onDropFile={this.onDropFileSubSample}\r\n                                                    deleteAttachment={this.deleteAttachmentSubSample}\r\n                                                    onTestSectionChange={this.onTestSectionChange}\r\n                                                    TestSection={this.props.Login.TestSection || []}\r\n                                                    selectSection={this.state.selectedRecord}\r\n\r\n                                                />\r\n                                               :this.props.Login.loadChildTest ?\r\n                                               <AddTestSchedulerConfig\r\n                                                   TestCombined={this.props.Login.TestCombined}\r\n                                                   selectedTestData={this.state.selectedRecord}\r\n                                                   TestChange={this.onComboChange}\r\n                                                   TestPackageChange={this.onComboTestPackageChange}\r\n                                                   userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                   selectPackage={this.state.selectedRecord}\r\n                                                   selectSection={this.state.selectedRecord}\r\n                                                   TestPackage={this.props.Login.TestPackage || []}\r\n                                                   TestSection={this.props.Login.TestSection || []}\r\n                                                   onTestPackageChange={this.onTestPackageChange}\r\n                                                   onTestSectionChange={this.onTestSectionChange}\r\n                                                   hideQualisForms={this.props.Login.hideQualisForms}\r\n                                                   />\r\n                                                 : \"\"\r\n                            //  End of ALPD-4130 Additional Filter Component -ATE-241\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.columnList !== previousProps.Login.columnList) {\r\n\r\n            this.setState({\r\n                columnList: this.props.Login.columnList,\r\n                childColumnList: this.props.Login.childColumnList,\r\n                withoutCombocomponent: this.props.Login.withoutCombocomponent,\r\n                comboComponents: this.props.Login.comboComponents\r\n            });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            const addSchedulerConfigurationId = controlMap.has(\"AddSchedulerConfiguration\") ? controlMap.get(\"AddSchedulerConfiguration\").ncontrolcode : -1;\r\n            const addSubSampleSchedulerConfigurationId = controlMap.has(\"AddSubSampleSchedulerConfiguration\") ? controlMap.get(\"AddSubSampleSchedulerConfiguration\").ncontrolcode : -1;\r\n            const editSubSampleSchedulerConfigurationId = controlMap.has(\"EditSubSampleSchedulerConfiguration\") ? controlMap.get(\"EditSubSampleSchedulerConfiguration\").ncontrolcode : -1;\r\n            const deleteSubSampleSchedulerConfigurationId = controlMap.has(\"DeleteSubSampleSchedulerConfiguration\") ? controlMap.get(\"DeleteSubSampleSchedulerConfiguration\").ncontrolcode : -1;\r\n            const addTestSchedulerConfigurationId = controlMap.has(\"AddTestSchedulerConfiguration\") ? controlMap.get(\"AddTestSchedulerConfiguration\").ncontrolcode : -1;\r\n            const deleteTestSchedulerConfigurationId = controlMap.has(\"DeleteTestSchedulerConfiguration\") ? controlMap.get(\"DeleteTestSchedulerConfiguration\").ncontrolcode : -1;\r\n            const editSchedulerConfigId = controlMap.has(\"EditSchedulerConfiguration\") ? controlMap.get(\"EditSchedulerConfiguration\").ncontrolcode : -1;\r\n            const approveSchedulerConfigurationId = controlMap.has(\"ApproveSchedulerConfiguration\") ? controlMap.get(\"ApproveSchedulerConfiguration\").ncontrolcode : -1;\r\n            const deleteSchedulerConfigurationId = controlMap.has(\"DeleteSchedulerConfiguration\") ? controlMap.get(\"DeleteSchedulerConfiguration\").ncontrolcode : -1;\r\n            const activeInactiveSchedulerConfigurationId = controlMap.has(\"ActiveInActiveSchedulerConfiguration\") ? controlMap.get(\"ActiveInActiveSchedulerConfiguration\").ncontrolcode : -1;\r\n\r\n            this.setState({\r\n                activeInactiveSchedulerConfigurationId,deleteSchedulerConfigurationId,approveSchedulerConfigurationId,editSchedulerConfigId,deleteTestSchedulerConfigurationId,addTestSchedulerConfigurationId,deleteSubSampleSchedulerConfigurationId,userRoleControlRights, controlMap, addSchedulerConfigurationId,addSubSampleSchedulerConfigurationId,editSubSampleSchedulerConfigurationId\r\n            });\r\n\r\n        }\r\n        let activeTabIndex = this.state.activeTabIndex || undefined;\r\n        let activeTabId = this.state.activeTabId || undefined;\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex || this.props.Login.masterData !== previousProps.Login.masterData) {\r\n             let { skip, take, testskip, testtake, subsampleskip, subsampletake,DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicGridMoreField, SingleItem, testMoreField, testListColumns,\r\n                SubSampleDynamicGridItem, SubSampleDynamicGridMoreField, SubSampleSingleItem, sampleSearchField, subsampleSearchField,\r\n                testSearchField, testAttachmentDataState, registrationTestHistoryDataState, sampleCommentDataState,\r\n                sampledateconstraints, subsampledateconstraints, activeTabIndex,\r\n                activeTabId, sampleCombinationUnique, subsampleCombinationUnique,\r\n                addedOrderSampleList, sampleexportfields, subsampleexportfields, samplefilteritem, sampledisplayfields} = this.state\r\n\r\n            let stateSampleType = this.state.stateSampleType;\r\n            let stateRegistrationType = this.state.stateRegistrationType;\r\n            let stateRegistrationSubType = this.state.stateRegistrationSubType;\r\n            let stateSchedulerConfigType = this.state.stateSchedulerConfigType;\r\n            let stateFilterStatus = this.state.stateFilterStatus;\r\n            let stateApprovalConfigVersion = this.state.stateApprovalConfigVersion;\r\n            let stateDynamicDesign = this.state.stateDynamicDesign;\r\n\r\n\r\n            if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n                activeTabIndex = this.props.Login.activeTabIndex;\r\n                activeTabId = this.props.Login.activeTabId;\r\n            }\r\n            if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\r\n                const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                    \"ssampletypename\", \"nsorter\", \"ascending\", false);\r\n                stateSampleType = sampleTypeMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.RegistrationType !== previousProps.Login.masterData.RegistrationType) {\r\n                const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                    \"sregtypename\", \"nsorter\", \"ascending\", false);\r\n                stateRegistrationType = registrationTypeMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n                const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", \"nsorter\", \"ascending\", false);\r\n                stateRegistrationSubType = registrationSubTypeMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.SchedulerConfigType !== previousProps.Login.masterData.SchedulerConfigType) {\r\n                const schedulerConfigTypeMap = constructOptionList(this.props.Login.masterData.SchedulerConfigType || [], \"nschedulerconfigtypecode\",\r\n                    \"sschedulerconfigtypename\", \"nschedulerconfigtypecode\", \"ascending\", false);\r\n                stateSchedulerConfigType = schedulerConfigTypeMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.FilterStatus !== previousProps.Login.masterData.FilterStatus) {\r\n                const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\",\r\n                    \"stransdisplaystatus\", \"ntransactionstatus\", \"ascending\", false);\r\n                stateFilterStatus = filterStatusMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.ApprovalConfigVersion !== previousProps.Login.masterData.ApprovalConfigVersion) {\r\n                const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napproveconfversioncode\",\r\n                    \"sversionname\", undefined, undefined, false);\r\n                stateApprovalConfigVersion = DesignTemplateMappingMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n                const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                    \"sregtemplatename\", undefined, undefined, false);\r\n                stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n            }\r\n            const subSampleGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n              \r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedsubsample\r\n            }\r\n            if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n                DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n                DynamicSampleColumns.push({\r\n                    [designProperties.LABEL]: { 'en-US': 'Scheduler' }, [designProperties.VALUE]: 'SchedulerMaster' }\r\n                );\r\n                DynamicSampleColumns = DynamicSampleColumns.filter(item => item[designProperties.VALUE] !== this.sinstrumentid);\r\n                if(this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode==2){\r\n                    DynamicSampleColumns.unshift({ [designProperties.LABEL]: { 'en-US': 'Site' },[designProperties.VALUE]: 'SchedulerSite' });\r\n\r\n                }\r\n                DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n                DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n                DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n                SingleItem= SingleItem.filter(item => item[2] !== 'sarno'&&item[2] !== 'dregdate');\r\n                \r\n\r\n                SingleItem.push({\r\n                    [designProperties.LABEL]: { 'en-US': 'Scheduler' }, [designProperties.VALUE]: 'SchedulerMaster' }\r\n                );\r\n                if(this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode==2){\r\n                    SingleItem.unshift({ [designProperties.LABEL]: { 'en-US': 'Site' }, [designProperties.VALUE]: 'SchedulerSite' });\r\n\r\n                }\r\n                \r\n                SubSampleDynamicGridItem = dynamicColumn.subsamplegriditem ? dynamicColumn.subsamplegriditem : [];\r\n                SubSampleDynamicGridMoreField = dynamicColumn.subsamplegridmoreitem ? dynamicColumn.subsamplegridmoreitem : [];\r\n                SubSampleSingleItem = dynamicColumn.subsampledisplayfields ? dynamicColumn.subsampledisplayfields : [];\r\n                testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n                testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n                testListColumns=testListColumns.filter(item=>item[designProperties.VALUE]!=='ssamplearno'&&item[designProperties.VALUE]!=='sarno'&&item[designProperties.VALUE]!=='AnalyserName');\r\n                sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n                subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n                testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n                sampledateconstraints = dynamicColumn.sampledateconstraints || [];\r\n                subsampledateconstraints = dynamicColumn.subsampledateconstraints || [];\r\n                sampleCombinationUnique = dynamicColumn.samplecombinationunique || [];\r\n                subsampleCombinationUnique = dynamicColumn.subsamplecombinationunique || [];\r\n                sampleexportfields = dynamicColumn.sampleExportFields || [];\r\n                subsampleexportfields = dynamicColumn.subSampleExportFields || [];\r\n                samplefilteritem = dynamicColumn.samplefilteritem || [];\r\n                sampledisplayfields = dynamicColumn.sampledisplayfields || [];\r\n\r\n\r\n\r\n            }\r\n\r\n            const editSchedulerSampleParam = {\r\n                nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                // ncontrolCode: this.state.editSampleId,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue &&\r\n                    this.props.Login.masterData.RegSubTypeValue.nneedsubsample, \r\n               \r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT\r\n\r\n            }\r\n\r\n            const deleteSchedulerSampleParam={\r\n                //nschedulersamplecode:addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\"),\r\n                userinfo: this.props.Login.userInfo,\r\n                nneedsubsamp:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                ndesigntemplatemappingcode :this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode||-1,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode ||-1,\r\n                nregsubtypeversioncode:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\r\n                nfilterstatus:this.props.Login.masterData?.RealFilterStatusValue?.ntransactionstatus === 0\r\n                ? this.props.Login.masterData?.FilterStatus?.map(item => item.ntransactionstatus).join(\",\")\r\n                : this.props.Login.masterData?.FilterStatusValue?.ntransactionstatus || -1,\r\n                nsampleschedulerconfigtypecode:this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n            }\r\n\r\n            const activeInactiveSchedulerSampleParam={\r\n                userinfo: this.props.Login.userInfo,\r\n                nneedsubsamp:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                ndesigntemplatemappingcode :this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode||-1,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode ||-1,\r\n                nregsubtypeversioncode:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\r\n                nfilterstatus:this.props.Login.masterData?.RealFilterStatusValue?.ntransactionstatus === 0\r\n                ? this.props.Login.masterData?.FilterStatus?.map(item => item.ntransactionstatus).join(\",\")\r\n                : this.props.Login.masterData?.FilterStatusValue?.ntransactionstatus || -1,\r\n                nsampleschedulerconfigtypecode:this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n                \r\n           \r\n            }\r\n\r\n            const approveSchedulerSampleParam = {\r\n               // nfilterstatus: this.props.Login.masterData && this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus&& this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\r\n               nfilterstatus:this.props.Login.masterData?.RealFilterStatusValue?.ntransactionstatus === 0\r\n    ? this.props.Login.masterData?.FilterStatus?.map(item => item.ntransactionstatus).join(\",\")\r\n    : this.props.Login.masterData?.FilterStatusValue?.ntransactionstatus || -1,\r\n\r\n               filterStatus:this.props.Login.masterData.FilterStatus&&this.props.Login.masterData.FilterStatus,\r\n               userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue &&\r\n                    this.props.Login.masterData.RegSubTypeValue.nneedsubsample, \r\n                nregsubtypeversioncode:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\r\n                nsampleschedulerconfigtypecode: this.   props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue\r\n                    && this.props.Login.masterData.RealSchedulerConfigTypeValue.nsampleschedulerconfigtypecode,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                sinstrumentidLabel:this.sinstrumentid,\r\n// ALPD-5332 Added by Abdul for Material Scheduler\r\n                nschedulerconfigtypecode: this.props.Login.masterData && this.props.Login.masterData.RealSchedulerConfigTypeValue\r\n                && this.props.Login.masterData.RealSchedulerConfigTypeValue.nschedulerconfigtypecode,\r\n                \r\n       // ALPD-5332 End        \r\n //sinstrumentid:this.props.Login.masterData.selectedSample[0][this.sinstrumentid]\r\n\r\n\r\n            }\r\n\r\n            const testGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nschedulersamplecode: this.props.Login.masterData.selectedSample &&\r\n                    this.props.Login.masterData.selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                //searchTestRef: this.searchTestRef,\r\n                // testskip: testskip,\r\n                //subsampleskip: subsampleskip,\r\n                // resultDataState: resultDataState,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                //activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n            }\r\n\r\n                 const editSubSampleSchedulerParam = {\r\n                    nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    sfromdate: this.props.Login.masterData.RealFromDate,\r\n                    stodate: this.props.Login.masterData.RealToDate,\r\n                   // ncontrolCode: this.state.editSampleId,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n    \r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                    activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                    activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                }\r\n\r\n            const testChildGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n               // activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                //activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nschedulersamplecode: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\r\n                nschedulersubsamplecode: this.props.Login.masterData.selectedSubSample &&\r\n                    this.props.Login.masterData.selectedSubSample.map(sample => sample.nschedulersubsamplecode).join(\",\"),\r\n                nschedulertestcode: this.props.Login.masterData.selectedTest &&\r\n                    this.props.Login.masterData.selectedTest.map(sample => sample.nschedulertestcode).join(\",\"),\r\n             \r\n              \r\n                ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                    && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n\r\n            }\r\n\r\n            const addTestParam = {\r\n                selectedSample: this.props.Login.masterData.selectedSample,\r\n                selectedSubSample: this.props.Login.masterData.selectedSubSample,\r\n                // skip: skip, take: (skip + take),\r\n                userinfo: this.props.Login.userInfo,\r\n                sampleList: this.props.Login.masterData.SchedulerConfigGetSample,\r\n                subsampleList: this.props.Login.masterData.SchedulerConfigGetSubSample,\r\n                nspecsampletypecode: this.props.Login.masterData.selectedSubSample &&\r\n                    [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n            };\r\n            const filterSubSampleParam = {\r\n                inputListName: \"SchedulerConfigGetSubSample\",\r\n                selectedObject: \"selectedSubSample\",\r\n                primaryKeyField: \"nschedulersubsamplecode\",\r\n                fetchUrl: \"schedulerconfiguration/getSchedulerConfigTest\",\r\n\r\n                skip: this.state.skip,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: 0,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n\r\n                isMultiSort: true,\r\n                multiSortData: [{ pkey: 'nschedulertestcode', list: 'SchedulerConfigGetTest' }],\r\n                //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n                fecthInputObject: {\r\n                    \r\n                    masterData: this.props.Login.masterData,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                    nschedulersamplecode: this.props.Login.masterData.selectedSample &&\r\n                        this.props.Login.masterData.selectedSample.map(x => x.nschedulersamplecode).join(\",\")\r\n\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: subsampleSearchField,\r\n                changeList: [\r\n                    \"SchedulerConfigGetTest\", \"SchedulerConfigurationParameter\",\r\n                  \r\n                    \"selectedSubSample\", \"selectedTest\"\r\n                ]\r\n            };\r\n            const filterTestParam = {\r\n                inputListName: \"SchedulerConfigGetTest\",\r\n                selectedObject: \"selectedTest\",\r\n\r\n                primaryKeyField: \"nschedulertestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                skip: this.state.skip,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: this.state.subsampleskip,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n\r\n                fecthInputObject: {\r\n                    nschedulertestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.nschedulertestcode).join(\",\") : \"-1\",\r\n                   \r\n                   \r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                    // checkBoxOperation: 3,\r\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\"\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: testSearchField,\r\n                changeList: [\"SchedulerConfigurationParameter\"],\r\n                childTabsKey: [\"SchedulerConfigurationParameter\"]\r\n\r\n            }\r\n\r\n            const filterSampleParam = {\r\n                inputListName: \"SchedulerConfigGetSample\",\r\n                selectedObject: \"selectedSample\",\r\n                primaryKeyField: \"nschedulersamplecode\",\r\n                fetchUrl: \"schedulerconfiguration/getSchedulerConfigSubSample\",\r\n\r\n                // isSortable: true,\r\n                // sortValue: 'ntransactionsamplecode',\r\n                // sortList: ['RegistrationGetSubSample'],\r\n                isMultiSort: true,\r\n                multiSortData: [{ pkey: 'nschedulersubsamplecode', list: 'SchedulerConfigGetSubSample' },\r\n                { pkey:'nschedulertestcode', list: 'SchedulerConfigGetTest' }],\r\n\r\n                //ALPD-1518\r\n                skip: 0,\r\n                take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n                subsampleskip: 0,\r\n                subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n                testskip: 0,\r\n                testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 5,\r\n\r\n                //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n                fecthInputObject: {\r\n                    //nflag: 2,\r\n                    // ntype: 2,\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                        && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n                    nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                        && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n                    // checkBoxOperation: 3,\r\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n\r\n\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: sampleSearchField,\r\n                changeList: [\r\n                    \"SchedulerConfigGetSubSample\", \"SchedulerConfigGetTest\",\r\n                    \"selectedSample\", \"selectedSubSample\",\r\n                    \"selectedTest\", \"SchedulerConfigurationParameter\"\r\n                ]\r\n            };\r\n\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n            this.setState({\r\n                activeInactiveSchedulerSampleParam, deleteSchedulerSampleParam,approveSchedulerSampleParam, editSchedulerSampleParam,addTestParam,editSubSampleSchedulerParam,testGetParam, subSampleGetParam,stateSampleType, stateRegistrationType, stateRegistrationSubType, stateSchedulerConfigType, stateFilterStatus, stateApprovalConfigVersion, stateDynamicDesign,\r\n                 skip, take, testskip,sampleSearchField,filterSampleParam,filterTestParam,testSearchField,subsampleSearchField,filterSubSampleParam,\r\n                subsampleskip, subsampletake,testtake,DynamicSampleColumns,testListColumns,testMoreField,DynamicSubSampleColumns,SingleItem,activeTabIndex,activeTabId,DynamicGridMoreField,DynamicGridItem,testChildGetParam\r\n            });\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignforSchedulerConfig(inputParam, \"openModal\");\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n       \r\n            selectedRecord[event.target.name] = event.target.value;\r\n        \r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n       let openModal=this.props.Login.openModal;\r\n       let loadPreregister = this.props.Login.loadPreregister;\r\n\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\r\n                loadEsign = false;\r\n                openPortal = false;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, openPortal }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if((this.props.Login.screenData&&this.props.Login.screenData.inputParam&&this.props.Login.screenData.inputParam.operation===\"approve\")\r\n                ||this.props.Login.screenData&&this.props.Login.screenData.inputParam&&this.props.Login.screenData.inputParam.operation===\"deleteSample\"\r\n            ||(this.props.Login.screenData&&this.props.Login.screenData.inputParam&&this.props.Login.screenData.inputParam.operation===\"activeInactive\")){\r\n                loadEsign = false;\r\n                openModal=false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n                selectedRecord['esignreason'] = '';\r\n\r\n             \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign, openModal, selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo); \r\n            }\r\n         \r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n                selectedRecord['esignreason'] = '';\r\n\r\n             \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign, openPortal, selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            openPortal = false;\r\n            selectedRecord = {};\r\n            loadPreregister=false;\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openPortal,selectedRecord,loadPreregister\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    editSchedulerConfiguration = (inputParam) => {\r\n if(this.props.Login.masterData.selectedSample[0].ntransactionstatus===transactionStatus.DRAFT){\r\n\r\n        let data = [];\r\n        let editablecombo = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.registrationTemplate\r\n            && this.props.Login.masterData.registrationTemplate.jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    data.push(componentrow)\r\n                                } else {\r\n                                    withoutCombocomponent.push(componentrow)\r\n                                }\r\n                                if (componentrow.inputtype === \"combo\" && componentrow.iseditablereadonly && componentrow.iseditablereadonly === true) {\r\n                                    editablecombo.push(componentrow)\r\n                                }\r\n\r\n                                return null;\r\n                            })\r\n                        } else {\r\n                            if (component.inputtype === \"combo\" && component.iseditablereadonly && component.iseditablereadonly === true) {\r\n                                editablecombo.push(component);\r\n                            }\r\n                            else if (component.inputtype === \"combo\") {\r\n                                data.push(component);\r\n                            } else {\r\n                                withoutCombocomponent.push(component);\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data\r\n            let childColumnList = {};\r\n            data.map(columnList => {\r\n                const val = comboChild(data, columnList, childColumnList, true);\r\n                data = val.data;\r\n                childColumnList = val.childColumnList\r\n                return null;\r\n            })\r\n            // data.push(...comboComponents);\r\n\r\n            this.props.getEditSchedulerConfigComboService(inputParam,\r\n                data, this.state.selectedRecord, childColumnList,\r\n                comboComponents, withoutCombocomponent, editablecombo)\r\n        } else {\r\n            toast.info(\"Configure the preregister template for this registrationtype\")\r\n        }\r\n    }else{\r\n\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_DRAFTTOEDITSAMPLE\" }))\r\n\r\n    }\r\n\r\n    }\r\n    approveSchedulerConfiguration = (inputParam) => {\r\n        \r\n     \r\n            if(this.props.Login.masterData.selectedSample.length>0){\r\n                if((this.props.Login.masterData.selectedSample[0].ntransactionstatus!==transactionStatus.APPROVED)&&(this.props.Login.masterData.selectedSample[0].ntransactionstatus!==transactionStatus.RETIRED)){\r\n \r\n                  \r\n      /* if(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT ){            \r\n                let nschedulersamplecodeberfore = inputParam.masterData.SchedulerConfigGetSample\r\n                .filter(item => {\r\n                    return item[this.sinstrumentid] === inputParam.masterData.selectedSample[0][this.sinstrumentid] &&\r\n                        item.ntransactionstatus === transactionStatus.APPROVED;\r\n                })\r\n                .map(item => item.nschedulersamplecode) \r\n                .join(\",\"); \r\n                    inputParam={...inputParam,approveSchedulerSampleParam:{\r\n                        \r\n                        ...inputParam.approveSchedulerSampleParam,\r\n                        \"nschedulersamplecodeberfore\":nschedulersamplecodeberfore\r\n                        \r\n                    },\r\n                action:\"approveSample\",\r\n                inputData:{\r\n                    \"userinfo\":this.props.Login.userInfo,\r\n                }\r\n                }\r\n            }*/\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.approveSchedulerSampleParam.ncontrolCode)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                                openModal:true,\r\n                                 parentPopUpSize: \"lg\",\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else{\r\n\r\n                this.props.approveSchedulerConfig(inputParam,this.props.Login.masterData)\r\n                    }    \r\n            }else{\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }))\r\n\r\n                }\r\n\r\n            }\r\n         else {\r\n            toast.info(\"Configure the preregister template for this registrationtype\")\r\n        }\r\n\r\n    }\r\n    getActiveTestURL() {\r\n\r\n        let url = \"schedulerconfiguration/getSchedulerConfigParameter\"\r\n\r\n        return url;\r\n    }\r\n\r\n    addMoreSchedulerConfigTest = (inputParam, ncontrolCode) => {\r\n        if(this.props.Login.masterData.selectedSample.length>0){\r\n        \r\n        if(this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample[0].ntransactionstatus===transactionStatus.DRAFT){\r\n        let sampleList = [];\r\n        const skip = this.state.skip;\r\n        const take = this.state.take;\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample &&this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n        }\r\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n\r\n        if (addSubSampleList && addSubSampleList.length > 0) {\r\n\r\n            inputParam[\"sampleList\"] = sampleList;\r\n            this.props.addMoreSchedulerConfigTest(inputParam, ncontrolCode);\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDTEST\" }));\r\n        }\r\n    }\r\n    else {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_DRAFTTOADDTEST\" }));\r\n    }\r\n}else{\r\n    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n\r\n}\r\n    }\r\n\r\n    ConfirmDelete = (deleteId,skip, take, subsampleskip, subsampletake) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteSubSample(deleteId,skip,take,subsampleskip,subsampletake));\r\n    }\r\n\r\n    ConfirmTestDelete = (deleteId,skip, take, subsampleskip, subsampletake) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteTest(deleteId,skip,take,subsampleskip,subsampletake));\r\n    }\r\n    ConfirmSampleDelete = (inputParam) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteSample(inputParam));\r\n    }\r\n    updateSchedulerConfigSubSample(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n          \r\n            nflag: 2,\r\n            ntype: 5,\r\n            nschedulersamplecode: String(this.state.selectedRecord.nschedulersamplecode),\r\n            nschedulersubsamplecode: String(this.state.selectedRecord.nschedulersubsamplecode),\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n            // checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n\r\n\r\n            // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            // activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        // inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\r\n        //inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n        const param = getRegistrationSubSample(\r\n            this.state.selectedRecord,\r\n            this.props.Login.masterData.SubSampleTemplate.jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaulttimezone, false, this.props.Login.specBasedComponent,\r\n            undefined, operation);\r\n\r\n        inputData[\"schedulersample\"] = param.sampleRegistration\r\n\r\n        if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n            inputData[\"registrationsample\"]['jsondata'] = { ...inputData[\"registrationsample\"]['jsondata'], externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid }\r\n            inputData[\"registrationsample\"]['jsonuidata'] = { ...inputData[\"registrationsample\"]['jsonuidata'], externalorderid: this.state.selectedRecord && this.state.selectedRecord.externalorderid }\r\n        }\r\n        inputData[\"SubSampleDateList\"] = param.dateList\r\n        inputData['subsampledateconstraints'] = this.state.subsampledateconstraints;\r\n        inputData[\"flag\"] = flag === undefined ? 1 : flag;\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n            && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n            && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\r\n        inputData[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n            && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n        inputData[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n            && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n        // inputData[\"checkBoxOperation\"] = 3;\r\n        inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT;\r\n        inputData[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\r\n        inputData[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERS\";\r\n        inputData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        inputData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n\r\n        let isFileupload = false;\r\n        const formData = new FormData();\r\n        this.props.Login.withoutCombocomponent.map((item) => {\r\n            if (item.inputtype === 'files') {\r\n                if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\r\n                    this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\r\n                        formData.append(\"uploadedFile\" + index, item1);\r\n                        formData.append(\"uniquefilename\" + index, inputData[\"registrationsample\"].uniquefilename);\r\n                        formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\r\n                        formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                        // formDataValue={...map[\"RegistrationSample\"].formData,formData};\r\n                        delete (inputData[\"registrationsample\"].uniquefilename);\r\n                        delete (inputData[\"registrationsample\"][item && item.label]);\r\n                        formData.append('Map', Lims_JSON_stringify(JSON.stringify(inputData)));\r\n                        isFileupload = true;\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"SchedulerConfigSubSample\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'editSubSample',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            testAttachmentDataState: this.state.testAttachmentDataState, formData: formData, isFileupload\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal:true,\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.updateSchedulerConfigSubSample(inputParam,\r\n                this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    closeChildModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let loadScheduleSubSample = this.props.Login.loadScheduleSubSample;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let screenName = this.props.Login.screenName;\r\n        let loadChildTest = this.props.Login.loadChildTest;\r\n        let TestCombined = [];\r\n        let TestPackage = [];\r\n        let availableTest = [];\r\n        let Test = this.props.Login.Test || [];\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n            selectedRecord['esignreason'] = '';\r\n        }\r\n\r\n         if (this.props.Login.loadScheduleSubSample) {\r\n            loadScheduleSubSample = false;\r\n            openModal = false;\r\n            selectedRecord = {}\r\n        }   else if (this.props.Login.loadChildTest) {\r\n            loadChildTest = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            TestCombined = [];\r\n            TestPackage = [];\r\n            availableTest = [];\r\n            Test = [];\r\n\r\n        }\r\n      \r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadScheduleSubSample, screenName, \r\n                openModal,\r\n                selectedRecord,\r\n                loadEsign,\r\n                loadChildTest,\r\n                TestCombined,\r\n                TestPackage,\r\n                availableTest ,\r\n                Test\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    editSubSampleScheduler = (inputParam) => {\r\n        let data = [];\r\n        const regSubSamplewithoutCombocomponent = []\r\n        if ((inputParam.mastertoedit.ntransactionstatus === transactionStatus.REJECT) ||\r\n            (inputParam.mastertoedit.ntransactionstatus === transactionStatus.CANCELLED) ||\r\n            (inputParam.mastertoedit.ntransactionstatus === transactionStatus.RELEASED)) {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSUBSAMPLE\" }));\r\n        } else {\r\n            const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n            if (Layout !== undefined) {\r\n                Layout.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\") {\r\n                                        data.push(componentrow)\r\n                                    } else {\r\n                                        regSubSamplewithoutCombocomponent.push(componentrow)\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.inputtype === \"combo\" ?\r\n                                    data.push(component) : regSubSamplewithoutCombocomponent.push(component)\r\n                        })\r\n                    })\r\n                })\r\n                const regSubSamplecomboComponents = data\r\n                let regSubSamplechildColumnList = {};\r\n                data.map(columnList => {\r\n                    const val = comboChild(data, columnList, regSubSamplechildColumnList, true);\r\n                    data = val.data;\r\n                    regSubSamplechildColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n\r\n\r\n                const sampleList = getSameRecordFromTwoArrays(inputParam.masterData.selectedSample, [inputParam.mastertoedit], \"npreregno\")\r\n\r\n                this.props.getEditSchedulerSubSampleComboService(inputParam,\r\n                    data, this.state.selectedRecord, regSubSamplechildColumnList,\r\n                    regSubSamplecomboComponents, regSubSamplewithoutCombocomponent,\r\n                    sampleList[0].ncomponentrequired === 3 ? true : false)\r\n            } else {\r\n                toast.info(\"Configure the sub sample template for this registrationtype\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onSaveChildTestClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        //console.log(\"test1:\", this.props.Login.masterData);\r\n\r\n        let sampleList = [];\r\n        const skip = this.state.skip;\r\n        const take = this.state.take;\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n        }\r\n        const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, sampleList, \"nschedulersamplecode\");\r\n\r\n\r\n        let subsampleList = [];\r\n        const subsampleskip = this.state.subsampleskip;\r\n        const subsampletake = this.state.subsampletake;\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample\r\n                : this.props.Login.masterData.GetSubSample;\r\n\r\n            subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\r\n        } else {\r\n            subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample && this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\r\n        }\r\n        const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, subsampleList, \"nschedulersamplecode\");\r\n\r\n\r\n        //const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, masterData.RegistrationGetSubSample.slice(this.state.subsampleskip, (this.state.subsampleskip + this.state.subsampletake)), \"npreregno\");\r\n        //const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\r\n        ////  selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\r\n\r\n\r\n        const nschedulersubsamplecode = selectedSubsample.map(x => x.nschedulersubsamplecode).join(\",\");\r\n        let data = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate,\r\n            this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n\r\n        if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n\r\n            const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\r\n            const cTWithoutComboData = []\r\n            let cTData = [];\r\n\r\n\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ?\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    cTData.push(componentrow)\r\n                                } else {\r\n                                    cTWithoutComboData.push(componentrow)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            : component.inputtype === \"combo\" ?\r\n                                cTData.push(component) : cTWithoutComboData.push(component)\r\n                    })\r\n                })\r\n\r\n            })\r\n            selectedSample.map(item => {\r\n                let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\")\r\n                let gender = cTData.filter(x => x.name === \"Gender\")\r\n                const ageCal = parseInt(ageCalculate(item[dob[0].label], true));\r\n                data.push({ \"npreregno\": parseInt(item.npreregno), \"nage\": ageCal, \"ngendercode\": item.ngendercode })\r\n            }\r\n            )\r\n\r\n        }\r\n        const inputData = {\r\n            testgrouptest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\r\n            RegistrationSample: selectedSubsample.map(x => x.ntransactionsamplecode),\r\n            nschedulersubsamplecode: nschedulersubsamplecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nregtypecode: masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nsampletypecode: masterData.RealSampleTypeValue.nsampletypecode,\r\n            ntype: 3,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            nschedulersamplecode: selectedSample &&\r\n            selectedSample.map(sample => sample.nschedulersamplecode).join(\",\"),\r\n            directAddTest:true,\r\n            // ntransactionsamplecode: selectedSubsample &&\r\n            // selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            FromDate: obj.fromDate,\r\n            ToDate: obj.toDate,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n            //  checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            ageData: data,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            ntestpackagecode: this.state.selectedRecord['ntestpackagecode'] && this.state.selectedRecord['ntestpackagecode'],\r\n            skipmethodvalidity: false,\r\n            loadAdhocTest: false,\r\n            isParameter:true\r\n\r\n        }\r\n\r\n\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"schedulerconfiguration\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Test\",\r\n            responseKeyList: [\r\n                { \"responseKey\": \"selectedSample\", \"masterDataKey\": \"SchedulerConfigGetSample\", \"primaryKey\": \"npreregno\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedSubSample\", \"masterDataKey\": \"SchedulerConfigGetSubSample\", \"primaryKey\": \"ntransactionsamplecode\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedTest\", \"masterDataKey\": \"SchedulerConfigGetSubSample\", \"primaryKey\": \"ntransactiontestcode\", \"dataAction\": \"add\" }],\r\n            saveType, formRef,\r\n            postParamList: this.postParamList,\r\n\r\n        }\r\n        if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.createSchedulerTest(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveSubSampleClick = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        if (operation === 'create') {\r\n            let objSubSample = this.state.selectedRecord;\r\n            const userInfo = this.props.Login.userInfo;\r\n\r\n            //   let saveSubSample = {};\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                //sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n                const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                    : sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode');\r\n\r\n                sampleList = list ? list.slice(this.state.skip, this.state.skip + this.state.take) : [];\r\n            } else {\r\n                sampleList = this.props.Login.masterData.SchedulerConfigGetSample && sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate', 'nschedulersamplecode').slice(this.state.skip, this.state.skip + this.state.take);\r\n            }\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.selectedSample, sampleList, 'nschedulersamplecode')\r\n\r\n            const findSampleAlloSpec = [...new Set(sampleList.map(item => item.nallottedspeccode))];\r\n            const findSampleAlloSpecSampleType = [...new Set(sampleList.map(item => item.nspecsampletypecode))];\r\n\r\n            let selectedTestData = objSubSample[\"ntestgrouptestcode\"];\r\n            const selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n\r\n            \r\n            const map = {}\r\n            const param = getRegistrationSubSample(\r\n                objSubSample,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata,\r\n                this.props.Login.userInfo, this.props.Login.defaulttimezone, false,\r\n                this.props.Login.specBasedComponent, operation);\r\n\r\n            map[\"SchedulerConfigurationSample\"] = param.sampleRegistration\r\n            if (this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n                map[\"SchedulerConfigurationSample\"]['jsondata'] = { ...map[\"SchedulerConfigurationSample\"]['jsondata'], externalorderid: sampleList[0]['Order'] }\r\n                map[\"SchedulerConfigurationSample\"]['jsonuidata'] = { ...map[\"SchedulerConfigurationSample\"]['jsonuidata'], externalorderid: sampleList[0]['Order'] }\r\n            }\r\n            map[\"subsampleDateList\"] = param.dateList\r\n            map[\"SchedulerConfigurationSample\"][\"nallottedspeccode\"] = findSampleAlloSpec[0] ? findSampleAlloSpec[0] : -1;\r\n            map[\"SchedulerConfigurationSample\"][\"nspecsampletypecode\"] = findSampleAlloSpecSampleType[0] ? findSampleAlloSpecSampleType[0] : -1;\r\n\r\n            map[\"subsamplecombinationunique\"] = this.state.subsampleCombinationUnique;\r\n            map['subsampledateconstraints'] = this.state.subsampledateconstraints;\r\n            map['testgrouptest'] = selectedTestArray\r\n            map['nschedulersamplecode'] = sampleList.map(item => item.nschedulersamplecode).join(\",\")\r\n            map['userinfo'] = userInfo;\r\n            map['checkBoxOperation'] = checkBoxOperation.SINGLESELECT;\r\n            map['ntype'] = 3;\r\n            map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            map[\"napproveconfversioncode\"] = this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode;\r\n            map[\"nregsubtypeversioncode\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\r\n\r\n            map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n            map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n      \r\n\r\n            map[\"masterData\"] = this.props.Login.masterData;\r\n            map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERS\";\r\n            map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n            map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n            map[\"specBasedComponent\"] = this.props.Login.specBasedComponent;\r\n            map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n          \r\n            map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n\r\n            map[\"isParameter\"] = true;\r\n\r\n            if (this.props.Login.masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n                map[\"order\"] = sampleList[0][\"OrderIdData\"]\r\n                const Layout = this.props.Login.masterData.registrationTemplate.jsondata;\r\n                const cTWithoutComboData = []\r\n                let cTData = [];\r\n\r\n\r\n                Layout.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\") {\r\n                                        cTData.push(componentrow)\r\n                                    } else {\r\n                                        cTWithoutComboData.push(componentrow)\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.inputtype === \"combo\" ?\r\n                                    cTData.push(component) : cTWithoutComboData.push(component)\r\n                        })\r\n                    })\r\n\r\n                })\r\n                let data = []\r\n                sampleList.map(item => {\r\n                    let dob = cTWithoutComboData.filter(x => x.name === \"Date Of Birth\");\r\n                    let gender = cTData.filter(x => x.name === \"Gender\");\r\n                    const age = parseInt(ageCalculate(rearrangeDateFormat(this.props.Login.userInfo, item[dob[0].label]), true));\r\n                    data.push({ \"npreregno\": parseInt(item.npreregno), \"nage\": age, \"ngendercode\": item.ngendercode });\r\n                    map[\"ageData\"] = data;\r\n                }\r\n                )\r\n\r\n                map[\"skipmethodvalidity\"] = false;\r\n\r\n\r\n            }\r\n            let isFileupload = false;\r\n            const formData = new FormData();\r\n            this.props.Login.regSubSamplewithoutCombocomponent.map((item) => {\r\n                if (item.inputtype === 'files') {\r\n                    if (typeof objSubSample[item && item.label] === \"object\") {\r\n                        objSubSample[item && item.label] && objSubSample[item && item.label].forEach((item1, index) => {\r\n                            formData.append(\"uploadedFile\" + index, item1);\r\n                            formData.append(\"uniquefilename\" + index, map[\"RegistrationSample\"].uniquefilename);\r\n                            formData.append(\"filecount\", objSubSample[item && item.label].length);\r\n                            formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                            delete (map[\"RegistrationSample\"].uniquefilename);\r\n                            delete (map[\"RegistrationSample\"][item && item.label]);\r\n                            formData.append('Map', Lims_JSON_stringify(JSON.stringify(map)));\r\n                            isFileupload = true;\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\r\n            const inputParam = {\r\n                inputData: map,\r\n                postParamList: this.postParamList,\r\n                formData: formData, isFileupload\r\n            }\r\n\r\n            this.props.saveSchedulerSubSample(inputParam);\r\n        } else {\r\n            this.updateSchedulerConfigSubSample(saveType, formRef, operation);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n       \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n      \r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n       \r\n    }\r\n    onTestSectionChange = (comboData, fieldName, nneedsubsample, specBasedComponent1, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectSection = this.state.selectSection || {};\r\n        const selectPackage = [];\r\n        selectPackage['ntestpackagecode'] = this.state.selectedRecord.ntestpackagecode;\r\n        if (comboData !== null) {\r\n            selectSection[fieldName] = comboData;\r\n            selectSection[\"ssectionname\"] = comboData.label;\r\n            selectSection[\"nspecsampletypecode\"] = parseInt(this.state.selectedRecord.nspecsampletypecode);\r\n            //commented by sonia on 5th August 2024 for JIRA ID: ALPD-4543\r\n            //selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample[0].nallottedspeccode;\r\n            //Added by sonia on 5th August 2024 for JIRA ID: ALPD-4543\r\n            selectedRecord[\"nallottedspeccode\"] = this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nallottedspeccode;\r\n\r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"ssectionname\"] = comboData.label;\r\n            const specBasedComponent = specBasedComponent1;\r\n            selectedRecord[\"nspecsampletypecode\"] = this.state.selectedRecord.nspecsampletypecode && this.state.selectedRecord.nspecsampletypecode !== undefined ? this.state.selectedRecord.nspecsampletypecode :\r\n                parseInt(this.props.Login.masterData.selectedSubSample &&\r\n                    [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"));\r\n            // selectedRecord[\"nspecsampletypecode\"] = parseInt(this.props.Login.masterData.selectedSubSample &&\r\n            //     [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\"));\r\n\r\n            this.props.testSectionTest(selectedRecord, true, this.props.Login.specBasedComponent === undefined ? specBasedComponent : this.props.Login.specBasedComponent,\r\n                this.props.Login.Conponent, this.props.Login.selectedComponent, this.props.Login.selectedComponent,\r\n                this.props.Login, selectPackage, selectSection, true, selectedRecord.nspecsampletypecode,\r\n                this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample\r\n            );\r\n\r\n        }\r\n        else {\r\n            let availableTestData = [];\r\n            if (selectedRecord[\"nsectioncode\"]) {\r\n                delete selectedRecord[\"nsectioncode\"];\r\n                delete selectedRecord[\"ntestgrouptestcode\"];\r\n\r\n                availableTestData = selectPackage['ntestpackagecode'] ? this.props.Login.TestPakageTest || [] : this.props.Login.AllTest || []\r\n            }\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, availableTest: this.props.Login.AllTest, TestCombined: availableTestData, TestSection: this.props.Login.TestSection || [] }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onInputOnSubSampleChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboSubSampleChange = (comboData, fieldName) => {\r\n        // if (comboData !== null) {\r\n        \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n      \r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord  });\r\n        \r\n    }\r\n    onComboSubSampleChange = (comboData, control, customName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            let parentList = []\r\n            let childComboList = []\r\n            let childColumnList = {}\r\n\r\n            let comboName = customName || control.label;\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData ? comboData.value : -1,\r\n                // item: comboData ? comboData.item : \"\",\r\n                item: comboData ? { ...comboData.item, pkey: control.valuemember, nquerybuildertablecode: control.nquerybuildertablecode, \"source\": control.source } : \"\",\r\n                label: comboName,\r\n                nameofdefaultcomp: control.name\r\n            }\r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], pkey: control.valuemember,\r\n                nquerybuildertablecode: control.nquerybuildertablecode, \"source\": control.source\r\n            };\r\n            if (comboData) {\r\n                selectedRecord[comboName] = comboData;\r\n            } else {\r\n                selectedRecord[comboName] = []\r\n            }\r\n            if (control.child && control.child.length > 0) {\r\n                childComboList = getSameRecordFromTwoArrays(this.state.regSubSamplecomboComponents,\r\n                    control.child, \"label\")\r\n                childColumnList = {};\r\n                childComboList.map(columnList => {\r\n                    const val = comboChild(this.state.regSubSamplecomboComponents,\r\n                        columnList, childColumnList, false);\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n\r\n                parentList = getSameRecordFromTwoArrays(this.state.regSubSamplewithoutCombocomponent,\r\n                    control.child, \"label\")\r\n\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectedRecord, this.props.Login.regSubSamplecomboData,\r\n                    childComboList, childColumnList, this.state.regSubSamplewithoutCombocomponent,\r\n                    [...childComboList, ...parentList])\r\n            } else {\r\n                this.setState({ selectedRecord })\r\n            }\r\n        } else {\r\n            let regSubSamplecomboData = this.props.Login.regSubSamplecomboData\r\n            selectedRecord[control.label] = \"\";\r\n\r\n            const inputParam = {\r\n                control, comboComponents: this.state.regSubSamplecomboData,\r\n                withoutCombocomponent: this.state.regSubSamplewithoutCombocomponent, selectedRecord: selectedRecord, comboData: regSubSamplecomboData\r\n            }\r\n            const childParam = childComboClear(inputParam)\r\n            selectedRecord = childParam.selectedRecord\r\n            regSubSamplecomboData = childParam.comboData\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, regSubSamplecomboData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    mandatoryList = ( regSubSample) => {\r\n        let mandatory = [];\r\n         if (regSubSample) {\r\n\r\n            let sampleList = [];\r\n            const skip = this.state.skip\r\n            const take = this.state.take\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                //sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n                const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                    : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n                sampleList = list ? list.slice(skip, skip + take) : [];\r\n            } else {\r\n                sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n            }\r\n\r\n            let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n            const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\r\n            if (findComponentReqSpec[0] === 3) {\r\n                mandatory = [{ \"idsName\": \"IDS_COMPONENT\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }]\r\n            }\r\n\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        mandatory.push({ \"mandatory\": true, \"idsName\": componentrow.displayname[this.props.Login.userInfo.slanguagetypecode], \"dataField\": componentrow.label, \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" })\r\n\r\n                                    }\r\n                                    return mandatory;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                    mandatory.push({ \"mandatory\": true, \"idsName\": component.displayname[this.props.Login.userInfo.slanguagetypecode], \"dataField\": component.label, \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" }) : \"\"\r\n\r\n                        })\r\n                    })\r\n                })\r\n          \r\n        }\r\n       \r\n        return mandatory;\r\n    }\r\n    addSubSample = (controlcode, skip, take) => {\r\nif(this.props.Login.masterData.selectedSample.length>0){\r\n        if(this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample[0].ntransactionstatus===transactionStatus.DRAFT){\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && sortDataForDate(this.props.Login.masterData.SchedulerConfigGetSample, 'dtransactiondate',\"nschedulersamplecode\").slice(skip, skip + take);\r\n        }\r\n\r\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n\r\n        const nsampletypecode = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n        let check = true;\r\n        if (nsampletypecode === SampleType.CLINICALTYPE && addSubSampleList.length > 1) {\r\n            check = false\r\n        }\r\n        \r\n            const findTransactionStatus = [...new Set(addSubSampleList.map(item => item.ntransactionstatus))];\r\n\r\n           // if (findTransactionStatus.length === 1) {\r\n                // if (findTransactionStatus.indexOf(transactionStatus.REJECT) === -1\r\n                //     && findTransactionStatus.indexOf(transactionStatus.CANCELLED) === -1\r\n                //     && findTransactionStatus.indexOf(transactionStatus.RELEASED) === -1) {\r\n                    // if (findTransactionStatus[0] === transactionStatus.PREREGISTER) {\r\n                    //   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\r\n                    //   if (findApprovalVersion.length === 1) {\r\n                    const findSampleSpec = [...new Set(addSubSampleList.map(item => item.nallottedspeccode))];\r\n                    //const findComponentReqSpec = [...new Set(addSubSampleList.map(item => item.ncomponentrequired))];\r\n                    const findSampleSpectemplate = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))];\r\n                    //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                    //if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                   // {\r\n                        const findComponentReqSpec = addSubSampleList[0].ncomponentrequired;\r\n                        let data = [];\r\n                        const regSubSamplewithoutCombocomponent = [];\r\n                        const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                            && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n                        if (Layout !== undefined) {\r\n                            Layout.map(row => {\r\n                                return row.children.map(column => {\r\n                                    return column.children.map(component => {\r\n                                        return component.hasOwnProperty(\"children\") ?\r\n                                            component.children.map(componentrow => {\r\n                                                if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                                    || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                                    data.push(componentrow)\r\n                                                } else {\r\n                                                    regSubSamplewithoutCombocomponent.push(componentrow)\r\n                                                }\r\n                                                return null;\r\n                                            })\r\n                                            : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                                || component.inputtype === \"frontendsearchfilter\" ? data.push(component) :\r\n                                                regSubSamplewithoutCombocomponent.push(component)\r\n                                    })\r\n                                })\r\n\r\n                            })\r\n                            const regSubSamplecomboComponents = data\r\n                            let regchildColumnList = {};\r\n                            data.map(columnList => {\r\n                                const val = comboChild(data, columnList, regchildColumnList, true);\r\n                                data = val.data;\r\n                                regchildColumnList = val.childColumnList\r\n                                return null;\r\n                            })\r\n                            Map[\"nallottedspeccode\"] = findSampleSpec[0];\r\n                            Map[\"ntemplatemanipulationcode\"] = findSampleSpectemplate[0];\r\n                            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                            Map[\"nneedsubsample\"] = this.props.Login.masterData.RegSubTypeValue\r\n                                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n                            Map[\"nschedulersamplecode\"] = addSubSampleList &&\r\n                                addSubSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\r\n                            Map[\"schedulersubsample\"] = addSubSampleList;\r\n                            // console.log(\"spec jsx main:\", findComponentReqSpec,findSampleSpec[0] );\r\n                            this.props.addsubSampleSchedulerConfiguration(this.props.Login.masterData,\r\n                                this.props.Login.userInfo, data, this.state.selectedRecord,\r\n                                regchildColumnList, regSubSamplecomboComponents,\r\n                                regSubSamplewithoutCombocomponent,\r\n                                Map, controlcode, findComponentReqSpec === 3 ? true : false, this.state.specBasedTestPackage)\r\n                        } else {\r\n                            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\" }));\r\n                        }\r\n                    }else{\r\n                        toast.info(this.props.intl.formatMessage({ id: \"IDS_DRAFTTOADDSUBSAMPLE\" }));\r\n\r\n                    }\r\n                   // } \r\n                }\r\n                // }\r\n                 else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLES\" }));\r\n                 }\r\n          //  }\r\n            \r\n       \r\n    }\r\n    deleteSample=(inputParam) => {\r\n\r\n        if(this.props.Login.masterData.selectedSample!==undefined ){\r\n            let valid=false;\r\n             valid = this.props.Login.masterData&&this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.some(item => item.ntransactionstatus !== transactionStatus.DRAFT);\r\n\r\n            if(!valid){\r\n      /*  let Map = {};\r\n        let sampleList = [];\r\n        let subsampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n        }\r\n        \r\n        \r\n        let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n        Map[\"nschedulersamplecode\"]=addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\r\n        Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n        Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n        Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n        Map[\"nregsubtypeversioncode\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\r\n        Map[\"nfilterstatus\"]= this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n        Map[\"nsampleschedulerconfigtypecode\"]=this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n        */\r\n        let inputParam1={\r\n        action:\"deleteSample\",\r\n        operation:\"deleteSample\",\r\n        Map:inputParam,\r\n        inputData:{\r\n            \"userinfo\":this.props.Login.userInfo,\r\n        },\r\n        ncontrolCode:this.state.deleteSubSampleSchedulerConfigurationId\r\n       };\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam:inputParam1,masterData:this.props.Login.masterData },\r\n                    openModal:true\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else{\r\n\r\n        this.props.deleteSchedulerConfig(inputParam,this.props.Login.masterData);\r\n        }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_DRAFTTODELETESAMPLE\" }));\r\n\r\n    }\r\n}else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTSTATUSONLY\" }));\r\n\r\n}\r\n\r\n    }\r\n\r\n    onInactiveActive=(inputParam) => {\r\n\r\n        if(this.props.Login.masterData.selectedSample!==undefined ){\r\n          \r\n        if(inputParam.selectedSample.length==1){\r\n\r\n            if(inputParam.selectedSample[0].ntransactionstatus===transactionStatus.APPROVED){\r\n       \r\n     /*   let Map = {};\r\n        \r\n        \r\n        \r\n        \r\n        Map[\"nschedulersamplecode\"]=this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nschedulersamplecode;\r\n        Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n        Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n        Map[\"nregsubtypeversioncode\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode;\r\n        Map[\"nfilterstatus\"]= this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n        Map[\"nsampleschedulerconfigtypecode\"]=this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n        Map[\"nactivestatus\"]=this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].nactivestatus;\r\n        Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n d\r\n        let inputParam={\r\n        action:\"activeInactive\",\r\n        Map:Map,\r\n        inputData:{\r\n            \"userinfo\":this.props.Login.userInfo,\r\n        },\r\n        ncontrolCode:this.state.deleteSubSampleSchedulerConfigurationId\r\n       };*/\r\n\r\n       let inputParam1={\r\n        action:\"activeInactive\",\r\n        ...inputParam,\r\n        inputData:{\r\n            \"userinfo\":this.props.Login.userInfo,\r\n        },\r\n        operation:\"activeInactive\",\r\n        ncontrolCode:this.state.activeInactiveSchedulerConfigurationId\r\n       };\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.activeInactiveSchedulerSampleParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam:inputParam1,masterData:this.props.Login.masterData },\r\n                    openModal:true\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else{\r\n\r\n        this.props.updateActiveStatusSchedulerConfig(inputParam);\r\n        }\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVERECORD\" }));\r\n\r\n    }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONERECORD\" }));\r\n\r\n    }\r\n}else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" }));\r\n\r\n}\r\n\r\n    }\r\n\r\n    deleteSubSample=(ncontrolcode, skip, take,subsampleskip,subsampletake) => {\r\n\r\n        if(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus===transactionStatus.DRAFT){\r\n        let Map = {};\r\n        let sampleList = [];\r\n        let subsampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n        }\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSubSample;\r\n\r\n                subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\r\n\r\n        } else {\r\n            subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample &&this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\r\n        }\r\n        \r\n        if(this.props.Login.masterData.SchedulerConfigGetSubSample.length==1){\r\n            Map[\"nschedulersamplecodedelete\"]=this.props.Login.masterData.SchedulerConfigGetSubSample[\"nschedulersamplecode\"]\r\n        }\r\n        let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n        let addSubSampleList = getSameRecordFromTwoArrays(subsampleList || [], this.props.Login.masterData.selectedSubSample, \"nschedulersubsamplecode\");\r\n        Map[\"nschedulersamplecode\"]=addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\r\n        Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n        Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n        Map[\"nschedulersubsamplecode\"]=addSubSampleList &&addSubSampleList.map(subample => subample.nschedulersubsamplecode).join(\",\");\r\n        Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n       \r\n        let inputParam={\r\n        action:\"deleteSubSample\",\r\n        Map:Map,\r\n        inputData:{\r\n            \"userinfo\":this.props.Login.userInfo,\r\n        },\r\n        ncontrolCode:this.state.deleteSubSampleSchedulerConfigurationId\r\n       };\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam,masterData:this.props.Login.masterData },\r\n                    openModal:true\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else{\r\n\r\n        this.props.deleteSchedulerSubSample(Map,this.props.Login.userInfo,this.props.Login.masterData,this.state.deleteSubSampleSchedulerConfigurationId);\r\n        }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_DRAFTTODELETESUBSAMPLE\" }));\r\n\r\n    }\r\n    }\r\n\r\n    deleteTest=(ncontrolcode, skip, take,subsampleskip,subsampletake) => {\r\n        if(this.props.Login.masterData.selectedTest.length>0){\r\n            if(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0].ntransactionstatus===transactionStatus.DRAFT){\r\n\r\n        let Map = {};\r\n        let sampleList = [];\r\n        let subsampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSample ? this.props.Login.masterData.searchedSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSample;\r\n\r\n            sampleList = list ? list.slice(skip, skip + take) : [];\r\n\r\n        } else {\r\n            sampleList = this.props.Login.masterData.SchedulerConfigGetSample && this.props.Login.masterData.SchedulerConfigGetSample.slice(skip, skip + take);\r\n        }\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n            const list = this.props.Login.masterData.searchedSubSample ? this.props.Login.masterData.searchedSubSample\r\n                : this.props.Login.masterData.SchedulerConfigGetSubSample;\r\n\r\n                subsampleList = list ? list.slice(subsampleskip, subsampleskip + subsampletake) : [];\r\n\r\n        } else {\r\n            subsampleList = this.props.Login.masterData.SchedulerConfigGetSubSample &&this.props.Login.masterData.SchedulerConfigGetSubSample.slice(subsampleskip, subsampleskip + subsampletake);\r\n        }\r\n        \r\n        let testList = this.props.Login.masterData.SchedulerConfigGetTest || [];\r\n        let { testskip, testtake } = this.state\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"nschedulertestcode\");\r\n\r\n\r\n\r\n        let addSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"nschedulersamplecode\");\r\n        let addSubSampleList = getSameRecordFromTwoArrays(subsampleList || [], this.props.Login.masterData.selectedSubSample, \"nschedulersubsamplecode\");\r\n        Map[\"nschedulersamplecode\"]=addSampleList && addSampleList.map(sample => sample.nschedulersamplecode).join(\",\");\r\n        Map[\"nneedsubsample\"]=this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample;\r\n        Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMappingValue &&this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"checkBoxOperation\"]= checkBoxOperation.SINGLESELECT;\r\n        Map[\"ntype\"]= 3;\r\n        Map[\"nschedulersubsamplecode\"]=addSubSampleList &&addSubSampleList.map(subample => subample.nschedulersubsamplecode).join(\",\");\r\n        Map[\"nschedulertestcode\"]=selectedTestList &&selectedTestList.map(subample => subample.nschedulertestcode).join(\",\");\r\n        Map[\"istestschedulerdelete\"]=true;\r\n        Map[\"isParameter\"]=true;\r\n        Map[\"nregtypecode\"]= this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"]= this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n\r\n        let inputParam={\r\n            action:\"deleteSchedulerTest\",\r\n            Map:Map,\r\n            inputData:{\r\n                \"userinfo\":this.props.Login.userInfo,\r\n            },\r\n            ncontrolCode:this.state.deleteTestSchedulerConfigurationId\r\n           };\r\n            if(showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteTestSchedulerConfigurationId)){\r\n                //if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.deleteSubSampleSchedulerConfigurationId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam,masterData:this.props.Login.masterData },\r\n                            openModal:true\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }else{\r\n                this.props.deleteSchedulerConfigTest(Map,this.props.Login.userInfo,this.props.Login.masterData,ncontrolcode);\r\n            }\r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_DRAFTTOADDTEST\" }));\r\n\r\n        }\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n\r\n\r\n    }\r\n    }\r\n\r\n\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name === \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n\r\n    }\r\n    testDataStateChange = (event) => {\r\n               \r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n\r\n    }\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        if (tabseqno === SideBarSeqno.TEST) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedTest: this.props.Login.masterData.selectedTest,\r\n                nschedulertestcode: this.props.Login.masterData.selectedTest ?\r\n                    String(this.props.Login.masterData.selectedTest.map(item => item.nschedulertestcode).join(\",\")) : \"-1\",\r\n                    nschedulersamplecode: this.props.Login.masterData.selectedSample ?\r\n                    this.props.Login.masterData.selectedSample.map(item => item.nschedulersamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                activeTestTab,\r\n                screenName: activeTestTab,\r\n                resultDataState: this.state.resultDataState,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId,\r\n                 ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue &&\r\n                this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n            }\r\n            this.props.getTestChildTabDetailSchedulerConiguration(inputData, true)\r\n        }\r\n        else if (tabseqno === SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.selectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedSubSample ? this.props.Login.masterData.selectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                    subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                    npreregno: this.props.Login.masterData.selectedSample &&\r\n                        this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\"),\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                    npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab,\r\n                    OrderCodeData: this.props.Login.masterData.selectedSample &&\r\n                        this.props.Login.masterData.selectedSample.map(item => item.hasOwnProperty(\"OrderCodeData\") ? item.OrderCodeData : -1).join(\",\"),\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n    }\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    sideNavDetail = (screenName//, sampleGridSkip\r\n    ) => {\r\n        let testList = this.props.Login.masterData.SchedulerConfigGetTest || [];\r\n        let { testskip, testtake } = this.state\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        return (\r\n            screenName == \"IDS_PARAMETERS\"\r\n                //&& this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE \r\n                ? <SchedulerParameterTab\r\n                    userInfo={this.props.Login.userInfo}\r\n                    genericLabel={this.props.Login.genericLabel}\r\n                    masterData={this.props.Login.masterData}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    dataState={this.state.resultDataState}\r\n                    dataStateChange={this.testDataStateChange}\r\n                    screenName=\"IDS_PARAMETERS\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                />\r\n                :\r\n                \r\n                           screenName == \"IDS_SAMPLEDETAILS\" ?\r\n                                this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                    <SampleInfoView\r\n                                        data={(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0) ?\r\n                                            this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {}}\r\n                                        SingleItem={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample ?\r\n                                            this.state.SingleItem : []}\r\n                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                       // viewFile={this.viewFile}\r\n\r\n                                    />\r\n                                    :\r\n                                    <SampleGridTab\r\n                                        userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                        GridData={this.props.Login.masterData.selectedSample || []}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        //dataState={sampleGridSkip === 0 ? {...this.state.sampleGridDataState, skip:0} : this.state.sampleGridDataState}\r\n                                        dataState={this.state.sampleGridDataState}\r\n                                        dataStateChange={this.sampleInfoDataStateChange}\r\n                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                        primaryKeyField={\"nschedulersamplecode\"}\r\n                                        expandField=\"expanded\"\r\n                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                        //viewFile={this.viewFile}\r\n                                        //jsonField={\"jsondata\"}\r\n                                    />\r\n                                :\"\"\r\n                               \r\n                                    \r\n        )\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\", \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\", \"dataType\": [option[designProperties.LISTITEM]] };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n        //ALPD-657\r\n        //this.changePropertyView(1)\r\n    }\r\n    getSchedulerConfigComboService = (ScreenName, operation,\r\n        primaryKeyField, masterData, userInfo, editId, importData) => {\r\n            const ndesigntemplatemappingcodefilter = this.props.Login.masterData.DesignTemplateMappingValue &&\r\n            this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\r\n                let data = [];\r\n            const withoutCombocomponent = []\r\n            const Layout = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.jsondata\r\n            }\r\n            if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\r\n                let data = [];\r\n                const withoutCombocomponent = []\r\n                const Layout = this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.jsondata\r\n                if (Layout !== undefined) {\r\n                    Layout.map(row => {\r\n                        return row.children.map(column => {\r\n                            return column.children.map(component => {\r\n                                return component.hasOwnProperty(\"children\") ?\r\n                                    component.children.map(componentrow => {\r\n                                        if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                            || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                            data.push(componentrow)\r\n                                        } else {\r\n                                            withoutCombocomponent.push(componentrow)\r\n                                        }\r\n                                        return null;\r\n                                    })\r\n                                    : component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                        || component.inputtype === \"frontendsearchfilter\" ?\r\n                                        data.push(component) : withoutCombocomponent.push(component)\r\n                            })\r\n                        })\r\n    \r\n                    })\r\n                    const comboComponents = data\r\n                    let childColumnList = {};\r\n                    data.map(columnList => {\r\n                        const val = comboChild(data, columnList, childColumnList, true);\r\n                        data = val.data;\r\n                        childColumnList = val.childColumnList\r\n                        return null;\r\n                    })\r\n                  /*  data.push({\r\n                        \"source\":\"userssite\",\r\n                        \"templatemandatory\":true,\r\n                        \"displaymember\": \"sproductcatname\",\r\n                        \"componentname\": \"Combo Box\",\r\n                        \"displayname\":{\r\n                            \"en-US\": \"Sample Category\",\r\n                            \"ru-RU\": \"Образец категории\",\r\n                            \"tg-TG\": \"Категорияи намунавӣ\"\r\n                        },\r\n                        \"id\": \"L7BUKHDn3\",\"inputtype\": \"combo\",\r\n                      \"label\": \"Sample Category\",\"mandatory\": false,\r\n                      \"valuemember\": \"nproductcatcode\"\r\n\r\n                    })*/\r\n                    const mapOfFilterRegData = {\r\n                        nsampletypecode: parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode),\r\n                        sampletypecategorybasedflow: parseInt(this.props.Login.masterData.RealSampleTypeValue.ncategorybasedflowrequired),\r\n                        nneedsubsample: this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample === true ? transactionStatus.YES : transactionStatus.NO,\r\n                        isQualisLite:this.props.Login.settings && parseInt(this.props.Login.settings[71])\r\n    \r\n                    }\r\n                    this.props.getPreviewTemplate(masterData, userInfo, editId,\r\n                        data, this.state.selectedRecord, childColumnList,\r\n                        comboComponents, withoutCombocomponent, true, false,\r\n                        mapOfFilterRegData, false, \"create\", this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename, importData)\r\n                } else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CONFIGURETEMPLATE\" }));\r\n                }\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\" }));\r\n            }\r\n    }\r\n\r\n    onSampleTypeChange = (event, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            Map['advfilterdata'] = true;\r\n            this.props.onSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onRegTypeChange = (event, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            Map['advfilterdata'] = true;\r\n            this.props.onRegTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onRegSubTypeChange = (event, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            Map['advfilterdata'] = true;\r\n            this.props.onRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onApprovalConfigVersionChange = (event, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RegSubTypeValue.nregsubtypecode;\r\n            Map[\"napproveconfversioncode\"] = event.value;\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            Map['advfilterdata'] = true;\r\n            this.props.changeApprovalConfigVersionChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onSchedulerConfigTypeChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeFilter = () => {\r\n        let Map = {};\r\n        //  selectedFilter[\"fromdate\"]\r\n        const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n        Map['inputValues'] = {\r\n            FromDate: this.props.Login.masterData.RealFromDate || new Date(),\r\n            ToDate: this.props.Login.masterData.RealToDate || new Date(),\r\n            fromdate: rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealFromDate) || new Date(),\r\n            todate: rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealToDate) || new Date(),\r\n            SampleType: this.props.Login.masterData.RealSampleTypeList || [],\r\n            SampleTypeValue: this.props.Login.masterData.RealSampleTypeValue || {},\r\n            RegistrationType: this.props.Login.masterData.RealRegTypeList || [],\r\n            RegistrationSubType: this.props.Login.masterData.RealRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.RealFilterStatuslist || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.RealDesignTemplateMappingList || [],\r\n            ApprovalConfigVersion: this.props.Login.masterData.RealApprovalConfigVersionList || [],\r\n            RegTypeValue: this.props.Login.masterData.RealRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.RealRegSubTypeValue || {},\r\n            FilterStatusValue: this.props.Login.masterData.RealFilterStatusValue || {},\r\n            ApprovalConfigVersionValue: this.props.Login.masterData.RealApprovalConfigVersionValue || {},\r\n            DesignTemplateMappingValue: this.props.Login.masterData.RealDesignTemplateMappingValue || {},\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\r\n            napproveconfversioncode: this.props.Login.masterData.RealApprovalConfigVersionValue\r\n                && this.props.Login.masterData.RealApprovalConfigVersionValue.napproveconfversioncode || -1\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...Map.inputValues }, selectedFilter: { todate: Map.inputValues.todate, fromdate: Map.inputValues.fromdate } }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        // masterData[labelname] = {...event.item};\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    };\r\n    onDesignTemplateChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status !== \"click\") {\r\n            if (index === SideBarTabIndex.RESULT) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_PARAMETERS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n           \r\n            else {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: {\r\n            //             activeTabIndex :activeTabIndex\r\n            //            // activeTabId :  id\r\n            //         }\r\n            //     }\r\n            //     this.props.updateStore(updateInfo);\r\n\r\n            //     }\r\n        }\r\n    }\r\n\r\n    onReload = () => {\r\n\r\n        const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n        const RealFromDate = obj.fromDate;\r\n        const RealToDate = obj.toDate;\r\n\r\n\r\n        let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\r\n        let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\r\n        let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\r\n        let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\r\n        let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue;\r\n        let RealSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        let RealRegTypeList = this.props.Login.masterData.RegistrationType || [];\r\n        let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || [];\r\n        let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || [];\r\n        let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || [];\r\n\r\n        let SampleTypeValue = RealSampleTypeValue\r\n        let RegTypeValue = RealRegTypeValue\r\n        let RegSubTypeValue = RealRegSubTypeValue\r\n        let FilterStatusValue = RealFilterStatusValue\r\n        let DesignTemplateMappingValue = RealDesignTemplateMappingValue\r\n        let ApprovalConfigVersionValue = RealApprovalConfigVersionValue\r\n        const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n        const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,FromDate,ToDate,\r\n            RealFilterStatusValue, RealDesignTemplateMappingValue, RealApprovalConfigVersionValue,\r\n            RealSampleTypeList, RealRegTypeList, RealRegSubTypeList, RealDesignTemplateMappingList, RealApprovalConfigVersionList,\r\n            RealFilterStatuslist,SampleTypeValue,RegSubTypeValue,RegTypeValue,FilterStatusValue,DesignTemplateMappingValue,RealFromDate,RealToDate\r\n        }\r\n\r\n        let inputData = {\r\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion\r\n                && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue\r\n                && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n            flag: 1,\r\n            \"isParameter\":true,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            nregsubtypeversioncode:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            nsampleschedulerconfigtypecode:this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n\r\n        \r\n        }\r\n\r\n        if (inputData.nsampletypecode) {\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\r\n            inputData['FromDate'] = obj.fromDate;\r\n            inputData['ToDate'] = obj.toDate;\r\n\r\n            let inputParam = { masterData, inputData, searchSubSampleRef: this.searchSubSampleRef, searchSampleRef: this.searchSampleRef, searchTestRef: this.searchTestRef, selectedFilter: this.state.selectedFilter }\r\n            this.props.ReloadDataSchedulerConfig(inputParam);\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n\r\n           }\r\n\r\n    onFilterSubmit = () => {\r\n        \r\n     //   const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\r\n        //const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n        \r\n        let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\r\n        let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\r\n        let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\r\n        let RealDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\r\n        let RealApprovalConfigVersionValue = this.props.Login.masterData.ApprovalConfigVersionValue && this.props.Login.masterData.ApprovalConfigVersionValue;\r\n        let RealSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        let RealRegTypeList = this.props.Login.masterData.RegistrationType || [];\r\n        let RealRegSubTypeList = this.props.Login.masterData.RegistrationSubType || [];\r\n        let RealFilterStatuslist = this.props.Login.masterData.FilterStatus || [];\r\n        let RealDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let RealApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion || [];\r\n        let RealSchedulerConfigTypeValue= this.props.Login.masterData.SchedulerConfigTypeValue|| [];\r\n        let RealSchedulerConfigType = this.props.Login.masterData.SchedulerConfigType || [];\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterStatusValue, RealDesignTemplateMappingValue, RealApprovalConfigVersionValue,\r\n            RealSampleTypeList, RealRegTypeList, RealRegSubTypeList, RealDesignTemplateMappingList, RealApprovalConfigVersionList,\r\n            RealFilterStatuslist,RealSchedulerConfigTypeValue,RealSchedulerConfigType\r\n        }\r\n\r\n        let inputData = {\r\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus==0 ? this.props.Login.masterData.FilterStatus.map(item =>item.ntransactionstatus).join(\",\") :this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            napproveconfversioncode: this.props.Login.masterData.ApprovalConfigVersion\r\n                && this.props.Login.masterData.ApprovalConfigVersionValue.napproveconfversioncode,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue\r\n                && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow,\r\n            nneedsubsample: this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedsubsample,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            nregsubtypeversioncode:this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypeversioncode,\r\n            nsampleschedulerconfigtypecode:this.props.Login.masterData.SchedulerConfigTypeValue&&this.props.Login.masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode\r\n        }\r\n\r\n        if (inputData.nsampletypecode) {\r\n            if (inputData.ndesigntemplatemappingcode) {\r\n                // const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n                //     this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n                // inputData['FromDate'] = obj.fromDate;\r\n                // inputData['ToDate'] = obj.toDate;\r\n                // ALPD-4130 to clear Additinal Filter config upon Filter Submit- ATE-241\r\n                masterData['kendoFilterList'] = undefined;\r\n                const selectedFilter = {};\r\n               // selectedFilter[\"fromdate\"] = RealFromDate;\r\n               // selectedFilter[\"todate\"] = RealToDate;\r\n                const inputParam = {\r\n                    masterData, inputData, \r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchSampleRef: this.searchSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                     selectedFilter\r\n                }\r\n                this.props.getSchedulerConfigSample(inputParam);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\" }));\r\n            }\r\n    }\r\n    else {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n    } \r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let operation = this.props.Login.operation;\r\n        if (operation === \"update\") {\r\n            // this.onUpdateRegistration(saveType, formRef, operation);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, onSampleTypeChange, onSampleTypeChange, onRegTypeChange, onRegSubTypeChange, getPreviewTemplate,\r\n    changeApprovalConfigVersionChange, getSchedulerConfigSample, filterTransactionList, getSchedulerConfigSubSampleDetail,getSchedulerTestDetail,ReloadDataSchedulerConfig,\r\n    getTestChildTabDetailSchedulerConiguration,addsubSampleSchedulerConfiguration,testSectionTest ,saveSchedulerSubSample,getEditSchedulerSubSampleComboService,\r\n    updateSchedulerConfigSubSample,deleteSchedulerSubSample,addMoreSchedulerConfigTest,createSchedulerTest,deleteSchedulerConfigTest,getEditSchedulerConfigComboService,\r\n    validateEsignforSchedulerConfig,approveSchedulerConfig,deleteSchedulerConfig,updateActiveStatusSchedulerConfig,getSchedulerMasteDetails\r\n})(injectIntl(SchedulerConfiguration));"]},"metadata":{},"sourceType":"module"}