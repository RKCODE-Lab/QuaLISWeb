{"ast":null,"code":"import { create_UUID } from \"../../../components/CommonScript\";\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\nexport function onSaveSampleAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let samindex = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1]; // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \n        //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\n\n        selectedMaster.forEach((sample, sampleindex) => {\n          const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n          tempData[\"npreregno\"] = sample.npreregno;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"nfilesize\"] = file.size;\n          tempData['nattachmenttypecode'] = nattachmenttypecode;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"sfilename\"] = file.name.trim();\n          tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + samindex[\"index\"], file);\n          formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          samindex[\"index\"] = samindex[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(sample => {\n        let sampleFile = {};\n        sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n        sampleFile[\"npreregno\"] = sample.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA;\n        sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n        sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(sample => {\n      let sampleFile = {};\n      sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n      sampleFile[\"npreregno\"] = sample.npreregno;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile[\"nfilesize\"] = 0;\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile[\"ssystemfilename\"] = \"\";\n      sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n      sampleFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"sampleattachment\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"npreregno\", saveParam.npreregno);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"SampleAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveTestAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let testindex1 = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n        selectedMaster.forEach((test, testindex) => {\n          const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n          tempData[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n          tempData[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n          tempData[\"npreregno\"] = test.npreregno;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"nfilesize\"] = file.size;\n          tempData['nattachmenttypecode'] = nattachmenttypecode;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"sfilename\"] = file.name.trim();\n          tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\n          formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          testindex1[\"index\"] = testindex1[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(test => {\n        let sampleFile = {};\n        sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n        sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n        sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n        sampleFile[\"npreregno\"] = test.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA;\n        sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n        sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(test => {\n      let sampleFile = {};\n      sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n      sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n      sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n      sampleFile[\"npreregno\"] = test.npreregno;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile[\"nfilesize\"] = 0;\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile[\"ssystemfilename\"] = \"\";\n      sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n      sampleFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"testattachment\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"ntransactiontestcode\", saveParam.ntransactiontestcode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"TestAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveBatchAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let nreleasebatchcode = selectedMaster.nreleasebatchcode;\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n        const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n        const uniquefilename = fileName + '.' + fileExtension; //selectedMaster.forEach(sample=>{\n\n        const tempData = {};\n        tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n        tempData[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\n        tempData['nattachmenttypecode'] = nattachmenttypecode;\n        tempData[\"ssystemfilename\"] = uniquefilename;\n        tempData[\"sfilename\"] = file.name.trim();\n        tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n        tempData['nstatus'] = transactionStatus.ACTIVE;\n        formData.append(\"uploadedFile\" + index, file);\n        formData.append(\"uniquefilename\" + index, uniquefilename);\n        fileArray.push(tempData); //nreleasebatchcode.push(selectedMaster.releasebatchcode)\n        //})\n      });\n      formData.append(\"filecount\", acceptedFiles.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      // selectedMaster.forEach(sample=>{\n      let sampleFile = {};\n      sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n      sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n      sampleFile[\"nlinkcode\"] = transactionStatus.NA;\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n      sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n      sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n      sampleFile['nstatus'] = transactionStatus.ACTIVE; //npreregno.push(sample.npreregno)\n\n      fileArray.push(sampleFile); // })\n    }\n  } else {\n    //selectedMaster.forEach(sample=>{\n    let sampleFile = {};\n    sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n    sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n    sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n    sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n    sampleFile[\"ssystemfilename\"] = \"\";\n    sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n    sampleFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n    sampleFile['nstatus'] = transactionStatus.ACTIVE;\n    fileArray.push(sampleFile); //npreregno.push(sample.npreregno)\n    //})  \n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"batchcreationfile\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"nreleasebatchcode\", nreleasebatchcode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"BatchCreationFile\"\n  };\n  return inputParam;\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/attachmentscomments/attachments/AttachmentFunctions.js"],"names":["create_UUID","attachmentType","transactionStatus","onSaveSampleAttachment","saveParam","selectedMaster","formData","FormData","selectedRecord","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","fileArray","samindex","index","FTP","Array","isArray","length","forEach","file","splittedFileName","name","split","fileExtension","sample","sampleindex","fileName","nregattachmentcode","ssystemfilename","uniquefilename","tempData","npreregno","userInfo","nformcode","nusercode","nuserrole","NA","size","trim","sdescription","ACTIVE","append","push","YES","sampleFile","nfilesize","nlinkcode","value","slinkfilename","slinkdescription","ncontrolCode","JSON","stringify","inputParam","inputData","userinfo","isFileupload","operation","classUrl","saveType","formRef","methodUrl","onSaveTestAttachment","testindex1","test","testindex","ntestattachmentcode","ntransactiontestcode","ntransactionsamplecode","onSaveBatchAttachment","nreleasebatchcode","nbatchfilecode"],"mappings":"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","sourcesContent":["import { create_UUID } from \"../../../components/CommonScript\";\r\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nexport function onSaveSampleAttachment (saveParam,selectedMaster){\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let samindex={\r\n       index:0\r\n    };\r\n    if(nattachmenttypecode === attachmentType.FTP) {\r\n        if(acceptedFiles && Array.isArray(acceptedFiles)&& acceptedFiles.length>0) {\r\n            acceptedFiles.forEach((file, index)=> {\r\n                \r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \r\n                //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\r\n                \r\n            \r\n                selectedMaster.forEach((sample,sampleindex)=>{\r\n                    const fileName=selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 &&selectedRecord.ssystemfilename &&selectedRecord.ssystemfilename !== \"\"?selectedRecord.ssystemfilename.split('.')[0]:create_UUID()\r\n                    const uniquefilename = fileName+'.'+fileExtension;\r\n                    const tempData ={};\r\n                    tempData['nregattachmentcode']=selectedRecord.nregattachmentcode ?selectedRecord.nregattachmentcode: 0;\r\n                    tempData[\"npreregno\"]=sample.npreregno;\r\n                    tempData['nformcode']=saveParam.userInfo.nformcode\r\n                    tempData['nusercode']=saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode']=saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    tempData['nattachmenttypecode']=nattachmenttypecode\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"sfilename\"] = file.name.trim();\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus']=transactionStatus.ACTIVE;\r\n\r\n\r\n\r\n                    formData.append(\"uploadedFile\"+samindex[\"index\"], file);\r\n                    formData.append(\"uniquefilename\"+samindex[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    samindex[\"index\"]=samindex[\"index\"]+1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length*selectedMaster.length));\r\n           \r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(sample=>{\r\n                let sampleFile = {};\r\n                sampleFile['nregattachmentcode']=selectedRecord.nregattachmentcode ?selectedRecord.nregattachmentcode: 0;\r\n                sampleFile[\"npreregno\"]=sample.npreregno;\r\n                sampleFile['nformcode']=saveParam.userInfo.nformcode\r\n                sampleFile['nusercode']=saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode']=saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode']=nattachmenttypecode\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus']=transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(sample=>{\r\n            let sampleFile = {};\r\n            sampleFile['nregattachmentcode']=selectedRecord.nregattachmentcode ?selectedRecord.nregattachmentcode: 0;\r\n            sampleFile[\"npreregno\"]=sample.npreregno;\r\n            sampleFile['nformcode']=saveParam.userInfo.nformcode\r\n            sampleFile['nusercode']=saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode']=saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value?selectedRecord.nlinkcode.value:-1;\r\n            sampleFile[\"nfilesize\"] = 0;\r\n            sampleFile['nattachmenttypecode']=nattachmenttypecode\r\n            sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            sampleFile[\"sdescription\"] = selectedRecord.slinkdescription? selectedRecord.slinkdescription.trim(): \"\";\r\n            sampleFile['nstatus']=transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })  \r\n    }\r\n    formData.append(\"ncontrolCode\",saveParam.ncontrolCode);\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"sampleattachment\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\",nattachmenttypecode);\r\n    formData.append(\"npreregno\",saveParam.npreregno);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo},\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n         methodUrl: \"SampleAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\nexport function onSaveTestAttachment (saveParam,selectedMaster){\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let testindex1={\r\n        index:0\r\n     };\r\n    \r\n    if(nattachmenttypecode === attachmentType.FTP) {\r\n        if(acceptedFiles && Array.isArray(acceptedFiles)&& acceptedFiles.length>0) {\r\n            acceptedFiles.forEach((file, index)=> {\r\n                \r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                \r\n\r\n                selectedMaster.forEach((test,testindex)=>{\r\n                    const fileName=selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 &&selectedRecord.ssystemfilename &&selectedRecord.ssystemfilename !== \"\"?selectedRecord.ssystemfilename.split('.')[0]:create_UUID()\r\n                    const uniquefilename = fileName+'.'+fileExtension;\r\n                    const tempData ={};\r\n                    tempData['ntestattachmentcode']=selectedRecord.ntestattachmentcode ?selectedRecord.ntestattachmentcode: 0;\r\n                    tempData[\"ntransactiontestcode\"]=test.ntransactiontestcode;\r\n                    tempData[\"ntransactionsamplecode\"]=test.ntransactionsamplecode;\r\n                    tempData[\"npreregno\"]=test.npreregno;\r\n                    tempData['nformcode']=saveParam.userInfo.nformcode\r\n                    tempData['nusercode']=saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode']=saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    tempData['nattachmenttypecode']=nattachmenttypecode\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"sfilename\"] = file.name.trim();\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus']=transactionStatus.ACTIVE;\r\n\r\n\r\n                    formData.append(\"uploadedFile\"+testindex1[\"index\"], file);\r\n                    formData.append(\"uniquefilename\"+testindex1[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    testindex1[\"index\"]=testindex1[\"index\"]+1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length*selectedMaster.length));\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(test=>{\r\n                let sampleFile = {};\r\n                sampleFile['ntestattachmentcode']=selectedRecord.ntestattachmentcode ?selectedRecord.ntestattachmentcode: 0;\r\n                sampleFile[\"ntransactiontestcode\"]=test.ntransactiontestcode;\r\n                sampleFile[\"ntransactionsamplecode\"]=test.ntransactionsamplecode;\r\n                sampleFile[\"npreregno\"]=test.npreregno;\r\n                sampleFile['nformcode']=saveParam.userInfo.nformcode\r\n                sampleFile['nusercode']=saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode']=saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode']=nattachmenttypecode\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus']=transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(test=>{\r\n            let sampleFile = {};\r\n            sampleFile['ntestattachmentcode']=selectedRecord.ntestattachmentcode ?selectedRecord.ntestattachmentcode: 0;\r\n            sampleFile[\"ntransactiontestcode\"]=test.ntransactiontestcode;\r\n            sampleFile[\"ntransactionsamplecode\"]=test.ntransactionsamplecode;\r\n            sampleFile[\"npreregno\"]=test.npreregno;\r\n            sampleFile['nformcode']=saveParam.userInfo.nformcode\r\n            sampleFile['nusercode']=saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode']=saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value?selectedRecord.nlinkcode.value:-1;\r\n            sampleFile[\"nfilesize\"] = 0;\r\n            sampleFile['nattachmenttypecode']=nattachmenttypecode\r\n            sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            sampleFile[\"sdescription\"] = selectedRecord.slinkdescription? selectedRecord.slinkdescription.trim(): \"\";\r\n            sampleFile['nstatus']=transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })  \r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"testattachment\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\",nattachmenttypecode);\r\n    formData.append(\"ntransactiontestcode\",saveParam.ntransactiontestcode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo},\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n         methodUrl: \"TestAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\n\r\nexport function onSaveBatchAttachment (saveParam,selectedMaster){\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let nreleasebatchcode = selectedMaster.nreleasebatchcode;\r\n    \r\n    if(nattachmenttypecode === attachmentType.FTP) {\r\n        if(acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length>0) {\r\n            acceptedFiles.forEach((file, index)=> {\r\n                \r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode>0 &&\r\n                        selectedRecord.ssystemfilename &&   selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0]:create_UUID()\r\n                const uniquefilename = fileName+'.'+fileExtension;\r\n\r\n                //selectedMaster.forEach(sample=>{\r\n\r\n                    const tempData = {};\r\n                    tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ? \r\n                                                selectedRecord.nbatchfilecode: 0;\r\n                    tempData[\"nreleasebatchcode\"]= selectedMaster.nreleasebatchcode;\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData['nattachmenttypecode']= nattachmenttypecode ;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"sfilename\"] = file.name.trim();\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n                    formData.append(\"uploadedFile\"+index, file);\r\n                    formData.append(\"uniquefilename\"+index, uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    //nreleasebatchcode.push(selectedMaster.releasebatchcode)\r\n                //})\r\n            });\r\n            formData.append(\"filecount\", acceptedFiles.length);\r\n            isFileEdited = transactionStatus.YES;\r\n        } \r\n        else {\r\n           // selectedMaster.forEach(sample=>{\r\n                let sampleFile = {};\r\n                sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ?selectedRecord.nbatchfilecode: 0;\r\n                sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n                //npreregno.push(sample.npreregno)\r\n                fileArray.push(sampleFile);\r\n           // })\r\n        }\r\n    } else {\r\n        //selectedMaster.forEach(sample=>{\r\n            let sampleFile = {};\r\n            sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ?selectedRecord.nbatchfilecode: 0;\r\n            sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;           \r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value?selectedRecord.nlinkcode.value:-1;\r\n            sampleFile['nattachmenttypecode']=nattachmenttypecode\r\n            sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            sampleFile[\"sdescription\"] = selectedRecord.slinkdescription? selectedRecord.slinkdescription.trim(): \"\";\r\n            sampleFile['nstatus']=transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n            //npreregno.push(sample.npreregno)\r\n        //})  \r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"batchcreationfile\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\",nattachmenttypecode);\r\n    formData.append(\"nreleasebatchcode\",nreleasebatchcode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n   \r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo},\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n        methodUrl: \"BatchCreationFile\"\r\n    }\r\n    return inputParam;\r\n}"]},"metadata":{},"sourceType":"module"}