{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";var _excluded=[\"dataItem\",\"selected\"];import*as React from'react';import*as ReactDOM from'react-dom';import{ListBox,ListBoxToolbar,processListBoxData,processListBoxDragAndDrop}from'@progress/kendo-react-listbox';import{useLayoutEffect,useRef,useState}from'react';import{ClientList,SearchAdd,MediaHeader,MediaSubHeader,MediaLabel,MediaSubHeaderText,SearchIcon,ContentPanel}from'../components/App.styles';import PerfectScrollbar from'react-perfect-scrollbar';import{connect}from'react-redux';import'@progress/kendo-theme-default/dist/all.css';import{injectIntl}from'react-intl';import{getActionIcon}from'../components/HoverIcons';import{FormControl,ListGroup,Media,Nav}from'react-bootstrap';import{faArrowsAlt,faArrowsAltH,faArrowsAltV,faEquals,faEye,faGift,faGripVertical,faSearch,faSort,faTimes}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ListMasterWrapper}from'../components/list-master/list-master.styles';import{designProperties}from'../components/Enumeration';import'../pages/registration/registration.css';var SELECTED_FIELD='selected';var ListBoxDraggable=/*#__PURE__*/function(_React$Component){_inherits(ListBoxDraggable,_React$Component);var _super=_createSuper(ListBoxDraggable);function ListBoxDraggable(_props){var _this;_classCallCheck(this,ListBoxDraggable);//console.log('eeeee222')\n_this=_super.call(this,_props);_this.handleItemClick=function(event,data,connectedData){_this.props.getMasterDetail(event.dataItem,_this.props.userInfo,_this.props.masterData);// this.setState({\n//     ...this.state,\n//     [data]: this.state[data].map(item => {\n//         if (item.srulename === event.dataItem.srulename) {\n//             item[SELECTED_FIELD] = true;// !item[SELECTED_FIELD];\n//         }\n//         else //if (!event.nativeEvent.ctrlKey)\n//         {\n//             item[SELECTED_FIELD] = false;\n//         }\n//         return item;\n//     })\n//     // ,\n//     // [connectedData]: this.state[connectedData].map(item => {\n//     //     item[SELECTED_FIELD] = false;\n//     //     return item;\n//     // })\n// });\n};_this.handleToolBarClick=function(e){var toolName=e.toolName||'';// let sortableField = this.props.sortableField\n// let sourceSortValue = (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]  \n// if (toolName === 'moveDown') {\n//     let index=this.state.masterList.findIndex(x => x[SELECTED_FIELD]=== true);\n//     let destinationSortValue = (this.state.masterList[index+1])[sortableField];\n//     (this.state.masterList[index+1])[sortableField]=sourceSortValue;\n//     (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]=destinationSortValue;\n// }else{\n//     let index=this.state.masterList.findIndex(x => x[SELECTED_FIELD]=== true);\n//     let destinationSortValue = (this.state.masterList[index-1])[sortableField];\n//     (this.state.masterList[index-1])[sortableField]=sourceSortValue;\n//     (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]=destinationSortValue;\n// }   \nvar result=processListBoxData(_this.state.masterList,_this.state.developers,toolName,SELECTED_FIELD);var sortedList=result['listBoxOneData'];var sortableField=_this.props.sortableField;sortedList.map(function(item,i){return item[sortableField]=i+1;});_this.props.saveExecutionOrder(sortedList);// this.setState({\n//     ...this.state, sortedList,\n//     masterList: sortedList//result.listBoxOneData//,\n//     //  developers: result.listBoxTwoData\n// });\n};_this.handleDragStart=function(e){_this.setState(_objectSpread(_objectSpread({},_this.state),{},{draggedItem:e.dataItem}));};_this.saveExecutionOrder=function(sortedArray){var sortableField=_this.props.sortableField;sortedArray.map(function(item,i){return item[sortableField]=i+1;});_this.props.saveExecutionOrder(sortedArray);};_this.handleDrop=function(e){// let sortableField = this.props.sortableField\n// let destinationSortValue = e.dataItem[sortableField]\n// let sourceSortValue = this.state.draggedItem[sortableField]\n// let sourceindex=this.state.masterList.findIndex(x => x===this.state.draggedItem);\n// let destinationindex=this.state.masterList.findIndex(x => x=== e.dataItem);\n// this.state.masterList[sourceindex][sortableField]=destinationSortValue\n// this.state.masterList[destinationindex][sortableField]=sourceSortValue\n// this.state.draggedItem[sortableField] = destinationSortValue\n// e.dataItem[sortableField] = sourceSortValue\nvar result=processListBoxDragAndDrop(_this.state.masterList,_this.state.developers,_this.state.draggedItem,e.dataItem,_this.props.mainField);var sortedList=result['listBoxOneData'];var sortableField=_this.props.sortableField;sortedList.map(function(item,i){return item[sortableField]=i+1;});_this.props.saveExecutionOrder(sortedList);// this.setState({\n//     ...this.state, sortedList,\n//     masterList: sortedList//result.listBoxOneData//,\n//     //    developers: result.listBoxTwoData\n// });\n};_this.toggleSearch=function(){_this.setState({showSearch:!_this.state.showSearch});};_this.filterColumn=function(event){var filterValue=event.target.value;if(event.keyCode===13){_this.props.filterColumnData(filterValue,_this.props.filterParam,_this.props.searchListName);}};_this.MyCustomItem=function(props){var dataItem=props.dataItem,selected=props.selected,others=_objectWithoutProperties(props,_excluded);var sortableField=_this.props.sortableField;var index=dataItem[sortableField];var ref=useRef(null);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),width=_useState2[0],setWidth=_useState2[1];useLayoutEffect(function(){function updateSize(){setWidth(ref.current.offsetWidth-200);}window.addEventListener('resize',updateSize);updateSize();return function(){return window.removeEventListener('resize',updateSize);};},[]);return/*#__PURE__*/React.createElement(ListGroup.Item,Object.assign({as:\"li\",ref:ref},others,{className:\"\".concat(_this.state.showList===props.index?\"hover\":\"\",\"  list-custom-ico-on-hover list-bgcolor \\n             \").concat(_this.props&&_this.props.selectedMaster&&_this.props.selectedMaster[_this.props.primaryKeyField]===dataItem[_this.props.primaryKeyField]?\"active\":\"\")}),/*#__PURE__*/React.createElement(Media,{onClick:function onClick(e){return _this.props.getMasterDetail?_this.handleItemClick(props,'masterList','developers'):\"\";}},_this.props.isSearchedDataPresent?\"\":/*#__PURE__*/React.createElement(MediaHeader,{style:{marginTop:\"10px\",marginRight:\"5px\",content:\"||\"}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"})),/*#__PURE__*/React.createElement(MediaHeader,null,/*#__PURE__*/React.createElement(MediaHeader,{\"data-tip\":props.dataItem[_this.props.mainField]//data-for=\"tooltip-common-wrap\"\n,style:_this.props.subFields?{maxWidth:\"15rem\",marginLeft:\"10px\",fontSize:\"1.10rem\"}:{maxWidth:\"15rem\",marginLeft:\"10px\",fontSize:\"1.10rem\",marginTop:'10px'}},/*#__PURE__*/React.createElement(\"span\",null,props.dataItem[_this.props.mainField])),/*#__PURE__*/React.createElement(MediaSubHeader,{style:{padding:\"0.1rem\",marginLeft:\"9px\"},className:\"text-wrap\"},_this.props.subFields&&_this.props.subFields.map(function(field,index){return _this.props.subFieldsLabel?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MediaLabel,null,\"\".concat(field[designProperties.LABEL][_this.props.userInfo.slanguagetypecode]||_this.props.intl.formatMessage({id:field[designProperties.LABEL]})+\" : \")),/*#__PURE__*/React.createElement(MediaLabel,{style:{color:field[designProperties.COLOUR]?dataItem.scolorhexcode||dataItem[field[designProperties.COLOUR]]:\"\"}},dataItem[field[designProperties.VALUE]]===undefined?'-':dataItem[field[designProperties.VALUE]]),index!==_this.props.subFields.length-1?/*#__PURE__*/React.createElement(MediaLabel,{className:\"seperator\"},\"|\"):\"\"):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MediaLabel,{style:{color:field[designProperties.COLOUR]?dataItem.scolorhexcode||dataItem[field[designProperties.COLOUR]]:\"\"}},\"\".concat(dataItem[field[designProperties.VALUE]]===undefined?'-':dataItem[field[designProperties.VALUE]])),index!==_this.props.subFields.length-1?/*#__PURE__*/React.createElement(MediaLabel,{className:\"seperator\"},\"|\"):\"\");}))),/*#__PURE__*/React.createElement(Media.Body,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"icon-group-wrap \".concat(_this.props.actionIcons&&_this.props.listMasterShowIcon?\"enable-view\":\"\",\" \").concat(_this.props.clickIconGroup?\"click-view\":\"hover-view\",\"\\n                         \").concat(_this.state.activeIconIndex==index?\"active\":\"\")},_this.props.actionIcons&&_this.props.actionIcons.length>0&&_this.props.actionIcons.map(function(action,index){return/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(_this.props.listMasterShowIcon&&index+1>_this.props.listMasterShowIcon?'disable-view':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"// data-for=\"tooltip-common-wrap\"\n,\"data-tip\":action.title,\"data-place\":action.dataplace&&action.dataplace?action.dataplace:\"\",hidden:action.hidden===undefined?true:action.hidden,onClick:function onClick(event){return action.onClick(_defineProperty({},_this.props.selectedListName,[dataItem]));}},getActionIcon(action.controlname)));})),_this.props.clickIconGroup?_this.props.listMasterShowIcon&&_this.props.actionIcons&&_this.props.actionIcons.length<=_this.props.listMasterShowIcon?\"\":/*#__PURE__*/React.createElement(\"span\",{className:\"vertical-dots end-icon\",onClick:function onClick(){return _this.iconGroupView(index);}}):\"\");};_this.state={masterList://data\n_this.props.masterList.length>0?_this.props.masterList.map(function(item,index){if(index===0){if(item['selected']){item['selected']=true;}else{item['selected']={};item['selected']=true;}}return item;}):[],developers:[],draggedItem:{}};return _this;}_createClass(ListBoxDraggable,[{key:\"iconGroupView\",value:function iconGroupView(index){this.setState({activeIconIndex:this.state.activeIconIndex==index?null:index});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(ListMasterWrapper,{className:\"\".concat(this.state.showModalBg?'show_modal_bg':'',\" \").concat(this.props.splitModeClass)},/*#__PURE__*/React.createElement(SearchAdd,{className:\"d-flex filter-wrap-group justify-content-between pad-15\"},this.props.hideSearch?/*#__PURE__*/React.createElement(\"div\",{className:\"list-group-search tool-search \".concat(this.state.showSearch?'activesearch':\"\")}):!this.props.disableToolBarItems?/*#__PURE__*/ // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\nReact.createElement(\"div\",{className:\"list-group-search tool-search \".concat(this.state.showSearch?'activesearch':\"\")},/*#__PURE__*/React.createElement(SearchIcon,{className:\"search-icon\",onClick:this.toggleSearch},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSearch})),/*#__PURE__*/React.createElement(FormControl,{ref:this.props.searchRef,autoComplete:\"off\",placeholder:\"\".concat(this.props.intl.formatMessage({id:\"IDS_SEARCH\"})),name:\"search\",onKeyUp:function onKeyUp(e){return _this2.filterColumn(e);}}),this.state.showSearch?/*#__PURE__*/React.createElement(SearchIcon,{className:\"close-right-icon\",onClick:this.toggleSearch},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTimes})):\"\"):\"\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,this.props.commonActions))),/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(ClientList,{className:\"product-list sm-list-view port-height-inner\"},/*#__PURE__*/React.createElement(ListBox,{draggable:this.props.isSearchedDataPresent?false:true,style:{height:400,width:'100%'},size:'large',data:this.state.masterList||[],item:this.MyCustomItem,textField:this.props.mainField,selectedField:SELECTED_FIELD//   onItemClick={e => this.handleItemClick(e, 'masterList', 'developers')}\n,onDragStart:this.handleDragStart,onDrop:this.handleDrop// toolbar={() => {\n//     return <ListBoxToolbar\n//         tools={['moveUp', 'moveDown'//, 'transferTo', 'transferFrom', 'transferAllTo', 'transferAllFrom', 'remove'\n//         ]}\n//         data={this.state.masterList}\n//         //   dataConnected={state.developers}\n//         onToolClick={this.handleToolBarClick}\n//     />;\n// }} \n}))));}// static getDerivedStateFromProps(nextProps, prevState) {\n//     if (nextProps.selectedTestGroupTestCode !== prevState.selectedTestGroupTestCode) {\n//         return {sortedList: [] };\n//     }else{\n//         return{ masterList: this.state.sortedList } ;\n//     }\n// }\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this3=this;console.log('previousProps--->>>');if(this.props.selectedTestGroupTestCode!==previousProps.selectedTestGroupTestCode){this.setState({sortedList:[],selectedTestGroupTestCode:this.props.selectedTestGroupTestCode});}if(this.props.masterList!==previousProps.masterList){// let selectedIndex = this.props.masterList.findIndex(y => y['selected'] && y['selected'] === true);\n// if (selectedIndex !== -1) {\n//     this.props.masterList[0]['selected'] = {};\n//     this.props.masterList[0]['selected'] = false;\n// }\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterList: this.props.masterList }\n// }\n// this.props.updateStore(updateInfo);\nthis.setState({masterList:this.props.masterList});}// if (this.props.Login.masterList !== previousProps.Login.masterList) {\n//     // let selectedIndex = this.props.masterList.findIndex(y => y['selected'] && y['selected'] === true);\n//     // if (selectedIndex !== -1) {\n//     //     this.props.masterList[0]['selected'] = {};\n//     //     this.props.masterList[0]['selected'] = false;\n//     // }\n//     this.setState({ masterList: this.props.Login.masterList });\n// }\n// if (this.props.selectedMaster !== previousProps.selectedMaster) {\n//     if (this.props.Login.masterList.length>0) {\n//         let primaryKeyField = this.props.primaryKeyField\n//         let oldselectedIndex = this.props.Login.masterList.findIndex(x =>\n//             x['selected'] && x['selected'] === true\n//         );\n//         let newselectedIndex = this.props.Login.masterList.findIndex(y => y[primaryKeyField] === this.props.selectedMaster[primaryKeyField]);\n//         if (oldselectedIndex !== -1) {\n//             this.props.Login.masterList[oldselectedIndex]['selected'] = false;\n//         }\n//         this.props.Login.masterList[newselectedIndex]['selected'] = {};\n//         this.props.Login.masterList[newselectedIndex]['selected'] = true;\n//     }\n//     this.setState({ masterList: this.props.Login.masterList });\n// }\nif(this.props.selectedMaster!==previousProps.selectedMaster){if(this.props.masterList.length>0){var primaryKeyField=this.props.primaryKeyField;var oldselectedIndex=this.props.masterList.findIndex(function(x){return x['selected']&&x['selected']===true;});var newselectedIndex=this.props.masterList.findIndex(function(y){return y[primaryKeyField]===_this3.props.selectedMaster[primaryKeyField];});if(oldselectedIndex!==-1){this.props.masterList[oldselectedIndex]['selected']=false;}this.props.masterList[newselectedIndex]['selected']={};this.props.masterList[newselectedIndex]['selected']=true;}this.setState({masterList:this.props.masterList,activeIconIndex:null});}}}]);return ListBoxDraggable;}(React.Component);;export default injectIntl(ListBoxDraggable);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/ListBoxDraggable.jsx"],"names":["React","ReactDOM","ListBox","ListBoxToolbar","processListBoxData","processListBoxDragAndDrop","useLayoutEffect","useRef","useState","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","MediaSubHeaderText","SearchIcon","ContentPanel","PerfectScrollbar","connect","injectIntl","getActionIcon","FormControl","ListGroup","Media","Nav","faArrowsAlt","faArrowsAltH","faArrowsAltV","faEquals","faEye","faGift","faGripVertical","faSearch","faSort","faTimes","FontAwesomeIcon","ListMasterWrapper","designProperties","SELECTED_FIELD","ListBoxDraggable","props","handleItemClick","event","data","connectedData","getMasterDetail","dataItem","userInfo","masterData","handleToolBarClick","e","toolName","result","state","masterList","developers","sortedList","sortableField","map","item","i","saveExecutionOrder","handleDragStart","setState","draggedItem","sortedArray","handleDrop","mainField","toggleSearch","showSearch","filterColumn","filterValue","target","value","keyCode","filterColumnData","filterParam","searchListName","MyCustomItem","selected","others","index","ref","width","setWidth","updateSize","current","offsetWidth","window","addEventListener","removeEventListener","showList","selectedMaster","primaryKeyField","isSearchedDataPresent","marginTop","marginRight","content","subFields","maxWidth","marginLeft","fontSize","padding","field","subFieldsLabel","LABEL","slanguagetypecode","intl","formatMessage","id","color","COLOUR","scolorhexcode","VALUE","undefined","length","actionIcons","listMasterShowIcon","clickIconGroup","activeIconIndex","action","title","dataplace","hidden","onClick","selectedListName","controlname","iconGroupView","showModalBg","splitModeClass","hideSearch","disableToolBarItems","searchRef","commonActions","height","previousProps","console","log","selectedTestGroupTestCode","oldselectedIndex","findIndex","x","newselectedIndex","y","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { ListBox, ListBoxToolbar, processListBoxData, processListBoxDragAndDrop }\r\n    from '@progress/kendo-react-listbox';\r\nimport { useLayoutEffect, useRef, useState } from 'react';\r\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../components/App.styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport { connect } from 'react-redux';\r\nimport '@progress/kendo-theme-default/dist/all.css';\r\nimport { injectIntl } from 'react-intl';\r\nimport { getActionIcon } from '../components/HoverIcons';\r\nimport { FormControl, ListGroup, Media, Nav } from 'react-bootstrap';\r\nimport { faArrowsAlt, faArrowsAltH, faArrowsAltV, faEquals, faEye, faGift, faGripVertical, faSearch, faSort, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ListMasterWrapper } from '../components/list-master/list-master.styles';\r\n\r\nimport { designProperties } from '../components/Enumeration';\r\nimport '../pages/registration/registration.css'\r\n\r\nconst SELECTED_FIELD = 'selected';\r\n\r\nclass ListBoxDraggable extends React.Component {\r\n\r\n    constructor(props) {\r\n        //console.log('eeeee222')\r\n        super(props)\r\n        this.state = {\r\n            masterList: //data\r\n                this.props.masterList.length > 0 ? this.props.masterList.map((item, index) => {\r\n                    if (index === 0) {\r\n                        if (item['selected']) {\r\n                            item['selected'] = true;\r\n                        } else {\r\n                            item['selected'] = {};\r\n                            item['selected'] = true;\r\n                        }\r\n                    }\r\n                    return item;\r\n                }) :\r\n                    [],\r\n            developers: [],\r\n            draggedItem: {}\r\n        }\r\n    }\r\n    handleItemClick = (event, data, connectedData) => {\r\n        this.props.getMasterDetail(event.dataItem, this.props.userInfo, this.props.masterData)\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     [data]: this.state[data].map(item => {\r\n        //         if (item.srulename === event.dataItem.srulename) {\r\n        //             item[SELECTED_FIELD] = true;// !item[SELECTED_FIELD];\r\n        //         }\r\n        //         else //if (!event.nativeEvent.ctrlKey)\r\n        //         {\r\n        //             item[SELECTED_FIELD] = false;\r\n        //         }\r\n\r\n        //         return item;\r\n        //     })\r\n        //     // ,\r\n        //     // [connectedData]: this.state[connectedData].map(item => {\r\n        //     //     item[SELECTED_FIELD] = false;\r\n        //     //     return item;\r\n        //     // })\r\n        // });\r\n    };\r\n\r\n    handleToolBarClick = e => {\r\n        let toolName = e.toolName || '';\r\n        // let sortableField = this.props.sortableField\r\n        // let sourceSortValue = (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]  \r\n        // if (toolName === 'moveDown') {\r\n        //     let index=this.state.masterList.findIndex(x => x[SELECTED_FIELD]=== true);\r\n        //     let destinationSortValue = (this.state.masterList[index+1])[sortableField];\r\n        //     (this.state.masterList[index+1])[sortableField]=sourceSortValue;\r\n        //     (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]=destinationSortValue;\r\n        // }else{\r\n        //     let index=this.state.masterList.findIndex(x => x[SELECTED_FIELD]=== true);\r\n        //     let destinationSortValue = (this.state.masterList[index-1])[sortableField];\r\n        //     (this.state.masterList[index-1])[sortableField]=sourceSortValue;\r\n        //     (this.state.masterList.filter(x => x[SELECTED_FIELD] === true))[0][sortableField]=destinationSortValue;\r\n        // }   \r\n        let result = processListBoxData(this.state.masterList, this.state.developers, toolName, SELECTED_FIELD);\r\n\r\n        let sortedList = result['listBoxOneData'];\r\n        let sortableField = this.props.sortableField;\r\n        sortedList.map((item, i) => item[sortableField] = i + 1);\r\n        this.props.saveExecutionOrder(sortedList);\r\n        // this.setState({\r\n        //     ...this.state, sortedList,\r\n        //     masterList: sortedList//result.listBoxOneData//,\r\n        //     //  developers: result.listBoxTwoData\r\n        // });\r\n    };\r\n\r\n    handleDragStart = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            draggedItem: e.dataItem\r\n        });\r\n    };\r\n    saveExecutionOrder = (sortedArray) => {\r\n        let sortableField = this.props.sortableField;\r\n        sortedArray.map((item, i) => item[sortableField] = i + 1);\r\n        this.props.saveExecutionOrder(sortedArray);\r\n    };\r\n    //this.props.saveExecutionOrder(this.state.masterList);\r\n    handleDrop = e => {\r\n        // let sortableField = this.props.sortableField\r\n        // let destinationSortValue = e.dataItem[sortableField]\r\n        // let sourceSortValue = this.state.draggedItem[sortableField]\r\n        // let sourceindex=this.state.masterList.findIndex(x => x===this.state.draggedItem);\r\n        // let destinationindex=this.state.masterList.findIndex(x => x=== e.dataItem);\r\n        // this.state.masterList[sourceindex][sortableField]=destinationSortValue\r\n        // this.state.masterList[destinationindex][sortableField]=sourceSortValue\r\n        // this.state.draggedItem[sortableField] = destinationSortValue\r\n        // e.dataItem[sortableField] = sourceSortValue\r\n        let result = processListBoxDragAndDrop(this.state.masterList, this.state.developers, this.state.draggedItem, e.dataItem, this.props.mainField);\r\n\r\n        let sortedList = result['listBoxOneData'];\r\n        let sortableField = this.props.sortableField;\r\n        sortedList.map((item, i) => item[sortableField] = i + 1);\r\n\r\n        this.props.saveExecutionOrder(sortedList);\r\n        // this.setState({\r\n        //     ...this.state, sortedList,\r\n        //     masterList: sortedList//result.listBoxOneData//,\r\n        //     //    developers: result.listBoxTwoData\r\n        // });\r\n    };\r\n    iconGroupView(index) {\r\n        this.setState({ activeIconIndex: this.state.activeIconIndex == index ? null : index })\r\n    }\r\n    toggleSearch = () => {\r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n    filterColumn = (event) => {\r\n        let filterValue = event.target.value;\r\n        if (event.keyCode === 13) {\r\n            this.props.filterColumnData(filterValue, this.props.filterParam, this.props.searchListName);\r\n        }\r\n    }\r\n    MyCustomItem = (props) => {\r\n        let { dataItem, selected, ...others } = props;\r\n        let sortableField = this.props.sortableField;\r\n        let index = dataItem[sortableField];\r\n        const ref = useRef(null);\r\n        const [width, setWidth] = useState(0);\r\n        useLayoutEffect(() => {\r\n            function updateSize() {\r\n                setWidth(ref.current.offsetWidth - 200);\r\n            }\r\n            window.addEventListener('resize', updateSize);\r\n            updateSize();\r\n            return () => window.removeEventListener('resize', updateSize)\r\n        }, []);\r\n\r\n        return (\r\n            <ListGroup.Item as=\"li\" ref={ref} {...others}\r\n                className={`${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor \r\n             ${this.props && this.props.selectedMaster && this.props.selectedMaster[this.props.primaryKeyField] ===\r\n                        dataItem[this.props.primaryKeyField] ? \"active\" : \"\"}`}>\r\n                {/* <li {...others} className={`${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor \r\n            ${this.props.selectedMaster && this.props.selectedMaster[this.props.primaryKeyField] ===\r\n                        dataItem[this.props.primaryKeyField] ? \"active\" : \"\"}`} > */}\r\n\r\n\r\n                <Media onClick={(e) => this.props.getMasterDetail ? this.handleItemClick(props, 'masterList', 'developers') : \"\"}>\r\n                    {this.props.isSearchedDataPresent ? \"\" : <MediaHeader style={{ marginTop: \"10px\", marginRight: \"5px\", content: \"||\" }} >\r\n                        <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\" ></FontAwesomeIcon>\r\n                    </MediaHeader>}\r\n\r\n                    <MediaHeader  >\r\n                        <MediaHeader data-tip={props.dataItem[this.props.mainField]}  //data-for=\"tooltip-common-wrap\"\r\n                            style={this.props.subFields ?\r\n                                { maxWidth: \"15rem\", marginLeft: \"10px\", fontSize: \"1.10rem\" }\r\n                                : { maxWidth: \"15rem\", marginLeft: \"10px\", fontSize: \"1.10rem\", marginTop: '10px' }}\r\n                        >\r\n                            <span  >{props.dataItem[this.props.mainField]}</span>\r\n\r\n                        </MediaHeader>\r\n                        <MediaSubHeader style={{ padding: \"0.1rem\", marginLeft: \"9px\" }} className=\"text-wrap\">\r\n                            {/* <span>Status: {props.dataItem.stransdisplaystatus}</span> */}\r\n                            {this.props.subFields && this.props.subFields.map((field, index) =>\r\n                                this.props.subFieldsLabel ?\r\n                                    <>\r\n                                        <MediaLabel >{`${field[designProperties.LABEL][this.props.userInfo.slanguagetypecode] ||\r\n                                            this.props.intl.formatMessage({ id: field[designProperties.LABEL] }) + \" : \"}`}</MediaLabel>\r\n                                        <MediaLabel style={{ color: field[designProperties.COLOUR] ? dataItem.scolorhexcode || dataItem[field[designProperties.COLOUR]] : \"\" }}>\r\n                                            {dataItem[field[designProperties.VALUE]] === undefined ? '-' : dataItem[field[designProperties.VALUE]]}</MediaLabel>\r\n                                        {index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                        {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                        {/* index % 2 === 0 && */}\r\n                                    </> :\r\n                                    <>\r\n                                        <MediaLabel style={{ color: field[designProperties.COLOUR] ? dataItem.scolorhexcode || dataItem[field[designProperties.COLOUR]] : \"\" }}>\r\n                                            {`${dataItem[field[designProperties.VALUE]] === undefined ? '-' : dataItem[field[designProperties.VALUE]]}`}</MediaLabel>\r\n                                        {index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                        {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                        {/* index % 2 === 0 &&  */}\r\n                                    </>\r\n                            )}\r\n                        </MediaSubHeader>\r\n\r\n                    </MediaHeader>\r\n\r\n\r\n                    <Media.Body >\r\n\r\n                    </Media.Body>\r\n\r\n                </Media>\r\n                <div className={`icon-group-wrap ${this.props.actionIcons && this.props.listMasterShowIcon\r\n                    ? \"enable-view\" : \"\"} ${this.props.clickIconGroup ? \"click-view\" : \"hover-view\"}\r\n                         ${this.state.activeIconIndex == index ? \"active\" : \"\"}`}>\r\n                    {this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) =>\r\n                        <span className={`${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`}>\r\n                            <Nav.Link\r\n                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                // data-for=\"tooltip-common-wrap\"\r\n                                data-tip={action.title}\r\n                                data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                hidden={action.hidden === undefined ? true : action.hidden}\r\n                                onClick={(event) => action.onClick({ [this.props.selectedListName]: [dataItem] })}\r\n                            >\r\n                                {getActionIcon(action.controlname)}\r\n                            </Nav.Link>\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                {this.props.clickIconGroup ?\r\n                    (this.props.listMasterShowIcon && this.props.actionIcons && this.props.actionIcons.length <= this.props.listMasterShowIcon) ? \"\" :\r\n                        <span className='vertical-dots end-icon' onClick={() => this.iconGroupView(index)}></span> : \"\"}\r\n                {/* </li > */}\r\n            </ListGroup.Item >\r\n\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} ${this.props.splitModeClass}`}>\r\n                <SearchAdd className={`d-flex filter-wrap-group justify-content-between pad-15`} >\r\n                    {this.props.hideSearch ? <div className={`list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`}>\r\n\r\n                    </div> :\r\n                        !this.props.disableToolBarItems ?\r\n                            // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\r\n                            <div className={`list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`}>\r\n                                <SearchIcon className=\"search-icon\" onClick={this.toggleSearch}>\r\n                                    <FontAwesomeIcon icon={faSearch} />\r\n                                </SearchIcon>\r\n                                <FormControl ref={this.props.searchRef} autoComplete=\"off\"\r\n                                    placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}`} name={\"search\"}\r\n                                    onKeyUp={(e) => this.filterColumn(e)} />\r\n                                {this.state.showSearch ?\r\n                                    <SearchIcon className=\"close-right-icon\" onClick={this.toggleSearch}>\r\n                                        <FontAwesomeIcon icon={faTimes} />\r\n                                    </SearchIcon>\r\n                                    : \"\"}\r\n                            </div> : \"\"\r\n\r\n                    }\r\n                    <>\r\n                        <span>\r\n                            {this.props.commonActions}\r\n                        </span>\r\n                    </>\r\n                </SearchAdd>\r\n                <PerfectScrollbar >\r\n                    <ClientList className=\"product-list sm-list-view port-height-inner\"\r\n                       >\r\n\r\n                         \r\n                            <ListBox\r\n                                draggable={this.props.isSearchedDataPresent ? false : true}\r\n                                style={{\r\n                                    height: 400,\r\n                                    width: '100%'\r\n                                }}\r\n                                size={'large'}\r\n                                data={this.state.masterList || []}\r\n                                item={this.MyCustomItem}\r\n\r\n                                textField={this.props.mainField}\r\n                                selectedField={SELECTED_FIELD}\r\n                                //   onItemClick={e => this.handleItemClick(e, 'masterList', 'developers')}\r\n                                onDragStart={this.handleDragStart}\r\n                                onDrop={this.handleDrop}\r\n                            // toolbar={() => {\r\n                            //     return <ListBoxToolbar\r\n                            //         tools={['moveUp', 'moveDown'//, 'transferTo', 'transferFrom', 'transferAllTo', 'transferAllFrom', 'remove'\r\n                            //         ]}\r\n                            //         data={this.state.masterList}\r\n                            //         //   dataConnected={state.developers}\r\n                            //         onToolClick={this.handleToolBarClick}\r\n                            //     />;\r\n                            // }} \r\n                            /> \r\n\r\n                    </ClientList>\r\n                </PerfectScrollbar>\r\n\r\n\r\n            </ListMasterWrapper >\r\n\r\n        );\r\n\r\n    }\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     if (nextProps.selectedTestGroupTestCode !== prevState.selectedTestGroupTestCode) {\r\n    //         return {sortedList: [] };\r\n    //     }else{\r\n    //         return{ masterList: this.state.sortedList } ;\r\n    //     }\r\n    // }\r\n    componentDidUpdate(previousProps) {\r\n        console.log('previousProps--->>>')\r\n        if (this.props.selectedTestGroupTestCode !== previousProps.selectedTestGroupTestCode) {\r\n            this.setState({ sortedList: [], selectedTestGroupTestCode: this.props.selectedTestGroupTestCode });\r\n        }\r\n        if (this.props.masterList !== previousProps.masterList) {\r\n            // let selectedIndex = this.props.masterList.findIndex(y => y['selected'] && y['selected'] === true);\r\n            // if (selectedIndex !== -1) {\r\n            //     this.props.masterList[0]['selected'] = {};\r\n            //     this.props.masterList[0]['selected'] = false;\r\n            // }\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { masterList: this.props.masterList }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n\r\n            this.setState({ masterList: this.props.masterList });\r\n        }\r\n\r\n        // if (this.props.Login.masterList !== previousProps.Login.masterList) {\r\n        //     // let selectedIndex = this.props.masterList.findIndex(y => y['selected'] && y['selected'] === true);\r\n        //     // if (selectedIndex !== -1) {\r\n        //     //     this.props.masterList[0]['selected'] = {};\r\n        //     //     this.props.masterList[0]['selected'] = false;\r\n        //     // }\r\n        //     this.setState({ masterList: this.props.Login.masterList });\r\n        // }\r\n        // if (this.props.selectedMaster !== previousProps.selectedMaster) {\r\n        //     if (this.props.Login.masterList.length>0) {\r\n        //         let primaryKeyField = this.props.primaryKeyField\r\n        //         let oldselectedIndex = this.props.Login.masterList.findIndex(x =>\r\n        //             x['selected'] && x['selected'] === true\r\n        //         );\r\n        //         let newselectedIndex = this.props.Login.masterList.findIndex(y => y[primaryKeyField] === this.props.selectedMaster[primaryKeyField]);\r\n        //         if (oldselectedIndex !== -1) {\r\n        //             this.props.Login.masterList[oldselectedIndex]['selected'] = false;\r\n        //         }\r\n        //         this.props.Login.masterList[newselectedIndex]['selected'] = {};\r\n        //         this.props.Login.masterList[newselectedIndex]['selected'] = true;\r\n        //     }\r\n        //     this.setState({ masterList: this.props.Login.masterList });\r\n        // }\r\n        if (this.props.selectedMaster !== previousProps.selectedMaster) {\r\n            if (this.props.masterList.length > 0) {\r\n                let primaryKeyField = this.props.primaryKeyField\r\n                let oldselectedIndex = this.props.masterList.findIndex(x =>\r\n                    x['selected'] && x['selected'] === true\r\n                );\r\n                let newselectedIndex = this.props.masterList.findIndex(y => y[primaryKeyField] === this.props.selectedMaster[primaryKeyField]);\r\n                if (oldselectedIndex !== -1) {\r\n                    this.props.masterList[oldselectedIndex]['selected'] = false;\r\n                }\r\n                this.props.masterList[newselectedIndex]['selected'] = {};\r\n                this.props.masterList[newselectedIndex]['selected'] = true;\r\n            }\r\n            this.setState({ masterList: this.props.masterList, activeIconIndex: null });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default injectIntl(ListBoxDraggable);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}