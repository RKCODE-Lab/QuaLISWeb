{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Column.jsx\";\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COLUMN } from \"./constants\";\nimport DropArea from \"./DropArea.jsx\";\nimport \"./styles.css\";\nimport Componentrow from \"./Componentrow\";\nconst style = {};\n\nconst Column = _ref => {\n  let {\n    data,\n    components,\n    handleDrop,\n    path,\n    onclickcomponent,\n    selectedFieldRecord\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: COLUMN,\n    item: {\n      type: COLUMN,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  const renderComponent = (component, currentPath) => {\n    return /*#__PURE__*/React.createElement(Componentrow, {\n      key: component.id,\n      data: component,\n      components: components,\n      path: currentPath,\n      handleDrop: handleDrop,\n      onclickcomponent: onclickcomponent,\n      selectedFieldRecord: selectedFieldRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    className: \"base draggable column \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, data.children ? data.children.map((component, index) => {\n    const currentPath = `${path}-${index}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: component.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DropArea, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), renderComponent(component, currentPath));\n  }) : \"\", /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: `${path}-${data.children.length}`,\n      childrenCount: data.children.length\n    },\n    onDrop: handleDrop,\n    isLast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Column;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/Column.jsx"],"names":["React","useRef","useDrag","COLUMN","DropArea","Componentrow","style","Column","data","components","handleDrop","path","onclickcomponent","selectedFieldRecord","ref","isDragging","drag","type","item","id","children","collect","monitor","opacity","renderComponent","component","currentPath","map","index","childrenCount","length"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { COLUMN } from \"./constants\";\r\nimport DropArea from \"./DropArea.jsx\";\r\nimport \"./styles.css\"\r\nimport Componentrow from \"./Componentrow\";\r\n\r\nconst style = {};\r\nconst Column = ({ data, components, handleDrop, path, onclickcomponent, selectedFieldRecord }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    \r\n    type: COLUMN,\r\n    item: {\r\n      type: COLUMN,\r\n      id: data.id,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  const renderComponent = (component, currentPath) => {\r\n    return (\r\n      <Componentrow\r\n        key={component.id}\r\n        data={component}\r\n        components={components}\r\n        path={currentPath}\r\n        handleDrop={handleDrop}\r\n        onclickcomponent={onclickcomponent}\r\n        selectedFieldRecord={selectedFieldRecord}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{ ...style, opacity }}\r\n      className=\"base draggable column \"\r\n\r\n    >\r\n      {/* {\"Column\"} */}\r\n      {data.children ? data.children.map((component, index) => {\r\n        const currentPath = `${path}-${index}`;\r\n\r\n        return (\r\n          <React.Fragment key={component.id}>\r\n            <DropArea\r\n              data={{\r\n                path: currentPath,\r\n                childrenCount: data.children.length\r\n              }}\r\n              onDrop={handleDrop}\r\n            />\r\n            {renderComponent(component, currentPath)}\r\n          </React.Fragment>\r\n        );\r\n      }) : \"\"}\r\n      <DropArea\r\n        data={{\r\n          path: `${path}-${data.children.length}`,\r\n          childrenCount: data.children.length\r\n        }}\r\n        onDrop={handleDrop}\r\n        isLast\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Column;\r\n"]},"metadata":{},"sourceType":"module"}