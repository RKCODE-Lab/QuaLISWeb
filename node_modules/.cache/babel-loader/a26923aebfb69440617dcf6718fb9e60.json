{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";import ConfirmMessage from'../components/confirm-alert/confirm-message.component';export function getTechniqueDetail(technique,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"technique/getTechnique\",{ntechniquecode:technique.ntechniquecode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEditTechniqueService(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"technique/getActiveTechniqueById\",_defineProperty({},inputParam.primaryKeyName,inputParam.masterData.SelectedTechnique[inputParam.primaryKeyName])).then(function(response){//const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:inputParam.operation,loading:false,screenName:inputParam.screenName,selectedRecord:response.data,ncontrolCode:inputParam.ncontrolcode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getAddTestService(screenName,operation,masterData,userInfo,ncontrolCode,confirmMessage){return function(dispatch){//if (masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \ndispatch(initRequest(true));rsapi.post(\"technique/getTechniqueConducted\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"],userinfo:userInfo}).then(function(response){if(response.data!==null&&response.data.length>0){toast.warn(intl.formatMessage({id:\"IDS_TESTTRAININGCONDUCTEDADD\"}));dispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \nopenChildModal:false,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{openChildModal:false,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});rsapi.post(\"technique/getTechniqueScheduled\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"],userinfo:userInfo}).then(function(response){if(response.data!==null&&response.data.length>0){confirmMessage.confirm(\"addMessage\",intl.formatMessage({id:\"IDS_ADD\"}),intl.formatMessage({id:\"IDS_TESTTRAININGSCHEDULEDADD\"}),intl.formatMessage({id:\"IDS_OK\"}),intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"],userinfo:userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{techniqueTestList:response.data,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});});}else{rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"],userinfo:userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{techniqueTestList:response.data,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}});}});// }\n// else{\n//     toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\n// }\n};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TechniqueAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","initRequest","transactionStatus","intl","ConfirmMessage","getTechniqueDetail","technique","userInfo","masterData","dispatch","post","ntechniquecode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getEditTechniqueService","inputParam","primaryKeyName","SelectedTechnique","openModal","screenName","selectedRecord","ncontrolCode","ncontrolcode","getAddTestService","confirmMessage","length","formatMessage","id","openChildModal","confirm","techniqueTestList"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\nimport ConfirmMessage from '../components/confirm-alert/confirm-message.component';\r\n\r\n\r\nexport function getTechniqueDetail (technique, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"technique/getTechnique\", {ntechniquecode:technique.ntechniquecode, \r\n                                                          userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getEditTechniqueService(inputParam){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"technique/getActiveTechniqueById\",{[inputParam.primaryKeyName]:inputParam.masterData.SelectedTechnique[inputParam.primaryKeyName] \r\n                                                                    })\r\n        .then(response=>{\r\n            //const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\r\n            \r\n            \r\n            dispatch({type: DEFAULT_RETURN, payload:{ openModal:true,\r\n                                                       operation:inputParam.operation, \r\n                                                       loading:false,\r\n                                                       screenName:inputParam.screenName,   \r\n                                                       selectedRecord:response.data,\r\n                                                       ncontrolCode:inputParam.ncontrolcode,}})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })\r\n    }\r\n}\r\n\r\nexport function getAddTestService(screenName, operation, masterData, userInfo, ncontrolCode,confirmMessage){\r\n    return function (dispatch) {    \r\n        //if (masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"technique/getTechniqueConducted\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"], \r\n        userinfo:userInfo})\r\n        .then(response=>{\r\n          if(response.data!==null && response.data.length >0)\r\n          {\r\n            \r\n            toast.warn(intl.formatMessage({id: \"IDS_TESTTRAININGCONDUCTEDADD\"}));\r\n            dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                openChildModal:false,\r\n                operation, screenName, ncontrolCode,\r\n                loading:false}});\r\n          }\r\n          else\r\n          {\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                openChildModal:false,\r\n                operation, screenName, ncontrolCode,\r\n                loading:false}});\r\n            rsapi.post(\"technique/getTechniqueScheduled\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"], \r\n            userinfo:userInfo})\r\n            .then(response=>{\r\n              if(response.data!==null && response.data.length >0)\r\n              {\r\n                \r\n                confirmMessage.confirm(\"addMessage\", intl.formatMessage({ id: \"IDS_ADD\" }), intl.formatMessage({ id: \"IDS_TESTTRAININGSCHEDULEDADD\" }),\r\n                intl.formatMessage({ id: \"IDS_OK\" }), intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                () =>  rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"], \r\n                userinfo:userInfo})\r\n    \r\n            .then(response=>{\r\n                                               \r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                                                            techniqueTestList:response.data,\r\n                                                          \r\n                                                            openChildModal:true,\r\n                                                            operation, screenName, ncontrolCode,\r\n                                                            \r\n                                                            loading:false}});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }      \r\n                }));\r\n              }\r\n              else\r\n              {\r\n                rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"], \r\n                userinfo:userInfo})\r\n    \r\n            .then(response=>{\r\n                                               \r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                                                            techniqueTestList:response.data,\r\n                                                           \r\n                                                            openChildModal:true,\r\n                                                            operation, screenName, ncontrolCode,\r\n                                                            \r\n                                                            loading:false}});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }      \r\n                })\r\n              }\r\n    \r\n           })      \r\n          }\r\n\r\n       })\r\n         \r\n    // }\r\n    // else{\r\n    //     toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\r\n    // }\r\n}}"]},"metadata":{},"sourceType":"module"}