{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPPER = exports.RELATIVE_DATETIME = exports.NOW = exports.LOWER = exports.LINEAR_REGRESSION = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: function now() {\n      return new Date();\n    }\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: function sqlFormatFunc() {\n    return \"NOW()\";\n  },\n  mongoFormatFunc: function mongoFormatFunc() {\n    return new Date();\n  },\n  formatFunc: function formatFunc() {\n    return \"NOW\";\n  }\n};\nexports.NOW = NOW;\nvar RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: function jsonLogic(_ref) {\n    var date = _ref.date,\n        op = _ref.op,\n        val = _ref.val,\n        dim = _ref.dim;\n    return {\n      \"date_add\": [date, val * (op == \"minus\" ? -1 : +1), dim]\n    };\n  },\n  jsonLogicImport: function jsonLogicImport(v) {\n    var date = v[\"date_add\"][0];\n    var val = Math.abs(v[\"date_add\"][1]);\n    var op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    var dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: function date_add(date, val, dim) {\n      return (0, _moment[\"default\"])(date).add(val, dim).toDate();\n    }\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: function sqlFormatFunc(_ref2) {\n    var date = _ref2.date,\n        op = _ref2.op,\n        val = _ref2.val,\n        dim = _ref2.dim;\n    return \"DATE_ADD(\".concat(date, \", INTERVAL \").concat(parseInt(val) * (op == \"minus\" ? -1 : +1), \" \").concat(dim.replace(/^'|'$/g, \"\"), \")\");\n  },\n  mongoFormatFunc: null,\n  //todo: support?\n  //todo: spel\n  formatFunc: function formatFunc(_ref3) {\n    var date = _ref3.date,\n        op = _ref3.op,\n        val = _ref3.val,\n        dim = _ref3.dim;\n    return !val ? date : \"\".concat(date, \" \").concat(op == \"minus\" ? \"-\" : \"+\", \" \").concat(val, \" \").concat(dim);\n  },\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {\n        func: \"NOW\",\n        args: []\n      },\n      valueSources: [\"func\", \"field\"]\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\"\n        }\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"]\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\"\n        }\n      }\n    }\n  }\n};\nexports.RELATIVE_DATETIME = RELATIVE_DATETIME;\nvar LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: function toLowerCase(str) {\n      return str.toLowerCase();\n    }\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"]\n    }\n  }\n};\nexports.LOWER = LOWER;\nvar UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: function toUpperCase(str) {\n      return str.toUpperCase();\n    }\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"]\n    }\n  }\n};\nexports.UPPER = UPPER;\nvar LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: function formatFunc(_ref4, _) {\n    var coef = _ref4.coef,\n        bias = _ref4.bias,\n        val = _ref4.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  sqlFormatFunc: function sqlFormatFunc(_ref5) {\n    var coef = _ref5.coef,\n        bias = _ref5.bias,\n        val = _ref5.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  spelFormatFunc: function spelFormatFunc(_ref6) {\n    var coef = _ref6.coef,\n        bias = _ref6.bias,\n        val = _ref6.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  mongoFormatFunc: function mongoFormatFunc(_ref7) {\n    var coef = _ref7.coef,\n        bias = _ref7.bias,\n        val = _ref7.val;\n    return {\n      \"$sum\": [{\n        \"$multiply\": [coef, val]\n      }, bias]\n    };\n  },\n  jsonLogic: function jsonLogic(_ref8) {\n    var coef = _ref8.coef,\n        bias = _ref8.bias,\n        val = _ref8.val;\n    return {\n      \"+\": [{\n        \"*\": [coef, val]\n      }, bias]\n    };\n  },\n  jsonLogicImport: function jsonLogicImport(v) {\n    var coef = v[\"+\"][0][\"*\"][0];\n    var val = v[\"+\"][0][\"*\"][1];\n    var bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"]\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"]\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"]\n    }\n  }\n};\nexports.LINEAR_REGRESSION = LINEAR_REGRESSION;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/config/funcs.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","UPPER","RELATIVE_DATETIME","NOW","LOWER","LINEAR_REGRESSION","_moment","label","returnType","jsonLogic","jsonLogicCustomOps","now","Date","spelFunc","sqlFormatFunc","mongoFormatFunc","formatFunc","renderBrackets","renderSeps","_ref","date","op","val","dim","jsonLogicImport","v","Math","abs","date_add","add","toDate","_ref2","concat","parseInt","replace","_ref3","args","type","defaultValue","func","valueSources","mainWidgetProps","customProps","showSearch","fieldSettings","listValues","plus","minus","min","day","week","month","year","mongoFunc","toLowerCase","str","toUpperCase","_ref4","_","coef","bias","_ref5","spelFormatFunc","_ref6","_ref7","_ref8"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPPER = exports.RELATIVE_DATETIME = exports.NOW = exports.LOWER = exports.LINEAR_REGRESSION = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: function now() {\n      return new Date();\n    }\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: function sqlFormatFunc() {\n    return \"NOW()\";\n  },\n  mongoFormatFunc: function mongoFormatFunc() {\n    return new Date();\n  },\n  formatFunc: function formatFunc() {\n    return \"NOW\";\n  }\n};\nexports.NOW = NOW;\nvar RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: function jsonLogic(_ref) {\n    var date = _ref.date,\n        op = _ref.op,\n        val = _ref.val,\n        dim = _ref.dim;\n    return {\n      \"date_add\": [date, val * (op == \"minus\" ? -1 : +1), dim]\n    };\n  },\n  jsonLogicImport: function jsonLogicImport(v) {\n    var date = v[\"date_add\"][0];\n    var val = Math.abs(v[\"date_add\"][1]);\n    var op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    var dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: function date_add(date, val, dim) {\n      return (0, _moment[\"default\"])(date).add(val, dim).toDate();\n    }\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: function sqlFormatFunc(_ref2) {\n    var date = _ref2.date,\n        op = _ref2.op,\n        val = _ref2.val,\n        dim = _ref2.dim;\n    return \"DATE_ADD(\".concat(date, \", INTERVAL \").concat(parseInt(val) * (op == \"minus\" ? -1 : +1), \" \").concat(dim.replace(/^'|'$/g, \"\"), \")\");\n  },\n  mongoFormatFunc: null,\n  //todo: support?\n  //todo: spel\n  formatFunc: function formatFunc(_ref3) {\n    var date = _ref3.date,\n        op = _ref3.op,\n        val = _ref3.val,\n        dim = _ref3.dim;\n    return !val ? date : \"\".concat(date, \" \").concat(op == \"minus\" ? \"-\" : \"+\", \" \").concat(val, \" \").concat(dim);\n  },\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {\n        func: \"NOW\",\n        args: []\n      },\n      valueSources: [\"func\", \"field\"]\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\"\n        }\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"]\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\"\n        }\n      }\n    }\n  }\n};\nexports.RELATIVE_DATETIME = RELATIVE_DATETIME;\nvar LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: function toLowerCase(str) {\n      return str.toLowerCase();\n    }\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"]\n    }\n  }\n};\nexports.LOWER = LOWER;\nvar UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: function toUpperCase(str) {\n      return str.toUpperCase();\n    }\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"]\n    }\n  }\n};\nexports.UPPER = UPPER;\nvar LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: function formatFunc(_ref4, _) {\n    var coef = _ref4.coef,\n        bias = _ref4.bias,\n        val = _ref4.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  sqlFormatFunc: function sqlFormatFunc(_ref5) {\n    var coef = _ref5.coef,\n        bias = _ref5.bias,\n        val = _ref5.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  spelFormatFunc: function spelFormatFunc(_ref6) {\n    var coef = _ref6.coef,\n        bias = _ref6.bias,\n        val = _ref6.val;\n    return \"(\".concat(coef, \" * \").concat(val, \" + \").concat(bias, \")\");\n  },\n  mongoFormatFunc: function mongoFormatFunc(_ref7) {\n    var coef = _ref7.coef,\n        bias = _ref7.bias,\n        val = _ref7.val;\n    return {\n      \"$sum\": [{\n        \"$multiply\": [coef, val]\n      }, bias]\n    };\n  },\n  jsonLogic: function jsonLogic(_ref8) {\n    var coef = _ref8.coef,\n        bias = _ref8.bias,\n        val = _ref8.val;\n    return {\n      \"+\": [{\n        \"*\": [coef, val]\n      }, bias]\n    };\n  },\n  jsonLogicImport: function jsonLogicImport(v) {\n    var coef = v[\"+\"][0][\"*\"][0];\n    var val = v[\"+\"][0][\"*\"][1];\n    var bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"]\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"]\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"]\n    }\n  }\n};\nexports.LINEAR_REGRESSION = LINEAR_REGRESSION;"]},"metadata":{},"sourceType":"script"}