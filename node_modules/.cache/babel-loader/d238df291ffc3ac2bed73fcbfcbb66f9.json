{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\JobAllocation.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { toast } from 'react-toastify';\nimport { convertDateValuetoString, rearrangeDateFormat, constructOptionList, getControlMap, sortData, getSameRecordFromTwoArrays, showEsign, convertDateTimetoStringDBFormat, validatePhoneNumber } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\nimport { updateStore, callService, crudMaster, validateEsignCredential, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation, getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getRescheduleTestWise, getInstrument, getUsers, ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo, filterTransactionList } from '../../actions';\nimport JobAllocationFilter from './JobAllocationFilter';\nimport SplitterLayout from \"react-splitter-layout\";\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { transactionStatus, SideBarSeqno, SideBarTabIndex, designProperties } from '../../components/Enumeration';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync, faEye, faLink, faChevronRight, faComments, faClock } from '@fortawesome/free-solid-svg-icons';\nimport { ContentPanel } from '../../components/App.styles';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { ReactComponent as ReceivedInLab } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/receivedlab.svg\";\nimport { ReactComponent as Allotted } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotted.svg\";\nimport { ReactComponent as AnotherUser } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotanotheruser.svg\";\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { ReactComponent as Analystcalendar } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Analystcalendar.svg\";\nimport { ReactComponent as Instrumentcalendar } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/instrumentcalendar.svg\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport AddJobAllocation from './AddJobAllocation';\nimport { Scheduler, DayView, WeekView, MonthView } from '@progress/kendo-react-scheduler';\nimport AllotAnotherUser from './AllotAnotherUser';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass JobAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSamplePageChange = e => {\n      this.setState({\n        sampleskip: e.skip,\n        sampletake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subsampleskip: e.skip,\n        subsampletake: e.take\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n          if (activeTestTab === \"IDS_TESTVIEW\") {\n            let transstatus = JASelectedTest.map(item => item.ntransactionstatus).join(\",\");\n\n            if (transstatus.includes(\"20\")) {\n              let inputData = {\n                masterData: this.props.Login.masterData,\n                JASelectedTest: JASelectedTest,\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n                userinfo: this.props.Login.userInfo,\n                activeTestKey: activeTestTab,\n                screenName: activeTestTab,\n                testCommentDataState: this.state.testCommentDataState,\n                testAttachmentDataState: this.state.testAttachmentDataState,\n                testViewDataState: this.state.testViewDataState,\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n                activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n              };\n              this.props.getTestChildTabDetailJobAllocation(inputData, true);\n            } else {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTALLOTTEST\"\n              }));\n            }\n          } else {\n            let inputData = {\n              masterData: this.props.Login.masterData,\n              JASelectedTest: JASelectedTest,\n              ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n              npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n              userinfo: this.props.Login.userInfo,\n              activeTestKey: activeTestTab,\n              screenName: activeTestTab,\n              testCommentDataState: this.state.testCommentDataState,\n              testAttachmentDataState: this.state.testAttachmentDataState,\n              testViewDataState: this.state.testViewDataState,\n              activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n              activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n            };\n            this.props.getTestChildTabDetailJobAllocation(inputData, true);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subsampleCommentDataState: this.state.subsampleCommentDataState,\n            subsampleAttachmentDataState: this.state.subsampleAttachmentDataState\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.JASelectedSample,\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      }\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      }\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status != \"click\") {\n        if (index === SideBarTabIndex.ATTACHMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.COMMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTCOMMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.TESTVIEW) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTVIEW\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.ANALYSTCALENDAR) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_ANALYSTCALENDAR\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else {\n          if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n                activeTabId: id\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName === \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1542,\n          columnNumber: 17\n        }\n      }) : screenName === \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 25\n        }\n      }) : screenName === \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0 ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {},\n        SingleItem: this.state.SingleItem,\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.JASelectedSample,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_SAMPLEGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1554,\n          columnNumber: 37\n        }\n      }) : screenName === \"IDS_ALLOTTEDTEST\" ? this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0 ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {},\n        SingleItem: this.state.testItem,\n        screenName: \"IDS_TESTVIEW\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        primaryKeyField: \"ntransactiontestcode\",\n        selectedSample: this.props.Login.masterData.TestView,\n        dataState: this.state.testGridDataState,\n        dataStateChange: this.testGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicTestGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_TESTGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 41\n        }\n      }) // : screenName === \"IDS_ANALYSTCALENDAR\" ?\n      //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //         <DayView numberOfDays={3} />\n      //         <WeekView />\n      //         <MonthView />   \n      //     </Scheduler>        \n      : \"\";\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake\n      } = this.state;\n      let testList = this.props.Login.masterData.JA_TEST || [];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.TEST,\n        screenName: \"IDS_TESTATTACHMENTS\",\n        selectedMaster: \"JASelectedTest\",\n        onSaveClick: this.onAttachmentSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"dcreateddate\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.JASelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658,\n          columnNumber: 62\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: this.props.Login.masterData.JASelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JASelectedSample\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        masterData: this.props.Login.masterData,\n        isTestComment: false,\n        masterList: this.props.Login.masterData.JASelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subsampleCommentDataState,\n        dataStateChange: this.subsampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1809,\n          columnNumber: 56\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.JASelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.sampleCommentDataState,\n        dataStateChange: this.sampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JASelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1854,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTVIEW\":\n          this.setState({\n            testViewDataState: event.testViewDataState\n          });\n          break;\n\n        default:\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.subsampleDataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subsampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLECOMMENTS\":\n          this.setState({\n            sampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEATTACHMENTS\":\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.testGridDataStateChange = event => {\n      this.setState({\n        testGridDataState: event.dataState\n      });\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onSampleTabChange = tabProps => {\n      const activeSampleTab = tabProps.screenName;\n\n      if (activeSampleTab !== this.props.Login.activeSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSample: this.props.Login.masterData.JASelectedSample,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSampleTab,\n          activeSampleTab\n        };\n        this.props.getSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onSubSampleTabChange = tabProps => {\n      const activeSubSampleTab = tabProps.screenName;\n\n      if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSubSampleTab,\n          activeSubSampleTab,\n          subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\n          subSampleCommentDataState: this.state.subsampleCommentDataState\n        };\n        this.props.getSubSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onTestTabChange = tabProps => {\n      const activeTestKey = tabProps.screenName;\n\n      if (activeTestKey !== this.props.Login.activeTestKey) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\n            JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\n            userinfo: this.props.Login.userInfo,\n            activeTestKey: activeTestKey,\n            screenName: activeTestKey,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getTestChildTabDetailJobAllocation(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake,\n        sampleskip,\n        sampletake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\n      sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n      }\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n      if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestComments(saveParam, selectedTestList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleComments(saveParam, acceptList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleComments(saveParam, acceptList);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultSampleTypeValue: comboData.item\n            };\n            this.props.getRegTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultRegTypeValue: comboData.item\n            };\n            this.props.getRegSubTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                defaultRegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getAppConfigVersionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'napprovalconfigversioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\n            inputParamData = {\n              nflag: 5,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode\n            };\n            this.props.getFilterStatusSectionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\n            inputParamData = {\n              nflag: 6,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultUserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              //ntransactionstatus: JSON.stringify(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus),\n              ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus\n            };\n            this.props.getSectionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntransactionstatus') {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              nflag: 7,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultFilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\n            };\n            this.props.getFilterStatusJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultTestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultDesignTemplateMappingValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode\n            };\n            this.props.getTestStatusJobAllocation(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.handleFilterDateChange = (dateName, dateValue) => {\n      let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          fromdate: String(fromdate),\n          todate: String(todate),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getAppConfigVersionJobAllocation(inputParam);\n    };\n\n    this.onReload = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue;\n      let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue;\n      let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue;\n      let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue;\n      let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue;\n      let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue;\n      let defaultTestValue = this.props.Login.masterData.realTestValue;\n      let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        defaultSampleTypeValue,\n        defaultRegTypeValue,\n        defaultRegSubTypeValue,\n        defaultFilterStatusValue,\n        defaultApprovalVersionValue,\n        defaultUserSectionValue,\n        defaultTestValue,\n        defaultDesignTemplateMappingValue\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3,\n        ntype: 2\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          sampleskip: this.state.sampleskip,\n          sampletake: this.state.sampletake,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue;\n      let realTestValue = this.props.Login.masterData.defaultTestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3,\n        ntype: 2\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.CancelStatus = cancelId => {\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n      if (JASelectedTest && JASelectedTest.length > 0) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let inputParam = {};\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\n          //nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\n          ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          ntransactiontestcode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: cancelId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          checkBoxOperation: 3,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n          activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n          activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n        };\n        inputParam = {\n          inputData: Map,\n          postParamList: this.postParamList,\n          classUrl: \"joballocation\",\n          operation: 'cancel',\n          methodUrl: \"Test\"\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'cancel'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.CancelTestWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onJobAllocationTestWise = action => {\n      if (action.scontrolname === \"Analyst Calendar\") {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let inputParam = {};\n        let Map = {\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: action.ncontrolcode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          operation: \"ViewAnalystCalendar\",\n          openModal: true\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.ViewAnalystCalendar(inputParam);\n      } else if (action.scontrolname === \"Instrument Calendar\") {}\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputParam = {};\n\n      if (this.props.Login.operation === \"AllotJob\") {\n        inputParam = this.onSaveAllotJob(saveType, formRef);\n      } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n        inputParam = this.onSaveAllotAnotherUser(saveType, formRef);\n      } else if (this.props.Login.operation === \"Reschedule\") {\n        inputParam = this.onSaveReschedule(saveType, formRef);\n      }\n    };\n\n    this.onSaveAllotJob = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"allotjobdata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"Instrument\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"allotjobuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      JobAllocationData[\"ssectioncode\"] = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleKey\"] = \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleKey\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestKey\"] = \"IDS_TESTATTACHMENTS\";\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        this.props.AllotJobAction(inputParam);\n      }\n    };\n\n    this.onSaveAllotAnotherUser = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"anotheruserdata\"] = {\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"anotheruseruidata\"] = {\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"anotheruserdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"anotheruseruidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      JobAllocationData[\"ssectioncode\"] = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = -1;\n      JobAllocationData[\"ninstrumentcode\"] = -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"activeSampleKey\"] = \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleKey\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestKey\"] = \"IDS_TESTATTACHMENTS\";\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        this.props.AllotAnotherUserAction(inputParam);\n      }\n    };\n\n    this.onSaveReschedule = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"rescheduledata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"Instrument\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"reschdeuleuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"rescheduledata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"reschdeuleuidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      JobAllocationData[\"ssectioncode\"] = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleKey\"] = \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleKey\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestKey\"] = \"IDS_TESTATTACHMENTS\";\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        this.props.RescheduleJobAction(inputParam);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isOpen = this.props.Login.isOpen;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"AllotAnotherUser\" || this.props.Login.operation === \"Reschedule\") {\n          loadEsign = false;\n          openModal = true;\n          isOpen = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        } else {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          isOpen\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {}; //if (comboData != null) {\n\n      if (fieldName === \"ntechniquecode\") {\n        selectedRecord[\"ntechniquecode\"] = comboData;\n\n        if (comboData != null) {\n          this.props.getUsers(this.state.selectedRecord.ntechniquecode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n        } else {\n          this.setState({\n            selectedRecord\n          });\n        }\n      } else if (fieldName === \"nusercode\") {\n        selectedRecord[\"nusercode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ninstrumentcatcode\") {\n        selectedRecord[\"ninstrumentcatcode\"] = comboData;\n        this.props.getInstrument(this.state.selectedRecord.ninstrumentcatcode.value, selectedRecord.ninstrumentcatcode.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n      } else if (fieldName === \"ninstrumentcode\") {\n        selectedRecord[\"ninstrumentcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"nuserperiodcode\") {\n        selectedRecord[\"nuserperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ninstrumentperiodcode\") {\n        selectedRecord[\"ninstrumentperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } //}\n\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\") {\n        if (event.target.value !== \"\") {\n          event.target.value = validatePhoneNumber(event.target.value);\n          selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.getCommentsCombo = event => {\n      if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\n        this.props.getCommentsCombo(...event);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTESTTOADDCOMMENTS\"\n        }));\n      }\n    };\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleteted\n    }) => {\n      let scheduleData = {};\n      let postParam = undefined;\n      let formRef = {};\n\n      if (created.length > 0) {\n        const aa = created.concat(created.map(item => Object.assign({}, item, {})));\n        scheduleData[\"allotjob\"] = {\n          \"jsondata\": aa[0]\n        };\n        formRef = {\n          \"current\": \"form\"\n        };\n        let saveType = 1;\n        const inputParam = {\n          classUrl: \"joballocation\",\n          methodUrl: \"AssignJob\",\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          operation: \"create\",\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      } else if (updated.length > 0) {} else if (deleteted.length > 0) {}\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      sampleAttachmentDataState: {},\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      subsampleAttachmentDataState: {},\n      subsampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testAttachmentDataState: {},\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testViewDataState: {},\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      filterSampleParam: {},\n      filterSubSampleParam: {},\n      filterTestParam: {},\n      operation: \"\",\n      showTest: true,\n      showSample: false,\n      showSubSample: false,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      testItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      TestList: [],\n      DynamicDesignMappingList: [],\n      sampleskip: 0,\n      sampletake: this.props.Login.settings && this.props.Login.settings[3],\n      subsampleskip: 0,\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 28.6,\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      DynamicSampleColumns: [],\n      DynamicSubSampleColumns: [],\n      DynamicTestColumns: [],\n      enableAutoClick: false,\n      enablePropertyPopup: false,\n      propertyPopupWidth: \"60\",\n      data: [],\n      subSampleGetParam: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\n    let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\n    let JA_TestList = this.props.Login.masterData.JA_TEST ? this.props.Login.masterData.JA_TEST : [];\n    const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\n    const allotId = this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\n    const anotherUserId = this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\n    const rescheduleId = this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\n    const cancelId = this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\n    let subSampleGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n      activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n      checkBoxOperation: 3\n    };\n    let testGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\"),\n      activeTestKey: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      activeSampleKey: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\n      activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n    };\n    let testChildGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestKey: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n    };\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"nregistrationsectioncode\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      fecthInputObject: { ...this.state.subSampleGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSample\",\n      inputListName: \"JA_SAMPLE\",\n      updatedListname: \"JASelectedSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/getJobAllocationTestDetails\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSubSample\",\n      inputListName: \"JA_SUBSAMPLE\",\n      updatedListname: \"JASelectedSubSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedTest\",\n      updatedListname: \"JASelectedTest\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        searchTestRef: this.searchTestRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        testGridDataState: this.state.testGridDataState\n      },\n      selectedObject: \"JASelectedTest\",\n      inputListName: \"JA_TEST\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }];\n\n    if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\") {\n      if (this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA) {\n        this.validationColumnList = [{\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else {\n        this.validationColumnList = [{\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n          \"dataField\": \"ninstrumentcatcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_INSTRUMENT\",\n          \"dataField\": \"ninstrumentcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"dinstblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"sinstrumentholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"ninstrumentperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      }\n    } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_USERS\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_STARTDATETIME\",\n        \"dataField\": \"duserblockfromdatetime\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_HOLDDURATION\",\n        \"dataField\": \"suserholdduration\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PERIOD\",\n        \"dataField\": \"nuserperiodcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    }\n\n    const mandatoryFields = [];\n\n    if (this.validationColumnList && this.validationColumnList.length > 0) {\n      this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    }\n\n    let breadCrumbData = [];\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) {\n      breadCrumbData = [{\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      }, // {\n      //     \"label\": \"IDS_SAMPLETYPE\",\n      //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\n      //              this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n      // },\n      {\n        \"label\": \"IDS_REGTYPE\",\n        \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGSUBTYPE\",\n        \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n      }, {\n        \"label\": \"IDS_DESIGNTEMPLATE\",\n        \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.DesignTemplateMappingValue.sregtemplatename : \"NA\"\n      }, {\n        \"label\": \"IDS_TESTSTATUS\",\n        \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\n      }, // {\n      //     \"label\": \"IDS_CONFIGVERSION\",\n      //     \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n      //              this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n      // },\n      {\n        \"label\": \"IDS_SECTION\",\n        \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_TEST\",\n        \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n      }];\n    } else {\n      breadCrumbData = [{\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      }, // {\n      //     \"label\": \"IDS_SAMPLETYPE\",\n      //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\n      //              this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n      // },\n      {\n        \"label\": \"IDS_REGTYPE\",\n        \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGSUBTYPE\",\n        \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n      }, {\n        \"label\": \"IDS_TESTSTATUS\",\n        \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\n      }, // {\n      //     \"label\": \"IDS_CONFIGVERSION\",\n      //     \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n      //              this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n      // },\n      {\n        \"label\": \"IDS_SECTION\",\n        \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_TEST\",\n        \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n      }];\n    }\n\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      masterList: this.props.Login.masterData.searchedTest || JA_TestList,\n      selectedMaster: this.props.Login.masterData.JASelectedTest,\n      primaryKeyField: \"ntransactiontestcode\",\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetailJobAllocation(event, status);\n        this.changePropertyView(2, event, \"click\");\n      },\n      inputParam: testChildGetJAParam,\n      additionalParam: [],\n      mainField: \"stestsynonym\",\n      selectedListName: \"JASelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      subFieldsLabel: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      needMultiSelect: true,\n      subFields: this.state.testListColumns || [],\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      showStatusName: true,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTest\",\n      searchRef: this.searchTestRef,\n      filterParam: this.state.filterTestParam,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      childTabsKey: [\"TestView\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"],\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"JA_SAMPLE\",\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTJOB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(allotId) === -1,\n        onClick: () => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Allotted, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTANOTHERUSER\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(anotherUserId) === -1,\n        onClick: () => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(AnotherUser, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RESCHEDULE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(rescheduleId) === -1,\n        onClick: () => this.RescheduleStatus(rescheduleId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faClock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(cancelId) === -1,\n        onClick: () => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Reject, {\n        className: \"custom_icons\",\n        width: \"15\",\n        height: \"15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 61\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 37\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0 sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJson, {\n        cardHead: 94,\n        masterList: this.props.Login.masterData.searchedSubSample || JA_SubSampleList,\n        selectedMaster: this.props.Login.masterData.JASelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\",\n        getMasterDetail: (event, status) => {\n          this.props.getJobAllocationTestDetail(event, status);\n          this.state.enableAutoClick && this.changePropertyView(2, event, \"click\");\n        },\n        inputParam: testGetJAParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        searchRef: this.searchSubSampleRef,\n        filterParam: { ...this.state.filterSubSampleParam,\n          childRefs: [{\n            ref: this.searchTestRef,\n            childFilteredListName: \"searchedTest\"\n          }]\n        },\n        additionalParam: ['napprovalversioncode'],\n        showStatusLink: true,\n        showStatusName: false,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        mainField: \"ssamplearno\",\n        selectedListName: \"JASelectedSubSample\",\n        objectName: \"subsample\",\n        listName: \"IDS_SUBSAMPLE\",\n        needValidation: true,\n        validationKey: \"napprovalversioncode\",\n        validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n        subFields: this.state.DynamicSubSampleColumns,\n        skip: this.state.subsampleskip,\n        take: this.state.subsampletake,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"stransdisplaystatus\",\n        needMultiSelect: true,\n        selectionColorField: \"scolorhexcode\",\n        subFieldsLabel: false,\n        handlePageChange: this.handleSubSamplePageChange,\n        selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n        childTabsKey: [\"RegistrationAttachment\", \"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"],\n        actionIcons: [{}],\n        needFilter: false,\n        commonActions: /*#__PURE__*/React.createElement(React.Fragment, null),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJson, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedSample || JA_SampleList,\n      selectedMaster: this.props.Login.masterData.JASelectedSample,\n      primaryKeyField: \"nregistrationsectioncode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (event, status) => {\n        this.props.getJobAllocationSubSampleDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(4, event, \"click\");\n      },\n      inputParam: subSampleGetJAParam,\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sarno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"JASelectedSample\",\n      searchListName: \"searchedSample\",\n      searchRef: this.searchSampleRef,\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      needMultiSelect: true,\n      showStatusBlink: true,\n      filterParam: { ...this.state.filterSampleParam,\n        childRefs: [{\n          ref: this.searchSubSampleRef,\n          childFilteredListName: \"searchedSubSample\"\n        }, {\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      subFieldsLabel: false,\n      handlePageChange: this.handleSamplePageChange,\n      skip: this.state.sampleskip,\n      take: this.state.sampletake,\n      childTabsKey: [\"RegistrationAttachment\", \"RegistrationComment\", \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"],\n      actionIcons: [],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RECEIVEINLAB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(receiveId) === -1,\n        onClick: () => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(ReceivedInLab, {\n        className: \"custom_icons\",\n        width: \"25\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        \"data-for\": \"tooltip-common-wrap\",\n        onClick: () => this.onReload(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 61\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(JobAllocationFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.defaultSampleTypeValue || {},\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.defaultRegTypeValue || {},\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue || {},\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.defaultApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.defaultUserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.defaultTestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.defaultFilterStatusValue || [],\n          DynamicDesignMapping: this.state.DynamicDesignMappingList || [],\n          DesignTemplateMappingValue: this.props.Login.masterData.defaultDesignTemplateMappingValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleFilterDateChange: this.handleFilterDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 68\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true || this.state.showSubSample === true ? {\n        display: \"block\",\n        background: \"#FFFF\"\n      } : {\n        display: \"none\",\n        background: \"#FFFF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 41\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_POPUPNAV\"\n      }),\n      type: \"switch\",\n      name: \"PopupNav\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enablePropertyPopup,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enablePropertyPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      hideSave: this.props.Login.operation === \"IDS_VIEWANALYSTCALENDAR\" ? true : false,\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      showSaveContinue: this.state.showSaveContinue,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 28\n        }\n      }) : this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\" ? /*#__PURE__*/React.createElement(AddJobAllocation, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Instrument: this.props.Login.Instrument,\n        InstrumentPeriod: this.props.Login.InstrumentPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 28\n        }\n      }) : this.props.Login.operation === \"AllotAnotherUser\" ? /*#__PURE__*/React.createElement(AllotAnotherUser, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 29\n        }\n      }) //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\n      //         <>\n      //             <Row>\n      //                 <Col md={12}>\n      //                 <FormSelectSearch\n      //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\n      //                     isSearchable={true}\n      //                     name={\"nusercode\"}\n      //                     isDisabled={false}\n      //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //                     isMandatory={true}\n      //                     isClearable={false}\n      //                     options={this.props.Login.Users}\n      //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\n      //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\n      //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\n      //                     closeMenuOnSelect={true}\n      //                 />\n      //                 </Col>\n      //             </Row>\n      //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\n      //                 <WeekView />\n      //                 <MonthView />\n      //             </Scheduler>\n      //             {/* <AnalystCalendar\n      //                 UserData={this.props.Login.masterData.UserData}\n      //                 operation={this.props.Login.operation}\n      //                 inputParam={this.props.inputParam}\n      //                 userInfo={this.props.Login.userInfo}\n      //             /> */}\n      //         </>                             \n      //    ): (\n      : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  ReceiveinLabStatus(receiveId, sampleskip, sampletake) {\n    let sampleList = [];\n\n    if (this.props.Login.masterData.searchedSample !== undefined) {\n      sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\n    } else {\n      sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\n    }\n\n    let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n    if (receiveList && receiveList.length > 0) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let bflag = true;\n      let sampleList = this.props.Login.masterData.JASelectedSample;\n      sampleList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (tempsection !== sectionvalue && tempsection !== 0) {\n          bflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (bflag) {\n        let JASelectedSample = this.props.Login.masterData.JASelectedSample;\n        let JASelectedSubSample = this.props.Login.masterData.JASelectedSubSample;\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let inputParam = {};\n        let Map = {\n          nflag: 3,\n          ncheck: 1,\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          //ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\n          ntransactionstatus: \"0\",\n          //nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode.toString(),\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedSubSample ? JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          nsectioncode: JASelectedSample ? JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n          ncontrolcode: receiveId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          checkBoxOperation: 3,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          activeSampleKey: \"IDS_SAMPLEATTACHMENTS\",\n          activeSubSampleKey: \"IDS_SUBSAMPLEATTACHMENTS\",\n          activeTestKey: \"IDS_TESTATTACHMENTS\"\n        };\n        inputParam = {\n          inputData: Map,\n          postParamList: this.postParamList,\n          classUrl: \"joballocation\",\n          operation: 'Create',\n          methodUrl: \"ReceiveinLab\"\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'Create'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.ReceiveinLabStatusWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONSAMPLES\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTSAMPLES\"\n      }));\n    }\n  }\n\n  checkRegisterSamples(sample) {\n    return sample.ntransactionstatus === transactionStatus.REGISTER;\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      testListColumns,\n      testSearchField,\n      subsampleSearchField,\n      sampleSearchField,\n      SingleItem,\n      testItem,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      testAttachmentDataState,\n      testCommentDataState,\n      testViewDataState,\n      activeTabIndex,\n      activeTabId,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      DynamicDesignMappingList,\n      sampleskip,\n      sampletake,\n      subsampleskip,\n      subsampletake,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicTestGridMoreField,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridMoreField,\n      data\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n          group: [{\n            field: 'sarno'\n          }]\n        };\n        testAttachmentDataState = dataState;\n        testCommentDataState = dataState;\n        testViewDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\n      const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\n      bool = true;\n      sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip;\n      sampletake = this.props.Login.sampletake || sampletake;\n      subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip;\n      subsampletake = this.props.Login.subsampletake || subsampletake;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        stransdisplaystatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\n        testAttachmentDataState = this.props.Login.testAttachmentDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\n        testViewDataState = this.props.Login.testViewDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem : [];\n      DynamicTestGridMoreField = dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.UserData !== undefined) {\n      if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\n        for (let i = 0; i < this.props.Login.masterData.UserData.length; i++) {\n          data.push(this.props.Login.masterData.UserData[i].jsonuidata);\n        }\n\n        data = data.map(dataItem => ({\n          start: parseAdjust(dataItem.UserStartDate),\n          end: parseAdjust(dataItem.UserEndDate),\n          title: dataItem.Comments\n        }));\n        bool = true; //this.setState({data:data});\n      }\n    }\n\n    const filterSampleParam = {\n      inputListName: \"JA_SAMPLE\",\n      selectedObject: \"JASelectedSample\",\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      sampleskip: 0,\n      subsampleskip: 0,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        // npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        ssectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\n        checkBoxOperation: 3,\n        activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: sampleSearchField,\n      changeList: [\"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSample\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"JA_SUBSAMPLE\",\n      selectedObject: \"JASelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/getJobAllocationTestDetails\",\n      sampleskip: this.state.sampleskip,\n      subsampleskip: 0,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        checkBoxOperation: 3,\n        npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        ssectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\n        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n        activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: subsampleSearchField,\n      changeList: [\"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterTestParam = {\n      inputListName: \"JA_TEST\",\n      selectedObject: \"JASelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      sampleskip: this.state.sampleskip,\n      subsampleskip: this.state.subsampleskip,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        checkBoxOperation: 3,\n        activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: testSearchField,\n      changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\n    };\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        testListColumns,\n        testSearchField,\n        subsampleSearchField,\n        sampleSearchField,\n        SingleItem,\n        testItem,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        testAttachmentDataState,\n        testCommentDataState,\n        testViewDataState,\n        activeTabIndex,\n        activeTabId,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        DynamicDesignMappingList,\n        sampleskip,\n        sampletake,\n        subsampleskip,\n        subsampletake,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicTestGridMoreField,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridMoreField,\n        data,\n        filterTestParam,\n        filterSubSampleParam,\n        filterSampleParam\n      });\n    }\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\",\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  AllotJobStatus(allotId, testskip, testtake) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (allotList && allotList.length > 0) {\n      let testList = this.props.Login.masterData.JASelectedTest;\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let sectionflag = true;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          sectionflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n      let tempinstrument = 0;\n      let instrumentvalue = 0;\n      let instrumentcategoryflag = true;\n      testList.forEach(item => {\n        instrumentvalue = item.ninstrumentcatcode;\n\n        if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\n          instrumentcategoryflag = false;\n        } else {\n          tempinstrument = instrumentvalue;\n        }\n      });\n\n      if (sectionflag) {\n        if (instrumentcategoryflag) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n          let JASelectedSample = this.props.Login.masterData.JASelectedSample;\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          let inputParam = {};\n          let Map = {\n            fromdate: obj.fromDate,\n            todate: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n            ssectioncode: JASelectedSample ? JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n            npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n            ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n            transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n            ntransactiontestcode: 0,\n            ncontrolcode: allotId,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            checkBoxOperation: 3,\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            operation: 'AllotJob'\n          };\n          inputParam = {\n            inputData: Map\n          };\n          this.props.getAllottedTestWise(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  AllotAnotherUserStatus(anotherUserId, testskip, testtake) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (anotherUserList && anotherUserList.length > 0) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let bflag = true;\n      let testList = this.props.Login.masterData.JASelectedTest;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          bflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (bflag) {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let inputParam = {};\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n          nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n          ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ntransactiontestcode: 0,\n          ncontrolcode: anotherUserId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          checkBoxOperation: 3,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          operation: 'AllotAnotherUser'\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.getAllotAnotherUserTestWise(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  RescheduleStatus(rescheduleId, testskip, testtake) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let rescheuleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (rescheuleList && rescheuleList.length > 0) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let sectionflag = true;\n      let testList = this.props.Login.masterData.JASelectedTest;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          sectionflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n      let tempinstrument = 0;\n      let instrumentvalue = 0;\n      let instrumentcategoryflag = true;\n      testList.forEach(item => {\n        instrumentvalue = item.ninstrumentcatcode;\n\n        if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\n          instrumentcategoryflag = false;\n        } else {\n          tempinstrument = instrumentvalue;\n        }\n      });\n\n      if (sectionflag) {\n        if (instrumentcategoryflag) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          let inputParam = {};\n          let Map = {\n            fromdate: obj.fromDate,\n            todate: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n            ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n            npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n            ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n            transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n            ntransactiontestcode: 0,\n            ncontrolcode: rescheduleId,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            checkBoxOperation: 3,\n            AllotAnotherUser: false,\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            operation: 'Reschedule'\n          };\n          inputParam = {\n            inputData: Map\n          };\n          this.props.getRescheduleTestWise(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  getActiveTestURL() {\n    let url = \"attachment/getTestAttachment\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      default:\n        url = \"comments/getTestComment\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  ReceiveinLabStatusWise,\n  getRegTypeJobAllocation,\n  getRegSubTypeJobAllocation,\n  getAppConfigVersionJobAllocation,\n  getFilterStatusJobAllocation,\n  getSectionJobAllocation,\n  getTestStatusJobAllocation,\n  getFilterStatusSectionJobAllocation,\n  getJobAllcationFilterSubmit,\n  getJobAllocationSubSampleDetail,\n  getJobAllocationTestDetail,\n  getTestChildTabDetailJobAllocation,\n  getAllottedTestWise,\n  getAllotAnotherUserTestWise,\n  getRescheduleTestWise,\n  getInstrument,\n  getUsers,\n  ViewAnalystCalendar,\n  CancelTestWise,\n  AllotJobAction,\n  AllotAnotherUserAction,\n  RescheduleJobAction,\n  getSubSampleChildTabDetail,\n  getSampleChildTabDetail,\n  getCommentsCombo,\n  getAttachmentCombo,\n  filterTransactionList\n})(injectIntl(JobAllocation));\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/JobAllocation.jsx"],"names":["React","connect","injectIntl","BreadcrumbComponent","toast","convertDateValuetoString","rearrangeDateFormat","constructOptionList","getControlMap","sortData","getSameRecordFromTwoArrays","showEsign","convertDateTimetoStringDBFormat","validatePhoneNumber","ListWrapper","Button","Col","Row","Card","Nav","updateStore","callService","crudMaster","validateEsignCredential","ReceiveinLabStatusWise","getRegTypeJobAllocation","getRegSubTypeJobAllocation","getAppConfigVersionJobAllocation","getFilterStatusJobAllocation","getSectionJobAllocation","getTestStatusJobAllocation","getFilterStatusSectionJobAllocation","getJobAllcationFilterSubmit","getJobAllocationSubSampleDetail","getJobAllocationTestDetail","getTestChildTabDetailJobAllocation","getAllottedTestWise","getAllotAnotherUserTestWise","getRescheduleTestWise","getInstrument","getUsers","ViewAnalystCalendar","CancelTestWise","AllotJobAction","AllotAnotherUserAction","RescheduleJobAction","getSubSampleChildTabDetail","getSampleChildTabDetail","getCommentsCombo","getAttachmentCombo","filterTransactionList","JobAllocationFilter","SplitterLayout","TransactionListMasterJson","TransactionListMasterJsonView","transactionStatus","SideBarSeqno","SideBarTabIndex","designProperties","DEFAULT_RETURN","ProductList","FontAwesomeIcon","faSync","faEye","faLink","faChevronRight","faComments","faClock","ContentPanel","CustomSwitch","SlideOutModal","Esign","AddJobAllocation","Scheduler","DayView","WeekView","MonthView","AllotAnotherUser","SampleInfoView","SampleInfoGrid","CustomTabs","Attachments","Comments","onSaveSampleAttachment","onSaveTestAttachment","onSaveSubSampleAttachment","onSaveSampleComments","onSaveTestComments","onSaveSubSampleComments","mapStateToProps","state","Login","JobAllocation","Component","constructor","props","handleSamplePageChange","e","setState","sampleskip","skip","sampletake","take","handleSubSamplePageChange","subsampleskip","subsampletake","handleTestPageChange","testskip","testtake","paneSizeChange","d","splitChangeWidthPercentage","onTabChange","tabProps","activeTestTab","screenName","tabseqno","tabSequence","TEST","masterData","JASelectedTest","length","transstatus","map","item","ntransactionstatus","join","includes","inputData","ntransactiontestcode","String","npreregno","JASelectedSample","userinfo","userInfo","activeTestKey","testCommentDataState","testAttachmentDataState","testViewDataState","activeTabIndex","activeTabId","warn","intl","formatMessage","id","SUBSAMPLE","selectedSubSample","JASelectedSubSample","ntransactionsamplecode","activeSubSampleTab","subsampleCommentDataState","subsampleAttachmentDataState","selectedSample","activeSampleTab","changePropertyViewClose","updateInfo","typeName","data","undefined","changePropertyView","index","event","status","window","innerWidth","enableAutoClick","ATTACHMENTS","COMMENTS","TESTVIEW","ANALYSTCALENDAR","sideNavDetail","testList","searchedTests","JA_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","test","attachmentTabDetail","commentTabDetail","SingleItem","sampleGridDataState","sampleGridDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","inputParam","TestView","testItem","testGridDataState","testGridDataStateChange","DynamicTestGridItem","DynamicTestGridMoreField","attachmentTabMap","Map","sample","subsampleList","JA_SUBSAMPLE","selectedSubSampleList","set","onAttachmentSaveClick","userRoleControlRights","RegistrationTestAttachment","deleteAttachment","nneedsubsample","VALUE","methodUrl","esignRights","masterList","realRegSubTypeValue","RegistrationSampleAttachment","viewAttachment","attachmentskip","attachmenttake","settings","parseInt","SAMPLE","RegistrationAttachment","commentTabMap","onCommentsSaveClick","RegistrationTestComment","testDataStateChange","operation","ncontrolCode","RegistrationSampleComment","subsampleDataStateChange","RegistrationComment","sampleCommentDataState","sampleDataStateChange","dataState","sampleAttachmentDataState","onInputSwitchOnChange","target","name","enablePropertyPopup","onSampleTabChange","onSubSampleTabChange","subSampleCommentDataState","onTestTabChange","toString","preregno","saveType","formRef","selectedRecord","sampleList","JA_SAMPLE","selectedSampleList","saveParam","selectedMaster","x","nformcode","loadEsign","screenData","isTestComment","searchedSubSample","acceptList","searchedSample","onFilterComboChange","comboData","fieldName","obj","FromDate","ToDate","inputParamData","value","defaultSampleTypeValue","nsampletypecode","nflag","fromdate","fromDate","todate","toDate","defaultRegTypeValue","nregtypecode","defaultRegSubTypeValue","nregsubtypecode","nneedtemplatebasedflow","defaultApprovalVersionValue","napprovalconfigversioncode","napprovalversioncode","RegSubTypeValue","nsectioncode","defaultUserSectionValue","UserSection","defaultFilterStatusValue","FilterStatus","defaultTestValue","ntestcode","defaultDesignTemplateMappingValue","ndesigntemplatemappingcode","dfrom","dto","FilterStatusValue","stransactionstatus","handleFilterDateChange","dateName","dateValue","Date","realRegTypeValue","onReload","realFromDate","realToDate","realSampleTypeValue","realFilterStatusValue","realApprovalVersionValue","realUserSectionValue","realTestValue","realDesignTemplateMappingValue","napprovalconfigcode","section","activeSampleKey","activeSubSampleKey","checkBoxOperation","ntype","stransdisplaystatus","searchSampleRef","searchSubSampleRef","searchTestRef","onFilterSubmit","CancelStatus","cancelId","ssectioncode","postParamList","classUrl","openModal","parentPopUpSize","onJobAllocationTestWise","action","scontrolname","transactiontestcode","onSaveClick","onSaveAllotJob","onSaveAllotAnotherUser","onSaveReschedule","JobAllocationData","allotjob","label","ntechniquecode","nusercode","duserblockfromdatetime","suserholdduration","nuserperiodcode","ninstrumentcatcode","ninstrumentcode","dinstblockfromdatetime","sinstrumentholdduration","ninstrumentperiodcode","scomments","JSON","stringify","displayName","selectedId","searchRef","closeModal","isOpen","validateEsign","sreason","password","handleDateChange","onComboChange","ncalibrationreq","onInputOnChange","onNumericInputOnChange","handleDataChange","created","updated","deleteted","scheduleData","postParam","aa","concat","Object","assign","isClearSearch","createRef","masterStatus","error","oldComboData","filterSampleParam","filterSubSampleParam","filterTestParam","showTest","showSample","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","TestList","DynamicDesignMappingList","sampleSearchField","subsampleSearchField","testSearchField","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","propertyPopupWidth","subSampleGetParam","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","render","JA_SampleList","JA_SubSampleList","JA_TestList","receiveId","allotId","anotherUserId","rescheduleId","subSampleGetJAParam","testGetJAParam","testChildGetJAParam","filteredListName","clearFilter","primaryKeyField","fetchUrl","fecthInputObject","childRefs","ref","childFilteredListName","selectedObject","inputListName","updatedListname","unchangeList","NA","validationColumnList","mandatoryFields","forEach","mandatory","push","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","RegTypeValue","sregsubtypename","sregtemplatename","DesignTemplateMappingValue","ssectionname","UserSectionValue","stestsynonym","TestValue","testDesign","borderBottom","display","searchedTest","split","setting","ALL","indexOf","AllotJobStatus","AllotAnotherUserStatus","RescheduleStatus","mainDesign","marginTop","showFilter","openFilter","closeFilter","ReceiveinLabStatus","JobStatus","background","width","showSaveContinue","Technique","Users","UsersPeriod","InstrumentCategory","Instrument","InstrumentPeriod","currentTime","receiveList","tempsection","sectionvalue","bflag","ncheck","checkRegisterSamples","REGISTER","componentDidUpdate","previousProps","selectedFilter","bool","values","nsubsampleneed","NO","group","field","SampletypeListMap","SampleType","RegistrationTypeListMap","RegistrationType","RegistrationSubTypeListMap","RegistrationSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalConfigVersion","UserSectionListMap","TestListMap","Test","DynamicDesignMappingListMap","DynamicDesignMapping","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","parse","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplesearchfields","subsamplesearchfields","testListFields","testsearchfields","samplegriditem","samplegridmoreitem","testgriditem","testgridmoreitem","sampledisplayfields","testdisplayfields","testlistmoreitems","UserData","i","jsonuidata","dataItem","start","parseAdjust","UserStartDate","end","UserEndDate","title","searchFieldList","changeList","getActiveTestURL","temparray","option","LABEL","slanguagetypecode","allotList","sectionflag","tempinstrument","instrumentvalue","instrumentcategoryflag","subsample","anotherUserList","rescheuleList","url","currentYear","getFullYear","eventDate","date","setFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { toast } from 'react-toastify';\r\nimport { convertDateValuetoString,rearrangeDateFormat,constructOptionList,getControlMap,sortData,getSameRecordFromTwoArrays,showEsign,convertDateTimetoStringDBFormat,validatePhoneNumber} from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Button,Col,Row,Card,Nav } from 'react-bootstrap';\r\nimport {\r\n   updateStore,callService, crudMaster,validateEsignCredential,ReceiveinLabStatusWise,getRegTypeJobAllocation,getRegSubTypeJobAllocation,\r\n   getAppConfigVersionJobAllocation,getFilterStatusJobAllocation,getSectionJobAllocation,getTestStatusJobAllocation,getFilterStatusSectionJobAllocation,\r\n   getJobAllcationFilterSubmit,getJobAllocationSubSampleDetail,getJobAllocationTestDetail,getTestChildTabDetailJobAllocation,getAllottedTestWise,getAllotAnotherUserTestWise,getRescheduleTestWise,getInstrument,getUsers,\r\n   ViewAnalystCalendar,CancelTestWise,AllotJobAction,AllotAnotherUserAction,RescheduleJobAction,getSubSampleChildTabDetail,getSampleChildTabDetail,getCommentsCombo,getAttachmentCombo,filterTransactionList} from '../../actions';\r\nimport JobAllocationFilter from './JobAllocationFilter';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { transactionStatus,SideBarSeqno, SideBarTabIndex,designProperties } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSync,faEye,faLink,  faChevronRight, faComments,faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ReactComponent as ReceivedInLab } from '../../assets/image/receivedlab.svg';\r\nimport { ReactComponent as Allotted } from '../../assets/image/allotted.svg';\r\nimport { ReactComponent as AnotherUser } from '../../assets/image/allotanotheruser.svg';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg';\r\nimport { ReactComponent as Analystcalendar } from '../../assets/image/Analystcalendar.svg';\r\nimport { ReactComponent as Instrumentcalendar} from '../../assets/image/instrumentcalendar.svg';\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../audittrail/Esign\"; \r\nimport AddJobAllocation from './AddJobAllocation';\r\nimport { Scheduler,DayView,WeekView,MonthView } from '@progress/kendo-react-scheduler';\r\nimport AllotAnotherUser from './AllotAnotherUser';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass JobAllocation extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state={\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sampleAttachmentDataState: { },\r\n            sampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            subsampleAttachmentDataState: { },\r\n            subsampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testAttachmentDataState: { },\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testViewDataState :{ },\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            filterSampleParam :{},\r\n            filterSubSampleParam:{},\r\n            filterTestParam :{},\r\n            operation: \"\",\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,           \r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            testItem:[],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            TestList: [],\r\n            DynamicDesignMappingList: [],\r\n            sampleskip: 0,\r\n            sampletake: this.props.Login.settings && this.props.Login.settings[3],\r\n            subsampleskip: 0,\r\n            subsampletake :this.props.Login.settings && this.props.Login.settings[12],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 28.6,\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            DynamicSampleColumns: [],\r\n            DynamicSubSampleColumns : [],\r\n            DynamicTestColumns :[],\r\n            enableAutoClick:false,\r\n            enablePropertyPopup: false,\r\n            propertyPopupWidth: \"60\",\r\n            data:[],\r\n            subSampleGetParam: {},\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\r\n        let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\r\n        let JA_TestList = this.props.Login.masterData.JA_TEST ? this.props.Login.masterData.JA_TEST : [];\r\n        \r\n        const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\r\n        const allotId =   this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\r\n        const anotherUserId =   this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\r\n        const rescheduleId =   this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\r\n        const cancelId =   this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\r\n\r\n\r\n        let subSampleGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            checkBoxOperation: 3\r\n        }\r\n\r\n        let testGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            activeSampleKey: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,           \r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n\r\n        }\r\n\r\n        let testChildGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"nregistrationsectioncode\",\r\n                fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam, \r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSample\",\r\n                inputListName: \"JA_SAMPLE\",\r\n                updatedListname: \"JASelectedSample\",\r\n                unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"SampleType\",\"realRegTypeValue\",\"RegTypeValue\",\"RegType\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"RegSubType\",\r\n                \"realDesignTemplateMappingValue\",\"DesignTemplateMappingValue\",\"DynamicDesignMapping\",\"realFilterStatusValue\",\"FilterStatusValue\",\"FilterStatus\",\r\n                \"realApprovalVersionValue\",\"ApprovalVersionValue\",\"ApprovalVersion\",\"realUserSectionValue\",\"UserSectionValue\",\"UserSection\",\r\n                \"realTestValue\",\"TestValue\",\"Test\",\"fromDate\",\"toDate\"]    \r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"joballocation/getJobAllocationTestDetails\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam, \r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSubSample\",\r\n                inputListName: \"JA_SUBSAMPLE\",\r\n                updatedListname: \"JASelectedSubSample\",\r\n                unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"SampleType\",\"realRegTypeValue\",\"RegTypeValue\",\"RegType\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"RegSubType\",\r\n                \"realDesignTemplateMappingValue\",\"DesignTemplateMappingValue\",\"DynamicDesignMapping\",\"realFilterStatusValue\",\"FilterStatusValue\",\"FilterStatus\",\r\n                \"realApprovalVersionValue\",\"ApprovalVersionValue\",\"ApprovalVersion\",\"realUserSectionValue\",\"UserSectionValue\",\"UserSection\",\r\n                \"realTestValue\",\"TestValue\",\"Test\",\"fromDate\",\"toDate\"]    \r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"JASelectedTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                selectedObject: \"JASelectedTest\",\r\n                inputListName: \"JA_TEST\",\r\n                unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"SampleType\",\"realRegTypeValue\",\"RegTypeValue\",\"RegType\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"RegSubType\",\r\n                \"realDesignTemplateMappingValue\",\"DesignTemplateMappingValue\",\"DynamicDesignMapping\",\"realFilterStatusValue\",\"FilterStatusValue\",\"FilterStatus\",\r\n                \"realApprovalVersionValue\",\"ApprovalVersionValue\",\"ApprovalVersion\",\"realUserSectionValue\",\"UserSectionValue\",\"UserSection\",\r\n                \"realTestValue\",\"TestValue\",\"Test\",\"fromDate\",\"toDate\"]    \r\n                \r\n               \r\n            }\r\n        ];\r\n        \r\n\r\n\r\n        if(this.props.Login.operation=== \"AllotJob\" || this.props.Login.operation=== \"Reschedule\"){\r\n            if(this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA){\r\n                this.validationColumnList =[\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n               ]\r\n            }else{\r\n                this.validationColumnList =[\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"ninstrumentcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"dinstblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"sinstrumentholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"ninstrumentperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                ]\r\n            }   \r\n        }else if(this.props.Login.operation=== \"AllotAnotherUser\"){\r\n            this.validationColumnList =[\r\n                { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]    \r\n        }\r\n\r\n        const mandatoryFields = [];\r\n        if(this.validationColumnList &&  this.validationColumnList.length > 0){\r\n            this.validationColumnList.forEach(item => item.mandatory === true ?\r\n                mandatoryFields.push(item) : \"\"\r\n            );\r\n        }\r\n\r\n        let breadCrumbData=[];\r\n        if(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow){\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n                // {\r\n                //     \"label\": \"IDS_SAMPLETYPE\",\r\n                //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                //              this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n                // },\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                             this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                             this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_DESIGNTEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n                             this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.DesignTemplateMappingValue.sregtemplatename : \"NA\"\r\n\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TESTSTATUS\",\r\n                    \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" :\r\n                             this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\r\n                },\r\n                // {\r\n                //     \"label\": \"IDS_CONFIGVERSION\",\r\n                //     \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                //              this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n                // },\r\n                {\r\n                    \"label\": \"IDS_SECTION\",\r\n                    \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                             this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TEST\",\r\n                    \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                             this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n                }\r\n                \r\n            ];\r\n        }else{\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                }, \r\n                {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n                // {\r\n                //     \"label\": \"IDS_SAMPLETYPE\",\r\n                //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                //              this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n                // },\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                             this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                             this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TESTSTATUS\",\r\n                    \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" :\r\n                             this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\r\n                },\r\n                // {\r\n                //     \"label\": \"IDS_CONFIGVERSION\",\r\n                //     \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                //              this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n                // },\r\n                {\r\n                    \"label\": \"IDS_SECTION\",\r\n                    \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                             this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TEST\",\r\n                    \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                             this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n                }\r\n                \r\n            ];\r\n        }\r\n\r\n        const testDesign=<ContentPanel>\r\n                            <Card>\r\n                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                    <span style={{ display: \"inline-block\" }}>\r\n                                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                    </span>\r\n                \r\n\r\n                                </Card.Header>\r\n                                <Card.Body className='p-0 sm-pager' >\r\n                                    <TransactionListMasterJsonView\r\n                                        cardHead={94}\r\n                                        masterList={this.props.Login.masterData.searchedTest || JA_TestList}\r\n                                        selectedMaster={this.props.Login.masterData.JASelectedTest}\r\n                                        primaryKeyField=\"ntransactiontestcode\"\r\n                                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetailJobAllocation(event, status); this.changePropertyView(2,  event, \"click\") }}\r\n                                        inputParam={testChildGetJAParam}\r\n                                        additionalParam={[]}\r\n                                        mainField=\"stestsynonym\"\r\n                                        selectedListName=\"JASelectedTest\"\r\n                                        objectName=\"test\"\r\n                                        listName=\"IDS_TEST\"\r\n                                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                        showStatusLink={true}\r\n                                        subFieldsLabel={true}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        needMultiSelect={true}\r\n                                        subFields={this.state.testListColumns || []}\r\n                                        moreField={this.state.testMoreField}\r\n                                        needValidation={false}\r\n                                        showStatusName={true}\r\n                                        needFilter={false}\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        searchListName=\"searchedTest\"\r\n                                        searchRef={this.searchTestRef}\r\n                                        filterParam={this.state.filterTestParam}\r\n                                        selectionField=\"ntransactionstatus\"\r\n                                        selectionFieldName=\"stransdisplaystatus\"\r\n                                        childTabsKey={[\"TestView\",\"RegistrationTestComment\", \"RegistrationTestAttachment\"]}\r\n                                        handlePageChange={this.handleTestPageChange}\r\n                                        buttonCount={5}\r\n                                        skip={this.state.testskip}\r\n                                        take={this.state.testtake}\r\n                                        showMoreResetList={true}\r\n                                        showMoreResetListName=\"JA_SAMPLE\"\r\n                                        selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                             && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                                             === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                        selectionColorField=\"scolorhexcode\"                    \r\n                                        commonActions={\r\n                                            <>\r\n                                                <ProductList className=\"d-flex product-category float-right\">\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTJOB\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(allotId) === -1}\r\n                                                            onClick={() => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake)} >\r\n                                                            <Allotted className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTANOTHERUSER\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(anotherUserId) === -1}\r\n                                                            onClick={() => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake)} >\r\n                                                            <AnotherUser className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(rescheduleId) === -1}\r\n                                                            onClick={() => this.RescheduleStatus(rescheduleId, this.state.testskip, this.state.testtake)} >\r\n                                                            <FontAwesomeIcon icon={faClock}/>\r\n                                                        </Nav.Link>\r\n\r\n                                                        \r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                            onClick={() => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake)} >\r\n                                                            <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                        </Nav.Link>\r\n                                                </ProductList>\r\n                          \r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </ContentPanel>\r\n\r\n         let mainDesign =\"\";\r\n         if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign =    <SplitterLayout borderColor=\"#999\"\r\n                                         primaryIndex={1} percentage={true}\r\n                                         secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                         primaryMinSize={40}\r\n                                         secondaryMinSize={30}\r\n                            >\r\n\r\n                <Card >\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0 sm-pager'>\r\n                        <TransactionListMasterJson\r\n                            cardHead={94}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || JA_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.JASelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={(event, status) => { this.props.getJobAllocationTestDetail(event, status); this.state.enableAutoClick && this.changePropertyView(2, event, \"click\") }}\r\n                            inputParam={testGetJAParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={{\r\n                                ...this.state.filterSubSampleParam,\r\n                                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                            }}\r\n                            additionalParam={['napprovalversioncode']}\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"JASelectedSubSample\"\r\n                            objectName=\"subsample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            needValidation={true}\r\n                            validationKey=\"napprovalversioncode\"\r\n                            validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            skip={this.state.subsampleskip}\r\n                            take={this.state.subsampletake}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"stransdisplaystatus\"\r\n                            needMultiSelect={true}\r\n                            selectionColorField=\"scolorhexcode\"\r\n                            subFieldsLabel={false}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                            childTabsKey={[\"RegistrationAttachment\",\"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                            actionIcons={\r\n                                [\r\n                                    {\r\n                                        \r\n                                    }\r\n\r\n\r\n                                ]\r\n                            }\r\n                            needFilter={false}\r\n                            commonActions={\r\n                                <>\r\n                                    \r\n                                </>\r\n                            }\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n\r\n        } else {\r\n            mainDesign = testDesign\r\n        }   \r\n\r\n        return(\r\n            <>\r\n\r\n                \r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">                    \r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                \r\n                        <Row noGutters={true}  className=\"toolbar-top\">\r\n                            <Col md={12} className=\"parent-port-height\">\r\n                                <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}>\r\n\r\n                                    <SplitterLayout borderColor=\"#999\"\r\n                                        primaryIndex={1} percentage={true}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        primaryMinSize={30}\r\n                                        secondaryMinSize={20}\r\n                                    >\r\n                                    <div className='toolbar-top-inner'>\r\n                                        <TransactionListMasterJson\r\n                                            listMasterShowIcon={1}\r\n                                            clickIconGroup={true}\r\n                                            splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                            masterList={this.props.Login.masterData.searchedSample || JA_SampleList}\r\n                                            selectedMaster={this.props.Login.masterData.JASelectedSample}\r\n                                            primaryKeyField=\"nregistrationsectioncode\"\r\n                                            filterColumnData={this.props.filterTransactionList}\r\n                                            getMasterDetail={(event, status) => { this.props.getJobAllocationSubSampleDetail(event, status); this.state.enableAutoClick && this.changePropertyView(4, event, \"click\") }}\r\n                                            inputParam={subSampleGetJAParam}    \r\n                                            selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                                            && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                            selectionColorField=\"scolorhexcode\"\r\n                                            mainField={\"sarno\"}\r\n                                            showStatusLink={true}\r\n                                            showStatusName={true}\r\n                                            statusFieldName=\"stransdisplaystatus\"\r\n                                            statusField=\"ntransactionstatus\"\r\n                                            selectedListName=\"JASelectedSample\"\r\n                                            searchListName=\"searchedSample\"\r\n                                            searchRef={this.searchSampleRef}\r\n                                            objectName=\"sample\"\r\n                                            listName=\"IDS_SAMPLE\"\r\n                                            selectionField=\"ntransactionstatus\"\r\n                                            selectionFieldName=\"stransdisplaystatus\"\r\n                                            showFilter={this.props.Login.showFilter}\r\n                                            openFilter={this.openFilter}\r\n                                            closeFilter={this.closeFilter}\r\n                                            onFilterSubmit={this.onFilterSubmit}\r\n                                            subFields={this.state.DynamicSampleColumns}\r\n                                            needMultiSelect={true}\r\n                                            showStatusBlink={true}\r\n                                            filterParam={{\r\n                                                    ...this.state.filterSampleParam,\r\n                                                    childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                    { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                                }}\r\n                                            subFieldsLabel={false}\r\n                                            handlePageChange={this.handleSamplePageChange}\r\n                                            skip={this.state.sampleskip}\r\n                                            take={this.state.sampletake}\r\n                                            childTabsKey={[\"RegistrationAttachment\",\"RegistrationComment\", \"JA_SUBSAMPLE\",\r\n                                                    \"JA_TEST\",\"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"]} \r\n                                            actionIcons={\r\n                                                    [\r\n                                                    \r\n                                                    \r\n\r\n                                                    ]\r\n                                            }\r\n                                            needFilter={true}\r\n                                            commonActions={\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RECEIVEINLAB\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(receiveId) === -1}\r\n                                                            onClick={() => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake)} >\r\n                                                            <ReceivedInLab className=\"custom_icons\" width=\"25\" height=\"30\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                                data-for=\"tooltip-common-wrap\"\r\n                                                                onClick={() => this.onReload()} >\r\n                                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                }\r\n                                                filterComponent={[      \r\n                                                {\r\n                                                  \"Sample Filter\": <JobAllocationFilter\r\n                                                   SampleType={this.state.SampletypeList || []}\r\n                                                   SampleTypeValue={this.props.Login.masterData.defaultSampleTypeValue || {}}\r\n                                                   RegType={this.state.RegistrationTypeList || []}\r\n                                                   RegTypeValue={this.props.Login.masterData.defaultRegTypeValue || {}}\r\n                                                   RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                   RegSubTypeValue={this.props.Login.masterData.defaultRegSubTypeValue || {}}\r\n                                                   ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                   ApprovalVersionValue={this.props.Login.masterData.defaultApprovalVersionValue || []}\r\n                                                   UserSection={this.state.UserSectionList || []}\r\n                                                   UserSectionValue={this.props.Login.masterData.defaultUserSectionValue || []}\r\n                                                   JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                   Test={this.state.TestList || []}\r\n                                                   TestValue={this.props.Login.masterData.defaultTestValue || []}\r\n                                                   FilterStatus={this.state.FilterStatusList || []}\r\n                                                   FilterStatusValue={this.props.Login.masterData.defaultFilterStatusValue || []}\r\n                                                   DynamicDesignMapping={this.state.DynamicDesignMappingList || []}\r\n                                                   DesignTemplateMappingValue={this.props.Login.masterData.defaultDesignTemplateMappingValue || []}\r\n                                                   fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                   toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                   onFilterComboChange={this.onFilterComboChange}\r\n                                                   handleFilterDateChange={this.handleFilterDateChange}\r\n                                                   userInfo={this.props.Login.userInfo}                                        \r\n                                                  \r\n                                                    />\r\n                                                }\r\n                                                ]}\r\n\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div style={this.state.showTest === true || this.state.showSubSample === true ?\r\n                                           { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                           {mainDesign}\r\n                                        </div>\r\n                                 \r\n\r\n                                    </div>\r\n                                    </SplitterLayout>  \r\n                                    </div>\r\n                            <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"}\r\n                                        </div>    \r\n\r\n                                        <div className={` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 9 ? this.sideNavDetail(\"IDS_ANALYSTCALENDAR\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 10 ? this.sideNavDetail(\"IDS_INSTRUMENTCALENDAR\") : \"\"}\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2)}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3)}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(9)}>\r\n                                                <Analystcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ANALYSTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(10)}>\r\n                                                <Instrumentcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span>\r\n                                        \r\n                                    </div>\r\n                                </div>           \r\n                    </ListWrapper>\r\n                </Col> \r\n                </Row> \r\n                </ListWrapper>\r\n                {this.props.Login.openModal  ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal }\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        hideSave={this.props.Login.operation === \"IDS_VIEWANALYSTCALENDAR\" ? true :false}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ? (\r\n                           <Esign\r\n                               operation={this.props.Login.operation}\r\n                               onInputOnChange={this.onInputOnChange}\r\n                               inputParam={this.props.Login.inputParam}\r\n                               selectedRecord={this.state.selectedRecord || {}}\r\n                           />\r\n                           ) : this.props.Login.operation === \"AllotJob\" || this.props.Login.operation===\"Reschedule\" ? (\r\n                           <AddJobAllocation\r\n                               onNumericInputOnChange={this.onNumericInputOnChange}\r\n                               selectedRecord={this.state.selectedRecord || {}}\r\n                               onInputOnChange={this.onInputOnChange}\r\n                               onComboChange={this.onComboChange}\r\n                               handleDateChange={this.handleDateChange}\r\n                               Technique={this.props.Login.Technique}\r\n                               Users={this.props.Login.Users}\r\n                               UsersPeriod={this.props.Login.UsersPeriod}\r\n                               InstrumentCategory={this.props.Login.InstrumentCategory} \r\n                               Instrument={this.props.Login.Instrument}                                 \r\n                               InstrumentPeriod={this.props.Login.InstrumentPeriod}\r\n                               currentTime={this.props.Login.currentTime || []}\r\n                               operation={this.props.Login.operation}\r\n                               inputParam={this.props.inputParam}\r\n                               userInfo={this.props.Login.userInfo}\r\n                               \r\n                           />\r\n                           ) : this.props.Login.operation ===\"AllotAnotherUser\" ? (\r\n                            <AllotAnotherUser\r\n                               onNumericInputOnChange={this.onNumericInputOnChange}\r\n                               selectedRecord={this.state.selectedRecord || {}}\r\n                               onInputOnChange={this.onInputOnChange}\r\n                               onComboChange={this.onComboChange}\r\n                               handleDateChange={this.handleDateChange}                              \r\n                               Users={this.props.Login.Users}\r\n                               UsersPeriod={this.props.Login.UsersPeriod}  \r\n                               currentTime={this.props.Login.currentTime || []}                             \r\n                               operation={this.props.Login.operation}\r\n                               inputParam={this.props.inputParam}\r\n                               userInfo={this.props.Login.userInfo}\r\n                               \r\n                           />\r\n                        //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\r\n                        //         <>\r\n                        //             <Row>\r\n                        //                 <Col md={12}>\r\n                        //                 <FormSelectSearch\r\n                        //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                        //                     isSearchable={true}\r\n                        //                     name={\"nusercode\"}\r\n                        //                     isDisabled={false}\r\n                        //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        //                     isMandatory={true}\r\n                        //                     isClearable={false}\r\n                        //                     options={this.props.Login.Users}\r\n                        //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\r\n                        //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\r\n                        //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\r\n                        //                     closeMenuOnSelect={true}\r\n                        //                 />\r\n                        //                 </Col>\r\n                        //             </Row>\r\n\r\n                        //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                        //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\r\n                        //                 <WeekView />\r\n                        //                 <MonthView />\r\n\r\n                        //             </Scheduler>\r\n                                \r\n                        //             {/* <AnalystCalendar\r\n                        //                 UserData={this.props.Login.masterData.UserData}\r\n                        //                 operation={this.props.Login.operation}\r\n                        //                 inputParam={this.props.inputParam}\r\n                        //                 userInfo={this.props.Login.userInfo}\r\n                             \r\n                        //             /> */}\r\n                        //         </>                             \r\n                        //    ): (\r\n                            ): (\r\n                           \"\"\r\n                           )\r\n                       }   \r\n                    /> : \"\"}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    ReceiveinLabStatus(receiveId,sampleskip,sampletake){\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\r\n        }\r\n        let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if(receiveList && receiveList.length>0 ){ \r\n            let tempsection=0;\r\n            let sectionvalue = 0;\r\n            let bflag =true;\r\n            let sampleList =this.props.Login.masterData.JASelectedSample;\r\n            sampleList.forEach((item)=>{\r\n                sectionvalue =item.nsectioncode;\r\n                if(tempsection !==sectionvalue && tempsection !==0){\r\n                    bflag=false;\r\n                }else{\r\n                    tempsection =sectionvalue\r\n                }\r\n            });        \r\n\r\n            if(bflag){\r\n                    let JASelectedSample =this.props.Login.masterData.JASelectedSample;\r\n                    let JASelectedSubSample =this.props.Login.masterData.JASelectedSubSample;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        nflag: 3,\r\n                        ncheck: 1,\r\n                        fromdate : obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode :this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        //ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n                        ntransactionstatus: \"0\",\r\n                        //nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode.toString(),\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,                       \r\n                        npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode :JASelectedSubSample ? JASelectedSubSample.map(sample =>sample.ntransactionsamplecode).join(\",\") :\"\",\r\n                        nsectioncode: JASelectedSample ? JASelectedSample.map(sample =>sample.nsectioncode).join(\",\") :\"\",\r\n                        ncontrolcode : receiveId,\r\n                        nneedsubsample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow :this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                        checkBoxOperation:3,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        screenName: this.props.Login.screenName,                       \r\n                        activeSampleKey:\"IDS_SAMPLEATTACHMENTS\",\r\n                        activeSubSampleKey:\"IDS_SUBSAMPLEATTACHMENTS\",\r\n                        activeTestKey:\"IDS_TESTATTACHMENTS\"\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                        postParamList: this.postParamList,\r\n                        classUrl: \"joballocation\",\r\n                        operation: 'Create',\r\n                        methodUrl:\"ReceiveinLab\",\r\n                       \r\n                    }\r\n                        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    loadEsign: true,\r\n                                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                                    openModal: true,\r\n                                    parentPopUpSize: 'lg',\r\n                                    screenName: this.props.Login.screenName,\r\n                                    operation: 'Create'\r\n                                }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        } else {\r\n                            this.props.ReceiveinLabStatusWise(inputParam); \r\n                        }\r\n                    \r\n                \r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONSAMPLES\" }));\r\n            }         \r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    checkRegisterSamples(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.REGISTER)\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            testListColumns,testSearchField,subsampleSearchField,sampleSearchField,\r\n            SingleItem,testItem,testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            testAttachmentDataState,testCommentDataState,testViewDataState,activeTabIndex,activeTabId,           \r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList,DynamicDesignMappingList, sampleskip,sampletake,subsampleskip,subsampletake, testskip, testtake, selectedFilter,\r\n             DynamicGridItem,DynamicTestGridItem,DynamicTestGridMoreField,DynamicSampleColumns,DynamicSubSampleColumns,DynamicTestColumns,\r\n            DynamicGridMoreField,data } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] }\r\n               \r\n                testAttachmentDataState = dataState\r\n                testCommentDataState = dataState\r\n                testViewDataState =dataState\r\n               \r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const  RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\r\n            const  DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\r\n\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\r\n          \r\n            bool = true;\r\n            sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip\r\n            sampletake = this.props.Login.sampletake || sampletake\r\n\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, stransdisplaystatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            \r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\r\n                testViewDataState = this.props.Login.testViewDataState;\r\n            }\r\n           \r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem:[];\r\n            DynamicTestGridMoreField =dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields:[];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n\r\n            bool = true;\r\n            \r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            \r\n            bool = true;\r\n        }\r\n        if(this.props.Login.masterData.UserData!==undefined){\r\n            if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\r\n                for(let i =0;i< this.props.Login.masterData.UserData.length;i++){\r\n                    data.push(this.props.Login.masterData.UserData[i].jsonuidata);\r\n                }\r\n                data = data.map(dataItem => ({\r\n                    start: parseAdjust(dataItem.UserStartDate),\r\n                    end: parseAdjust(dataItem.UserEndDate),\r\n                    title: dataItem.Comments\r\n                   \r\n                }))\r\n                bool =true;\r\n                //this.setState({data:data});\r\n            }\r\n        }\r\n\r\n        const filterSampleParam = {\r\n            inputListName: \"JA_SAMPLE\",\r\n            selectedObject: \"JASelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n            sampleskip:0,\r\n            subsampleskip:0,\r\n            testskip:0,\r\n            sampletake:this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue  && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue  && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n               // npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                ssectioncode : this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\r\n                checkBoxOperation: 3,               \r\n                activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\r\n                \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\",\"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                 \"JASelectedSample\", \"JASelectedSubSample\",\"JASelectedTest\"]\r\n        };\r\n        \r\n        const filterSubSampleParam = {\r\n            inputListName: \"JA_SUBSAMPLE\",\r\n            selectedObject: \"JASelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"joballocation/getJobAllocationTestDetails\",\r\n            sampleskip:this.state.sampleskip,\r\n            subsampleskip:0,\r\n            testskip:0,\r\n            sampletake:this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                checkBoxOperation: 3,\r\n                npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                ssectioncode : this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\r\n                ntestcode :this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: subsampleSearchField,\r\n            changeList: [\"JA_TEST\", \"RegistrationTestAttachment\",\"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                         \"JASelectedSubSample\", \"JASelectedTest\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"JA_TEST\",\r\n            selectedObject: \"JASelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            sampleskip:this.state.sampleskip,\r\n            subsampleskip:this.state.subsampleskip,\r\n            testskip:0,\r\n            sampletake:this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake:this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                checkBoxOperation: 3,\r\n                activeSampleKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleKey: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: testSearchField,\r\n            changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\r\n\r\n        }\r\n\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                 testListColumns,testSearchField,subsampleSearchField,sampleSearchField,\r\n                 SingleItem,testItem,testListMainField,\r\n                 SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                 testAttachmentDataState, testCommentDataState,testViewDataState,activeTabIndex,activeTabId,\r\n                 selectedRecord, SampletypeList, RegistrationTypeList,\r\n                 RegistrationSubTypeList, FilterStatusList,\r\n                 ConfigVersionList, UserSectionList, TestList,DynamicDesignMappingList,\r\n                 sampleskip,sampletake,subsampleskip,subsampletake,testskip, testtake, selectedFilter,\r\n                 DynamicGridItem,DynamicTestGridItem,DynamicTestGridMoreField,DynamicSampleColumns,DynamicSubSampleColumns,DynamicTestColumns,\r\n                 DynamicGridMoreField,data,filterTestParam,filterSubSampleParam,filterSampleParam\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSamplePageChange = e => {\r\n        this.setState({\r\n            sampleskip: e.skip,\r\n            sampletake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange =e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                if(activeTestTab===\"IDS_TESTVIEW\" ){\r\n                    let transstatus = JASelectedTest.map(item => item.ntransactionstatus).join(\",\");\r\n                    if(transstatus.includes(\"20\")){\r\n                        let inputData = {\r\n                            masterData: this.props.Login.masterData,\r\n                            JASelectedTest: JASelectedTest,\r\n                            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                                String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                            npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                                this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                            userinfo: this.props.Login.userInfo,\r\n                            activeTestKey: activeTestTab,\r\n                            screenName: activeTestTab,\r\n                            testCommentDataState: this.state.testCommentDataState,\r\n                            testAttachmentDataState: this.state.testAttachmentDataState,\r\n                            testViewDataState :this.state.testViewDataState,\r\n                            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                            activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                        }\r\n                        this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                    }else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLOTTEST\" }))\r\n                    }\r\n                }else{\r\n                    let inputData = {\r\n                        masterData: this.props.Login.masterData,\r\n                        JASelectedTest: JASelectedTest,\r\n                        ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                            String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                        npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                            this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                        userinfo: this.props.Login.userInfo,\r\n                        activeTestKey: activeTestTab,\r\n                        screenName: activeTestTab,\r\n                        testCommentDataState: this.state.testCommentDataState,\r\n                        testAttachmentDataState: this.state.testAttachmentDataState,\r\n                        testViewDataState :this.state.testViewDataState,\r\n                        activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                        activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                    }\r\n                    this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                }\r\n\r\n\r\n                    \r\n                \r\n                \r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subsampleCommentDataState: this.state.subsampleCommentDataState,\r\n                    subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.JASelectedSample,\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n    }\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status != \"click\") {\r\n            if (index === SideBarTabIndex.ATTACHMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.COMMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if(index === SideBarTabIndex.TESTVIEW){\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTVIEW\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }else if(index ===SideBarTabIndex.ANALYSTCALENDAR){\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_ANALYSTCALENDAR\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n\r\n        sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName === \"IDS_ATTACHMENTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName === \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                            : screenName === \"IDS_SAMPLEDETAILS\" ?\r\n                                this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ?\r\n                                    <SampleInfoView\r\n                                        data={this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0\r\n                                                    ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {}}\r\n                                        SingleItem={this.state.SingleItem}\r\n                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                    /> :\r\n                                    <SampleInfoGrid\r\n                                        selectedSample={this.props.Login.masterData.JASelectedSample}\r\n                                        dataState={this.state.sampleGridDataState}\r\n                                        dataStateChange={this.sampleGridDataStateChange}\r\n                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        screenName=\"IDS_SAMPLEGRID\"\r\n                                        expandField=\"expanded\"\r\n                                        jsonField={\"jsondata\"}\r\n                                    />\r\n                            : screenName === \"IDS_ALLOTTEDTEST\" ?\r\n                                    this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ?\r\n                                        <SampleInfoView\r\n                                            data={this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0\r\n                                                    ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {}}\r\n                                            SingleItem={this.state.testItem}\r\n                                            screenName=\"IDS_TESTVIEW\"\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                        /> :\r\n                                        <SampleInfoGrid\r\n                                            primaryKeyField={\"ntransactiontestcode\"}    \r\n                                            selectedSample={this.props.Login.masterData.TestView}\r\n                                            dataState={this.state.testGridDataState}\r\n                                            dataStateChange={this.testGridDataStateChange}\r\n                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                            detailedFieldList={this.gridfillingColumn(this.state.DynamicTestGridMoreField) || []}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            inputParam={this.props.Login.inputParam}\r\n                                            screenName=\"IDS_TESTGRID\"\r\n                                            expandField=\"expanded\"\r\n                                            jsonField={\"jsondata\"}\r\n                                        />\r\n                            // : screenName === \"IDS_ANALYSTCALENDAR\" ?\r\n                            //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                            //         <DayView numberOfDays={3} />\r\n                            //         <WeekView />\r\n                            //         <MonthView />   \r\n                            //     </Scheduler>        \r\n                            :\"\"\r\n        )\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake, subsampleskip, subsampletake } = this.state\r\n        let testList = this.props.Login.masterData.JA_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ?\r\n            this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            tabSequence={SideBarSeqno.TEST}\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"JASelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                masterList={this.props.Login.masterData.JASelectedSubSample}\r\n                masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                viewFile={this.props.viewAttachment}\r\n                addName={\"AddSubSampleAttachment\"}\r\n                editName={\"EditSubSampleAttachment\"}\r\n                deleteName={\"DeleteSubSampleAttachment\"}\r\n                viewName={\"ViewSubSampleAttachment\"}\r\n                methodUrl={\"SubSampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n                take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleAttachment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\r\n\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n            />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster=\"JASelectedSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.JASelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JASelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLE\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subsampleskip, subsampletake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n                screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                addName={\"AddSubSampleComment\"}\r\n                editName={\"EditSubSampleComment\"}\r\n                deleteName={\"DeleteSubSampleComment\"}\r\n                methodUrl={\"SubSampleComment\"}\r\n                masterData={this.props.Login.masterData}\r\n                isTestComment={false}\r\n                masterList={this.props.Login.masterData.JASelectedSubSample}\r\n                masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n                primaryKeyField={\"nsamplecommentcode\"}\r\n                dataState={this.state.subsampleCommentDataState}\r\n                dataStateChange={this.subsampleDataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleComment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\r\n                    ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n            />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"JASelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.JASelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.sampleCommentDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.JASelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n            \r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTVIEW\":\r\n                this.setState({\r\n                    testViewDataState:event.testViewDataState\r\n                });\r\n                break;    \r\n            default:\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    subsampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            \r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subsampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            \r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    testGridDataStateChange = (event) => {\r\n        this.setState({\r\n            testGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\", \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSample: this.props.Login.masterData.JASelectedSample,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSubSampleTab = tabProps.screenName;\r\n        if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSubSampleTab,\r\n                activeSubSampleTab,\r\n                subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                subSampleCommentDataState: this.state.subsampleCommentDataState,\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n        const activeTestKey = tabProps.screenName;\r\n        if (activeTestKey !== this.props.Login.activeTestKey) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: activeTestKey,\r\n                    screenName: activeTestKey,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetailJobAllocation(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake, sampleskip, sampletake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\r\n        sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n        }\r\n\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n    \r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleComments(saveParam, acceptList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultSampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegTypeJobAllocation(inputParamData)\r\n                }\r\n            }else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultRegTypeValue: comboData.item\r\n\r\n                        \r\n                    }\r\n                    this.props.getRegSubTypeJobAllocation(inputParamData)\r\n                }\r\n            }else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            defaultRegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getAppConfigVersionJobAllocation(inputParamData)\r\n                }\r\n            }else if (fieldName === 'napprovalconfigversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 5,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode,\r\n                    }\r\n                    this.props.getFilterStatusSectionJobAllocation(inputParamData)\r\n                }\r\n            }else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\r\n                    inputParamData = {\r\n                        nflag: 6,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultUserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        //ntransactionstatus: JSON.stringify(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus),\r\n                        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus,\r\n                    }\r\n\r\n                    this.props.getSectionJobAllocation(inputParamData);\r\n                }\r\n            }else if (fieldName === 'ntransactionstatus') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 7,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultFilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\r\n\r\n                    }\r\n\r\n                    this.props.getFilterStatusJobAllocation(inputParamData);\r\n                }\r\n            }else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultTestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }else if(fieldName === 'ndesigntemplatemappingcode'){\r\n                if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultDesignTemplateMappingValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }   \r\n            }else {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getTestStatusJobAllocation(inputParamData);\r\n                }\r\n            }\r\n        }    \r\n\r\n    }    \r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        \r\n\r\n        let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n    \r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nneedtemplatebasedflow : this.props.Login.masterData.realRegSubTypeValue &&  this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                fromdate: String(fromdate),\r\n                todate: String(todate),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n    \r\n        }\r\n        this.props.getAppConfigVersionJobAllocation(inputParam)\r\n    }\r\n\r\n    onReload =() => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue \r\n        let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue \r\n        let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue \r\n        let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue \r\n        let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue \r\n        let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue \r\n        let defaultTestValue = this.props.Login.masterData.realTestValue \r\n        let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, defaultSampleTypeValue, defaultRegTypeValue, defaultRegSubTypeValue, defaultFilterStatusValue, defaultApprovalVersionValue, defaultUserSectionValue, defaultTestValue,defaultDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode:(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode)||-1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                sampleskip: this.state.sampleskip,\r\n                sampletake: this.state.sampletake,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState : this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue \r\n        let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue \r\n        let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue \r\n        let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue \r\n        let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue \r\n        let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue \r\n        let realTestValue = this.props.Login.masterData.defaultTestValue \r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue,realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode:(this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode)||-1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState : this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    AllotJobStatus(allotId,testskip,testtake){\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if(allotList && allotList.length>0 ){\r\n            let testList =this.props.Login.masterData.JASelectedTest;\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let sectionflag =true;\r\n            testList.forEach((item)=>{\r\n                sectionvalue=item.nsectioncode;\r\n                if(sectionvalue !==tempsection && tempsection !==0){\r\n                    sectionflag=false;\r\n                }else{\r\n                    tempsection =sectionvalue;\r\n                }   \r\n            });\r\n\r\n            let tempinstrument = 0;\r\n            let instrumentvalue = 0;\r\n            let instrumentcategoryflag =true;\r\n            testList.forEach((item)=>{\r\n                instrumentvalue=item.ninstrumentcatcode;\r\n                if(instrumentvalue !==tempinstrument && tempinstrument !==0){\r\n                    instrumentcategoryflag=false;\r\n                }else{\r\n                    tempinstrument =instrumentvalue;\r\n                }   \r\n            });\r\n              \r\n\r\n            if(sectionflag){\r\n                if(instrumentcategoryflag){\r\n                    let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n                    let JASelectedSample =this.props.Login.masterData.JASelectedSample;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        ndesigntemplatemappingcode :this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,                \r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,             \r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                        ssectioncode: JASelectedSample ? JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\",\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,               \r\n                        npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                        ntransactiontestcode: 0,\r\n                        ncontrolcode : allotId,\r\n                        nneedsubsample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow :this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,                \r\n                        checkBoxOperation:3,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        operation: 'AllotJob'\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                    }\r\n                    this.props.getAllottedTestWise(inputParam);\r\n                }else{\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\" }));\r\n                }             \r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }            \r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }\r\n\r\n    AllotAnotherUserStatus(anotherUserId,testskip,testtake){\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if(anotherUserList && anotherUserList.length>0 ){\r\n\r\n            let tempsection =0;\r\n            let sectionvalue = 0;\r\n            let bflag =true;\r\n\r\n            let testList =this.props.Login.masterData.JASelectedTest;\r\n            testList.forEach((item)=>{\r\n                sectionvalue=item.nsectioncode;\r\n\r\n                if(sectionvalue !==tempsection && tempsection !==0){\r\n                    bflag=false;\r\n                }else{\r\n                    tempsection =sectionvalue;\r\n                }\r\n            });\r\n\r\n                \r\n\r\n            if(bflag){\r\n                    let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        ndesigntemplatemappingcode :this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,                \r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,             \r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                        ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\",\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,               \r\n                        npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                        ntransactiontestcode: 0,\r\n                        ncontrolcode : anotherUserId,\r\n                        nneedsubsample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow :this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,                \r\n                        checkBoxOperation:3,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        operation: 'AllotAnotherUser'\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                    }            \r\n                    this.props.getAllotAnotherUserTestWise(inputParam);\r\n                    \r\n                \r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }            \r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }    \r\n\r\n    RescheduleStatus(rescheduleId,testskip,testtake){\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let rescheuleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if(rescheuleList && rescheuleList.length>0 ){\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let sectionflag =true;\r\n            let testList =this.props.Login.masterData.JASelectedTest;\r\n            testList.forEach((item)=>{\r\n                sectionvalue=item.nsectioncode;\r\n                if(sectionvalue !==tempsection && tempsection !==0){\r\n                    sectionflag=false;\r\n                }else{\r\n                    tempsection =sectionvalue;\r\n                }   \r\n            });\r\n            \r\n            let tempinstrument = 0;\r\n            let instrumentvalue = 0;\r\n            let instrumentcategoryflag =true;\r\n            testList.forEach((item)=>{\r\n                instrumentvalue=item.ninstrumentcatcode;\r\n                if(instrumentvalue !==tempinstrument && tempinstrument !==0){\r\n                    instrumentcategoryflag=false;\r\n                }else{\r\n                    tempinstrument =instrumentvalue;\r\n                }   \r\n            });\r\n\r\n            if(sectionflag){\r\n                if(instrumentcategoryflag){\r\n                    let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        ndesigntemplatemappingcode :this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,                \r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,             \r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                        ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\",\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,               \r\n                        npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                        ntransactiontestcode: 0,\r\n                        ncontrolcode : rescheduleId,\r\n                        nneedsubsample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow :this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,                \r\n                        checkBoxOperation:3,\r\n                        AllotAnotherUser:false,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        operation: 'Reschedule'\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                    }                        \r\n                    this.props.getRescheduleTestWise(inputParam);\r\n                }else{\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\" }));\r\n                }            \r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }            \r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }    \r\n\r\n    CancelStatus =(cancelId) =>{\r\n        let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n        if(JASelectedTest && JASelectedTest.length >0){\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n        let inputParam = {};\r\n        let Map = {            \r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ndesigntemplatemappingcode :this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n            //nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n            ssectioncode: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\",\r\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,                       \r\n            npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n            ntransactionsamplecode :JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n            ntransactiontestcode :JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\r\n            ncontrolcode : cancelId,\r\n            nneedsubsample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow :this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            checkBoxOperation:3,\r\n            userinfo: this.props.Login.userInfo,\r\n            masterData: this.props.Login.masterData,\r\n            screenName: this.props.Login.screenName,\r\n            activeTestKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleKey: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleKey: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n           \r\n        }\r\n        inputParam = {\r\n            inputData: Map,\r\n            postParamList: this.postParamList,\r\n            classUrl: \"joballocation\",\r\n            operation: 'cancel',\r\n            methodUrl:\"Test\",\r\n        }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'cancel'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.CancelTestWise(inputParam);\r\n            }\r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    onJobAllocationTestWise = (action) => {\r\n         if(action.scontrolname ===\"Analyst Calendar\"){\r\n            let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n            let inputParam ={};\r\n            let Map={\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                ntestcode: this.props.Login.masterData.realTestValue.ntestcode,  \r\n                transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                ncontrolcode : action.ncontrolcode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.Login.screenName,\r\n                operation:\"ViewAnalystCalendar\",\r\n                openModal:true,\r\n\r\n            }    \r\n            inputParam = {\r\n                inputData: Map,\r\n            }\r\n            this.props.ViewAnalystCalendar(inputParam);\r\n\r\n        }else if(action.scontrolname ===\"Instrument Calendar\"){\r\n\r\n        }\r\n\r\n\r\n    }  \r\n\r\n    onSaveClick =(saveType,formRef) =>{\r\n        let inputParam={};\r\n        if(this.props.Login.operation === \"AllotJob\"){\r\n            inputParam =this.onSaveAllotJob (saveType,formRef);\r\n        }else if(this.props.Login.operation === \"AllotAnotherUser\"){\r\n            inputParam =this.onSaveAllotAnotherUser (saveType,formRef);\r\n        }else if(this.props.Login.operation === \"Reschedule\"){\r\n            inputParam =this.onSaveReschedule (saveType,formRef);\r\n        }\r\n    }\r\n    \r\n\r\n    onSaveAllotJob = (saveType, formRef) => {\r\n            let inputParam={};\r\n            let JobAllocationData={};\r\n            let obj={};\r\n            let allotjob =this.state.selectedRecord;                 \r\n\r\n            obj[\"allotjobdata\"]={\r\n                \"Technique\":{\r\n                    label:allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                    value:allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n                },\r\n                \"Users\":{\r\n                    label:allotjob.nusercode.label,\r\n                    value:allotjob.nusercode.value\r\n                },\r\n                \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n                \"UserEndDate\":\"\",\r\n                \"UserHoldDuration\":allotjob.suserholdduration,\r\n                \"UserPeriod\":{\r\n                    label:allotjob.nuserperiodcode.label,\r\n                    value:allotjob.nuserperiodcode.value\r\n                },\r\n\r\n                \"InstrumentCategory\":{\r\n                    label:allotjob.ninstrumentcatcode.label,\r\n                    value:allotjob.ninstrumentcatcode.value\r\n                },\r\n                \"Instrument\":{\r\n                    label:allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                    value:allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n                },\r\n                \"InstrumentStartDate\":allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime,this.props.Login.userInfo) : \"\", \r\n                \"InstrumentEndDate\":\"\",\r\n                \"InstrumentHoldDuration\":allotjob.sinstrumentholdduration || -1,\r\n                \"InstrumentPeriod\":{\r\n                    label:allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                    value:allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n                },\r\n\r\n                \"Comments\":allotjob.scomments\r\n\r\n                \r\n            }\r\n\r\n            obj[\"allotjobuidata\"]={\r\n                \"Technique\":allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                \"Users\": allotjob.nusercode.label,               \r\n                \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n                \"UserEndDate\":\"\",\r\n                \"UserHoldDuration\":allotjob.suserholdduration,\r\n                \"UserPeriod\":allotjob.nuserperiodcode.label,\r\n                \"InstrumentCategory\":allotjob.ninstrumentcatcode.label,                \r\n                \"Instrument\":allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',                \r\n                \"InstrumentStartDate\":allotjob.dinstblockfromdatetime  ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime,this.props.Login.userInfo) :\"\",\r\n                \"InstrumentEndDate\":\"\",\r\n                \"InstrumentHoldDuration\":allotjob.sinstrumentholdduration || -1,\r\n                \"InstrumentPeriod\":allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                \"Comments\":allotjob.scomments                \r\n            }\r\n\r\n            let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n            JobAllocationData[\"jsondata\"]=JSON.stringify(obj[\"allotjobdata\"]);\r\n            JobAllocationData[\"jsonuidata\"]=JSON.stringify(obj[\"allotjobuidata\"]);\r\n            JobAllocationData[\"npreregno\"]=JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n            JobAllocationData[\"ntransactionsamplecode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n            JobAllocationData[\"ntransactiontestcode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n            JobAllocationData[\"nsectioncode\"]=this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n            JobAllocationData[\"ssectioncode\"]= this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\";\r\n            JobAllocationData[\"ntechniquecode\"]=allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n            JobAllocationData[\"nusercode\"]=allotjob.nusercode.value;\r\n            JobAllocationData[\"nuserperiodcode\"]=allotjob.nuserperiodcode.value;\r\n            JobAllocationData[\"ninstrumentcatcode\"]=allotjob.ninstrumentcatcode.value;\r\n            JobAllocationData[\"ninstrumentcode\"]=allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n            JobAllocationData[\"ninstrumentperiodcode\"]=allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value ||-1;\r\n            JobAllocationData[\"ncontrolcode\"]=this.props.Login.ncontrolCode;\r\n            JobAllocationData[\"userinfo\"]=this.props.Login.userInfo;\r\n            JobAllocationData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n            JobAllocationData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n            JobAllocationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            JobAllocationData[\"masterData\"]= this.props.Login.masterData;\r\n            JobAllocationData[\"activeSampleKey\"]=\"IDS_SAMPLEATTACHMENTS\";\r\n            JobAllocationData[\"activeSubSampleKey\"]=\"IDS_SUBSAMPLEATTACHMENTS\";\r\n            JobAllocationData[\"activeTestKey\"]=\"IDS_TESTATTACHMENTS\";\r\n                \r\n       \r\n            inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList\r\n\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                          loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                          openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                          operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n               //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                this.props.AllotJobAction(inputParam);\r\n            }\r\n        \r\n\r\n        \r\n        \r\n    }\r\n\r\n\r\n    onSaveAllotAnotherUser = (saveType, formRef) => {   \r\n        let inputParam={};\r\n        let JobAllocationData={};\r\n        let obj={};\r\n        let allotjob =this.state.selectedRecord;                   \r\n\r\n        obj[\"anotheruserdata\"]={\r\n            \"Users\":{\r\n                label:allotjob.nusercode.label,\r\n                value:allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n            \"UserEndDate\":\"\",\r\n            \"UserHoldDuration\":allotjob.suserholdduration,\r\n            \"UserPeriod\":{\r\n                label:allotjob.nuserperiodcode.label,\r\n                value:allotjob.nuserperiodcode.value\r\n            },              \r\n            \"Comments\":allotjob.scomments            \r\n        }\r\n\r\n        obj[\"anotheruseruidata\"]={\r\n            \"Users\":allotjob.nusercode.label,            \r\n            \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n            \"UserEndDate\":\"\",\r\n            \"UserHoldDuration\":allotjob.suserholdduration,\r\n            \"UserPeriod\":allotjob.nuserperiodcode.label,                  \r\n            \"Comments\":allotjob.scomments            \r\n        }\r\n\r\n        let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n        JobAllocationData[\"jsondata\"]=JSON.stringify(obj[\"anotheruserdata\"]);\r\n        JobAllocationData[\"jsonuidata\"]=JSON.stringify(obj[\"anotheruseruidata\"]);\r\n        JobAllocationData[\"npreregno\"]=JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"]=this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        JobAllocationData[\"ssectioncode\"]= this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\";\r\n        JobAllocationData[\"ntechniquecode\"]=-1;\r\n        JobAllocationData[\"nusercode\"]=allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"]=allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"]=-1;\r\n        JobAllocationData[\"ninstrumentcode\"]=-1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"]=-1;\r\n        JobAllocationData[\"ncontrolcode\"]=this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"userinfo\"]=this.props.Login.userInfo;\r\n        JobAllocationData[\"masterData\"]= this.props.Login.masterData;\r\n        JobAllocationData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"activeSampleKey\"]=\"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleKey\"]=\"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestKey\"]=\"IDS_TESTATTACHMENTS\";   \r\n   \r\n        inputParam = {\r\n        classUrl: \"joballocation\",\r\n        methodUrl: \"Create\",\r\n        displayName: this.props.Login.inputParam.displayName,\r\n        inputData: JobAllocationData,\r\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n        operation: this.props.Login.operation, saveType, formRef,\r\n        searchRef: this.searchRef,\r\n        postParamList: this.postParamList\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                      loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                      openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                      operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.AllotAnotherUserAction(inputParam);\r\n\r\n        }\r\n    \r\n\r\n    \r\n    \r\n    }\r\n\r\n    onSaveReschedule = (saveType, formRef) => {\r\n        let inputParam={};\r\n        let JobAllocationData={};\r\n        let obj={};\r\n        let allotjob =this.state.selectedRecord;            \r\n\r\n        obj[\"rescheduledata\"]={\r\n            \"Technique\":{\r\n                label:allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                value:allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n            },\r\n            \"Users\":{\r\n                label:allotjob.nusercode.label,\r\n                value:allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n            \"UserEndDate\":\"\",\r\n            \"UserHoldDuration\":allotjob.suserholdduration,\r\n            \"UserPeriod\":{\r\n                label:allotjob.nuserperiodcode.label,\r\n                value:allotjob.nuserperiodcode.value\r\n            },\r\n\r\n            \"InstrumentCategory\":{\r\n                label:allotjob.ninstrumentcatcode.label,\r\n                value:allotjob.ninstrumentcatcode.value\r\n            },\r\n            \"Instrument\":{\r\n                label:allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                value:allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n            },\r\n            \"InstrumentStartDate\":allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime,this.props.Login.userInfo) : \"\", \r\n            \"InstrumentEndDate\":\"\",\r\n            \"InstrumentHoldDuration\":allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\":{\r\n                label:allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                value:allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n            },\r\n\r\n            \"Comments\":allotjob.scomments\r\n\r\n        \r\n        }\r\n        obj[\"reschdeuleuidata\"]={\r\n            \"Technique\":allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n            \"Users\": allotjob.nusercode.label,               \r\n            \"UserStartDate\":convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime,this.props.Login.userInfo),\r\n            \"UserEndDate\":\"\",\r\n            \"UserHoldDuration\":allotjob.suserholdduration,\r\n            \"UserPeriod\":allotjob.nuserperiodcode.label,\r\n            \"InstrumentCategory\":allotjob.ninstrumentcatcode.label,                \r\n            \"Instrument\":allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",                \r\n            \"InstrumentStartDate\":allotjob.dinstblockfromdatetime  ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime,this.props.Login.userInfo) :\"\",\r\n            \"InstrumentEndDate\":\"\",\r\n            \"InstrumentHoldDuration\":allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\":allotjob.ninstrumentperiodcode &&  allotjob.ninstrumentperiodcode.label || 'NA',\r\n            \"Comments\":allotjob.scomments\r\n        \r\n        }    \r\n\r\n        let JASelectedTest =this.props.Login.masterData.JASelectedTest;\r\n        JobAllocationData[\"jsondata\"]=JSON.stringify(obj[\"rescheduledata\"]);\r\n        JobAllocationData[\"jsonuidata\"]=JSON.stringify(obj[\"reschdeuleuidata\"]);\r\n        JobAllocationData[\"npreregno\"]=JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"]=JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"]=this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        JobAllocationData[\"ssectioncode\"]= this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample=>sample.nsectioncode).join(\",\"):\"\";\r\n        JobAllocationData[\"ntechniquecode\"]=allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"]=allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"]=allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"]=allotjob.ninstrumentcatcode.value;\r\n        JobAllocationData[\"ninstrumentcode\"]=allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"]=allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value ||-1;\r\n        JobAllocationData[\"ncontrolcode\"]=this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"userinfo\"]=this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"]= this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleKey\"]=\"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleKey\"]=\"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestKey\"]=\"IDS_TESTATTACHMENTS\";        \r\n        \r\n\r\n        inputParam = {\r\n        classUrl: \"joballocation\",\r\n        methodUrl: \"Create\",\r\n        displayName: this.props.Login.inputParam.displayName,\r\n        inputData: JobAllocationData,\r\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n        operation:this.props.Login.operation, saveType, formRef,\r\n        searchRef: this.searchRef,\r\n        postParamList: this.postParamList\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                  loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                  openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\"  }),\r\n                  operation: this.props.Login.operation\r\n                }   \r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.RescheduleJobAction(inputParam);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getActiveTestURL() {\r\n        let url = \"attachment/getTestAttachment\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n            break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n            break;\r\n            default:\r\n                url = \"comments/getTestComment\"\r\n            break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    \r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isOpen= this.props.Login.isOpen;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n          if(this.props.Login.operation=== \"AllotJob\"|| this.props.Login.operation=== \"AllotAnotherUser\"|| this.props.Login.operation=== \"Reschedule\"){\r\n                loadEsign = false;\r\n                openModal = true;\r\n                isOpen=false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason']=\"\";\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                openModal=false;\r\n                selectedRecord = {};\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord, selectedId: null,isOpen },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    \r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChange=(comboData,fieldName)=> {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        //if (comboData != null) {\r\n            if(fieldName=== \"ntechniquecode\"){\r\n                selectedRecord[\"ntechniquecode\"] = comboData;\r\n                if(comboData != null){\r\n                    this.props.getUsers(this.state.selectedRecord.ntechniquecode.value,this.props.Login.masterData, this.props.Login.userInfo, selectedRecord,this.props.Login.screenName);\r\n                }else{\r\n                    this.setState({ selectedRecord });  \r\n                }\r\n            }else if(fieldName=== \"nusercode\"){\r\n                selectedRecord[\"nusercode\"] = comboData;\r\n                this.setState({ selectedRecord });  \r\n            } else if(fieldName=== \"ninstrumentcatcode\"){\r\n                selectedRecord[\"ninstrumentcatcode\"] = comboData;\r\n                this.props.getInstrument(this.state.selectedRecord.ninstrumentcatcode.value,selectedRecord.ninstrumentcatcode.item.ncalibrationreq ,this.props.Login.userInfo, selectedRecord,this.props.Login.screenName);\r\n            }else if(fieldName=== \"ninstrumentcode\"){\r\n                selectedRecord[\"ninstrumentcode\"] = comboData;\r\n                this.setState({ selectedRecord });  \r\n            }else if(fieldName ===\"nuserperiodcode\"){\r\n                selectedRecord[\"nuserperiodcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }else if(fieldName ===\"ninstrumentperiodcode\"){\r\n                selectedRecord[\"ninstrumentperiodcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }  \r\n          \r\n        //}\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};   \r\n            if(event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\"){\r\n                if(event.target.value !== \"\"){\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n\r\n                }else{\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n  \r\n                }   \r\n            }else{\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }      \r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n\r\n    getCommentsCombo = (event) => {\r\n\r\n        if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\r\n            this.props.getCommentsCombo(...event);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOADDCOMMENTS\" }))\r\n        }\r\n    }\r\n\r\n    handleDataChange =({created,updated,deleteted}) =>{\r\n        let scheduleData ={};\r\n        let postParam =undefined;\r\n        let formRef={};\r\n        if(created.length>0){\r\n        \r\n            const aa= created.concat(created.map(item => Object.assign({}, item, {})));\r\n            scheduleData[\"allotjob\"] = {\"jsondata\": aa[0]};\r\n            formRef = {\"current\": \"form\"};\r\n\r\n            let saveType=1;\r\n            const inputParam = {\r\n                classUrl: \"joballocation\",\r\n                methodUrl: \"AssignJob\",\r\n                inputData: {userinfo: this.props.Login.userInfo },\r\n                operation: \"create\",\r\n                saveType,formRef,postParam, searchRef: this.searchRef,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        \r\n        \r\n        \r\n        }else if(updated.length>0){\r\n        \r\n        }else if (deleteted.length>0){\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,validateEsignCredential,ReceiveinLabStatusWise,getRegTypeJobAllocation,getRegSubTypeJobAllocation,\r\n    getAppConfigVersionJobAllocation,getFilterStatusJobAllocation,getSectionJobAllocation,getTestStatusJobAllocation,getFilterStatusSectionJobAllocation,\r\n    getJobAllcationFilterSubmit,getJobAllocationSubSampleDetail,getJobAllocationTestDetail,getTestChildTabDetailJobAllocation,getAllottedTestWise,getAllotAnotherUserTestWise,getRescheduleTestWise,getInstrument,getUsers,\r\n    ViewAnalystCalendar,CancelTestWise,AllotJobAction,AllotAnotherUserAction,RescheduleJobAction,getSubSampleChildTabDetail,getSampleChildTabDetail,getCommentsCombo,getAttachmentCombo,filterTransactionList\r\n})(injectIntl(JobAllocation))\r\n\r\nexport const currentYear = new Date().getFullYear();\r\n\r\nexport  const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};"]},"metadata":{},"sourceType":"module"}