{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';import{showEsign}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';var PortalOrderDetailsTubeTab=/*#__PURE__*/function(_React$Component){_inherits(PortalOrderDetailsTubeTab,_React$Component);var _super=_createSuper(PortalOrderDetailsTubeTab);function PortalOrderDetailsTubeTab(props){var _this;_classCallCheck(this,PortalOrderDetailsTubeTab);_this=_super.call(this,props);_this.onReceiveOrderClick=function(row){var ncontrolCode=_this.props.controlMap.has(\"ReceivedPortalOrder\")&&_this.props.controlMap.get(\"ReceivedPortalOrder\").ncontrolcode;var inputData=[];inputData[\"userinfo\"]=_this.props.userInfo;var postParam=undefined;inputData[\"portalorder\"]={\"nportalordercode\":row.nportalordercode};inputData[\"portalorder\"][\"nportalordercontainercode\"]=row.nportalordercontainercode;inputData[\"portalorder\"][\"nportalordercode\"]=_this.props.masterData.selectedPortalOrder.nportalordercode;postParam={inputListName:\"PortalOrderDetails\",selectedObject:\"PortalOrderDetails\",primaryKeyField:\"nportalordercontainercode\"};var inputParam={classUrl:'portalorderdetails',methodUrl:\"PortalOrderDetails\",inputData:inputData,operation:\"received\",postParam:postParam,selectedId:row.nportalordercontainercode};var saveType;var masterData=_this.props.masterData;var esignNeeded=showEsign(_this.props.userRoleControlRights,_this.props.userInfo.nformcode,ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,openModal:true,operation:\"received\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.state={tubeDataState:{skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5}};return _this;}_createClass(PortalOrderDetailsTubeTab,[{key:\"render\",value:function render(){var _this2=this;var portalTubeColumnList=[{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"150px\"},// {\"idsName\":\"IDS_TUBETYPE\",\"dataField\":\"stubename\",\"width\":\"150px\"},\n{\"idsName\":\"IDS_TUBEQTY\",\"dataField\":\"ntubeqty\",\"width\":\"150px\"},{\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"ssampletype\",\"width\":\"150px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"150px\"}];var receivedId=this.props.controlMap.has(\"ReceivedPortalOrder\")&&this.props.controlMap.get(\"ReceivedPortalOrder\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"portalordercontainerkey\",primaryKeyField:\"nportalordercontainercode\",data:this.props.PortalOrderTube,dataResult:process(this.props.PortalOrderTube||[],this.state.tubeDataState),dataState:this.state.tubeDataState,dataStateChange:function dataStateChange(event){return _this2.setState({tubeDataState:event.dataState});},extractedColumnList:portalTubeColumnList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:'scrollable',isActionRequired:true,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_RECEIVE\"}),controlname:\"faReceivedItem\",objectName:\"mastertoedit\",hidden:this.props.userRoleControlRights.indexOf(receivedId)===-1,onClick:this.onReceiveOrderClick,inputData:{}}]}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.PortalOrderTube!==previousProps.PortalOrderTube){var tubeDataState=this.state.tubeDataState;if(this.props.dataState===undefined){tubeDataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({tubeDataState:tubeDataState});}}//}\n}]);return PortalOrderDetailsTubeTab;}(React.Component);;export default injectIntl(PortalOrderDetailsTubeTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/registration/PortalOrderDetailsTubeTab.jsx"],"names":["React","injectIntl","Row","Col","DataGrid","process","showEsign","DEFAULT_RETURN","PortalOrderDetailsTubeTab","props","onReceiveOrderClick","row","ncontrolCode","controlMap","has","get","ncontrolcode","inputData","userInfo","postParam","undefined","nportalordercode","nportalordercontainercode","masterData","selectedPortalOrder","inputListName","selectedObject","primaryKeyField","inputParam","classUrl","methodUrl","operation","selectedId","saveType","esignNeeded","userRoleControlRights","nformcode","updateInfo","typeName","data","loadEsign","screenData","openModal","updateStore","crudMaster","state","tubeDataState","skip","take","settings","parseInt","portalTubeColumnList","receivedId","PortalOrderTube","event","setState","dataState","title","intl","formatMessage","id","controlname","objectName","hidden","indexOf","onClick","previousProps","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA0B,YAA1B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,cAAT,KAA+B,0BAA/B,C,GACOC,CAAAA,yB,kJACH,mCAAYC,KAAZ,CAAmB,2DACnB,uBAAMA,KAAN,EADmB,MAgEvBC,mBAhEuB,CAgED,SAACC,GAAD,CAAS,CAGvB,GAAMC,CAAAA,YAAY,CAAG,MAAKH,KAAL,CAAWI,UAAX,CAAsBC,GAAtB,CAA0B,qBAA1B,GAAoD,MAAKL,KAAL,CAAWI,UAAX,CAAsBE,GAAtB,CAA0B,qBAA1B,EAAiDC,YAA1H,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKR,KAAL,CAAWS,QAAnC,CAEA,GAAIC,CAAAA,SAAS,CAAGC,SAAhB,CACAH,SAAS,CAAC,aAAD,CAAT,CAA2B,CACvB,mBAAoBN,GAAG,CAACU,gBADD,CAA3B,CAGAJ,SAAS,CAAC,aAAD,CAAT,CAAyB,2BAAzB,EAAwDN,GAAG,CAACW,yBAA5D,CAEAL,SAAS,CAAC,aAAD,CAAT,CAAyB,kBAAzB,EAA+C,MAAKR,KAAL,CAAWc,UAAX,CAAsBC,mBAAtB,CAA0CH,gBAAzF,CACAF,SAAS,CAAG,CAAEM,aAAa,CAAE,oBAAjB,CAAuCC,cAAc,CAAE,oBAAvD,CAA6EC,eAAe,CAAE,2BAA9F,CAAZ,CACA,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,oBADK,CAEfC,SAAS,CAAE,oBAFI,CAGfb,SAAS,CAAEA,SAHI,CAIfc,SAAS,CAAE,UAJI,CAIQZ,SAAS,CAATA,SAJR,CAKfa,UAAU,CAAErB,GAAG,CAACW,yBALD,CAAnB,CAOA,GAAIW,CAAAA,QAAJ,CAEA,GAAMV,CAAAA,UAAU,CAAG,MAAKd,KAAL,CAAWc,UAA9B,CAEA,GAAMW,CAAAA,WAAW,CAAG5B,SAAS,CAAC,MAAKG,KAAL,CAAW0B,qBAAZ,CAAmC,MAAK1B,KAAL,CAAWS,QAAX,CAAoBkB,SAAvD,CAAkExB,YAAlE,CAA7B,CAIA,GAAIsB,WAAJ,CAAiB,CACb,GAAMG,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE/B,cADK,CAEfgC,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEb,UAAU,CAAVA,UAAF,CAAcL,UAAU,CAAVA,UAAd,CAD3B,CACuDU,QAAQ,CAARA,QADvD,CACiES,SAAS,CAAE,IAD5E,CACkFX,SAAS,CAAE,UAD7F,CAFS,CAAnB,CAMA,MAAKtB,KAAL,CAAWkC,WAAX,CAAuBN,UAAvB,EACH,CARD,IASK,CACD,MAAK5B,KAAL,CAAWmC,UAAX,CAAsBhB,UAAtB,CAAkCL,UAAlC,CAA8C,WAA9C,EACH,CAGJ,CA5GkB,CAEnB,MAAKsB,KAAL,CAAc,CACVC,aAAa,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKvC,KAAL,CAAWwC,QAAX,CAAsBC,QAAQ,CAAC,MAAKzC,KAAL,CAAWwC,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CADL,CAAd,CAFmB,aAKtB,C,4DACG,iBAAQ,iBACJ,GAAME,CAAAA,oBAAoB,CAAG,CACzB,CAAC,UAAU,mBAAX,CAA+B,YAAY,gBAA3C,CAA4D,QAAQ,OAApE,CADyB,CAEzB;AACA,CAAC,UAAU,aAAX,CAAyB,YAAY,UAArC,CAAgD,QAAQ,OAAxD,CAHyB,CAIzB,CAAC,UAAU,gBAAX,CAA4B,YAAY,aAAxC,CAAsD,QAAQ,OAA9D,CAJyB,CAKzB,CAAC,UAAU,YAAX,CAAwB,YAAY,gBAApC,CAAqD,QAAQ,OAA7D,CALyB,CAA7B,CAQA,GAAMC,CAAAA,UAAU,CAAG,KAAK3C,KAAL,CAAWI,UAAX,CAAsBC,GAAtB,CAA0B,qBAA1B,GAAoD,KAAKL,KAAL,CAAWI,UAAX,CAAsBE,GAAtB,CAA0B,qBAA1B,EAAiDC,YAAxH,CACJ,mBACI,qDAEI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,QAAD,EACG,GAAG,CAAC,yBADP,CAEG,eAAe,CAAG,2BAFrB,CAGG,IAAI,CAAI,KAAKP,KAAL,CAAW4C,eAHtB,CAIG,UAAU,CAAIhD,OAAO,CAAC,KAAKI,KAAL,CAAW4C,eAAX,EAA4B,EAA7B,CAAgC,KAAKR,KAAL,CAAWC,aAA3C,CAJxB,CAKG,SAAS,CAAI,KAAKD,KAAL,CAAWC,aAL3B,CAMG,eAAe,CAAI,yBAACQ,KAAD,QAAW,CAAA,MAAI,CAACC,QAAL,CAAc,CAAET,aAAa,CAAEQ,KAAK,CAACE,SAAvB,CAAd,CAAX,EANtB,CAOG,mBAAmB,CAAIL,oBAP1B,CAQG,UAAU,CAAI,KAAK1C,KAAL,CAAWI,UAR5B,CASG,qBAAqB,CAAE,KAAKJ,KAAL,CAAW0B,qBATrC,CAUG,UAAU,CAAI,KAAK1B,KAAL,CAAWmB,UAV5B,CAWG,QAAQ,CAAI,KAAKnB,KAAL,CAAWS,QAX1B,CAYG,QAAQ,CAAE,IAZb,CAaG,UAAU,CAAE,YAbf,CAcG,gBAAgB,CAAE,IAdrB,CAeG,WAAW,CAAE,CACZ,CACIuC,KAAK,CAAE,KAAKhD,KAAL,CAAWiD,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,aAAN,CAA9B,CADX,CAEIC,WAAW,CAAE,gBAFjB,CAGIC,UAAU,CAAE,cAHhB,CAIIC,MAAM,CAAE,KAAKtD,KAAL,CAAW0B,qBAAX,CAAiC6B,OAAjC,CAAyCZ,UAAzC,IAAyD,CAAC,CAJtE,CAKIa,OAAO,CAAE,KAAKvD,mBALlB,CAMIO,SAAS,CAAE,EANf,CADY,CAfhB,EADJ,CADJ,CAFJ,CADJ,CAqCH,C,kCACD,4BAAmBiD,aAAnB,CAAkC,CAC9B,GAAI,KAAKzD,KAAL,CAAW4C,eAAX,GAA+Ba,aAAa,CAACb,eAAjD,CAAkE,CAC9D,GAAMP,CAAAA,aAAN,CAAuB,KAAKD,KAA5B,CAAMC,aAAN,CACA,GAAI,KAAKrC,KAAL,CAAW+C,SAAX,GAAwBpC,SAA5B,CAAuC,CACnC0B,aAAa,CAAG,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKvC,KAAL,CAAWwC,QAAX,CAAsBC,QAAQ,CAAC,KAAKzC,KAAL,CAAWwC,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CAAhB,CACH,CACD,KAAKM,QAAL,CAAc,CAAET,aAAa,CAAbA,aAAF,CAAd,EACH,CAEJ,CA8CD;uCA9GyC9C,KAAK,CAACmE,S,EAgH9C,CAED,cAAelE,CAAAA,UAAU,CAACO,yBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl} from 'react-intl';\r\nimport {Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { showEsign } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nclass  PortalOrderDetailsTubeTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        tubeDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n    render(){\r\n        const portalTubeColumnList = [\r\n            {\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"150px\"},\r\n            // {\"idsName\":\"IDS_TUBETYPE\",\"dataField\":\"stubename\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_TUBEQTY\",\"dataField\":\"ntubeqty\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"ssampletype\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_STATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"150px\"}\r\n\r\n        ];\r\n        const receivedId = this.props.controlMap.has(\"ReceivedPortalOrder\") && this.props.controlMap.get(\"ReceivedPortalOrder\").ncontrolcode;\r\n    return (\r\n        <>\r\n            \r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                       key=\"portalordercontainerkey\"\r\n                       primaryKeyField = \"nportalordercontainercode\"\r\n                       data = {this.props.PortalOrderTube}\r\n                       dataResult = {process(this.props.PortalOrderTube||[],this.state.tubeDataState)}\r\n                       dataState = {this.state.tubeDataState}\r\n                       dataStateChange = {(event) => this.setState({ tubeDataState: event.dataState })}\r\n                       extractedColumnList = {portalTubeColumnList}\r\n                       controlMap = {this.props.controlMap}\r\n                       userRoleControlRights={this.props.userRoleControlRights}\r\n                       inputParam = {this.props.inputParam}\r\n                       userInfo = {this.props.userInfo}\r\n                       pageable={true}\r\n                       scrollable={'scrollable'}\r\n                       isActionRequired={true}\r\n                       actionIcons={[\r\n                        {\r\n                            title: this.props.intl.formatMessage({ id: \"IDS_RECEIVE\" }),\r\n                            controlname: \"faReceivedItem\",\r\n                            objectName: \"mastertoedit\",\r\n                            hidden: this.props.userRoleControlRights.indexOf(receivedId) === -1,\r\n                            onClick: this.onReceiveOrderClick,\r\n                            inputData: {}\r\n                        }\r\n                    ]\r\n                }\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.PortalOrderTube !== previousProps.PortalOrderTube) {\r\n        let { tubeDataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n            tubeDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ tubeDataState });\r\n    }\r\n\r\n}\r\nonReceiveOrderClick = (row) => {\r\n\r\n   \r\n        const ncontrolCode = this.props.controlMap.has(\"ReceivedPortalOrder\") && this.props.controlMap.get(\"ReceivedPortalOrder\").ncontrolcode\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n\r\n        let postParam = undefined;\r\n        inputData[\"portalorder\"] = {\r\n            \"nportalordercode\": row.nportalordercode\r\n        };\r\n        inputData[\"portalorder\"][\"nportalordercontainercode\"] = row.nportalordercontainercode;\r\n\r\n        inputData[\"portalorder\"][\"nportalordercode\"] = this.props.masterData.selectedPortalOrder.nportalordercode;\r\n        postParam = { inputListName: \"PortalOrderDetails\", selectedObject: \"PortalOrderDetails\", primaryKeyField: \"nportalordercontainercode\" };\r\n        const inputParam = {\r\n            classUrl: 'portalorderdetails',\r\n            methodUrl: \"PortalOrderDetails\",\r\n            inputData: inputData,\r\n            operation: \"received\", postParam,\r\n            selectedId: row.nportalordercontainercode\r\n        }\r\n        let saveType;\r\n\r\n        const masterData = this.props.masterData;\r\n\r\n        const esignNeeded = showEsign(this.props.userRoleControlRights, this.props.userInfo.nformcode, ncontrolCode);\r\n\r\n\r\n\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"received\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n\r\n    }\r\n//}\r\n\r\n};\r\n\r\nexport default injectIntl(PortalOrderDetailsTubeTab);"]},"metadata":{},"sourceType":"module"}