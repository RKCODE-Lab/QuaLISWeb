{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\checklist\\\\checklist\\\\ChecklistVersionAccordion.js\";\nimport React from 'react';\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faEye, faPencilAlt, faPlus, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { injectIntl, FormattedMessage } from \"react-intl\"; // import DataGrid from '../../components/data-grid/data-grid.component';\n\nimport DataGrid from \"../../../components/data-grid/data-grid.component\";\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; //import { ReadOnlyText } from '../../../components/login/login.styles';\n\nimport { ReadOnlyText } from '../../../components/App.styles'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n//import ReactTooltip from 'react-tooltip';\n\nconst ChecklistVersionAccordion = props => {\n  const addQBId = props.controlMap.has(\"AddChecklistVersionQB\") && props.controlMap.get(\"AddChecklistVersionQB\").ncontrolcode;\n  const approveVersionId = props.controlMap.has(\"ApproveChecklistVersion\") && props.controlMap.get(\"ApproveChecklistVersion\").ncontrolcode;\n  const editVersionId = props.controlMap.has(\"EditChecklistVersion\") && props.controlMap.get(\"EditChecklistVersion\").ncontrolcode;\n  const viewVersionId = props.controlMap.has(\"ViewChecklistVersion\") && props.controlMap.get(\"ViewChecklistVersion\").ncontrolcode;\n  const deleteVersionId = props.controlMap.has(\"DeleteChecklistVersion\") && props.controlMap.get(\"DeleteChecklistVersion\").ncontrolcode;\n  const editQBId = props.controlMap.has(\"EditChecklistVersionQB\") && props.controlMap.get(\"EditChecklistVersionQB\").ncontrolcode;\n  const qbEditParam = {\n    screenName: \"ChecklistVersionQB\",\n    operation: \"update\",\n    primaryKeyField: \"nchecklistversionqbcode\",\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    ncontrolCode: editQBId\n  };\n  const qbDeleteParam = {\n    screenName: \"ChecklistVersionQB\",\n    methodUrl: \"ChecklistVersionQB\",\n    operation: \"delete\",\n    key: 'checklistversionqb'\n  };\n  const checklistVersionEditParam = {\n    screenName: \"ChecklistVersion\",\n    operation: \"update\",\n    primaryKeyField: \"nchecklistversioncode\",\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    primaryKeyValue: props.masterData.selectedversion ? props.masterData.selectedversion.nchecklistversioncode : -1,\n    ncontrolCode: editVersionId\n  };\n  const versionDeleteParam = {\n    screenName: \"Checklist\",\n    methodUrl: \"ChecklistVersion\",\n    operation: \"delete\",\n    key: 'checklistversion',\n    ncontrolCode: deleteVersionId\n  };\n  const extractedColumnList = [{\n    \"idsName\": \"IDS_QUESTION\",\n    \"dataField\": \"squestion\",\n    \"width\": \"300px\"\n  }];\n  const detailedFieldList = [{\n    \"idsName\": \"IDS_QBCATEGORYNAME\",\n    \"dataField\": \"schecklistqbcategoryname\",\n    \"width\": \"150px\"\n  }, {\n    \"idsName\": props.intl.formatMessage({\n      id: \"IDS_CHECKLIST\"\n    }).concat(\" \" + (props.genericLabel ? props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : \"Component\")),\n    \"dataField\": \"scomponentname\",\n    \"width\": \"150px\"\n  }, {\n    \"idsName\": \"IDS_MANDATORY\",\n    \"dataField\": \"smandatory\",\n    \"width\": \"150px\"\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_EDIT\"\n    }) //    data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(editVersionId) === -1,\n    onClick: () => props.fetchChecklistRecordByID(checklistVersionEditParam),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPencilAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_DELETE\"\n    }) //   data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(deleteVersionId) === -1,\n    onClick: () => props.ConfirmDelete({ ...versionDeleteParam,\n      selectedRecord: props.version\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_VIEW\"\n    }) //   data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(viewVersionId) === -1,\n    onClick: () => props.viewVersionTemplate(props.version, props.userInfo, viewVersionId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEye,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_APPROVE\"\n    }) //   data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(approveVersionId) === -1,\n    onClick: () => props.approveVersion(props.version, approveVersionId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faThumbsUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_VERSIONNO\",\n    message: \"Checklist Version No:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 36\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, props.version.schecklistversiondesc))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_STATUS\",\n    message: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 36\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, props.version.stransdisplaystatus)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"add-txt-btn float-right\" // data-tip={props.intl.formatMessage({ id:\"IDS_ADDQB\"})}\n    ,\n    hidden: props.userRoleControlRights.indexOf(addQBId) === -1,\n    onClick: () => props.showChecklistAddScreen(props.version.nchecklistversioncode, 'checklistversionqb', addQBId, props.userInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_QB\",\n    defaultMessage: \"QB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    primaryKeyField: \"nchecklistversionqbcode\",\n    data: props.masterData.checklistversionqb,\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    expandField: \"expanded\",\n    detailedFieldList: detailedFieldList,\n    extractedColumnList: extractedColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    inputParam: props.inputParam,\n    userInfo: props.userInfo,\n    methodUrl: \"ChecklistVersionQB\" //gridHeight={\"400px\"}\n    ,\n    fetchRecord: props.fetchChecklistRecordByID,\n    editParam: qbEditParam,\n    deleteRecord: props.deleteRecord,\n    deleteParam: qbDeleteParam,\n    selectedId: props.selectedId,\n    isComponent: true,\n    isActionRequired: true,\n    isToolBarRequired: false,\n    scrollable: \"scrollable\",\n    pageable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(ChecklistVersionAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/checklist/checklist/ChecklistVersionAccordion.js"],"names":["React","faTrashAlt","faEye","faPencilAlt","faPlus","faThumbsUp","injectIntl","FormattedMessage","DataGrid","Row","Col","Nav","FormGroup","FormLabel","FontAwesomeIcon","ReadOnlyText","ChecklistVersionAccordion","props","addQBId","controlMap","has","get","ncontrolcode","approveVersionId","editVersionId","viewVersionId","deleteVersionId","editQBId","qbEditParam","screenName","operation","primaryKeyField","masterData","userInfo","ncontrolCode","qbDeleteParam","methodUrl","key","checklistVersionEditParam","primaryKeyValue","selectedversion","nchecklistversioncode","versionDeleteParam","extractedColumnList","detailedFieldList","intl","formatMessage","id","concat","genericLabel","slanguagetypecode","userRoleControlRights","indexOf","fetchChecklistRecordByID","ConfirmDelete","selectedRecord","version","viewVersionTemplate","approveVersion","schecklistversiondesc","stransdisplaystatus","showChecklistAddScreen","checklistversionqb","dataResult","dataState","dataStateChange","inputParam","deleteRecord","selectedId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,UAArC,QAAuD,mCAAvD;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,SAAxB,EAAmCC,SAAnC,QAAoD,iBAApD;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CACA;;AACA,SAASC,YAAT,QAA6B,gCAA7B,C,CACA;AACA;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AACzC,QAAMC,OAAO,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,uBAArB,KAAiDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,uBAArB,EAA8CC,YAA/G;AACA,QAAMC,gBAAgB,GAAGN,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,yBAArB,KAAmDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,yBAArB,EAAgDC,YAA5H;AACA,QAAME,aAAa,GAAGP,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,sBAArB,KAAgDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,sBAArB,EAA6CC,YAAnH;AACA,QAAMG,aAAa,GAAGR,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,sBAArB,KAAgDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,sBAArB,EAA6CC,YAAnH;AACA,QAAMI,eAAe,GAAGT,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,wBAArB,KAAkDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,wBAArB,EAA+CC,YAAzH;AACA,QAAMK,QAAQ,GAAGV,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,wBAArB,KAAkDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,wBAArB,EAA+CC,YAAlH;AAEA,QAAMM,WAAW,GAAG;AAChBC,IAAAA,UAAU,EAAE,oBADI;AAEhBC,IAAAA,SAAS,EAAE,QAFK;AAGhBC,IAAAA,eAAe,EAAE,yBAHD;AAIhBC,IAAAA,UAAU,EAAEf,KAAK,CAACe,UAJF;AAKhBC,IAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QALA;AAMhBC,IAAAA,YAAY,EAAEP;AANE,GAApB;AASA,QAAMQ,aAAa,GAAG;AAClBN,IAAAA,UAAU,EAAE,oBADM;AAElBO,IAAAA,SAAS,EAAE,oBAFO;AAGlBN,IAAAA,SAAS,EAAE,QAHO;AAIlBO,IAAAA,GAAG,EAAE;AAJa,GAAtB;AAMA,QAAMC,yBAAyB,GAAG;AAC9BT,IAAAA,UAAU,EAAE,kBADkB;AAE9BC,IAAAA,SAAS,EAAE,QAFmB;AAG9BC,IAAAA,eAAe,EAAE,uBAHa;AAI9BC,IAAAA,UAAU,EAAEf,KAAK,CAACe,UAJY;AAK9BC,IAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QALc;AAM9BM,IAAAA,eAAe,EAAEtB,KAAK,CAACe,UAAN,CAAiBQ,eAAjB,GAAmCvB,KAAK,CAACe,UAAN,CAAiBQ,eAAjB,CAAiCC,qBAApE,GAA4F,CAAC,CANhF;AAO9BP,IAAAA,YAAY,EAAEV;AAPgB,GAAlC;AASA,QAAMkB,kBAAkB,GAAG;AACvBb,IAAAA,UAAU,EAAE,WADW;AAEvBO,IAAAA,SAAS,EAAE,kBAFY;AAGvBN,IAAAA,SAAS,EAAE,QAHY;AAIvBO,IAAAA,GAAG,EAAE,kBAJkB;AAKvBH,IAAAA,YAAY,EAAER;AALS,GAA3B;AAQA,QAAMiB,mBAAmB,GAAG,CACxB;AAAE,eAAW,cAAb;AAA6B,iBAAa,WAA1C;AAAuD,aAAS;AAAhE,GADwB,CAA5B;AAGA,QAAMC,iBAAiB,GAAG,CACtB;AAAE,eAAW,oBAAb;AAAmC,iBAAa,0BAAhD;AAA4E,aAAS;AAArF,GADsB,EAEtB;AAAE,eAAW3B,KAAK,CAAC4B,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,EAAgDC,MAAhD,CAAuD,OAAK/B,KAAK,CAACgC,YAAN,GAAqBhC,KAAK,CAACgC,YAAN,CAAmB,WAAnB,EAAgC,UAAhC,EAA4C,cAA5C,EAA4DhC,KAAK,CAACgB,QAAN,CAAeiB,iBAA3E,CAArB,GAAqH,WAA1H,CAAvD,CAAb;AAA6M,iBAAa,gBAA1N;AAA4O,aAAS;AAArP,GAFsB,EAGtB;AAAE,eAAW,eAAb;AAA8B,iBAAa,YAA3C;AAAyD,aAAS;AAAlE,GAHsB,CAA1B;AAMA,sBACI,uDAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA4BI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,kCAApB;AACI,gBAAUjC,KAAK,CAAC4B,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADd,CAEC;AAFD;AAGI,IAAA,MAAM,EAAE9B,KAAK,CAACkC,qBAAN,CAA4BC,OAA5B,CAAoC5B,aAApC,MAAuD,CAAC,CAHpE;AAII,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACoC,wBAAN,CAA+Bf,yBAA/B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEnC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAHJ,eAWI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,oDAApB;AACI,gBAAUc,KAAK,CAAC4B,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADd,CAEE;AAFF;AAGI,IAAA,MAAM,EAAE9B,KAAK,CAACkC,qBAAN,CAA4BC,OAA5B,CAAoC1B,eAApC,MAAyD,CAAC,CAHtE;AAII,IAAA,OAAO,EAAE,MAAMT,KAAK,CAACqC,aAAN,CAAoB,EAAE,GAAGZ,kBAAL;AAAyBa,MAAAA,cAAc,EAAEtC,KAAK,CAACuC;AAA/C,KAApB,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMQ,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvD,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,CAXJ,eA6BI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,kCAApB;AACC,gBAAUgB,KAAK,CAAC4B,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX,CAED;AAFC;AAGI,IAAA,MAAM,EAAE9B,KAAK,CAACkC,qBAAN,CAA4BC,OAA5B,CAAoC3B,aAApC,MAAuD,CAAC,CAHpE;AAII,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACwC,mBAAN,CAA0BxC,KAAK,CAACuC,OAAhC,EAAyCvC,KAAK,CAACgB,QAA/C,EAAyDR,aAAzD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CA7BJ,eAqCI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,kCAApB;AACE,gBAAUe,KAAK,CAAC4B,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADZ,CAEA;AAFA;AAGI,IAAA,MAAM,EAAE9B,KAAK,CAACkC,qBAAN,CAA4BC,OAA5B,CAAoC7B,gBAApC,MAA0D,CAAC,CAHvE;AAII,IAAA,OAAO,EAAE,MAAMN,KAAK,CAACyC,cAAN,CAAqBzC,KAAK,CAACuC,OAA3B,EAAoCjC,gBAApC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAElB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CArCJ,CA5BJ,CADJ,CAFJ,eAgFI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,eAAtB;AAAuC,IAAA,OAAO,EAAC,uBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeY,KAAK,CAACuC,OAAN,CAAcG,qBAA7B,CAFJ,CADJ,CADJ,eAOI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,YAAtB;AAAoC,IAAA,OAAO,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe1C,KAAK,CAACuC,OAAN,CAAcI,mBAA7B,CAFJ,CADJ,CAPJ,CAhFJ,eA8FI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,yBAApB,CACA;AADA;AAEI,IAAA,MAAM,EAAE3C,KAAK,CAACkC,qBAAN,CAA4BC,OAA5B,CAAoClC,OAApC,MAAiD,CAAC,CAF9D;AAGI,IAAA,OAAO,EAAE,MAAMD,KAAK,CAAC4C,sBAAN,CAA6B5C,KAAK,CAACuC,OAAN,CAAcf,qBAA3C,EAAkE,oBAAlE,EAAwFvB,OAAxF,EAAiGD,KAAK,CAACgB,QAAvG,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,oBAMI,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,QAArB;AAA8B,IAAA,cAAc,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAFJ,CADJ,eAYI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,eAAe,EAAE,yBADrB;AAEI,IAAA,IAAI,EAAEa,KAAK,CAACe,UAAN,CAAiB8B,kBAF3B;AAGI,IAAA,UAAU,EAAE7C,KAAK,CAAC8C,UAHtB;AAII,IAAA,SAAS,EAAE9C,KAAK,CAAC+C,SAJrB;AAKI,IAAA,eAAe,EAAE/C,KAAK,CAACgD,eAL3B;AAMI,IAAA,WAAW,EAAC,UANhB;AAOI,IAAA,iBAAiB,EAAErB,iBAPvB;AAQI,IAAA,mBAAmB,EAAED,mBARzB;AASI,IAAA,UAAU,EAAE1B,KAAK,CAACE,UATtB;AAUI,IAAA,qBAAqB,EAAEF,KAAK,CAACkC,qBAVjC;AAWI,IAAA,UAAU,EAAElC,KAAK,CAACiD,UAXtB;AAYI,IAAA,QAAQ,EAAEjD,KAAK,CAACgB,QAZpB;AAaI,IAAA,SAAS,EAAC,oBAbd,CAcI;AAdJ;AAeI,IAAA,WAAW,EAAEhB,KAAK,CAACoC,wBAfvB;AAgBI,IAAA,SAAS,EAAEzB,WAhBf;AAiBI,IAAA,YAAY,EAAEX,KAAK,CAACkD,YAjBxB;AAkBI,IAAA,WAAW,EAAEhC,aAlBjB;AAmBI,IAAA,UAAU,EAAElB,KAAK,CAACmD,UAnBtB;AAoBI,IAAA,WAAW,EAAE,IApBjB;AAqBI,IAAA,gBAAgB,EAAE,IArBtB;AAsBI,IAAA,iBAAiB,EAAE,KAtBvB;AAuBI,IAAA,UAAU,EAAE,YAvBhB;AAwBI,IAAA,QAAQ,EAAI,IAxBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CA9FJ,CADJ;AA4IH,CA7LD;;AA8LA,eAAe9D,UAAU,CAACU,yBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEye, faPencilAlt, faPlus, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\n// import DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DataGrid from \"../../../components/data-grid/data-grid.component\";\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { ReadOnlyText } from '../../../components/login/login.styles';\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n//import ReactTooltip from 'react-tooltip';\r\n\r\nconst ChecklistVersionAccordion = (props) => {\r\n    const addQBId = props.controlMap.has(\"AddChecklistVersionQB\") && props.controlMap.get(\"AddChecklistVersionQB\").ncontrolcode\r\n    const approveVersionId = props.controlMap.has(\"ApproveChecklistVersion\") && props.controlMap.get(\"ApproveChecklistVersion\").ncontrolcode;\r\n    const editVersionId = props.controlMap.has(\"EditChecklistVersion\") && props.controlMap.get(\"EditChecklistVersion\").ncontrolcode\r\n    const viewVersionId = props.controlMap.has(\"ViewChecklistVersion\") && props.controlMap.get(\"ViewChecklistVersion\").ncontrolcode\r\n    const deleteVersionId = props.controlMap.has(\"DeleteChecklistVersion\") && props.controlMap.get(\"DeleteChecklistVersion\").ncontrolcode;\r\n    const editQBId = props.controlMap.has(\"EditChecklistVersionQB\") && props.controlMap.get(\"EditChecklistVersionQB\").ncontrolcode\r\n\r\n    const qbEditParam = {\r\n        screenName: \"ChecklistVersionQB\",\r\n        operation: \"update\",\r\n        primaryKeyField: \"nchecklistversionqbcode\",\r\n        masterData: props.masterData,\r\n        userInfo: props.userInfo,\r\n        ncontrolCode: editQBId\r\n    };\r\n\r\n    const qbDeleteParam = {\r\n        screenName: \"ChecklistVersionQB\",\r\n        methodUrl: \"ChecklistVersionQB\",\r\n        operation: \"delete\",\r\n        key: 'checklistversionqb'\r\n    };\r\n    const checklistVersionEditParam = {\r\n        screenName: \"ChecklistVersion\",\r\n        operation: \"update\",\r\n        primaryKeyField: \"nchecklistversioncode\",\r\n        masterData: props.masterData,\r\n        userInfo: props.userInfo,\r\n        primaryKeyValue: props.masterData.selectedversion ? props.masterData.selectedversion.nchecklistversioncode : -1,\r\n        ncontrolCode: editVersionId\r\n    };\r\n    const versionDeleteParam = {\r\n        screenName: \"Checklist\",\r\n        methodUrl: \"ChecklistVersion\",\r\n        operation: \"delete\",\r\n        key: 'checklistversion',\r\n        ncontrolCode: deleteVersionId\r\n    };\r\n\r\n    const extractedColumnList = [\r\n        { \"idsName\": \"IDS_QUESTION\", \"dataField\": \"squestion\", \"width\": \"300px\" }\r\n    ]\r\n    const detailedFieldList = [\r\n        { \"idsName\": \"IDS_QBCATEGORYNAME\", \"dataField\": \"schecklistqbcategoryname\", \"width\": \"150px\" },\r\n        { \"idsName\": props.intl.formatMessage({ id:\"IDS_CHECKLIST\"}).concat(\" \"+(props.genericLabel ? props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : \"Component\")), \"dataField\": \"scomponentname\", \"width\": \"150px\" },\r\n        { \"idsName\": \"IDS_MANDATORY\", \"dataField\": \"smandatory\", \"width\": \"150px\" }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n          {/* <ReactTooltip place=\"bottom\" globalEventOff='click'/> */}\r\n            <Row>\r\n                <Col md={12}>\r\n                    {/* <Nav.Link className=\"action-icons-wrap float-right\">\r\n                    <FontAwesomeIcon \r\n                        icon={faPencilAlt}  \r\n                        hidden={props.userRoleControlRights.indexOf(editVersionId) === -1} \r\n                        onClick={()=>props.fetchChecklistRecordByID(checklistVersionEditParam)} \r\n                    />\r\n                    <ConfirmDialog\r\n                        name=\"deleteMessage\" \r\n                        message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\"})}\r\n                        doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}  \r\n                        doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                        icon={faTrashAlt}\r\n                        title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                        hidden={props.userRoleControlRights.indexOf(deleteVersionId) === -1}\r\n                        handleClickDelete={()=>props.deleteRecord({...versionDeleteParam,selectedRecord:props.version})} \r\n                    />\r\n                    <FontAwesomeIcon \r\n                        icon={faEye}  \r\n                        hidden={props.userRoleControlRights.indexOf(viewVersionId) === -1} \r\n                        onClick={()=>props.viewVersionTemplate(props.version,props.userInfo)} \r\n                    />\r\n                    <FontAwesomeIcon \r\n                        icon={faThumbsUp} \r\n                        hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1} \r\n                        onClick={()=>props.approveVersion(props.version,approveVersionId)}\r\n                    />\r\n                </Nav.Link> */}\r\n                    <div className=\"d-flex justify-content-end mb-3\"> \r\n                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                         //    data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(editVersionId) === -1}\r\n                            onClick={() => props.fetchChecklistRecordByID(checklistVersionEditParam)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                          //   data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(deleteVersionId) === -1}\r\n                            onClick={() => props.ConfirmDelete({ ...versionDeleteParam, selectedRecord: props.version })}\r\n                        >\r\n                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                            {/* <ConfirmDialog\r\n                                name=\"deleteMessage\"\r\n                                message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                icon={faTrashAlt}\r\n                                //title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                hidden={props.userRoleControlRights.indexOf(deleteVersionId) === -1}\r\n                                handleClickDelete={() => props.deleteRecord({ ...versionDeleteParam, selectedRecord: props.version })}\r\n                            /> */}\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                         data-tip={props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                       //   data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(viewVersionId) === -1}\r\n                            onClick={() => props.viewVersionTemplate(props.version, props.userInfo, viewVersionId)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEye} />\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                          data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                        //   data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                            onClick={() => props.approveVersion(props.version, approveVersionId)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                        </Nav.Link>\r\n                        {/* </Tooltip> */}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <FormLabel><FormattedMessage id={\"IDS_VERSIONNO\"} message=\"Checklist Version No:\" /></FormLabel>\r\n                        <ReadOnlyText>{props.version.schecklistversiondesc}</ReadOnlyText>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <FormLabel><FormattedMessage id={\"IDS_STATUS\"} message=\"Status\" /></FormLabel>\r\n                        <ReadOnlyText>{props.version.stransdisplaystatus}</ReadOnlyText>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                {/* <ReactTooltip place=\"bottom\" /> */}\r\n                    <Nav.Link className=\"add-txt-btn float-right\"\r\n                    // data-tip={props.intl.formatMessage({ id:\"IDS_ADDQB\"})}\r\n                        hidden={props.userRoleControlRights.indexOf(addQBId) === -1}\r\n                        onClick={() => props.showChecklistAddScreen(props.version.nchecklistversioncode, 'checklistversionqb', addQBId, props.userInfo)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_QB\" defaultMessage='QB' />\r\n                    </Nav.Link>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <DataGrid\r\n                        primaryKeyField={\"nchecklistversionqbcode\"}\r\n                        data={props.masterData.checklistversionqb}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={detailedFieldList}\r\n                        extractedColumnList={extractedColumnList}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam={props.inputParam}\r\n                        userInfo={props.userInfo}\r\n                        methodUrl=\"ChecklistVersionQB\"\r\n                        //gridHeight={\"400px\"}\r\n                        fetchRecord={props.fetchChecklistRecordByID}\r\n                        editParam={qbEditParam}\r\n                        deleteRecord={props.deleteRecord}\r\n                        deleteParam={qbDeleteParam}\r\n                        selectedId={props.selectedId}\r\n                        isComponent={true}\r\n                        isActionRequired={true}\r\n                        isToolBarRequired={false}\r\n                        scrollable={\"scrollable\"}\r\n                        pageable = {true}\r\n\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default injectIntl(ChecklistVersionAccordion);"]},"metadata":{},"sourceType":"module"}