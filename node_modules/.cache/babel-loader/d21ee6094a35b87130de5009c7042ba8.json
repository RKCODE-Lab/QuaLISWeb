{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\AddOOSChecklistQb.jsx\";\nimport React from 'react';\nimport { Col, Row, Form, Button } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass AddOOSChecklistQb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSwitch = (control, selectedRecord) => {\n      const disableStatus = this.props.masterData && this.props.masterData.selectedOosMaster && this.props.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED ? true : false;\n\n      switch (control.nchecklistcomponentcode) {\n        case 1:\n          {\n            let comboData = control.squestiondata ? control.squestiondata.split(\",\") : [];\n            let options = comboData ? comboData.map(option => ({\n              \"value\": option,\n              \"label\": option\n            })) : [];\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              name: control.squestion,\n              as: \"select\",\n              onChange: event => this.onTemplateComboChange(event, control),\n              formLabel: control.squestion,\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_SELECTRECORD\"\n              }),\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              defaultValue: control.sdefaultvalue ? {\n                \"value\": control.sdefaultvalue,\n                \"label\": control.sdefaultvalue\n              } : \"\",\n              options: options,\n              optionId: \"value\",\n              optionValue: \"label\",\n              isMulti: false,\n              isDisabled: disableStatus,\n              isSearchable: false,\n              isClearable: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }\n            }));\n          }\n\n        case 2:\n          {\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(FormInput, {\n              name: control.squestion,\n              label: control.squestion,\n              type: \"text\",\n              defaultValue: control.sdefaultvalue ? control.sdefaultvalue : \"\",\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              required: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              maxLength: 100,\n              onChange: event => this.onTemplateInputChange(event, control),\n              isDisabled: disableStatus // id={control.nchecklistversionqbcode}\n              ,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }\n            }));\n          }\n\n        case 3:\n          {\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(FormTextarea, {\n              label: control.squestion,\n              name: control.squestion,\n              onChange: event => this.onTemplateInputChange(event, control),\n              defaultValue: control.sdefaultvalue ? control.sdefaultvalue : \"\",\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              required: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              rows: \"2\",\n              maxLength: 255,\n              isDisabled: disableStatus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }\n            }));\n          }\n\n        case 4:\n          {\n            let checkboxes = control.squestiondata ? control.squestiondata.split(\",\") : [];\n            let defaultCheckboxes = control.sdefaultvalue ? control.sdefaultvalue.split(\",\") : [];\n            defaultCheckboxes = defaultCheckboxes.map(checkbox => checkbox.trim());\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"fieldset\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Form.Group, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Form.Label, {\n              as: \"legend\",\n              htmlFor: control.squestion,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }\n            }, control.squestion, control.nmandatoryfield === transactionStatus.YES && /*#__PURE__*/React.createElement(\"sup\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 158\n              }\n            }, \"*\")), checkboxes.map(checkbox => /*#__PURE__*/React.createElement(Form.Check, {\n              inline: true,\n              type: \"checkbox\",\n              name: control.squestion,\n              label: checkbox,\n              onChange: event => this.onTemplateInputChange(event, control),\n              id: checkbox,\n              defaultChecked: defaultCheckboxes ? defaultCheckboxes.includes(checkbox.trim()) ? true : false : false,\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              required: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              disabled: disableStatus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }\n            })))));\n          }\n\n        case 5:\n          {\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(Form.Group, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Form.Label, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }\n            }, control.squestion, control.nmandatoryfield === transactionStatus.YES && /*#__PURE__*/React.createElement(\"sup\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 114\n              }\n            }, \"*\"))));\n          }\n\n        case 6:\n          {\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(Form.Group, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Form.Label, {\n              htmlFor: control.squestion,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }\n            }, control.squestion, control.nmandatoryfield === transactionStatus.YES && /*#__PURE__*/React.createElement(\"sup\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 142\n              }\n            }, \"*\")), /*#__PURE__*/React.createElement(Button, {\n              className: \"btn\",\n              name: control.squestion,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }\n            }, control.squestion)));\n          }\n\n        case 7:\n          {\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(DateTimePicker, {\n              name: control.squestion,\n              label: control.squestion,\n              placeholderText: \"DD/MM/YYYY\" // selected={\n              //     selectedRecord ?\n              //         selectedRecord[control.nchecklistversionqbcode] ? selectedRecord[control.nchecklistversionqbcode].sdefaultvalue :\n              //             control.sdefaultvalue ? new Date(control.sdefaultvalue) : null :\n              //         control.sdefaultvalue ? new Date(control.sdefaultvalue) : null\n              // }\n              ,\n              selected: selectedRecord && selectedRecord[control.nchecklistversionqbcode] ? selectedRecord[control.nchecklistversionqbcode].sdefaultvalue : new Date(),\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              dateFormat: \"dd/MM/yyyy\",\n              className: \"form-control\",\n              onChange: date => this.onTemplateDateChange(date, control),\n              isClearable: true,\n              isDisabled: disableStatus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 25\n              }\n            }));\n          }\n\n        case 8:\n          {\n            let radioButtons = control.squestiondata ? control.squestiondata.split(\",\") : [];\n            return /*#__PURE__*/React.createElement(Col, {\n              md: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"fieldset\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Form.Group, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Form.Label, {\n              as: \"legend\",\n              htmlFor: control.squestion,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }\n            }, control.squestion, control.nmandatoryfield === transactionStatus.YES && /*#__PURE__*/React.createElement(\"sup\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 158\n              }\n            }, \"*\")), radioButtons.map(radioButton => /*#__PURE__*/React.createElement(Form.Check, {\n              inline: true,\n              type: \"radio\",\n              name: control.squestion,\n              label: radioButton,\n              onChange: event => this.onTemplateInputChange(event, control),\n              id: radioButton,\n              defaultChecked: control.sdefaultvalue ? control.sdefaultvalue.trim() === radioButton.trim() ? true : false : false,\n              isMandatory: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              required: control.nmandatoryfield === transactionStatus.YES ? true : false,\n              disabled: disableStatus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }\n            })))));\n          }\n\n        default:\n          return \"\";\n      }\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      loading: false,\n      dataState: dataState,\n      openModal: false,\n      inputParam: this.props.inputParam,\n      loadEsign: false,\n      operation: this.props.operation ? this.props.operation : \"\",\n      selectedRecord: { ...this.props.selectedRecord,\n        noosworkflowtypecode: this.props.noosworkflowtypecode,\n        ntranscode: this.props.ntranscode\n      },\n      templateData: this.props.templateData\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, this.state.templateData.map(control => this.renderSwitch(control, this.state.selectedRecord)))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {})(injectIntl(AddOOSChecklistQb));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/approval/AddOOSChecklistQb.jsx"],"names":["React","Col","Row","Form","Button","injectIntl","connect","FormTextarea","FormSelectSearch","transactionStatus","DateTimePicker","FormInput","templateChangeHandler","mapStateToProps","state","Login","AddOOSChecklistQb","Component","constructor","props","renderSwitch","control","selectedRecord","disableStatus","masterData","selectedOosMaster","ntransactionstatus","CLOSED","nchecklistcomponentcode","comboData","squestiondata","split","options","map","option","squestion","event","onTemplateComboChange","intl","formatMessage","id","nmandatoryfield","YES","sdefaultvalue","onTemplateInputChange","checkboxes","defaultCheckboxes","checkbox","trim","includes","nchecklistversionqbcode","Date","date","onTemplateDateChange","radioButtons","radioButton","setState","childDataChange","dateData","dataState","skip","take","settings","parseInt","loading","openModal","inputParam","loadEsign","operation","noosworkflowtypecode","ntranscode","templateData","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row, Form, Button } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass AddOOSChecklistQb extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: this.props.operation ? this.props.operation : \"\",\r\n            selectedRecord: {\r\n                ...this.props.selectedRecord,\r\n                noosworkflowtypecode: this.props.noosworkflowtypecode,\r\n                ntranscode: this.props.ntranscode\r\n            },\r\n            templateData: this.props.templateData\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        {this.state.templateData.map(control =>\r\n                            this.renderSwitch(control, this.state.selectedRecord)\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderSwitch = (control, selectedRecord) => {\r\n        const disableStatus = this.props.masterData && this.props.masterData.selectedOosMaster\r\n            && this.props.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED ? true : false;\r\n        switch (control.nchecklistcomponentcode) {\r\n            case 1: {\r\n                let comboData = control.squestiondata ? control.squestiondata.split(\",\") : []\r\n                let options = comboData ? comboData.map(option => ({ \"value\": option, \"label\": option })) : []\r\n                return (\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={control.squestion}\r\n                            as={\"select\"}\r\n                            onChange={(event) => this.onTemplateComboChange(event, control)}\r\n                            formLabel={control.squestion}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            defaultValue={control.sdefaultvalue ? { \"value\": control.sdefaultvalue, \"label\": control.sdefaultvalue } : \"\"}\r\n                            options={options}\r\n                            optionId={\"value\"}\r\n                            optionValue={\"label\"}\r\n                            isMulti={false}\r\n                            isDisabled={disableStatus}\r\n                            isSearchable={false}\r\n                            isClearable={true}\r\n                        />\r\n                    </Col>\r\n                );\r\n            }\r\n            case 2: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={control.squestion}\r\n                            label={control.squestion}\r\n                            type=\"text\"\r\n                            defaultValue={control.sdefaultvalue ? control.sdefaultvalue : \"\"}\r\n                            isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            required={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            maxLength={100}\r\n                            onChange={(event) => this.onTemplateInputChange(event, control)}\r\n                            isDisabled={disableStatus}\r\n                        // id={control.nchecklistversionqbcode}\r\n                        />\r\n                    </Col>\r\n                );\r\n            }\r\n            case 3: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={control.squestion}\r\n                            name={control.squestion}\r\n                            onChange={(event) => this.onTemplateInputChange(event, control)}\r\n                            defaultValue={control.sdefaultvalue ? control.sdefaultvalue : \"\"}\r\n                            isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            required={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            rows=\"2\"\r\n                            maxLength={255}\r\n                            isDisabled={disableStatus}\r\n                        />\r\n                    </Col>\r\n                );\r\n            }\r\n            case 4: {\r\n                let checkboxes = control.squestiondata ? control.squestiondata.split(\",\") : []\r\n                let defaultCheckboxes = control.sdefaultvalue ? control.sdefaultvalue.split(\",\") : []\r\n                defaultCheckboxes = defaultCheckboxes.map(checkbox => checkbox.trim())\r\n                return (\r\n                    <Col md={12}>\r\n                        <fieldset>\r\n                            <Form.Group>\r\n                                <Form.Label as=\"legend\" htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label>\r\n                                {checkboxes.map(checkbox =>\r\n                                    <Form.Check\r\n                                        inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={control.squestion}\r\n                                        label={checkbox}\r\n                                        onChange={(event) => this.onTemplateInputChange(event, control)}\r\n                                        id={checkbox}\r\n                                        defaultChecked={defaultCheckboxes ? defaultCheckboxes.includes(checkbox.trim()) ? true : false : false}\r\n                                        isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                                        required={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                                        disabled={disableStatus}\r\n                                    />\r\n                                )}\r\n                            </Form.Group>\r\n                        </fieldset>\r\n                    </Col>\r\n\r\n                );\r\n            }\r\n            case 5: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <Form.Group>\r\n                            <Form.Label>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label>{ }\r\n                        </Form.Group>\r\n                    </Col>\r\n                );\r\n            }\r\n            case 6: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label>\r\n                            <Button className=\"btn\" name={control.squestion}>\r\n                                {control.squestion}\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Col>\r\n                );\r\n            }\r\n            case 7: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={control.squestion}\r\n                            label={control.squestion}\r\n                            placeholderText={\"DD/MM/YYYY\"}\r\n                            // selected={\r\n                            //     selectedRecord ?\r\n                            //         selectedRecord[control.nchecklistversionqbcode] ? selectedRecord[control.nchecklistversionqbcode].sdefaultvalue :\r\n                            //             control.sdefaultvalue ? new Date(control.sdefaultvalue) : null :\r\n                            //         control.sdefaultvalue ? new Date(control.sdefaultvalue) : null\r\n                            // }\r\n                            selected={selectedRecord && selectedRecord[control.nchecklistversionqbcode] ? selectedRecord[control.nchecklistversionqbcode].sdefaultvalue\r\n                                : new Date()}\r\n                            isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            className='form-control'\r\n                            onChange={(date) => this.onTemplateDateChange(date, control)}\r\n                            isClearable={true}\r\n                            isDisabled={disableStatus}\r\n                        />\r\n                    </Col>\r\n                );\r\n            }\r\n            case 8: {\r\n                let radioButtons = control.squestiondata ? control.squestiondata.split(\",\") : []\r\n                return (\r\n                    <Col md={12}>\r\n                        <fieldset>\r\n                            <Form.Group>\r\n                                <Form.Label as=\"legend\" htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label>\r\n                                {radioButtons.map(radioButton =>\r\n                                    <Form.Check\r\n                                        inline={true}\r\n                                        type=\"radio\"\r\n                                        name={control.squestion}\r\n                                        label={radioButton}\r\n                                        onChange={(event) => this.onTemplateInputChange(event, control)}\r\n                                        id={radioButton}\r\n                                        defaultChecked={control.sdefaultvalue ? control.sdefaultvalue.trim() === radioButton.trim() ? true : false : false}\r\n                                        isMandatory={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                                        required={control.nmandatoryfield === transactionStatus.YES ? true : false}\r\n                                        disabled={disableStatus}\r\n                                    />\r\n                                )}\r\n                            </Form.Group>\r\n                        </fieldset>\r\n                    </Col>\r\n                );\r\n            }\r\n            default:\r\n                return (\"\");\r\n        }\r\n    }\r\n\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(injectIntl(AddOOSChecklistQb));"]},"metadata":{},"sourceType":"module"}