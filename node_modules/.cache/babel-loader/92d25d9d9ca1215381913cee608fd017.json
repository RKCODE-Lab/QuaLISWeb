{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import PerfectScrollbar from'react-perfect-scrollbar';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import TestGroupParameterTab from'./TestGroupParameterTab';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import{showEsign,sortData}from'../../components/CommonScript';import Esign from'../audittrail/Esign';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{parameterType,SampleType,transactionStatus}from'../../components/Enumeration';import EditTestGroupParameter from'./EditTestGroupParameter';import AddCodedResult from'../testmanagement/AddCodedResult';import FormTextarea from'../../components/form-textarea/form-textarea.component';import AddSpecification from'../testmanagement/AddSpecification';import TemplateForm from'../checklist/checklist/TemplateForm';import{toast}from'react-toastify';import TestGroupMaterialTab from'./TestGroupMaterialTab';import AddTestGroupTestMaterial from'./AddTestGroupTestMaterial';import AddTestGroupNumericSpecification from'./AddTestGroupNumericSpecification';import ConfirmMessage from\"../../components/confirm-alert/confirm-message.component\";import TestGroupRulesEngineTab from'./TestGroupRulesEngineTab';import AddSubCodedResult from'../testmanagement/AddSubCodedResult';var TestGroupTestTab=/*#__PURE__*/function(_Component){_inherits(TestGroupTestTab,_Component);var _super=_createSuper(TestGroupTestTab);function TestGroupTestTab(props){var _this;_classCallCheck(this,TestGroupTestTab);_this=_super.call(this,props);_this.onTemplateInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onTemplateComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});};_this.onTemplateDateChange=function(dateName,dateValue){var _ref=_this.state.selectedRecord||{},selectedRecord=_ref.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.handleClose=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},testGroupCheckList:{},openTemplateModal:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){if(_this.props.screenName===\"IDS_SUBCODEDRESULT\"){//screenName = \"IDS_CODEDRESULT\";\n//operation = \"update\";\nvar updateInfo={typeName:DEFAULT_RETURN,data:{operation:\"create\",selectedId:null,openChildModal:true,screenName:\"IDS_CODEDRESULT\"}};_this.props.updateStore(updateInfo);}else{var loadEsign=_this.props.loadEsign;var openChildModal=_this.props.openChildModal;var selectedRecord=_this.props.selectedRecord;var selectedsubcodedresult=_this.state.selectedsubcodedresult;if(_this.props.loadEsign){if(_this.props.operation===\"delete\"||_this.props.operation===\"Default\"){loadEsign=false;openChildModal=false;selectedRecord={};}else{loadEsign=false;// selectedRecord[\"agree\"] = 4;\nselectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openChildModal=false;selectedRecord={};}var _updateInfo={typeName:DEFAULT_RETURN,data:{openChildModal:openChildModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedsubcodedresult:selectedsubcodedresult}};_this.props.updateStore(_updateInfo);//this.setState({selectedsubcodedresult: []}); \n}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.EditSpecDetails=function(viewdetails,ncontrolCode){_this.props.addTestGroupNumericTab(\"update\",viewdetails,_this.props.userInfo,{testgroupspecification:_this.props.masterData.SelectedSpecification},_this.props.masterData,ncontrolCode);};_this.DeleteSpecDetails=function(viewdetails,ncontrolCode){_this.SpecConfirmDelete(\"delete\",1,viewdetails,ncontrolCode);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_PARAMETER\",/*#__PURE__*/React.createElement(TestGroupParameterTab,{controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,deleteAction:_this.deleteAction,onSwitchChange:_this.onSwitchChange,addTestFile:_this.props.addTestFile,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,filterData:_this.props.filterData,getTestGroupParameter:_this.props.getTestGroupParameter,editTestGroupParameter:_this.props.editTestGroupParameter,addTestGroupCodedResult:_this.props.addTestGroupCodedResult,addTestGroupNumericTab:_this.props.addTestGroupNumericTab,viewTestGroupCheckList:_this.props.viewTestGroupCheckList,EditSpecDetails:_this.EditSpecDetails,DeleteSpecDetails:_this.DeleteSpecDetails,dataState:_this.props.dataState,dataStateChange:_this.props.dataStateChange}));return tabMap;};_this.testTabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_PARAMETER\",/*#__PURE__*/React.createElement(TestGroupParameterTab,{paneHeight:_this.props.paneHeight,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,deleteAction:_this.deleteAction,onSwitchChange:_this.onSwitchChange,addTestFile:_this.props.addTestFile,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,filterData:_this.props.filterData,getTestGroupParameter:_this.props.getTestGroupParameter,editTestGroupParameter:_this.props.editTestGroupParameter,addTestGroupCodedResult:_this.props.addTestGroupCodedResult,subCodedResultView:_this.props.subCodedResultView,addTestGroupNumericTab:_this.props.addTestGroupNumericTab,viewTestGroupCheckList:_this.props.viewTestGroupCheckList,EditSpecDetails:_this.EditSpecDetails,DeleteSpecDetails:_this.DeleteSpecDetails,hasDynamicColSize:true,dataState:_this.props.dataState,dataStateChange:_this.props.dataStateChange}));tabMap.set(\"IDS_MATERIAL\",/*#__PURE__*/React.createElement(TestGroupMaterialTab,{paneHeight:_this.props.paneHeight,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,ConfirmDelete:_this.ConfirmDelete,getDataForTestMaterial:_this.props.getDataForTestMaterial,getTestGroupMaterial:_this.props.getTestGroupMaterial,getDataForEditTestMaterial:_this.props.getDataForEditTestMaterial,selectedRecord:_this.state.selectedRecord}));{_this.props.isrulesenginerequired&&tabMap.set(\"IDS_RULESENGINE\",/*#__PURE__*/React.createElement(TestGroupRulesEngineTab,{paneHeight:_this.props.paneHeight,getTestGroupRulesEngineAdd:_this.props.getTestGroupRulesEngineAdd,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,selectedRecord:_this.state.selectedRecord,masterData:_this.props.masterData,settings:_this.props.settings,skipRulesEngine:_this.props.skipRulesEngine,takeRulesEngine:_this.props.takeRulesEngine,getEditTestGroupRulesEngine:_this.props.getEditTestGroupRulesEngine,getSelectedTestGroupRulesEngine:_this.props.getSelectedTestGroupRulesEngine,ConfirmDeleteRule:_this.props.ConfirmDeleteRule,approveVersion:_this.props.approveVersion,openflowview:_this.props.openflowview,handlePageChangeRuleEngine:_this.props.handlePageChangeRuleEngine,viewOutcome:_this.props.viewOutcome,filterParamRulesEngine:_this.props.filterParamRulesEngine,filterTransactionList:_this.props.filterTransactionList,saveExecutionOrder:_this.props.saveExecutionOrder}));}return tabMap;};_this.ConfirmDelete=function(operation,deleteId,selectedRecord){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteTestMaterial(operation,deleteId,selectedRecord);});};_this.SpecConfirmDelete=function(operation,deleteId,selectedRecord,ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteAction(selectedRecord,\"delete\",ncontrolCode,\"TestGroupAddSpecification\",\"openChildModal\");});};_this.DeleteTestMaterial=function(operation,ncontrolCode){var selectedSpecification=_this.props.masterData.SelectedSpecification;if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var selectedRecord=_this.state.selectedRecord;var inputData=[];inputData={ntreeversiontempcode:_this.props.masterData.selectedNode.ntreeversiontempcode};inputData[\"testgrouptestmaterial\"]={ntestgrouptestmaterialcode:_this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,ntestgrouptestcode:_this.props.masterData.selectedMaterial.ntestgrouptestcode};inputData[\"userinfo\"]=_this.props.userInfo;var inputParam={methodUrl:\"TestGroupTestMaterial\",classUrl:_this.props.inputParam.classUrl,inputData:inputData,operation:\"delete\",selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_TESTGROUPMATERIAL\",operation:operation.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.onSaveClick=function(saveType,formRef){var inputParam={};// if(this.props.screenName === \"IDS_TEST\" \n//     || this.props.screenName === \"IDS_EDITTESTGROUPTEST\") {\n//     inputParam = this.onSaveTest(saveType, formRef);\n// } else \nif(_this.props.screenName===\"IDS_FORMULA\"){inputParam=_this.onSaveFormula(saveType,formRef);}else if(_this.props.screenName===\"IDS_PARAMETER\"){inputParam=_this.onSaveParameter(saveType,formRef);}else if(_this.props.screenName===\"IDS_CODEDRESULT\"){if(_this.state.selectedRecord[\"nneedsubcodedresult\"]===3&&_this.state.selectedsubcodedresult.length>0||_this.state.selectedRecord[\"nneedsubcodedresult\"]===4){inputParam=_this.onSaveCodedResult(saveType,formRef);}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSUBCODEDRESULT\"}));}}else if(_this.props.screenName===\"IDS_SUBCODEDRESULT\"){return _this.onSaveSubCodedResult(saveType,formRef);}else if(_this.props.screenName===\"IDS_CLINICALSPEC\"){inputParam=_this.onSaveSpecification(saveType,formRef);}else if(_this.props.screenName===\"IDS_TESTGROUPMATERIAL\"){inputParam=_this.onSaveMaterial(saveType,formRef);}if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{//(this.props.screenName !== \"IDS_CODEDRESULT\")\n// if(this.props.submit!==\"SUBCODERESULT\")\n_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\",{});}};_this.onSaveParameter=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var parameterList=[\"ntestgrouptestparametercode\",\"ntestgrouptestcode\",\"ntestparametercode\",\"sparametersynonym\",\"nroundingdigits\",\"nresultmandatory\",\"nreportmandatory\",\"sspecdesc\",\"nsorter\",\"nisadhocparameter\"];var testGroupTestParameter={nparametertypecode:selectedRecord.nparametertypecode.value,sdisplaystatus:selectedRecord.nparametertypecode.label,nunitcode:selectedRecord.nunitcode?selectedRecord.nunitcode.value:-1,nchecklistversioncode:selectedRecord.nchecklistversioncode?selectedRecord.nchecklistversioncode.value:-1};parameterList.map(function(item){return testGroupTestParameter[item]=selectedRecord[item]?selectedRecord[item]:\"\";});var inputData={testgrouptestparameter:testGroupTestParameter,userinfo:_this.props.userInfo};if(selectedRecord.nparametertypecode.value===parameterType.NUMERIC){var testGroupTestNumericParameter={};var numericList=[\"sminlod\",\"smaxlod\",\"sminb\",\"smina\",\"smaxa\",\"smaxb\",\"sminloq\",\"smaxloq\",\"sdisregard\",\"sresultvalue\"];testGroupTestNumericParameter[\"ntestgrouptestparametercode\"]=selectedRecord.ntestgrouptestparametercode;testGroupTestNumericParameter[\"ngradecode\"]=selectedRecord.ngradecode?selectedRecord.ngradecode.value:-1;numericList.map(function(item){return testGroupTestNumericParameter[item]=selectedRecord[item]?selectedRecord[item]===\"0\"?selectedRecord[item]:selectedRecord[item].replace(/^0+/,''):null;});inputData[\"testgrouptestnumericparameter\"]=testGroupTestNumericParameter;if(selectedRecord.ntestformulacode){var testFormula=selectedRecord.ntestformulacode.item;var testgrouptestformula={ntestgrouptestparametercode:selectedRecord.ntestgrouptestparametercode,ntestgrouptestcode:selectedRecord.ntestgrouptestcode,ntestformulacode:testFormula.ntestformulacode,sformulacalculationcode:testFormula.sformulacalculationcode,sformulacalculationdetail:testFormula.sformulacalculationdetail,ntransactionstatus:transactionStatus.YES};inputData[\"testgrouptestformula\"]=testgrouptestformula;}else{inputData[\"testgrouptestformula\"]=null;}}else if(selectedRecord.nparametertypecode.value===parameterType.CHARACTER){var characterList=[\"ntestgrouptestparametercode\",\"scharname\"];var testGroupTestCharParameter={};characterList.map(function(item){return testGroupTestCharParameter[item]=selectedRecord[item]?selectedRecord[item]:\"\";});inputData[\"testgrouptestcharparameter\"]=testGroupTestCharParameter;}//  else if (selectedRecord.nparametertypecode.value === parameterType.PREDEFINED) {\n//     const testGroupTestPredefParameter = {\n//         ntestgrouptestparametercode: selectedRecord.ntestgrouptestparametercode,\n//         ngradecode: selectedRecord.ngradecode.value,\n//         spredefinedname: selectedRecord.spredefinedname,\n//         ntestgrouptestpredefcode: selectedRecord.ntestgrouptestpredefcode,\n//         ndefaultstatus: selectedRecord.ndefaultstatus\n//     }\n//     inputData[\"testgrouptestpredefparameter\"] = testGroupTestPredefParameter;\n// }\nconsole.log(\"input data:\",inputData);var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:\"update\",methodUrl:\"TestGroupParameter\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.onSaveFormula=function(saveType,formRef){var masterData=_this.props.masterData;var selectedRecord=_this.state.selectedRecord;var selectedParameter=masterData.selectedParameter;var testFormulaArray=selectedRecord.ntestformulacode.map(function(test){return{ntestgrouptestcode:selectedParameter.ntestgrouptestcode,ntestgrouptestparametercode:selectedParameter.ntestgrouptestparametercode,ntestformulacode:test.item.ntestformulacode,sformulacalculationcode:test.item.sformulacalculationcode,sformulacalculationdetail:test.item.sformulacalculationdetail,ntransactionstatus:transactionStatus.NO};});var inputData={testgroupspecification:masterData.SelectedSpecification,testgrouptestformula:testFormulaArray,userinfo:_this.props.userInfo};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupTestFormula\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.onSaveCodedResult=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var selectedsubcodedresult=_this.state.selectedsubcodedresult;//const selectedsubcodedresult = this.state.selectedsubcodedresult;\nvar testgroupsubcoded=[];var testGroupPredefParameter={ndefaultstatus:transactionStatus.NO,nstatus:transactionStatus.ACTIVE,ntestgrouptestpredefcode:selectedRecord[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:_this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],ngradecode:selectedRecord[\"ngradecode\"].value,spredefinedname:selectedRecord[\"spredefinedname\"],//sresultparacomment: selectedRecord[\"sresultparacomment\"],\nspredefinedsynonym:selectedRecord[\"spredefinedsynonym\"],spredefinedcomments:selectedRecord[\"spredefinedcomments\"],salertmessage:selectedRecord[\"salertmessage\"],nneedresultentryalert:selectedRecord[\"nneedresultentryalert\"],nneedsubcodedresult:selectedRecord[\"nneedsubcodedresult\"],ntestpredefinedcode:_this.props.masterData.selectedParameter[\"ntestpredefinedcode\"]};var inputParam={inputData:{testgrouptestpredefinedparameter:testGroupPredefParameter,userinfo:_this.props.userInfo,testgroupspecification:_this.props.masterData.SelectedSpecification,testgroupsubcoded:_this.state.selectedsubcodedresult,deletetestgroupsubcoded:_this.state.selectsubcodedelete,addsubcodedresult:_this.state.selectedsubcodedresult.filter(function(x){return!x.hasOwnProperty('ntestgrouptestpredefsubcode');})||[]},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupPredefParameter\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};//this.setState({selectedsubcodedresult: []}); \nreturn inputParam;};_this.onSaveSubCodedResult=function(saveType,formRef){// const ssubcodedresult = this.state.selectedRecord[\"ssubcodedresult\"];\nvar selectedsubcodedresult=[];//let addsubcodedresult = [];\nselectedsubcodedresult[\"ssubcodedresult\"]=[];selectedsubcodedresult=_this.state.selectedsubcodedresult||[];//addsubcodedresult = this.state.selectedsubcodedresult.filter(x =>!x.hasOwnProperty('ntestgrouptestpredefsubcode') )|| [];\nvar ssubcodedresult=_this.state.selectedRecord[\"ssubcodedresult\"];selectedsubcodedresult.push({\"ssubcodedresult\":_this.state.selectedRecord[\"ssubcodedresult\"]});var selectedRecord=_this.state.selectedRecord;delete selectedRecord[\"ssubcodedresult\"];var updateInfo={typeName:DEFAULT_RETURN,data:{//operation: \"create\", \nselectedId:null,selectedsubcodedresult:selectedsubcodedresult,selectedRecord:selectedRecord,screenName:\"IDS_CODEDRESULT\",loading:false//,openChildModal: false,,\n,submit:\"SUBCODERESULT\"}};_this.props.updateStore(updateInfo);//this.setState({ selectedsubcodedresult });\n};_this.onSaveSpecification=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;// if(selectedRecord[\"nfromage\"]<selectedRecord[\"ntoage\"]){\nvar TestGroupAddSpecification={nstatus:transactionStatus.ACTIVE,ntestgrouptestparametercode:_this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],ngendercode:selectedRecord[\"ngendercode\"].value,nfromage:selectedRecord[\"nfromage\"],ntoage:selectedRecord[\"ntoage\"],shigha:selectedRecord[\"nhigha\"],shighb:selectedRecord[\"nhighb\"],slowa:selectedRecord[\"nlowa\"],slowb:selectedRecord[\"nlowb\"],sresultvalue:selectedRecord[\"sresultvalue\"],ngradecode:selectedRecord[\"ngradecode\"]&&selectedRecord[\"ngradecode\"].value||-1,ntestgrouptestclinicspeccode:selectedRecord[\"ntestgrouptestclinicspeccode\"]};var inputParam={inputData:{testgroupaddspecification:TestGroupAddSpecification,userinfo:_this.props.userInfo,testgroupspecification:_this.props.masterData.SelectedSpecification},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupAddSpecification\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;// }else{\n//     toast.warn(this.props.intl.formatMessage({id: \"IDS_SELECTEDTEMPLATEISRETIRED\"})); \n// }\n};_this.onSaveMaterial=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var testGroupTestMaterial=[];if(_this.props.operation===\"create\"){testGroupTestMaterial={ntestgrouptestcode:_this.props.masterData.SelectedTest.ntestgrouptestcode,ntestgrouptestmaterialcode:_this.props.masterData.SelectedTest.ntestgrouptestmaterialcode,nmaterialtypecode:selectedRecord[\"nmaterialtypecode\"].item.jsondata.nmaterialtypecode,nmaterialcatcode:selectedRecord[\"nmaterialcatcode\"].value,nmaterialcode:selectedRecord[\"nmaterialcode\"].value,smaterialname:selectedRecord[\"nmaterialcode\"].label,sremarks:selectedRecord[\"sremarks\"],nstatus:transactionStatus.ACTIVE};}else{testGroupTestMaterial={ntestgrouptestcode:_this.props.masterData.SelectedTest.ntestgrouptestcode,ntestgrouptestmaterialcode:_this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,nmaterialtypecode:selectedRecord[\"nmaterialtypecode\"].value,nmaterialcatcode:selectedRecord[\"nmaterialcatcode\"].value,nmaterialcode:selectedRecord[\"nmaterialcode\"].value,sremarks:selectedRecord[\"sremarks\"],nstatus:transactionStatus.ACTIVE};}var inputParam={inputData:{testgrouptestmaterial:testGroupTestMaterial,ntreeversiontempcode:_this.props.masterData.selectedNode.ntreeversiontempcode,userinfo:_this.props.userInfo},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupTestMaterial\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.deleteTest=function(deleteParam){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=_this.props.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var screenName=deleteParam.screenName;var inputParam={inputData:{testgrouptest:deleteParam.selectedRecord,userinfo:_this.props.userInfo,testgroupspecification:testgroupspecification,treetemplatemanipulation:_this.props.masterData.selectedNode},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"Test\",screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:deleteParam.selectedRecord.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};var _masterData=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData},openModal:true,screenName:screenName,operation:deleteParam.operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.deleteAction=function(item,operation,ncontrolCode,methodUrl,modalName){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var _inputData;var selected=item;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selected),_defineProperty(_inputData,\"userinfo\",_this.props.userInfo),_defineProperty(_inputData,\"testgroupspecification\",_this.props.masterData.SelectedSpecification),_defineProperty(_inputData,\"deletetestgroupsubcoded\",_this.state.selectedsubcodedresult),_inputData),classUrl:\"testgroup\",operation:operation,methodUrl:methodUrl,screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};var _masterData2=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,ncontrolCode)){var _data;var updateInfo={typeName:DEFAULT_RETURN,data:(_data={loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData2}},_defineProperty(_data,modalName,true),_defineProperty(_data,\"screenName\",\"IDS_TEST\"),_defineProperty(_data,\"operation\",operation),_defineProperty(_data,\"selectedRecord\",{}),_data)};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_masterData2,\"openChildModal\",{});}}};_this.onSwitchChange=function(item,key,methodUrl,event){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{//NIBSCRT-2236\nvar testgroupspecification=_this.props.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var _inputData2;var dataItem=item;if(methodUrl===\"TestGroupTestFormula\"){dataItem[\"ntransactionstatus\"]=transactionStatus.YES;}else if(methodUrl==='TestGroupPredefParameter'){// if(this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.DRAFT || this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.CORRECTION)\n// {\ndataItem['ndefaultstatus']=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;// }\n// else{\n//     return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\n// }\n}else{dataItem[\"ndefaultstatus\"]=transactionStatus.YES;}var inputParam={inputData:(_inputData2={},_defineProperty(_inputData2,key,dataItem),_defineProperty(_inputData2,\"userinfo\",_this.props.userInfo),_defineProperty(_inputData2,\"testgroupspecification\",_this.props.masterData.SelectedSpecification),_inputData2),classUrl:\"testgroup\",operation:\"default\",methodUrl:methodUrl};_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\",{});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName,caseNo){var _inputParam;var inputData=[];var masterData=_objectSpread({},_this.props.masterData);var inputParam=[];var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[\"parameterTypeCode\"]=comboData.value;selectedRecord[fieldName]=comboData;var needRoundingDigit=comboData.value===parameterType.NUMERIC?false:true;var needUnit=comboData.value===parameterType.NUMERIC?false:true;selectedRecord[\"nroundingdigits\"]=0;selectedRecord[\"nunitcode\"]=comboData.value===parameterType.NUMERIC?_this.props.parameterData.defaultUnit:undefined;var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},_this.props.testGroupInputData),{},{needRoundingDigit:needRoundingDigit,needUnit:needUnit})}};_this.props.updateStore(updateInfo);break;case 3:selectedRecord[\"schecklistversionname\"]=comboData.item.schecklistversionname;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 4:var oldnmaterialtypecode=selectedRecord[\"nmaterialtypecode\"].value?selectedRecord[\"nmaterialtypecode\"].value:selectedRecord[\"nmaterialtypecode\"];if(oldnmaterialtypecode!==comboData.value){delete selectedRecord['nmaterialcatcode'];delete selectedRecord['nmaterialcode'];}selectedRecord[\"nmaterialtypecode\"]=comboData.value;selectedRecord[fieldName]=comboData;inputData={userinfo:_this.props.userInfo,nmaterialtypecode:parseInt(comboData.value)};inputParam={materialType:_this.props.materialType,operation:_this.props.operation,masterData:masterData,inputData:inputData,selectedRecord:selectedRecord,screenName:\"IDS_TESTGROUPMATERIAL\",ncontrolCode:_this.props.ncontrolCode};_this.props.getMaterialCategoryBasedMaterialType(inputParam);break;case 5:if(selectedRecord[\"nmaterialcatcode\"]){var oldnmaterialcatcode=selectedRecord[\"nmaterialcatcode\"].value?selectedRecord[\"nmaterialcatcode\"].value:selectedRecord[\"nmaterialcatcode\"];if(oldnmaterialcatcode!==comboData.value){delete selectedRecord['nmaterialcode'];}}selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[fieldName]=comboData;inputData={userinfo:_this.props.userInfo,nmaterialcatcode:parseInt(selectedRecord[\"nmaterialcatcode\"].value),nmaterialtypecode:parseInt(selectedRecord[\"nmaterialtypecode\"].value)};inputParam=(_inputParam={masterData:masterData,inputData:inputData,selectedRecord:selectedRecord,operation:_this.props.operation},_defineProperty(_inputParam,\"selectedRecord\",selectedRecord),_defineProperty(_inputParam,\"screenName\",\"IDS_TESTGROUPMATERIAL\"),_defineProperty(_inputParam,\"ncontrolCode\",_this.props.ncontrolCode),_inputParam);_this.props.getMaterialBasedMaterialCategory(inputParam);break;default:break;}};_this.addSubCodedResult=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         loadEsign: true,\n//         openModal: true,\n//         screenName: \"IDS_TESTGROUPTESTMATERIAL\"\n//     },\n// };\n// this.props.updateStore(updateInfo);\nvar updateInfo={typeName:DEFAULT_RETURN,data:{//operation: \"create\", \nselectedId:null,//selectedsubcodedresult:\"\",\nopenChildModal:true,screenName:\"IDS_SUBCODEDRESULT\"}};_this.props.updateStore(updateInfo);};_this.deleteSubCodedResult=function(index,subCodedResult,index1){var selectedsubcodedresult=_this.state.selectedsubcodedresult;selectedsubcodedresult.splice(index1.dataIndex,1);//const selectsubcodedelete=[];\nvar selectsubcodedelete=_this.state.selectsubcodedelete||[];if(index[\"ntestgrouptestpredefsubcode\"])selectsubcodedelete.push({\"ntestgrouptestpredefsubcode\":index[\"ntestgrouptestpredefsubcode\"],\"ssubcodedresult\":index[\"ssubcodedresult\"],\"ntestgrouptestpredefcode\":index[\"ntestgrouptestpredefcode\"]});var updateInfo={typeName:DEFAULT_RETURN,data:{selectedId:null,selectedsubcodedresult:selectedsubcodedresult,selectsubcodedelete:selectsubcodedelete}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];if(selectedRecord[\"nneedresultentryalert\"]===4){selectedRecord[\"nneedsubcodedresult\"]=4;delete selectedRecord[\"salertmessage\"];_this.setState({selectedsubcodedresult:[]});}if(selectedRecord[\"nneedsubcodedresult\"]===4){_this.setState({selectedsubcodedresult:[]});}else if(selectedRecord[\"nresultmandatory\"]===3){selectedRecord[\"nisadhocparameter\"]=4;}}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[event.target.name]=event.target.value;var indexKey=Object.keys(optional)[0];var value=Object.values(optional)[0];var treeData={ntreeversiontempcode:value.ntreeversiontempcode,npositioncode:value.nlevelno-1,sleveldescription:event.target.value,ntemptranstestgroupcode:value.ntemptranstestgroupcode,nformcode:62,schildnode:value.schildnode,nnextchildcode:value.schildnode};var treetemplatemanipulation=selectedRecord.treetemplatemanipulation||[];treetemplatemanipulation[indexKey]=treeData;selectedRecord[\"treetemplatemanipulation\"]=treetemplatemanipulation;_this.setState({selectedRecord:selectedRecord});break;case 4:var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 6:// selectedRecord[event.target.name] = selectedRecord[\"sresultparacomment\"] = { label: event.target.value, value: event.target.value };\n// this.setState({ selectedRecord });\n// break;\n//selectedRecord[event.target.name] = selectedRecord[\"sresultparacomment\"] = event.target.value;\nselectedRecord[event.target.name]=selectedRecord[\"spredefinedsynonym\"]=event.target.value;//selectedRecord[\"sparametername\"] = { label: event.target.value, value: event.target.value };\n_this.setState({selectedRecord:selectedRecord});break;case 5:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];if(selectedRecord[\"nneedresultentryalert\"]===4){selectedRecord[\"nneedsubcodedresult\"]=4;delete selectedRecord[\"salertmessage\"];_this.codedResultMandatory=[{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_CODEDRESULTSYNONYM\",\"dataField\":\"spredefinedsynonym\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true}];var selectsubcodedelete=_this.state.selectedsubcodedresult||[];_this.setState({selectedsubcodedresult:[],selectsubcodedelete:selectsubcodedelete,codedResultMandatory:_this.codedResultMandatory});}if(selectedRecord[\"nneedresultentryalert\"]===3){_this.codedResultMandatory=[{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_CODEDRESULTSYNONYM\",\"dataField\":\"spredefinedsynonym\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ALERTMESSAGE\",\"dataField\":\"salertmessage\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true}];_this.setState({codedResultMandatory:[]});}// if (selectedRecord[\"nneedsubcodedresult\"] === 3) {\n//     this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\n//     { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"sresultparacomment\", \"width\": \"200px\", \"mandatory\": true },\n//     { \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatory\": true },\n//     { \"idsName\": \"IDS_SUBCODEDRESULT\", \"dataField\": \"ssubcodedresult\", \"width\": \"200px\", \"mandatory\": true },\n//     { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\n//     this.setState({ codedResultMandatory: [] });\n// }\nif(selectedRecord[\"nneedsubcodedresult\"]===4){var _selectsubcodedelete=_this.state.selectedsubcodedresult||[];_this.setState({selectedsubcodedresult:[],selectsubcodedelete:_selectsubcodedelete});}}_this.setState({selectedRecord:selectedRecord});break;case 7:var inputValues=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValues)||inputValues===\"\"){selectedRecord[event.target.name]=event.target.value;}if(selectedRecord[\"sresultvalue\"]===\"\"){delete selectedRecord[\"ngradecode\"];}_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.onNumericInputChange=function(value,name){console.log(\"value:\",value,name);var selectedRecord=_this.state.selectedRecord||{};if(name===\"nroundingdigits\"){// if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\n//     console.log(\"val:\", value.target.value);\n//     selectedRecord[name] = value.target.value;\n// }\n// if (/^-?\\d*?$/.test(value) || value === \"\") {\n//    // console.log(\"val:\", value);\n//     selectedRecord[name] = value;\n// }\n//const values = value.target.value.replace(/[^-^0-9]/g, '');\nif(/^[0-9]+$/.test(value.target.value)||value.target.value===\"\"){selectedRecord[name]=value.target.value;}else{selectedRecord[name]=\"\";}}else{selectedRecord[name]=value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.screenData};_this.props.validateEsignCredential(inputParam,\"openChildModal\");};_this.state={selectedRecord:{}};_this.confirmMessage=new ConfirmMessage();// this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\n// { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\n// { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\n// this.clinicalSpecMandatory = [{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"ngendercode\", \"width\": \"200px\", \"mandatory\": true },\n// { \"idsName\": \"IDS_FROMAGE\", \"dataField\": \"nfromage\", \"width\": \"200px\", \"mandatory\": true },\n// { \"idsName\": \"IDS_TOAGE\", \"dataField\": \"ntoage\", \"width\": \"200px\", \"mandatory\": true }];\nreturn _this;}_createClass(TestGroupTestTab,[{key:\"render\",value:function render(){var _this2=this;{this.state.selectedRecord&&this.state.selectedRecord[\"sresultvalue\"]===null||this.state.selectedRecord[\"sresultvalue\"]===undefined?this.clinicalSpecMandatory=[{\"idsName\":\"IDS_GENDER\",\"dataField\":\"ngendercode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_FROMAGE\",\"dataField\":\"nfromage\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_TOAGE\",\"dataField\":\"ntoage\",\"width\":\"200px\",\"mandatory\":true}]:this.clinicalSpecMandatory=[{\"idsName\":\"IDS_GENDER\",\"dataField\":\"ngendercode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_FROMAGE\",\"dataField\":\"nfromage\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_TOAGE\",\"dataField\":\"ntoage\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_GRADE\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}var nneedresultentryalert=this.state.selectedRecord[\"nneedresultentryalert\"];{nneedresultentryalert===3?this.codedResultMandatory=[{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_CODEDRESULTSYNONYM\",\"dataField\":\"spredefinedsynonym\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ALERTMESSAGE\",\"dataField\":\"salertmessage\",\"width\":\"200px\",\"mandatory\":true}]:this.codedResultMandatory=[{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_CODEDRESULTSYNONYM\",\"dataField\":\"spredefinedsynonym\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true}];};if(this.props.masterData.TestGroupTestClinicalSpec){sortData(this.props.masterData.TestGroupTestClinicalSpec,\"ascending\",\"nfromage\");}this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];if(this.state.selectedRecord[\"parameterTypeCode\"]&&this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC){this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_ROUNDINGDIGITS\",\"dataField\":\"nroundingdigits\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"nunitcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}if(this.state.selectedRecord[\"parameterTypeCode\"]&&this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.PREDEFINED){this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}// { \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\n//  { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n];}var paramMandatoryFields=[];this.paramColumnList.forEach(function(item){return item.mandatory===true?paramMandatoryFields.push(item):\"\";});this.materialColumnList=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"nmaterialtypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"nmaterialcatcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALNAME\",\"dataField\":\"nmaterialcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grouped-param-inner grouped-tab-inner\"},!this.props.testView?/*#__PURE__*/React.createElement(CustomTab,{paneHeight:this.props.paneHeight,tabDetail:this.tabDetail(),onTabChange:this.onTabChange}):/*#__PURE__*/React.createElement(CustomTab,{paneHeight:this.props.paneHeight,tabDetail:this.testTabDetail(),onTabChange:this.onTabChange})),this.props.openChildModal&&this.props.screenName&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.openChildModal,closeModal:this.closeModal,operation:this.props.operation,inputParam:this.props.inputParam,screenName:this.props.screenName,esign:this.props.loadEsign,validateEsign:this.validateEsign,onSaveClick:this.onSaveClick//showSaveContinue={this.props.screenName === \"IDS_SUBCODEDRESULT\"?true:false}\n,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.screenName===\"IDS_PARAMETER\"?paramMandatoryFields:this.props.screenName===\"IDS_CODEDRESULT\"?this.codedResultMandatory:this.props.screenName===\"IDS_CLINICALSPEC\"?this.clinicalSpecMandatory:this.props.screenName===\"IDS_TESTGROUPMATERIAL\"?this.materialColumnList:[],addComponent:this.props.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.screenName===\"IDS_PARAMETER\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(EditTestGroupParameter,{selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.testGroupInputData,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,onFocus:this.handleFocus//TestGroupTestClinicalSpec={this.props.masterData.TestGroupTestClinicalSpec}\n}),this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.PREDEFINED||this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.CHARACTER||this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))):\"\",this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.CHARACTER&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormTextarea,{name:\"scharname\",label:this.props.intl.formatMessage({id:\"IDS_TESTCHARACTER\"}),onChange:function onChange(event){return _this2.onInputOnChange(event,1);},placeholder:this.props.intl.formatMessage({id:\"IDS_TESTCHARACTER\"}),value:this.state.selectedRecord[\"scharname\"],rows:\"2\",required:false,maxLength:255}))),this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC&&this.props.filterData&&this.props.filterData.nsampletypecode&&this.props.filterData.nsampletypecode.item&&this.props.filterData.nsampletypecode.item.nclinicaltyperequired===transactionStatus.NO&&/*#__PURE__*/ //&& this.props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE &&\nReact.createElement(AddSpecification,{grade:this.props.testGroupInputData.grade,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onFocus:this.handleFocus})):this.props.screenName===\"IDS_CODEDRESULT\"?/*#__PURE__*/React.createElement(AddCodedResult,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange,addSubCodedResult:this.addSubCodedResult,deleteSubCodedResult:this.deleteSubCodedResult,selectedsubcodedresult:this.state.selectedsubcodedresult||[],controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,userInfo:this.props.userInfo}):this.props.screenName===\"IDS_SUBCODEDRESULT\"?/*#__PURE__*/React.createElement(AddSubCodedResult,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange,addSubCodedResult:this.addSubCodedResult}):this.props.screenName===\"IDS_CLINICALSPEC\"?/*#__PURE__*/React.createElement(AddTestGroupNumericSpecification//gradenew={this.props.testGroupInputData.grade||[]}\n,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange,onNumericInputChange:this.onNumericInputChange}):/*#__PURE__*/React.createElement(AddTestGroupTestMaterial,{materialType:this.props.materialType,selectedRecord:this.state.selectedRecord,materialCategoryList:this.props.materialCategoryList,materialList:this.props.materialList,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange})}),this.props.testGroupCheckList&&this.props.testGroupCheckList.templateData&&this.props.testGroupCheckList.templateData.length>0&&/*#__PURE__*/React.createElement(TemplateForm,{templateData:this.props.testGroupCheckList.templateData,handleClose:this.handleClose,screenName:\"IDS_VIEWCHECKLIST\",needSaveButton:false,viewScreen:this.props.openTemplateModal,onTemplateInputChange:this.onTemplateInputChange,onTemplateComboChange:this.onTemplateComboChange,onTemplateDateChange:this.onTemplateDateChange}));}},{key:\"handleFocus\",value:function handleFocus(e){e.target.select();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.selectedRecord!==previousProps.selectedRecord){this.setState({selectedRecord:this.props.selectedRecord});}if(this.props.selectedsubcodedresult!==previousProps.selectedsubcodedresult){this.setState({selectedsubcodedresult:this.props.selectedsubcodedresult});}if(this.props.selectsubcodedelete!==previousProps.selectsubcodedelete){this.setState({selectsubcodedelete:this.props.selectsubcodedelete});}}}]);return TestGroupTestTab;}(Component);export default injectIntl(TestGroupTestTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupTestTab.jsx"],"names":["React","Component","injectIntl","Row","Col","PerfectScrollbar","DEFAULT_RETURN","TestGroupParameterTab","CustomTab","showEsign","sortData","Esign","SlideOutModal","parameterType","SampleType","transactionStatus","EditTestGroupParameter","AddCodedResult","FormTextarea","AddSpecification","TemplateForm","toast","TestGroupMaterialTab","AddTestGroupTestMaterial","AddTestGroupNumericSpecification","ConfirmMessage","TestGroupRulesEngineTab","AddSubCodedResult","TestGroupTestTab","props","onTemplateInputChange","event","selectedRecord","state","target","type","name","checked","YES","NO","value","setState","onTemplateComboChange","comboData","fieldName","onTemplateDateChange","dateName","dateValue","Date","handleClose","updateInfo","typeName","data","testGroupCheckList","openTemplateModal","updateStore","closeModal","screenName","operation","selectedId","openChildModal","loadEsign","selectedsubcodedresult","onTabChange","tabProps","EditSpecDetails","viewdetails","ncontrolCode","addTestGroupNumericTab","userInfo","testgroupspecification","masterData","SelectedSpecification","DeleteSpecDetails","SpecConfirmDelete","tabDetail","tabMap","Map","set","controlMap","userRoleControlRights","inputParam","deleteAction","onSwitchChange","addTestFile","viewTestFile","defaultRecord","filterData","getTestGroupParameter","editTestGroupParameter","addTestGroupCodedResult","viewTestGroupCheckList","dataState","dataStateChange","testTabDetail","paneHeight","subCodedResultView","ConfirmDelete","getDataForTestMaterial","getTestGroupMaterial","getDataForEditTestMaterial","isrulesenginerequired","getTestGroupRulesEngineAdd","settings","skipRulesEngine","takeRulesEngine","getEditTestGroupRulesEngine","getSelectedTestGroupRulesEngine","ConfirmDeleteRule","approveVersion","openflowview","handlePageChangeRuleEngine","viewOutcome","filterParamRulesEngine","filterTransactionList","saveExecutionOrder","deleteId","confirmMessage","confirm","intl","formatMessage","id","DeleteTestMaterial","selectedSpecification","napprovalstatus","DRAFT","CORRECTION","inputData","ntreeversiontempcode","selectedNode","ntestgrouptestmaterialcode","selectedMaterial","ntestgrouptestcode","methodUrl","classUrl","esignRights","nformcode","screenData","openModal","crudMaster","warn","onSaveClick","saveType","formRef","onSaveFormula","onSaveParameter","length","onSaveCodedResult","onSaveSubCodedResult","onSaveSpecification","onSaveMaterial","parameterList","testGroupTestParameter","nparametertypecode","sdisplaystatus","label","nunitcode","nchecklistversioncode","map","item","testgrouptestparameter","userinfo","NUMERIC","testGroupTestNumericParameter","numericList","ntestgrouptestparametercode","ngradecode","replace","ntestformulacode","testFormula","testgrouptestformula","sformulacalculationcode","sformulacalculationdetail","ntransactionstatus","CHARACTER","characterList","testGroupTestCharParameter","console","log","searchRef","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","SelectedTest","fetchUrl","fecthInputObject","searchFieldList","selectedParameter","testFormulaArray","test","testgroupsubcoded","testGroupPredefParameter","ndefaultstatus","nstatus","ACTIVE","ntestgrouptestpredefcode","spredefinedname","spredefinedsynonym","spredefinedcomments","salertmessage","nneedresultentryalert","nneedsubcodedresult","ntestpredefinedcode","testgrouptestpredefinedparameter","deletetestgroupsubcoded","selectsubcodedelete","addsubcodedresult","filter","x","hasOwnProperty","ssubcodedresult","push","loading","submit","TestGroupAddSpecification","ngendercode","nfromage","ntoage","shigha","shighb","slowa","slowb","sresultvalue","ntestgrouptestclinicspeccode","testgroupaddspecification","testGroupTestMaterial","nmaterialtypecode","jsondata","nmaterialcatcode","nmaterialcode","smaterialname","sremarks","testgrouptestmaterial","deleteTest","deleteParam","treeVersionTemplateIndex","findIndex","templateVersionStatus","RETIRED","testgrouptest","treetemplatemanipulation","modalName","selected","toLowerCase","key","dataItem","onEsignInputOnChange","onComboChange","caseNo","needRoundingDigit","needUnit","parameterData","defaultUnit","undefined","testGroupInputData","schecklistversionname","oldnmaterialtypecode","parseInt","materialType","getMaterialCategoryBasedMaterialType","oldnmaterialcatcode","getMaterialBasedMaterialCategory","addSubCodedResult","deleteSubCodedResult","index","subCodedResult","index1","splice","dataIndex","onInputOnChange","optional","indexKey","Object","keys","values","treeData","npositioncode","nlevelno","sleveldescription","ntemptranstestgroupcode","schildnode","nnextchildcode","inputValue","codedResultMandatory","inputValues","onNumericInputChange","validateEsign","sreason","nreasoncode","spredefinedreason","password","validateEsignCredential","clinicalSpecMandatory","TestGroupTestClinicalSpec","paramColumnList","PREDEFINED","paramMandatoryFields","forEach","mandatory","materialColumnList","testView","handleFocus","nsampletypecode","nclinicaltyperequired","grade","materialCategoryList","materialList","templateData","e","select","previousProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport TestGroupParameterTab from './TestGroupParameterTab';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport { showEsign, sortData } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { parameterType, SampleType, transactionStatus } from '../../components/Enumeration';\r\nimport EditTestGroupParameter from './EditTestGroupParameter';\r\nimport AddCodedResult from '../testmanagement/AddCodedResult';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport AddSpecification from '../testmanagement/AddSpecification';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport { toast } from 'react-toastify';\r\nimport TestGroupMaterialTab from './TestGroupMaterialTab';\r\nimport AddTestGroupTestMaterial from './AddTestGroupTestMaterial';\r\nimport AddTestGroupNumericSpecification from './AddTestGroupNumericSpecification';\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport TestGroupRulesEngineTab from './TestGroupRulesEngineTab';\r\nimport AddSubCodedResult from '../testmanagement/AddSubCodedResult';\r\n\r\nclass TestGroupTestTab extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRecord: {}\r\n        }\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        // this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n        // { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\r\n        // { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n        // this.clinicalSpecMandatory = [{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"ngendercode\", \"width\": \"200px\", \"mandatory\": true },\r\n        // { \"idsName\": \"IDS_FROMAGE\", \"dataField\": \"nfromage\", \"width\": \"200px\", \"mandatory\": true },\r\n        // { \"idsName\": \"IDS_TOAGE\", \"dataField\": \"ntoage\", \"width\": \"200px\", \"mandatory\": true }];\r\n    }\r\n\r\n    render() {\r\n\r\n        {this.state.selectedRecord && this.state.selectedRecord[\"sresultvalue\"]===null || this.state.selectedRecord[\"sresultvalue\"]===undefined ?\r\n        this.clinicalSpecMandatory = [{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"ngendercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_FROMAGE\", \"dataField\": \"nfromage\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_TOAGE\", \"dataField\": \"ntoage\", \"width\": \"200px\", \"mandatory\": true }]\r\n        :\r\n        this.clinicalSpecMandatory = [{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"ngendercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_FROMAGE\", \"dataField\": \"nfromage\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_TOAGE\", \"dataField\": \"ntoage\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_GRADE\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n    ]}\r\n\r\n        let nneedresultentryalert = this.state.selectedRecord[\"nneedresultentryalert\"] ;\r\n        {nneedresultentryalert === 3 ? \r\n        this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatory\": true }] \r\n        : \r\n        this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }]};\r\n\r\n        if (this.props.masterData.TestGroupTestClinicalSpec) {\r\n            sortData(this.props.masterData.TestGroupTestClinicalSpec, \"ascending\", \"nfromage\");\r\n        }\r\n\r\n\r\n        this.paramColumnList = [\r\n            { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ]\r\n        if (this.state.selectedRecord[\"parameterTypeCode\"] && this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC) {\r\n            this.paramColumnList = [\r\n                { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_ROUNDINGDIGITS\", \"dataField\": \"nroundingdigits\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_UNIT\", \"dataField\": \"nunitcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        }\r\n        if (this.state.selectedRecord[\"parameterTypeCode\"] && this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED) {\r\n            this.paramColumnList = [\r\n                { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n               // { \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n              //  { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        }\r\n        const paramMandatoryFields = [];\r\n\r\n        this.paramColumnList.forEach(item => item.mandatory === true ?\r\n            paramMandatoryFields.push(item) : \"\"\r\n        );\r\n        this.materialColumnList = [\r\n            { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"nmaterialtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"nmaterialcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_MATERIALNAME\", \"dataField\": \"nmaterialcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n\r\n        ]\r\n        return (\r\n            <>\r\n                    <div className='grouped-param-inner grouped-tab-inner'>\r\n                        {!this.props.testView ?\r\n                            <CustomTab paneHeight={this.props.paneHeight} tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                            :\r\n                            <CustomTab paneHeight={this.props.paneHeight} tabDetail={this.testTabDetail()} onTabChange={this.onTabChange} />\r\n\r\n                        }\r\n                    </div>\r\n\r\n                {this.props.openChildModal && this.props.screenName &&\r\n                    <SlideOutModal\r\n                        show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        onSaveClick={this.onSaveClick}\r\n                        //showSaveContinue={this.props.screenName === \"IDS_SUBCODEDRESULT\"?true:false}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.screenName === \"IDS_PARAMETER\" ? paramMandatoryFields :\r\n                            this.props.screenName === \"IDS_CODEDRESULT\" ? this.codedResultMandatory : this.props.screenName === \"IDS_CLINICALSPEC\" ? this.clinicalSpecMandatory : this.props.screenName === \"IDS_TESTGROUPMATERIAL\"\r\n                                ? this.materialColumnList : []}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"IDS_PARAMETER\" ?\r\n                                <>\r\n                                    <EditTestGroupParameter\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        testGroupInputData={this.props.testGroupInputData}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputChange={this.onNumericInputChange}\r\n                                        onFocus={this.handleFocus}\r\n                                    //TestGroupTestClinicalSpec={this.props.masterData.TestGroupTestClinicalSpec}\r\n                                    />\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED ||\r\n                                        this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.CHARACTER ||\r\n                                        this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC ?\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className=\"horizontal-line\"></div>\r\n                                            </Col>\r\n                                        </Row> : \"\"\r\n                                    }\r\n\r\n                                    {/* {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED &&\r\n                                        <Row>\r\n                                            <AddCodedResult\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                parameterData={this.props.parameterData}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onComboChange={this.onComboChange}\r\n                                                addSubCodedResult={this.addSubCodedResult}\r\n                                                deleteSubCodedResult={this.deleteSubCodedResult}\r\n                                                selectedsubcodedresult={this.state.selectedsubcodedresult || []}\r\n                                                selectsubcodedelete={this.state.selectsubcodedelete || []}\r\n                                                controlMap={this.props.controlMap}\r\n                                                userRoleControlRights={this.props.userRoleControlRights}\r\n\r\n                                            />\r\n                                        </Row>\r\n                                        } */}\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.CHARACTER &&\r\n                                        <Row>\r\n                                            <Col md=\"12\">\r\n                                                <FormTextarea\r\n                                                    name={\"scharname\"}\r\n                                                    label={this.props.intl.formatMessage({ id: \"IDS_TESTCHARACTER\" })}\r\n                                                    onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_TESTCHARACTER\" })}\r\n                                                    value={this.state.selectedRecord[\"scharname\"]}\r\n                                                    rows=\"2\"\r\n                                                    required={false}\r\n                                                    maxLength={255}\r\n                                                >\r\n                                                </FormTextarea>\r\n                                            </Col>\r\n                                        </Row>}\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC   && this.props.filterData  && this.props.filterData.nsampletypecode && this.props.filterData.nsampletypecode.item && this.props.filterData.nsampletypecode.item.nclinicaltyperequired ===transactionStatus.NO && //&& this.props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE &&\r\n                                        <AddSpecification\r\n                                               grade={this.props.testGroupInputData.grade}\r\n                                            selectedRecord={this.state.selectedRecord}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            onFocus={this.handleFocus}\r\n                                        />}\r\n                                </> :\r\n                                this.props.screenName === \"IDS_CODEDRESULT\" ?\r\n                                    <AddCodedResult\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        parameterData={this.props.parameterData}\r\n                                        selectedRecord={this.state.selectedRecord}\r\n                                        onComboChange={this.onComboChange}\r\n                                        addSubCodedResult={this.addSubCodedResult}\r\n                                        deleteSubCodedResult={this.deleteSubCodedResult}\r\n                                        selectedsubcodedresult={this.state.selectedsubcodedresult || []}\r\n                                        controlMap={this.props.controlMap}\r\n                                        userRoleControlRights={this.props.userRoleControlRights}\r\n                                        userInfo={this.props.userInfo}\r\n                                    />\r\n                                    :\r\n                                    this.props.screenName === \"IDS_SUBCODEDRESULT\" ?\r\n                                        <AddSubCodedResult\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            parameterData={this.props.parameterData}\r\n                                            selectedRecord={this.state.selectedRecord}\r\n                                            onComboChange={this.onComboChange}\r\n                                            addSubCodedResult={this.addSubCodedResult}\r\n\r\n                                        />\r\n                                        :\r\n                                        this.props.screenName === \"IDS_CLINICALSPEC\" ?\r\n                                            <AddTestGroupNumericSpecification\r\n                                                //gradenew={this.props.testGroupInputData.grade||[]}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                parameterData={this.props.parameterData}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onComboChange={this.onComboChange}\r\n                                                onNumericInputChange={this.onNumericInputChange}\r\n                                            />\r\n                                            : <AddTestGroupTestMaterial\r\n                                                materialType={this.props.materialType}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                materialCategoryList={this.props.materialCategoryList}\r\n                                                materialList={this.props.materialList}\r\n                                                onComboChange={this.onComboChange}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                onNumericInputChange={this.onNumericInputChange}\r\n\r\n                                            />\r\n\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.testGroupCheckList && this.props.testGroupCheckList.templateData &&\r\n                    this.props.testGroupCheckList.templateData.length > 0 &&\r\n                    <TemplateForm\r\n                        templateData={this.props.testGroupCheckList.templateData}\r\n                        handleClose={this.handleClose}\r\n                        screenName=\"IDS_VIEWCHECKLIST\"\r\n                        needSaveButton={false}\r\n                        viewScreen={this.props.openTemplateModal}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleFocus(e){\r\n        e.target.select();\r\n    }\r\n\r\n    onTemplateInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state.selectedRecord || {};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleClose = () => {\r\n        let updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {},\r\n                testGroupCheckList: {},\r\n                openTemplateModal: false\r\n            }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        if (this.props.screenName === \"IDS_SUBCODEDRESULT\") {\r\n            //screenName = \"IDS_CODEDRESULT\";\r\n            //operation = \"update\";\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    operation: \"create\", selectedId: null,\r\n                    openChildModal: true, screenName: \"IDS_CODEDRESULT\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            let loadEsign = this.props.loadEsign;\r\n            let openChildModal = this.props.openChildModal;\r\n            let selectedRecord = this.props.selectedRecord;\r\n            let selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n            if (this.props.loadEsign) {\r\n                if (this.props.operation === \"delete\" || this.props.operation === \"Default\") {\r\n                    loadEsign = false;\r\n                    openChildModal = false;\r\n                    selectedRecord = {};\r\n                } else {\r\n                    loadEsign = false;\r\n                    // selectedRecord[\"agree\"] = 4;\r\n                    selectedRecord['esignpassword'] = \"\"\r\n                    selectedRecord['esigncomments'] = \"\"\r\n                    selectedRecord['esignreason'] = \"\"\r\n                }\r\n            } else {\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openChildModal, loadEsign, selectedRecord, selectedsubcodedresult }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            //this.setState({selectedsubcodedresult: []}); \r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    EditSpecDetails = (viewdetails, ncontrolCode) => {\r\n\r\n        this.props.addTestGroupNumericTab(\"update\", viewdetails, this.props.userInfo, { testgroupspecification: this.props.masterData.SelectedSpecification }, this.props.masterData, ncontrolCode)\r\n    };\r\n\r\n    DeleteSpecDetails = (viewdetails, ncontrolCode) => {\r\n        this.SpecConfirmDelete(\"delete\", 1, viewdetails, ncontrolCode)\r\n    };\r\n\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_PARAMETER\",\r\n            <TestGroupParameterTab\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                deleteAction={this.deleteAction}\r\n                onSwitchChange={this.onSwitchChange}\r\n                addTestFile={this.props.addTestFile}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                filterData={this.props.filterData}\r\n                getTestGroupParameter={this.props.getTestGroupParameter}\r\n                editTestGroupParameter={this.props.editTestGroupParameter}\r\n                addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                addTestGroupNumericTab={this.props.addTestGroupNumericTab}\r\n                viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                EditSpecDetails={this.EditSpecDetails}\r\n                DeleteSpecDetails={this.DeleteSpecDetails}\r\n                dataState={this.props.dataState}\r\n                dataStateChange={this.props.dataStateChange}\r\n\r\n            />);\r\n        return tabMap;\r\n    }\r\n    testTabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_PARAMETER\",\r\n            <TestGroupParameterTab\r\n                paneHeight={this.props.paneHeight}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                deleteAction={this.deleteAction}\r\n                onSwitchChange={this.onSwitchChange}\r\n                addTestFile={this.props.addTestFile}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                filterData={this.props.filterData}\r\n                getTestGroupParameter={this.props.getTestGroupParameter}\r\n                editTestGroupParameter={this.props.editTestGroupParameter}\r\n                addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                subCodedResultView={this.props.subCodedResultView}\r\n                addTestGroupNumericTab={this.props.addTestGroupNumericTab}\r\n                viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                EditSpecDetails={this.EditSpecDetails}\r\n                DeleteSpecDetails={this.DeleteSpecDetails}\r\n                hasDynamicColSize={true}\r\n                dataState={this.props.dataState}\r\n                dataStateChange={this.props.dataStateChange}\r\n            />);\r\n        tabMap.set(\"IDS_MATERIAL\",\r\n            <TestGroupMaterialTab\r\n                paneHeight={this.props.paneHeight}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                ConfirmDelete={this.ConfirmDelete}\r\n                getDataForTestMaterial={this.props.getDataForTestMaterial}\r\n                getTestGroupMaterial={this.props.getTestGroupMaterial}\r\n                getDataForEditTestMaterial={this.props.getDataForEditTestMaterial}\r\n                selectedRecord={this.state.selectedRecord}\r\n\r\n            />);\r\n            {this.props.isrulesenginerequired&&\r\n                tabMap.set(\"IDS_RULESENGINE\",\r\n                <TestGroupRulesEngineTab\r\n                    paneHeight={this.props.paneHeight}\r\n                    getTestGroupRulesEngineAdd={this.props.getTestGroupRulesEngineAdd}\r\n                    controlMap={this.props.controlMap}\r\n                    userRoleControlRights={this.props.userRoleControlRights}\r\n                    userInfo={this.props.userInfo}\r\n                    selectedRecord={this.state.selectedRecord}\r\n                    masterData={this.props.masterData}\r\n                    settings={this.props.settings}\r\n                    skipRulesEngine={this.props.skipRulesEngine}\r\n                    takeRulesEngine={this.props.takeRulesEngine}\r\n                    getEditTestGroupRulesEngine={this.props.getEditTestGroupRulesEngine}\r\n                    getSelectedTestGroupRulesEngine={this.props.getSelectedTestGroupRulesEngine}\r\n                    ConfirmDeleteRule={this.props.ConfirmDeleteRule}\r\n                    approveVersion={this.props.approveVersion}\r\n                    openflowview={this.props.openflowview}\r\n                    handlePageChangeRuleEngine={this.props.handlePageChangeRuleEngine}\r\n                    viewOutcome={this.props.viewOutcome}\r\n                    filterParamRulesEngine={this.props.filterParamRulesEngine}\r\n                    filterTransactionList={this.props.filterTransactionList}\r\n                    saveExecutionOrder={this.props.saveExecutionOrder}\r\n    \r\n                />);\r\n\r\n            }\r\n      \r\n        return tabMap;\r\n    }\r\n    ConfirmDelete = (operation, deleteId, selectedRecord) => {\r\n        this.confirmMessage.confirm(\r\n            \"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () =>\r\n                this.DeleteTestMaterial(\r\n                    operation,\r\n                    deleteId, selectedRecord\r\n                )\r\n        );\r\n    };\r\n\r\n    SpecConfirmDelete = (operation, deleteId, selectedRecord, ncontrolCode) => {\r\n        this.confirmMessage.confirm(\r\n            \"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () =>\r\n                this.deleteAction(selectedRecord, \"delete\", ncontrolCode, \"TestGroupAddSpecification\", \"openChildModal\")\r\n        );\r\n    };\r\n    DeleteTestMaterial = (operation, ncontrolCode) => {\r\n        let selectedSpecification = this.props.masterData.SelectedSpecification;\r\n        if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT\r\n            || selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            let selectedRecord = this.state.selectedRecord\r\n            let inputData = [];\r\n            inputData = { ntreeversiontempcode: this.props.masterData.selectedNode.ntreeversiontempcode }\r\n\r\n            inputData[\"testgrouptestmaterial\"] = {\r\n                ntestgrouptestmaterialcode: this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,\r\n                ntestgrouptestcode: this.props.masterData.selectedMaterial.ntestgrouptestcode,\r\n\r\n            };\r\n\r\n            inputData[\"userinfo\"] = this.props.userInfo;\r\n            const inputParam = {\r\n                methodUrl: \"TestGroupTestMaterial\",\r\n                classUrl: this.props.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: \"delete\",\r\n                selectedRecord:{...this.state.selectedRecord}\r\n\r\n            };\r\n            const masterData = this.props.masterData;\r\n            if (\r\n                showEsign(\r\n                    this.props.esignRights,\r\n                    this.props.userInfo.nformcode,\r\n                    ncontrolCode\r\n                )\r\n            ) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        openModal: true,\r\n                        screenName: \"IDS_TESTGROUPMATERIAL\",\r\n                        operation: operation.operation,\r\n                    },\r\n                };\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        // if(this.props.screenName === \"IDS_TEST\" \r\n        //     || this.props.screenName === \"IDS_EDITTESTGROUPTEST\") {\r\n        //     inputParam = this.onSaveTest(saveType, formRef);\r\n        // } else \r\n        if (this.props.screenName === \"IDS_FORMULA\") {\r\n            inputParam = this.onSaveFormula(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_PARAMETER\") {\r\n            inputParam = this.onSaveParameter(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_CODEDRESULT\") {\r\n            if ((this.state.selectedRecord[\"nneedsubcodedresult\"] === 3 && this.state.selectedsubcodedresult.length>0) ||(this.state.selectedRecord[\"nneedsubcodedresult\"] === 4) ) {\r\n            inputParam = this.onSaveCodedResult(saveType, formRef);\r\n            }else\r\n            {\r\n                return toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSUBCODEDRESULT\" }));\r\n            }\r\n\r\n        } else if (this.props.screenName === \"IDS_SUBCODEDRESULT\") {\r\n            return this.onSaveSubCodedResult(saveType, formRef);\r\n\r\n        } else if (this.props.screenName === \"IDS_CLINICALSPEC\") {\r\n            inputParam = this.onSaveSpecification(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"IDS_TESTGROUPMATERIAL\") {\r\n            inputParam = this.onSaveMaterial(saveType, formRef);\r\n        }\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            //(this.props.screenName !== \"IDS_CODEDRESULT\")\r\n            // if(this.props.submit!==\"SUBCODERESULT\")\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    onSaveParameter = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const parameterList = [\"ntestgrouptestparametercode\", \"ntestgrouptestcode\", \"ntestparametercode\", \"sparametersynonym\", \"nroundingdigits\",\r\n            \"nresultmandatory\", \"nreportmandatory\", \"sspecdesc\", \"nsorter\",\"nisadhocparameter\"];\r\n        let testGroupTestParameter = {\r\n            nparametertypecode: selectedRecord.nparametertypecode.value,\r\n            sdisplaystatus: selectedRecord.nparametertypecode.label,\r\n            nunitcode: selectedRecord.nunitcode ? selectedRecord.nunitcode.value : -1,\r\n            nchecklistversioncode: selectedRecord.nchecklistversioncode ? selectedRecord.nchecklistversioncode.value : -1\r\n        }\r\n        parameterList.map(item => {\r\n            return testGroupTestParameter[item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n        });\r\n        let inputData = {\r\n            testgrouptestparameter: testGroupTestParameter,\r\n            userinfo: this.props.userInfo\r\n        };\r\n        if (selectedRecord.nparametertypecode.value === parameterType.NUMERIC) {\r\n            let testGroupTestNumericParameter = {};\r\n            const numericList = [\"sminlod\", \"smaxlod\", \"sminb\", \"smina\", \"smaxa\", \"smaxb\", \"sminloq\", \"smaxloq\", \"sdisregard\", \"sresultvalue\"];\r\n            testGroupTestNumericParameter[\"ntestgrouptestparametercode\"] = selectedRecord.ntestgrouptestparametercode;\r\n            testGroupTestNumericParameter[\"ngradecode\"] =selectedRecord.ngradecode? selectedRecord.ngradecode.value:-1;\r\n            numericList.map(item => {\r\n                return testGroupTestNumericParameter[item] = selectedRecord[item] ? selectedRecord[item] === \"0\" ? selectedRecord[item] : selectedRecord[item].replace(/^0+/, '') : null;\r\n            });\r\n            inputData[\"testgrouptestnumericparameter\"] = testGroupTestNumericParameter;\r\n            if (selectedRecord.ntestformulacode) {\r\n                const testFormula = selectedRecord.ntestformulacode.item;\r\n                const testgrouptestformula = {\r\n                    ntestgrouptestparametercode: selectedRecord.ntestgrouptestparametercode,\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    ntestformulacode: testFormula.ntestformulacode,\r\n                    sformulacalculationcode: testFormula.sformulacalculationcode,\r\n                    sformulacalculationdetail: testFormula.sformulacalculationdetail,\r\n                    ntransactionstatus: transactionStatus.YES\r\n                };\r\n                inputData[\"testgrouptestformula\"] = testgrouptestformula;\r\n            } else {\r\n                inputData[\"testgrouptestformula\"] = null;\r\n            }\r\n        } else if (selectedRecord.nparametertypecode.value === parameterType.CHARACTER) {\r\n            const characterList = [\"ntestgrouptestparametercode\", \"scharname\"];\r\n            let testGroupTestCharParameter = {};\r\n            characterList.map(item => {\r\n                return testGroupTestCharParameter[item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n            });\r\n            inputData[\"testgrouptestcharparameter\"] = testGroupTestCharParameter;\r\n        }\r\n        //  else if (selectedRecord.nparametertypecode.value === parameterType.PREDEFINED) {\r\n        //     const testGroupTestPredefParameter = {\r\n        //         ntestgrouptestparametercode: selectedRecord.ntestgrouptestparametercode,\r\n        //         ngradecode: selectedRecord.ngradecode.value,\r\n        //         spredefinedname: selectedRecord.spredefinedname,\r\n        //         ntestgrouptestpredefcode: selectedRecord.ntestgrouptestpredefcode,\r\n        //         ndefaultstatus: selectedRecord.ndefaultstatus\r\n        //     }\r\n        //     inputData[\"testgrouptestpredefparameter\"] = testGroupTestPredefParameter;\r\n        // }\r\n        console.log(\"input data:\", inputData);\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: \"update\",\r\n            methodUrl: \"TestGroupParameter\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveFormula = (saveType, formRef) => {\r\n        const masterData = this.props.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const selectedParameter = masterData.selectedParameter;\r\n        const testFormulaArray = selectedRecord.ntestformulacode.map(test => {\r\n            return {\r\n                ntestgrouptestcode: selectedParameter.ntestgrouptestcode,\r\n                ntestgrouptestparametercode: selectedParameter.ntestgrouptestparametercode,\r\n                ntestformulacode: test.item.ntestformulacode,\r\n                sformulacalculationcode: test.item.sformulacalculationcode,\r\n                sformulacalculationdetail: test.item.sformulacalculationdetail,\r\n                ntransactionstatus: transactionStatus.NO\r\n            }\r\n        });\r\n        const inputData = {\r\n            testgroupspecification: masterData.SelectedSpecification,\r\n            testgrouptestformula: testFormulaArray,\r\n            userinfo: this.props.userInfo\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupTestFormula\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveCodedResult = (saveType, formRef) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n            //const selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n            const testgroupsubcoded = [];\r\n            const testGroupPredefParameter = {\r\n                ndefaultstatus: transactionStatus.NO,\r\n                nstatus: transactionStatus.ACTIVE,\r\n                ntestgrouptestpredefcode: selectedRecord[\"ntestgrouptestpredefcode\"],\r\n                ntestgrouptestparametercode: this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],\r\n                ngradecode: selectedRecord[\"ngradecode\"].value,\r\n                spredefinedname: selectedRecord[\"spredefinedname\"],\r\n                //sresultparacomment: selectedRecord[\"sresultparacomment\"],\r\n                spredefinedsynonym: selectedRecord[\"spredefinedsynonym\"],\r\n                spredefinedcomments: selectedRecord[\"spredefinedcomments\"],\r\n                salertmessage: selectedRecord[\"salertmessage\"],\r\n                nneedresultentryalert: selectedRecord[\"nneedresultentryalert\"],\r\n                nneedsubcodedresult: selectedRecord[\"nneedsubcodedresult\"],\r\n                ntestpredefinedcode: this.props.masterData.selectedParameter[\"ntestpredefinedcode\"],\r\n\r\n            };\r\n            const inputParam = {\r\n                inputData: {\r\n                    testgrouptestpredefinedparameter: testGroupPredefParameter,\r\n                    userinfo: this.props.userInfo,\r\n                    testgroupspecification: this.props.masterData.SelectedSpecification,\r\n                    testgroupsubcoded: this.state.selectedsubcodedresult,\r\n                    deletetestgroupsubcoded: this.state.selectsubcodedelete,\r\n                    addsubcodedresult : this.state.selectedsubcodedresult.filter(x =>!x.hasOwnProperty('ntestgrouptestpredefsubcode') )|| []\r\n\r\n                },\r\n\r\n                classUrl: \"testgroup\",\r\n                operation: this.props.operation,\r\n                methodUrl: \"TestGroupPredefParameter\",\r\n                saveType, formRef, searchRef: this.searchRef,\r\n                postParam: {\r\n                    inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                    primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                    fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                    masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n                }\r\n            }\r\n            //this.setState({selectedsubcodedresult: []}); \r\n            return inputParam;\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    onSaveSubCodedResult = (saveType, formRef) => {\r\n        // const ssubcodedresult = this.state.selectedRecord[\"ssubcodedresult\"];\r\n        let selectedsubcodedresult = [];\r\n        //let addsubcodedresult = [];\r\n        selectedsubcodedresult[\"ssubcodedresult\"] = [];\r\n        selectedsubcodedresult = this.state.selectedsubcodedresult || [];\r\n        //addsubcodedresult = this.state.selectedsubcodedresult.filter(x =>!x.hasOwnProperty('ntestgrouptestpredefsubcode') )|| [];\r\n        let ssubcodedresult = this.state.selectedRecord[\"ssubcodedresult\"];\r\n        selectedsubcodedresult.push({ \"ssubcodedresult\": this.state.selectedRecord[\"ssubcodedresult\"] });\r\n        const selectedRecord = this.state.selectedRecord\r\n        delete selectedRecord[\"ssubcodedresult\"]\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                //operation: \"create\", \r\n                selectedId: null, selectedsubcodedresult, selectedRecord,\r\n                screenName: \"IDS_CODEDRESULT\", loading: false//,openChildModal: false,,\r\n                , submit: \"SUBCODERESULT\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        //this.setState({ selectedsubcodedresult });\r\n    }\r\n\r\n\r\n    onSaveSpecification = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        // if(selectedRecord[\"nfromage\"]<selectedRecord[\"ntoage\"]){\r\n\r\n        const TestGroupAddSpecification = {\r\n            nstatus: transactionStatus.ACTIVE,\r\n            ntestgrouptestparametercode: this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],\r\n            ngendercode: selectedRecord[\"ngendercode\"].value,\r\n            nfromage: selectedRecord[\"nfromage\"],\r\n            ntoage: selectedRecord[\"ntoage\"],\r\n            shigha: selectedRecord[\"nhigha\"],\r\n            shighb: selectedRecord[\"nhighb\"],\r\n            slowa: selectedRecord[\"nlowa\"],\r\n            slowb: selectedRecord[\"nlowb\"],\r\n            sresultvalue: selectedRecord[\"sresultvalue\"],\r\n            ngradecode: selectedRecord[\"ngradecode\"] && selectedRecord[\"ngradecode\"].value || -1,\r\n\r\n            ntestgrouptestclinicspeccode: selectedRecord[\"ntestgrouptestclinicspeccode\"],\r\n\r\n        };\r\n\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                testgroupaddspecification: TestGroupAddSpecification,\r\n                userinfo: this.props.userInfo,\r\n                testgroupspecification: this.props.masterData.SelectedSpecification\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupAddSpecification\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n        // }else{\r\n        //     toast.warn(this.props.intl.formatMessage({id: \"IDS_SELECTEDTEMPLATEISRETIRED\"})); \r\n        // }\r\n    }\r\n    onSaveMaterial = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let testGroupTestMaterial = []\r\n        if (this.props.operation === \"create\") {\r\n            testGroupTestMaterial = {\r\n                ntestgrouptestcode: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                ntestgrouptestmaterialcode: this.props.masterData.SelectedTest.ntestgrouptestmaterialcode,\r\n                nmaterialtypecode: selectedRecord[\"nmaterialtypecode\"].item.jsondata.nmaterialtypecode,\r\n                nmaterialcatcode: selectedRecord[\"nmaterialcatcode\"].value,\r\n                nmaterialcode: selectedRecord[\"nmaterialcode\"].value,\r\n                smaterialname: selectedRecord[\"nmaterialcode\"].label,\r\n                sremarks: selectedRecord[\"sremarks\"],\r\n                nstatus: transactionStatus.ACTIVE,\r\n\r\n            };\r\n        }\r\n        else {\r\n            testGroupTestMaterial = {\r\n                ntestgrouptestcode: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                ntestgrouptestmaterialcode: this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,\r\n                nmaterialtypecode: selectedRecord[\"nmaterialtypecode\"].value,\r\n                nmaterialcatcode: selectedRecord[\"nmaterialcatcode\"].value,\r\n                nmaterialcode: selectedRecord[\"nmaterialcode\"].value,\r\n                sremarks: selectedRecord[\"sremarks\"],\r\n                nstatus: transactionStatus.ACTIVE,\r\n\r\n            };\r\n        }\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                testgrouptestmaterial: testGroupTestMaterial,\r\n                ntreeversiontempcode: this.props.masterData.selectedNode.ntreeversiontempcode,\r\n                userinfo: this.props.userInfo,\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupTestMaterial\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    deleteTest = (deleteParam) => {\r\n\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = this.props.masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const screenName = deleteParam.screenName;\r\n                const inputParam = {\r\n                    inputData: {\r\n                        testgrouptest: deleteParam.selectedRecord,\r\n                        userinfo: this.props.userInfo,\r\n                        testgroupspecification,\r\n                        treetemplatemanipulation: this.props.masterData.selectedNode\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"delete\",\r\n                    methodUrl: \"Test\",\r\n                    screenName: \"IDS_TEST\",\r\n                    postParam: {\r\n                        inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                        primaryKeyValue: deleteParam.selectedRecord.ntestgrouptestcode,\r\n                        fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                        masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n                    }\r\n                }\r\n                const masterData = this.props.masterData;\r\n                if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName: screenName, operation: deleteParam.operation, selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteAction = (item, operation, ncontrolCode, methodUrl, modalName) => {\r\n\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const selected = item;\r\n            const inputParam = {\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selected,\r\n                    userinfo: this.props.userInfo,\r\n                    testgroupspecification: this.props.masterData.SelectedSpecification,\r\n                    deletetestgroupsubcoded:this.state.selectedsubcodedresult\r\n                },\r\n                classUrl: \"testgroup\",\r\n                operation: operation,\r\n                methodUrl: methodUrl,\r\n                screenName: \"IDS_TEST\",\r\n                postParam: {\r\n                    inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                    primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                    fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                    masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n                }\r\n            }\r\n            const masterData = this.props.masterData;\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        [modalName]: true, screenName: \"IDS_TEST\", operation: operation, selectedRecord: {}\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onSwitchChange = (item, key, methodUrl, event) => {\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            //NIBSCRT-2236\r\n            const testgroupspecification = this.props.masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let dataItem = item;\r\n                if (methodUrl === \"TestGroupTestFormula\") {\r\n                    dataItem[\"ntransactionstatus\"] = transactionStatus.YES;\r\n                } else if (methodUrl === 'TestGroupPredefParameter') {\r\n                    // if(this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.DRAFT || this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.CORRECTION)\r\n                    // {\r\n                    dataItem['ndefaultstatus'] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                    // }\r\n                    // else{\r\n                    //     return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n                    // }\r\n\r\n                }\r\n                else {\r\n                    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n                }\r\n                const inputParam = {\r\n                    inputData: {\r\n                        [key]: dataItem,\r\n                        userinfo: this.props.userInfo,\r\n                        testgroupspecification: this.props.masterData.SelectedSpecification\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"default\",\r\n                    methodUrl: methodUrl\r\n                }\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo) => {\r\n        let inputData = [];\r\n        let masterData = { ...this.props.masterData }\r\n        let inputParam = []\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[\"parameterTypeCode\"] = comboData.value;\r\n                selectedRecord[fieldName] = comboData;\r\n                const needRoundingDigit = comboData.value === parameterType.NUMERIC ? false : true;\r\n                const needUnit = comboData.value === parameterType.NUMERIC ? false : true;\r\n                selectedRecord[\"nroundingdigits\"] = 0;\r\n                selectedRecord[\"nunitcode\"] = comboData.value === parameterType.NUMERIC ? this.props.parameterData.defaultUnit : undefined;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...this.props.testGroupInputData,\r\n                            needRoundingDigit, needUnit\r\n                        }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n                break;\r\n\r\n            case 3:\r\n                selectedRecord[\"schecklistversionname\"] = comboData.item.schecklistversionname;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n            case 4:\r\n                let oldnmaterialtypecode = selectedRecord[\"nmaterialtypecode\"].value ? selectedRecord[\"nmaterialtypecode\"].value : selectedRecord[\"nmaterialtypecode\"];\r\n\r\n                if (oldnmaterialtypecode !== comboData.value) {\r\n                    delete selectedRecord['nmaterialcatcode']\r\n                    delete selectedRecord['nmaterialcode']\r\n                }\r\n                selectedRecord[\"nmaterialtypecode\"] = comboData.value;\r\n\r\n                selectedRecord[fieldName] = comboData;\r\n                inputData = {\r\n                    userinfo: this.props.userInfo,\r\n                    nmaterialtypecode: parseInt(comboData.value),\r\n                }\r\n                inputParam = {\r\n                    materialType: this.props.materialType,\r\n                    operation: this.props.operation, masterData,\r\n                    inputData, selectedRecord,\r\n                    screenName: \"IDS_TESTGROUPMATERIAL\", ncontrolCode: this.props.ncontrolCode\r\n                }\r\n                this.props.getMaterialCategoryBasedMaterialType(inputParam)\r\n                break;\r\n            case 5:\r\n                if (selectedRecord[\"nmaterialcatcode\"]) {\r\n                    let oldnmaterialcatcode = selectedRecord[\"nmaterialcatcode\"].value ? selectedRecord[\"nmaterialcatcode\"].value : selectedRecord[\"nmaterialcatcode\"];\r\n                    if (oldnmaterialcatcode !== comboData.value) {\r\n\r\n                        delete selectedRecord['nmaterialcode']\r\n                    }\r\n                }\r\n                selectedRecord[\"nmaterialcatcode\"] = comboData.value;\r\n\r\n                selectedRecord[fieldName] = comboData;\r\n                inputData = {\r\n                    userinfo: this.props.userInfo,\r\n                    nmaterialcatcode: parseInt(selectedRecord[\"nmaterialcatcode\"].value),\r\n                    nmaterialtypecode: parseInt(selectedRecord[\"nmaterialtypecode\"].value),\r\n\r\n                }\r\n                inputParam = {\r\n                    masterData, inputData,\r\n                    selectedRecord, operation: this.props.operation,\r\n                    selectedRecord, screenName: \"IDS_TESTGROUPMATERIAL\", ncontrolCode: this.props.ncontrolCode\r\n                }\r\n                this.props.getMaterialBasedMaterialCategory(inputParam)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    addSubCodedResult = () => {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         loadEsign: true,\r\n        //         openModal: true,\r\n        //         screenName: \"IDS_TESTGROUPTESTMATERIAL\"\r\n        //     },\r\n        // };\r\n        // this.props.updateStore(updateInfo);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                //operation: \"create\", \r\n                selectedId: null,//selectedsubcodedresult:\"\",\r\n                openChildModal: true, screenName: \"IDS_SUBCODEDRESULT\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    deleteSubCodedResult = (index, subCodedResult, index1) => {\r\n        const selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n        selectedsubcodedresult.splice(index1.dataIndex, 1);\r\n        //const selectsubcodedelete=[];\r\n        const selectsubcodedelete= this.state.selectsubcodedelete || [];\r\n        if(index[\"ntestgrouptestpredefsubcode\"])\r\n        selectsubcodedelete.push({ \"ntestgrouptestpredefsubcode\":index[\"ntestgrouptestpredefsubcode\"], \"ssubcodedresult\":index[\"ssubcodedresult\"],\"ntestgrouptestpredefcode\":index[\"ntestgrouptestpredefcode\"] });\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedId: null, selectedsubcodedresult,selectsubcodedelete\r\n\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onInputOnChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                    if (selectedRecord[\"nneedresultentryalert\"] === 4) {\r\n                        selectedRecord[\"nneedsubcodedresult\"] = 4\r\n                        delete selectedRecord[\"salertmessage\"]\r\n                        this.setState({ selectedsubcodedresult: [] });\r\n                    }\r\n                    if (selectedRecord[\"nneedsubcodedresult\"] === 4) {\r\n                        this.setState({ selectedsubcodedresult: [] });\r\n                    }\r\n                    else if(selectedRecord[\"nresultmandatory\"]===3)\r\n                    {\r\n                        selectedRecord[\"nisadhocparameter\"] = 4\r\n                    }\r\n                } else if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = optional;\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n                const indexKey = Object.keys(optional)[0];\r\n                const value = Object.values(optional)[0];\r\n                const treeData = {\r\n                    ntreeversiontempcode: value.ntreeversiontempcode,\r\n                    npositioncode: value.nlevelno - 1,\r\n                    sleveldescription: event.target.value,\r\n                    ntemptranstestgroupcode: value.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: value.schildnode,\r\n                    nnextchildcode: value.schildnode\r\n                }\r\n                let treetemplatemanipulation = selectedRecord.treetemplatemanipulation || [];\r\n                treetemplatemanipulation[indexKey] = treeData;\r\n                selectedRecord[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 4:\r\n                const inputValue = event.target.value;\r\n                if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n\r\n            case 6:\r\n                // selectedRecord[event.target.name] = selectedRecord[\"sresultparacomment\"] = { label: event.target.value, value: event.target.value };\r\n                // this.setState({ selectedRecord });\r\n                // break;\r\n                //selectedRecord[event.target.name] = selectedRecord[\"sresultparacomment\"] = event.target.value;\r\n                selectedRecord[event.target.name] = selectedRecord[\"spredefinedsynonym\"] = event.target.value;\r\n                //selectedRecord[\"sparametername\"] = { label: event.target.value, value: event.target.value };\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 5:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                    if (selectedRecord[\"nneedresultentryalert\"] === 4) {\r\n                        selectedRecord[\"nneedsubcodedresult\"] = 4\r\n                        delete selectedRecord[\"salertmessage\"]\r\n                        this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n                        { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\r\n                        { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n                        const selectsubcodedelete=this.state.selectedsubcodedresult || []\r\n                        this.setState({ selectedsubcodedresult: [],selectsubcodedelete,codedResultMandatory:this.codedResultMandatory });\r\n                    }\r\n                    if (selectedRecord[\"nneedresultentryalert\"] === 3) {\r\n                        this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n                        { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatory\": true },\r\n                        { \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatory\": true },\r\n                        { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n\r\n                        this.setState({ codedResultMandatory: [] });\r\n                    }\r\n\r\n\r\n\r\n                    // if (selectedRecord[\"nneedsubcodedresult\"] === 3) {\r\n                    //     this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n                    //     { \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"sresultparacomment\", \"width\": \"200px\", \"mandatory\": true },\r\n                    //     { \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatory\": true },\r\n                    //     { \"idsName\": \"IDS_SUBCODEDRESULT\", \"dataField\": \"ssubcodedresult\", \"width\": \"200px\", \"mandatory\": true },\r\n                    //     { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n\r\n                    //     this.setState({ codedResultMandatory: [] });\r\n                    // }\r\n\r\n                    if (selectedRecord[\"nneedsubcodedresult\"] === 4) {\r\n                        const selectsubcodedelete=this.state.selectedsubcodedresult || []\r\n                        this.setState({ selectedsubcodedresult: [],selectsubcodedelete });\r\n                    }\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n\r\n                case 7:\r\n                    const inputValues = event.target.value;\r\n                   if (/^-?\\d*?\\.?\\d*?$/.test(inputValues) || inputValues === \"\") {\r\n                       selectedRecord[event.target.name] = event.target.value;\r\n                   }\r\n                   if(selectedRecord[\"sresultvalue\"]===\"\")\r\n                    {\r\n                        delete selectedRecord[\"ngradecode\"];\r\n                    }\r\n                   this.setState({ selectedRecord });\r\n                   break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        console.log(\"value:\", value, name);\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (name === \"nroundingdigits\") {\r\n\r\n            // if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n            //     console.log(\"val:\", value.target.value);\r\n            //     selectedRecord[name] = value.target.value;\r\n            // }\r\n            // if (/^-?\\d*?$/.test(value) || value === \"\") {\r\n            //    // console.log(\"val:\", value);\r\n            //     selectedRecord[name] = value;\r\n            // }\r\n            //const values = value.target.value.replace(/[^-^0-9]/g, '');\r\n            if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\r\n                selectedRecord[name] = value.target.value;\r\n\r\n            } else {\r\n                selectedRecord[name] = \"\";\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[name] = value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord });\r\n        }\r\n        if (this.props.selectedsubcodedresult !== previousProps.selectedsubcodedresult) {\r\n            this.setState({ selectedsubcodedresult: this.props.selectedsubcodedresult });\r\n        }\r\n\r\n        if (this.props.selectsubcodedelete !== previousProps.selectsubcodedelete) {\r\n            this.setState({ selectsubcodedelete: this.props.selectsubcodedelete });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default injectIntl(TestGroupTestTab);"]},"metadata":{},"sourceType":"module"}