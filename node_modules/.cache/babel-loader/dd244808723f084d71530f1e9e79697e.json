{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\InstrumentCalibrationTab.jsx\";\nimport React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage } from 'react-intl';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component'; // import ReactTooltip from 'react-tooltip';\n\nimport InstrumentCalibrationTabAccordion from './InstrumentCalibrationTabAccordion';\n\nconst InstrumentCalibrationTab = props => {\n  const addInstrumentCalibrationId = props.controlMap.has(\"AddInstrumentCalibration\") && props.controlMap.get(\"AddInstrumentCalibration\").ncontrolcode;\n\n  function instrumentCalibrationAccordion(InstrumentCalibration) {\n    const accordionMap = new Map();\n    InstrumentCalibration.map(instrumentCalibration => accordionMap.set(instrumentCalibration.ninstrumentcalibrationcode, /*#__PURE__*/React.createElement(InstrumentCalibrationTabAccordion, {\n      instrumentCalibration: instrumentCalibration,\n      userRoleControlRights: props.userRoleControlRights,\n      controlMap: props.controlMap,\n      userInfo: props.userInfo,\n      masterData: props.masterData,\n      selectedInstrumentCalibration: props.masterData.selectedInstrumentCalibration,\n      getDataForAddEditCalibration: props.getDataForAddEditCalibration,\n      deleteRecord: props.deleteRecord,\n      ConfirmDelete: props.ConfirmDelete,\n      OpenDate: props.OpenDate,\n      CloseDate: props.CloseDate,\n      addfilecllick: props.addfilecllick,\n      addInstrumentFile: props.addInstrumentFile,\n      FileData: props.FileData,\n      deleteTabFileRecord: props.deleteTabFileRecord,\n      getDataForEdit: props.getDataForEdit,\n      screenName: props.screenName,\n      viewInstrumentFile: props.viewInstrumentFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    })));\n    return accordionMap;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addinstrumentcalibration\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addInstrumentCalibrationId) === -1,\n    \"data-tip\": props.formatMessage({\n      id: \"IDS_ADDINSTRUMENTCALIBRATION\"\n    }),\n    onClick: () => props.getDataForAddEditCalibration(\"IDS_INSTRUMENTCALIBRATION\", \"create\", props.userInfo, addInstrumentCalibrationId, props.selectedRecord, props.masterData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADDINSTRUMENTCALIBRATION\",\n    defaultMessage: \"Instrument Calibration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })))), props.InstrumentCalibration && props.InstrumentCalibration.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n    key: \"instrumentcalibrationaccordion\",\n    accordionTitle: \"sheadername\",\n    accordionComponent: instrumentCalibrationAccordion(props.InstrumentCalibration),\n    inputParam: {\n      masterData: props.masterData,\n      userInfo: props.userInfo,\n      nFlag: 2,\n      screenName: \"IDS_INSTRUMENTCALIBRATION\"\n    },\n    accordionClick: props.getTabDetails,\n    accordionPrimaryKey: \"ninstrumentcalibrationcode\",\n    accordionObjectName: \"instrumentCalibration\",\n    selectedKey: props.masterData.selectedInstrumentCalibration ? props.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default InstrumentCalibrationTab;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/instrumentmanagement/InstrumentCalibrationTab.jsx"],"names":["React","Nav","FontAwesomeIcon","FormattedMessage","faPlus","CustomAccordion","InstrumentCalibrationTabAccordion","InstrumentCalibrationTab","props","addInstrumentCalibrationId","controlMap","has","get","ncontrolcode","instrumentCalibrationAccordion","InstrumentCalibration","accordionMap","Map","map","instrumentCalibration","set","ninstrumentcalibrationcode","userRoleControlRights","userInfo","masterData","selectedInstrumentCalibration","getDataForAddEditCalibration","deleteRecord","ConfirmDelete","OpenDate","CloseDate","addfilecllick","addInstrumentFile","FileData","deleteTabFileRecord","getDataForEdit","screenName","viewInstrumentFile","indexOf","formatMessage","id","selectedRecord","length","nFlag","getTabDetails"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport InstrumentCalibrationTabAccordion from './InstrumentCalibrationTabAccordion';\r\n\r\nconst InstrumentCalibrationTab = (props) => {\r\n    const addInstrumentCalibrationId = props.controlMap.has(\"AddInstrumentCalibration\") && props.controlMap.get(\"AddInstrumentCalibration\").ncontrolcode;\r\n    function instrumentCalibrationAccordion(InstrumentCalibration) {\r\n        const accordionMap = new Map();\r\n               \r\n\r\n        InstrumentCalibration.map((instrumentCalibration) =>\r\n        \r\n            accordionMap.set(instrumentCalibration.ninstrumentcalibrationcode,\r\n\r\n                <InstrumentCalibrationTabAccordion\r\n                    instrumentCalibration={instrumentCalibration}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    masterData={props.masterData}\r\n                    selectedInstrumentCalibration={props.masterData.selectedInstrumentCalibration}\r\n                    getDataForAddEditCalibration={props.getDataForAddEditCalibration}\r\n                    deleteRecord={props.deleteRecord}\r\n                    ConfirmDelete={props.ConfirmDelete}\r\n                    OpenDate={props.OpenDate}\r\n                    CloseDate={props.CloseDate}\r\n                    addfilecllick={props.addfilecllick}\r\n                    addInstrumentFile={props.addInstrumentFile}\r\n                    FileData={props.FileData}\r\n                    deleteTabFileRecord={props.deleteTabFileRecord}\r\n                    getDataForEdit={props.getDataForEdit}\r\n                    screenName={props.screenName}\r\n                    viewInstrumentFile={props.viewInstrumentFile}\r\n\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n    return (\r\n        <>\r\n             <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                    <Nav.Link name=\"addinstrumentcalibration\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addInstrumentCalibrationId) === -1}\r\n                     data-tip={props.formatMessage({ id: \"IDS_ADDINSTRUMENTCALIBRATION\" })}\r\n            onClick={()=>props.getDataForAddEditCalibration(\r\n                \"IDS_INSTRUMENTCALIBRATION\",\"create\", props.userInfo, addInstrumentCalibrationId,props.selectedRecord,props.masterData)}>\r\n                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_ADDINSTRUMENTCALIBRATION\" defaultMessage=\"Instrument Calibration\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            {props.InstrumentCalibration && props.InstrumentCalibration.length > 0 &&\r\n                <CustomAccordion\r\n                    key=\"instrumentcalibrationaccordion\"\r\n                    accordionTitle={\"sheadername\"}\r\n                    accordionComponent={instrumentCalibrationAccordion(props.InstrumentCalibration)}\r\n                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 2,screenName:\"IDS_INSTRUMENTCALIBRATION\" }}\r\n                    accordionClick={props.getTabDetails}\r\n                    accordionPrimaryKey={\"ninstrumentcalibrationcode\"}\r\n                    accordionObjectName={\"instrumentCalibration\"}\r\n                   selectedKey={props.masterData.selectedInstrumentCalibration ? props.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode : 0}\r\n\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InstrumentCalibrationTab;"]},"metadata":{},"sourceType":"module"}