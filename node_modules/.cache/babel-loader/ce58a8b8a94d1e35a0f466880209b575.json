{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\FilterQueryBuilder.jsx\";\nimport React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport { Query, Builder, BasicConfig, BasicFuncs, Utils as QbUtils } from \"react-awesome-query-builder\";\nimport \"react-awesome-query-builder/lib/css/styles.css\";\nimport { injectIntl } from \"react-intl\";\nimport AddFilteredPatient from \"../pages/contactmaster/AddFilteredPatient\";\nconst InitialConfig = BasicConfig;\nconst conjunctions = {\n  AND: InitialConfig.conjunctions.AND,\n  OR: InitialConfig.conjunctions.OR\n};\nconst operators1 = { ...InitialConfig.operators\n};\ndelete operators1.proximity;\nconst operators = { ...operators1,\n  between: { ...operators1.between,\n    textSeparators: [\"from\", \"to\"]\n  }\n};\nconst widgets = { ...InitialConfig.widgets,\n  date: { ...InitialConfig.widgets.date,\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\"\n  }\n};\nconst types = { ...InitialConfig.types,\n  boolean: merge(InitialConfig.types.boolean, {\n    widgets: {\n      boolean: {\n        widgetProps: {\n          hideOperator: true,\n          operatorInlineLabel: \"is\"\n        }\n      }\n    }\n  })\n};\nconst localeSettings = {\n  locale: {\n    moment: \"ru\"\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  operatorLabel: \"Operator\",\n  fieldPlaceholder: \"Select field\",\n  operatorPlaceholder: \"Select operator\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: null,\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: {\n    title: \"Are you sure delete this rule?\",\n    okText: \"Yes\",\n    okType: \"danger\"\n  },\n  removeGroupConfirmOptions: {\n    title: \"Are you sure delete this group?\",\n    okText: \"Yes\",\n    okType: \"danger\"\n  }\n};\nconst settings1 = { ...InitialConfig.settings\n};\ndelete settings1.field;\nconst settings = { ...settings1,\n  ...localeSettings,\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  // canReorder: false,\n  // canRegroup: false,\n  // showNot: false,\n  // showLabels: true,\n  maxNesting: 5,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  showErrorMessage: true,\n  customFieldSelectProps: {\n    showSearch: true\n  } //after deletion\n  // renderField: (props) => <FieldCascader {...props} />,\n  // renderOperator: (props) => <FieldDropdown {...props} />,\n  // renderFunc: (props) => <FieldSelect {...props} />,\n\n};\nconst funcs = { ...BasicFuncs\n}; // delete funcs.valueSourcesInfo.field\n\nconst config = { ...InitialConfig,\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  funcs,\n  fields: {}\n};\n\nclass FilterQueryBuilder extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.render = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Query, Object.assign({}, this.props.config || this.state.config, {\n      value: this.props.tree || this.state.tree,\n      onChange: this.props.onChange,\n      renderBuilder: this.renderBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    })), this.props.slideResult && this.props.slideResult.length > 0 ? /*#__PURE__*/React.createElement(AddFilteredPatient, {\n      slideList: this.props.slideList,\n      slideResult: this.props.slideResult,\n      controlMap: this.props.controlMap,\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }) : \"\");\n\n    this.renderBuilder = props => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-builder-container\",\n      style: {\n        padding: \"25px\",\n        width: \"1000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-builder qb-lite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Builder, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }))));\n\n    this.state = {\n      config: { ...config,\n        fields: this.props.fields\n      }\n    };\n  } // onChange = (immutableTree, config) => {\n  //   this.setState({ tree: immutableTree, config: config });\n  //   const jsonTree = QbUtils.getTree(immutableTree);\n  //   console.log(jsonTree);\n  // };\n\n\n}\n\nexport default injectIntl(FilterQueryBuilder);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/FilterQueryBuilder.jsx"],"names":["React","Component","merge","Query","Builder","BasicConfig","BasicFuncs","Utils","QbUtils","injectIntl","AddFilteredPatient","InitialConfig","conjunctions","AND","OR","operators1","operators","proximity","between","textSeparators","widgets","date","dateFormat","valueFormat","types","boolean","widgetProps","hideOperator","operatorInlineLabel","localeSettings","locale","moment","valueLabel","valuePlaceholder","operatorLabel","fieldPlaceholder","operatorPlaceholder","deleteLabel","addGroupLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","notLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","title","okText","okType","removeGroupConfirmOptions","settings1","settings","field","valueSourcesInfo","value","label","widget","func","maxNesting","canLeaveEmptyGroup","shouldCreateEmptyGroup","showErrorMessage","customFieldSelectProps","showSearch","funcs","config","fields","FilterQueryBuilder","constructor","props","render","state","tree","onChange","renderBuilder","slideResult","length","slideList","controlMap","dataState","dataStateChange","padding","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport merge from \"lodash/merge\";\r\nimport {\r\n  Query,\r\n  Builder,\r\n  BasicConfig,BasicFuncs,\r\n  Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\nimport \"react-awesome-query-builder/lib/css/styles.css\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport AddFilteredPatient from \"../pages/contactmaster/AddFilteredPatient\";\r\n\r\n const InitialConfig = BasicConfig;\r\n\r\nconst conjunctions = {\r\n  AND: InitialConfig.conjunctions.AND,\r\n  OR: InitialConfig.conjunctions.OR,\r\n};\r\nconst operators1=  {...InitialConfig.operators\r\n}\r\ndelete operators1.proximity\r\nconst operators = {\r\n  ...operators1,\r\n  between: {\r\n    ...operators1.between,\r\n    textSeparators: [\r\n      \"from\",\r\n      \"to\"\r\n    ],\r\n  }\r\n};\r\n\r\n\r\nconst widgets = {\r\n  ...InitialConfig.widgets,\r\n  date: {\r\n    ...InitialConfig.widgets.date,\r\n    dateFormat: \"DD.MM.YYYY\",\r\n    valueFormat: \"YYYY-MM-DD\",\r\n  }\r\n};\r\n\r\n\r\nconst types = {\r\n  ...InitialConfig.types,\r\n  boolean: merge(InitialConfig.types.boolean, {\r\n    widgets: {\r\n      boolean: {\r\n        widgetProps: {\r\n          hideOperator: true,\r\n          operatorInlineLabel: \"is\",\r\n        }\r\n      },\r\n    },\r\n  }),\r\n};\r\n\r\n\r\nconst localeSettings = {\r\n  locale: {\r\n    moment: \"ru\"\r\n    \r\n  },\r\n  valueLabel: \"Value\",\r\n  valuePlaceholder: \"Value\",\r\n  operatorLabel: \"Operator\",\r\n  fieldPlaceholder: \"Select field\",\r\n  operatorPlaceholder: \"Select operator\",\r\n  deleteLabel: null,\r\n  addGroupLabel: \"Add group\",\r\n  addRuleLabel: \"Add rule\",\r\n  addSubRuleLabel: \"Add sub rule\",\r\n  delGroupLabel: null,\r\n  notLabel: \"Not\",\r\n  valueSourcesPopupTitle: \"Select value source\",\r\n  removeRuleConfirmOptions: {\r\n    title: \"Are you sure delete this rule?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n  removeGroupConfirmOptions: {\r\n    title: \"Are you sure delete this group?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n};\r\nconst settings1={...InitialConfig.settings}\r\ndelete settings1.field\r\nconst settings = {\r\n  ...settings1,\r\n  ...localeSettings,\r\n\r\n  valueSourcesInfo: {\r\n    value: {\r\n      label: \"Value\"\r\n   }\r\n    ,\r\n    field: {\r\n      label: \"Field\",\r\n      widget: \"field\",\r\n    },\r\n    func: {\r\n      label: \"Function\",\r\n      widget: \"func\",\r\n    }\r\n  },\r\n  // canReorder: false,\r\n  // canRegroup: false,\r\n  // showNot: false,\r\n  // showLabels: true,\r\n  maxNesting: 5,\r\n  canLeaveEmptyGroup: true,\r\n  shouldCreateEmptyGroup: false,\r\n  showErrorMessage: true,\r\n  customFieldSelectProps: {\r\n    showSearch: true\r\n  }, //after deletion\r\n    \r\n  // renderField: (props) => <FieldCascader {...props} />,\r\n  // renderOperator: (props) => <FieldDropdown {...props} />,\r\n  // renderFunc: (props) => <FieldSelect {...props} />,\r\n};\r\n\r\nconst funcs = {...BasicFuncs\r\n};\r\n// delete funcs.valueSourcesInfo.field\r\nconst config = {\r\n   ...InitialConfig, conjunctions,\r\n   operators,\r\n   widgets,\r\n   types,\r\n   settings,\r\n   funcs,\r\n   fields:{}\r\n\r\n};\r\nclass FilterQueryBuilder extends Component {\r\n  constructor(props) {\r\n    \r\n     super(props);\r\n    this.state = {\r\n      config: {...config,fields:this.props.fields\r\n      }\r\n        }\r\n  }\r\n  \r\n\r\n  render = () => (\r\n\r\n    <div>\r\n      <Query\r\n        {...(this.props.config||this.state.config)}\r\n        value={this.props.tree||this.state.tree}\r\n        onChange={this.props.onChange}\r\n         renderBuilder={this.renderBuilder}\r\n\r\n      />\r\n    {this.props.slideResult && this.props.slideResult.length>0?\r\n      <AddFilteredPatient\r\n                slideList={this.props.slideList}\r\n                slideResult={this.props.slideResult}\r\n                controlMap={this.props.controlMap}\r\n                dataState={this.props.dataState}\r\n                dataStateChange={this.props.dataStateChange}\r\n              />\r\n    :\"\"}\r\n    </div>\r\n    \r\n  );\r\n\r\n  renderBuilder = (props) => (\r\n    <div className=\"query-builder-container\" style={{ padding: \"25px\",width:\"1000px\" }}>\r\n      <div className=\"query-builder qb-lite\">\r\n        <Builder {...props} \r\n         />\r\n      </div>\r\n    </div>\r\n  );\r\n  // onChange = (immutableTree, config) => {\r\n  //   this.setState({ tree: immutableTree, config: config });\r\n\r\n  //   const jsonTree = QbUtils.getTree(immutableTree);\r\n  //   console.log(jsonTree);\r\n  // };\r\n}\r\nexport default injectIntl(FilterQueryBuilder);\r\n"]},"metadata":{},"sourceType":"module"}