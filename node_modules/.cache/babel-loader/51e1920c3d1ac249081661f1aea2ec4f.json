{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { TREELIST_ROW_INDEX_ATTRIBUTE } from '../constants';\n/**\n * The default row component of the TreeList.\n */\n\nexport var TreeListRow = React.forwardRef(function (props, ref) {\n  var _a;\n\n  var isSelected = props.isSelected,\n      rowHeight = props.rowHeight,\n      isAltRow = props.isAltRow,\n      expanded = props.expanded,\n      ariaRowIndex = props.ariaRowIndex,\n      level = props.level,\n      ariaSetSize = props.ariaSetSize,\n      ariaPosInSet = props.ariaPosInSet;\n  var className = classNames('k-master-row', {\n    'k-selected': isSelected,\n    'k-alt': isAltRow\n  });\n  var style = React.useMemo(function () {\n    return rowHeight !== undefined ? {\n      height: rowHeight + 'px'\n    } : undefined;\n  }, [rowHeight]);\n  var defaultRendering = React.createElement(\"tr\", __assign({\n    onClick: props.onClick,\n    onDoubleClick: props.onDoubleClick,\n    onContextMenu: props.onContextMenu,\n    className: className,\n    style: style,\n    ref: ref,\n    \"aria-expanded\": expanded,\n    role: 'row',\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-level\": level.length,\n    \"aria-posinset\": ariaPosInSet,\n    \"aria-setsize\": ariaSetSize\n  }, (_a = {}, _a[TREELIST_ROW_INDEX_ATTRIBUTE] = props.rowIndex, _a)), props.children);\n  return React.createElement(React.Fragment, null, props.render ? props.render.call(undefined, defaultRendering, props) : defaultRendering);\n});","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/@progress/kendo-react-treelist/dist/es/rows/TreeListRow.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","classNames","TREELIST_ROW_INDEX_ATTRIBUTE","TreeListRow","forwardRef","props","ref","_a","isSelected","rowHeight","isAltRow","expanded","ariaRowIndex","level","ariaSetSize","ariaPosInSet","className","style","useMemo","undefined","height","defaultRendering","createElement","onClick","onDoubleClick","onContextMenu","role","rowIndex","children","Fragment","render"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { TREELIST_ROW_INDEX_ATTRIBUTE } from '../constants';\n/**\n * The default row component of the TreeList.\n */\nexport var TreeListRow = React.forwardRef(function (props, ref) {\n    var _a;\n    var isSelected = props.isSelected, rowHeight = props.rowHeight, isAltRow = props.isAltRow, expanded = props.expanded, ariaRowIndex = props.ariaRowIndex, level = props.level, ariaSetSize = props.ariaSetSize, ariaPosInSet = props.ariaPosInSet;\n    var className = classNames('k-master-row', {\n        'k-selected': isSelected,\n        'k-alt': isAltRow\n    });\n    var style = React.useMemo(function () { return rowHeight !== undefined ? { height: rowHeight + 'px' } : undefined; }, [rowHeight]);\n    var defaultRendering = (React.createElement(\"tr\", __assign({ onClick: props.onClick, onDoubleClick: props.onDoubleClick, onContextMenu: props.onContextMenu, className: className, style: style, ref: ref, \"aria-expanded\": expanded, role: 'row', \"aria-rowindex\": ariaRowIndex, \"aria-level\": level.length, \"aria-posinset\": ariaPosInSet, \"aria-setsize\": ariaSetSize }, (_a = {}, _a[TREELIST_ROW_INDEX_ATTRIBUTE] = props.rowIndex, _a)), props.children));\n    return (React.createElement(React.Fragment, null, props.render ?\n        props.render.call(undefined, defaultRendering, props) :\n        defaultRendering));\n});\n"]},"metadata":{},"sourceType":"module"}