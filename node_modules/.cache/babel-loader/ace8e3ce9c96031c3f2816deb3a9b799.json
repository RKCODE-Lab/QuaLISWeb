{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\slide-out-modal\\\\SlideOutModal.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Button, Card, Form, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ModalInner } from '../../components/App.styles';\nimport { transactionStatus } from '../Enumeration';\nimport { faCalculator, faToolbox, faTools } from '@fortawesome/free-solid-svg-icons';\nimport AlertModal from '../../pages/dynamicpreregdesign/AlertModal';\n\nclass SlideOutModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.state = {\n      masterStatus: \"\",\n      failedControls: []\n    };\n\n    this.handleSaveClick = saveType => {\n      const failedControls = [];\n      const startLabel = [];\n      let label = \"IDS_ENTER\";\n      let mandatoryFields = this.props.mandatoryFields || [];\n\n      if (this.props.esign) {\n        mandatoryFields = [{\n          \"idsName\": \"IDS_PASSWORD\",\n          \"dataField\": \"esignpassword\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_REASON\",\n          \"dataField\": \"esignreason\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_COMMENTS\",\n          \"dataField\": \"esigncomments\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        } // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\n        ];\n      }\n\n      mandatoryFields.forEach(item => {\n        if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\n          const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n            id: item.idsName\n          }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n          failedControls.push(alertMessage);\n          startLabel.push(item.mandatoryLabel); //\"IDS_PROVIDE\";\n        } else {\n          if (item.validateFunction) {\n            const validateData = item.validateFunction;\n\n            if (this.props.selectedRecord[item.dataField].trim().length === 0) {\n              const alertMessage = this.props.intl.formatMessage({\n                id: item.idsName\n              }); //const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\n\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel);\n            } else if (validateData(this.props.selectedRecord[item.dataField]) === false) {\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                id: item.idsName\n              }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel);\n            }\n          } else {\n            if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\n              //to validate object empty value \n              if (item.ismultilingual == \"true\") {\n                let dataArray = 0;\n                Object.values(this.props.selectedRecord[item.dataField]).map(lang => {\n                  if (lang.length === 0) {\n                    dataArray++;\n                  }\n                });\n\n                if (dataArray > 0) {\n                  const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                    id: item.idsName\n                  }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                  failedControls.push(alertMessage);\n                  startLabel.push(item.mandatoryLabel); //\"I\n                }\n              } else {\n                //to validate FormSelectSearch, date component\n                if (this.props.selectedRecord[item.dataField] && this.props.selectedRecord[item.dataField].length === 0) {\n                  const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                    id: item.idsName\n                  }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                  failedControls.push(alertMessage);\n                  startLabel.push(item.mandatoryLabel); //\"IDS_SELECT\";\n                }\n              }\n            } else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\n              //to handle string field -- added trim function\n              if (this.props.selectedRecord[item.dataField].trim().length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            } else {\n              //number field\n              if (this.props.selectedRecord[item.dataField].length === 0 //|| this.props.selectedRecord[item.dataField] === 0\n              ) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            }\n          }\n        } // else{\n        //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\n        //     failedControls.push(alertMessage);\n        // }\n\n      }); // console.log(\"validationPassed:\", failedControls);\n\n      if (failedControls.length === 0) {\n        if (saveType === 4) {\n          this.props.onExecuteClick(this.formRef);\n        } else if (saveType === 3) {\n          if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_CHECKAGREE\"\n            }));\n          } else {\n            this.props.validateEsign();\n          }\n        } else {\n          this.props.onSaveClick(saveType, this.formRef);\n        }\n      } else {\n        //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\n        label = startLabel[0] === undefined ? label : startLabel[0];\n        toast.info(`${this.props.intl.formatMessage({\n          id: label\n        })} ${failedControls[0]}`);\n      }\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    let masterStatus = this.props.masterStatus;\n\n    if (masterStatus !== \"\" && masterStatus !== undefined) {\n      toast.warn(masterStatus);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterStatus: \"\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n      masterStatus = \"\";\n    }\n\n    if (this.props.innerPopup !== this.state.innerTop) {\n      setTimeout(() => {\n        let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\n\n        if (this.myRef && this.myRef.current) {\n          this.myRef.current.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n\n        if (scrollDoc) {\n          scrollDoc.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n      this.setState({\n        innerTop: this.props.innerPopup\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    let saveType = 1;\n\n    if (this.props.ignoreFormValidation) {\n      saveType = 5;\n    }\n\n    let buttonLabel = \"Save\";\n    let idsLabel = \"IDS_SAVE\";\n\n    if (this.props.buttonLabel) {\n      buttonLabel = this.props.buttonLabel;\n      idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      size: this.props.size || \"lg\",\n      backdrop: \"static\",\n      className: this.props.className || \"\",\n      show: this.props.show,\n      onHide: this.props.closeModal,\n      enforceFocus: false,\n      dialogClassName: \"modal-dialog-slideout freakerstop\",\n      \"aria-labelledby\": \"add-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"add-user\",\n      className: \"header-primary flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, this.props.graphView === true ? \"\" : this.props.inputParam ? this.props.esign === true ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGN\",\n      defaultMessage: \"Esign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }) : this.props.loginoperation ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.operation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.operation && \"IDS_\".concat(this.props.operation.toUpperCase()),\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 49\n      }\n    }), \" \", this.props.screenName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 57\n      }\n    }) : \"\") : this.props.screenName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 49\n      }\n    }) : \"\") : \"\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-cancel\",\n      variant: \"\",\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.closeLabel || \"IDS_CANCEL\",\n      defaultMessage: this.props.closeLabel || 'Cancel',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    })), this.props.esign === true ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBMIT\",\n      defaultMessage: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    })) : (this.props.operation === \"create\" || this.props.operation === \"update\" || this.props.operation === \"preview\") && this.props.showValidate && this.props.showQueryTool ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.props.queryGenrate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faToolbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_QUERYTOOL\",\n      defaultMessage: \"Query Tool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VALIDATE\",\n      defaultMessage: \"Validate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }))) : this.props.showValidate ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VALIDATE\",\n      defaultMessage: \"Validate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    })) : this.props.showCalculate ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(saveType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CALCULATE\",\n      defaultMessage: \"Calculate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    })) : this.props.showParam === true && this.props.showExecute ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalculator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXECUTE\",\n      defaultMessage: \"Execute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 45\n      }\n    })) : this.props.noSave || this.props.graphView ? this.props.operation === \"view\" ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-user btn-primary-blue\",\n      role: \"button\",\n      onClick: this.props.resetView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RESET\",\n      defaultMessage: \"Reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 53\n      }\n    })) : this.props.hideSave ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \" btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(saveType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: idsLabel,\n      defaultMessage: buttonLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    })), this.props.operation === \"create\" && this.props.showSaveContinue ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVECONTINUE\",\n      defaultMessage: \"Save & Continue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    })) : \"\", (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVE\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    })) : \"\", this.props.showSubmit === true ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBMIT\",\n      defaultMessage: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    })) : \"\", this.props.showSaveAs === true ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(7),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVEFILTER\",\n      defaultMessage: \"Save Filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    })) : \"\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"popup-fixed-center-headed-full-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalInner, {\n      ref: this.myRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    }, this.props.addComponent))))));\n  } // showComponent =()=>{\n  //     {this.props.addComponent}\n  // }\n\n\n}\n\nexport default injectIntl(SlideOutModal);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/slide-out-modal/SlideOutModal.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Card","Form","Modal","FontAwesomeIcon","faSave","toast","DEFAULT_RETURN","ModalInner","transactionStatus","faCalculator","faToolbox","faTools","AlertModal","SlideOutModal","Component","constructor","props","formRef","createRef","state","masterStatus","failedControls","handleSaveClick","saveType","startLabel","label","mandatoryFields","esign","forEach","item","selectedRecord","dataField","undefined","alertMessage","alertPreFix","intl","formatMessage","id","idsName","alertSuffix","push","mandatoryLabel","validateFunction","validateData","trim","length","ismultilingual","dataArray","Object","values","map","lang","onExecuteClick","agree","NO","info","validateEsign","onSaveClick","myRef","componentDidUpdate","warn","updateInfo","typeName","data","updateStore","innerPopup","innerTop","setTimeout","scrollDoc","modalEvent","document","getElementById","current","scrollIntoView","behavior","setState","render","ignoreFormValidation","buttonLabel","idsLabel","concat","toUpperCase","size","className","show","closeModal","graphView","inputParam","loginoperation","screenName","operation","closeLabel","showValidate","showQueryTool","queryGenrate","showCalculate","showParam","showExecute","noSave","resetView","hideSave","showSaveContinue","showSave","showSubmit","showSaveAs","addComponent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Card, Form, Modal } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ModalInner } from '../../components/App.styles';\r\nimport { transactionStatus } from '../Enumeration';\r\nimport { faCalculator, faToolbox, faTools } from '@fortawesome/free-solid-svg-icons';\r\nimport AlertModal from '../../pages/dynamicpreregdesign/AlertModal';\r\n\r\nclass SlideOutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n    }\r\n    formRef = React.createRef();\r\n    state = { masterStatus: \"\", failedControls: [] }\r\n\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = this.props.mandatoryFields || [];\r\n        if (this.props.esign) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                 { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                 { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },                \r\n                // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\r\n           \r\n                ]\r\n        }\r\n        mandatoryFields.forEach(item => {\r\n            if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (this.props.selectedRecord[item.dataField].trim().length === 0) {\r\n                        const alertMessage = this.props.intl.formatMessage({ id: item.idsName });\r\n                        //const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                    else if (validateData(this.props.selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate object empty value \r\n                        if (item.ismultilingual == \"true\") {\r\n                            let dataArray = 0;\r\n                            Object.values(this.props.selectedRecord[item.dataField])\r\n                                .map(lang => {\r\n                                    if (lang.length === 0) {\r\n                                        dataArray++\r\n                                    }\r\n                                }\r\n                                )\r\n                            if (dataArray > 0) {\r\n                                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                                failedControls.push(alertMessage);\r\n                                startLabel.push(item.mandatoryLabel)//\"I\r\n                            }\r\n                        } else {\r\n                            //to validate FormSelectSearch, date component\r\n\r\n                            if (this.props.selectedRecord[item.dataField] && this.props.selectedRecord[item.dataField].length === 0) {\r\n                                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                                failedControls.push(alertMessage);\r\n                                startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (this.props.selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (this.props.selectedRecord[item.dataField].length === 0 //|| this.props.selectedRecord[item.dataField] === 0\r\n                        ) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // else{\r\n            //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\r\n            //     failedControls.push(alertMessage);\r\n            // }\r\n        });\r\n        // console.log(\"validationPassed:\", failedControls);\r\n\r\n        if (failedControls.length === 0) {\r\n            if (saveType === 4) {\r\n                this.props.onExecuteClick(this.formRef);\r\n            }\r\n            else if (saveType === 3) {\r\n                if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\r\n\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CHECKAGREE\" }));\r\n\r\n                } else {\r\n\r\n                    this.props.validateEsign();\r\n                }\r\n            }\r\n            else {\r\n                this.props.onSaveClick(saveType, this.formRef);\r\n            }\r\n        }\r\n        else {\r\n            //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\r\n            label = startLabel[0] === undefined ? label : startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let masterStatus = this.props.masterStatus;\r\n        if (masterStatus !== \"\" && masterStatus !== undefined) {\r\n            toast.warn(masterStatus);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterStatus: \"\" }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            masterStatus = \"\";\r\n        }\r\n        if (this.props.innerPopup !== this.state.innerTop) {\r\n            setTimeout(() => {\r\n                let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\r\n                if (this.myRef && this.myRef.current) {\r\n                    this.myRef.current.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n                if (scrollDoc) {\r\n                    scrollDoc.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            }, 100)\r\n            this.setState({\r\n                innerTop: this.props.innerPopup\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let saveType = 1;\r\n        if (this.props.ignoreFormValidation) {\r\n            saveType = 5;\r\n        }\r\n        let buttonLabel = \"Save\";\r\n        let idsLabel = \"IDS_SAVE\";\r\n        if (this.props.buttonLabel) {\r\n            buttonLabel = this.props.buttonLabel;\r\n            idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\r\n        }\r\n        return (\r\n            <Modal\r\n                size={this.props.size || \"lg\"}\r\n                backdrop=\"static\"\r\n                className={this.props.className || \"\"}\r\n                show={this.props.show}\r\n                onHide={this.props.closeModal}\r\n                enforceFocus={false}\r\n                dialogClassName=\"modal-dialog-slideout freakerstop\"\r\n                aria-labelledby=\"add-user\">\r\n                <Modal.Header className=\"d-flex align-items-center\">\r\n                    <Modal.Title id=\"add-user\" className=\"header-primary flex-grow-1\">\r\n                        {this.props.graphView === true ? \"\" : this.props.inputParam ?\r\n                            this.props.esign === true ?\r\n                                <FormattedMessage id={\"IDS_ESIGN\"} defaultMessage=\"Esign\" />\r\n                                : this.props.loginoperation ?\r\n                                    <FormattedMessage id={this.props.screenName} />\r\n                                    : <>\r\n                                        {this.props.operation ?\r\n                                            <>\r\n                                                <FormattedMessage id={this.props.operation && \"IDS_\".concat(this.props.operation.toUpperCase())}\r\n                                                    defaultMessage='Add' />\r\n                                                {\" \"}\r\n                                                {\r\n                                                    this.props.screenName ?\r\n                                                        <FormattedMessage id={this.props.screenName} />\r\n                                                        : \"\"\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            this.props.screenName ?\r\n                                                <FormattedMessage id={this.props.screenName} />\r\n                                                : \"\"}\r\n                                    </>\r\n                            : \"\"}\r\n                    </Modal.Title>\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.props.closeModal}>\r\n                        <FormattedMessage id={this.props.closeLabel || \"IDS_CANCEL\"} defaultMessage={this.props.closeLabel || 'Cancel'} />\r\n                    </Button>\r\n                    {this.props.esign === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(3)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        :\r\n                        (this.props.operation === \"create\" || this.props.operation === \"update\"\r\n                            || this.props.operation === \"preview\") && (this.props.showValidate && this.props.showQueryTool) ?\r\n                            <>\r\n                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.props.queryGenrate()}>\r\n                                    <FontAwesomeIcon icon={faToolbox} /> { }\r\n                                    <FormattedMessage id='IDS_QUERYTOOL' defaultMessage='Query Tool' />\r\n                                </Button>\r\n                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                    <FontAwesomeIcon icon={faSave} /> { }\r\n                                    <FormattedMessage id='IDS_VALIDATE' defaultMessage='Validate' />\r\n                                </Button>\r\n                            </>\r\n                            : this.props.showValidate ? <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_VALIDATE' defaultMessage='Validate' />\r\n                            </Button> :\r\n                                this.props.showCalculate ?\r\n                                    <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                        <FontAwesomeIcon icon={faSave} /> { }\r\n                                        <FormattedMessage id='IDS_CALCULATE' defaultMessage='Calculate' />\r\n                                    </Button> :\r\n                                    this.props.showParam === true && this.props.showExecute ?\r\n                                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                            <FontAwesomeIcon icon={faCalculator} /> { }\r\n                                            <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                        </Button> :\r\n                                        this.props.noSave || this.props.graphView ?\r\n                                            this.props.operation === \"view\" ? \"\"\r\n                                                : <Button className=\"btn btn-user btn-primary-blue\" role=\"button\"\r\n                                                    onClick={this.props.resetView}\r\n                                                >\r\n                                                    <FormattedMessage id={\"IDS_RESET\"} defaultMessage='Reset' />\r\n                                                </Button>\r\n                                            : this.props.hideSave ? \"\" :\r\n                                                <Button className=\" btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                                    <FontAwesomeIcon icon={faSave} /> { }\r\n                                                    <FormattedMessage id={idsLabel} defaultMessage={buttonLabel} />\r\n                                                </Button>\r\n                    }\r\n                    {this.props.operation === \"create\" && this.props.showSaveContinue ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(2)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVECONTINUE' defaultMessage='Save & Continue' />\r\n                        </Button>\r\n                        : \"\"\r\n                    }\r\n                    {(this.props.operation === \"create\" || this.props.operation === \"update\")\r\n                        && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVE' defaultMessage='Save' />\r\n                        </Button>\r\n                        : \"\"}\r\n                    {this.props.showSubmit === true ?\r\n\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        : \"\"}\r\n                         { this.props.showSaveAs === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(7)}>\r\n                           \r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVEFILTER' defaultMessage='Save Filter' />\r\n                        </Button>\r\n                        : \"\"}\r\n                </Modal.Header>\r\n                <Modal.Body className='popup-fixed-center-headed-full-width'>\r\n                    <ModalInner ref={this.myRef}>\r\n                        <Card.Body>\r\n                            <React.Fragment>\r\n                                <Form ref={this.formRef}>\r\n                                    {this.props.addComponent}\r\n                                    {/* {this.props.addComponent({...this.props.addComponentParam, failedControls:this.state.failedControls})} */}\r\n                                </Form>\r\n                            </React.Fragment>\r\n                        </Card.Body>\r\n                    </ModalInner>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // showComponent =()=>{\r\n    //     {this.props.addComponent}\r\n    // }\r\n}\r\n\r\nexport default injectIntl(SlideOutModal);"]},"metadata":{},"sourceType":"module"}