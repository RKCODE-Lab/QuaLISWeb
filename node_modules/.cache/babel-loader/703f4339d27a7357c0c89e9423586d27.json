{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus,attachmentType}from'../../components/Enumeration';import DropZone from'../../components/dropzone/dropzone.component';var AddUser=function AddUser(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sloginid\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_LOGINID\"}),placeholder:props.intl.formatMessage({id:\"IDS_LOGINID\"}),value:props.selectedRecord[\"sloginid\"],isMandatory:true,required:true,maxLength:20,readOnly:props.userLogged,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sfirstname\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_FIRSTNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_FIRSTNAME\"}),value:props.selectedRecord[\"sfirstname\"],isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"slastname\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_LASTNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_LASTNAME\"}),value:props.selectedRecord[\"slastname\"],isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sempid\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_EMPID\"}),placeholder:props.intl.formatMessage({id:\"IDS_EMPID\"}),value:props.selectedRecord[\"sempid\"],isMandatory:false,required:true,maxLength:20,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(DateTimePicker,{name:\"ddateofjoin\",label:props.intl.formatMessage({id:\"IDS_DATEOFJOIN\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"ddateofjoin\"]||\"\"// dateFormat={\"dd/MM/yyyy\"}\n,dateFormat:props.userInfo.ssitedate,isClearable:true,onChange:function onChange(date){return props.handleDateChange(\"ddateofjoin\",date);},value:props.selectedRecord[\"ddateofjoin\"]}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndesignationcode\",formLabel:props.intl.formatMessage({id:\"IDS_DESIGNATION\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.designationList// optionId=\"ndesignationcode\"\n// optionValue=\"sdesignationname\"\n,value:props.selectedRecord[\"ndesignationcode\"]// defaultValue={props.selectedRecord[\"ndesignationcode\"]}\n,isMandatory:false,isClearable:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true//alphabeticalSort={false}\n,onChange:function onChange(event){return props.onComboChange(event,'ndesignationcode');}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndeptcode\",formLabel:props.intl.formatMessage({id:\"IDS_DEPARTMENT\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.departmentList// optionId=\"ndeptcode\"\n// optionValue=\"sdeptname\"                            \n,value:props.selectedRecord[\"ndeptcode\"]// defaultValue = { props.selectedRecord[\"ndeptcode\"]}\n,isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true//alphabeticalSort={true}                    \n,onChange:function onChange(event){return props.onComboChange(event,'ndeptcode');}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"saddress1\",label:props.intl.formatMessage({id:\"IDS_ADDRESS1\"}),placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS1\"}),value:props.selectedRecord[\"saddress1\"],rows:\"2\",isMandatory:true,required:true,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"saddress2\",label:props.intl.formatMessage({id:\"IDS_ADDRESS2\"}),placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS2\"}),value:props.selectedRecord[\"saddress2\"],rows:\"2\",isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"saddress3\",label:props.intl.formatMessage({id:\"IDS_ADDRESS3\"}),placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS3\"}),value:props.selectedRecord[\"saddress3\"],rows:\"2\",isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"squalification\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_QUALIFICATION\"}),placeholder:props.intl.formatMessage({id:\"IDS_QUALIFICATION\"}),value:props.selectedRecord[\"squalification\"],isMandatory:false,required:false,maxLength:10,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sbloodgroup\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_BLOODGROUP\"}),placeholder:props.intl.formatMessage({id:\"IDS_BLOODGROUP\"}),value:props.selectedRecord[\"sbloodgroup\"],isMandatory:false,required:false,maxLength:10,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sjobdescription\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_JOBDESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_JOBDESCRIPTION\"}),value:props.selectedRecord[\"sjobdescription\"],isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"semail\",type:\"email\",ref:props.emailRef,label:props.intl.formatMessage({id:\"IDS_EMAIL\"}),placeholder:props.intl.formatMessage({id:\"IDS_EMAIL\"}),value:props.selectedRecord[\"semail\"],isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}//onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \n}),/*#__PURE__*/React.createElement(FormInput,{name:\"sphoneno\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_PHONENO\"}),placeholder:props.intl.formatMessage({id:\"IDS_PHONENO\"}),value:props.selectedRecord[\"sphoneno\"],isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"smobileno\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_MOBILENO\"}),placeholder:props.intl.formatMessage({id:\"IDS_MOBILENO\"}),value:props.selectedRecord[\"smobileno\"],isMandatory:false,required:false,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncountrycode\",formLabel:props.intl.formatMessage({id:\"IDS_COUNTRY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.countryList//   optionId='ncountrycode'\n//   optionValue='scountryname'\n,value:props.selectedRecord[\"ncountrycode\"]// defaultValue = { props.selectedRecord[\"ncountrycode\"]}\n,isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true//alphabeticalSort={true}\n,onChange:function onChange(event){return props.onComboChange(event,'ncountrycode');}}),props.operation===\"create\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"usersite\",formLabel:props.intl.formatMessage({id:\"IDS_SITE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.siteList//  optionId=\"nsitecode\"\n//  optionValue=\"ssitename\"\n,value:props.selectedRecord[\"usersite\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true//alphabeticalSort={true}\n,onChange:function onChange(event){return props.onComboChange(event,'usersite');}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nuserrolecode\",formLabel:props.intl.formatMessage({id:\"IDS_USERROLE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.roleList// optionId=\"nuserrolecode\"\n// optionValue=\"suserrolename\"\n,value:props.selectedRecord[\"nuserrolecode\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true//alphabeticalSort={true}\n,onChange:function onChange(event){return props.onComboChange(event,'nuserrolecode');}})):\" \")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),placeholder:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),defaultValue:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,isMandatory:false,required:false//   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nlockmode\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_LOCKMODE\"}),placeholder:props.intl.formatMessage({id:\"IDS_LOCKMODE\"}),defaultValue:props.selectedRecord[\"nlockmode\"]===transactionStatus.UNLOCK?true:false,isMandatory:false,required:false//    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n,checked:props.selectedRecord[\"nlockmode\"]===transactionStatus.UNLOCK?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}}))))),/*#__PURE__*/React.createElement(Row,null,Object.keys(props.selectedRecord).length>0&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DropZone,{name:\"ssignimgname\",label:props.intl.formatMessage({id:\"IDS_SSIGNIMGNAME\"}),maxFiles:1,accept:\"image/*\",minSize:0,maxSize:1,onDrop:function onDrop(event){return props.onDropImage(event,\"ssignimgname\",1);},multiple:false,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.operation===\"update\"?attachmentType.OTHERS:\"\",fileName:\"ssignimgname\",deleteAttachment:props.deleteUserFile//deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\n//deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\n,actionType:props.actionType})),Object.keys(props.selectedRecord).length>0&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DropZone,{name:\"suserimgname\",label:props.intl.formatMessage({id:\"IDS_SUSERIMGNAME\"}),maxFiles:1,accept:\"image/*\",minSize:0,maxSize:1,onDrop:function onDrop(event){return props.onDropImage(event,\"suserimgname\",1);},multiple:false,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.operation===\"update\"?attachmentType.OTHERS:\"\",fileName:\"suserimgname\",deleteAttachment:props.deleteUserFile//deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\n//deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\n,actionType:props.actionType}))));};export default injectIntl(AddUser);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/AddUser.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","DateTimePicker","transactionStatus","attachmentType","DropZone","AddUser","props","intl","formatMessage","id","selectedRecord","userLogged","event","onInputOnChange","userInfo","ssitedate","date","handleDateChange","designationList","onComboChange","departmentList","emailRef","countryList","operation","siteList","roleList","ACTIVE","UNLOCK","Object","keys","length","onDropImage","OTHERS","deleteUserFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\n\r\nconst AddUser = (props) => {\r\n     return (<>\r\n          <Row>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"sloginid\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                                   value={props.selectedRecord[\"sloginid\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   readOnly={props.userLogged}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   value={props.selectedRecord[\"sfirstname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   value={props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sempid\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EMPID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EMPID\" })}\r\n                                   value={props.selectedRecord[\"sempid\"]}\r\n                                   isMandatory={false}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}>                      */}\r\n\r\n                              <DateTimePicker\r\n                                   name={\"ddateofjoin\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_DATEOFJOIN\" })}\r\n                                   className='form-control'\r\n                                   placeholderText=\"Select date..\"\r\n                                   selected={props.selectedRecord[\"ddateofjoin\"] || \"\"}\r\n                                   // dateFormat={\"dd/MM/yyyy\"}\r\n                                   dateFormat={props.userInfo.ssitedate}\r\n                                   isClearable={true}\r\n                                   onChange={date => props.handleDateChange(\"ddateofjoin\", date)}\r\n                                   value={props.selectedRecord[\"ddateofjoin\"]}\r\n\r\n                              />\r\n\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ndesignationcode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_DESIGNATION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.designationList}\r\n                                   // optionId=\"ndesignationcode\"\r\n                                   // optionValue=\"sdesignationname\"\r\n                                   value={props.selectedRecord[\"ndesignationcode\"]}\r\n                                   // defaultValue={props.selectedRecord[\"ndesignationcode\"]}\r\n                                   isMandatory={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={false}\r\n                                   onChange={(event) => props.onComboChange(event, 'ndesignationcode')}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ndeptcode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_DEPARTMENT\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.departmentList}\r\n                                   // optionId=\"ndeptcode\"\r\n                                   // optionValue=\"sdeptname\"                            \r\n                                   value={props.selectedRecord[\"ndeptcode\"]}\r\n                                   // defaultValue = { props.selectedRecord[\"ndeptcode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}                    \r\n                                   onChange={(event) => props.onComboChange(event, 'ndeptcode')}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress1\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                                   value={props.selectedRecord[\"saddress1\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress2\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                                   value={props.selectedRecord[\"saddress2\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress3\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                                   value={props.selectedRecord[\"saddress3\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n                    </Row>\r\n               </Col>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"squalification\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_QUALIFICATION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_QUALIFICATION\" })}\r\n                                   value={props.selectedRecord[\"squalification\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={10}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sbloodgroup\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_BLOODGROUP\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_BLOODGROUP\" })}\r\n                                   value={props.selectedRecord[\"sbloodgroup\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={10}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sjobdescription\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_JOBDESCRIPTION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_JOBDESCRIPTION\" })}\r\n                                   value={props.selectedRecord[\"sjobdescription\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"semail\"}\r\n                                   type=\"email\"\r\n                                   ref={props.emailRef}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   value={props.selectedRecord[\"semail\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              //onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sphoneno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   value={props.selectedRecord[\"sphoneno\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"smobileno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   value={props.selectedRecord[\"smobileno\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n\r\n                              <FormSelectSearch\r\n                                   name={\"ncountrycode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.countryList}\r\n                                   //   optionId='ncountrycode'\r\n                                   //   optionValue='scountryname'\r\n                                   value={props.selectedRecord[\"ncountrycode\"]}\r\n                                   // defaultValue = { props.selectedRecord[\"ncountrycode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'ncountrycode')}\r\n                              />\r\n                              {/* </Col> */}\r\n                              {props.operation === \"create\" ? <>\r\n                                   {/* <Col md={12}> */}\r\n                                   <FormSelectSearch\r\n                                        name={\"usersite\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.siteList}\r\n                                        //  optionId=\"nsitecode\"\r\n                                        //  optionValue=\"ssitename\"\r\n                                        value={props.selectedRecord[\"usersite\"]}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        //alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, 'usersite')}\r\n                                   />\r\n                                   {/* </Col>\r\n                        <Col md={12}> */}\r\n                                   <FormSelectSearch\r\n                                        name={\"nuserrolecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_USERROLE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.roleList}\r\n                                        // optionId=\"nuserrolecode\"\r\n                                        // optionValue=\"suserrolename\"\r\n                                        value={props.selectedRecord[\"nuserrolecode\"]}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        //alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, 'nuserrolecode')}\r\n                                   />\r\n                                   {/* </Col> */}\r\n                              </>\r\n                                   : \" \"\r\n                              }\r\n                         </Col>\r\n                    </Row>\r\n                    <Row>\r\n                         <Col md={6}>\r\n                              <CustomSwitch\r\n                                   name={\"ntransactionstatus\"}\r\n                                   type=\"switch\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                   defaultValue={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   //   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                                   checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n                         <Col md={6}>\r\n                              <CustomSwitch\r\n                                   name={\"nlockmode\"}\r\n                                   type=\"switch\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LOCKMODE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LOCKMODE\" })}\r\n                                   defaultValue={props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   //    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                                   checked={props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n\r\n                    </Row>\r\n               </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n               {Object.keys(props.selectedRecord).length > 0 &&\r\n                    <Col md={6}>\r\n                         <DropZone\r\n                              name={\"ssignimgname\"}\r\n                              label={props.intl.formatMessage({ id: \"IDS_SSIGNIMGNAME\" })}\r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event) => props.onDropImage(event, \"ssignimgname\", 1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                              attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                              fileName=\"ssignimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col>}\r\n               {Object.keys(props.selectedRecord).length > 0 &&\r\n                    <Col md={6}>\r\n                         <DropZone\r\n                              name={\"suserimgname\"}\r\n                              label={props.intl.formatMessage({ id: \"IDS_SUSERIMGNAME\" })}\r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event) => props.onDropImage(event, \"suserimgname\", 1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                              attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                              fileName=\"suserimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col>}\r\n          </Row></>\r\n     )\r\n}\r\nexport default injectIntl(AddUser);\r\n"]},"metadata":{},"sourceType":"module"}