{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import shortid from\"shortid\";import{ReactComponents}from\"../Enumeration\";import{ROW,COLUMN,COMPONENT,COMPONENTROW}from\"./constants\";// a little function to help us with reordering the result\nexport var reorder=function reorder(list,startIndex,endIndex){var result=Array.from(list);var _result$splice=result.splice(startIndex,1),_result$splice2=_slicedToArray(_result$splice,1),removed=_result$splice2[0];result.splice(endIndex,0,removed);// inserting task in new index\nreturn result;};export var remove=function remove(arr,index){return[].concat(_toConsumableArray(arr.slice(0,index)),_toConsumableArray(arr.slice(index+1)));};export var replacechild=function replacechild(origalarray,replacearray,index){return[].concat(_toConsumableArray(origalarray.slice(0,index)),[replacearray],_toConsumableArray(origalarray.slice(index+1)));};export var insert=function insert(arr,index,newItem){return[].concat(_toConsumableArray(arr.slice(0,index)),[// inserted item\nnewItem],_toConsumableArray(arr.slice(index)));};export var reorderChildren=function reorderChildren(children,splitDropZonePath,splitItemPath){if(splitDropZonePath.length===1){var dropZoneIndex=Number(splitDropZonePath[0]);var itemIndex=Number(splitItemPath[0]);return reorder(children,itemIndex,dropZoneIndex);}var updatedChildren=_toConsumableArray(children);var curIndex=Number(splitDropZonePath.slice(0,1));// Update the specific node's children\nvar splitDropZoneChildrenPath=splitDropZonePath.slice(1);var splitItemChildrenPath=splitItemPath.slice(1);var nodeChildren=updatedChildren[curIndex];updatedChildren[curIndex]=_objectSpread(_objectSpread({},nodeChildren),{},{children:reorderChildren(nodeChildren.children,splitDropZoneChildrenPath,splitItemChildrenPath)});return updatedChildren;};export var removeChildFromChildren=function removeChildFromChildren(children,splitItemPath){if(splitItemPath.length===1){var itemIndex=Number(splitItemPath[0]);return remove(children,itemIndex);}var updatedChildren=_toConsumableArray(children);var curIndex=Number(splitItemPath.slice(0,1));// Update the specific node's children\nvar splitItemChildrenPath=splitItemPath.slice(1);var nodeChildren=updatedChildren[curIndex];// updatedChildren[curIndex] = {\n//   ...nodeChildren,\n//   children: removeChildFromChildren(\n//     nodeChildren.children,\n//     splitItemChildrenPath\n//   )\n// };\nif(nodeChildren.children!==undefined){if(nodeChildren.type===COMPONENTROW&&nodeChildren.children.length===1){var list=removeChildFromChildren(children,splitItemPath.slice(0,1));updatedChildren=_toConsumableArray(list);}else if(nodeChildren.type===COMPONENTROW&&(nodeChildren.children.length===1||nodeChildren.children.length===2)){var _list=removeChildFromChildren(nodeChildren.children,splitItemChildrenPath);var list1=replacechild.apply(void 0,[children].concat(_toConsumableArray(_list),[curIndex]));updatedChildren=_toConsumableArray(list1);}else{updatedChildren[curIndex]=_objectSpread(_objectSpread({},nodeChildren),{},{children:removeChildFromChildren(nodeChildren.children,splitItemChildrenPath)});}}else{// if(nodeChildren.type===COMPONENTROW){\nvar _list2=removeChildFromChildren(children,splitItemPath.slice(0,1));updatedChildren=_toConsumableArray(_list2);// }\n}return updatedChildren;};export var addChildToChildren=function addChildToChildren(children,splitDropZonePath,item){if(splitDropZonePath.length===1){var dropZoneIndex=Number(splitDropZonePath[0]);return insert(children,dropZoneIndex,item);}var updatedChildren=_toConsumableArray(children);var curIndex=Number(splitDropZonePath.slice(0,1));// Update the specific node's children\nvar splitItemChildrenPath=splitDropZonePath.slice(1);var nodeChildren=updatedChildren[curIndex];if(nodeChildren.children!==undefined){updatedChildren[curIndex]=_objectSpread(_objectSpread({},nodeChildren),{},{children:addChildToChildren(nodeChildren.children,splitItemChildrenPath,item)});}else{updatedChildren[curIndex]={type:COMPONENTROW,id:shortid.generate(),children:addChildToChildren([nodeChildren],splitItemChildrenPath,item)};}return updatedChildren;};export var handleMoveWithinParent=function handleMoveWithinParent(layout,splitDropZonePath,splitItemPath){return reorderChildren(layout,splitDropZonePath,splitItemPath);};export var handleAddColumDataToRow=function handleAddColumDataToRow(layout){var layoutCopy=_toConsumableArray(layout);var COLUMN_STRUCTURE={type:COLUMN,id:shortid.generate(),children:[]};return layoutCopy.map(function(row){if(!row.children.length){row.children=[COLUMN_STRUCTURE];}return row;});};export var handleMoveToDifferentParent=function handleMoveToDifferentParent(layout,splitDropZonePath,splitItemPath,item){var newLayoutStructure;var COLUMN_STRUCTURE={type:COLUMN,id:shortid.generate(),children:[_objectSpread({type:COMPONENT,id:shortid.generate()},item)]};var ROW_STRUCTURE={type:ROW,id:shortid.generate()};switch(splitDropZonePath.length){case 1:{// moving column outside into new row made on the fly\nif(item.type===COLUMN){newLayoutStructure=_objectSpread(_objectSpread({},ROW_STRUCTURE),{},{children:[item]});}else{// moving component outside into new row made on the fly\nnewLayoutStructure=_objectSpread(_objectSpread({},ROW_STRUCTURE),{},{children:[COLUMN_STRUCTURE]});}break;}case 2:{// moving component outside into a row which creates column\nif(item.type===COMPONENTROW){newLayoutStructure=COLUMN_STRUCTURE;}else{// moving column into existing row\nnewLayoutStructure=item;}break;}case 3:{// moving component outside into a column which creates componentrow\nif(item.type===COMPONENTROW){newLayoutStructure=_objectSpread(_objectSpread({},item),{},{type:COMPONENT,id:shortid.generate()});}else{// moving column into existing row\nif(item.children===undefined){newLayoutStructure=item;delete newLayoutStructure[\"children\"];}else{newLayoutStructure=_objectSpread(_objectSpread({},item),{},{type:COMPONENTROW});}}break;}default:{newLayoutStructure=item;}}var updatedLayout=layout;updatedLayout=removeChildFromChildren(updatedLayout,splitItemPath);updatedLayout=handleAddColumDataToRow(updatedLayout);updatedLayout=addChildToChildren(updatedLayout,splitDropZonePath,newLayoutStructure);return updatedLayout;};export var handleMoveSidebarComponentIntoParent=function handleMoveSidebarComponentIntoParent(layout,splitDropZonePath,item){var newLayoutStructure;switch(splitDropZonePath.length){case 1:{newLayoutStructure={type:ROW,id:shortid.generate(),children:[{type:COLUMN,id:shortid.generate(),children:[_objectSpread({type:COMPONENT,id:shortid.generate()},item)]}]};break;}case 2:{newLayoutStructure={type:COLUMN,id:shortid.generate(),children:[_objectSpread({type:COMPONENT,id:shortid.generate()},item)]};break;}case 3:{newLayoutStructure=_objectSpread({type:COMPONENT,id:shortid.generate()},item);break;}case 4:{newLayoutStructure=_objectSpread({type:COMPONENT,id:shortid.generate()},item);break;}default:{newLayoutStructure=item;}}return addChildToChildren(layout,splitDropZonePath,newLayoutStructure);};export var handleRemoveItemFromLayout=function handleRemoveItemFromLayout(layout,splitItemPath){return removeChildFromChildren(layout,splitItemPath);};export var getcomponentdata=function getcomponentdata(children,splitItemPath){var itemIndex=Number(splitItemPath[0]);var updatedata=children[itemIndex]!==undefined?children[itemIndex]:children[itemIndex-1]!==undefined?children[itemIndex-1]:{};if(updatedata.children!==undefined){var splitItemChildrenPath=splitItemPath.length>1?splitItemPath.slice(1):splitItemPath;updatedata=getcomponentdata(updatedata.children,splitItemChildrenPath);}else{return updatedata;}return updatedata;};export var replaceChildFromChildren=function replaceChildFromChildren(children,splitItemPath,replacedata){if(splitItemPath.length===1){var itemIndex=Number(splitItemPath[0]);return replacechild(children,replacedata,itemIndex);}else if(splitItemPath.length===2){splitItemPath[2]='0';return replaceChildFromChildren(children,splitItemPath,replacedata);}var updatedChildren=_toConsumableArray(children);var curIndex=Number(splitItemPath.slice(0,1));// Update the specific node's children\nvar splitItemChildrenPath=splitItemPath.slice(1);var nodeChildren=updatedChildren[curIndex];if(nodeChildren.children!==undefined){if(nodeChildren.type===COMPONENTROW){updatedChildren[curIndex]=_objectSpread(_objectSpread({},nodeChildren),{},{children:replaceChildFromChildren(nodeChildren.children,splitItemChildrenPath,replacedata)});}else{updatedChildren[curIndex]=_objectSpread(_objectSpread({},nodeChildren),{},{children:replaceChildFromChildren(nodeChildren.children,splitItemChildrenPath,replacedata)});}}else{var list=replaceChildFromChildren(children,splitItemPath.slice(0,1),replacedata);updatedChildren=_toConsumableArray(list);}return updatedChildren;};export var getValidComponent=function getValidComponent(selectedFieldRecord,components,columnInfo){var validComponents=[];var currentCompChild=[];components.map(function(comp){if(selectedFieldRecord.componentcode===ReactComponents.COMBO){selectedFieldRecord.child&&selectedFieldRecord.child.map(function(myChild){return currentCompChild.push(myChild.label);});if(columnInfo&&columnInfo[comp.nquerybuildertablecode]){if(columnInfo[selectedFieldRecord.nquerybuildertablecode]){if(columnInfo[selectedFieldRecord.nquerybuildertablecode].numericColumns.length){columnInfo[selectedFieldRecord.nquerybuildertablecode].numericColumns.map(function(mycol){if(mycol.foriegntablePK===columnInfo[comp.nquerybuildertablecode].primaryKeyName){if(!currentCompChild.includes(comp.label)){validComponents.push(comp);currentCompChild.push(comp.label);}}});columnInfo[comp.nquerybuildertablecode].numericColumns.map(function(otherCol){if(selectedFieldRecord.valuemember===otherCol.foriegntablePK){if(!currentCompChild.includes(comp.label)){validComponents.push(comp);currentCompChild.push(comp.label);}}});}else{columnInfo[comp.nquerybuildertablecode].numericColumns.map(function(otherCol){if(selectedFieldRecord.valuemember===otherCol.foriegntablePK){if(!currentCompChild.includes(comp.label)){validComponents.push(comp);currentCompChild.push(comp.label);}}});}}}}else if(selectedFieldRecord.componentcode===ReactComponents.CUSTOMSEARCHFILTER){if(comp.inputtype==='radio'){if(selectedFieldRecord.label!==comp.label){validComponents.push(comp);}}}else{if(selectedFieldRecord.label!==comp.label)validComponents.push(comp);}});return validComponents;};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/droparea/helpers.js"],"names":["shortid","ReactComponents","ROW","COLUMN","COMPONENT","COMPONENTROW","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","remove","arr","index","slice","replacechild","origalarray","replacearray","insert","newItem","reorderChildren","children","splitDropZonePath","splitItemPath","length","dropZoneIndex","Number","itemIndex","updatedChildren","curIndex","splitDropZoneChildrenPath","splitItemChildrenPath","nodeChildren","removeChildFromChildren","undefined","type","list1","addChildToChildren","item","id","generate","handleMoveWithinParent","layout","handleAddColumDataToRow","layoutCopy","COLUMN_STRUCTURE","map","row","handleMoveToDifferentParent","newLayoutStructure","ROW_STRUCTURE","updatedLayout","handleMoveSidebarComponentIntoParent","handleRemoveItemFromLayout","getcomponentdata","updatedata","replaceChildFromChildren","replacedata","getValidComponent","selectedFieldRecord","components","columnInfo","validComponents","currentCompChild","comp","componentcode","COMBO","child","myChild","push","label","nquerybuildertablecode","numericColumns","mycol","foriegntablePK","primaryKeyName","includes","otherCol","valuemember","CUSTOMSEARCHFILTER","inputtype"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\r\nimport { ReactComponents } from \"../Enumeration\";\r\nimport { ROW, COLUMN, COMPONENT, COMPONENTROW } from \"./constants\";\r\n\r\n// a little function to help us with reordering the result\r\nexport const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed); // inserting task in new index\r\n\r\n    return result;\r\n};\r\n\r\nexport const remove = (arr, index) => [\r\n    // part of the array before the specified index\r\n    ...arr.slice(0, index),\r\n    // part of the array after the specified index\r\n    ...arr.slice(index + 1)\r\n];\r\n\r\nexport const replacechild = (origalarray, replacearray, index) => [\r\n    // part of the array before the specified index\r\n    ...origalarray.slice(0, index),\r\n    replacearray,\r\n    // part of the array after the specified index\r\n    ...origalarray.slice(index + 1)\r\n];\r\n\r\nexport const insert = (arr, index, newItem) => [\r\n    // part of the array before the specified index\r\n    ...arr.slice(0, index),\r\n    // inserted item\r\n    newItem,\r\n    // part of the array after the specified index\r\n    ...arr.slice(index)\r\n];\r\n\r\nexport const reorderChildren = (children, splitDropZonePath, splitItemPath) => {\r\n    if (splitDropZonePath.length === 1) {\r\n        const dropZoneIndex = Number(splitDropZonePath[0]);\r\n        const itemIndex = Number(splitItemPath[0]);\r\n        return reorder(children, itemIndex, dropZoneIndex);\r\n    }\r\n\r\n    const updatedChildren = [...children];\r\n\r\n    const curIndex = Number(splitDropZonePath.slice(0, 1));\r\n\r\n    // Update the specific node's children\r\n    const splitDropZoneChildrenPath = splitDropZonePath.slice(1);\r\n    const splitItemChildrenPath = splitItemPath.slice(1);\r\n    const nodeChildren = updatedChildren[curIndex];\r\n    updatedChildren[curIndex] = {\r\n        ...nodeChildren,\r\n        children: reorderChildren(\r\n            nodeChildren.children,\r\n            splitDropZoneChildrenPath,\r\n            splitItemChildrenPath\r\n        )\r\n    };\r\n\r\n    return updatedChildren;\r\n};\r\n\r\nexport const removeChildFromChildren = (children, splitItemPath) => {\r\n    if (splitItemPath.length === 1) {\r\n        const itemIndex = Number(splitItemPath[0]);\r\n        return remove(children, itemIndex);\r\n    }\r\n\r\n    let updatedChildren = [...children];\r\n\r\n    const curIndex = Number(splitItemPath.slice(0, 1));\r\n\r\n    // Update the specific node's children\r\n    const splitItemChildrenPath = splitItemPath.slice(1);\r\n    const nodeChildren = updatedChildren[curIndex];\r\n    // updatedChildren[curIndex] = {\r\n    //   ...nodeChildren,\r\n    //   children: removeChildFromChildren(\r\n    //     nodeChildren.children,\r\n    //     splitItemChildrenPath\r\n    //   )\r\n    // };\r\n\r\n    if (nodeChildren.children !== undefined) {\r\n        if (nodeChildren.type === COMPONENTROW &&\r\n            nodeChildren.children.length === 1) {\r\n            const list = removeChildFromChildren(children, splitItemPath.slice(0, 1))\r\n            updatedChildren = [...list]\r\n        } else if (nodeChildren.type === COMPONENTROW &&\r\n            (nodeChildren.children.length === 1 ||\r\n                nodeChildren.children.length === 2)) {\r\n            const list = removeChildFromChildren(nodeChildren.children, splitItemChildrenPath)\r\n            const list1 = replacechild(children, ...list, curIndex)\r\n            updatedChildren = [...list1]\r\n        } else {\r\n            updatedChildren[curIndex] = {\r\n                ...nodeChildren,\r\n                children: removeChildFromChildren(\r\n                    nodeChildren.children,\r\n                    splitItemChildrenPath\r\n                )\r\n            };\r\n        }\r\n\r\n    } else {\r\n        // if(nodeChildren.type===COMPONENTROW){\r\n        const list = removeChildFromChildren(children, splitItemPath.slice(0, 1))\r\n        updatedChildren = [...list]\r\n            // }\r\n\r\n    }\r\n    return updatedChildren;\r\n};\r\n\r\nexport const addChildToChildren = (children, splitDropZonePath, item) => {\r\n    if (splitDropZonePath.length === 1) {\r\n        const dropZoneIndex = Number(splitDropZonePath[0]);\r\n        return insert(children, dropZoneIndex, item);\r\n    }\r\n\r\n    const updatedChildren = [...children];\r\n\r\n    const curIndex = Number(splitDropZonePath.slice(0, 1));\r\n\r\n    // Update the specific node's children\r\n    const splitItemChildrenPath = splitDropZonePath.slice(1);\r\n    const nodeChildren = updatedChildren[curIndex];\r\n    if (nodeChildren.children !== undefined) {\r\n        updatedChildren[curIndex] = {\r\n            ...nodeChildren,\r\n            children: addChildToChildren(\r\n                nodeChildren.children,\r\n                splitItemChildrenPath,\r\n                item\r\n            )\r\n        };\r\n    } else {\r\n        updatedChildren[curIndex] = {\r\n            type: COMPONENTROW,\r\n            id: shortid.generate(),\r\n            children: addChildToChildren(\r\n                [nodeChildren],\r\n                splitItemChildrenPath,\r\n                item\r\n            )\r\n        };\r\n    }\r\n    return updatedChildren;\r\n};\r\n\r\nexport const handleMoveWithinParent = (\r\n    layout,\r\n    splitDropZonePath,\r\n    splitItemPath\r\n) => {\r\n    return reorderChildren(layout, splitDropZonePath, splitItemPath);\r\n};\r\n\r\nexport const handleAddColumDataToRow = layout => {\r\n    const layoutCopy = [...layout];\r\n    const COLUMN_STRUCTURE = {\r\n        type: COLUMN,\r\n        id: shortid.generate(),\r\n        children: []\r\n    };\r\n\r\n    return layoutCopy.map(row => {\r\n        if (!row.children.length) {\r\n            row.children = [COLUMN_STRUCTURE];\r\n        }\r\n        return row;\r\n    });\r\n};\r\n\r\nexport const handleMoveToDifferentParent = (\r\n    layout,\r\n    splitDropZonePath,\r\n    splitItemPath,\r\n    item\r\n) => {\r\n    let newLayoutStructure;\r\n    const COLUMN_STRUCTURE = {\r\n        type: COLUMN,\r\n        id: shortid.generate(),\r\n        children: [{ type: COMPONENT, id: shortid.generate(), ...item }]\r\n    };\r\n\r\n    const ROW_STRUCTURE = {\r\n        type: ROW,\r\n        id: shortid.generate()\r\n    };\r\n\r\n    switch (splitDropZonePath.length) {\r\n        case 1:\r\n            {\r\n                // moving column outside into new row made on the fly\r\n                if (item.type === COLUMN) {\r\n                    newLayoutStructure = {\r\n                        ...ROW_STRUCTURE,\r\n                        children: [item]\r\n                    };\r\n                } else {\r\n                    // moving component outside into new row made on the fly\r\n                    newLayoutStructure = {\r\n                        ...ROW_STRUCTURE,\r\n                        children: [COLUMN_STRUCTURE]\r\n                    };\r\n                }\r\n                break;\r\n            }\r\n        case 2:\r\n            {\r\n                // moving component outside into a row which creates column\r\n                if (item.type === COMPONENTROW) {\r\n                    newLayoutStructure = COLUMN_STRUCTURE;\r\n                } else {\r\n                    // moving column into existing row\r\n                    newLayoutStructure = item;\r\n                }\r\n\r\n                break;\r\n            }\r\n        case 3:\r\n            {\r\n                // moving component outside into a column which creates componentrow\r\n                if (item.type === COMPONENTROW) {\r\n                    newLayoutStructure = {\r\n                        ...item,\r\n                        type: COMPONENT,\r\n                        id: shortid.generate(),\r\n                    };\r\n                } else {\r\n                    // moving column into existing row\r\n                    if (item.children === undefined) {\r\n                        newLayoutStructure = item\r\n                        delete newLayoutStructure[\"children\"]\r\n                    } else {\r\n                        newLayoutStructure = {...item, type: COMPONENTROW };\r\n                    }\r\n\r\n                }\r\n                break;\r\n            }\r\n        default:\r\n            {\r\n                newLayoutStructure = item;\r\n            }\r\n    }\r\n\r\n    let updatedLayout = layout;\r\n    updatedLayout = removeChildFromChildren(updatedLayout, splitItemPath);\r\n    updatedLayout = handleAddColumDataToRow(updatedLayout);\r\n    updatedLayout = addChildToChildren(\r\n        updatedLayout,\r\n        splitDropZonePath,\r\n        newLayoutStructure\r\n    );\r\n\r\n    return updatedLayout;\r\n};\r\n\r\nexport const handleMoveSidebarComponentIntoParent = (\r\n    layout,\r\n    splitDropZonePath,\r\n    item\r\n) => {\r\n    let newLayoutStructure;\r\n    switch (splitDropZonePath.length) {\r\n        case 1:\r\n            {\r\n                newLayoutStructure = {\r\n                    type: ROW,\r\n                    id: shortid.generate(),\r\n                    children: [{\r\n                        type: COLUMN,\r\n                        id: shortid.generate(),\r\n                        children: [{ type: COMPONENT, id: shortid.generate(), ...item }]\r\n                    }]\r\n                };\r\n                break;\r\n            }\r\n        case 2:\r\n            {\r\n                newLayoutStructure = {\r\n                    type: COLUMN,\r\n                    id: shortid.generate(),\r\n                    children: [{ type: COMPONENT, id: shortid.generate(), ...item }]\r\n                };\r\n                break;\r\n            }\r\n        case 3:\r\n            {\r\n                newLayoutStructure = {\r\n                    type: COMPONENT,\r\n                    id: shortid.generate(),\r\n                    ...item\r\n                };\r\n                break;\r\n            }\r\n        case 4:\r\n            {\r\n                newLayoutStructure = {\r\n                    type: COMPONENT,\r\n                    id: shortid.generate(),\r\n                    ...item\r\n                };\r\n                break;\r\n            }\r\n        default:\r\n            {\r\n                newLayoutStructure = item;\r\n            }\r\n    }\r\n\r\n    return addChildToChildren(layout, splitDropZonePath, newLayoutStructure);\r\n};\r\n\r\nexport const handleRemoveItemFromLayout = (layout, splitItemPath) => {\r\n    return removeChildFromChildren(layout, splitItemPath);\r\n};\r\nexport const getcomponentdata = (children, splitItemPath) => {\r\n    const itemIndex = Number(splitItemPath[0]);\r\n    let updatedata = children[itemIndex] !== undefined ? children[itemIndex] : children[itemIndex - 1] !==\r\n        undefined ? children[itemIndex - 1] : {};\r\n    if (updatedata.children !== undefined) {\r\n        const splitItemChildrenPath = splitItemPath.length > 1 ? splitItemPath.slice(1) : splitItemPath;\r\n        updatedata = getcomponentdata(updatedata.children, splitItemChildrenPath)\r\n    } else {\r\n        return updatedata;\r\n    }\r\n    return updatedata;\r\n};\r\n\r\nexport const replaceChildFromChildren = (children, splitItemPath, replacedata) => {\r\n    if (splitItemPath.length === 1) {\r\n        const itemIndex = Number(splitItemPath[0]);\r\n        return replacechild(children, replacedata, itemIndex);\r\n    } else if (splitItemPath.length === 2) {\r\n        splitItemPath[2] = '0'\r\n        return replaceChildFromChildren(children, splitItemPath, replacedata)\r\n    }\r\n    let updatedChildren = [...children];\r\n    const curIndex = Number(splitItemPath.slice(0, 1));\r\n    // Update the specific node's children\r\n    const splitItemChildrenPath = splitItemPath.slice(1);\r\n    const nodeChildren = updatedChildren[curIndex];\r\n    if (nodeChildren.children !== undefined) {\r\n        if (nodeChildren.type === COMPONENTROW) {\r\n            updatedChildren[curIndex] = {\r\n                ...nodeChildren,\r\n                children: replaceChildFromChildren(\r\n                    nodeChildren.children,\r\n                    splitItemChildrenPath,\r\n                    replacedata\r\n                )\r\n            };\r\n        } else {\r\n            updatedChildren[curIndex] = {\r\n                ...nodeChildren,\r\n                children: replaceChildFromChildren(\r\n                    nodeChildren.children,\r\n                    splitItemChildrenPath,\r\n                    replacedata\r\n                )\r\n            };\r\n        }\r\n    } else {\r\n        const list = replaceChildFromChildren(children, splitItemPath.slice(0, 1), replacedata)\r\n        updatedChildren = [...list]\r\n    }\r\n    return updatedChildren;\r\n};\r\n\r\nexport const getValidComponent = (selectedFieldRecord, components, columnInfo) => {\r\n    let validComponents = [];\r\n    let currentCompChild = [];\r\n    components.map(comp => {\r\n        if (selectedFieldRecord.componentcode === ReactComponents.COMBO) {\r\n            selectedFieldRecord.child && selectedFieldRecord.child.map(myChild => currentCompChild.push(myChild.label))\r\n            if (columnInfo && columnInfo[comp.nquerybuildertablecode]) {\r\n                if (columnInfo[selectedFieldRecord.nquerybuildertablecode]) {\r\n                    if (columnInfo[selectedFieldRecord.nquerybuildertablecode].numericColumns.length) {\r\n                        columnInfo[selectedFieldRecord.nquerybuildertablecode].numericColumns.map(mycol => {\r\n                            if (mycol.foriegntablePK === columnInfo[comp.nquerybuildertablecode].primaryKeyName) {\r\n                                if (!currentCompChild.includes(comp.label)) {\r\n                                    validComponents.push(comp)\r\n                                    currentCompChild.push(comp.label)\r\n                                }\r\n                            }\r\n                        })\r\n                        columnInfo[comp.nquerybuildertablecode].numericColumns.map(otherCol => {\r\n                            if (selectedFieldRecord.valuemember === otherCol.foriegntablePK) {\r\n                                if (!currentCompChild.includes(comp.label)) {\r\n                                    validComponents.push(comp);\r\n                                    currentCompChild.push(comp.label);\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    } else {\r\n                        columnInfo[comp.nquerybuildertablecode].numericColumns.map(otherCol => {\r\n                            if (selectedFieldRecord.valuemember === otherCol.foriegntablePK) {\r\n                                if (!currentCompChild.includes(comp.label)) {\r\n                                    validComponents.push(comp);\r\n                                    currentCompChild.push(comp.label);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }else if(selectedFieldRecord.componentcode === ReactComponents.CUSTOMSEARCHFILTER){\r\n           if(comp.inputtype==='radio'){\r\n            if (selectedFieldRecord.label !== comp.label){\r\n                validComponents.push(comp)\r\n            }\r\n            \r\n           }   \r\n        } \r\n        else {\r\n            if (selectedFieldRecord.label !== comp.label)\r\n                validComponents.push(comp)\r\n        }\r\n    })\r\n    return validComponents;\r\n}"]},"metadata":{},"sourceType":"module"}