{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\COARelease.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../components/client-group.styles';\nimport { Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, getSubSampleBySample, getReleaseSelectedSamples, getReleaseSelectedSampleSubSampleTest, getReleaseSelectedSubSamples, getTestBySample, getReleaseSelectedTest, xmlExportAction } from '../actions';\nimport Esign from '../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\nimport { showEsign, getControlMap, convertDateValuetoString, rearrangeDateFormat } from '../components/CommonScript';\nimport { transactionStatus } from '../components/Enumeration';\nimport DataGridWithMultipleGrid from '../components/data-grid/DataGridWithMultipleGrid';\nimport BreadcrumbComponentToolbar from '../components/ToolbarBreadcrumb.Component';\nimport { getSelectedState } from \"@progress/kendo-react-grid\";\nimport COAReleaseFilter from './coarelease/COAReleaseFilter';\nimport TrainingUpdateChildTab from './competencemanagement/trainingupdate/TrainingUpdateChildTab';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass COARelease extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked; // let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\n\n      let dataResult = this.props.Login.masterData.ReleaseSample || [];\n      const data = dataResult.map(item => {\n        item.selected = checked;\n        return item;\n      });\n      this.childHeaderSelectionChange(event);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          data: undefined,\n          dataState: undefined,\n          //   selectedSubSampleData: selectedSubSampleData,\n          //  ntransactiontestcode: ntransactiontestcode,\n          //  ntransactionsamplecode: ntransactionsamplecode,\n          //    npreregno:npreregno,\n          selectAll: checked,\n          childSelectAll: checked,\n          nFlag: \"2\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n      this.setState({\n        dataResult: data,\n        selectAll: checked,\n        childSelectAll: checked\n      }); //}\n    };\n\n    this.childHeaderSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      let x;\n      let releaseSubSample = this.props.Login.masterData.releaseSubSample || new Map();\n      let selectedTestData = this.props.Login.selectedTestData || [];\n      let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\n      let npreregno = this.props.Login.npreregno || [];\n      let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n      let selectedSampleData = this.props.Login.selectedSampleData || [];\n\n      if (event.dataItem != undefined) {\n        //Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n              x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n            }\n          }\n        }); //   })\n\n        let y = x.filter(t => t.selected === true);\n        console.log('testtttt--->', y);\n\n        if (x.length === y.length) {\n          this.props.Login.masterData.ReleaseSample.map((t, i) => {\n            if (t.npreregno === y[i].npreregno) {\n              this.props.Login.masterData.ReleaseSample[i].selected = checked;\n            }\n          });\n        }\n      } else {\n        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n          item1.map(item => {\n            event.dataItems.map(y => {\n              if (item.npreregno === y.npreregno) {\n                item.selected = checked;\n              }\n            });\n            return item;\n          });\n        });\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n          item1.map(item => {\n            event.dataItems.map(y => {\n              if (item.npreregno === y.npreregno) {\n                item.selected = checked;\n              }\n            });\n            this.props.Login.masterData.ReleaseSample.map(item4 => {\n              event.dataItems.map(y => {\n                if (item4.npreregno === y.npreregno) {\n                  item4.selected = checked;\n                }\n              });\n            });\n            return item;\n          });\n        });\n      }\n\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item2 => {\n          if (item2.selected === true) {\n            let a = selectedTestData.every(item3 => {\n              return item3.ntransactiontestcode !== item2.ntransactiontestcode;\n            });\n\n            if (a === true) {\n              selectedTestData.push({\n                \"npreregno\": item2.npreregno,\n                \"ntransactionsamplecode\": item2.ntransactionsamplecode,\n                \"ntransactiontestcode\": item2.ntransactiontestcode\n              });\n              npreregno.push(item2.npreregno);\n              ntransactionsamplecode.push(item2.ntransactionsamplecode);\n              ntransactiontestcode.push(item2.ntransactiontestcode);\n            }\n          }\n\n          if (item2.selected === false) {\n            const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            selectedTestData = selectedTestData1;\n            const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno);\n            npreregno = npreregno1;\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode);\n            ntransactionsamplecode = ntransactionsamplecode1;\n            const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            ntransactiontestcode = ntransactiontestcode1;\n          }\n        });\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          data: undefined,\n          dataState: undefined,\n          masterData: { ...this.props.Login.masterData,\n            ...releaseSubSample\n          },\n          selectedSubSampleData: selectedSubSampleData,\n          selectedSampleData: selectedSampleData,\n          ntransactiontestcode: ntransactiontestcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          npreregno: npreregno,\n          selectedTestData: selectedTestData,\n          nFlag: \"2\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.subChildHeaderSelectionChange = event => {\n      let x;\n      const checked = event.syntheticEvent.target.checked;\n      let releaseTest = this.props.Login.masterData.releaseTest || new Map();\n      let subChildSelectAll = this.props.Login.subChildSelectAll || false;\n      let selectedsubcild = \"\";\n      let selectedTestData = this.props.Login.selectedTestData || [];\n      let npreregno = this.props.Login.npreregno || [];\n      let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n\n      if (event.dataItem != undefined) {\n        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n          item1.map(item => {\n            //  event.dataItems.map(y => {\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n              //  item.selected = checked\n              if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n                x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n              }\n            }\n          });\n        });\n        let y = x.filter(t => t.selected === true);\n        console.log('testtttt--->', y);\n\n        if (x.length === y.length) {\n          this.props.Login.masterData.ReleaseSubSample[y[0].npreregno].map((t, i) => {\n            if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n              this.props.Login.masterData.ReleaseSubSample[y[0].npreregno][i].selected = checked;\n            }\n          });\n        }\n      } else {\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n          item1.map(item => {\n            event.dataItems.map(y => {\n              if (item.ntransactiontestcode === y.ntransactiontestcode) {\n                item.selected = checked;\n              }\n            });\n            return item;\n          });\n        });\n        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n          item1.map(item => {\n            event.dataItems.map(y => {\n              if (item.ntransactionsamplecode === y.ntransactionsamplecode) {\n                item.selected = checked;\n              }\n            });\n            this.props.Login.masterData.ReleaseSample.map(item4 => {\n              event.dataItems.map(y => {\n                if (item4.npreregno === y.npreregno) {\n                  item4.selected = checked;\n                }\n              });\n            });\n            return item;\n          });\n        });\n      }\n\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item2 => {\n          if (item2.selected === true) {\n            let a = selectedTestData.every(item3 => {\n              return item3.ntransactiontestcode !== item2.ntransactiontestcode;\n            });\n\n            if (a === true) {\n              selectedTestData.push({\n                \"npreregno\": item2.npreregno,\n                \"ntransactionsamplecode\": item2.ntransactionsamplecode,\n                \"ntransactiontestcode\": item2.ntransactiontestcode\n              });\n              npreregno.push(item2.npreregno);\n              ntransactionsamplecode.push(item2.ntransactionsamplecode);\n              ntransactiontestcode.push(item2.ntransactiontestcode);\n            }\n          }\n\n          if (item2.selected === false) {\n            const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            selectedTestData = selectedTestData1;\n            const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno);\n            npreregno = npreregno1;\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode);\n            ntransactionsamplecode = ntransactionsamplecode1;\n            const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            ntransactiontestcode = ntransactiontestcode1;\n          }\n        });\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          data: undefined,\n          dataState: undefined,\n          masterData: { ...this.props.Login.masterData,\n            ...releaseTest\n          },\n          selectedTestData: selectedTestData,\n          ntransactiontestcode: ntransactiontestcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          npreregno: npreregno,\n          subChildSelectAll: subChildSelectAll,\n          selectedsubcild: selectedsubcild,\n          nFlag: \"2\"\n        }\n      };\n      this.props.updateStore(updateInfo); //   this.childHeaderSelectionChange(event);\n\n      this.setState({\n        //selectAll: checked,\n        subChildSelectAll: subChildSelectAll\n      });\n      return subChildSelectAll;\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        nsitecode: -1,\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getSubSampleBySample({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.childHandleExpandChange = (row, dataState) => {\n      const viewParam = {\n        nsitecode: -1,\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getTestBySample({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data.ReleaseSample, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.selectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      let npreregno = this.props.Login.npreregno || [];\n      let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n      let selectedTestData = this.props.Login.selectedTestData || [];\n      let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\n      let subChildSelectAll = this.props.Login.subChildSelectAll || false;\n      let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\n      let selectedSampleData = this.props.Login.selectedSampleData || [];\n      let releaseSubSample = new Map();\n      let hasChild = true;\n      let hasSubChild = true;\n      dataResult.map((item, i) => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          item.selected = !event.dataItem.selected;\n\n          if (item.selected === true) {\n            selectedSampleData.push({\n              \"nregtypecode\": item.nregtypecode,\n              \"nregsubtypecode\": item.nregsubtypecode,\n              \"npreregno\": item.npreregno,\n              \"ntranscode\": item.ntranscode,\n              bFlag: \"1\"\n            });\n            subChildSelectAll = item.selected === true ? this.childHeaderSelectionChange(event) : false;\n\n            if (hasChild === true) {\n              Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n                item1.map(item => {\n                  if (item.npreregno === event.dataItem.npreregno) {\n                    item.selected = true;\n                  }\n\n                  if (ntransactionsamplecode.length === 0) {\n                    ntransactionsamplecode.push(item.ntransactionsamplecode);\n                  }\n\n                  if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n                    ntransactionsamplecode.push(item.ntransactionsamplecode);\n                  }\n\n                  selectedSubSampleData.push({\n                    //         \"nregtypecode\": item.nregtypecode, \"nregsubtypecode\": item.nregsubtypecode,\n                    \"npreregno\": item.npreregno,\n                    \"ntranscode\": item.ntranscode,\n                    //\"ntransactionsamplecode\": item.ntransactionsamplecode,\n                    bFlag: \"2\"\n                  });\n                });\n              });\n            }\n\n            Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n              item1.map(item => {\n                if (item.npreregno === event.dataItem.npreregno) {\n                  item.selected = true;\n                }\n\n                if (ntransactiontestcode.length === 0) {\n                  ntransactiontestcode.push(item.ntransactiontestcode);\n                }\n\n                if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n                  ntransactiontestcode.push(item.ntransactiontestcode);\n                }\n              });\n            });\n\n            if (npreregno.length === 0) {\n              npreregno.push(item.npreregno);\n            }\n\n            if (!npreregno.includes(item.npreregno)) {\n              npreregno.push(item.npreregno);\n            } // if (ntransactionsamplecode.length===0) {\n            //     ntransactionsamplecode.push(item.ntransactionsamplecode); \n            // }\n            // if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n            //     ntransactionsamplecode.push(item.ntransactionsamplecode); \n            // }\n            // if (ntransactiontestcode.length===0) {\n            //     ntransactiontestcode.push(item.ntransactiontestcode); \n            // }\n            // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n            //     ntransactiontestcode.push(item.ntransactiontestcode); \n            // }\n\n          } else {\n            // const selectedSampleData1 = selectedSampleData.filter(item => item.npreregno !== event.dataItem.npreregno)\n            // selectedSampleData = selectedSampleData1\n            const ntransactiontestcode1 = []; // ntransactiontestcode = ntransactiontestcode1\n\n            Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n              item1.map(item => {\n                if (item.npreregno === event.dataItem.npreregno) {\n                  item.selected = false; // const selectedSubSampleData1 = selectedSubSampleData.filter(item => item.ntransactionsamplecode !== event.dataItem.ntransactionsamplecode)\n                  // selectedSubSampleData=selectedSubSampleData1\n                }\n              });\n            });\n            Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n              item1.map(item => {\n                if (item.npreregno === event.dataItem.npreregno) {\n                  item.selected = false; // const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode !== event.dataItem.ntransactiontestcode)\n                  // selectedTestData=selectedTestData1\n                }\n              });\n            });\n          }\n        }\n\n        return item;\n      });\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item2 => {\n          if (item2.selected === true) {\n            let a = selectedTestData.every(item3 => {\n              return item3.ntransactiontestcode !== item2.ntransactiontestcode;\n            });\n\n            if (a === true) {\n              selectedTestData.push({\n                \"npreregno\": item2.npreregno,\n                \"ntransactionsamplecode\": item2.ntransactionsamplecode,\n                \"ntransactiontestcode\": item2.ntransactiontestcode\n              });\n              npreregno.push(item2.npreregno);\n              ntransactionsamplecode.push(item2.ntransactionsamplecode);\n              ntransactiontestcode.push(item2.ntransactiontestcode);\n            }\n          }\n\n          if (item2.selected === false) {\n            const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            selectedTestData = selectedTestData1;\n            const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno);\n            npreregno = npreregno1;\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode);\n            ntransactionsamplecode = ntransactionsamplecode1;\n            const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            ntransactiontestcode = ntransactiontestcode1;\n          }\n        });\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          nFlag: \"1\",\n          ntransactiontestcode: ntransactiontestcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          npreregno: npreregno,\n          selectedSampleData: selectedSampleData,\n          selectedTestData: selectedTestData,\n          selectedSubSampleData: selectedSubSampleData\n        }\n      };\n      this.props.updateStore(updateInfo);\n      this.setState({\n        dataResult,\n        selectedSampleData,\n        nFlag: \"1\"\n      });\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      let selectedTestData = this.props.Login.selectedTestData || [];\n      let releaseSubSample = new Map();\n      let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\n      let npreregno = this.props.Login.npreregno || [];\n      let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n      let hasSubChild = true;\n      let subChildSelectAll = this.props.Login.subChildSelectAll || false;\n      Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\n        item1.map(item => {\n          if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            item.selected = !event.dataItem.selected;\n\n            if (item.selected === true) {\n              selectedSubSampleData.push({\n                \"npreregno\": item.npreregno,\n                \"ntranscode\": item.ntranscode,\n                \"ntransactionsamplecode\": item.ntransactionsamplecode,\n                bFlag: \"2\"\n              });\n              subChildSelectAll = item.selected === true ? this.childHeaderSelectionChange(event) : false;\n\n              if (hasSubChild === true) {\n                Object.values(this.props.Login.masterData.ReleaseTest).forEach(item8 => {\n                  item8.map(item9 => {\n                    if (item9.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n                      item9.selected = true;\n                    }\n\n                    if (item9.selected === true) {\n                      if (ntransactiontestcode.length === 0) {\n                        ntransactiontestcode.push(item9.ntransactiontestcode);\n                      }\n\n                      if (!ntransactiontestcode.includes(item9.ntransactiontestcode)) {\n                        ntransactiontestcode.push(item9.ntransactiontestcode);\n                      }\n                    }\n                  });\n                });\n              }\n\n              if (npreregno.length === 0) {\n                npreregno.push(item.npreregno);\n              }\n\n              if (!npreregno.includes(item.npreregno)) {\n                npreregno.push(item.npreregno);\n              }\n\n              if (ntransactionsamplecode.length === 0) {\n                ntransactionsamplecode.push(item.ntransactionsamplecode);\n              }\n\n              if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n                ntransactionsamplecode.push(item.ntransactionsamplecode);\n              } // if (item.selected === true){\n              //     if (ntransactiontestcode.length === 0) {\n              //         ntransactiontestcode.push(item.ntransactiontestcode);\n              //     }\n              // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n              //     ntransactiontestcode.push(item.ntransactiontestcode);\n              // }\n              // }\n              //    this.subChildSelectionChange(event);        \n\n            } else {\n              subChildSelectAll = false;\n              Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n                item1.map(item => {\n                  if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n                    item.selected = checked;\n                  }\n                });\n              });\n              this.props.Login.masterData.ReleaseSample.map(item4 => {\n                if (item4.npreregno === event.dataItem.npreregno) {\n                  item4.selected = checked;\n                }\n              });\n            }\n          }\n\n          return item;\n        });\n      });\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item2 => {\n          if (item2.selected === true) {\n            let a = selectedTestData.every(item3 => {\n              return item3.ntransactiontestcode !== item2.ntransactiontestcode;\n            });\n\n            if (a === true) {\n              selectedTestData.push({\n                \"npreregno\": item2.npreregno,\n                \"ntransactionsamplecode\": item2.ntransactionsamplecode,\n                \"ntransactiontestcode\": item2.ntransactiontestcode\n              });\n              npreregno.push(item2.npreregno);\n              ntransactionsamplecode.push(item2.ntransactionsamplecode);\n              ntransactiontestcode.push(item2.ntransactiontestcode);\n            }\n          }\n\n          if (item2.selected === false) {\n            const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            selectedTestData = selectedTestData1;\n            const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno);\n            npreregno = npreregno1;\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode);\n            ntransactionsamplecode = ntransactionsamplecode1;\n            const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            ntransactiontestcode = ntransactiontestcode1;\n          }\n        });\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          data: undefined,\n          dataState: undefined,\n          masterData: { ...this.props.Login.masterData,\n            ...releaseSubSample\n          },\n          selectedSubSampleData: selectedSubSampleData,\n          ntransactiontestcode: ntransactiontestcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          selectedTestData: selectedTestData,\n          subChildSelectAll: subChildSelectAll,\n          npreregno: npreregno,\n          nFlag: \"2\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.subChildSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      let releaseTest = new Map();\n      let selectedTestData = this.props.Login.selectedTestData || [];\n      let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n      let npreregno = this.props.Login.npreregno || [];\n      let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\n      let subChildSelectAll = false;\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item => {\n          if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n            item.selected = !event.dataItem.selected;\n\n            if (item.selected === true) {\n              subChildSelectAll = item.selected === true ? this.subChildHeaderSelectionChange(event) : false; // this.childSelectionChange(event) erSelectionChange(event) : false;\n              // this.childSelectionChange(event) \n\n              if (npreregno.length === 0) {\n                npreregno.push(item.npreregno);\n              }\n\n              if (!npreregno.includes(item.npreregno)) {\n                npreregno.push(item.npreregno);\n              }\n\n              if (ntransactionsamplecode.length === 0) {\n                ntransactionsamplecode.push(item.ntransactionsamplecode);\n              }\n\n              if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n                ntransactionsamplecode.push(item.ntransactionsamplecode);\n              }\n\n              if (ntransactiontestcode.length === 0) {\n                ntransactiontestcode.push(item.ntransactiontestcode);\n              }\n\n              if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n                ntransactiontestcode.push(item.ntransactiontestcode);\n              }\n            } else {\n              Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item2 => {\n                item2.map(item3 => {\n                  if (item3.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n                    item3.selected = checked;\n                  }\n                });\n              });\n              this.props.Login.masterData.ReleaseSample.map(item4 => {\n                if (item4.npreregno === event.dataItem.npreregno) {\n                  item4.selected = checked;\n                }\n              }); // const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode !== event.dataItem.ntransactiontestcode)\n              // selectedTestData = selectedTestData1\n            }\n          }\n\n          return item;\n        });\n      });\n      Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\n        item1.map(item2 => {\n          if (item2.selected === true) {\n            let a = selectedTestData.every(item3 => {\n              return item3.ntransactiontestcode !== item2.ntransactiontestcode;\n            });\n\n            if (a === true) {\n              selectedTestData.push({\n                \"npreregno\": item2.npreregno,\n                \"ntransactionsamplecode\": item2.ntransactionsamplecode,\n                \"ntransactiontestcode\": item2.ntransactiontestcode\n              });\n              npreregno.push(item2.npreregno);\n              ntransactionsamplecode.push(item2.ntransactionsamplecode);\n              ntransactiontestcode.push(item2.ntransactiontestcode);\n            }\n          }\n\n          if (item2.selected === false) {\n            const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            selectedTestData = selectedTestData1;\n            const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno);\n            npreregno = npreregno1;\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode);\n            ntransactionsamplecode = ntransactionsamplecode1;\n            const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode);\n            ntransactiontestcode = ntransactiontestcode1;\n          }\n        });\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          data: undefined,\n          dataState: undefined,\n          masterData: { ...this.props.Login.masterData,\n            ...releaseTest\n          },\n          selectedTestData: selectedTestData,\n          nFlag: \"3\",\n          ntransactiontestcode: ntransactiontestcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          npreregno: npreregno,\n          subChildSelectAll: subChildSelectAll\n        }\n      };\n      this.props.updateStore(updateInfo);\n      this.setState({\n        dataResult,\n        nFlag: \"1\"\n      });\n    };\n\n    this.reloadData = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"coarelease\",\n        methodUrl: \"COARelease\",\n        displayName: this.props.Login.inputParam.displayName,\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef();\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCT\",\n      \"dataField\": \"Specimen Type\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCTCATEGORY\",\n      \"dataField\": \"Specimen Category\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"200px\"\n    }];\n    this.sampleColumnList = [{\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_SAMPLENAME\",\n      \"dataField\": \"Sample Name\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_SAMPLETYPE\",\n      \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n    }, {\n      \"label\": \"IDS_REGISTRATIONTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"Batch\"\n    }, {\n      \"label\": \"IDS_REGISTRATIONSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"EU\"\n    } // {\n    //     \"label\": \"IDS_CONFIGVERSION\",\n    //     \"value\": \"xyz\"\n    // },\n    // {\n    //     \"label\": \"IDS_SECTION\",\n    //     \"value\": \"Culture\"\n    // },\n    // {\n    //     \"label\": \"IDS_Test\",\n    //     \"value\": \"Culture Liquid\"\n    // },\n    // {\n    //     \"label\": \"IDS_FILTERSTATUS\",\n    //     \"value\": \"All\"\n    // }\n    ];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"COARelease\") && this.state.controlMap.get('COARelease').ncontrolcode;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponentToolbar //   showFilter={true}\n    , {\n      showSearch: true,\n      breadCrumbItem: breadCrumbData,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(COAReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [] // JobStatus={this.props.Login.masterData.JobStatus || []}\n          // Test={this.state.TestList || []}\n          // TestValue={this.props.Login.masterData.TestValue || []}\n          // FilterStatus={this.state.FilterStatusList || []}\n          // FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\n          ,\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() // onFilterComboChange={this.onFilterComboChange}\n          // handleDateChange={this.handleDateChange}\n          // onDesignTemplateChange={this.onDesignTemplateChange}\n          // DynamicDesignMapping={this.state.stateDynamicDesign || []}\n          // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\n          // DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\n          ,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 29\n      }\n    }), this.state.data ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      data: this.state.data,\n      dataResult: this.props.Login.masterData.ReleaseSample,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.extractedColumnList //   expandField=\"expanded\"\n      //  handleExpandChange={this.handleExpandChange}\n      //  childHandleExpandChange={this.childHandleExpandChange}\n      ,\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      isActionRequired: true,\n      isToolBarRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleaseSubSample || new Map(),\n      childColumnList: this.sampleColumnList,\n      subChildColumnList: this.testColumnList,\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\",\n      subChildList: this.props.Login.masterData.ReleaseTest || new Map() ///childList={this.props.Login.masterData.releaseSubSample || []}\n      ,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectAll: this.props.Login.childSelectAll,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      subChildSelectAll: this.props.Login.subChildSelectAll,\n      selectionChange: this.selectionChange,\n      selectAll: this.props.Login.selectAll // testMean={this.state.testMean}\n      //     releaseRecord={this.props.Login.nFlag === \"1\" ? () => this.props.getReleaseSelectedSamples(this.props.Login.userInfo, releaseId, this.state.selectedSampleData, this.props.Login.masterData, this.state.nFlag)\n      //         : this.props.Login.nFlag===\"2\"?() => this.props.getReleaseSelectedSubSamples(this.props.Login.userInfo, releaseId, this.props.Login.selectedSubSampleData, this.props.Login.masterData, this.state.nFlag)\n      //    :() => this.props.getReleaseSelectedTest(this.props.Login.userInfo, releaseId, this.props.Login.selectedTestData, this.props.Login.masterData, this.state.nFlag) }\n      ,\n      releaseRecord: () => this.props.getReleaseSelectedSampleSubSampleTest(this.props.Login.userInfo, releaseId, this.props.Login.npreregno, this.props.Login.ntransactionsamplecode, this.props.Login.ntransactiontestcode, this.props.Login.selectedSampleData, this.props.Login.selectedSubSampleData, this.props.Login.selectedTestData, this.props.Login.masterData, this.state.nFlag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 33\n      }\n    }) : \"\"))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n          childDataResult: this.props.Login.data || this.props.Login.masterData.ReleaseSubSample || [],\n          subChildDataResult: this.props.Login.data || this.props.Login.masterData.ReleaseTest || []\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData.ReleaseSample,\n          selectedRecord: this.props.Login.selectedRecord,\n          dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n          childDataResult: process(this.props.Login.masterData.RS_SubSample || [], this.state.dataState),\n          subChildDataResult: process(this.props.Login.masterData.RS_Test || [], this.state.dataState),\n          dataState\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  getSubSampleBySample,\n  getReleaseSelectedSamples,\n  getReleaseSelectedSubSamples,\n  getTestBySample,\n  getReleaseSelectedTest,\n  getReleaseSelectedSampleSubSampleTest\n})(injectIntl(COARelease));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/COARelease.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","getSubSampleBySample","getReleaseSelectedSamples","getReleaseSelectedSampleSubSampleTest","getReleaseSelectedSubSamples","getTestBySample","getReleaseSelectedTest","xmlExportAction","Esign","DEFAULT_RETURN","showEsign","getControlMap","convertDateValuetoString","rearrangeDateFormat","transactionStatus","DataGridWithMultipleGrid","BreadcrumbComponentToolbar","getSelectedState","COAReleaseFilter","TrainingUpdateChildTab","mapStateToProps","state","Login","COARelease","Component","constructor","props","headerSelectionChange","event","checked","syntheticEvent","target","dataResult","masterData","ReleaseSample","data","map","item","selected","childHeaderSelectionChange","updateInfo","typeName","undefined","dataState","selectAll","childSelectAll","nFlag","setState","x","releaseSubSample","Map","selectedTestData","selectedSubSampleData","npreregno","ntransactionsamplecode","ntransactiontestcode","selectedSampleData","dataItem","ReleaseSubSample","y","filter","t","console","log","length","i","Object","values","forEach","item1","dataItems","ReleaseTest","item4","item2","a","every","item3","push","selectedTestData1","npreregno1","ntransactionsamplecode1","ntransactiontestcode1","subChildHeaderSelectionChange","releaseTest","subChildSelectAll","selectedsubcild","handleExpandChange","row","viewParam","nsitecode","userInfo","primaryKeyField","primaryKeyValue","viewRow","childHandleExpandChange","dataStateChange","selectionChange","hasChild","hasSubChild","nregtypecode","nregsubtypecode","ntranscode","bFlag","includes","childSelectionChange","item8","item9","subChildSelectionChange","reloadData","inputParam","inputData","classUrl","methodUrl","displayName","validateEsign","sreason","selectedRecord","password","screenData","formRef","createRef","skip","take","settings","parseInt","masterStatus","error","childDataResult","userRoleControlRights","controlMap","extractedColumnList","sampleColumnList","testColumnList","getDerivedStateFromProps","warn","render","obj","realFromDate","realToDate","breadCrumbData","breadCrumbFrom","breadCrumbto","realSampleTypeValue","ssampletypename","realRegTypeValue","sregtypename","realRegSubTypeValue","sregsubtypename","releaseId","has","get","ncontrolcode","SampletypeList","SampleTypeValue","RegistrationTypeList","RegTypeValue","RegistrationSubTypeList","RegSubTypeValue","ConfigVersionList","ApprovalVersionValue","UserSectionList","UserSectionValue","fromDate","Date","toDate","subChildDataResult","selectedId","componentDidUpdate","previousProps","nformcode","RS_SubSample","RS_Test"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../components/client-group.styles';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential, getSubSampleBySample, getReleaseSelectedSamples,\r\n    getReleaseSelectedSampleSubSampleTest, getReleaseSelectedSubSamples, getTestBySample, getReleaseSelectedTest, xmlExportAction\r\n} from '../actions';\r\n\r\n\r\nimport Esign from '../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\r\n\r\nimport { showEsign, getControlMap, convertDateValuetoString, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../components/data-grid/DataGridWithMultipleGrid';\r\nimport BreadcrumbComponentToolbar from '../components/ToolbarBreadcrumb.Component';\r\n\r\nimport {\r\n\r\n    getSelectedState\r\n} from \"@progress/kendo-react-grid\";\r\nimport COAReleaseFilter from './coarelease/COAReleaseFilter';\r\nimport TrainingUpdateChildTab from './competencemanagement/trainingupdate/TrainingUpdateChildTab';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass COARelease extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n\r\n        };\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"Specimen Type\", \"width\": \"200px\"\r\n            },\r\n            { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"Specimen Category\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n        ];\r\n\r\n        this.sampleColumnList = [{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        this.testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        // let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\r\n        let dataResult = this.props.Login.masterData.ReleaseSample || []\r\n        const data = dataResult.map(item => {\r\n            item.selected = checked;\r\n            return item;\r\n        });\r\n\r\n\r\n        this.childHeaderSelectionChange(event);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                data: undefined, dataState: undefined,\r\n                //   selectedSubSampleData: selectedSubSampleData,\r\n                //  ntransactiontestcode: ntransactiontestcode,\r\n                //  ntransactionsamplecode: ntransactionsamplecode,\r\n                //    npreregno:npreregno,\r\n                selectAll: checked,\r\n                childSelectAll: checked,\r\n\r\n                nFlag: \"2\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.setState({\r\n            dataResult: data,\r\n            selectAll: checked,\r\n            childSelectAll: checked\r\n\r\n        });\r\n        //}\r\n\r\n    }\r\n    childHeaderSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let x;\r\n        let releaseSubSample = this.props.Login.masterData.releaseSubSample || new Map()\r\n        let selectedTestData = this.props.Login.selectedTestData || [];\r\n        let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\r\n        let npreregno = this.props.Login.npreregno || [];\r\n        let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        let selectedSampleData = this.props.Login.selectedSampleData || [];\r\n        if (event.dataItem != undefined) {\r\n\r\n            //Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                     \r\n\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                        x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                    }\r\n                }\r\n                    \r\n            })\r\n            //   })\r\n            let y = x.filter(t => t.selected === true);\r\n            console.log('testtttt--->', y)\r\n            if (x.length === y.length) {\r\n                this.props.Login.masterData.ReleaseSample.map((t, i) => {\r\n                    if (t.npreregno === y[i].npreregno) {\r\n                        this.props.Login.masterData.ReleaseSample[i].selected = checked\r\n                    }\r\n                })\r\n                \r\n            }\r\n        }\r\n        else{\r\n        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n            item1.map(item => {\r\n                event.dataItems.map(y => {\r\n\r\n                    if (item.npreregno === y.npreregno) {\r\n                        item.selected = checked\r\n                    }\r\n                })\r\n\r\n\r\n                return item;\r\n            });\r\n        });\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item => {\r\n                event.dataItems.map(y => {\r\n\r\n                    if (item.npreregno === y.npreregno) {\r\n                        item.selected = checked\r\n\r\n                    }\r\n                })\r\n\r\n                this.props.Login.masterData.ReleaseSample.map(item4 => {\r\n                    event.dataItems.map(y => {\r\n                        if (item4.npreregno === y.npreregno) {\r\n\r\n                            item4.selected = checked\r\n\r\n                        }\r\n                    })\r\n                })\r\n\r\n\r\n\r\n\r\n                return item;\r\n            });\r\n        });\r\n    }\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item2 => {\r\n                if (item2.selected === true) {\r\n                    let a = selectedTestData.every(item3 => {\r\n                        return item3.ntransactiontestcode !== item2.ntransactiontestcode\r\n                    })\r\n                    if (a === true) {\r\n                        selectedTestData.push({\r\n                            \"npreregno\": item2.npreregno,\r\n                            \"ntransactionsamplecode\": item2.ntransactionsamplecode,\r\n                            \"ntransactiontestcode\": item2.ntransactiontestcode,\r\n\r\n                        })\r\n                        npreregno.push(item2.npreregno,\r\n\r\n                        )\r\n                        ntransactionsamplecode.push(item2.ntransactionsamplecode,\r\n\r\n                        )\r\n                        ntransactiontestcode.push(\r\n                            item2.ntransactiontestcode,\r\n\r\n                        )\r\n                    }\r\n                }\r\n                if (item2.selected === false) {\r\n                    const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    selectedTestData = selectedTestData1\r\n                    const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno)\r\n                    npreregno = npreregno1\r\n\r\n                    const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode)\r\n                    ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n                    const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    ntransactiontestcode = ntransactiontestcode1\r\n\r\n                }\r\n            })\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                data: undefined, dataState: undefined,\r\n                masterData: { ...this.props.Login.masterData, ...releaseSubSample },\r\n                selectedSubSampleData: selectedSubSampleData,\r\n                selectedSampleData: selectedSampleData,\r\n\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                npreregno: npreregno,\r\n                selectedTestData: selectedTestData,\r\n\r\n\r\n                nFlag: \"2\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    subChildHeaderSelectionChange = (event) => {\r\n        let x;\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let releaseTest = this.props.Login.masterData.releaseTest || new Map()\r\n        let subChildSelectAll = this.props.Login.subChildSelectAll || false\r\n        let selectedsubcild = \"\"\r\n        let selectedTestData = this.props.Login.selectedTestData || [];\r\n        let npreregno = this.props.Login.npreregno || [];\r\n        let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        if (event.dataItem != undefined) {\r\n\r\n            Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n                item1.map(item => {\r\n                    //  event.dataItems.map(y => {\r\n                     \r\n\r\n                     if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    //  item.selected = checked\r\n                    if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                        x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                    }\r\n                }\r\n                    \r\n                })\r\n            })\r\n            let  y = x.filter(t =>  t.selected === true );\r\n            console.log('testtttt--->',y )\r\n            if (x.length ===y.length)\r\n            {\r\n                this.props.Login.masterData.ReleaseSubSample[y[0].npreregno].map((t,i) => {\r\n                    if (t.ntransactionsamplecode === y[0].ntransactionsamplecode)\r\n                    {\r\n                        this.props.Login.masterData.ReleaseSubSample[y[0].npreregno][i].selected =checked \r\n                        }\r\n                })\r\n                \r\n           }\r\n        }\r\n        else {\r\n            Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n                item1.map(item => {\r\n                    event.dataItems.map(y => {\r\n\r\n                        if (item.ntransactiontestcode === y.ntransactiontestcode) {\r\n                            item.selected = checked\r\n                        }\r\n                    })\r\n\r\n\r\n                    return item;\r\n                });\r\n            });\r\n            Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n                item1.map(item => {\r\n                    event.dataItems.map(y => {\r\n\r\n                        if (item.ntransactionsamplecode === y.ntransactionsamplecode) {\r\n                            item.selected = checked\r\n\r\n                        }\r\n                    })\r\n\r\n                    this.props.Login.masterData.ReleaseSample.map(item4 => {\r\n                        event.dataItems.map(y => {\r\n                            if (item4.npreregno === y.npreregno) {\r\n\r\n                                item4.selected = checked\r\n\r\n                            }\r\n                        })\r\n                    })\r\n\r\n\r\n\r\n\r\n                    return item;\r\n                });\r\n            });\r\n        }\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item2 => {\r\n                if (item2.selected === true) {\r\n                    let a = selectedTestData.every(item3 => {\r\n                        return item3.ntransactiontestcode !== item2.ntransactiontestcode\r\n                    })\r\n                    if (a === true) {\r\n                        selectedTestData.push({\r\n                            \"npreregno\": item2.npreregno,\r\n                            \"ntransactionsamplecode\": item2.ntransactionsamplecode,\r\n                            \"ntransactiontestcode\": item2.ntransactiontestcode,\r\n\r\n                        })\r\n                        npreregno.push(item2.npreregno,\r\n\r\n                        )\r\n                        ntransactionsamplecode.push(item2.ntransactionsamplecode,\r\n\r\n                        )\r\n                        ntransactiontestcode.push(\r\n                            item2.ntransactiontestcode,\r\n\r\n                        )\r\n                    }\r\n                }\r\n                if (item2.selected === false) {\r\n                    const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    selectedTestData = selectedTestData1\r\n                    const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno)\r\n                    npreregno = npreregno1\r\n\r\n                    const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode)\r\n                    ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n                    const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    ntransactiontestcode = ntransactiontestcode1\r\n                }\r\n            })\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                data: undefined, dataState: undefined,\r\n                masterData: { ...this.props.Login.masterData, ...releaseTest },\r\n                selectedTestData: selectedTestData,\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                npreregno: npreregno,\r\n                subChildSelectAll: subChildSelectAll,\r\n                selectedsubcild: selectedsubcild,\r\n\r\n                nFlag: \"2\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        //   this.childHeaderSelectionChange(event);\r\n        this.setState({\r\n            //selectAll: checked,\r\n            subChildSelectAll: subChildSelectAll\r\n\r\n        });\r\n        return subChildSelectAll;\r\n\r\n    }\r\n\r\n    handleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getSubSampleBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    childHandleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getTestBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data.ReleaseSample, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            }, {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"Batch\"\r\n            }, {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"EU\"\r\n            },\r\n\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": \"xyz\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_SECTION\",\r\n            //     \"value\": \"Culture\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_Test\",\r\n            //     \"value\": \"Culture Liquid\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_FILTERSTATUS\",\r\n            //     \"value\": \"All\"\r\n            // }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"COARelease\")\r\n            && this.state.controlMap.get('COARelease').ncontrolcode;\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <BreadcrumbComponentToolbar\r\n                                //   showFilter={true}\r\n                                showSearch={true}\r\n                                breadCrumbItem={breadCrumbData}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <COAReleaseFilter\r\n                                             SampleType={this.state.SampletypeList || []}\r\n                                             SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                             RegType={this.state.RegistrationTypeList || []}\r\n                                             RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                             RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                             RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                             ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                             ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                             UserSection={this.state.UserSectionList || []}\r\n                                             UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            // JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                            // Test={this.state.TestList || []}\r\n                                            // TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            // FilterStatus={this.state.FilterStatusList || []}\r\n                                            // FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            // onFilterComboChange={this.onFilterComboChange}\r\n                                            // handleDateChange={this.handleDateChange}\r\n                                            // onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            // DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                            // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            // DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n\r\n                            {this.state.data ?\r\n                                <DataGridWithMultipleGrid\r\n                                    data={this.state.data}\r\n                                    dataResult={this.props.Login.masterData.ReleaseSample}\r\n                                    childDataResult={this.state.childDataResult}\r\n                                    subChildDataResult={this.state.subChildDataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    //   expandField=\"expanded\"\r\n                                    //  handleExpandChange={this.handleExpandChange}\r\n                                    //  childHandleExpandChange={this.childHandleExpandChange}\r\n\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasChild={true}\r\n                                    hasSubChild={true}\r\n                                    childList={this.props.Login.masterData.ReleaseSubSample || new Map()}\r\n                                    childColumnList={this.sampleColumnList}\r\n                                    subChildColumnList={this.testColumnList}\r\n                                    childMappingField={\"npreregno\"}\r\n                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n                                    subChildList={this.props.Login.masterData.ReleaseTest || new Map()}\r\n                                    ///childList={this.props.Login.masterData.releaseSubSample || []}\r\n                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                    methodUrl={\"Release\"}\r\n                                    headerSelectionChange={this.headerSelectionChange}\r\n                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                    childSelectionChange={this.childSelectionChange}\r\n                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                    selectionChange={this.selectionChange}\r\n                                    selectAll={this.props.Login.selectAll}\r\n                                    // testMean={this.state.testMean}\r\n                                    //     releaseRecord={this.props.Login.nFlag === \"1\" ? () => this.props.getReleaseSelectedSamples(this.props.Login.userInfo, releaseId, this.state.selectedSampleData, this.props.Login.masterData, this.state.nFlag)\r\n                                    //         : this.props.Login.nFlag===\"2\"?() => this.props.getReleaseSelectedSubSamples(this.props.Login.userInfo, releaseId, this.props.Login.selectedSubSampleData, this.props.Login.masterData, this.state.nFlag)\r\n                                    //    :() => this.props.getReleaseSelectedTest(this.props.Login.userInfo, releaseId, this.props.Login.selectedTestData, this.props.Login.masterData, this.state.nFlag) }\r\n                                    releaseRecord={() => this.props.getReleaseSelectedSampleSubSampleTest(this.props.Login.userInfo, releaseId, this.props.Login.npreregno, this.props.Login.ntransactionsamplecode, this.props.Login.ntransactiontestcode, this.props.Login.selectedSampleData, this.props.Login.selectedSubSampleData, this.props.Login.selectedTestData, this.props.Login.masterData, this.state.nFlag)}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                    childDataResult: this.props.Login.data || this.props.Login.masterData.ReleaseSubSample || [],\r\n                    subChildDataResult: this.props.Login.data || this.props.Login.masterData.ReleaseTest || []\r\n\r\n\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData.ReleaseSample, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                    childDataResult: process(this.props.Login.masterData.RS_SubSample || [], this.state.dataState),\r\n                    subChildDataResult: process(this.props.Login.masterData.RS_Test || [], this.state.dataState),\r\n\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    selectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let npreregno = this.props.Login.npreregno || [];\r\n        let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        let selectedTestData = this.props.Login.selectedTestData || [];\r\n        let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\r\n        let subChildSelectAll = this.props.Login.subChildSelectAll || false;\r\n\r\n        let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\r\n        let selectedSampleData = this.props.Login.selectedSampleData || [];\r\n        let releaseSubSample = new Map();\r\n        let hasChild = true\r\n        let hasSubChild = true\r\n\r\n        dataResult.map((item, i) => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                item.selected = !event.dataItem.selected;\r\n                if (item.selected === true) {\r\n                    selectedSampleData.push({\r\n                        \"nregtypecode\": item.nregtypecode, \"nregsubtypecode\": item.nregsubtypecode,\r\n                        \"npreregno\": item.npreregno, \"ntranscode\": item.ntranscode, bFlag: \"1\"\r\n                    })\r\n                    subChildSelectAll = item.selected === true ? this.childHeaderSelectionChange(event) : false;\r\n\r\n                    if (hasChild === true) {\r\n\r\n                        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n                            item1.map(item => {\r\n                                if (item.npreregno === event.dataItem.npreregno) {\r\n                                    item.selected = true;\r\n                                }\r\n                                if (ntransactionsamplecode.length === 0) {\r\n                                    ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n                                }\r\n                                if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                                    ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n\r\n                                }\r\n                                selectedSubSampleData.push({\r\n                                    //         \"nregtypecode\": item.nregtypecode, \"nregsubtypecode\": item.nregsubtypecode,\r\n                                    \"npreregno\": item.npreregno, \"ntranscode\": item.ntranscode,\r\n                                    //\"ntransactionsamplecode\": item.ntransactionsamplecode,\r\n                                    bFlag: \"2\"\r\n                                })\r\n\r\n                            })\r\n                        })\r\n                    }\r\n\r\n                    Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n                        item1.map(item => {\r\n                            if (item.npreregno === event.dataItem.npreregno) {\r\n                                item.selected = true;\r\n                            }\r\n                            if (ntransactiontestcode.length === 0) {\r\n                                ntransactiontestcode.push(item.ntransactiontestcode);\r\n                            }\r\n                            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                                ntransactiontestcode.push(item.ntransactiontestcode);\r\n\r\n                            }\r\n\r\n                        })\r\n                    })\r\n\r\n                    if (npreregno.length === 0) {\r\n                        npreregno.push(item.npreregno);\r\n                    }\r\n                    if (!npreregno.includes(item.npreregno)) {\r\n                        npreregno.push(item.npreregno);\r\n\r\n                    }\r\n                    // if (ntransactionsamplecode.length===0) {\r\n                    //     ntransactionsamplecode.push(item.ntransactionsamplecode); \r\n                    // }\r\n                    // if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    //     ntransactionsamplecode.push(item.ntransactionsamplecode); \r\n\r\n                    // }\r\n                    // if (ntransactiontestcode.length===0) {\r\n                    //     ntransactiontestcode.push(item.ntransactiontestcode); \r\n                    // }\r\n                    // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                    //     ntransactiontestcode.push(item.ntransactiontestcode); \r\n\r\n                    // }\r\n                }\r\n                else {\r\n\r\n                    // const selectedSampleData1 = selectedSampleData.filter(item => item.npreregno !== event.dataItem.npreregno)\r\n                    // selectedSampleData = selectedSampleData1\r\n                    const ntransactiontestcode1 = []\r\n                    // ntransactiontestcode = ntransactiontestcode1\r\n                    Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n                        item1.map(item => {\r\n                            if (item.npreregno === event.dataItem.npreregno) {\r\n                                item.selected = false;\r\n                                // const selectedSubSampleData1 = selectedSubSampleData.filter(item => item.ntransactionsamplecode !== event.dataItem.ntransactionsamplecode)\r\n                                // selectedSubSampleData=selectedSubSampleData1\r\n                            }\r\n                        });\r\n                    })\r\n                    Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n                        item1.map(item => {\r\n                            if (item.npreregno === event.dataItem.npreregno) {\r\n                                item.selected = false;\r\n                                // const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode !== event.dataItem.ntransactiontestcode)\r\n                                // selectedTestData=selectedTestData1\r\n\r\n                            }\r\n                        })\r\n\r\n                    })\r\n                }\r\n\r\n\r\n            }\r\n            return item;\r\n        });\r\n\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item2 => {\r\n                if (item2.selected === true) {\r\n                    let a = selectedTestData.every(item3 => {\r\n                        return item3.ntransactiontestcode !== item2.ntransactiontestcode\r\n                    })\r\n                    if (a === true) {\r\n                        selectedTestData.push({\r\n                            \"npreregno\": item2.npreregno,\r\n                            \"ntransactionsamplecode\": item2.ntransactionsamplecode,\r\n                            \"ntransactiontestcode\": item2.ntransactiontestcode,\r\n\r\n                        })\r\n                        npreregno.push(item2.npreregno,\r\n\r\n                        )\r\n                        ntransactionsamplecode.push(item2.ntransactionsamplecode,\r\n\r\n                        )\r\n                        ntransactiontestcode.push(\r\n                            item2.ntransactiontestcode,\r\n\r\n                        )\r\n                    }\r\n                }\r\n                if (item2.selected === false) {\r\n                    const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    selectedTestData = selectedTestData1\r\n                    const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno)\r\n                    npreregno = npreregno1\r\n\r\n                    const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode)\r\n                    ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n                    const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    ntransactiontestcode = ntransactiontestcode1\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n\r\n                nFlag: \"1\",\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                npreregno: npreregno,\r\n                selectedSampleData: selectedSampleData,\r\n                selectedTestData: selectedTestData,\r\n                selectedSubSampleData: selectedSubSampleData,\r\n\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n        this.setState({\r\n            dataResult, selectedSampleData,\r\n            nFlag: \"1\"\r\n        });\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let selectedTestData = this.props.Login.selectedTestData || [];\r\n\r\n        let releaseSubSample = new Map();\r\n        let selectedSubSampleData = this.props.Login.selectedSubSampleData || [];\r\n        let npreregno = this.props.Login.npreregno || [];\r\n        let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        let hasSubChild = true\r\n        let subChildSelectAll = this.props.Login.subChildSelectAll || false;\r\n\r\n        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item1 => {\r\n            item1.map(item => {\r\n                if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    item.selected = !event.dataItem.selected;\r\n                    if (item.selected === true) {\r\n                        selectedSubSampleData.push({\r\n                            \"npreregno\": item.npreregno, \"ntranscode\": item.ntranscode,\r\n                            \"ntransactionsamplecode\": item.ntransactionsamplecode, bFlag: \"2\"\r\n                        })\r\n                        subChildSelectAll = item.selected === true ? this.childHeaderSelectionChange(event) : false;\r\n\r\n                        if (hasSubChild === true) {\r\n\r\n                            Object.values(this.props.Login.masterData.ReleaseTest).forEach(item8 => {\r\n                                item8.map(item9 => {\r\n\r\n                                    if (item9.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                                        item9.selected = true;\r\n                                    }\r\n                                    if (item9.selected === true) {\r\n                                        if (ntransactiontestcode.length === 0) {\r\n                                            ntransactiontestcode.push(item9.ntransactiontestcode);\r\n                                        }\r\n                                        if (!ntransactiontestcode.includes(item9.ntransactiontestcode)) {\r\n                                            ntransactiontestcode.push(item9.ntransactiontestcode);\r\n\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                })\r\n                            })\r\n                        }\r\n                        if (npreregno.length === 0) {\r\n                            npreregno.push(item.npreregno);\r\n                        }\r\n                        if (!npreregno.includes(item.npreregno)) {\r\n                            npreregno.push(item.npreregno);\r\n\r\n                        }\r\n                        if (ntransactionsamplecode.length === 0) {\r\n                            ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n                        }\r\n                        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                            ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n\r\n                        }\r\n                        // if (item.selected === true){\r\n                        //     if (ntransactiontestcode.length === 0) {\r\n                        //         ntransactiontestcode.push(item.ntransactiontestcode);\r\n                        //     }\r\n                        // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                        //     ntransactiontestcode.push(item.ntransactiontestcode);\r\n\r\n                        // }\r\n                        // }\r\n                        //    this.subChildSelectionChange(event);        \r\n                    }\r\n                    else {\r\n\r\n                       \r\n                        subChildSelectAll = false\r\n                        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n                            item1.map(item => {\r\n                                if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                                    item.selected = checked;\r\n                                }\r\n                            })\r\n\r\n\r\n                        })\r\n                        this.props.Login.masterData.ReleaseSample.map(item4 => {\r\n                            if (item4.npreregno === event.dataItem.npreregno) {\r\n\r\n                                item4.selected = checked\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                return item;\r\n            });\r\n        });\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item2 => {\r\n                if (item2.selected === true) {\r\n                    let a = selectedTestData.every(item3 => {\r\n                        return item3.ntransactiontestcode !== item2.ntransactiontestcode\r\n                    })\r\n                    if (a === true) {\r\n                        selectedTestData.push({\r\n                            \"npreregno\": item2.npreregno,\r\n                            \"ntransactionsamplecode\": item2.ntransactionsamplecode,\r\n                            \"ntransactiontestcode\": item2.ntransactiontestcode,\r\n\r\n                        })\r\n                        npreregno.push(item2.npreregno,\r\n\r\n                        )\r\n                        ntransactionsamplecode.push(item2.ntransactionsamplecode,\r\n\r\n                        )\r\n                        ntransactiontestcode.push(\r\n                            item2.ntransactiontestcode,\r\n\r\n                        )\r\n                    }\r\n                }\r\n                if (item2.selected === false) {\r\n                    const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    selectedTestData = selectedTestData1\r\n                    const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno)\r\n                    npreregno = npreregno1\r\n\r\n                    const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode)\r\n                    ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n                    const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    ntransactiontestcode = ntransactiontestcode1\r\n                }\r\n            })\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                data: undefined, dataState: undefined,\r\n                masterData: { ...this.props.Login.masterData, ...releaseSubSample },\r\n                selectedSubSampleData: selectedSubSampleData,\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                selectedTestData: selectedTestData,\r\n                subChildSelectAll: subChildSelectAll,\r\n                npreregno: npreregno,\r\n                nFlag: \"2\",\r\n\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    subChildSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let releaseTest = new Map();\r\n        let selectedTestData = this.props.Login.selectedTestData || [];\r\n        let ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        let ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        let npreregno = this.props.Login.npreregno || [];\r\n        let dataResult = this.state.dataResult.data && this.state.dataResult.data || this.state.dataResult || [];\r\n\r\n        let subChildSelectAll = false\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item => {\r\n                if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                    item.selected = !event.dataItem.selected;\r\n                    if (item.selected === true) {\r\n\r\n                        subChildSelectAll = item.selected === true ? this.subChildHeaderSelectionChange(event) : false;\r\n                    // this.childSelectionChange(event) erSelectionChange(event) : false;\r\n                    // this.childSelectionChange(event) \r\n\r\n\r\n                        if (npreregno.length === 0) {\r\n                            npreregno.push(item.npreregno);\r\n                        }\r\n                        if (!npreregno.includes(item.npreregno)) {\r\n                            npreregno.push(item.npreregno);\r\n\r\n                        }\r\n                        if (ntransactionsamplecode.length === 0) {\r\n                            ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n                        }\r\n                        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                            ntransactionsamplecode.push(item.ntransactionsamplecode);\r\n\r\n                        }\r\n                        if (ntransactiontestcode.length === 0) {\r\n                            ntransactiontestcode.push(item.ntransactiontestcode);\r\n                        }\r\n                        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                            ntransactiontestcode.push(item.ntransactiontestcode);\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item2 => {\r\n                            item2.map(item3 => {\r\n                                if (item3.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n\r\n                                    item3.selected = checked\r\n                                }\r\n                            })\r\n                        })\r\n                        this.props.Login.masterData.ReleaseSample.map(item4 => {\r\n                            if (item4.npreregno === event.dataItem.npreregno) {\r\n\r\n                                item4.selected = checked\r\n                            }\r\n                        })\r\n\r\n\r\n                        // const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode !== event.dataItem.ntransactiontestcode)\r\n                        // selectedTestData = selectedTestData1\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                return item;\r\n            });\r\n        });\r\n        Object.values(this.props.Login.masterData.ReleaseTest).forEach(item1 => {\r\n            item1.map(item2 => {\r\n                if (item2.selected === true) {\r\n                    let a = selectedTestData.every(item3 => {\r\n                        return item3.ntransactiontestcode !== item2.ntransactiontestcode\r\n                    })\r\n                    if (a === true) {\r\n                        selectedTestData.push({\r\n                            \"npreregno\": item2.npreregno,\r\n                            \"ntransactionsamplecode\": item2.ntransactionsamplecode,\r\n                            \"ntransactiontestcode\": item2.ntransactiontestcode,\r\n\r\n                        })\r\n                        npreregno.push(item2.npreregno,\r\n\r\n                        )\r\n                        ntransactionsamplecode.push(item2.ntransactionsamplecode,\r\n\r\n                        )\r\n                        ntransactiontestcode.push(\r\n                            item2.ntransactiontestcode,\r\n\r\n                        )\r\n                    }\r\n\r\n\r\n                }\r\n                if (item2.selected === false) {\r\n                    const selectedTestData1 = selectedTestData.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    selectedTestData = selectedTestData1\r\n                    const npreregno1 = npreregno.filter(item => item.npreregno === item2.npreregno)\r\n                    npreregno = npreregno1\r\n\r\n                    const ntransactionsamplecode1 = ntransactionsamplecode.filter(item => item.ntransactionsamplecode === item2.ntransactionsamplecode)\r\n                    ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n                    const ntransactiontestcode1 = ntransactiontestcode.filter(item => item.ntransactiontestcode === item2.ntransactiontestcode)\r\n                    ntransactiontestcode = ntransactiontestcode1\r\n                }\r\n            })\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                data: undefined, dataState: undefined,\r\n                masterData: { ...this.props.Login.masterData, ...releaseTest },\r\n                selectedTestData: selectedTestData,\r\n                nFlag: \"3\", ntransactiontestcode: ntransactiontestcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                npreregno: npreregno,\r\n                subChildSelectAll: subChildSelectAll\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.setState({\r\n            dataResult,\r\n            nFlag: \"1\"\r\n        });\r\n    }\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"coarelease\",\r\n            methodUrl: \"COARelease\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, updateStore, validateEsignCredential, getSubSampleBySample, getReleaseSelectedSamples, getReleaseSelectedSubSamples, getTestBySample, getReleaseSelectedTest, getReleaseSelectedSampleSubSampleTest })(injectIntl(COARelease));"]},"metadata":{},"sourceType":"module"}