{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';//, getComboLabelValue, searchData\nimport{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getMAHolderDetail(maHolder,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\",{nmahcode:maHolder.nmahcode,\"userinfo\":userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response}));}});};}export function getMAHolderComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode){return function(dispatch){if(operation===\"create\"||operation===\"update\"&&masterData.SelectedMAHolder.ntransactionstatus!==transactionStatus.RETIRED){var countryService=rsapi.post(\"country/getCountry\",{userinfo:userInfo});var urlArray=[];if(operation===\"create\"){urlArray=[countryService];}else{var _rsapi$post;var holderById=rsapi.post(\"marketauthorisationholder/getActiveMarketAuthorisationHolderById\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post));urlArray=[countryService,holderById];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var country=[];var selectedRecord={};if(operation===\"update\"){selectedRecord=response[1].data;country.push({\"value\":response[1].data[\"ncountrycode\"],\"label\":response[1].data[\"scountryname\"]});selectedRecord[\"ncountrycode\"]=country[0];}else{selectedRecord[\"ntransactionstatus\"]=1;}dispatch({type:DEFAULT_RETURN,payload:{countryList:response[0].data||[],operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{//toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\ntoast.warn(intl.formatMessage({id:masterData.SelectedMAHolder.stranstatus}));}};}export function getMAHContactComboDataService(inputparam){return function(dispatch){if(inputparam.masterData.SelectedMAHolder.ntransactionstatus!==transactionStatus.RETIRED){var contactData={\"nmahcontactcode\":inputparam.primaryKeyValue,nmahcode:inputparam.masterData.SelectedMAHolder.nmahcode,\"userinfo\":inputparam.userInfo};var contactService=rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\",contactData);var urlArray=[];var selectedId=null;if(inputparam.operation===\"create\"){urlArray=[contactService];}else{var _rsapi$post2;var contactById=rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,inputparam.primaryKeyField,inputparam.primaryKeyValue),_defineProperty(_rsapi$post2,\"userinfo\",inputparam.userInfo),_rsapi$post2));urlArray=[contactService,contactById];selectedId=inputparam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){//let role = [];\nvar selectedRecord={};if(inputparam.operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"nmahcontactcode\"]=response[1].data[\"nmahcontactcode\"];}else{selectedRecord[\"sphoneno\"]=\"\";selectedRecord[\"smobileno\"]=\"\";selectedRecord[\"sfaxno\"]=\"\";}dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,openChildModal:true,operation:inputparam.operation,screenName:inputparam.screenName,ncontrolCode:inputparam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{//toast.warn(this.props.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\ntoast.warn(intl.formatMessage({id:inputparam.masterData.SelectedMAHolder.stranstatus}));}};}// export function filterColumnDataMAHolder(filterValue, masterData, userInfo) {\n//     return function (dispatch) {\n//         let mahCode = 0;\n//         let searchedData = undefined;\n//         if (filterValue === \"\") {\n//             mahCode = masterData[\"MAHolder\"][0].nmahcode;\n//         }\n//         else {\n//             searchedData = searchData(filterValue, masterData[\"MAHolder\"], \"smahname\");\n//             if (searchedData.length > 0) {\n//                 mahCode = searchedData[0].nmahcode;\n//             }\n//             else {\n//                 masterData[\"MAHolder\"] = [];\n//                 masterData[\"MAHContact\"] = [];\n//                 masterData[\"SelectedMAHolder\"] = [];\n//                 masterData[\"searchedData\"] = [];\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\n//             }\n//         }\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", { nmahcode: mahCode, userinfo: userInfo })\n//             .then(response => {\n//                 masterData[\"MAHolder\"] = response.data[\"MAHolder\"];\n//                 masterData[\"MAHContact\"] = response.data[\"MAHContact\"];\n//                 masterData[\"SelectedMAHolder\"] = response.data[\"SelectedMAHolder\"];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/MAHolderAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","Axios","initRequest","intl","transactionStatus","getMAHolderDetail","maHolder","userInfo","masterData","dispatch","post","nmahcode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getMAHolderComboService","screenName","operation","primaryKeyName","primaryKeyValue","ncontrolCode","SelectedMAHolder","ntransactionstatus","RETIRED","countryService","userinfo","urlArray","holderById","all","country","selectedRecord","push","countryList","openModal","stranstatus","getMAHContactComboDataService","inputparam","contactData","contactService","selectedId","contactById","primaryKeyField","openChildModal"],"mappings":"qXAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,QAAT,KAAyB,4BAAzB,CAAqD;AACrD,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,iBAAT,KAAkC,2BAAlC,CAEA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,QAA3B,CAAqCC,QAArC,CAA+CC,UAA/C,CAA2D,CAC9D,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACP,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOL,CAAAA,KAAK,CAACa,IAAN,CAAW,wDAAX,CAAqE,CACxEC,QAAQ,CAAEL,QAAQ,CAACK,QADqD,CAExE,WAAYJ,QAF4D,CAArE,EAIFK,IAJE,CAIG,SAAAC,QAAQ,CAAI,CAEdL,UAAU,gCAAQA,UAAR,EAAuBK,QAAQ,CAACC,IAAhC,CAAV,CACAf,QAAQ,CAACS,UAAD,CAAR,CACAC,QAAQ,CAAC,CAAEM,IAAI,CAAEjB,cAAR,CAAwBkB,OAAO,CAAE,CAAER,UAAU,CAAVA,UAAF,CAAcS,OAAO,CAAE,KAAvB,CAAjC,CAAD,CAAR,CAEH,CAVE,EAWFC,KAXE,CAWI,SAAAC,KAAK,CAAI,CACZV,QAAQ,CAAC,CAAEM,IAAI,CAAEjB,cAAR,CAAwBkB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACN,QAAN,CAAeO,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpB,KAAK,CAACmB,KAAN,CAAYhB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACI,OAAZ,CAAnB,CAAZ,EACH,CAFD,IAGK,CAEDvB,KAAK,CAACwB,IAAN,CAAWrB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACN,QAAZ,CAAnB,CAAX,EACH,CAEJ,CArBE,CAAP,CAsBH,CAxBD,CAyBH,CAED,MAAO,SAASY,CAAAA,uBAAT,CAAiCC,UAAjC,CAA6CC,SAA7C,CAAwDC,cAAxD,CAAwEC,eAAxE,CAAyFrB,UAAzF,CAAqGD,QAArG,CAA+GuB,YAA/G,CAA6H,CAChI,MAAO,UAAUrB,QAAV,CAAoB,CAEvB,GAAIkB,SAAS,GAAK,QAAd,EAA2BA,SAAS,GAAK,QAAd,EAA0BnB,UAAU,CAACuB,gBAAX,CAA4BC,kBAA5B,GAAmD5B,iBAAiB,CAAC6B,OAA9H,CAAwI,CAIpI,GAAMC,CAAAA,cAAc,CAAGrC,KAAK,CAACa,IAAN,CAAW,oBAAX,CAAiC,CAAEyB,QAAQ,CAAE5B,QAAZ,CAAjC,CAAvB,CAGA,GAAI6B,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIT,SAAS,GAAK,QAAlB,CAA4B,CAExBS,QAAQ,CAAG,CAACF,cAAD,CAAX,CACH,CAHD,IAIK,iBACD,GAAMG,CAAAA,UAAU,CAAGxC,KAAK,CAACa,IAAN,CAAW,kEAAX,6CAAkFkB,cAAlF,CAAmGC,eAAnG,8BAAoH,UAApH,CAAgItB,QAAhI,eAAnB,CAEA6B,QAAQ,CAAG,CAACF,cAAD,CAAiBG,UAAjB,CAAX,CACH,CACD5B,QAAQ,CAACP,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACqC,GAAN,CAAUF,QAAV,EACKxB,IADL,CACU,SAAAC,QAAQ,CAAI,CAGd,GAAI0B,CAAAA,OAAO,CAAG,EAAd,CAEA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAEA,GAAIb,SAAS,GAAK,QAAlB,CAA4B,CACxBa,cAAc,CAAG3B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CAEAyB,OAAO,CAACE,IAAR,CAAa,CAAE,QAAS5B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,cAAjB,CAAX,CAA6C,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,cAAjB,CAAtD,CAAb,EAGA0B,cAAc,CAAC,cAAD,CAAd,CAAiCD,OAAO,CAAC,CAAD,CAAxC,CAGH,CATD,IAUK,CACDC,cAAc,CAAC,oBAAD,CAAd,CAAuC,CAAvC,CAGH,CAGD/B,QAAQ,CAAC,CACLM,IAAI,CAAEjB,cADD,CACiBkB,OAAO,CAAE,CAC3B0B,WAAW,CAAE7B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EADN,CAG3Ba,SAAS,CAATA,SAH2B,CAGhBD,UAAU,CAAVA,UAHgB,CAGJc,cAAc,CAAdA,cAHI,CAGYG,SAAS,CAAE,IAHvB,CAI3Bb,YAAY,CAAZA,YAJ2B,CAIbb,OAAO,CAAE,KAJI,CAD1B,CAAD,CAAR,CAQH,CAjCL,EAkCKC,KAlCL,CAkCW,SAAAC,KAAK,CAAI,CACZV,QAAQ,CAAC,CAAEM,IAAI,CAAEjB,cAAR,CAAwBkB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACN,QAAN,CAAeO,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpB,KAAK,CAACmB,KAAN,CAAYhB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACI,OAAZ,CAAnB,CAAZ,EACH,CAFD,IAGK,CAEDvB,KAAK,CAACwB,IAAN,CAAWrB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACN,QAAN,CAAeC,IAArB,CAAnB,CAAX,EACH,CACJ,CA3CL,EA4CH,CA9DD,IA+DK,CACD;AACAd,KAAK,CAACwB,IAAN,CAAWrB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEd,UAAU,CAACuB,gBAAX,CAA4Ba,WAAlC,CAAnB,CAAX,EACH,CACJ,CArED,CAsEH,CAGD,MAAO,SAASC,CAAAA,6BAAT,CAAuCC,UAAvC,CAAmD,CACtD,MAAO,UAAUrC,QAAV,CAAoB,CACvB,GAAIqC,UAAU,CAACtC,UAAX,CAAsBuB,gBAAtB,CAAuCC,kBAAvC,GAA8D5B,iBAAiB,CAAC6B,OAApF,CAA6F,CAEzF,GAAMc,CAAAA,WAAW,CAAG,CAChB,kBAAmBD,UAAU,CAACjB,eADd,CAC+BlB,QAAQ,CAAEmC,UAAU,CAACtC,UAAX,CAAsBuB,gBAAtB,CAAuCpB,QADhF,CAEhB,WAAYmC,UAAU,CAACvC,QAFP,CAApB,CAKA,GAAMyC,CAAAA,cAAc,CAAGnD,KAAK,CAACa,IAAN,CAAW,sEAAX,CAAmFqC,WAAnF,CAAvB,CAEA,GAAIX,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIa,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAIH,UAAU,CAACnB,SAAX,GAAyB,QAA7B,CAAuC,CACnCS,QAAQ,CAAG,CAACY,cAAD,CAAX,CACH,CAFD,IAGK,kBACD,GAAME,CAAAA,WAAW,CAAGrD,KAAK,CAACa,IAAN,CAAW,gFAAX,+CAAgGoC,UAAU,CAACK,eAA3G,CAA6HL,UAAU,CAACjB,eAAxI,+BAAyJ,UAAzJ,CAAqKiB,UAAU,CAACvC,QAAhL,gBAApB,CACA6B,QAAQ,CAAG,CAACY,cAAD,CAAiBE,WAAjB,CAAX,CACAD,UAAU,CAAGH,UAAU,CAACjB,eAAxB,CACH,CACDpB,QAAQ,CAACP,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACqC,GAAN,CAAUF,QAAV,EACKxB,IADL,CACU,SAAAC,QAAQ,CAAI,CAEd;AACA,GAAI2B,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIM,UAAU,CAACnB,SAAX,GAAyB,QAA7B,CAAuC,CACnCa,cAAc,CAAG3B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CAGA0B,cAAc,CAAC,iBAAD,CAAd,CAAoC3B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,iBAAjB,CAApC,CAEH,CAND,IAMO,CACH0B,cAAc,CAAC,UAAD,CAAd,CAA6B,EAA7B,CACAA,cAAc,CAAC,WAAD,CAAd,CAA8B,EAA9B,CACAA,cAAc,CAAC,QAAD,CAAd,CAA2B,EAA3B,CACH,CAED/B,QAAQ,CAAC,CACLM,IAAI,CAAEjB,cADD,CACiBkB,OAAO,CAAE,CAE3BwB,cAAc,CAAdA,cAF2B,CAEXY,cAAc,CAAE,IAFL,CAG3BzB,SAAS,CAAEmB,UAAU,CAACnB,SAHK,CAGMD,UAAU,CAAEoB,UAAU,CAACpB,UAH7B,CAI3BI,YAAY,CAAEgB,UAAU,CAAChB,YAJE,CAIYb,OAAO,CAAE,KAJrB,CAI4BgC,UAAU,CAAVA,UAJ5B,CAD1B,CAAD,CAAR,CAQH,CAzBL,EA0BK/B,KA1BL,CA0BW,SAAAC,KAAK,CAAI,CACZV,QAAQ,CAAC,CAAEM,IAAI,CAAEjB,cAAR,CAAwBkB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACN,QAAN,CAAeO,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpB,KAAK,CAACmB,KAAN,CAAYhB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACI,OAAZ,CAAnB,CAAZ,EACH,CAFD,IAGK,CAEDvB,KAAK,CAACwB,IAAN,CAAWrB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEH,KAAK,CAACN,QAAN,CAAeC,IAArB,CAAnB,CAAX,EACH,CACJ,CAnCL,EAoCH,CAxDD,IAyDK,CACD;AACAd,KAAK,CAACwB,IAAN,CAAWrB,IAAI,CAACkB,aAAL,CAAmB,CAAEC,EAAE,CAAEwB,UAAU,CAACtC,UAAX,CAAsBuB,gBAAtB,CAAuCa,WAA7C,CAAnB,CAAX,EACH,CACJ,CA9DD,CA+DH,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript'//, getComboLabelValue, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getMAHolderDetail(maHolder, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", {\r\n            nmahcode: maHolder.nmahcode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getMAHolderComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if (operation === \"create\" || (operation === \"update\" && masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n\r\n\r\n\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: userInfo });\r\n\r\n\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n\r\n                urlArray = [countryService];\r\n            }\r\n            else {\r\n                const holderById = rsapi.post(\"marketauthorisationholder/getActiveMarketAuthorisationHolderById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });\r\n\r\n                urlArray = [countryService, holderById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let country = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n\r\n\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n\r\n                    }\r\n                    else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getMAHContactComboDataService(inputparam) {\r\n    return function (dispatch) {\r\n        if (inputparam.masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n            const contactData = {\r\n                \"nmahcontactcode\": inputparam.primaryKeyValue, nmahcode: inputparam.masterData.SelectedMAHolder.nmahcode,\r\n                \"userinfo\": inputparam.userInfo\r\n\r\n            };\r\n            const contactService = rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\", contactData);\r\n\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (inputparam.operation === \"create\") {\r\n                urlArray = [contactService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\", { [inputparam.primaryKeyField]: inputparam.primaryKeyValue, \"userinfo\": inputparam.userInfo });\r\n                urlArray = [contactService, contactById];\r\n                selectedId = inputparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                    //let role = [];\r\n                    let selectedRecord = {};\r\n                    if (inputparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nmahcontactcode\"] = response[1].data[\"nmahcontactcode\"];\r\n\r\n                    } else {\r\n                        selectedRecord[\"sphoneno\"] = \"\";\r\n                        selectedRecord[\"smobileno\"] = \"\";\r\n                        selectedRecord[\"sfaxno\"] = \"\";\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n\r\n                            selectedRecord, openChildModal: true,\r\n                            operation: inputparam.operation, screenName: inputparam.screenName,\r\n                            ncontrolCode: inputparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n// export function filterColumnDataMAHolder(filterValue, masterData, userInfo) {\r\n//     return function (dispatch) {\r\n\r\n//         let mahCode = 0;\r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\") {\r\n//             mahCode = masterData[\"MAHolder\"][0].nmahcode;\r\n//         }\r\n//         else {\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"MAHolder\"], \"smahname\");\r\n\r\n//             if (searchedData.length > 0) {\r\n//                 mahCode = searchedData[0].nmahcode;\r\n//             }\r\n//             else {\r\n//                 masterData[\"MAHolder\"] = [];\r\n//                 masterData[\"MAHContact\"] = [];\r\n//                 masterData[\"SelectedMAHolder\"] = [];\r\n\r\n//                 masterData[\"searchedData\"] = [];\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\r\n//             }\r\n\r\n//         }\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", { nmahcode: mahCode, userinfo: userInfo })\r\n//             .then(response => {\r\n//                 masterData[\"MAHolder\"] = response.data[\"MAHolder\"];\r\n//                 masterData[\"MAHContact\"] = response.data[\"MAHContact\"];\r\n//                 masterData[\"SelectedMAHolder\"] = response.data[\"SelectedMAHolder\"];\r\n\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}