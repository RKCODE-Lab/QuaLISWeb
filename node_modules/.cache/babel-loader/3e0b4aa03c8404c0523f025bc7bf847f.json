{"ast":null,"code":"import { blockNodes, addStyles, changeTextBlock } from './blockNode';\n/**\n * Aligning block elements in the selection.\n *\n * @returns {boolean} - Returns true if any alignment is applied.\n */\n\nexport var alignBlocks = function alignBlocks(actions, commandName) {\n  return function (state, dispatch) {\n    var blocks = blockNodes(state);\n    var tr = state.tr;\n    tr.setMeta('commandName', commandName);\n    blocks.forEach(function (node) {\n      if (node.type.isTextblock) {\n        var newAttrs = {};\n        var action = actions.find(function (n) {\n          return n.node === node.type.name;\n        });\n\n        if (action) {\n          newAttrs = addStyles(node, action.style);\n        }\n\n        changeTextBlock(tr, node, node.type, newAttrs);\n      }\n    });\n    var result = tr.docChanged;\n\n    if (result) {\n      dispatch(tr.scrollIntoView());\n    }\n\n    return result;\n  };\n};\nexport var isAligned = function isAligned(state, actions) {\n  var blocks = blockNodes(state);\n  var result = false;\n  blocks.forEach(function (node) {\n    if (!result && node.type.isTextblock && node.attrs.style) {\n      var action = actions.find(function (a) {\n        return a.node === node.type.name;\n      });\n\n      if (action) {\n        result = action.style.every(function (style) {\n          return !!style.value && new RegExp(style.name + \":\\\\s?\" + style.value, 'i').test(node.attrs.style);\n        });\n      }\n    }\n  });\n  return result;\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/align.js"],"names":["blockNodes","addStyles","changeTextBlock","alignBlocks","actions","commandName","state","dispatch","blocks","tr","setMeta","forEach","node","type","isTextblock","newAttrs","action","find","n","name","style","result","docChanged","scrollIntoView","isAligned","attrs","a","every","value","RegExp","test"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,eAAhC,QAAuD,aAAvD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,OAAV,EAAmBC,WAAnB,EAAgC;AAAE,SAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACzF,QAAIC,MAAM,GAAGR,UAAU,CAACM,KAAD,CAAvB;AACA,QAAIG,EAAE,GAAGH,KAAK,CAACG,EAAf;AACAA,IAAAA,EAAE,CAACC,OAAH,CAAW,aAAX,EAA0BL,WAA1B;AACAG,IAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,IAAV,EAAgB;AAC3B,UAAIA,IAAI,CAACC,IAAL,CAAUC,WAAd,EAA2B;AACvB,YAAIC,QAAQ,GAAG,EAAf;AACA,YAAIC,MAAM,GAAGZ,OAAO,CAACa,IAAR,CAAa,UAAUC,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAACN,IAAF,KAAWA,IAAI,CAACC,IAAL,CAAUM,IAA5B;AAAmC,SAA/D,CAAb;;AACA,YAAIH,MAAJ,EAAY;AACRD,UAAAA,QAAQ,GAAGd,SAAS,CAACW,IAAD,EAAOI,MAAM,CAACI,KAAd,CAApB;AACH;;AACDlB,QAAAA,eAAe,CAACO,EAAD,EAAKG,IAAL,EAAWA,IAAI,CAACC,IAAhB,EAAsBE,QAAtB,CAAf;AACH;AACJ,KATD;AAUA,QAAIM,MAAM,GAAGZ,EAAE,CAACa,UAAhB;;AACA,QAAID,MAAJ,EAAY;AACRd,MAAAA,QAAQ,CAACE,EAAE,CAACc,cAAH,EAAD,CAAR;AACH;;AACD,WAAOF,MAAP;AACH,GAnB0D;AAmBvD,CAnBG;AAoBP,OAAO,IAAIG,SAAS,GAAG,SAAZA,SAAY,CAAUlB,KAAV,EAAiBF,OAAjB,EAA0B;AAC7C,MAAII,MAAM,GAAGR,UAAU,CAACM,KAAD,CAAvB;AACA,MAAIe,MAAM,GAAG,KAAb;AACAb,EAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,IAAV,EAAgB;AAC3B,QAAI,CAACS,MAAD,IAAWT,IAAI,CAACC,IAAL,CAAUC,WAArB,IAAoCF,IAAI,CAACa,KAAL,CAAWL,KAAnD,EAA0D;AACtD,UAAIJ,MAAM,GAAGZ,OAAO,CAACa,IAAR,CAAa,UAAUS,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACd,IAAF,KAAWA,IAAI,CAACC,IAAL,CAAUM,IAA5B;AAAmC,OAA/D,CAAb;;AACA,UAAIH,MAAJ,EAAY;AACRK,QAAAA,MAAM,GAAGL,MAAM,CAACI,KAAP,CAAaO,KAAb,CAAmB,UAAUP,KAAV,EAAiB;AACzC,iBAAO,CAAC,CAACA,KAAK,CAACQ,KAAR,IAAiB,IAAIC,MAAJ,CAAWT,KAAK,CAACD,IAAN,GAAa,OAAb,GAAuBC,KAAK,CAACQ,KAAxC,EAA+C,GAA/C,EAAoDE,IAApD,CAAyDlB,IAAI,CAACa,KAAL,CAAWL,KAApE,CAAxB;AACH,SAFQ,CAAT;AAGH;AACJ;AACJ,GATD;AAUA,SAAOC,MAAP;AACH,CAdM","sourcesContent":["import { blockNodes, addStyles, changeTextBlock } from './blockNode';\n/**\n * Aligning block elements in the selection.\n *\n * @returns {boolean} - Returns true if any alignment is applied.\n */\nexport var alignBlocks = function (actions, commandName) { return function (state, dispatch) {\n    var blocks = blockNodes(state);\n    var tr = state.tr;\n    tr.setMeta('commandName', commandName);\n    blocks.forEach(function (node) {\n        if (node.type.isTextblock) {\n            var newAttrs = {};\n            var action = actions.find(function (n) { return n.node === node.type.name; });\n            if (action) {\n                newAttrs = addStyles(node, action.style);\n            }\n            changeTextBlock(tr, node, node.type, newAttrs);\n        }\n    });\n    var result = tr.docChanged;\n    if (result) {\n        dispatch(tr.scrollIntoView());\n    }\n    return result;\n}; };\nexport var isAligned = function (state, actions) {\n    var blocks = blockNodes(state);\n    var result = false;\n    blocks.forEach(function (node) {\n        if (!result && node.type.isTextblock && node.attrs.style) {\n            var action = actions.find(function (a) { return a.node === node.type.name; });\n            if (action) {\n                result = action.style.every(function (style) {\n                    return !!style.value && new RegExp(style.name + \":\\\\s?\" + style.value, 'i').test(node.attrs.style);\n                });\n            }\n        }\n    });\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}