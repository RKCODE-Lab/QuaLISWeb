{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\Instrument.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter, filterColumnData } from '../../actions';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport AddInstrument from '../../pages/instrumentmanagement/AddInstrument';\nimport AddInstrumentSection from '../../pages/instrumentmanagement/AddInstrumentSection';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes'; //import SlideOutModal from '../../components/SlideOutModal';\n\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport Esign from '../audittrail/Esign';\nimport { showEsign, getControlMap, constructOptionList, formatInputDate } from '../../components/CommonScript'; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport InstrumentSectionTab from './InstrumentSectionTab';\nimport { process } from '@progress/kendo-data-query'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport InstrumentCategoryFilter from './InstrumentCategoryFilter';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport ReactTooltip from 'react-tooltip';\nimport InstrumentValidationTab from './InstrumentValidationTab';\nimport AddInstrumentValidation from '../../pages/instrumentmanagement/AddInstrumentValidation';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Instrument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let instSection = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n        let postParam = undefined;\n        let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"nsuppliercode\", \"nservicecode\", \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\", \"smodelnumber\", \"spono\", //\"stzmanufdate\",\"stzpodate\",\"stzreceivedate\",\"stzinstallationdate\",\"stzexpirydate\",\n        //\"dmanufacdate\",\"dpodate\", \"dreceiveddate\", \"dinstallationdate\",\"dexpirydate\",\n        \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\", \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\n        inputData[\"instrument\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\"\n          };\n          inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          });\n        } else {\n          inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\n          inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA; // inputData[\"instrumentsection\"]=this.props.Login.userInfo.nusercode;\n          // inputData[\"instrumentsection\"][\"ninstrumentcode\"]=this.state.selectedRecord[\"ninstrumentcode\"]?this.state.selectedRecord[\"ninstrumentcode\"]:\"\";\n          // inputData[\"instrumentsection\"][\"nsectioncode\"]=this.state.selectedRecord[\"nsectioncode\"]?this.state.selectedRecord[\"nsectioncode\"]:\"\";\n\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item];\n          });\n        }\n\n        inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\n        inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n\n        if (this.state.selectedRecord[\"dpodate\"]) {\n          inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dreceiveddate\"]) {\n          inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dinstallationdate\"]) {\n          inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpirydate\"]) {\n          inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dmanufacdate\"]) {\n          inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\n        }\n\n        inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\n\n        if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\n          if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\n            this.state.selectedRecord[\"nusercode\"].map(item => {\n              return instSection.push({\n                nusercode: item.value // nsitecode:this.props.Login.masterData.SelectedOrgSite.nsitecode\n\n              });\n            });\n            inputData[\"instrumentsection\"] = instSection;\n          }\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Instrument\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_SECTION\") {\n        inputData[\"instrumentsection\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Section\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.defaultRecord = defaultParam => {\n      const methodUrl = defaultParam.methodUrl;\n      let dataItem = defaultParam.selectedRecord;\n      dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\n      let dataState = undefined;\n\n      if (defaultParam.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          [methodUrl]: dataItem,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl,\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Test\",\n            operation: defaultParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.onSwitchChange = (item, key, methodUrl) => {\n      let dataItem = item;\n      dataItem[\"ndefaultstatus\"] = 3;\n      const inputParam = {\n        inputData: {\n          [key]: dataItem,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"testmaster\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\n    };\n\n    this.DeleteInstrument = (operation, ncontrolCode) => {\n      let inputData = [];\n\n      if (operation.screenName === \"IDS_SECTION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"instrumentsection\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\n        inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"Section\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Instrument\",\n          postParam,\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\"\n        };\n        const masterData = this.props.Login.masterData; // this.props.crudMaster(inputParam, this.props.Login.masterData);\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n        sectionDataState: event.dataState\n      });\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\n      const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\n      tabMap.set(\"IDS_SECTION\", /*#__PURE__*/React.createElement(InstrumentSectionTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights //dataResult={this.state.dataResult}\n        //dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\n        // dataState={this.state.sectionDataState}\n        //dataStateChange={this.dataStateChange}\n        ,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedSection\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultSecId: defaultSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentSection: this.props.Login.masterData.selectedSection || [],\n        screenName: \"IDS_SECTION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTVALIDATION\", /*#__PURE__*/React.createElement(InstrumentValidationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights //     dataResult={this.state.dataResult}\n        //    dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\n        //    dataState={this.state.sectionDataState}\n        //     dataStateChange={this.dataStateChange}\n        ,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedInstrumentValidation\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentValidation: this.props.Login.masterData.selectedInstrumentValidation || [],\n        screenName: \"IDS_INSTRUMENTVALIDATION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 47\n        }\n      }));\n      return tabMap;\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstrument(\"delete\", deleteId, \"IDS_INSTRUMENT\"));\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n\n        switch (caseNo) {\n          case 1:\n            selectedRecord[fieldName] = comboData;\n            this.setState({\n              selectedRecord\n            });\n            break;\n\n          case 2:\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"nsectionusercode\"] = comboData.value; // this.setState({ selectedRecord });\n            // selectedRecord[fieldName] = comboData;\n            // this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.selectedRecord.nsectioncode);\n\n            this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n            break;\n\n          case 3:\n            let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n            nfilterInstrumentCategory = comboData;\n            this.searchRef.current.value = \"\";\n            this.setState({\n              nfilterInstrumentCategory\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        } // data: {openModal, loadEsign, selectedRecord}\n\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"\n        }));\n      }\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedInstrument: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      sectionDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstrumentname\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n      mandatoryFields.push({\n        \"mandatory\": true,\n        \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n        \"dataField\": \"ninstrumentcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_INSTRUMENTID\",\n        \"dataField\": \"sinstrumentid\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_INSTRUMENTNAME\",\n        \"dataField\": \"sinstrumentname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SUPPLIER\",\n        \"dataField\": \"nsuppliercode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SERVICEBY\",\n        \"dataField\": \"nservicecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SERIALNO\",\n        \"dataField\": \"sserialno\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_INSTRUMENTSTATUS\",\n        \"dataField\": \"ntranscode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      } // { \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"susername\" } \n      );\n\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\n        mandatoryFields.push({\n          \"mandatory\": true,\n          \"idsName\": \"IDS_INCHARGE\",\n          \"dataField\": \"nusercode\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      }\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") mandatoryFields.push({\n      \"mandatory\": true,\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"nsectioncode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"mandatory\": true,\n      \"idsName\": \"IDS_INCHARGE\",\n      \"dataField\": \"nusercode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }); // let userStatusCSS = \"\";\n    // let activeIconCSS = \"fa fa-check\";\n    // if (this.props.Login.masterData.selectedInstrument && this.props.Login.masterData.selectedInstrument.sdefaultstatus === transactionStatus.YES) {\n    //     userStatusCSS = \"outline-success\";\n    // }\n    // else{\n    //     userStatusCSS = \"outline-danger\";\n    // }\n\n\n    const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode; // const editParam = { screenName:\"Instrument\", operation:\"update\", primaryKeyName:\"ninstrumentcode\", masterData:this.props.Login.masterData, userInfo:this.props.Login.userInfo, \n    // ncontrolcode:editId, inputListName :\"Instrument\", selectedObject : \"SelectedInstrument\"};\n\n    const {\n      selectedInstrument\n    } = this.props.Login.masterData;\n    const filterParam = {\n      inputListName: \"Instrument\",\n      selectedObject: \"selectedInstrument\",\n      primaryKeyField: \"ninstrumentcode\",\n      fetchUrl: \"instrument/getInstrument\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Instrument\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument,\n      getMasterDetail: Instrument => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstrument,\n      primaryKeyField: \"ninstrumentcode\",\n      mainField: \"sinstrumentname\",\n      firstField: \"sinstrumentid\",\n      secondField: \"sinstrumentcatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights //searchListName=\"searchedInstrument\"\n      ,\n      searchRef: this.searchRef // filterParam={filterParam}\n      ,\n      addId: addId,\n      hidePaging: true,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_INSTRUMENTCATEGORYFILTER\": /*#__PURE__*/React.createElement(InstrumentCategoryFilter, {\n          filterInstrumentCategory: this.state.filterInstrumentCategory || [],\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedInstrument ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\" // onClick = {()=>this.props.(editParam)}\n      ,\n      onClick: e => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 73\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTNAME\",\n      message: \"Instrumentname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTID\",\n      message: \"Instrument Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEFAULTSTATUS\",\n      message: \"Default Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdefaultstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MODELNO\",\n      message: \"Modelno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.smodelnumber))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PONO\",\n      message: \"PO No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.spono))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURERDATE\",\n      message: \"ManufactureDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.smanufacdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PODATE\",\n      message: \"PoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? '-' : this.props.Login.masterData.selectedInstrument.spodate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATE\",\n      message: \"ReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTALLATIONDATE\",\n      message: \"InstallationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.sinstallationdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYDATE\",\n      message: \"ExpiryDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.sexpirydate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERIALNO\",\n      message: \"Serialno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sserialno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTSTATUS\",\n      message: \"Instrumentstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sactivestatus === null || this.props.Login.masterData.selectedInstrument.sactivestatus.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.sactivestatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? '-' : this.props.Login.masterData.selectedInstrument.sremarks)))), selectedInstrument && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 61\n      }\n    }))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation // formatMessage={this.props.intl.formatMessage}\n        ,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(AddInstrument //selectedRecord={this.state.selectedRecord || {}}\n      , {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Supplier: this.props.Login.Supplier,\n        Manufacturer: this.props.Login.Manufacturer,\n        InstrumentStatus: this.props.Login.InstrumentStatus,\n        handleDateChange: this.handleDateChange,\n        Lab: this.props.Login.Lab,\n        Period: this.props.Login.Period,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        SectionUsers: this.props.Login.Users,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        defaultValue: this.props.Login.edqmManufacturer,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        expiryDate: this.props.Login.expiryDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_SECTION\" ? /*#__PURE__*/React.createElement(AddInstrumentSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        Lab: this.props.Login.Lab,\n        Users: this.props.Login.Users // SectionUsers={this.props.Login.SectionUsers}\n        ,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddInstrumentValidation, {\n        selectedRecord: this.state.selectedRecord || {},\n        ValidationStatus: this.props.Login.ValidationStatus // Users={this.props.Login.Users}\n        // SectionUsers={this.props.Login.SectionUsers}\n        ,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterInstrumentCategory,\n      filterInstrumentCategory\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode); // this.setState({ userRoleControlRights, controlMap });\n\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n\n      if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\n        nfilterInstrumentCategory = {\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          item: this.props.Login.masterData.SelectedInsCat\n        };\n      }\n\n      filterData = this.generateBreadCrumData(); // this.setState({ filterData, nfilterInstrumentCategory });\n\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\n      const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", 'ntestcategorycode', 'ascending', false);\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\n\n      if (insCategoryMap.get(\"DefaultValue\")) {\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\n      } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\n      } // this.setState({ nfilterInstrumentCategory, filterInstrumentCategory });\n\n\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        // dataResult: process(this.props.Login.masterData[\"selectedSection\"]||[], this.state.sectionDataState),\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        filterData,\n        nfilterInstrumentCategory,\n        filterInstrumentCategory\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.filterInstrumentCategory) {\n      breadCrumbData.push({\n        \"label\": \"IDS_INSTRUMENTCATEGORY\",\n        \"value\": this.props.Login.masterData.SelectedInsCat ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getInstrumentDetail,\n  filterColumnData,\n  getInstrumentCombo,\n  updateStore,\n  validateEsignCredential,\n  getSectionUsers,\n  getAvailableInstData,\n  changeInstrumentCategoryFilter\n})(injectIntl(Instrument));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/Instrument.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstrumentCombo","getInstrumentDetail","getSectionUsers","getAvailableInstData","changeInstrumentCategoryFilter","filterColumnData","ListMaster","transactionStatus","AddInstrument","AddInstrumentSection","DEFAULT_RETURN","SlideOutModal","CustomTab","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","ReadOnlyText","ContentPanel","InstrumentSectionTab","process","ConfirmMessage","InstrumentCategoryFilter","BreadcrumbComponent","Affix","ReactTooltip","InstrumentValidationTab","AddInstrumentValidation","mapStateToProps","state","Login","Instrument","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","target","type","name","checked","value","onSaveClick","saveType","formRef","inputData","instSection","userInfo","screenName","postParam","undefined","fieldList","nmastersitecode","operation","inputListName","selectedObject","primaryKeyField","NA","map","item","label","nusercode","push","inputParam","classUrl","methodUrl","searchRef","masterData","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","instItem","onNumericInputOnChange","validateEsign","sreason","password","defaultRecord","defaultParam","dataItem","YES","dataState","sectionDataState","userinfo","openChildModal","onSwitchChange","key","DeleteInstrument","ninstrumentsectioncode","ninstrumentcode","ndefaultstatus","openModal","selectedInstrument","primaryKeyValue","fetchUrl","fecthInputObject","onTabChange","tabProps","dataStateChange","dataResult","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","defaultSecId","set","selectedSection","settings","selectedInstrumentValidation","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","reloadData","current","nfilterInstrumentCategory","ninstrumentcatcode","filterInstrumentCategory","warn","onComboChange","comboData","fieldName","caseNo","nsectionusercode","closeModal","selectedId","openFilter","showFilter","closeFilter","onFilterSubmit","skip","take","error","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","mandatoryFields","addId","editId","filterParam","breadCrumbData","filterData","length","searchedData","sinstrumentname","indexOf","e","sinstrumentid","sdefaultstatus","smodelnumber","spono","smanufacdate","dpodate","spodate","sreceiveddate","sinstallationdate","sexpirydate","sserialno","sactivestatus","sremarks","InstrumentCategory","Supplier","Manufacturer","InstrumentStatus","Lab","Period","TimeZoneList","Users","edqmManufacturer","currentTime","expiryDate","ValidationStatus","componentDidUpdate","previousProps","updateState","Object","values","SelectedInsCat","sinstrumentcatname","generateBreadCrumData","insCategoryMap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail,\r\n    getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter,\r\n    filterColumnData\r\n} from '../../actions';\r\n\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport AddInstrument from '../../pages/instrumentmanagement/AddInstrument';\r\nimport AddInstrumentSection from '../../pages/instrumentmanagement/AddInstrumentSection';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n//import SlideOutModal from '../../components/SlideOutModal';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component'\r\nimport Esign from '../audittrail/Esign';\r\nimport { showEsign, getControlMap, constructOptionList, formatInputDate } from '../../components/CommonScript';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport InstrumentSectionTab from './InstrumentSectionTab';\r\nimport { process } from '@progress/kendo-data-query';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport InstrumentCategoryFilter from './InstrumentCategoryFilter';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InstrumentValidationTab from './InstrumentValidationTab';\r\nimport AddInstrumentValidation from '../../pages/instrumentmanagement/AddInstrumentValidation';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass Instrument extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const sectionDataState = { skip: 0, take: 10 };\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            selectedInstrument: undefined,\r\n            controlMap: new Map(),\r\n            Instrument: [],\r\n            sectionDataState\r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sinstrumentname\"]\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let instSection = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n            let postParam = undefined;\r\n            let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"nsuppliercode\", \"nservicecode\",\r\n                \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\",\"smodelnumber\",\r\n                \"spono\",\r\n                //\"stzmanufdate\",\"stzpodate\",\"stzreceivedate\",\"stzinstallationdate\",\"stzexpirydate\",\r\n                //\"dmanufacdate\",\"dpodate\", \"dreceiveddate\", \"dinstallationdate\",\"dexpirydate\",\r\n                \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\",\r\n                \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\r\n\r\n            inputData[\"instrument\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            if (this.props.Login.operation === \"update\") {\r\n\r\n                postParam = { inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\" };\r\n\r\n                inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\r\n                inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\r\n                inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\r\n                inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\r\n                inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\r\n                fieldList.map(item => {\r\n                    return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n                })\r\n\r\n            }\r\n            else {\r\n                inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\r\n                inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\r\n                // inputData[\"instrumentsection\"]=this.props.Login.userInfo.nusercode;\r\n                // inputData[\"instrumentsection\"][\"ninstrumentcode\"]=this.state.selectedRecord[\"ninstrumentcode\"]?this.state.selectedRecord[\"ninstrumentcode\"]:\"\";\r\n                // inputData[\"instrumentsection\"][\"nsectioncode\"]=this.state.selectedRecord[\"nsectioncode\"]?this.state.selectedRecord[\"nsectioncode\"]:\"\";\r\n                fieldList.map(item => {\r\n                    return inputData[\"instrument\"][item] = this.state.selectedRecord[item]\r\n                })\r\n\r\n            }\r\n\r\n\r\n            inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\r\n            inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\r\n            inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\r\n            inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\r\n\r\n\r\n            if (this.state.selectedRecord[\"dpodate\"]) {\r\n                inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\r\n            }\r\n            if (this.state.selectedRecord[\"dreceiveddate\"]) {\r\n                inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\r\n            }\r\n            if (this.state.selectedRecord[\"dinstallationdate\"]) {\r\n                inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\r\n            }\r\n            if (this.state.selectedRecord[\"dexpirydate\"]) {\r\n                inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\r\n            }\r\n            if (this.state.selectedRecord[\"dmanufacdate\"]) {\r\n                inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\r\n            }\r\n\r\n            inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\r\n\r\n\r\n            if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\r\n                if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\r\n                    this.state.selectedRecord[\"nusercode\"].map(item => {\r\n                        return instSection.push({\r\n                            nusercode: item.value\r\n                            // nsitecode:this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n                        })\r\n                    })\r\n                    inputData[\"instrumentsection\"] = instSection;\r\n                }\r\n            }\r\n\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Instrument\",\r\n                inputData: inputData,\r\n                operation: this.props.Login.operation, saveType, formRef, postParam, searchRef: this.searchRef\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_SECTION\") {\r\n            inputData[\"instrumentsection\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\r\n            inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\r\n            inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Section\",\r\n                inputData: inputData,\r\n                operation: this.props.Login.operation, saveType, formRef, searchRef: this.searchRef\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n    defaultRecord = (defaultParam) => {\r\n        const methodUrl = defaultParam.methodUrl;\r\n        let dataItem = defaultParam.selectedRecord;\r\n        dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n        let dataState = undefined;\r\n        if (defaultParam.screenName === \"IDS_SECTION\") {\r\n            dataState = this.state.sectionDataState;\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                [methodUrl]: dataItem,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"instrument\",\r\n            operation: \"setDefault\",\r\n            methodUrl: methodUrl, dataState\r\n        }\r\n        const masterData = this.props.Login.masterData\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openChildModal: true, screenName: \"Test\", operation: defaultParam.operation, selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    onSwitchChange = (item, key, methodUrl) => {\r\n        let dataItem = item;\r\n        dataItem[\"ndefaultstatus\"] = 3;\r\n        const inputParam = {\r\n            inputData: {\r\n                [key]: dataItem,\r\n                userinfo: this.props.userInfo\r\n            },\r\n            classUrl: \"testmaster\",\r\n            operation: \"setDefault\",\r\n            methodUrl: methodUrl\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\r\n    }\r\n\r\n\r\n\r\n\r\n    DeleteInstrument = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n        if (operation.screenName === \"IDS_SECTION\") {\r\n            const dataState = this.state.sectionDataState;\r\n            inputData[\"instrumentsection\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\r\n            inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\r\n            inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\r\n\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                methodUrl: \"Section\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: \"delete\",\r\n                dataState:dataState\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"Instrument\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            const postParam = {\r\n                inputListName: \"Instrument\", selectedObject: \"selectedInstrument\",\r\n                primaryKeyField: \"ninstrumentcode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                methodUrl: \"Instrument\", postParam,\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: \"delete\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            // this.props.crudMaster(inputParam, this.props.Login.masterData);\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"Instrument\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let mandatoryFields = [];\r\n        if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n            mandatoryFields.push(\r\n                { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTNAME\", \"dataField\": \"sinstrumentname\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SUPPLIER\", \"dataField\": \"nsuppliercode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SERVICEBY\", \"dataField\": \"nservicecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SERIALNO\", \"dataField\": \"sserialno\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTSTATUS\", \"dataField\": \"ntranscode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                // { \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"susername\" } \r\n            )\r\n            if (this.state.selectedRecord[\"nsectioncode\"]) {\r\n                mandatoryFields.push({ \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"nusercode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_SECTION\")\r\n            mandatoryFields.push({ \"mandatory\": true, \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                 { \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"nusercode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n\r\n                                )\r\n\r\n\r\n        // let userStatusCSS = \"\";\r\n        // let activeIconCSS = \"fa fa-check\";\r\n        // if (this.props.Login.masterData.selectedInstrument && this.props.Login.masterData.selectedInstrument.sdefaultstatus === transactionStatus.YES) {\r\n        //     userStatusCSS = \"outline-success\";\r\n        // }\r\n        // else{\r\n        //     userStatusCSS = \"outline-danger\";\r\n        // }\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\r\n        // const editParam = { screenName:\"Instrument\", operation:\"update\", primaryKeyName:\"ninstrumentcode\", masterData:this.props.Login.masterData, userInfo:this.props.Login.userInfo, \r\n        // ncontrolcode:editId, inputListName :\"Instrument\", selectedObject : \"SelectedInstrument\"};\r\n        const { selectedInstrument } = this.props.Login.masterData;\r\n        const filterParam = {\r\n            inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n            fetchUrl: \"instrument/getInstrument\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Instrument\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument}\r\n                                getMasterDetail={(Instrument) => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedInstrument}\r\n                                primaryKeyField=\"ninstrumentcode\"\r\n                                mainField=\"sinstrumentname\"\r\n                                firstField=\"sinstrumentid\"\r\n                                secondField=\"sinstrumentcatname\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                //searchListName=\"searchedInstrument\"\r\n                                searchRef={this.searchRef}\r\n                                // filterParam={filterParam}\r\n                                addId={addId}\r\n                                hidePaging={true}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_INSTRUMENTCATEGORYFILTER\":\r\n                                            <InstrumentCategoryFilter\r\n                                                filterInstrumentCategory={this.state.filterInstrumentCategory || []}\r\n                                                nfilterInstrumentCategory={this.state.nfilterInstrumentCategory || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {/* {this.props.Login.masterData.Users && this.props.Login.masterData.Users.length > 0 &&  */}\r\n                                            {this.props.Login.masterData.selectedInstrument ?\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.selectedInstrument.sinstrumentname}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                    {/* <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                        {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sdefaultstatus} \r\n                                                                        {/* <FormattedMessage id= {this.props.Login.masterData.selectedManufacturer.sactivestatus}/> */}\r\n\r\n                                                                    {/* </span>  */}\r\n                                                                </h2>\r\n                                                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link name=\"editInstrument\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        // onClick = {()=>this.props.(editParam)}\r\n                                                                        onClick={(e) => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link name=\"deleteInstrument\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                        {/* <ConfirmDialog\r\n                                                                                name=\"deleteMessage\"\r\n                                                                                message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                                doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                                doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                                icon={faTrashAlt}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                //hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                handleClickDelete={() => this.DeleteInstrument(\"delete\", deleteId, \"IDS_INSTRUMENT\")}\r\n                                                                            /> */}\r\n                                                                    </Nav.Link>\r\n\r\n                                                                </div>\r\n                                                                {/* </Tooltip> */}\r\n                                                            </div>\r\n\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_INSTRUMENTNAME\" message=\"Instrumentname\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sinstrumentname}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_INSTRUMENTID\" message=\"Instrument Id\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sinstrumentid}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_DEFAULTSTATUS\" message=\"Default Status\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sdefaultstatus}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_MODELNO\" message=\"Modelno\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.smodelnumber}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_PONO\" message=\"PO No.\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.spono}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            {/* <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_DESCRIPTION\" message=\"Description\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sdescription}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col> */}\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_MANUFACTURERDATE\" message=\"ManufactureDate\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? '-' :\r\n                                                                        this.props.Login.masterData.selectedInstrument.smanufacdate}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_PODATE\" message=\"PoDate\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.spodate}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_RECEIVEDDATE\" message=\"ReceiveDate\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.sreceiveddate}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_INSTALLATIONDATE\" message=\"InstallationDate\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.sinstallationdate}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_EXPIRYDATE\" message=\"ExpiryDate\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.sexpirydate}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_SERIALNO\" message=\"Serialno\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sserialno}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_INSTRUMENTSTATUS\" message=\"Instrumentstatus\" /></FormLabel>\r\n                                                                    \r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sactivestatus === null \r\n                                                                        || this.props.Login.masterData.selectedInstrument.sactivestatus.length === 0 ? '-' :\r\n                                                                                this.props.Login.masterData.selectedInstrument.sactivestatus}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_REMARKS\" message=\"Remarks\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedInstrument.sremarks}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                        </Row>\r\n                                                        {selectedInstrument &&\r\n                                                            <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                                                        }\r\n                                                    </Card.Body>\r\n\r\n                                                </>\r\n                                                : \"\"\r\n                                            }\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col></Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.screenName === \"IDS_INSTRUMENT\" ?\r\n                                <AddInstrument\r\n                                    //selectedRecord={this.state.selectedRecord || {}}\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                                    Supplier={this.props.Login.Supplier}\r\n                                    Manufacturer={this.props.Login.Manufacturer}\r\n                                    InstrumentStatus={this.props.Login.InstrumentStatus}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    Lab={this.props.Login.Lab}\r\n                                    Period={this.props.Login.Period}\r\n                                    TimeZoneList={this.props.Login.TimeZoneList}\r\n                                    SectionUsers={this.props.Login.Users}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.inputParam}\r\n                                    defaultValue={this.props.Login.edqmManufacturer}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    currentTime={this.props.Login.currentTime}\r\n                                    expiryDate={this.props.Login.expiryDate}\r\n                                /> : this.props.Login.screenName === \"IDS_SECTION\" ?\r\n                                <AddInstrumentSection \r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    Lab={this.props.Login.Lab}\r\n                                    Users={this.props.Login.Users}\r\n                                    // SectionUsers={this.props.Login.SectionUsers}\r\n                                    onComboChange={this.onComboChange}\r\n                                \r\n                                />: \r\n                               \r\n                                <AddInstrumentValidation\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                ValidationStatus={this.props.Login.ValidationStatus}\r\n                                   // Users={this.props.Login.Users}\r\n                                    // SectionUsers={this.props.Login.SectionUsers}\r\n                                    instrumentid= {this.props.Login.masterData.selectedInstrument.sinstrumentid}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    currentTime={this.props.Login.currentTime}\r\n\r\n                                    handleDateChange={this.handleDateChange}\r\n\r\n                                    onComboChange={this.onComboChange}\r\n                                    />\r\n                                    \r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\r\n            sectionDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n        const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n        tabMap.set(\"IDS_SECTION\",\r\n            <InstrumentSectionTab\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                //dataResult={this.state.dataResult}\r\n               //dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n               // dataState={this.state.sectionDataState}\r\n                //dataStateChange={this.dataStateChange}\r\n                dataState={this.props.Login.dataState}\r\n                masterData={this.props.Login.masterData[\"selectedSection\"]||[]}\r\n                selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                deleteRecord={this.DeleteInstrument}\r\n                deleteSecId={deleteSecId}\r\n                defaultSecId={defaultSecId}\r\n                defaultRecord={this.defaultRecord}\r\n                getAvailableInstData={this.props.getAvailableInstData}\r\n                InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n                screenName=\"IDS_SECTION\"\r\n                selectedRecord={this.state.selectedRecord}\r\n                settings = {this.props.Login.settings}\r\n            />\r\n        );\r\n        tabMap.set(\"IDS_INSTRUMENTVALIDATION\",<InstrumentValidationTab\r\n        controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n            //     dataResult={this.state.dataResult}\r\n            //    dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n            //    dataState={this.state.sectionDataState}\r\n            //     dataStateChange={this.dataStateChange}\r\n                dataState={this.props.Login.dataState}\r\n                masterData={this.props.Login.masterData[\"selectedInstrumentValidation\"]||[]}\r\n                selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                deleteRecord={this.DeleteInstrument}\r\n               deleteSecId={deleteSecId}\r\n                defaultRecord={this.defaultRecord}\r\n                getAvailableInstData={this.props.getAvailableInstData}\r\n                InstrumentValidation={this.props.Login.masterData.selectedInstrumentValidation || []}\r\n                screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n                selectedRecord={this.state.selectedRecord}\r\n                settings = {this.props.Login.settings}\r\n        />);\r\n        return tabMap;\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteInstrument(\"delete\", deleteId, \"IDS_INSTRUMENT\"));\r\n    }\r\n\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.nfilterInstrumentCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\r\n                },\r\n                classUrl: \"instrument\",\r\n                methodUrl: \"InsByInstrumentCat\"\r\n            }\r\n            this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            switch (caseNo) {\r\n                case 1:\r\n                    selectedRecord[fieldName] = comboData;\r\n                    this.setState({ selectedRecord });\r\n                    break;\r\n                case 2:\r\n                    selectedRecord[fieldName] = comboData;\r\n                    selectedRecord[\"nsectionusercode\"] = comboData.value;\r\n                    // this.setState({ selectedRecord });\r\n                    // selectedRecord[fieldName] = comboData;\r\n                    // this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.selectedRecord.nsectioncode);\r\n                    this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\r\n                    break;\r\n                case 3:\r\n                    let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {}\r\n                    nfilterInstrumentCategory = comboData;\r\n                    this.searchRef.current.value = \"\";\r\n                    this.setState({ nfilterInstrumentCategory })\r\n                    break;\r\n                default: break;\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n            // data: {openModal, loadEsign, selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let updateState = false;\r\n        let { selectedRecord, userRoleControlRights, controlMap, filterData, nfilterInstrumentCategory, filterInstrumentCategory } = this.state\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            // this.setState({ userRoleControlRights, controlMap });\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\r\n            if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\r\n                nfilterInstrumentCategory = {\r\n                    label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\r\n                    value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n                    item: this.props.Login.masterData.SelectedInsCat\r\n                }\r\n            }\r\n            filterData = this.generateBreadCrumData();\r\n            // this.setState({ filterData, nfilterInstrumentCategory });\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\r\n            const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\",\r\n                \"sinstrumentcatname\", 'ntestcategorycode', 'ascending', false);\r\n            filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\r\n            if (insCategoryMap.get(\"DefaultValue\")) {\r\n                nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\r\n            } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\r\n                nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n            }\r\n            // this.setState({ nfilterInstrumentCategory, filterInstrumentCategory });\r\n            updateState = true;\r\n        }\r\n        if (updateState) {\r\n            this.setState(\r\n                { \r\n                   // dataResult: process(this.props.Login.masterData[\"selectedSection\"]||[], this.state.sectionDataState),\r\n                    selectedRecord, userRoleControlRights,\r\n                    controlMap, filterData, nfilterInstrumentCategory,\r\n                    filterInstrumentCategory\r\n            })\r\n        }\r\n\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.filterInstrumentCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_INSTRUMENTCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.SelectedInsCat ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"NA\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.state.nfilterInstrumentCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\r\n                },\r\n                classUrl: \"instrument\",\r\n                methodUrl: \"InsByInstrumentCat\"\r\n            }\r\n            this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\" }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getInstrumentDetail, filterColumnData,\r\n    getInstrumentCombo, updateStore, validateEsignCredential, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter\r\n}\r\n)(injectIntl(Instrument));\r\n"]},"metadata":{},"sourceType":"module"}