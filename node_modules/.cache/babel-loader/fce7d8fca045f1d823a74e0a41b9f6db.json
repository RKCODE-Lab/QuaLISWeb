{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\TransactionListMasterJsonView.jsx\";\nimport React from 'react';\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { InputGroup, FormControl, Media, ListGroup, Form, Nav //, Col \n} from 'react-bootstrap';\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../components/App.styles';\nimport { ListMasterWrapper } from '../components/list-master/list-master.styles';\nimport { getActionIcon } from '../components/HoverIcons';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport AdvFilter from './AdvFilter';\nimport { toast } from 'react-toastify';\nimport { getStatusIcon } from './StatusIcon';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { checkBoxOperation, designProperties, transactionStatus } from './Enumeration';\nimport QuickSearch from './QuickSearch';\nimport FilterAccordion from './custom-accordion/filter-accordion.component';\nimport '../pages/registration/registration.css';\nimport { connect } from 'react-redux';\nimport { ListView } from '@progress/kendo-react-listview';\nimport { filterRecordBasedOnPrimaryKeyName, filterRecordBasedOnTwoArrays, filterStatusBasedOnTwoArrays, getSameRecordFromTwoArrays } from './CommonScript';\nimport CustomPager from './CustomPager';\nimport ReactTooltip from 'react-tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { //faBell, \nfaChevronDown, faChevronUp, faExclamationCircle, faFilter, //faExclamationTriangle,\nfaSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport CustomSwitch from './custom-switch/custom-switch.component';\nimport { faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontIconWrap } from '../../src/components/data-grid/data-grid.styles';\nimport { dynamicFileDownload } from '../../src/actions/ServiceAction'; //import Iframe from 'react-iframe';\n//import useLongPress from \"../actions/longPress\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass TransationListMasterJsonView extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n      this.props.scrollChange();\n    };\n\n    this.filterColumn = event => {\n      let filterValue = event.target.value;\n\n      if (event.keyCode === 13) {\n        this.props.filterColumnData(filterValue, this.props.filterParam, this.props.searchListName, this.props.childTabsKey);\n      }\n    };\n\n    this.selectMultiple = (selectionKey, inputData) => {\n      let selectedArray = this.props.selectedMaster;\n      let dataList = [];\n      let removeElementFromArray = []; // let MultipleSelectCount = this.props.Login.settings[3];\n\n      let masterList = this.props.masterList && this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take);\n\n      if (selectionKey === transactionStatus.ALL) {\n        //Select All\n        let filteredList = filterRecordBasedOnPrimaryKeyName(masterList, this.props.primaryKeyField); //let filteredList = filterRecordBasedOnTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\n        // selectedArray=[];\n        // selectedArray = filteredList;\n\n        filteredList.map((item, index) => {\n          // if (index < this.state.take) {\n          //selectedArray.push(item)\n          dataList.push(item[this.props.primaryKeyField]); // }\n\n          return null;\n        });\n        inputData[`${this.props.selectedListName}`] = filteredList;\n        inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n        inputData[`${this.props.objectName}`] = filteredList; // inputData[\"checkBoxOperation\"] = 7;\n\n        inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTALL;\n        inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        inputData[\"QuickSelectStatus\"] = true;\n\n        if (dataList.length > 0) {\n          this.props.getMasterDetail(inputData, true, true);\n        } // inputData[`${this.props.selectedListName}`] = selectedArray\n        // inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\n        // inputData[`${this.props.objectName}`] = selectedArray;\n        // inputData[\"checkBoxOperation\"] = 1;\n        // inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        // inputData[\"QuickSelectStatus\"] = true;\n        // if (dataList.length > 0) {\n        //     this.props.getMasterDetail(inputData, true);\n        // }\n        // else {\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\n        // }\n\n      } else if (selectionKey === transactionStatus.NA) {\n        let filteredList = getSameRecordFromTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\n\n        if (filteredList.length > 0) {\n          if (selectedArray.length === filteredList.length) {\n            selectedArray = [filteredList[0]];\n            dataList = [selectedArray[0][this.props.primaryKeyField]];\n          } else {\n            selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\n            dataList = [selectedArray[0][this.props.primaryKeyField]];\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray; //  inputData[\"checkBoxOperation\"] = 6;\n\n          inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTNONE;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = filteredList;\n          inputData[\"statusNone\"] = true;\n\n          if (dataList.length > 0) {\n            this.props.getMasterDetail(inputData, false);\n          }\n        }\n      } else {\n        //Select Status Wise\n        selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\n        removeElementFromArray = getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField);\n        masterList.map(item => {\n          // if (index < this.state.take) {\n          if (item[this.props.selectionField] === selectionKey) {\n            selectedArray.push(item);\n            dataList.push(item[this.props.primaryKeyField]);\n          }\n\n          return null;\n        }); // this.props.masterList && this.props.masterList.map((item) => {\n        //     if (item[this.props.selectionField] === selectionKey) {\n        //         selectedArray.push(item)\n        //         dataList.push(item[this.props.primaryKeyField]);\n        //     }\n        //     return null;\n        // })\n\n        inputData[`${this.props.selectedListName}`] = selectedArray;\n        inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n        inputData[`${this.props.objectName}`] = selectedArray; // inputData[\"checkBoxOperation\"] = 5;\n\n        inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTSTATUS;\n        inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        inputData[\"removeElementFromArray\"] = removeElementFromArray;\n\n        if (selectedArray.length > 0) {\n          this.props.getMasterDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_NOITEMSFOUND\"\n          }));\n        }\n      }\n    };\n\n    this.getselectedDetailAvoidDuplicateProps = (master, inputData, needMultiSelect) => {\n      let selection = window.getSelection().toString();\n\n      if (selection.length > 0) {\n        console.log(\"columnInfo.id\", \"no\");\n      } else {\n        if (this.props.selectedMaster.length === 1 && this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1 || needMultiSelect === false) {\n          // const showMore = {};\n          this.getSelectedDetail(master, inputData, needMultiSelect);\n        }\n\n        this.setState({\n          showList: null,\n          index: null,\n          activeIconIndex: null\n        });\n      }\n    };\n\n    this.getSelectedDetail = (master, inputData, needMultiSelect) => {\n      let bool;\n      let selectedMaster;\n      let selectedArray;\n\n      if (needMultiSelect === false) {\n        if (this.state.multipleselectionFlag) {\n          selectedMaster = getSameRecordFromTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField);\n        } else {\n          selectedMaster = master;\n        }\n\n        if (selectedMaster.length > 2) {\n          bool = true;\n        }\n\n        if (selectedMaster.length === 1 && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1) {\n          bool = false;\n        } else {\n          bool = true;\n        }\n      } else {\n        bool = true;\n      }\n\n      if (bool) {\n        // if(this.props.secondaryKeyField){\n        //     selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ?\n        //     filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField,this.props.secondaryKeyField) : [] : [];\n        // }else{\n        selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ? filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField) : [] : []; //}\n\n        let dataList = [];\n        let removeElementFromArray = [];\n        let indexValue; // if(this.props.secondaryKeyField){\n        //     indexValue= selectedArray ? selectedArray.findIndex(x => x[this.props.secondaryKeyField] ===master[this.props.secondaryKeyField]) ===-1 || selectedArray.findIndex(x =>x[this.props.primaryKeyField] ===master[this.props.primaryKeyField] && x[this.props.secondaryKeyField] ===master[this.props.secondaryKeyField]) !==-1?-1:\n        //     selectedArray.findIndex(x => x[this.props.primaryKeyField] ===master[this.props.primaryKeyField]) :-2 ; \n        //                  // && selectedArray.findIndex(x => x[this.props.primaryKeyField] ===master[this.props.primaryKeyField])\n        // }\n        // else {\n\n        indexValue = selectedArray ? selectedArray.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2; //  }            \n\n        if (indexValue === -1) {\n          //add new item\n          // let MultipleSelectCount = this.props.Login.settings[3];\n          // if (selectedArray.length < MultipleSelectCount) {\n          // if(this.props.secondaryKeyField){\n          //     removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField,this.props.secondaryKeyField) :\n          //     getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField,this.props.secondaryKeyField);\n          // }else{\n          removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField); // }\n\n          if (this.props.needMultiSelect) {\n            //uselect an Item\n            selectedArray.push(master);\n            dataList.push(master[this.props.primaryKeyField]);\n          } else {\n            //Click new Item\n            selectedArray = [master];\n            dataList = [master[this.props.primaryKeyField]];\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray; // inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\n\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.MULTISELECT : this.state.multipleselectionFlag ? checkBoxOperation.QUICKSELECTSTATUS : checkBoxOperation.SINGLESELECT;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = needMultiSelect ? [] : removeElementFromArray;\n          inputData[\"secondarySelection\"] = needMultiSelect;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, true);\n          } // } else {\n          //     toast.warn(`${this.props.intl.formatMessage({ id: \"IDS_SELECTIONLIMITEXCEED\" })} ${MultipleSelectCount} ${this.props.intl.formatMessage({ id: \"IDS_RECORDS\" })}`);\n          // }\n\n        } else if (needMultiSelect) {\n          // let removeElementFromArray = [];\n          if (needMultiSelect) {\n            //uselect an Item\n            removeElementFromArray.push(this.props.selectedMaster[indexValue]);\n            selectedArray.splice(indexValue, 1);\n            dataList.splice(indexValue, 1);\n          } else {\n            //Click new Item\n            removeElementFromArray.push(master);\n            selectedArray.push(master);\n            dataList.push(master[this.props.primaryKeyField]);\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = selectedArray.map(x => x[this.props.primaryKeyField]).join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray; // inputData[\"checkBoxOperation\"] = needMultiSelect ? 2 : 4;\n\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.DESELECT : checkBoxOperation.SINGLEDESELECT;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = removeElementFromArray;\n          inputData[\"secondarySelection\"] = needMultiSelect;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, false);\n          }\n        } else {\n          selectedArray.push(master);\n          dataList.push(master[this.props.primaryKeyField]);\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray; // inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\n\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.MULTISELECT : this.state.multipleselectionFlag ? checkBoxOperation.QUICKSELECTSTATUS : checkBoxOperation.SINGLESELECT;\n          inputData[\"secondarySelection\"] = needMultiSelect;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, true);\n          }\n        }\n      }\n    };\n\n    this.onCheckBoxselect = (event, master, inputData) => {\n      // if(this.props.secondaryKeyField)\n      // {\n      //     //this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1 &&\n      //     if(this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === master[this.props.secondaryKeyField]) === -1\n      //     || this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === master[this.props.secondaryKeyField] && m1[this.props.primaryKeyField] !== master[this.props.primaryKeyField]) !== -1)\n      //     {\n      //         this.getSelectedDetail(master, inputData, true);\n      //     }\n      //     else if (this.props.selectedMaster.length > 1) {\n      //         this.getSelectedDetail(master, inputData, true);\n      //     }\n      // }\n      // else{\n      if (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1) {\n        this.getSelectedDetail(master, inputData, true);\n      } else if (this.props.selectedMaster.length > 1) {\n        this.getSelectedDetail(master, inputData, true);\n      } // }\n\n\n      this.setState({\n        showList: null\n      });\n      event.preventDefault();\n      event.stopPropagation(); // else{\n      //     event.preventDefault();\n      //     event.stopPropagation();\n      //     this.getSelectedDetail(master, inputData, true);\n      // }\n    };\n\n    this.updateScrollHeight = (props, state) => {\n      setTimeout(() => {\n        const pagerheight = document.querySelector('.pager_wrap');\n        const navHeight = document.querySelector('.navbar.navbar-expand');\n        const filterAccHeight = document.querySelector('.filter-accordian');\n        const filterHeight = document.querySelector('.filter-wrap-group');\n        const breadCrumbsHeight = document.querySelector('.breadcrumbs-scroll-container');\n        const ipad = document.querySelector('html').classList.contains(\"ipad\");\n        let val = navHeight ? navHeight.clientHeight : 53;\n\n        if (ipad) {\n          document.body.classList.add('ipad-hidden');\n\n          if (props.needAccordianFilter) {\n            val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45);\n          }\n\n          if (props.needFilter) {\n            val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36) + 6;\n          }\n\n          if (!props.notSearchable || !this.state.showSearch) {\n            val = val + (filterHeight ? filterHeight.clientHeight : 55);\n          }\n\n          if (!props.hidePaging) {\n            val = val + (pagerheight ? pagerheight.clientHeight : 32) + 58;\n          }\n\n          if (props.cardHead) {\n            val = val + props.cardHead;\n          }\n        } else {\n          document.body.classList.remove('ipad-hidden');\n\n          if (props.needAccordianFilter) {\n            val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45);\n          }\n\n          if (props.needFilter) {\n            val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36);\n          }\n\n          if (!props.notSearchable || !this.state.showSearch) {\n            val = val + (filterHeight ? filterHeight.clientHeight : 55);\n          }\n\n          if (!props.hidePaging) {\n            val = val + (pagerheight ? pagerheight.clientHeight : 32);\n          }\n\n          if (props.cardHead) {\n            val = val + props.cardHead;\n          }\n        }\n\n        this.setState({\n          scrollHeight: 'calc(100vh - ' + val + 'px)'\n        });\n      }, 1000);\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.onClickActions1 = (event, dataItem) => {\n      event.stopPropagation();\n      this.props.ListmasterSwitch({\n        event,\n        nusersrolehidescreencode: dataItem.nusersrolehidescreencode\n      });\n    };\n\n    this.onClickActions = (event, master, action) => {\n      event.stopPropagation();\n      let selectedArray = this.props.selectedMaster ? this.props.selectedMaster : [];\n      let dataList = selectedArray.map(item => item[this.props.primaryKeyField]);\n      const indexValue = this.props.selectedMaster ? this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\n\n      if (indexValue === -1) {\n        if (this.props.needMultiSelect) {\n          selectedArray.push(master);\n          dataList.push(master[this.props.primaryKeyField]);\n        } else {\n          selectedArray = [master];\n          dataList = [master[this.props.primaryKeyField]];\n        }\n      }\n\n      action.onClick({ ...action.inputData,\n        [action.objectName]: master,\n        [this.props.selectedListName]: selectedArray,\n        [this.props.primaryKeyField]: dataList.join(\",\")\n      });\n      ReactTooltip.hide();\n    };\n\n    this.showHideDetails = (event, index) => {\n      event.stopPropagation();\n      let showMore = { ...this.state.showMore,\n        [index]: !this.state.showMore[index]\n      }; //   const check=showMore.map(item=>{return})\n\n      const expandAll = [...Object.values(showMore)];\n      let allFieldExpanded = this.state.allFieldExpanded;\n\n      if (expandAll.includes(false)) {\n        allFieldExpanded = false;\n      } else {\n        let len = this.props.masterList.length;\n\n        if (len === expandAll.length) {\n          allFieldExpanded = true;\n        }\n      }\n\n      this.setState({\n        showMore,\n        allFieldExpanded,\n        expandCheck: expandAll,\n        disableClick: true\n      });\n    };\n\n    this.ExpandAll = masterData => {\n      const allFieldExpanded = this.state.allFieldExpanded;\n      let showMore = {};\n\n      if (!allFieldExpanded) {\n        showMore = masterData.map((master, index) => {\n          return showMore = { ...showMore,\n            [index]: true\n          };\n        });\n      }\n\n      this.setState({\n        showMore,\n        allFieldExpanded: !allFieldExpanded\n      });\n    };\n\n    this.transactionListDesign = (props, skip, index) => {\n      let item = props.dataItem; // console.log(\"item:\", item);\n\n      const customswitchposition = {\n        // 'padding-left': '290px',\n        'padding-top': '-20px'\n      }; // let index;\n      // const onLongPress = (e) => {\n      //     e.preventDefault();\n      //     e.stopPropagation();\n      //     this.setState({\n      //         index: props.index === this.state.index ? null : props.index\n      //     })\n      // };\n\n      const ref = useRef(null);\n      const [width, setWidth] = useState(0);\n      useLayoutEffect(() => {\n        function updateSize() {\n          setWidth(ref.current.offsetWidth - 200);\n        }\n\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n      }, []);\n      const actionCount = this.props.actionIcons && this.props.actionIcons.filter(element => {\n        return element.hidden === false;\n      }).length;\n      let findWidth;\n\n      if (width > 200) {\n        findWidth = false;\n      } else {\n        findWidth = true;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        ref: ref,\n        className: `${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor  \n                    ${this.checkboxValidation(item) ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        onClick: () => this.getselectedDetailAvoidDuplicateProps(item, { ...this.props.inputParam\n        }, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }\n      }, this.props.needMultiSelect ? /*#__PURE__*/React.createElement(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"customControl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n        type: \"checkbox\",\n        id: `tm_customCheck_${this.props.listName}_${props.index}` // checked={this.props.selectedMaster &&\n        //     this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? true : false}\n        ,\n        checked: this.checkboxValidation(item),\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check.Label, {\n        className: \"mr-1\",\n        onClick: event => this.onCheckBoxselect(event, item, { ...this.props.inputParam\n        }, true),\n        htmlFor: `tm_customCheck_${this.props.listName}_${props.index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 33\n        }\n      })) : \"\", /*#__PURE__*/React.createElement(Media.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ContentPanel, {\n        className: `product-category  title-grid-wrap-width-md d-flex align-items-center' ${this.state.allFieldExpanded || this.state.showMore[props.index] ? 'show-listed-view' : \"\"} ${this.state.activeIconIndex == props.index ? \"show-more-action-clicked\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-more-positioned\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: !findWidth ? 'd-flex' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MediaHeader, {\n        \"data-tip\": item[this.props.mainField] //data-for=\"tooltip-common-wrap\"\n        ,\n        style: {\n          maxWidth: this.props.objectName === \"test\" ? width + 100 : \"15rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 45\n        }\n      }, this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \"), item[this.props.mainField], this.props.showStatusBlink && item[\"bflag\"] ?\n      /*#__PURE__*/\n      // <div class=\"blink\">🔴</div> \n      React.createElement(FontAwesomeIcon, {\n        class: \"blink\",\n        style: {\n          width: \"0.8rem\"\n        },\n        icon: faExclamationCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 53\n        }\n      }) : \"\"), this.props.showStatusLink && this.props.showStatusName && /*#__PURE__*/React.createElement(React.Fragment, null, this.props.showStatusIcon && getStatusIcon(item[this.props.statusField]), this.props.showStatusName && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text mr-2\",\n        style: {\n          padding: \"0\",\n          display: 'inline',\n          color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 61\n        }\n      }, item[this.props.statusFieldName].split(\"out\")[0])), (this.props.primaryKeyField === \"ntransactiontestcode\" || this.props.primaryKeyField === \"ntransactionsamplecode\") && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text mr-2\",\n        style: {\n          padding: \"0\",\n          display: 'inline',\n          color: \"blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 61\n        }\n      }, item[this.props.statusFieldName].includes(\"out\") ? item[this.props.statusFieldName].substring(item[this.props.statusFieldName].indexOf(\" out\") + 1) : \"\"))) //     <>\n      //     {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\n      //     {this.props.showStatusName &&\n      //     <>                                                        \n      //         <Nav.Link className='add-txt-btn blue-text mr-2'\n      //         style={{ padding: \"0\", display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\n      //             <span className='text-nowrap'>\n      //             { item[this.props.statusFieldName]}</span>                                                            \n      //         </Nav.Link>\n      //         <Nav.Link className='add-txt-btn blue-text mr-2'\n      //         style={{ padding: \"0\", display: 'inline', color: \"blue\"}}>\n      //             <span className='text-nowrap'>\n      //             \"sathish\"</span>                                                            \n      //         </Nav.Link>\n      //         </>\n      //     }\n      // </>\n      )), this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: `show-more-action-wrap ${actionCount > 0 && 'vertical-icon-space'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: `show-wrap_${props.index}`,\n        className: `show-more-action showmore no-padding`,\n        onClick: event => this.showHideDetails(event, props.index, \"inner\"),\n        style: {\n          display: \"inline\"\n        },\n        title: this.props.intl.formatMessage({\n          id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        size: \"sm\",\n        htmlFor: `show-wrap_${props.index}`,\n        icon: this.state.allFieldExpanded ? faChevronUp : this.state.showMore[props.index] ? faChevronUp : faChevronDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 49\n        }\n      }))) : \"\")), /*#__PURE__*/React.createElement(MediaSubHeaderText, {\n        style: {\n          padding: \"0.1rem\"\n        },\n        className: \"text-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 33\n        }\n      }, this.props.subFields && this.props.subFields.map((field, index) => this.props.subFieldsLabel ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 49\n        }\n      }, `${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] && field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \" || this.props.intl.formatMessage({\n        id: field[designProperties.LABEL]\n      }) + \" : \"}`), /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 49\n        }\n      }, item[field[designProperties.VALUE]] === undefined || item[field[designProperties.VALUE]] === '' ? '-' : item[field[designProperties.VALUE]]), index !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 94\n        }\n      }, \"|\") : \"\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 49\n        }\n      }, `${item[field[designProperties.VALUE]] === undefined || item[field[designProperties.VALUE]] === '' ? '-' : item[field[designProperties.VALUE]]}`), this.props.subFieldsFile && field && field[designProperties.LISTITEM] === 'files' ? /*#__PURE__*/React.createElement(FontIconWrap, {\n        icon: faCloudDownloadAlt,\n        className: \"ml-2 className action-icons-wrap\",\n        size: \"lg\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOAD\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.props.dynamicFileDownload({ ...item,\n          field,\n          viewName: \"subSample\",\n          userInfo: this.props.Login.userInfo\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCloudDownloadAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 57\n        }\n      })) : \"\", index !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 94\n        }\n      }, \"|\") : \"\"))), this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Media.Body, {\n        className: `show-more-wrap ${this.state.allFieldExpanded ? \"showmore\" : this.state.showMore[props.index] ? \"showmore\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MediaSubHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 45\n        }\n      }, this.props.moreField.map((field, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"text-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 57\n        }\n      }, `${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] ? field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \" : this.props.intl.formatMessage({\n        id: field[designProperties.LABEL]\n      }) + \" : \"}  ${item[field[designProperties.VALUE]]}`), index % 2 === 0 && index !== this.props.moreField.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 121\n        }\n      }, \"|\") : \"\", (index + 1) % 2 === 0 ? /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 82\n        }\n      }) : \"\"))))) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: `icon-list-sm-wrap ${props.index === this.state.index ? 'active' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 25\n        }\n      }, this.props.actionIcons && this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 && this.props.actionIcons.length > 0 ? // <div onClick={onLongPress} className=\"icon-list-sm\" >\n      //  <div className=\"icon-list-sm\" >\n      //      <FontAwesomeIcon size=\"sm\" icon={faChevronDown} />\n      //  </div>\n      \"\" : \"\"), actionCount > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `icon-group-wrap ${this.props.actionIcons && this.props.listMasterShowIcon ? \"enable-view\" : \"\"} ${this.props.clickIconGroup ? \"click-view\" : \"hover-view\"} ${this.state.activeIconIndex == props.index ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 37\n        }\n      }, this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) => /*#__PURE__*/React.createElement(\"span\", {\n        className: `${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 41\n        }\n      }, action.needConditionalIcon ? action.conditionalIconFunction(item) && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        \"data-tip\": action.title,\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 49\n        }\n      }, getActionIcon(action.controlname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": action.title,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 49\n        }\n      }, getActionIcon(action.controlname))))) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) => /*#__PURE__*/React.createElement(\"span\", {\n        className: `${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 41\n        }\n      }, action.needConditionalIcon ? action.conditionalIconFunction(item) && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        \"data-tip\": action.title,\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 49\n        }\n      }, getActionIcon(action.controlname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": action.title,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 49\n        }\n      }, getActionIcon(action.controlname)))))), this.props.clickIconGroup ? this.props.listMasterShowIcon && this.props.actionIcons && this.props.actionIcons.length <= this.props.listMasterShowIcon ? \"\" : /*#__PURE__*/React.createElement(React.Fragment, null, actionCount > 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"vertical-dots end-icon\",\n        onClick: () => this.iconGroupView(props.index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 39\n        }\n      })) : '') : \"\", this.props.ListmasterSwitch && this.props.ListScreenHidebtn && /*#__PURE__*/React.createElement(\"span\", {\n        //data-for=\"screenrights_wrap\" \n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ENABLEDISABLESCREEN\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: customswitchposition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CustomSwitch, {\n        type: \"switch\",\n        id: props.dataItem.nusersrolehidescreencode //  id={\"ListmasterSwitch\"}\n        ,\n        onChange: event => this.props.ListmasterSwitch(event, props.dataItem.nusersrolehidescreencode),\n        checked: props.dataItem.needrights === transactionStatus.YES ? true : false,\n        name: props.dataItem.nusersrolehidescreencode,\n        className: \"custom-switch-md customeswitchmanual\" //data-tip={\"Enable to group by screen name\"}\n        // data-for=\"screenrights_wrap\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 34\n        }\n      })))));\n    };\n\n    this.state = {\n      showMore: {},\n      allFieldExpanded: false,\n      buttonCount: 4,\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\n      info: true,\n      expandCheck: [],\n      scrollHeight: '100vh',\n      multipleselectionFlag: this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false,\n      showList: null,\n      disableClick: false,\n      showSearch: false // filterColumnActive: false\n\n    };\n  }\n\n  componentDidMount() {\n    this.updateScrollHeight(this.props, this.state);\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('ipad-hidden');\n  }\n\n  render() {\n    // console.log(\"prps:\",this.props);\n    // const { skip, take } = this.state;\n    let checkStatus = '';\n    let masterList = this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [];\n    let selectedMaster = this.props.selectedMaster && this.props.masterList ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : [];\n\n    if (masterList && masterList.length > 0 && selectedMaster && selectedMaster.length > 0) {\n      if (masterList.length === selectedMaster.length) {\n        checkStatus = 'all';\n      } else if (masterList.length !== selectedMaster.length) {\n        checkStatus = 'partial';\n      } else if (this.props.selectedMaster.length === 0) {\n        checkStatus = '';\n      }\n    } //console.log(\"checkStatus:\",checkStatus);\n    // className=\"client-list-scroll\"\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListMasterWrapper, {\n      className: `${this.state.showModalBg ? 'show_modal_bg' : ''} ${this.props.splitModeClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }\n    }, !this.props.notSearchable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"search-with-ico-list align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 33\n      }\n    }, this.props.needMultiSelect ? /*#__PURE__*/React.createElement(QuickSearch, {\n      checkStatus: checkStatus //selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [], this.props.selectionField, this.props.selectionColorField)}\n      ,\n      selectionList: this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectionField, this.props.selectionColorField),\n      selectionField: this.props.selectionField,\n      selectionFieldName: this.props.selectionFieldName,\n      selectionColorField: this.props.selectionColorField,\n      selectMultiple: this.selectMultiple,\n      inputParam: this.props.inputParam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 41\n      }\n    }) : \"\"), this.props.hideSearch ? \"\" : !this.props.disableToolBarItems ?\n    /*#__PURE__*/\n    // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\n    React.createElement(React.Fragment, null, \"    \", /*#__PURE__*/React.createElement(\"div\", {\n      className: `list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: `search-icon ${false ? 'filter-column-active' : ''}`,\n      onClick: this.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      ref: this.props.searchRef,\n      autoComplete: \"off\",\n      placeholder: `${this.props.intl.formatMessage({\n        id: \"IDS_SEARCH\"\n      })}`,\n      name: \"search\",\n      onKeyUp: e => this.filterColumn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 45\n      }\n    }), this.state.showSearch ? /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"close-right-icon\",\n      onClick: this.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 53\n      }\n    })) : \"\"), this.state.showSearch && this.props.needMultiValueFilter ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFilter,\n      className: \"fa-1x\",\n      onClick: this.props.onMultiFilterClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-link ml-2 p-0\",\n      variant: \"link\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CLEARFILTER\"\n      }) //   data-for=\"tooltip-common-wrap\"\n      ,\n      onClick: this.props.clearAllFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 53\n      }\n    }, \"Clear Filter\")) : \"\") : \"\", !this.state.showSearch ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"filter-top-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 37\n      }\n    }, !this.props.disableToolBarItems && this.props.needFilter ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(AdvFilter, {\n      filterComponent: this.props.filterComponent,\n      dataFor: \"tooltip-common-wrap\",\n      onFilterSubmit: this.props.onFilterSubmit,\n      showFilter: this.props.showFilter,\n      openFilter: this.props.openFilter,\n      closeFilter: this.props.closeFilter,\n      callCloseFunction: this.props.callCloseFunction,\n      showModalBg: e => this.setState({\n        showModalBg: e\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 49\n      }\n    })) : \"\", this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"p-0\",\n      name: \"gridexpand\",\n      onClick: () => this.ExpandAll(masterList),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 53\n      }\n    }, this.props.intl.formatMessage({\n      id: this.props.masterList.length ? this.state.expandCheck ? this.props.masterList.length === this.state.expandCheck.length ? this.state.expandCheck.includes(false) ? \"IDS_EXPANDALL\" : \"IDS_EXPANDLESS\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\n    })))) : \"\") : \"\"), \" \") : ''), !this.state.showSearch ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-list-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 33\n      }\n    }, this.props.titleHead ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 61\n      }\n    }, this.props.titleHead) : '', this.props.commonActions))))) : \"\", this.props.needAccordianFilter ? /*#__PURE__*/React.createElement(FilterAccordion, {\n      key: \"filter\",\n      className: \"filter-accordian\",\n      filterComponent: this.props.accordianfilterComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 29\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ClientList, {\n      className: `product-list sm-list-view port-height-inner ${this.props.actionIcons && this.props.actionIcons.filter(element => {\n        return element.hidden === false;\n      }).length > 0 ? '' : 'no-action-icons'}`,\n      style: {\n        height: this.props.paneHeight ? this.props.paneHeight : this.state.scrollHeight\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListView //  data={this.props.hidePaging ? this.props.masterList : this.props.masterList ? this.props.masterList.slice(this.state.skip, this.props.skip + this.props.take) : []}\n    //                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? \n    //                    this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + \n    //                (this.props.take ? this.props.take : this.state.take)))}\n    //   //  item={(props, index) => this.transactionListDesign(props, this.props.skip, index)}\n    //        //       data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\n    //        item={(props) => this.transactionListDesign(props)}\n    , {\n      data: this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take),\n      item: (props, section, index) => this.transactionListDesign(props, this.props.skip, index) //  item={(props, index) => this.transactionListDesign(props, 0, 0)}\n      // style={{ width: \"100%\" }}\n      // header={myHeader}\n      // footer={this.myFooter}\n      //item={React.ComponentType<ListViewItemProps>} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 29\n      }\n    }))), this.props.hidePaging ? \"\" : this.props.masterList && this.props.masterList.length > 0 ? /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.props.skip //width={this.props.splitChangeWidthPercentage}\n      ,\n      take: this.props.take,\n      handlePageChange: this.props.handlePageChange,\n      total: this.props.masterList.length,\n      buttonCount: this.props.splitChangeWidthPercentage >= 30 ? this.state.buttonCount : this.props.buttonCount ? this.props.buttonCount : 2,\n      userInfo: this.props.Login.userInfo,\n      info: this.state.info,\n      pagershowwidth: 30 // pageSize={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\n      ,\n      pageSize: this.props.pageSize || this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)) //  pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 33\n      }\n    }) //     <CustomPager\n    //     skip={this.props.skip ? this.props.skip : this.state.skip}\n    //     take={this.props.take ? this.props.take : this.state.take}\n    //     width={20}\n    //     pagershowwidth={18}\n    //     handlePageChange={this.props.handlePageChange}\n    //     total={this.props.masterList ? this.props.masterList.length : 0}\n    //     buttonCount={this.state.buttonCount}\n    //     info={this.state.info}\n    //     userInfo={this.props.Login.userInfo}\n    //     pageSize={this.props.pageSize? this.props.pageSize :this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\n    // >\n    //s </CustomPager>\n    : ''));\n  } // myFooter = () => {\n  //     return (\n  //     )\n  // }\n\n\n  iconGroupView(index) {\n    this.setState({\n      activeIconIndex: this.state.activeIconIndex == index ? null : index\n    });\n  }\n\n  checkboxValidation(item) {\n    // if(this.props.secondaryKeyField && this.props.selectedMaster)\n    // {\n    //     if(this.props.secondarySelection)\n    //     {\n    //         // if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 \n    //         // && this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) !== -1\n    //         // )\n    //         // {\n    //         //         return true;\n    //         // }\n    //         if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField] && m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) !== -1)\n    //         {\n    //             return true;\n    //         }\n    //         // else if(this.props.selectedMaster.length()==1)\n    //         // {\n    //         //     if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField] && m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) == -1)\n    //         //     {\n    //         //         return true;\n    //         //     }\n    //         // }\n    //     }\n    //     else if(this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1)\n    //     {\n    //         return true;\n    //     }\n    //     else{\n    //         return false;\n    //     }\n    // }\n    // else{\n    if (this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1) {\n      return true;\n    } else {\n      return false;\n    } //}\n\n  }\n\n  componentDidUpdate(previousProps) {\n    ReactTooltip.rebuild();\n\n    if (this.props.showMoreResetList) {\n      if (this.props.inputParam.masterData && !Array.isArray(this.props.inputParam.masterData) && this.props.inputParam.masterData[this.props.showMoreResetListName] !== (previousProps.inputParam.masterData ? previousProps.inputParam.masterData[this.props.showMoreResetListName] : undefined)) {\n        this.setState({\n          allFieldExpanded: false,\n          showList: null,\n          showMore: {}\n        });\n      }\n    }\n\n    if (this.props.masterList !== previousProps.masterList) {\n      this.updateScrollHeight(this.props, this.state);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  dynamicFileDownload\n})(injectIntl(TransationListMasterJsonView));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/components/TransactionListMasterJsonView.jsx"],"names":["React","useLayoutEffect","useRef","useState","injectIntl","InputGroup","FormControl","Media","ListGroup","Form","Nav","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","MediaSubHeaderText","SearchIcon","ContentPanel","ListMasterWrapper","getActionIcon","AdvFilter","toast","getStatusIcon","PerfectScrollbar","checkBoxOperation","designProperties","transactionStatus","QuickSearch","FilterAccordion","connect","ListView","filterRecordBasedOnPrimaryKeyName","filterRecordBasedOnTwoArrays","filterStatusBasedOnTwoArrays","getSameRecordFromTwoArrays","CustomPager","ReactTooltip","FontAwesomeIcon","faChevronDown","faChevronUp","faExclamationCircle","faFilter","faSearch","faTimes","CustomSwitch","faCloudDownloadAlt","FontIconWrap","dynamicFileDownload","mapStateToProps","state","Login","TransationListMasterJsonView","Component","constructor","props","handlePageChange","e","setState","skip","take","scrollChange","filterColumn","event","filterValue","target","value","keyCode","filterColumnData","filterParam","searchListName","childTabsKey","selectMultiple","selectionKey","inputData","selectedArray","selectedMaster","dataList","removeElementFromArray","masterList","slice","ALL","filteredList","primaryKeyField","map","item","index","push","selectedListName","join","objectName","QUICKSELECTALL","length","getMasterDetail","NA","QUICKSELECTNONE","selectionField","QUICKSELECTSTATUS","warn","intl","formatMessage","id","getselectedDetailAvoidDuplicateProps","master","needMultiSelect","selection","window","getSelection","toString","console","log","findIndex","x","getSelectedDetail","showList","activeIconIndex","bool","multipleselectionFlag","m1","indexValue","MULTISELECT","SINGLESELECT","splice","DESELECT","SINGLEDESELECT","onCheckBoxselect","preventDefault","stopPropagation","updateScrollHeight","setTimeout","pagerheight","document","querySelector","navHeight","filterAccHeight","filterHeight","breadCrumbsHeight","ipad","classList","contains","val","clientHeight","body","add","needAccordianFilter","needFilter","notSearchable","showSearch","hidePaging","cardHead","remove","scrollHeight","toggleSearch","onClickActions1","dataItem","ListmasterSwitch","nusersrolehidescreencode","onClickActions","action","onClick","hide","showHideDetails","showMore","expandAll","Object","values","allFieldExpanded","includes","len","expandCheck","disableClick","ExpandAll","masterData","transactionListDesign","customswitchposition","ref","width","setWidth","updateSize","current","offsetWidth","addEventListener","removeEventListener","actionCount","actionIcons","filter","element","hidden","findWidth","checkboxValidation","inputParam","listName","mainField","maxWidth","mainFieldLabel","concat","showStatusBlink","showStatusLink","showStatusName","showStatusIcon","statusField","padding","display","color","statusColor","scolorhexcode","statusFieldName","split","substring","indexOf","moreField","subFields","field","subFieldsLabel","LABEL","userInfo","slanguagetypecode","COLOUR","VALUE","undefined","subFieldsFile","LISTITEM","viewName","listMasterShowIcon","clickIconGroup","needConditionalIcon","conditionalIconFunction","dataplace","title","controlname","iconGroupView","ListScreenHidebtn","needrights","YES","buttonCount","settings","parseInt","info","componentDidMount","componentWillUnmount","render","checkStatus","showModalBg","splitModeClass","titleClasses","hideQuickSearch","selectionList","selectionColorField","selectionFieldName","hideSearch","disableToolBarItems","searchRef","needMultiValueFilter","onMultiFilterClick","clearAllFilter","filterComponent","onFilterSubmit","showFilter","openFilter","closeFilter","callCloseFunction","titleHead","commonActions","accordianfilterComponent","height","paneHeight","section","splitChangeWidthPercentage","pageSize","setting","componentDidUpdate","previousProps","rebuild","showMoreResetList","Array","isArray","showMoreResetListName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useLayoutEffect, useRef, useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    InputGroup, FormControl, Media, ListGroup, Form, Nav//, Col \r\n} from 'react-bootstrap';\r\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../components/App.styles';\r\nimport { ListMasterWrapper } from '../components/list-master/list-master.styles';\r\nimport { getActionIcon } from '../components/HoverIcons';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport AdvFilter from './AdvFilter';\r\nimport { toast } from 'react-toastify';\r\nimport { getStatusIcon } from './StatusIcon'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { checkBoxOperation, designProperties, transactionStatus } from './Enumeration';\r\nimport QuickSearch from './QuickSearch';\r\nimport FilterAccordion from './custom-accordion/filter-accordion.component';\r\nimport '../pages/registration/registration.css'\r\nimport { connect } from 'react-redux';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { filterRecordBasedOnPrimaryKeyName, filterRecordBasedOnTwoArrays, filterStatusBasedOnTwoArrays, getSameRecordFromTwoArrays } from './CommonScript';\r\nimport CustomPager from './CustomPager';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { //faBell, \r\n    faChevronDown, faChevronUp, faExclamationCircle, faFilter, //faExclamationTriangle,\r\n    faSearch, faTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport CustomSwitch from './custom-switch/custom-switch.component';\r\nimport { faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontIconWrap } from '../../src/components/data-grid/data-grid.styles';\r\nimport { dynamicFileDownload } from '../../src/actions/ServiceAction';\r\n\r\n//import Iframe from 'react-iframe';\r\n//import useLongPress from \"../actions/longPress\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nclass TransationListMasterJsonView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            allFieldExpanded: false,\r\n            buttonCount: 4,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\r\n            info: true,\r\n            expandCheck: [],\r\n            scrollHeight: '100vh',\r\n            multipleselectionFlag: this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false,\r\n            showList: null,\r\n            disableClick: false,\r\n            showSearch: false,\r\n            // filterColumnActive: false\r\n        }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        this.props.scrollChange()\r\n    };\r\n\r\n    filterColumn = (event) => {\r\n        let filterValue = event.target.value;\r\n        if (event.keyCode === 13) {\r\n            this.props.filterColumnData(filterValue, this.props.filterParam, this.props.searchListName, this.props.childTabsKey);\r\n        }\r\n    }\r\n    selectMultiple = (selectionKey, inputData) => {\r\n        let selectedArray = this.props.selectedMaster;\r\n\r\n        let dataList = [];\r\n        let removeElementFromArray = [];\r\n        // let MultipleSelectCount = this.props.Login.settings[3];\r\n        let masterList = this.props.masterList && this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take);\r\n\r\n        if (selectionKey === transactionStatus.ALL) {//Select All\r\n            let filteredList = filterRecordBasedOnPrimaryKeyName(masterList, this.props.primaryKeyField);\r\n            //let filteredList = filterRecordBasedOnTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\r\n            // selectedArray=[];\r\n            // selectedArray = filteredList;\r\n            filteredList.map((item, index) => {\r\n                // if (index < this.state.take) {\r\n                //selectedArray.push(item)\r\n                dataList.push(item[this.props.primaryKeyField]);\r\n                // }\r\n                return null;\r\n            });\r\n\r\n            inputData[`${this.props.selectedListName}`] = filteredList\r\n            inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            inputData[`${this.props.objectName}`] = filteredList;\r\n            // inputData[\"checkBoxOperation\"] = 7;\r\n            inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTALL;\r\n            inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            inputData[\"QuickSelectStatus\"] = true;\r\n            if (dataList.length > 0) {\r\n                this.props.getMasterDetail(inputData, true, true);\r\n            }\r\n\r\n            // inputData[`${this.props.selectedListName}`] = selectedArray\r\n            // inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            // inputData[`${this.props.objectName}`] = selectedArray;\r\n            // inputData[\"checkBoxOperation\"] = 1;\r\n            // inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            // inputData[\"QuickSelectStatus\"] = true;\r\n            // if (dataList.length > 0) {\r\n            //     this.props.getMasterDetail(inputData, true);\r\n            // }\r\n            // else {\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\r\n            // }\r\n\r\n        } else if (selectionKey === transactionStatus.NA) {\r\n            let filteredList = getSameRecordFromTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\r\n            if (filteredList.length > 0) {\r\n                if (selectedArray.length === filteredList.length) {\r\n                    selectedArray = [filteredList[0]];\r\n                    dataList = [selectedArray[0][this.props.primaryKeyField]];\r\n                } else {\r\n                    selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\r\n                    dataList = [selectedArray[0][this.props.primaryKeyField]];\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray;\r\n                //  inputData[\"checkBoxOperation\"] = 6;\r\n                inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTNONE;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = filteredList;\r\n                inputData[\"statusNone\"] = true;\r\n                if (dataList.length > 0) {\r\n                    this.props.getMasterDetail(inputData, false);\r\n                }\r\n            }\r\n\r\n        } else {//Select Status Wise\r\n            selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\r\n\r\n            removeElementFromArray = getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField)\r\n            masterList.map((item) => {\r\n                // if (index < this.state.take) {\r\n                if (item[this.props.selectionField] === selectionKey) {\r\n                    selectedArray.push(item)\r\n                    dataList.push(item[this.props.primaryKeyField]);\r\n                }\r\n                return null;\r\n            });\r\n\r\n            // this.props.masterList && this.props.masterList.map((item) => {\r\n            //     if (item[this.props.selectionField] === selectionKey) {\r\n            //         selectedArray.push(item)\r\n            //         dataList.push(item[this.props.primaryKeyField]);\r\n            //     }\r\n            //     return null;\r\n            // })\r\n            inputData[`${this.props.selectedListName}`] = selectedArray\r\n            inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            inputData[`${this.props.objectName}`] = selectedArray\r\n            // inputData[\"checkBoxOperation\"] = 5;\r\n            inputData[\"checkBoxOperation\"] = checkBoxOperation.QUICKSELECTSTATUS;\r\n            inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            inputData[\"removeElementFromArray\"] = removeElementFromArray;\r\n            if (selectedArray.length > 0) {\r\n                this.props.getMasterDetail(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\r\n            }\r\n        }\r\n    }\r\n    getselectedDetailAvoidDuplicateProps = (master, inputData, needMultiSelect) => {\r\n        let selection = window.getSelection().toString();\r\n        if (selection.length > 0) {\r\n            console.log(\"columnInfo.id\", \"no\");\r\n        } else {\r\n            if ((this.props.selectedMaster.length === 1 &&\r\n                this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1)\r\n                || (needMultiSelect === false)) {\r\n                // const showMore = {};\r\n                this.getSelectedDetail(master, inputData, needMultiSelect);\r\n            }\r\n            this.setState({\r\n                showList: null,\r\n                index: null,\r\n                activeIconIndex: null\r\n            })\r\n        }\r\n    }\r\n    getSelectedDetail = (master, inputData, needMultiSelect) => {\r\n        let bool;\r\n        let selectedMaster;\r\n        let selectedArray;\r\n        if (needMultiSelect === false) {\r\n            if (this.state.multipleselectionFlag) {\r\n                selectedMaster = getSameRecordFromTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField)\r\n            } else {\r\n                selectedMaster = master;\r\n            }\r\n\r\n            if (selectedMaster.length > 2) {\r\n                bool = true;\r\n            }\r\n            if (selectedMaster.length === 1 && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1) {\r\n                bool = false\r\n            } else {\r\n                bool = true\r\n            }\r\n        } else {\r\n            bool = true;\r\n        }\r\n        if (bool) {\r\n            // if(this.props.secondaryKeyField){\r\n            //     selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ?\r\n            //     filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField,this.props.secondaryKeyField) : [] : [];\r\n\r\n            // }else{\r\n            selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ? filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField) : [] : [];\r\n            //}\r\n            let dataList = [];\r\n            let removeElementFromArray = [];\r\n            let indexValue;\r\n            // if(this.props.secondaryKeyField){\r\n            //     indexValue= selectedArray ? selectedArray.findIndex(x => x[this.props.secondaryKeyField] ===master[this.props.secondaryKeyField]) ===-1 || selectedArray.findIndex(x =>x[this.props.primaryKeyField] ===master[this.props.primaryKeyField] && x[this.props.secondaryKeyField] ===master[this.props.secondaryKeyField]) !==-1?-1:\r\n            //     selectedArray.findIndex(x => x[this.props.primaryKeyField] ===master[this.props.primaryKeyField]) :-2 ; \r\n\r\n            //                  // && selectedArray.findIndex(x => x[this.props.primaryKeyField] ===master[this.props.primaryKeyField])\r\n            // }\r\n            // else {\r\n            indexValue = selectedArray ?\r\n                selectedArray.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\r\n            //  }            \r\n            if (indexValue === -1) {//add new item\r\n                // let MultipleSelectCount = this.props.Login.settings[3];\r\n                // if (selectedArray.length < MultipleSelectCount) {\r\n\r\n\r\n                // if(this.props.secondaryKeyField){\r\n                //     removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField,this.props.secondaryKeyField) :\r\n                //     getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField,this.props.secondaryKeyField);\r\n\r\n                // }else{\r\n                removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) :\r\n                    getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField);\r\n\r\n                // }\r\n                if (this.props.needMultiSelect) {//uselect an Item\r\n                    selectedArray.push(master);\r\n                    dataList.push(master[this.props.primaryKeyField]);\r\n                } else {//Click new Item\r\n                    selectedArray = [master];\r\n                    dataList = [master[this.props.primaryKeyField]];\r\n\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                // inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.MULTISELECT : this.state.multipleselectionFlag ? checkBoxOperation.QUICKSELECTSTATUS : checkBoxOperation.SINGLESELECT;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = needMultiSelect ? [] : removeElementFromArray;\r\n                inputData[\"secondarySelection\"] = needMultiSelect;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, true);\r\n\r\n                }\r\n                // } else {\r\n                //     toast.warn(`${this.props.intl.formatMessage({ id: \"IDS_SELECTIONLIMITEXCEED\" })} ${MultipleSelectCount} ${this.props.intl.formatMessage({ id: \"IDS_RECORDS\" })}`);\r\n                // }\r\n            } else if (needMultiSelect) {\r\n                // let removeElementFromArray = [];\r\n                if (needMultiSelect) {//uselect an Item\r\n                    removeElementFromArray.push(this.props.selectedMaster[indexValue]);\r\n                    selectedArray.splice(indexValue, 1)\r\n                    dataList.splice(indexValue, 1);\r\n\r\n                } else {//Click new Item\r\n                    removeElementFromArray.push(master);\r\n                    selectedArray.push(master);\r\n                    dataList.push(master[this.props.primaryKeyField])\r\n\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray;\r\n                inputData[`${this.props.primaryKeyField}`] = selectedArray.map(x => x[this.props.primaryKeyField]).join(\",\");\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                // inputData[\"checkBoxOperation\"] = needMultiSelect ? 2 : 4;\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.DESELECT : checkBoxOperation.SINGLEDESELECT;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = removeElementFromArray;\r\n                inputData[\"secondarySelection\"] = needMultiSelect;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, false);\r\n                }\r\n            } else {\r\n                selectedArray.push(master);\r\n                dataList.push(master[this.props.primaryKeyField])\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                // inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? checkBoxOperation.MULTISELECT : this.state.multipleselectionFlag ? checkBoxOperation.QUICKSELECTSTATUS : checkBoxOperation.SINGLESELECT;\r\n                inputData[\"secondarySelection\"] = needMultiSelect;\r\n\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* onCheckBoxselect = (event, master, inputData) => {\r\n         \r\n             if (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1) {\r\n                 this.getSelectedDetail(master, inputData, true);\r\n             } else if (this.props.selectedMaster.length > 1) {\r\n                 this.getSelectedDetail(master, inputData, true);\r\n             }\r\n        // }\r\n         this.setState({\r\n             showList: null\r\n         })\r\n \r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n     }*/\r\n\r\n    onCheckBoxselect = (event, master, inputData) => {\r\n        // if(this.props.secondaryKeyField)\r\n        // {\r\n\r\n        //     //this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1 &&\r\n        //     if(this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === master[this.props.secondaryKeyField]) === -1\r\n        //     || this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === master[this.props.secondaryKeyField] && m1[this.props.primaryKeyField] !== master[this.props.primaryKeyField]) !== -1)\r\n        //     {\r\n        //         this.getSelectedDetail(master, inputData, true);\r\n        //     }\r\n        //     else if (this.props.selectedMaster.length > 1) {\r\n        //         this.getSelectedDetail(master, inputData, true);\r\n        //     }\r\n        // }\r\n        // else{\r\n        if (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1) {\r\n            this.getSelectedDetail(master, inputData, true);\r\n        } else if (this.props.selectedMaster.length > 1) {\r\n            this.getSelectedDetail(master, inputData, true);\r\n        }\r\n        // }\r\n        this.setState({\r\n            showList: null\r\n        })\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        // else{\r\n        //     event.preventDefault();\r\n        //     event.stopPropagation();\r\n        //     this.getSelectedDetail(master, inputData, true);\r\n        // }\r\n    }\r\n\r\n\r\n    updateScrollHeight = (props, state) => {\r\n        setTimeout(() => {\r\n            const pagerheight = document.querySelector('.pager_wrap');\r\n            const navHeight = document.querySelector('.navbar.navbar-expand');\r\n            const filterAccHeight = document.querySelector('.filter-accordian');\r\n            const filterHeight = document.querySelector('.filter-wrap-group');\r\n            const breadCrumbsHeight = document.querySelector('.breadcrumbs-scroll-container');\r\n            const ipad = document.querySelector('html').classList.contains(\"ipad\");\r\n            let val = navHeight ? navHeight.clientHeight : 53;\r\n            \r\n            if(ipad){                  \r\n                document.body.classList.add('ipad-hidden');      \r\n                if (props.needAccordianFilter) {\r\n                    val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45) ;\r\n                }\r\n                if (props.needFilter) {\r\n                    val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36)  + 6;\r\n                }\r\n                if (!props.notSearchable || !this.state.showSearch) {\r\n                    val = val + (filterHeight ? filterHeight.clientHeight : 55);\r\n                }\r\n                if (!props.hidePaging) {\r\n                    val = val + (pagerheight ? pagerheight.clientHeight : 32) + 58 ;\r\n                }\r\n                if (props.cardHead) {\r\n                    val = val + props.cardHead;\r\n                }\r\n            }else{\r\n                document.body.classList.remove('ipad-hidden');    \r\n                if (props.needAccordianFilter) {\r\n                    val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45);\r\n                }\r\n                if (props.needFilter) {\r\n                    val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36) ;\r\n                }\r\n                if (!props.notSearchable || !this.state.showSearch) {\r\n                    val = val + (filterHeight ? filterHeight.clientHeight : 55);\r\n                }\r\n                if (!props.hidePaging) {\r\n                    val = val + (pagerheight ? pagerheight.clientHeight : 32);\r\n                }\r\n                if (props.cardHead) {\r\n                    val = val + props.cardHead;\r\n                }\r\n            }\r\n            \r\n            this.setState({\r\n                scrollHeight: 'calc(100vh - ' + val + 'px)'\r\n\r\n            })\r\n        }, 1000)\r\n    }\r\n    componentDidMount() {\r\n        this.updateScrollHeight(this.props, this.state)\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        document.body.classList.remove('ipad-hidden'); \r\n    }\r\n\r\n\r\n    toggleSearch = () => {\r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"prps:\",this.props);\r\n        // const { skip, take } = this.state;\r\n        let checkStatus = ''\r\n        let masterList = this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [];\r\n        let selectedMaster = this.props.selectedMaster && this.props.masterList ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : [];\r\n        if (masterList && masterList.length > 0 && selectedMaster && selectedMaster.length > 0) {\r\n\r\n            if (masterList.length === selectedMaster.length) {\r\n                checkStatus = 'all'\r\n            } else if (masterList.length !== selectedMaster.length) {\r\n                checkStatus = 'partial'\r\n            } else if (this.props.selectedMaster.length === 0) {\r\n                checkStatus = ''\r\n            }\r\n        }\r\n        //console.log(\"checkStatus:\",checkStatus);\r\n        // className=\"client-list-scroll\"\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-common-wrap\" globalEventOff='click' /> */}\r\n                <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} ${this.props.splitModeClass}`}>\r\n               \r\n                    <SearchAdd className={`d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                        {!this.props.notSearchable ?\r\n                        <div>\r\n                            <InputGroup className=\"search-with-ico-list align-items-center\">\r\n                                <InputGroup.Append>\r\n                                    {this.props.needMultiSelect ?\r\n                                        <QuickSearch\r\n                                            checkStatus={checkStatus}\r\n                                            //selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [], this.props.selectionField, this.props.selectionColorField)}\r\n                                            selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectionField, this.props.selectionColorField)}\r\n                                            selectionField={this.props.selectionField}\r\n                                            selectionFieldName={this.props.selectionFieldName}\r\n                                            selectionColorField={this.props.selectionColorField}\r\n                                            selectMultiple={this.selectMultiple}\r\n                                            inputParam={this.props.inputParam}\r\n                                        />\r\n                                        : \"\"}\r\n                                </InputGroup.Append>\r\n                                {this.props.hideSearch ? \"\" :\r\n                                    !this.props.disableToolBarItems ?\r\n                                        // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\r\n                                        <>    <div className={`list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`}>\r\n                                            <SearchIcon className={`search-icon ${false ? 'filter-column-active' : ''}`} onClick={this.toggleSearch}>\r\n                                                <FontAwesomeIcon icon={faSearch} />\r\n                                            </SearchIcon>\r\n\r\n                                            <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\r\n                                            {this.state.showSearch ?\r\n                                                <SearchIcon className=\"close-right-icon\" onClick={this.toggleSearch}>\r\n                                                    <FontAwesomeIcon icon={faTimes} />\r\n                                                </SearchIcon>\r\n                                                : \"\"}\r\n\r\n\r\n                                        </div>\r\n                                            {/* Start of ALPD-4130 Additional Filter and Clear All Filter - ATE-241 */}\r\n                                            {this.state.showSearch && this.props.needMultiValueFilter ?\r\n                                                <>\r\n                                                    <a className='nav-link p-0'>\r\n                                                        <FontAwesomeIcon icon={faFilter} className='fa-1x' onClick={this.props.onMultiFilterClick} />\r\n                                                    </a>\r\n                                                    <a className=\"btn btn-link ml-2 p-0\" variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CLEARFILTER\" })}\r\n                                                        //   data-for=\"tooltip-common-wrap\"\r\n                                                        onClick={this.props.clearAllFilter} >\r\n                                                        Clear Filter\r\n                                                    </a>\r\n                                                </>\r\n                                                : \"\"}\r\n                                            {/* End of ALPD-4130 Additional Filter End -ATE-241 */}\r\n                                        </>\r\n                                        : \"\"\r\n\r\n                                }\r\n                                {!this.state.showSearch ?\r\n                                    <span className='filter-top-wrap'>\r\n                                        {!this.props.disableToolBarItems && this.props.needFilter ?\r\n                                            <InputGroup.Append>\r\n                                                <AdvFilter\r\n                                                    filterComponent={this.props.filterComponent}\r\n                                                    dataFor=\"tooltip-common-wrap\"\r\n                                                    onFilterSubmit={this.props.onFilterSubmit}\r\n                                                    showFilter={this.props.showFilter}\r\n                                                    openFilter={this.props.openFilter}\r\n                                                    closeFilter={this.props.closeFilter}\r\n                                                    callCloseFunction={this.props.callCloseFunction}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                                />\r\n                                            </InputGroup.Append>\r\n                                            : \"\"}\r\n\r\n\r\n                                        {this.props.moreField && this.props.moreField.length > 0 ?\r\n                                            <InputGroup.Append>\r\n                                                <InputGroup.Text>\r\n                                                    {/* <ProductList className=\"d-flex justify-content-end icon-group-wrap\"> */}\r\n                                                    <Nav.Link className=\"p-0\" name=\"gridexpand\" onClick={() => this.ExpandAll(masterList)}>\r\n                                                        {/* <FontAwesomeIcon icon={faArrowsAltV} /> */}\r\n                                                        {this.props.intl.formatMessage({\r\n                                                            id: this.props.masterList.length ? this.state.expandCheck ?\r\n                                                                this.props.masterList.length === this.state.expandCheck.length ?\r\n                                                                    this.state.expandCheck.includes(false) ? \"IDS_EXPANDALL\" : \"IDS_EXPANDLESS\"\r\n                                                                    : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                                : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                                : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                        })}\r\n                                                    </Nav.Link>\r\n                                                    {/* </ProductList> */}\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Append>\r\n                                            : \"\"}\r\n                                    </span> : \"\"}\r\n                                \r\n                            </InputGroup> </div> : ''}                       \r\n                    </SearchAdd>\r\n                    {!this.state.showSearch ?\r\n                    <div className='action-list-wrap'>\r\n                <PerfectScrollbar>\r\n                    <SearchAdd className={`d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                        \r\n                        <>\r\n                            \r\n                                <span>\r\n                                    {this.props.titleHead ? <h4>{this.props.titleHead}</h4> : ''}\r\n                                    {this.props.commonActions}\r\n                                </span> \r\n                        </>\r\n                    </SearchAdd>\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                    : \"\"}\r\n                    {\r\n                        this.props.needAccordianFilter ?\r\n                            <FilterAccordion key=\"filter\" className=\"filter-accordian\"\r\n                                filterComponent={this.props.accordianfilterComponent}\r\n                            />\r\n                            : \"\"\r\n                    }\r\n                    {/* className={` ${this.props.masterList && this.props.masterList.length > 0 ? 'parent-port-height' : 0}`} className=\"box-shadow-box-btm\" */}\r\n                    <PerfectScrollbar >\r\n                        {/*<ClientList className=\"product-list\" style={{ height: this.props.paneHeight ? this.props.paneHeight : this.props.masterList && this.props.masterList.length > 0 ? 'calc(100vh - 230px)' : 'calc(100vh - 180px)' }}>\r\n                   */}\r\n\r\n                        <ClientList className={`product-list sm-list-view port-height-inner ${this.props.actionIcons && this.props.actionIcons.filter(element => { return element.hidden === false }).length > 0 ? '' : 'no-action-icons'}`} style={{ height: this.props.paneHeight ? this.props.paneHeight : this.state.scrollHeight }}>\r\n                            <ListView\r\n                                //  data={this.props.hidePaging ? this.props.masterList : this.props.masterList ? this.props.masterList.slice(this.state.skip, this.props.skip + this.props.take) : []}\r\n                                //                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? \r\n                                //                    this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + \r\n                                //                (this.props.take ? this.props.take : this.state.take)))}\r\n                                //   //  item={(props, index) => this.transactionListDesign(props, this.props.skip, index)}\r\n                                //        //       data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\r\n                                //        item={(props) => this.transactionListDesign(props)}\r\n                                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take)}\r\n                                item={(props, section, index) => this.transactionListDesign(props, this.props.skip, index)}\r\n\r\n\r\n                            //  item={(props, index) => this.transactionListDesign(props, 0, 0)}\r\n\r\n                            // style={{ width: \"100%\" }}\r\n                            // header={myHeader}\r\n                            // footer={this.myFooter}\r\n                            //item={React.ComponentType<ListViewItemProps>} \r\n\r\n                            />\r\n                        </ClientList>\r\n                    </PerfectScrollbar >\r\n                    {\r\n                        this.props.hidePaging ? \"\" :\r\n                            this.props.masterList && this.props.masterList.length > 0 ?\r\n                                <CustomPager\r\n                                    skip={this.props.skip}\r\n                                    //width={this.props.splitChangeWidthPercentage}\r\n                                    take={this.props.take}\r\n                                    handlePageChange={this.props.handlePageChange}\r\n                                    total={this.props.masterList.length}\r\n                                    buttonCount={this.props.splitChangeWidthPercentage >= 30 ? this.state.buttonCount : this.props.buttonCount ? this.props.buttonCount : 2}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    info={this.state.info}\r\n                                    pagershowwidth={30}\r\n                                    // pageSize={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                                    pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\r\n                                //  pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\r\n                                >\r\n                                </CustomPager>\r\n                                //     <CustomPager\r\n                                //     skip={this.props.skip ? this.props.skip : this.state.skip}\r\n                                //     take={this.props.take ? this.props.take : this.state.take}\r\n                                //     width={20}\r\n                                //     pagershowwidth={18}\r\n                                //     handlePageChange={this.props.handlePageChange}\r\n                                //     total={this.props.masterList ? this.props.masterList.length : 0}\r\n                                //     buttonCount={this.state.buttonCount}\r\n                                //     info={this.state.info}\r\n                                //     userInfo={this.props.Login.userInfo}\r\n                                //     pageSize={this.props.pageSize? this.props.pageSize :this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                                // >\r\n                                //s </CustomPager>\r\n                                : ''\r\n                    }\r\n                </ListMasterWrapper >\r\n            </>\r\n        )\r\n    }\r\n    // myFooter = () => {\r\n    //     return (\r\n\r\n    //     )\r\n    // }\r\n    onClickActions1 = (event, dataItem) => {\r\n\r\n        event.stopPropagation();\r\n        this.props.ListmasterSwitch({ event, nusersrolehidescreencode: dataItem.nusersrolehidescreencode })\r\n    }\r\n\r\n    onClickActions = (event, master, action) => {\r\n\r\n        event.stopPropagation();\r\n        let selectedArray = this.props.selectedMaster ? this.props.selectedMaster : [];\r\n        let dataList = selectedArray.map(item => item[this.props.primaryKeyField]);\r\n        const indexValue = this.props.selectedMaster ? this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\r\n        if (indexValue === -1) {\r\n            if (this.props.needMultiSelect) {\r\n                selectedArray.push(master);\r\n                dataList.push(master[this.props.primaryKeyField]);\r\n            } else {\r\n                selectedArray = [master];\r\n                dataList = [master[this.props.primaryKeyField]];\r\n            }\r\n        }\r\n        action.onClick({ ...action.inputData, [action.objectName]: master, [this.props.selectedListName]: selectedArray, [this.props.primaryKeyField]: dataList.join(\",\") })\r\n        ReactTooltip.hide();\r\n    }\r\n\r\n    showHideDetails = (event, index) => {\r\n        event.stopPropagation();\r\n        let showMore = { ...this.state.showMore, [index]: !this.state.showMore[index] }\r\n        //   const check=showMore.map(item=>{return})\r\n        const expandAll = [...Object.values(showMore)]\r\n        let allFieldExpanded = this.state.allFieldExpanded;\r\n        if (expandAll.includes(false)) {\r\n            allFieldExpanded = false\r\n        } else {\r\n            let len = this.props.masterList.length\r\n            if (len === expandAll.length) {\r\n                allFieldExpanded = true\r\n            }\r\n        }\r\n        this.setState({ showMore, allFieldExpanded, expandCheck: expandAll, disableClick: true })\r\n\r\n    }\r\n    ExpandAll = (masterData) => {\r\n        const allFieldExpanded = this.state.allFieldExpanded;\r\n        let showMore = {};\r\n        if (!allFieldExpanded) {\r\n            showMore = masterData.map((master, index) => {\r\n                return showMore = { ...showMore, [index]: true };\r\n            });\r\n        }\r\n        this.setState({ showMore, allFieldExpanded: !allFieldExpanded });\r\n    }\r\n    iconGroupView(index) {\r\n        this.setState({ activeIconIndex: this.state.activeIconIndex == index ? null : index })\r\n    }\r\n\r\n    checkboxValidation(item) {\r\n        // if(this.props.secondaryKeyField && this.props.selectedMaster)\r\n        // {\r\n\r\n        //     if(this.props.secondarySelection)\r\n        //     {\r\n        //         // if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 \r\n        //         // && this.props.selectedMaster.findIndex(m1 => m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) !== -1\r\n        //         // )\r\n        //         // {\r\n        //         //         return true;\r\n        //         // }\r\n\r\n        //         if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField] && m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) !== -1)\r\n        //         {\r\n        //             return true;\r\n        //         }\r\n        //         // else if(this.props.selectedMaster.length()==1)\r\n        //         // {\r\n        //         //     if(this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField] && m1[this.props.secondaryKeyField] === item[this.props.secondaryKeyField]) == -1)\r\n        //         //     {\r\n        //         //         return true;\r\n        //         //     }\r\n        //         // }\r\n\r\n        //     }\r\n        //     else if(this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1)\r\n        //     {\r\n        //         return true;\r\n        //     }\r\n        //     else{\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        // else{\r\n\r\n        if (this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        //}\r\n    }\r\n\r\n    transactionListDesign = (props, skip, index) => {\r\n        let item = props.dataItem;\r\n        // console.log(\"item:\", item);\r\n        const customswitchposition = {\r\n            // 'padding-left': '290px',\r\n            'padding-top': '-20px'\r\n        }\r\n        // let index;\r\n        // const onLongPress = (e) => {\r\n        //     e.preventDefault();\r\n        //     e.stopPropagation();\r\n        //     this.setState({\r\n        //         index: props.index === this.state.index ? null : props.index\r\n        //     })\r\n        // };\r\n        const ref = useRef(null);\r\n        const [width, setWidth] = useState(0);\r\n        useLayoutEffect(() => {\r\n            function updateSize() {\r\n                setWidth(ref.current.offsetWidth - 200);\r\n            }\r\n            window.addEventListener('resize', updateSize);\r\n            updateSize();\r\n            return () => window.removeEventListener('resize', updateSize)\r\n        }, []);\r\n        const actionCount = this.props.actionIcons && this.props.actionIcons.filter(element => { return element.hidden === false }).length;\r\n        let findWidth;\r\n        if (width > 200) {\r\n            findWidth = false;\r\n        } else {\r\n            findWidth = true;\r\n        }\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-common-wrap\" globalEventOff='click' /> */}\r\n                <ListGroup.Item as=\"li\" ref={ref}\r\n                    className={`${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor  \r\n                    ${this.checkboxValidation(item) ? \"active\" : \"\"}`}>\r\n                    {/* //this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 */}\r\n                    <Media onClick={() => this.getselectedDetailAvoidDuplicateProps(item, { ...this.props.inputParam }, false)}>\r\n                        {this.props.needMultiSelect ?\r\n                            <Form.Check custom type=\"checkbox\" id=\"customControl\">\r\n                                <Form.Check.Input type=\"checkbox\" id={`tm_customCheck_${this.props.listName}_${props.index}`}\r\n                                    // checked={this.props.selectedMaster &&\r\n                                    //     this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? true : false}\r\n\r\n                                    checked={this.checkboxValidation(item)}\r\n\r\n                                    readOnly\r\n                                />\r\n                                {/* <Form.Check.Label className={`mr-3 ${this.props.showStatusBlink && item[\"bflag\"] ? \"blinkCheckbox\":\"\"}`} */}\r\n                                <Form.Check.Label className={\"mr-1\"}\r\n                                    onClick={(event) => this.onCheckBoxselect(event, item, { ...this.props.inputParam }, true)}\r\n                                    htmlFor={`tm_customCheck_${this.props.listName}_${props.index}`}>\r\n\r\n                                    {/* <TickIcon className='svg-icon list-tick-icon' width='11px' /> */}\r\n                                </Form.Check.Label>\r\n                            </Form.Check>\r\n                            : \"\"}\r\n                        <Media.Body >\r\n\r\n                            {/* <MediaHeader>\r\n                        {this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \")}\r\n                        {item[this.props.mainField]}\r\n                        {this.props.showStatusLink &&\r\n                            <Nav.Link className='add-txt-btn blue-text ml-1' style={{ display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n                                {this.props.showStatusName && <span className='ml-1 text-nowrap'>{item[this.props.statusFieldName]}</span>}\r\n                            </Nav.Link>\r\n                        }\r\n                    </MediaHeader> */}\r\n\r\n                            <ContentPanel className={`product-category  title-grid-wrap-width-md d-flex align-items-center' ${this.state.allFieldExpanded || this.state.showMore[props.index] ? 'show-listed-view' : \"\"} ${this.state.activeIconIndex == props.index ? \"show-more-action-clicked\" : \"\"}`}>\r\n                                <>\r\n                                    <div className='list-more-positioned'>\r\n                                        <div className={!findWidth ? 'd-flex' : ''}>\r\n                                            <MediaHeader data-tip={item[this.props.mainField]}  //data-for=\"tooltip-common-wrap\"\r\n                                                style={{ maxWidth: this.props.objectName === \"test\" ? width + 100 : \"15rem\" }}>\r\n                                                {this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \")}\r\n                                                {item[this.props.mainField]}\r\n                                                {/* || item['jsondata'][this.props.mainField] */}\r\n                                                {/* {console.log(item[this.props.mainField] ? item[this.props.mainField] : item['jsondata'][this.props.mainField])} */}\r\n\r\n                                                {this.props.showStatusBlink && item[\"bflag\"] ?\r\n                                                    // <div class=\"blink\">🔴</div> \r\n                                                    <FontAwesomeIcon class=\"blink\" style={{ width: \"0.8rem\" }} icon={faExclamationCircle} />\r\n                                                    : \"\"}\r\n                                            </MediaHeader>\r\n                                            {this.props.showStatusLink && this.props.showStatusName &&\r\n                                                <>\r\n                                                    {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n                                                    {this.props.showStatusName &&\r\n                                                        <Nav.Link className='add-txt-btn blue-text mr-2'\r\n                                                            style={{ padding: \"0\", display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                                            <span className='text-nowrap'>\r\n                                                                {item[this.props.statusFieldName].split(\"out\")[0]}</span>\r\n                                                        </Nav.Link>\r\n                                                    }\r\n\r\n                                                    {(this.props.primaryKeyField === \"ntransactiontestcode\" || this.props.primaryKeyField === \"ntransactionsamplecode\") &&\r\n                                                        <Nav.Link className='add-txt-btn blue-text mr-2'\r\n                                                            style={{ padding: \"0\", display: 'inline', color: \"blue\" }}>\r\n                                                            <span className='text-nowrap'>\r\n                                                                {item[this.props.statusFieldName].includes(\"out\") ? item[this.props.statusFieldName].substring(item[this.props.statusFieldName].indexOf(\" out\") + 1) : \"\"}</span>\r\n                                                        </Nav.Link>\r\n                                                    }\r\n                                                </>\r\n                                                //     <>\r\n\r\n                                                //     {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n\r\n                                                //     {this.props.showStatusName &&\r\n                                                //     <>                                                        \r\n                                                //         <Nav.Link className='add-txt-btn blue-text mr-2'\r\n                                                //         style={{ padding: \"0\", display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                                //             <span className='text-nowrap'>\r\n                                                //             { item[this.props.statusFieldName]}</span>                                                            \r\n                                                //         </Nav.Link>\r\n                                                //         <Nav.Link className='add-txt-btn blue-text mr-2'\r\n\r\n                                                //         style={{ padding: \"0\", display: 'inline', color: \"blue\"}}>\r\n\r\n                                                //             <span className='text-nowrap'>\r\n\r\n                                                //             \"sathish\"</span>                                                            \r\n\r\n                                                //         </Nav.Link>\r\n\r\n                                                //         </>\r\n\r\n                                                //     }\r\n\r\n                                                // </>\r\n                                            }\r\n                                            {/* <MediaHeader className='header-full-view'>\r\n                                            {this.props.showStatusLink &&\r\n                                                <Nav.Link className='add-txt-btn blue-text'\r\n                                                    style={{ padding: \"0\", display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                                    {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n                                                    {this.props.showStatusName &&\r\n                                                    <span className='ml-1 text-nowrap'>\r\n                                                    { item[this.props.statusFieldName] }</span>}\r\n                                                </Nav.Link>\r\n                                            }\r\n                                            </MediaHeader> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.props.moreField && this.props.moreField.length > 0 ?\r\n                                        <MediaLabel className={`show-more-action-wrap ${actionCount > 0 && 'vertical-icon-space'}`}>\r\n                                            <Nav.Link name={`show-wrap_${props.index}`} className={`show-more-action showmore no-padding`} onClick={(event) => this.showHideDetails(event, props.index, \"inner\")} style={{ display: \"inline\" }} title={this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}>\r\n                                                {/* <Form.Label className={`show-more-link mr-1 showmore`} htmlFor={`show-wrap_${props.index}`}>{` ${this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}</Form.Label> */}\r\n                                                <FontAwesomeIcon size=\"sm\" htmlFor={`show-wrap_${props.index}`} icon={this.state.allFieldExpanded ? faChevronUp : this.state.showMore[props.index] ? faChevronUp : faChevronDown} />\r\n                                            </Nav.Link>\r\n                                        </MediaLabel>\r\n                                        : \"\"}\r\n                                </>\r\n                            </ContentPanel>\r\n                            <MediaSubHeaderText style={{ padding: \"0.1rem\" }} className=\"text-wrap\">\r\n                                <span>\r\n\r\n\r\n\r\n                                    {this.props.subFields && this.props.subFields.map((field, index) =>\r\n                                        this.props.subFieldsLabel ?\r\n                                            <>\r\n                                                <MediaLabel>{`${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] &&\r\n                                                    field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \" ||\r\n                                                    this.props.intl.formatMessage({ id: field[designProperties.LABEL] }) + \" : \"}`}</MediaLabel>\r\n                                                <MediaLabel style={{ color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\" }}>\r\n                                                    {item[field[designProperties.VALUE]] === undefined || item[field[designProperties.VALUE]] === '' ? '-' : item[field[designProperties.VALUE]]}\r\n                                                </MediaLabel>\r\n                                                {index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                                {/* index % 2 === 0 && */}\r\n                                            </> :\r\n                                            <>\r\n                                                <MediaLabel style={{ color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\" }}>\r\n                                                    {`${item[field[designProperties.VALUE]] === undefined || item[field[designProperties.VALUE]] === '' ? '-' : item[field[designProperties.VALUE]]}`}</MediaLabel>\r\n                                                {this.props.subFieldsFile && (field && field[designProperties.LISTITEM] === 'files') ?\r\n                                                    <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                        data-place=\"left\"\r\n                                                        onClick={() => this.props.dynamicFileDownload({ ...item, field, viewName: \"subSample\", userInfo: this.props.Login.userInfo })}>\r\n                                                        <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                    </FontIconWrap> : \"\"}\r\n                                                {index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                                {/* index % 2 === 0 &&  */}\r\n                                            </>\r\n                                    )}\r\n                                </span>\r\n                                {this.props.moreField && this.props.moreField.length > 0 ?\r\n                                    <>\r\n                                        {/* <MediaLabel>\r\n                                    <Nav.Link name={`show-wrap_${props.index}`} className={`show-more-action showmore`} onClick={(event) => this.showHideDetails(event, props.index)} style={{ display: \"inline\" }}>\r\n                                        <Form.Label className={`show-more-link showmore`} htmlFor={`show-wrap_${props.index}`}>{` ...${this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}</Form.Label>\r\n                                    </Nav.Link>\r\n                                </MediaLabel> */}\r\n                                        <Media.Body className={`show-more-wrap ${this.state.allFieldExpanded ? \"showmore\" : this.state.showMore[props.index] ? \"showmore\" : \"\"}`}>\r\n                                            <MediaSubHeader>\r\n                                                {this.props.moreField.map((field, index) =>\r\n                                                    <>\r\n                                                        <MediaLabel className='text-wrap' >{`${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] ?\r\n                                                            field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \" :\r\n                                                            this.props.intl.formatMessage({ id: field[designProperties.LABEL] }) + \" : \"}  ${item[field[designProperties.VALUE]]}`}</MediaLabel>\r\n                                                        {index % 2 === 0 && index !== this.props.moreField.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                        {(index + 1) % 2 === 0 ? <br></br> : \"\"}\r\n                                                    </>\r\n                                                )}\r\n                                            </MediaSubHeader>\r\n                                        </Media.Body>\r\n                                    </> : \"\"}\r\n                            </MediaSubHeaderText>\r\n                        </Media.Body>\r\n                        <div className={`icon-list-sm-wrap ${props.index === this.state.index ? 'active' : \"\"}`}>\r\n                            {this.props.actionIcons && this.props.selectedMaster &&\r\n                                (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1)\r\n                                && this.props.actionIcons.length > 0 ?\r\n                                // <div onClick={onLongPress} className=\"icon-list-sm\" >\r\n                                //  <div className=\"icon-list-sm\" >\r\n                                //      <FontAwesomeIcon size=\"sm\" icon={faChevronDown} />\r\n                                //  </div>\r\n                                \"\" : \"\"}\r\n                        </div>\r\n                        {actionCount > 1 ?\r\n                                    <div className={`icon-group-wrap ${this.props.actionIcons && this.props.listMasterShowIcon ? \"enable-view\" : \"\"} ${this.props.clickIconGroup ? \"click-view\" : \"hover-view\"} ${this.state.activeIconIndex == props.index ? \"active\" : \"\"}`}>\r\n                                    {this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) =>\r\n                                        <span className={`${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`}>\r\n                                            {action.needConditionalIcon ?\r\n                                                action.conditionalIconFunction(item) &&\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    // data-for=\"tooltip-common-wrap\"\r\n                                                    data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                                    data-tip={action.title}\r\n                                                    hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                    onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                                    {getActionIcon(action.controlname)}\r\n                                                </Nav.Link>\r\n                                                :\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    // data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={action.title}\r\n                                                    data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                                    hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                    onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                                    {getActionIcon(action.controlname)}\r\n                                                </Nav.Link>}\r\n                                        </span>\r\n                                    )}\r\n        \r\n        \r\n                                    {/* {this.props.ListmasterSwitch && this.props.ListScreenHidebtn &&\r\n                                            <span data-for=\"screenrights_wrap\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLESCREEN\" })}>\r\n                                                   <Nav.Link  onChange={(event) => this.onClickActions1(event, props.dataItem)}>\r\n                                                 <div style={customswitchposition} > \r\n                                                    { \r\n                                                        <CustomSwitch type=\"switch\" id={props.dataItem.nusersrolehidescreencode}\r\n                                                        //  id={\"ListmasterSwitch\"}\r\n                                                        //onChange={(event) => this.onClickActions1(event, props.dataItem)}\r\n                                                        checked={props.dataItem.needrights === transactionStatus.YES ? true : false}\r\n                                                        name={props.dataItem.nusersrolehidescreencode}\r\n                                                        className=\"custom-switch-md customeswitchmanual\"\r\n                                                        //data-tip={\"Enable to group by screen name\"}\r\n                                                        // data-for=\"screenrights_wrap\"\r\n                                                        />\r\n                                                    }\r\n                                                  </div> \r\n                                                </Nav.Link> \r\n                                            </span>\r\n                                    } */}\r\n        \r\n                                </div>\r\n                                :\r\n                                <>\r\n                                {this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) =>\r\n                                        <span className={`${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`}>\r\n                                            {action.needConditionalIcon ?\r\n                                                action.conditionalIconFunction(item) &&\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    // data-for=\"tooltip-common-wrap\"\r\n                                                    data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                                    data-tip={action.title}\r\n                                                    hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                    onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                                    {getActionIcon(action.controlname)}\r\n                                                </Nav.Link>\r\n                                                :\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    // data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={action.title}\r\n                                                    data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                                    hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                    onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                                    {getActionIcon(action.controlname)}\r\n                                                </Nav.Link>}\r\n                                        </span>\r\n                                    )}\r\n                                </>\r\n                                }\r\n                        \r\n\r\n                    </Media >\r\n\r\n                    {this.props.clickIconGroup ?\r\n\r\n                        (this.props.listMasterShowIcon && this.props.actionIcons && this.props.actionIcons.length <= this.props.listMasterShowIcon) ? \"\" :\r\n                            <>\r\n                                {actionCount > 1 ?\r\n                                    <><span className='vertical-dots end-icon' onClick={() => this.iconGroupView(props.index)}></span></>\r\n                                :\r\n                                ''\r\n                                }\r\n\r\n                            </>\r\n                        : \"\"}\r\n\r\n                    {this.props.ListmasterSwitch && this.props.ListScreenHidebtn &&\r\n                        <span\r\n                            //data-for=\"screenrights_wrap\" \r\n                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLESCREEN\" })}>\r\n                            <div style={customswitchposition} >\r\n                                {<CustomSwitch type=\"switch\" id={props.dataItem.nusersrolehidescreencode}\r\n                                    //  id={\"ListmasterSwitch\"}\r\n                                    onChange={(event) => this.props.ListmasterSwitch(event, props.dataItem.nusersrolehidescreencode)}\r\n                                    checked={props.dataItem.needrights === transactionStatus.YES ? true : false}\r\n                                    name={props.dataItem.nusersrolehidescreencode}\r\n                                    className=\"custom-switch-md customeswitchmanual\"\r\n                                //data-tip={\"Enable to group by screen name\"}\r\n                                // data-for=\"screenrights_wrap\"\r\n                                />}\r\n                            </div>\r\n                        </span>\r\n                    }\r\n                </ListGroup.Item >\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if (this.props.showMoreResetList) {\r\n            if (this.props.inputParam.masterData && !Array.isArray(this.props.inputParam.masterData) && this.props.inputParam.masterData[this.props.showMoreResetListName]\r\n                !== (previousProps.inputParam.masterData ? previousProps.inputParam.masterData[this.props.showMoreResetListName] : undefined)) {\r\n                this.setState({ allFieldExpanded: false, showList: null, showMore: {} });\r\n            }\r\n        }\r\n        if (this.props.masterList !== previousProps.masterList) {\r\n            this.updateScrollHeight(this.props, this.state)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { dynamicFileDownload })(injectIntl(TransationListMasterJsonView));\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}