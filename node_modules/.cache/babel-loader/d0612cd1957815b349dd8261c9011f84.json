{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\components\\\\multi-column-combo-search\\\\multi-column-combo-search.js\";\nimport React from \"react\";\nimport './multi-column-combo-search.css';\nimport { FormattedMessage, injectIntl } from \"react-intl\"; // import { sortByField } from \"../CommonScript\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Col, Row, Table } from \"react-bootstrap\";\nimport { DivWrap, InlineEl, LabelNormal, TableData, TableHead, TableRow } from \"./multi-table-compo-list.styles\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { sortByField } from \"../CommonScript\";\n\nclass MultiColumnComboSearch extends React.Component {\n  constructor(Props) {\n    super(Props);\n\n    this.closeList = e => {\n      this.setState(state => ({\n        showList: false\n      }));\n    };\n\n    this.openList = e => {\n      //  let val = '' + this.state.inputVal;\n      //  let arrayList = this.state.data.filter(o =>\n      //    Object.keys(o).some(k =>\n      //     o[k] !== null && \n      //     o[k].toString().toLowerCase().includes(val.toLowerCase())));\n      //     console.log(\"arrayList:\", arrayList);\n      // \n      if (this.state.data && this.state.data.length > 0 && this.state.value.length > 0 && this.state.showInputkey) {\n        this.state.data.map(obj => {\n          if (this.state.value[0][this.state.showInputkey] && obj[this.state.showInputkey] && obj[this.state.showInputkey].toLowerCase() === this.state.value[0][this.state.showInputkey].toLowerCase()) return obj.checked = true;else return obj.checked = false;\n        });\n      } // this.state.data[valIndex][\"checked\"] = false;\n\n\n      if (!this.state.showList) {\n        this.setState(state => ({\n          showList: true,\n          listValue: this.state.data //arrayList\n\n        }));\n      }\n    };\n\n    this.handleChangeInput = e => {\n      let val = '' + e;\n      let arrayList = this.state.data.filter(o => Object.keys(o).some(k => o[k] !== null && o[k].toString().toLowerCase().includes(val.toLowerCase())));\n      this.setState({\n        listValue: arrayList && arrayList.length > 0 ? arrayList : [],\n        inputVal: val\n      }); //this.props.getValue(this.state.value);\n    };\n\n    this.handleTagClick = e => {\n      this.setState(state => ({\n        inputVal: \"\",\n        listValue: this.state.data\n      }));\n    };\n\n    this.handleDelete = e => {\n      if (!this.state.isMandatory) {\n        let eve = this.state.value;\n        eve.splice(e, 1);\n        this.state.data.map(obj => {\n          let i = eve.findIndex(evObj => evObj[this.state.showInputkey] === obj[this.state.showInputkey]);\n\n          if (i === -1) {\n            return obj.checked = false;\n          } else {\n            return obj.checked = true;\n          }\n        });\n        this.setState(state => ({\n          value: eve,\n          listValue: this.state.data // showList:false\n\n        }));\n        this.props.getValue(this.state.value);\n      }\n    };\n\n    this.getUpdateSelected = (e, eve) => {\n      e['text'] = e[this.state.showInputkey];\n      let val = this.state.value;\n\n      if (this.state.singleSelection) {\n        val = [];\n      }\n\n      if (e === 'all' && eve) {\n        val = [];\n        val = this.state.listValue.map(obj => {\n          obj.checked = true;\n          return e;\n        });\n      } else if (e === 'all' && !eve) {\n        val = this.state.listValue.map(obj => {\n          obj.checked = true;\n          return val = [];\n        });\n      } else if (e !== 'all') {\n        let valIndex = this.state.listValue.findIndex(obj => obj[this.state.showInputkey] === e[this.state.showInputkey]);\n        this.state.listValue.map((obj, index) => {\n          if (index === valIndex) {\n            let i = this.state.value.findIndex(obj => obj[this.state.showInputkey] === e[this.state.showInputkey]);\n\n            if (i === -1) {\n              val.push(e);\n              obj.checked = true;\n            } else {\n              obj.checked = false;\n              val.splice(i, 1);\n            }\n          } else if (this.state.singleSelection) {\n            obj.checked = false;\n          }\n\n          return null;\n        });\n      }\n\n      this.setState(state => ({\n        value: val,\n        listValue: this.state.listValue // showList:false\n\n      }));\n      this.props.getValue(val);\n    };\n\n    this.getUpdateVal = selected => {\n      let val = selected[this.state.showInputkey];\n      this.setState(state => ({\n        //value: val,\n        value: [selected],\n        inputVal: val,\n        listValue: this.state.data // showList:false\n\n      }));\n      this.props.getValue([selected]);\n      this.closeList(); // this.props.getValue([val]);\n    };\n\n    this.wrapperRef = React.createRef(); // this.setWrapperRef = this.setWrapperRef.bind(this);\n\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = { ...Props,\n      listValue: [],\n      inputVal: \"\",\n      showList: false,\n      notToShow: [],\n      idslabelfield: [],\n      singleSelection: true\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.closeList = this.closeList.bind(this);\n    this.openList = this.openList.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside); // this.setState((state) => ({\n    //    value: this.state.value.map((str, index) => ({ text: str }))\n    // }))\n\n    let fieldToShow = this.props.fieldToShow;\n    let showInputkey = this.props.showInputkey;\n    let idslabelfield = this.props.idslabelfield; //let inputVal = this.props.value\n\n    const listValue = this.props.alphabeticalSort ? sortByField(this.state.listValue, \"ascending\", this.state.showInputkey) : this.state.listValue;\n    this.setState({\n      fieldToShow,\n      showInputkey,\n      idslabelfield,\n      listValue //inputVal,\n      // value :inputVal\n\n    });\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target) && this.state.showList) {\n      this.closeList(event);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentDidUpdate(previousProps) {\n    // if (this.props.value !== previousProps.value) {\n    //   let value = this.props.value\n    //   this.setState({ value })\n    // }\n    //commented By sudharshanan for Search on 27/07/2021\n    // if ((this.state.listValue !== previousProps.data) ||  (this.props.value !== previousProps.value)) {\n    //   let listValue = this.props.data;\n    //   let value = this.props.value\n    //   this.setState({ listValue, value, flterInput: this.state.inputVal })\n    // }\n    //added By sudharshanan for Search on 27/07/2021\n    if (this.props.data !== previousProps.data || this.props.value !== previousProps.value) {\n      let listValue = this.props.data;\n      let value = this.props.value;\n      this.setState({\n        listValue,\n        value,\n        flterInput: this.state.inputVal\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    // let listValue = nextProps.data;\n    // let value = nextProps.value\n    if (!this.state.inputVal) {\n      this.setState({\n        listValue: nextProps.data,\n        data: nextProps.data\n      });\n    }\n  }\n\n  render() {\n    const ListHeadItems = e => {\n      return e.heads.map((item, index) => /*#__PURE__*/React.createElement(TableHead, {\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: item,\n        defaultMessage: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }), \" \"));\n    };\n\n    const ListBodyByKey = e => {\n      return e.keyFlag.map((item, index) => /*#__PURE__*/React.createElement(TableData, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, e.value[item]));\n    };\n\n    const ListBodyItems = e => {\n      return e.data.map((item, index) => /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        onClick: () => {\n          this.getUpdateVal(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListBodyByKey, {\n        value: item,\n        keyFlag: e.keys,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    const TableMain = e => {\n      //  let thVal = e.visibility === 'show-all' && this.state.listValue && this.state.listValue.length > 0 ? Object.keys(this.state.data[0]).filter(obj => this.state.notToShow.indexOf(obj) === -1) : e.keyList;\n      const tableVal = this.state.listValue && this.state.listValue.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n        className: \"compo-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListHeadItems, {\n        heads: this.state.idslabelfield,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListBodyItems, {\n        keys: this.state.fieldToShow,\n        data: this.state.listValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }))) : /*#__PURE__*/React.createElement(InlineEl, {\n        className: \"no-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, \"No data Found\");\n      return this.state.showList ? tableVal : '';\n    };\n\n    const ToggleList = e => {\n      return /*#__PURE__*/React.createElement(InlineEl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 14\n        }\n      }, this.state.showList ? /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-angle-down\",\n        onClick: this.closeList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 32\n        }\n      }) : /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-angle-up\",\n        onClick: this.openList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }));\n    }; // const ToggleList = e => {\n    //   return <span>\n    //     {this.state.showList ? <FontAwesomeIcon icon={faAngleUp} onClick={this.closeList} /> :\n    //       <FontAwesomeIcon icon={faAngleDown} onClick={this.openList} />\n    //     }\n    //   </span>\n    // }\n\n\n    const tagValue = this.state.value.length > 0 && this.state.value[0][this.state.showInputkey] && [{\n      text: this.state.value[0][this.state.showInputkey]\n    }] || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DivWrap, {\n      className: `custom-column-wrap ${this.props.isDisabled ? 'disabled' : ''} ${this.state.value && this.state.value.length > 0 ? 'selected' : ''} ${this.state.isMandatory ? 'mandatory' : ''}`,\n      ref: this.wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DivWrap, {\n      className: `form-group-icon ${this.state.showList ? 'list-view' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LabelNormal, {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, this.state.labelledBy ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.state.labelledBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 78\n      }\n    }) : ''), /*#__PURE__*/React.createElement(DivWrap, {\n      className: `dropdown-wrap ${this.state.showList ? 'listed' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DivWrap, {\n      className: \"icon-input custom-fa-angle-down\",\n      onClick: this.openList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ReactTags, {\n      readOnly: this.props.isDisabled,\n      tags: tagValue,\n      handleDelete: this.handleDelete,\n      allowDragDrop: false,\n      delimiters: [],\n      handleInputChange: this.handleChangeInput,\n      placeholder: \"Search...\",\n      handleTagClick: this.handleTagClick,\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ToggleList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DivWrap, {\n      className: \"limit-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableMain, {\n      visibility: this.state.visibility,\n      keyList: this.state.fieldToShow,\n      data: this.state.listValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nexport default injectIntl(MultiColumnComboSearch);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/components/multi-column-combo-search/multi-column-combo-search.js"],"names":["React","FormattedMessage","injectIntl","Col","Row","Table","DivWrap","InlineEl","LabelNormal","TableData","TableHead","TableRow","WithContext","ReactTags","sortByField","MultiColumnComboSearch","Component","constructor","Props","closeList","e","setState","state","showList","openList","data","length","value","showInputkey","map","obj","toLowerCase","checked","listValue","handleChangeInput","val","arrayList","filter","o","Object","keys","some","k","toString","includes","inputVal","handleTagClick","handleDelete","isMandatory","eve","splice","i","findIndex","evObj","props","getValue","getUpdateSelected","singleSelection","valIndex","index","push","getUpdateVal","selected","wrapperRef","createRef","handleClickOutside","bind","notToShow","idslabelfield","componentDidMount","document","addEventListener","fieldToShow","alphabeticalSort","event","current","contains","target","componentWillUnmount","removeEventListener","componentDidUpdate","previousProps","flterInput","componentWillReceiveProps","nextProps","render","ListHeadItems","heads","item","ListBodyByKey","keyFlag","ListBodyItems","TableMain","tableVal","ToggleList","tagValue","text","isDisabled","labelledBy","visibility"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './multi-column-combo-search.css';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n// import { sortByField } from \"../CommonScript\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Table } from \"react-bootstrap\";\nimport { DivWrap, InlineEl, LabelNormal, TableData, TableHead, TableRow } from \"./multi-table-compo-list.styles\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport { sortByField } from \"../CommonScript\";\n\nclass MultiColumnComboSearch extends React.Component {\n  constructor(Props) {\n    super(Props);\n    this.wrapperRef = React.createRef();\n    // this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = { ...Props, listValue: [], inputVal: \"\", showList: false, notToShow: [], idslabelfield: [], singleSelection: true, }\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.closeList = this.closeList.bind(this);\n    this.openList = this.openList.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n    // this.setState((state) => ({\n    //    value: this.state.value.map((str, index) => ({ text: str }))\n    // }))\n    let fieldToShow = this.props.fieldToShow;\n    let showInputkey = this.props.showInputkey;\n    let idslabelfield = this.props.idslabelfield;\n    //let inputVal = this.props.value\n    const listValue = this.props.alphabeticalSort ? sortByField(this.state.listValue, \"ascending\", this.state.showInputkey) : this.state.listValue;\n    this.setState({\n      fieldToShow, showInputkey, idslabelfield, listValue, //inputVal,\n      // value :inputVal\n    })\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target) && this.state.showList) {\n      this.closeList(event)\n    }\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  componentDidUpdate(previousProps) {\n    // if (this.props.value !== previousProps.value) {\n    //   let value = this.props.value\n    //   this.setState({ value })\n    // }\n    //commented By sudharshanan for Search on 27/07/2021\n    // if ((this.state.listValue !== previousProps.data) ||  (this.props.value !== previousProps.value)) {\n    //   let listValue = this.props.data;\n    //   let value = this.props.value\n    //   this.setState({ listValue, value, flterInput: this.state.inputVal })\n    // }\n    //added By sudharshanan for Search on 27/07/2021\n    if ((this.props.data !== previousProps.data) ||  (this.props.value !== previousProps.value)) {\n      let listValue = this.props.data;\n      let value = this.props.value\n      this.setState({ listValue, value, flterInput: this.state.inputVal })\n    }\n    \n  }\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    // let listValue = nextProps.data;\n    // let value = nextProps.value\n    if (!this.state.inputVal) {\n      this.setState({\n        listValue: nextProps.data,\n        data: nextProps.data\n      })\n    }\n\n  }\n  closeList = (e) => {\n    this.setState(state => ({\n      showList: false,\n    }))\n  }\n  openList = (e) => {\n    //  let val = '' + this.state.inputVal;\n    //  let arrayList = this.state.data.filter(o =>\n    //    Object.keys(o).some(k =>\n    //     o[k] !== null && \n    //     o[k].toString().toLowerCase().includes(val.toLowerCase())));\n    //     console.log(\"arrayList:\", arrayList);\n    // \n    if (this.state.data && this.state.data.length > 0 && this.state.value.length > 0 && this.state.showInputkey) {\n      this.state.data.map(obj => {\n        if (this.state.value[0][this.state.showInputkey] && obj[this.state.showInputkey] && obj[this.state.showInputkey].toLowerCase() === this.state.value[0][this.state.showInputkey].toLowerCase())\n          return obj.checked = true;\n        else\n          return obj.checked = false;\n      })\n    }\n    // this.state.data[valIndex][\"checked\"] = false;\n\n    if (!this.state.showList) {\n      this.setState(state => ({\n        showList: true,\n        listValue: this.state.data//arrayList\n      }))\n    }\n  }\n  // handleInputFocus =(e) =>{\n  //   this.setState(state=>({\n  //     listValue : this.state.data,\n  //     showList:true\n  //   }))\n  // }\n  handleChangeInput = (e) => {\n    let val = '' + e;\n    let arrayList = this.state.data.filter(o =>\n      Object.keys(o).some(k =>\n        o[k] !== null &&\n        o[k].toString().toLowerCase().includes(val.toLowerCase())));\n    this.setState(\n      {\n      listValue: arrayList && arrayList.length > 0 ? arrayList : [],\n      inputVal: val\n      }\n    )\n    //this.props.getValue(this.state.value);\n  }\n  handleTagClick = (e) => {\n    this.setState(state => ({\n      inputVal: \"\",\n      listValue: this.state.data\n    }))\n  }\n  handleDelete = (e) => {\n    if (!this.state.isMandatory) {\n      let eve = this.state.value;\n      eve.splice(e, 1)\n      this.state.data.map((obj) => {\n        let i = eve.findIndex(evObj => evObj[this.state.showInputkey] === obj[this.state.showInputkey]);\n        if (i === -1) {\n          return obj.checked = false\n        } else {\n          return obj.checked = true\n        }\n      })\n      this.setState(state => ({\n        value: eve,\n        listValue: this.state.data\n        // showList:false\n      }))\n      this.props.getValue(this.state.value)\n    }\n\n  }\n  getUpdateSelected = (e, eve) => {\n    e['text'] = e[this.state.showInputkey];\n    let val = this.state.value;\n\n    if (this.state.singleSelection) {\n      val = []\n    }\n    if (e === 'all' && eve) {\n      val = []\n      val = this.state.listValue.map((obj) => {\n        obj.checked = true;\n        return e;\n      })\n    } else if (e === 'all' && !eve) {\n      val = this.state.listValue.map((obj) => {\n        obj.checked = true;\n        return val = [];\n      })\n    }\n    else if (e !== 'all') {\n      let valIndex = this.state.listValue.findIndex((obj) => obj[this.state.showInputkey] === e[this.state.showInputkey])\n\n      this.state.listValue.map((obj, index) => {\n        if (index === valIndex) {\n          let i = this.state.value.findIndex(obj => obj[this.state.showInputkey] === e[this.state.showInputkey]);\n          if (i === -1) {\n            val.push(e);\n            obj.checked = true;\n          } else {\n            obj.checked = false;\n            val.splice(i, 1)\n          }\n        } else if (this.state.singleSelection) {\n          obj.checked = false;\n        }\n        return null;\n      })\n    }\n    this.setState(state => ({\n      value: val,\n      listValue: this.state.listValue\n      // showList:false\n    }))\n    this.props.getValue(val)\n  }\n  getUpdateVal = (selected) => {\n    let val = selected[this.state.showInputkey];\n    this.setState(state => ({\n      //value: val,\n      value: [selected],\n      inputVal: val,\n      listValue: this.state.data\n      // showList:false\n    }))\n    this.props.getValue([selected]);\n    this.closeList()\n    // this.props.getValue([val]);\n  }\n  render() {\n    const ListHeadItems = (e) => {\n      return e.heads.map((item, index) =>\n        <TableHead key={item} > <FormattedMessage id={item} defaultMessage={item}></FormattedMessage> </TableHead>\n\n      )\n    }\n    const ListBodyByKey = (e) => {\n      return e.keyFlag.map((item, index) =>\n        <TableData key={index}>{e.value[item]}</TableData>\n      )\n    }\n    const ListBodyItems = e => {\n      return e.data.map((item, index) => (\n        <TableRow key={index} onClick={() => { this.getUpdateVal(item) }}>\n          <ListBodyByKey value={item} keyFlag={e.keys} />\n        </TableRow>)\n      )\n    }\n    const TableMain = e => {\n      //  let thVal = e.visibility === 'show-all' && this.state.listValue && this.state.listValue.length > 0 ? Object.keys(this.state.data[0]).filter(obj => this.state.notToShow.indexOf(obj) === -1) : e.keyList;\n      const tableVal = this.state.listValue && this.state.listValue.length > 0 ?\n        <Table className=\"compo-table\">\n          <thead>\n            <TableRow>\n              <ListHeadItems heads={this.state.idslabelfield} />\n            </TableRow>\n          </thead>\n          <tbody>\n            <ListBodyItems keys={this.state.fieldToShow} data={this.state.listValue} />\n          </tbody>\n        </Table>\n        : <InlineEl className=\"no-data\">No data Found</InlineEl>\n      return this.state.showList ? tableVal : ''\n    }\n    const ToggleList = e => {\n      return <InlineEl>\n        {this.state.showList ? <i className=\"fas fa-angle-down\" onClick={this.closeList} /> :\n          <i className=\"fas fa-angle-up\" onClick={this.openList} />}\n      </InlineEl>\n\n    }\n\n    // const ToggleList = e => {\n    //   return <span>\n    //     {this.state.showList ? <FontAwesomeIcon icon={faAngleUp} onClick={this.closeList} /> :\n    //       <FontAwesomeIcon icon={faAngleDown} onClick={this.openList} />\n    //     }\n    //   </span>\n    // }\n    const tagValue = (this.state.value.length > 0 && this.state.value[0][this.state.showInputkey] && [{ text: this.state.value[0][this.state.showInputkey] }]) || [];\n    return (\n      <>\n        <Row>\n          <Col>\n            <DivWrap className={`custom-column-wrap ${this.props.isDisabled ? 'disabled' : ''} ${this.state.value && this.state.value.length > 0 ? 'selected' : ''} ${this.state.isMandatory ? 'mandatory' : ''}`} ref={this.wrapperRef}>\n              <DivWrap className={`form-group-icon ${this.state.showList ? 'list-view' : ''}`} >\n                <LabelNormal className=\"form-label\">{this.state.labelledBy ? <FormattedMessage id={this.state.labelledBy} /> : ''}</LabelNormal>\n                <DivWrap className={`dropdown-wrap ${this.state.showList ? 'listed' : ''}`}>\n                  <DivWrap className=\"icon-input custom-fa-angle-down\" onClick={this.openList}>\n                    <ReactTags\n                      readOnly={this.props.isDisabled}\n                      tags={tagValue}\n                      handleDelete={this.handleDelete}\n                      allowDragDrop={false}\n                      delimiters={[]}\n                      handleInputChange={this.handleChangeInput}\n                      placeholder=\"Search...\"\n                      handleTagClick={this.handleTagClick}\n                      inline\n                    />\n                    <ToggleList />\n                  </DivWrap>\n                  <DivWrap className=\"limit-width\">\n                    <TableMain visibility={this.state.visibility} keyList={this.state.fieldToShow} data={this.state.listValue} />\n                  </DivWrap>\n                </DivWrap>\n              </DivWrap>\n            </DivWrap>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\nexport default injectIntl(MultiColumnComboSearch);\n"]},"metadata":{},"sourceType":"module"}