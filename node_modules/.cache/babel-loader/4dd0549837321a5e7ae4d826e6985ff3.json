{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{Row,Col,Card,Nav,FormGroup,FormLabel,Button}from'react-bootstrap';import{toast}from'react-toastify';import{callService,crudMaster,updateStore,getSampleCertTypeChange,getSampleCertRegSubTypeChange,filterColumnData,validateEsignCredential,getTestResultData,getActiveSample,generateCertificateAction,sentCertificateAction,correctionCertificateAction,xmlExportAction,getWholeFilterStatus,validateXMLEsignCredential,getApprovalVersionSampleCertification,onClickReportSample,validateEsignforSampCerGen,viewAttachment,viewReportForSample}from'../../actions';import{getControlMap,showEsign,rearrangeDateFormat,convertDateValuetoString}from'../../components/CommonScript';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage,injectIntl}from'react-intl';import{faFileCode,faSync}from'@fortawesome/free-solid-svg-icons';import rsapi,{fileViewUrl}from'../../rsapi';import SampleCertificationFilter from'./SampleCertificationFilter';import{ReadOnlyText,ContentPanel,OutlineTransactionStatus,DecisionStatus}from'../../components/App.styles';import{constructOptionList}from'../../components/CommonScript';import{ReactComponent as Certified}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";import{ReactComponent as CertificateSend}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/certificate-Send.svg\";import{ReactComponent as CertificateCorrectionicon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/certificate-correction.svg\";import CustomTab from'../../components/custom-tabs/custom-tabs.component';import ApprovalHistory from'./ApprovalHistory';import PrintHistory from'./PrintHistory';import SentMailHistory from'./SentMailHistory';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Results from'./Results';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType}from'../../components/Enumeration';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import TransactionListMaster from'../../components/TransactionListMaster';import SplitterLayout from\"react-splitter-layout\";import PerfectScrollbar from'react-perfect-scrollbar';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{process}from'@progress/kendo-data-query';import CerGenTabs from'../batch/certificategeneration/CerGenTabs';import DocViewer from'../../components/doc-viewer/doc-viewer.component';//import { Tooltip } from '@progress/kendo-react-tooltip';\n// import ReactTooltip from 'react-tooltip';\nimport{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleCertification=/*#__PURE__*/function(_Component){_inherits(SampleCertification,_Component);var _super=_createSuper(SampleCertification);function SampleCertification(props){var _this;_classCallCheck(this,SampleCertification);_this=_super.call(this,props);_this.onRegSubTypeChange=function(comboData,fieldName){var regSubTypeValue=_this.state.regSubTypeValue||{};// regSubTypeValue[fieldName] = comboData;\n// this.setState({ regSubTypeValue });\nif(comboData.value!==_this.state.regSubTypeValue.nregsubtypecode.value){var inputParamData={};var inputData={// nflag: 4,\nFromDate:_this.props.Login.masterData.FromDate,ToDate:_this.props.Login.masterData.ToDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegistrationTypeValue.nregtypecode,nregsubtypecode:comboData.value,userinfo:_this.props.Login.userInfo};inputParamData={inputData:inputData,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{//RegistrationSubTypeValue: comboData.item,\noperation:\"onChange\"})};_this.props.getApprovalVersionSampleCertification(inputParamData);}//this.props.getApprovalVersion(inputParamData)\n//this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\nregSubTypeValue[fieldName]=comboData;_this.setState({regSubTypeValue:regSubTypeValue});};_this.onFilterChange=function(comboData,fieldName){var FilterStatusValue=_this.state.FilterStatusValue||{};FilterStatusValue[fieldName]=comboData;_this.setState({FilterStatusValue:FilterStatusValue});};_this.onFilterComboChange=function(comboData,fieldName){if(comboData.value!==_this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode){var ApprovalVersionValue=comboData;_this.setState({ApprovalVersionValue:ApprovalVersionValue});// let masterData = { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item  }\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData }\n// }\n// this.props.updateStore(updateInfo);\n}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var operation=_this.props.Login.screenData.inputParam.operation;var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.screenData.inputParam.methodUrl===\"regenerateCertificate\"){_this.props.validateXMLEsignCredential(inputParam,\"openModal\");}else if(operation===\"xml\"){_this.props.validateXMLEsignCredential(inputParam,\"openModal\");}else if(operation===\"generate\"){_this.props.validateEsignforSampCerGen(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.onRegTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map={};_Map[\"nregtypecode\"]=parseInt(event.value);_Map['userinfo']=_this.props.Login.userInfo;_this.props.getSampleCertRegSubTypeChange(_Map,_this.props.Login.masterData,event,labelname);}};_this.handleExpandChange=function(row,dataState){var viewParam={TransactionSampleResults:_this.props.Login.masterData.TransactionSampleResults,userInfo:_this.props.Login.userInfo,primaryKeyField:\"ntransactiontestcode\",npreregno:\"npreregno\",masterData:_this.props.Login.masterData};_this.props.getTestResultData(_objectSpread(_objectSpread({},viewParam),{},{dataState:dataState,primaryKeyValue:row[\"dataItem\"][viewParam.primaryKeyField],viewRow:row[\"dataItem\"]}));};_this.generateCertificate=function(operation,masterData,genCertificateId){var ntransactionstatus=masterData.SelectedRegistration.ntransactionstatus;if(ntransactionstatus===transactionStatus.CERTIFIED||ntransactionstatus===transactionStatus.SENT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYCERTIFIEDORSENT\"}));}else{var postParam={inputListName:\"Registration\",selectedObject:\"SelectedRegistration\",primaryKeyField:\"npreregno\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true};var inputParam={methodUrl:\"CertificationStatus\",classUrl:\"samplecertification\",postParam:postParam,operation:\"generate\",userInfo:_this.props.Login.userInfo,ncontrolcode:genCertificateId,inputData:{\"userinfo\":_this.props.Login.userInfo,methodUrl:\"generateCertificationStatus\",npreregno:masterData.SelectedRegistration.npreregno,ntransactionstatus:transactionStatus.CERTIFIED,registration:masterData.SelectedRegistration,nversioncode:0,ncontrolcode:genCertificateId,operation:\"generate\",masterData:_this.props.Login.masterData}};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,genCertificateId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.generateCertificateAction(inputParam[\"inputData\"]);}}};_this.correctionCertificate=function(operation,masterData,certificateCorrectionId){var ntransactionstatus=masterData.SelectedRegistration.ntransactionstatus;if(ntransactionstatus===transactionStatus.CERTIFIED||ntransactionstatus===transactionStatus.SENT){var inputParam={methodUrl:\"Certificate\",classUrl:\"samplecertification\",operation:\"correction\",userinfo:_this.props.Login.userInfo,inputData:{\"userinfo\":_this.props.Login.userInfo,methodUrl:\"generateCertificationStatus\",npreregno:masterData.SelectedRegistration.npreregno,ntransactionstatus:transactionStatus.CERTIFIED,registration:masterData.SelectedRegistration,napprovalversioncode:String(masterData.SelectedRegistration.napprovalversioncode),fromDate:masterData.FromDate,toDate:masterData.ToDate,nregtypecode:masterData.SelectedRegistration.nregtypecode,nregsubtypecode:masterData.SelectedRegistration.nregsubtypecode}};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,certificateCorrectionId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.correctionCertificateAction(inputParam[\"inputData\"],operation,_this.props.Login.masterData,certificateCorrectionId);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTCERTIFIEDRECORD\"}));}};_this.xmlExport=function(operation,masterData,XmlReportID){var ntransactionstatus=masterData.SelectedRegistration.ntransactionstatus;if(masterData.SelectedRegistration.ndecisionstatus===transactionStatus.PASS){if(ntransactionstatus===transactionStatus.CERTIFIED||ntransactionstatus===transactionStatus.SENT){var inputData={methodUrl:\"xmlExport\",npreregno:masterData.SelectedRegistration.npreregno,userinfo:_this.props.Login.userInfo,ntransactionstatus:transactionStatus.CERTIFIED,ncontrolcode:XmlReportID,registration:masterData.SelectedRegistration};var inputParam={methodUrl:\"Export\",classUrl:\"samplecertification\",operation:\"xml\",userInfo:_this.props.Login.userInfo,inputData:inputData};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,XmlReportID)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.xmlExportAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTCERTIFIEDRECORD\"}));}}else{// toast.warn(this.props.intl.formatMessage({ id: \"IDS_DECISIONSTATUSFAILED\" }));\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_CANEXPORTXMLFORPASS\"}));}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var showReport=_this.props.Login.showReport;if(_this.props.Login.loadEsign){loadEsign=false;selectedRecord.agree=false;openModal=false;}else{selectedRecord={};showReport=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,showReport:showReport}};_this.props.updateStore(updateInfo);};_this.checkConfirmation=function(masterData,sendCertificateId){var ntransactionstatus=masterData.SelectedRegistration.ntransactionstatus;if(ntransactionstatus===transactionStatus.CERTIFIED||ntransactionstatus===transactionStatus.SENT){return rsapi.post(\"samplecertification/getSentCertifiedStatus\",{\"npreregno\":_this.props.Login.masterData.SelectedRegistration.npreregno,\"userinfo\":_this.props.Login.userInfo}).then(function(response){if(response.status===202){toast.warn(response.data);}else{_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),response.data,_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),// () => this.onClickSentesign(inputParam),\nfunction(){return _this.sendCertificate(\"send\",masterData,sendCertificateId);},false,undefined);}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response}));}});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTCERTIFIEDRECORDTOSEND\"}));}// if (ntransactionstatus === transactionStatus.CERTIFIED) {\n//     this.sendCertificate(\"send\", masterData, sendCertificateId);\n// } else if (ntransactionstatus === transactionStatus.SENT) {\n//     this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_CERTIFICATERESEND\" }),\n//         \"OK\", \"Cancel\", () => this.sendCertificate(\"send\", masterData, sendCertificateId));\n// } else {\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCERTIFIEDRECORD\" }));\n// }\n};_this.sendCertificate=function(operation,masterData,sendCertificateId){var postParam={inputListName:\"Registration\",selectedObject:\"SelectedRegistration\",primaryKeyField:\"npreregno\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true};var inputParam={methodUrl:\"Certification\",classUrl:\"samplecertification\",operation:\"send\",userInfo:_this.props.Login.userInfo,postParam:postParam,inputData:{methodUrl:\"sendCertification\",npreregno:masterData.SelectedRegistration.npreregno,nregtypecode:masterData.SelectedRegistration.nregtypecode,nregsubtypecode:masterData.SelectedRegistration.nregsubtypecode,userinfo:_this.props.Login.userInfo,ntransactionstatus:transactionStatus.CERTIFIED,registration:masterData.SelectedRegistration,ncontrolcode:sendCertificateId}};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,sendCertificateId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.sentCertificateAction(inputParam[\"inputData\"],operation,_this.props.Login.masterData);}};_this.handleDateChange=function(dateName,dateValue){if(dateValue===null){dateValue=new Date();}var FromDate=_this.props.Login.masterData.RealFromDate||new Date();var ToDate=_this.props.Login.masterData.RealToDate||new Date();var obj={};if(dateName==='fromDate'){obj=convertDateValuetoString(dateValue,ToDate,_this.props.Login.userInfo);FromDate=obj.fromDate;ToDate=obj.toDate;}else{obj=convertDateValuetoString(FromDate,dateValue,_this.props.Login.userInfo);FromDate=obj.fromDate;ToDate=obj.toDate;}// let RealFromDate =obj.breadCrumbFrom;\n// let RealToDate=obj.breadCrumbto;\n// this.setState({RealFromDate, RealToDate});\nvar inputParam={inputData:{nflag:2,nregtypecode:_this.state.RegTypeValue.nregtypecode.value,nregsubtypecode:_this.state.regSubTypeValue.nregsubtypecode.value,userinfo:_this.props.Login.userInfo,FromDate:String(FromDate),ToDate:String(ToDate)},masterData:_this.props.Login.masterData};_this.props.getApprovalVersionSampleCertification(inputParam);};_this.onFilterSubmit=function(){//let SampleTypeValue = this.state.SampleTypeValue?this.state.SampleTypeValue.nsampletypecode:\"\"\nvar RealSampleTypeValue=_this.state.SampleTypeValue?_this.state.SampleTypeValue.nsampletypecode.item.ssampletypename:\"\";var RealRegTypeValue=_this.state.RegTypeValue?_this.state.RegTypeValue.nregtypecode.item.sregtypename:\"\";var RealRegSubTypeValue=_this.state.regSubTypeValue?_this.state.regSubTypeValue.nregsubtypecode.item.sregsubtypename:\"\";var RealFilterValue=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.ntransactionstatus?_this.state.FilterStatusValue.ntransactionstatus.item:\"\";var RealApprovalVersion=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.sversionname:\"\";var obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.RealFromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);// let RealFromDate = obj.fromDate || this.props.Login.masterData.RealFromDate\n// let RealToDate = obj.toDate || this.props.Login.masterData.RealToDate\nvar RealFromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.fromDate);var RealToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.toDate);if(RealRegSubTypeValue!==\"\"&&RealFilterValue!==\"\"&&RealApprovalVersion!==\"\"){var inputData={nsampletypecode:_this.state.SampleTypeValue.nsampletypecode.value,nregtypecode:_this.state.RegTypeValue.nregtypecode.value,nregsubtypecode:_this.state.regSubTypeValue.nregsubtypecode.value,nfilterstatus:_this.state.FilterStatusValue.ntransactionstatus.value,napprovalversioncode:_this.state.ApprovalVersionValue.value?String(_this.state.ApprovalVersionValue.value):'-1',userinfo:_this.props.Login.userInfo,approvalVersionValue:_this.state.ApprovalVersionValue.item};inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;_this.setState({RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterValue:RealFilterValue,RealFromDate:RealFromDate,RealToDate:RealToDate});var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterValue:RealFilterValue,RealFromDate:RealFromDate,RealToDate:RealToDate,RealApprovalVersion:RealApprovalVersion});_this.props.getWholeFilterStatus(masterData,inputData,\"FilterSubmit\",_this.searchRef);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.reloadData=function(){var SampleTypeValue=_this.state.SampleTypeValue?_this.state.SampleTypeValue.nsampletypecode:\"\";if(SampleTypeValue!==\"\"){var inputData={nsampletypecode:_this.state.SampleTypeValue.nsampletypecode.value,nregtypecode:_this.state.RegTypeValue.nregtypecode.value,nregsubtypecode:_this.props.Login.masterData.RegistrationSubTypeValue?_this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode:_this.state.regSubTypeValue?_this.state.regSubTypeValue.nregsubtypecode.value:\"\",nfilterstatus:_this.props.Login.masterData.RealFilterValue?_this.props.Login.masterData.RealFilterValue.napprovalstatuscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.ntransactionstatus.value:\"\",userinfo:_this.props.Login.userInfo,napprovalversioncode:_this.state.ApprovalVersionValue.value?String(_this.state.ApprovalVersionValue.value):'-1'};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.napprovalversioncode!==\"-1\"&&inputData.nfilterstatus!==undefined){var obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.RealFromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;_this.props.getWholeFilterStatus(_this.props.Login.masterData,inputData,\"FilterSubmit\",_this.searchRef);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_APPROVALHISTORY\",/*#__PURE__*/React.createElement(ApprovalHistory,{approvalHistory:_this.props.Login.masterData.approvalHistory,dataResult:process(_this.props.Login.masterData.approvalHistory||[],_this.state.appHistoryDataState),dataState:_this.state.appHistoryDataState,controlMap:_this.state.controlMap,userInfo:_this.props.Login.userInfo,userRoleControlRights:_this.state.userRoleControlRights,dataStateChange:function dataStateChange(event){return _this.setState({appHistoryDataState:event.dataState});},screenName:\"IDS_APPROVALHISTORY\"}));tabMap.set(\"IDS_CERTIFIEDREPORT\",/*#__PURE__*/React.createElement(CerGenTabs,{userRoleControlRights:_this.state.userRoleControlRights,controlMap:_this.state.controlMap,inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,primaryList:\"ReportHistory\",dataResult:process(_this.props.Login.masterData[\"ReportHistory\"]||[],_this.state.dataStateReportHistory),dataState:_this.props.screenName===undefined||_this.props.screenName===\"IDS_BATCHREPORTHISTORY\"?_this.state.dataStateReportHistory:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},dataStateChange:function dataStateChange(event){return _this.setState({dataStateReportHistory:event.dataState});},columnList:_this.extractedReportHistoryColumnList,methodUrl:\"Certificate\",isActionRequired:true,selectedId:0,expandField:\"\",viewDownloadFile:function viewDownloadFile(inputParam){return _this.viewAttachment(inputParam);},downloadParam:{classUrl:\"samplecertification\",operation:\"download\",methodUrl:\"Report\"},hasControlWithOutRights:true,viewReportFile:_this.props.viewReportForSample,showDocViewer:true,isreportview:true}));tabMap.set(\"IDS_PRINTHISTORY\",/*#__PURE__*/React.createElement(PrintHistory,{printHistory:_this.props.Login.masterData.printHistory,dataResult:process(_this.props.Login.masterData.printHistory||[],_this.state.printHistoryDataState),dataState:_this.state.printHistoryDataState,controlMap:_this.state.controlMap,dataStateChange:function dataStateChange(event){return _this.setState({printHistoryDataState:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_PRINTHISTORY\"}));tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(Results,{TransactionSampleTests:_this.props.Login.masterData.TransactionSampleTests,dataResult:process(_this.props.Login.masterData.TransactionSampleTests||[],_this.state.resultsDataState),dataState:_this.props.Login.screenName===\"\"||_this.props.Login.screenName===\"IDS_RESULTS\"?_this.state.resultsDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},controlMap:_this.state.controlMap,dataStateChange:function dataStateChange(event){return _this.setState({resultsDataState:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,handleExpandChange:_this.handleExpandChange,screenName:\"IDS_RESULTS\",childList:_this.props.Login.masterData.sampleTestResults,childMappingField:\"ntransactiontestcode\",hasChild:true// childList ={props.childList || new Map()}\n}));tabMap.set(\"IDS_MAILSTATUS\",/*#__PURE__*/React.createElement(SentMailHistory,{printHistory:_this.props.Login.masterData.emailSentHistory,dataResult:process(_this.props.Login.masterData.emailSentHistory||[],_this.state.sentMailHistory),dataState:_this.state.sentMailHistory,controlMap:_this.state.controlMap,dataStateChange:function dataStateChange(event){return _this.setState({sentMailHistory:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_MAILSTATUS\"}));return tabMap;};_this.viewAttachment=function(inputParam){inputParam.inputData=_objectSpread(_objectSpread({},inputParam.inputData),{},{ncontrolcode:inputParam.ncontrolCode});_this.props.viewAttachment(inputParam);};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});// setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.showConfirmAlert=function(selectedRecord,flag,ReportId){_this.confirmMessage.confirm(\"regenerate\",//name\n_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),//tittle\n_this.props.intl.formatMessage({id:\"IDS_REGENERATECONFIRMATION\"}),//message\n_this.props.intl.formatMessage({id:\"IDS_OK\"}),//do Label\n_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),//Do not label\nfunction(){return _this.onClickReport(selectedRecord,flag,ReportId);},undefined,function(){return _this.closeConfirmAlert();});};_this.closeConfirmAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false}};_this.props.updateStore(updateInfo);};_this.onClickReport=function(selectedRecord,flag,ReportId){var reportParam={classUrl:\"samplecertification\",methodUrl:\"regenerateCertificate\",screenName:\"SampleCertification\",operation:\"update\",primaryKeyField:\"npreregno\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:ReportId,inputData:{sprimarykeyname:'npreregno',nprimarykey:selectedRecord.npreregno,npreregno:selectedRecord.npreregno,nregtypecode:selectedRecord.nregtypecode,nregsubtypecode:selectedRecord.nregsubtypecode,nsectioncode:transactionStatus.NA,// ncertificatetypecode:selectedRecord.ndecisionstatuscode===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,\nndecisionstatus:selectedRecord.ndecisionstatuscode,ncontrolcode:ReportId,nreporttypecode:reportTypeEnum.SAMPLE,ncoareporttypecode:reportCOAType.SAMPLECERTIFICATE,userinfo:_this.props.Login.userInfo,nflag:flag,isRegenerate:true}};// this.props.onClickReportSample(reportParam)\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ReportId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:reportParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:reportParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.onClickReportSample(reportParam);}};var appHistoryDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var resultsDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var printHistoryDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var sentMailHistory={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var dataStateReportHistory={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.searchSampleRef=React.createRef();_this.state={openModal:false,masterStatus:\"\",controlMap:new Map(),error:\"\",selectedRecord:{},selectedFilter:{},userRoleControlRights:[],appHistoryDataState:appHistoryDataState,resultsDataState:resultsDataState,printHistoryDataState:printHistoryDataState,dataStateReportHistory:dataStateReportHistory,sentMailHistory:sentMailHistory,skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25};_this.extractedReportHistoryColumnList=[{\"idsName\":\"IDS_VERSION\",\"dataField\":\"nversioncode\",\"width\":\"150px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\"},{\"idsName\":\"IDS_REPORTDATE\",\"dataField\":\"sgeneratedtime\",\"width\":\"250px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"250px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"150px\"},{\"idsName\":\"IDS_REPORTCOMMENTS\",\"dataField\":\"sreportcomments\",\"width\":\"250px\"}];_this.searchRef=React.createRef();_this.searchFieldList=[\"scomponentname\",\"sarno\",\"sproductname\",\"ssamplecertificateversioncode\",\"sversion\",\"smanufname\",\"sspecname\",\"nrmsno\",\"dtransactiondate\",\"smanuflotno\"];return _this;}// onSampleTypeChange = (event, fieldName, labelname) => {\n//     if (event !== null) {\n//         let Map = {};\n//         Map[\"nsampletypecode\"] = parseInt(event.value);\n//         Map['userinfo'] = this.props.Login.userInfo;\n//         this.props.getSampleCertTypeChange(Map, this.props.Login.masterData, event, labelname);\n//     }\n// }\n_createClass(SampleCertification,[{key:\"render\",value:function render(){var _this2=this,_ref,_ref2,_ref3;var _this$props$Login$mas=this.props.Login.masterData,SelectedRegistration=_this$props$Login$mas.SelectedRegistration,searchedData=_this$props$Login$mas.searchedData,Registration=_this$props$Login$mas.Registration;var getSample={screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"SampleCertification\",keyName:\"samplecertification\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealFromDate);this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealToDate);// const { SampleCertification } = this.props.Login.masterData;\nvar genCertificateId=this.state.controlMap.has(\"GenerateCertificate\")&&this.state.controlMap.get(\"GenerateCertificate\").ncontrolcode;var sendCertificateId=this.state.controlMap.has(\"SendCertificate\")&&this.state.controlMap.get(\"SendCertificate\").ncontrolcode;var certificateCorrectionId=this.state.controlMap.has(\"CertificateCorrection\")&&this.state.controlMap.get(\"CertificateCorrection\").ncontrolcode;var ReportId=this.state.controlMap.has(\"Re-GenerateCetrificate\")&&this.state.controlMap.get(\"Re-GenerateCetrificate\").ncontrolcode;var XmlReportID=this.state.controlMap.has(\"XmlReport\")&&this.state.controlMap.get(\"XmlReport\").ncontrolcode;this.confirmMessage=new ConfirmMessage();var obj=convertDateValuetoString(this.state.selectedFilter.fromdate||this.props.Login.masterData.RealFromDate,this.state.selectedFilter.todate||this.props.Login.masterData.RealToDate,this.props.Login.userInfo);// let breadCrumbFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealFromDate)\n//let breadCrumbToDate=rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealToDate)\nthis.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom||this.state.RealFromDate},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto||this.state.RealToDate},{\"label\":\"IDS_SAMPLETYPE\",//\"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\n\"value\":this.state.RealSampleTypeValue},{\"label\":\"IDS_REGTYPE\",\"value\":this.state.RealRegTypeValue},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.state.RealRegSubTypeValue},{\"label\":\"IDS_FILTERSTATUS\",\"value\":this.state.RealFilterValue?this.state.RealFilterValue.stransdisplaystatus:\"-\"},{\"label\":\"IDS_CONFIGVERSION\",\"value\":this.state.RealApprovalVersion}];var filterParam={inputListName:\"Registration\",selectedObject:\"SelectedRegistration\",primaryKeyField:\"npreregno\",fetchUrl:\"samplecertification/getSampleCertificationById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},this.breadCrumbData&&this.breadCrumbData.length>0?/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:30,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster,{masterList:searchedData||Registration||[],selectedMaster:[SelectedRegistration],primaryKeyField:\"npreregno\",getMasterDetail:function getMasterDetail(_SampleCertification){return _this2.props.getActiveSample(_SampleCertification,_this2.props.Login.userInfo,_this2.props.Login.masterData);},inputParam:getSample,additionalParam:[],mainField:\"ssamplecertificateversioncode\",mainFieldLabel:this.props.intl.formatMessage({id:\"IDS_CERTIFICATENUMBER\"}),listName:\"IDS_SAMPLE\",showStatusLink:false,subFieldsLabel:true,subFields:[(_ref={},_defineProperty(_ref,designProperties.LABEL,\"IDS_ARNO\"),_defineProperty(_ref,designProperties.VALUE,\"sarno\"),_ref),(_ref2={},_defineProperty(_ref2,designProperties.LABEL,\"IDS_MANUFACTURERLOTNO\"),_defineProperty(_ref2,designProperties.VALUE,\"smanuflotno\"),_ref2),(_ref3={},_defineProperty(_ref3,designProperties.LABEL,\"IDS_COMPONENT\"),_defineProperty(_ref3,designProperties.VALUE,\"scomponentname\"),_ref3)]// moreField=\"sarno\"\n//needValidation={false}\n,needFilter:true,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,handlePageChange:this.handlePageChange,onFilterSubmit:this.onFilterSubmit,skip:this.state.skip,take:this.state.take,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2 p-0\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),onClick:function onClick(){return _this2.reloadData();}},/*#__PURE__*/React.createElement(RefreshIcon,{className:\"custom_icons\"}))),filterComponent:[{\"IDS_SAMPLECERTIFICATEGENERATION\":/*#__PURE__*/React.createElement(SampleCertificationFilter,{formatMessage:this.props.intl.formatMessage,Product:this.props.Login.masterData.MAHProduct||[],SampleType:this.state.SampleType||[],RegistrationType:this.state.RegistrationType||[],RegistrationSubType:this.state.RegistrationSubType||[],FilterStatus:this.state.FilterList||[],ApprovalVersion:this.state.ApprovalValue||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],userInfo:this.props.Login.userInfo||{},SampleTypeValue:this.state.SampleTypeValue||{},RegTypeValue:this.state.RegTypeValue||{},regSubTypeValue:this.state.regSubTypeValue||{},FilterStatusValue:this.state.FilterStatusValue||{}// FilterStatusValue={this.props.Login.masterData.FilterStatus || {}}\n,FromDate:this.fromDate,ToDate:this.toDate,onSampleTypeChange:this.onSampleTypeChange,onRegTypeChange:this.onRegTypeChange,onRegSubTypeChange:this.onRegSubTypeChange,handleFilterDateChange:this.handleFilterDateChange,handleDateChange:this.handleDateChange,onFilterComboChange:this.onFilterComboChange,onFilterChange:this.onFilterChange})}]}),/*#__PURE__*/React.createElement(SplitterLayout,{vertical:true,borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:400,customClassName:\"fixed_list_height\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.SelectedRegistration?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedRegistration.sarno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(OutlineTransactionStatus,{transcolor:this.props.Login.masterData.SelectedRegistration.scolorhexcode},this.props.Login.masterData.SelectedRegistration.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"generateCertificate\",hidden:this.state.userRoleControlRights.indexOf(genCertificateId)===-1,className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\"///onClick = {()=>this.props.(editParam)}\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_GENERATECERTIFICATE\"}),onClick:function onClick(e){return _this2.generateCertificate(\"generate\",_this2.props.Login.masterData,genCertificateId);}},/*#__PURE__*/React.createElement(Certified,{className:\"custom_icons\",width:\"20\",height:\"20\",name:\"Certified\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"correctionCertificate\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(certificateCorrectionId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_RECERTIFICATECORRECTION\"}),onClick:function onClick(e){return _this2.correctionCertificate(\"CorrectionCertificate\",_this2.props.Login.masterData,certificateCorrectionId);}},/*#__PURE__*/React.createElement(CertificateCorrectionicon,{className:\"custom_icons\",width:\"20\",height:\"20\",name:\"Correction\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"sendCertificate\",hidden:this.state.userRoleControlRights.indexOf(sendCertificateId)===-1,className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_SENDCERTIFICATE\"}),onClick:function onClick(e){return _this2.checkConfirmation(_this2.props.Login.masterData,sendCertificateId);}},/*#__PURE__*/React.createElement(CertificateSend,{className:\"custom_icons\",width:\"20\",height:\"20\",name:\"Sent\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"xmlExport\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(XmlReportID)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_XMLEXPORT\"}),onClick:function onClick(e){return _this2.xmlExport(\"Export\",_this2.props.Login.masterData,XmlReportID);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileCode})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"Report\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REGENREATEREPORT\"}),hidden:this.state.userRoleControlRights.indexOf(ReportId)===-1,className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",onClick:function onClick(){return _this2.showConfirmAlert(_this2.props.Login.masterData.SelectedRegistration,1,ReportId);}},/*#__PURE__*/React.createElement(CertificateSend,{className:\"custom_icons\",width:\"20\",height:\"20\",name:\"Sent\"})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ARNO\",message:\"Arno\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sarno))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENTNAME\",message:\"Componentname\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.scomponentname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GENERICPRODUCT\",message:\"Generic Product\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sproductname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CERTIFICATENUMBER\",message:\"Certificate No.\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.ssamplecertificateversioncode))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSION\",message:\"Version\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sversion))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MANUFACTURENAME\",message:\"Manufacturename\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.smanufname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SPECIFICATIONSTUDYPLAN\",message:\"Specificationname\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sspecname))),this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode!==RegistrationSubType.EXTERNAL_POOL?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RMSNO\",message:\"Rmsno\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.nrmsno))):\"\",/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_REGISTRATIONDATE\",message:\"RegistrationDate\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.dtransactiondate))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MANUFLOTNO\",message:\"Manuf Lot No.\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.smanuflotno))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DECISIONSTATUS\",message:\"Decisionstatus\"})),/*#__PURE__*/React.createElement(DecisionStatus,{style:{marginLeft:\"0rem\"},decisioncolor:this.props.Login.masterData.SelectedRegistration.sdecisioncolor},this.props.Login.masterData.SelectedRegistration.sdecisionstatus)))),/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_USERNAME\",message:\"User Name\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.CertificateHistoryView&&this.props.Login.masterData.CertificateHistoryView[0]?this.props.Login.masterData.CertificateHistoryView[0].username:\"-\"))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_USERROLE\",message:\"User Role\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.CertificateHistoryView&&this.props.Login.masterData.CertificateHistoryView[0]?this.props.Login.masterData.CertificateHistoryView[0].suserrolename:\"-\"))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CERTIFIEDDATE\",message:\"Certified Date\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.CertificateHistoryView&&this.props.Login.masterData.CertificateHistoryView[0]?this.props.Login.masterData.CertificateHistoryView[0].scertificatedate:\"-\"))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CERTIFICATECOMMENTS\",message:\"Certificate Comments\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.CertificateHistoryView&&this.props.Login.masterData.CertificateHistoryView[0]?this.props.Login.masterData.CertificateHistoryView[0].scomments===\"\"||this.props.Login.masterData.CertificateHistoryView[0].scomments===null?\"-\":this.props.Login.masterData.CertificateHistoryView[0].scomments:\"-\")))),/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetail(),onTabChange:this.onTabChange}))):\"\"))))))))),this.props.Login.showReport?/*#__PURE__*/React.createElement(DocViewer,{file:fileViewUrl()+this.props.Login.ViewUrl,showReport:this.props.Login.showReport,closeModal:this.closeModal,type:\"pdf\"}):\"\",this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,esign:this.props.Login.loadEsign,onSaveClick:this.onSaveClick,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},showSaveContinue:this.state.showSaveContinue,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):\"\"}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){var SampleMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);var SampleType=SampleMap.get(\"OptionList\");var SampleTypeValue={nsampletypecode:SampleType.length>0?SampleType[0]:\"\"};var RegMap=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var RegistrationType=RegMap.get(\"OptionList\");var RegTypeValue={nregtypecode:RegistrationType.length>0?RegistrationType[0]:\"\"};var RegSubMap=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'nsorter',\"ascending\",false);var _RegistrationSubType=RegSubMap.get(\"OptionList\");//const regSubTypeValue = {nregsubtypecode: RegistrationSubType.length> 0? RegistrationSubType[2]: \"\"};\nvar FilterStatus=constructOptionList(this.props.Login.masterData.FilterStatus||[],\"napprovalstatuscode\",\"stransdisplaystatus\",undefined,undefined,true);var FilterList=FilterStatus.get(\"OptionList\");var ConfigVersionList=constructOptionList(this.props.Login.masterData.ApprovalVersion||[],\"napprovalconfigversioncode\",\"sversionname\",'descending','ntransactionstatus',false);var ApprovalValue=ConfigVersionList.get(\"OptionList\");// const ApprovalVersionValue = ApprovalValue.length > 0 ? ApprovalValue[0] : \"\" \n// const Transcolor=  this.props.Login.masterData?this.props.Login.masterData[\"SelectedRegistration\"][\"stransdisplaystatus\"]\n// :\"\"\n// let  Transdisplaystatus={};\n// if(this.props.Login.masterData.SelectedRegistration.stransdisplaystatus===transactionStatus.CERTIFIED){\n//     Transdisplaystatus = this.props.Login.masterData[\"SelectedRegistration\"][\"stransdisplaystatus\"]\n// }\nvar FilterStatusValue={};var regSubTypeValue={};var ApprovalVersionValue={};if(this.props.Login.masterData.operation===\"FilterSubmit\"||this.props.Login.masterData.operation===\"onChange\"){//FilterStatusValue = this.props.Login.masterData.FilterStatusValue //this.state.FilterStatusValue\nFilterStatusValue={ntransactionstatus:{\"label\":this.props.Login.masterData.FilterStatusValue.stransdisplaystatus,\"value\":this.props.Login.masterData.FilterStatusValue.napprovalstatuscode,\"item\":this.props.Login.masterData.FilterStatusValue}};regSubTypeValue=this.state.regSubTypeValue;ApprovalVersionValue=this.props.Login.masterData.ApprovalVersionValue?{label:this.props.Login.masterData.ApprovalVersionValue.sversionname,value:this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,item:this.props.Login.masterData.ApprovalVersionValue}:this.state.ApprovalVersionValue;}else{FilterStatusValue={ntransactionstatus:FilterList.length>0?FilterList[0]:\"\"};regSubTypeValue={nregsubtypecode:_RegistrationSubType.length>0?{label:this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename,value:this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode,item:this.props.Login.masterData.ApprovalVersionValue}:\"\"};ApprovalVersionValue=ApprovalValue.length>0?ApprovalValue[0]:\"\";}var RealFilterValue={};var RealRegSubTypeValue={};var RealFromDate={};var RealToDate={};var RealApprovalVersion={};if(this.props.Login.masterData.RealFilterValue!==previousProps.Login.masterData){RealFilterValue=this.props.Login.masterData.RealFilterValue?this.props.Login.masterData.RealFilterValue:this.props.Login.masterData.FilterStatusValue?this.props.Login.masterData.FilterStatusValue:\"\";}if(this.props.Login.masterData.RealRegSubTypeValue!==previousProps.Login.masterData){RealRegSubTypeValue=this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue:this.props.Login.masterData.RegistrationSubTypeValue?this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename:\"\";// this.props.intl.formatMessage({ id: \"IDS_PLASMAPOOL\" })\n}if(this.props.Login.masterData.RealFromDate!==previousProps.Login.masterData){RealFromDate=this.props.Login.masterData.RealFromDate?this.props.Login.masterData.RealFromDate:this.props.Login.masterData.RealFromDate?this.props.Login.masterData.RealFromDate:\"\";}if(this.props.Login.masterData.RealToDate!==previousProps.Login.masterData){RealToDate=this.props.Login.masterData.RealToDate?this.props.Login.masterData.RealToDate:this.props.Login.masterData.RealToDate?this.props.Login.masterData.RealToDate:\"\";}if(this.props.Login.masterData.ApprovalVersionValue!==previousProps.Login.masterData){RealApprovalVersion=this.props.Login.masterData.RealApprovalVersion?this.props.Login.masterData.RealApprovalVersion:this.props.Login.masterData.ApprovalVersionValue?this.props.Login.masterData.ApprovalVersionValue.sversionname:\" - \";}// const RealFromDate = this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate:\"\"\n// const RealToDate = this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate:\"\"\nvar RealSampleTypeValue=this.props.Login.masterData.SampleTypeValue?this.props.Login.masterData.SampleTypeValue.ssampletypename:\"\";var RealRegTypeValue=this.props.Login.masterData.RegistrationTypeValue?this.props.Login.masterData.RegistrationTypeValue.sregtypename:\"\";var _this$state=this.state,appHistoryDataState=_this$state.appHistoryDataState,resultsDataState=_this$state.resultsDataState,printHistoryDataState=_this$state.printHistoryDataState,sentMailHistory=_this$state.sentMailHistory;if(this.props.dataState===undefined){if(this.props.screenName===\"IDS_APPROVALHISTORY\"){appHistoryDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}else if(this.props.screenName===\"IDS_MAILSTATUS\"){sentMailHistory={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}else if(this.props.screenName===\"IDS_PRINTHISTORY\"){printHistoryDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}else if(this.props.screenName===\"IDS_RESULTS\"){resultsDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}else{appHistoryDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};resultsDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};printHistoryDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};sentMailHistory={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}};this.setState({appHistoryDataState:appHistoryDataState,resultsDataState:resultsDataState,printHistoryDataState:printHistoryDataState,sentMailHistory:sentMailHistory,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:_RegistrationSubType,FilterList:FilterList,SampleTypeValue:SampleTypeValue,RegTypeValue:RegTypeValue,RealSampleTypeValue:RealSampleTypeValue,regSubTypeValue:regSubTypeValue,FilterStatusValue:FilterStatusValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterValue:RealFilterValue,RealFromDate:RealFromDate,RealToDate:RealToDate,ApprovalValue:ApprovalValue,RealApprovalVersion:RealApprovalVersion,ApprovalVersionValue:ApprovalVersionValue});}// if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData)  {\n//     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\n//     this.setState({RealFilterValue});\n//  }\n//else{\n//     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\n//     //this.setState({RealFilterValue});\n// }this.state.regSubTypeValue\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}}],[{key:\"getDerivedStateFromProps\",value:// covertDatetoString(startDateValue, endDateValue) {\n//     const startDate = new Date(startDateValue);\n//     const endDate = new Date(endDateValue);\n//     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n//     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n//     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n//     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n//     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n//     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n//     const fromDate = fromDateOnly + \"T00:00:00\";\n//     const toDate = toDateOnly + \"T23:59:59\";\n//     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n// }\nfunction getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.showConfirmAlert!==state.showConfirmAlert){return{showConfirmAlert:props.Login.showConfirmAlert};}return null;}}]);return SampleCertification;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getSampleCertTypeChange:getSampleCertTypeChange,filterColumnData:filterColumnData,viewAttachment:viewAttachment,getSampleCertRegSubTypeChange:getSampleCertRegSubTypeChange,getTestResultData:getTestResultData,getActiveSample:getActiveSample,generateCertificateAction:generateCertificateAction,sentCertificateAction:sentCertificateAction,viewReportForSample:viewReportForSample,correctionCertificateAction:correctionCertificateAction,xmlExportAction:xmlExportAction,getWholeFilterStatus:getWholeFilterStatus,validateXMLEsignCredential:validateXMLEsignCredential,getApprovalVersionSampleCertification:getApprovalVersionSampleCertification,onClickReportSample:onClickReportSample,validateEsignforSampCerGen:validateEsignforSampCerGen})(injectIntl(SampleCertification));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testapproval/SampleCertification.jsx"],"names":["React","Component","connect","Row","Col","Card","Nav","FormGroup","FormLabel","Button","toast","callService","crudMaster","updateStore","getSampleCertTypeChange","getSampleCertRegSubTypeChange","filterColumnData","validateEsignCredential","getTestResultData","getActiveSample","generateCertificateAction","sentCertificateAction","correctionCertificateAction","xmlExportAction","getWholeFilterStatus","validateXMLEsignCredential","getApprovalVersionSampleCertification","onClickReportSample","validateEsignforSampCerGen","viewAttachment","viewReportForSample","getControlMap","showEsign","rearrangeDateFormat","convertDateValuetoString","FontAwesomeIcon","FormattedMessage","injectIntl","faFileCode","faSync","rsapi","fileViewUrl","SampleCertificationFilter","ReadOnlyText","ContentPanel","OutlineTransactionStatus","DecisionStatus","constructOptionList","CustomTab","ApprovalHistory","PrintHistory","SentMailHistory","DEFAULT_RETURN","Results","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","ConfirmMessage","BreadcrumbComponent","TransactionListMaster","SplitterLayout","PerfectScrollbar","ListWrapper","ProductList","SlideOutModal","Esign","process","CerGenTabs","DocViewer","mapStateToProps","state","Login","SampleCertification","props","onRegSubTypeChange","comboData","fieldName","regSubTypeValue","value","nregsubtypecode","inputParamData","inputData","FromDate","masterData","ToDate","nsampletypecode","SampleTypeValue","nregtypecode","RegistrationTypeValue","userinfo","userInfo","operation","setState","onFilterChange","FilterStatusValue","onFilterComboChange","ApprovalVersionValue","napproveconfversioncode","onInputOnChange","event","selectedRecord","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","validateEsign","screenData","inputParam","sreason","nreasoncode","spredefinedreason","label","password","methodUrl","onRegTypeChange","labelname","Map","parseInt","handleExpandChange","row","dataState","viewParam","TransactionSampleResults","primaryKeyField","npreregno","primaryKeyValue","viewRow","generateCertificate","genCertificateId","ntransactionstatus","SelectedRegistration","CERTIFIED","SENT","warn","intl","formatMessage","id","postParam","inputListName","selectedObject","unchangeList","isSingleGet","classUrl","ncontrolcode","registration","nversioncode","userRoleControlRights","nformcode","updateInfo","typeName","data","loadEsign","openModal","screenName","correctionCertificate","certificateCorrectionId","napprovalversioncode","String","fromDate","toDate","xmlExport","XmlReportID","ndecisionstatus","PASS","closeModal","showReport","agree","checkConfirmation","sendCertificateId","post","then","response","status","confirmMessage","confirm","sendCertificate","undefined","catch","error","message","handleDateChange","dateName","dateValue","Date","RealFromDate","RealToDate","obj","nflag","RegTypeValue","onFilterSubmit","RealSampleTypeValue","item","ssampletypename","RealRegTypeValue","sregtypename","RealRegSubTypeValue","sregsubtypename","RealFilterValue","RealApprovalVersion","sversionname","selectedFilter","fromdate","todate","nfilterstatus","approvalVersionValue","searchRef","reloadData","RegistrationSubTypeValue","napprovalstatuscode","onTabChange","tabProps","tabDetail","tabMap","set","approvalHistory","appHistoryDataState","controlMap","dataStateReportHistory","skip","take","settings","extractedReportHistoryColumnList","printHistory","printHistoryDataState","TransactionSampleTests","resultsDataState","sampleTestResults","emailSentHistory","sentMailHistory","ncontrolCode","handlePageChange","e","showConfirmAlert","flag","ReportId","onClickReport","closeConfirmAlert","reportParam","sprimarykeyname","nprimarykey","nsectioncode","NA","ndecisionstatuscode","nreporttypecode","SAMPLE","ncoareporttypecode","SAMPLECERTIFICATE","isRegenerate","searchSampleRef","createRef","masterStatus","searchFieldList","searchedData","Registration","getSample","keyName","has","get","breadCrumbData","breadCrumbFrom","breadCrumbto","stransdisplaystatus","filterParam","fetchUrl","fecthInputObject","length","parentHeight","LABEL","VALUE","MAHProduct","SampleType","RegistrationType","FilterList","ApprovalValue","onSampleTypeChange","handleFilterDateChange","sarno","scolorhexcode","indexOf","scomponentname","sproductname","ssamplecertificateversioncode","sversion","smanufname","sspecname","EXTERNAL_POOL","nrmsno","dtransactiondate","smanuflotno","marginLeft","sdecisioncolor","sdecisionstatus","CertificateHistoryView","username","suserrolename","scertificatedate","scomments","ViewUrl","onSaveClick","showSaveContinue","previousProps","SampleMap","RegMap","RegSubMap","FilterStatus","ConfigVersionList","ApprovalVersion","napprovalconfigversioncode","Object","values","map","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Button } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, updateStore, getSampleCertTypeChange, getSampleCertRegSubTypeChange, filterColumnData, validateEsignCredential,\r\n    getTestResultData, getActiveSample, generateCertificateAction, sentCertificateAction, correctionCertificateAction, xmlExportAction, getWholeFilterStatus, validateXMLEsignCredential,\r\n    getApprovalVersionSampleCertification, onClickReportSample,validateEsignforSampCerGen, viewAttachment,viewReportForSample\r\n} from '../../actions'\r\nimport { getControlMap, showEsign,rearrangeDateFormat,convertDateValuetoString }\r\n    from '../../components/CommonScript';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faFileCode, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport rsapi, { fileViewUrl } from '../../rsapi';\r\n\r\nimport SampleCertificationFilter from './SampleCertificationFilter';\r\nimport { ReadOnlyText, ContentPanel, OutlineTransactionStatus, DecisionStatus } from '../../components/App.styles';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\nimport { ReactComponent as Certified } from '../../assets/image/generate-certificate.svg';\r\nimport { ReactComponent as CertificateSend } from '../../assets/image/certificate-Send.svg';\r\nimport { ReactComponent as CertificateCorrectionicon } from '../../assets/image/certificate-correction.svg';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalHistory from './ApprovalHistory';\r\nimport PrintHistory from './PrintHistory';\r\nimport SentMailHistory from './SentMailHistory';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Results from './Results';\r\nimport { transactionStatus, designProperties, reportTypeEnum, reportCOAType, RegistrationSubType } from '../../components/Enumeration';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CerGenTabs from '../batch/certificategeneration/CerGenTabs';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleCertification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const resultsDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const printHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const sentMailHistory = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const dataStateReportHistory = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        this.searchSampleRef = React.createRef();\r\n        this.state = {\r\n            openModal: false,\r\n            masterStatus: \"\",\r\n            controlMap: new Map(),\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            selectedFilter: {},\r\n            userRoleControlRights: [],\r\n            appHistoryDataState,\r\n            resultsDataState,\r\n            printHistoryDataState,\r\n            dataStateReportHistory,\r\n            sentMailHistory,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? this.props.Login.settings[3] : 25\r\n        }\r\n        this.extractedReportHistoryColumnList = [\r\n            {  \"idsName\": \"IDS_VERSION\", \"dataField\": \"nversioncode\", \"width\": \"150px\" },\r\n            {  \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"150px\" },\r\n            {  \"idsName\": \"IDS_REPORTDATE\", \"dataField\": \"sgeneratedtime\", \"width\": \"250px\" },\r\n            {  \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"250px\" },\r\n            {   \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"150px\" },       \r\n            { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"sreportcomments\", \"width\": \"250px\" },\r\n           \r\n        ]\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"scomponentname\",\"sarno\",\"sproductname\",\"ssamplecertificateversioncode\",\"sversion\",\r\n\t\t\"smanufname\",\"sspecname\",\"nrmsno\",\"dtransactiondate\",\"smanuflotno\"]\r\n    }\r\n\r\n    // onSampleTypeChange = (event, fieldName, labelname) => {\r\n    //     if (event !== null) {\r\n    //         let Map = {};\r\n    //         Map[\"nsampletypecode\"] = parseInt(event.value);\r\n    //         Map['userinfo'] = this.props.Login.userInfo;\r\n    //         this.props.getSampleCertTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n    //     }\r\n    // }\r\n\r\n    onRegSubTypeChange = (comboData, fieldName) => {\r\n        const regSubTypeValue = this.state.regSubTypeValue || {};\r\n        // regSubTypeValue[fieldName] = comboData;\r\n        // this.setState({ regSubTypeValue });\r\n        if (comboData.value !== this.state.regSubTypeValue.nregsubtypecode.value) {\r\n            let inputParamData = {};\r\n            let inputData = {\r\n                // nflag: 4,\r\n                FromDate: this.props.Login.masterData.FromDate,\r\n                ToDate: this.props.Login.masterData.ToDate,\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegistrationTypeValue.nregtypecode,\r\n                nregsubtypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n            }\r\n            inputParamData = {\r\n                inputData,\r\n                masterData: {\r\n                    ...this.props.Login.masterData,\r\n                    //RegistrationSubTypeValue: comboData.item,\r\n                    operation: \"onChange\"\r\n                }\r\n            }\r\n            this.props.getApprovalVersionSampleCertification(inputParamData)\r\n        }\r\n        //this.props.getApprovalVersion(inputParamData)\r\n        //this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        regSubTypeValue[fieldName] = comboData;\r\n        this.setState({ regSubTypeValue });\r\n\r\n    }\r\n\r\n    onFilterChange = (comboData, fieldName) => {\r\n\r\n        const FilterStatusValue = this.state.FilterStatusValue || {};\r\n        FilterStatusValue[fieldName] = comboData;\r\n        this.setState({ FilterStatusValue });\r\n\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n\r\n            const ApprovalVersionValue = comboData;\r\n            this.setState({ ApprovalVersionValue });\r\n\r\n            // let masterData = { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item  }\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { masterData }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const operation = this.props.Login.screenData.inputParam.operation;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.screenData.inputParam.methodUrl === \"regenerateCertificate\"){\r\n            this.props.validateXMLEsignCredential(inputParam, \"openModal\"); \r\n        }\r\n        else if (operation === \"xml\")\r\n        {\r\n            this.props.validateXMLEsignCredential(inputParam, \"openModal\");\r\n        } \r\n        else if (operation === \"generate\") {\r\n            this.props.validateEsignforSampCerGen(inputParam, \"openModal\");\r\n        }\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    onRegTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n\r\n    handleExpandChange = (row, dataState) => {\r\n\r\n        const viewParam = {\r\n            TransactionSampleResults: this.props.Login.masterData.TransactionSampleResults,\r\n            userInfo: this.props.Login.userInfo,\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            npreregno: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n        this.props.getTestResultData({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n    }\r\n\r\n    generateCertificate = (operation, masterData, genCertificateId) => {\r\n\r\n        const ntransactionstatus = masterData.SelectedRegistration.ntransactionstatus\r\n\r\n        if (ntransactionstatus === transactionStatus.CERTIFIED || ntransactionstatus === transactionStatus.SENT) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYCERTIFIEDORSENT\" }));\r\n        } else {\r\n            let postParam = {\r\n                inputListName: \"Registration\", selectedObject: \"SelectedRegistration\",\r\n                primaryKeyField: \"npreregno\",\r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true\r\n            };\r\n            const inputParam = {\r\n                methodUrl: \"CertificationStatus\",\r\n                classUrl: \"samplecertification\",\r\n                postParam: postParam,\r\n                operation: \"generate\",\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolcode: genCertificateId,\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    methodUrl: \"generateCertificationStatus\",\r\n                    npreregno: masterData.SelectedRegistration.npreregno,\r\n                    ntransactionstatus: transactionStatus.CERTIFIED,\r\n                    registration: masterData.SelectedRegistration,\r\n                    nversioncode: 0,\r\n                    ncontrolcode: genCertificateId,\r\n                    operation: \"generate\",\r\n                    masterData: this.props.Login.masterData\r\n\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, genCertificateId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.generateCertificateAction(inputParam[\"inputData\"])\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    correctionCertificate = (operation, masterData, certificateCorrectionId) => {\r\n\r\n        const ntransactionstatus = masterData.SelectedRegistration.ntransactionstatus\r\n        if (ntransactionstatus === transactionStatus.CERTIFIED || ntransactionstatus === transactionStatus.SENT) {\r\n            const inputParam = {\r\n                methodUrl: \"Certificate\",\r\n                classUrl: \"samplecertification\",\r\n                operation: \"correction\",\r\n                userinfo: this.props.Login.userInfo,\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    methodUrl: \"generateCertificationStatus\",\r\n                    npreregno: masterData.SelectedRegistration.npreregno,\r\n                    ntransactionstatus: transactionStatus.CERTIFIED,\r\n                    registration: masterData.SelectedRegistration,\r\n                    napprovalversioncode: String(masterData.SelectedRegistration.napprovalversioncode),\r\n                    fromDate: masterData.FromDate,\r\n                    toDate: masterData.ToDate,\r\n                    nregtypecode: masterData.SelectedRegistration.nregtypecode,\r\n                    nregsubtypecode: masterData.SelectedRegistration.nregsubtypecode\r\n\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, certificateCorrectionId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.correctionCertificateAction(inputParam[\"inputData\"], operation, this.props.Login.masterData, certificateCorrectionId)\r\n            }\r\n\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCERTIFIEDRECORD\" }));\r\n        }\r\n\r\n    }\r\n\r\n    xmlExport = (operation, masterData, XmlReportID) => {\r\n        const ntransactionstatus = masterData.SelectedRegistration.ntransactionstatus\r\n\r\n        if (masterData.SelectedRegistration.ndecisionstatus === transactionStatus.PASS) {\r\n            if (ntransactionstatus === transactionStatus.CERTIFIED || ntransactionstatus === transactionStatus.SENT) {\r\n                let inputData = {\r\n                    methodUrl: \"xmlExport\",\r\n                    npreregno: masterData.SelectedRegistration.npreregno,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ntransactionstatus: transactionStatus.CERTIFIED,\r\n                    ncontrolcode: XmlReportID,\r\n                    registration: masterData.SelectedRegistration\r\n                }\r\n                const inputParam = {\r\n                    methodUrl: \"Export\",\r\n                    classUrl: \"samplecertification\",\r\n                    operation: \"xml\",\r\n                    userInfo: this.props.Login.userInfo,\r\n                    inputData\r\n\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, XmlReportID)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.xmlExportAction(inputParam[\"inputData\"], this.props.Login.masterData,inputData)\r\n                }\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCERTIFIEDRECORD\" }));\r\n            }\r\n        } else {\r\n            // toast.warn(this.props.intl.formatMessage({ id: \"IDS_DECISIONSTATUSFAILED\" }));\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANEXPORTXMLFORPASS\" }));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let showReport = this.props.Login.showReport;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            selectedRecord.agree = false;\r\n            openModal = false;\r\n\r\n        } else {\r\n            selectedRecord = {};\r\n            showReport=false;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,showReport }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    checkConfirmation = (masterData, sendCertificateId) => {\r\n        const ntransactionstatus = masterData.SelectedRegistration.ntransactionstatus;\r\n\r\n        if (ntransactionstatus === transactionStatus.CERTIFIED || ntransactionstatus === transactionStatus.SENT) {\r\n            return rsapi.post(\"samplecertification/getSentCertifiedStatus\", {\r\n                \"npreregno\": this.props.Login.masterData.SelectedRegistration.npreregno,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            }).then(response => {\r\n                if (response.status === 202) {\r\n                    toast.warn(response.data);\r\n                }\r\n                else {\r\n                    this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                        response.data,\r\n                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                        // () => this.onClickSentesign(inputParam),\r\n                        () => this.sendCertificate(\"send\", masterData, sendCertificateId),\r\n                        false,\r\n                        undefined);\r\n                }\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response }));\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCERTIFIEDRECORDTOSEND\" }));\r\n        }\r\n        // if (ntransactionstatus === transactionStatus.CERTIFIED) {\r\n        //     this.sendCertificate(\"send\", masterData, sendCertificateId);\r\n        // } else if (ntransactionstatus === transactionStatus.SENT) {\r\n        //     this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_CERTIFICATERESEND\" }),\r\n        //         \"OK\", \"Cancel\", () => this.sendCertificate(\"send\", masterData, sendCertificateId));\r\n        // } else {\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCERTIFIEDRECORD\" }));\r\n        // }\r\n    }\r\n\r\n    sendCertificate = (operation, masterData, sendCertificateId) => {\r\n        let postParam = {\r\n            inputListName: \"Registration\", selectedObject: \"SelectedRegistration\",\r\n            primaryKeyField: \"npreregno\",\r\n            unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true\r\n        };\r\n        const inputParam = {\r\n            methodUrl: \"Certification\",\r\n            classUrl: \"samplecertification\",\r\n            operation: \"send\",\r\n            userInfo: this.props.Login.userInfo,\r\n            postParam: postParam,\r\n            inputData: {\r\n                methodUrl: \"sendCertification\",\r\n                npreregno: masterData.SelectedRegistration.npreregno,\r\n                nregtypecode: masterData.SelectedRegistration.nregtypecode,\r\n                nregsubtypecode: masterData.SelectedRegistration.nregsubtypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: transactionStatus.CERTIFIED,\r\n                registration: masterData.SelectedRegistration,\r\n                ncontrolcode: sendCertificateId\r\n            },\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, sendCertificateId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n\r\n            this.props.sentCertificateAction(inputParam[\"inputData\"], operation, this.props.Login.masterData)\r\n        }\r\n    }\r\n\r\n    // handleFilterDateChange = (dateName, dateValue) => {\r\n    //     const { selectedFilter } = this.state;\r\n    //     if (dateValue === null) {\r\n    //         dateValue = new Date();\r\n    //     }\r\n    //     selectedFilter[dateName] = dateValue;\r\n    //     this.setState({ selectedFilter });\r\n    // }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let FromDate = this.props.Login.masterData.RealFromDate || new Date()\r\n        let ToDate = this.props.Login.masterData.RealToDate || new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, ToDate,this.props.Login.userInfo)\r\n            FromDate = obj.fromDate\r\n            ToDate = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(FromDate, dateValue,this.props.Login.userInfo)\r\n            FromDate = obj.fromDate\r\n            ToDate = obj.toDate\r\n\r\n        }\r\n        // let RealFromDate =obj.breadCrumbFrom;\r\n        // let RealToDate=obj.breadCrumbto;\r\n        // this.setState({RealFromDate, RealToDate});\r\n    \r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.state.RegTypeValue.nregtypecode.value,\r\n                nregsubtypecode: this.state.regSubTypeValue.nregsubtypecode.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                FromDate: String(FromDate),\r\n                ToDate: String(ToDate)\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersionSampleCertification(inputParam)\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n       \r\n    //let SampleTypeValue = this.state.SampleTypeValue?this.state.SampleTypeValue.nsampletypecode:\"\"\r\n    \r\n        let RealSampleTypeValue = this.state.SampleTypeValue ? this.state.SampleTypeValue.nsampletypecode.item.ssampletypename : \"\"\r\n        let RealRegTypeValue = this.state.RegTypeValue ? this.state.RegTypeValue.nregtypecode.item.sregtypename : \"\"\r\n        let RealRegSubTypeValue = this.state.regSubTypeValue ? this.state.regSubTypeValue.nregsubtypecode.item.sregsubtypename : \"\"\r\n        let RealFilterValue = this.state.FilterStatusValue && this.state.FilterStatusValue.ntransactionstatus? this.state.FilterStatusValue.ntransactionstatus.item : \"\"\r\n        let RealApprovalVersion = this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.sversionname : \"\"\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n            this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n        // let RealFromDate = obj.fromDate || this.props.Login.masterData.RealFromDate\r\n        // let RealToDate = obj.toDate || this.props.Login.masterData.RealToDate\r\n        let RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let RealToDate = rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate);\r\n        if(RealRegSubTypeValue !== \"\" && RealFilterValue !== \"\" && RealApprovalVersion !== \"\"){\r\n        let inputData = {\r\n            nsampletypecode: this.state.SampleTypeValue.nsampletypecode.value,\r\n            nregtypecode: this.state.RegTypeValue.nregtypecode.value,\r\n            nregsubtypecode: this.state.regSubTypeValue.nregsubtypecode.value,\r\n            nfilterstatus: this.state.FilterStatusValue.ntransactionstatus.value,\r\n            napprovalversioncode: this.state.ApprovalVersionValue.value ? String(this.state.ApprovalVersionValue.value) : '-1',\r\n            userinfo: this.props.Login.userInfo,\r\n            approvalVersionValue: this.state.ApprovalVersionValue.item  \r\n\r\n        }\r\n        inputData['FromDate'] = obj.fromDate;\r\n        inputData['ToDate'] = obj.toDate;\r\n        this.setState({\r\n            RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterValue, RealFromDate, RealToDate\r\n        });\r\n\r\n        let masterData = {\r\n            ...this.props.Login.masterData,\r\n            RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterValue, RealFromDate, RealToDate, RealApprovalVersion\r\n        }\r\n        this.props.getWholeFilterStatus(masterData, inputData, \"FilterSubmit\", this.searchRef);\r\n         } else {\r\n                 toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n          }\r\n\r\n    }\r\n\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.showConfirmAlert !== state.showConfirmAlert) {\r\n            return {\r\n                showConfirmAlert: props.Login.showConfirmAlert\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    reloadData = () => {\r\n        let SampleTypeValue = this.state.SampleTypeValue?this.state.SampleTypeValue.nsampletypecode:\"\"\r\n        if(SampleTypeValue !==\"\"){\r\n        let inputData = {\r\n            nsampletypecode: this.state.SampleTypeValue.nsampletypecode.value,\r\n            nregtypecode: this.state.RegTypeValue.nregtypecode.value,\r\n            nregsubtypecode: this.props.Login.masterData.RegistrationSubTypeValue ? this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode :\r\n                this.state.regSubTypeValue ? this.state.regSubTypeValue.nregsubtypecode.value : \"\",\r\n            nfilterstatus: this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue.napprovalstatuscode :\r\n                this.state.FilterStatusValue ? this.state.FilterStatusValue.ntransactionstatus.value : \"\",\r\n            userinfo: this.props.Login.userInfo,\r\n            napprovalversioncode: this.state.ApprovalVersionValue.value ? String(this.state.ApprovalVersionValue.value) : '-1'\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n             && inputData.napprovalversioncode !== \"-1\" && inputData.nfilterstatus !== undefined)\r\n            {\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n                    this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n                inputData['FromDate'] = obj.fromDate;\r\n                inputData['ToDate'] = obj.toDate;\r\n                this.props.getWholeFilterStatus(this.props.Login.masterData, inputData, \"FilterSubmit\", this.searchRef);\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n            }\r\n        }else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.props.Login.masterData.approvalHistory, event.dataState),\r\n    //         dataState: event.dataState\r\n    //     });\r\n    // }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_APPROVALHISTORY\",\r\n            <ApprovalHistory\r\n                approvalHistory={this.props.Login.masterData.approvalHistory}\r\n                dataResult={process(this.props.Login.masterData.approvalHistory || [], this.state.appHistoryDataState)}\r\n                dataState={this.state.appHistoryDataState}\r\n                controlMap={this.state.controlMap}\r\n                userInfo={this.props.Login.userInfo}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                dataStateChange={(event) => this.setState({ appHistoryDataState: event.dataState })}\r\n                screenName=\"IDS_APPROVALHISTORY\"\r\n            />\r\n        );\r\n        tabMap.set(\"IDS_CERTIFIEDREPORT\", <CerGenTabs\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            controlMap={this.state.controlMap}\r\n            inputParam={this.props.Login.inputParam}\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            primaryList={\"ReportHistory\"}\r\n            dataResult={process(this.props.Login.masterData[\"ReportHistory\"]||[], this.state.dataStateReportHistory)}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_BATCHREPORTHISTORY\") ? this.state.dataStateReportHistory : { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }}\r\n            dataStateChange={(event) => this.setState({ dataStateReportHistory: event.dataState })}\r\n            columnList={this.extractedReportHistoryColumnList}\r\n            methodUrl={\"Certificate\"}\r\n            isActionRequired={true}\r\n            selectedId={0}\r\n            expandField=\"\"\r\n            viewDownloadFile= {(inputParam)=>this.viewAttachment(inputParam)}\r\n            downloadParam = {{classUrl:\"samplecertification\",operation:\"download\",methodUrl:\"Report\"}}\r\n            hasControlWithOutRights={true}\r\n            viewReportFile={this.props.viewReportForSample}\r\n            showDocViewer={true}\r\n            isreportview={true}\r\n        />)\r\n        tabMap.set(\"IDS_PRINTHISTORY\",\r\n            <PrintHistory\r\n                printHistory={this.props.Login.masterData.printHistory}\r\n                dataResult={process(this.props.Login.masterData.printHistory || [], this.state.printHistoryDataState)}\r\n                dataState={this.state.printHistoryDataState}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={(event) => this.setState({ printHistoryDataState: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_PRINTHISTORY\"\r\n            />);\r\n\r\n\r\n        tabMap.set(\"IDS_RESULTS\",\r\n            <Results\r\n                TransactionSampleTests={this.props.Login.masterData.TransactionSampleTests}\r\n                dataResult={process(this.props.Login.masterData.TransactionSampleTests || [], this.state.resultsDataState)}\r\n                dataState={(this.props.Login.screenName === \"\" || this.props.Login.screenName === \"IDS_RESULTS\") ? this.state.resultsDataState : { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={(event) => this.setState({ resultsDataState: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                handleExpandChange={this.handleExpandChange}\r\n                screenName=\"IDS_RESULTS\"\r\n                childList={this.props.Login.masterData.sampleTestResults}\r\n                childMappingField={\"ntransactiontestcode\"}\r\n                hasChild={true}\r\n            // childList ={props.childList || new Map()}\r\n            />);\r\n\r\n\r\n        tabMap.set(\"IDS_MAILSTATUS\",\r\n            <SentMailHistory\r\n                printHistory={this.props.Login.masterData.emailSentHistory}\r\n                dataResult={process(this.props.Login.masterData.emailSentHistory || [], this.state.sentMailHistory)}\r\n                dataState={this.state.sentMailHistory}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={(event) => this.setState({ sentMailHistory: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_MAILSTATUS\"\r\n            />);\r\n\r\n        return tabMap;\r\n\r\n    }\r\n\r\n    viewAttachment=(inputParam)=>{\r\n        inputParam.inputData = {...inputParam.inputData,ncontrolcode:inputParam.ncontrolCode}\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n    \r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        // setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    showConfirmAlert = (selectedRecord, flag, ReportId) => {\r\n        this.confirmMessage.confirm(\r\n            \"regenerate\",//name\r\n            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),//tittle\r\n            this.props.intl.formatMessage({ id: \"IDS_REGENERATECONFIRMATION\" }),//message\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),//do Label\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),//Do not label\r\n            () => this.onClickReport(selectedRecord, flag, ReportId),\r\n            undefined,\r\n            () => this.closeConfirmAlert());\r\n    }\r\n\r\n    closeConfirmAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onClickReport = (selectedRecord, flag, ReportId) => {\r\n        const reportParam = {\r\n            classUrl: \"samplecertification\",\r\n            methodUrl: \"regenerateCertificate\",\r\n            screenName: \"SampleCertification\",\r\n            operation: \"update\",\r\n            primaryKeyField: \"npreregno\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: ReportId,\r\n            inputData: {\r\n                sprimarykeyname: 'npreregno',\r\n                nprimarykey: selectedRecord.npreregno,\r\n                npreregno: selectedRecord.npreregno,\r\n                nregtypecode: selectedRecord.nregtypecode,\r\n                nregsubtypecode: selectedRecord.nregsubtypecode,\r\n                nsectioncode: transactionStatus.NA,\r\n                // ncertificatetypecode:selectedRecord.ndecisionstatuscode===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,\r\n                ndecisionstatus: selectedRecord.ndecisionstatuscode,\r\n                ncontrolcode: ReportId,\r\n                nreporttypecode: reportTypeEnum.SAMPLE,\r\n                ncoareporttypecode: reportCOAType.SAMPLECERTIFICATE,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                isRegenerate:true\r\n            }\r\n        };\r\n       // this.props.onClickReportSample(reportParam)\r\n       \r\n       if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ReportId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam:reportParam, masterData:this.props.Login.masterData },\r\n                    openModal: true, screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation:reportParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.onClickReportSample(reportParam)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { SelectedRegistration, searchedData, Registration } = this.props.Login.masterData;\r\n        const getSample = {\r\n            screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation: \"get\", masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"SampleCertification\", keyName: \"samplecertification\"\r\n        };\r\n       \r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealFromDate);\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealToDate);\r\n        \r\n\r\n        // const { SampleCertification } = this.props.Login.masterData;\r\n        const genCertificateId = this.state.controlMap.has(\"GenerateCertificate\") && this.state.controlMap.get(\"GenerateCertificate\").ncontrolcode;\r\n        const sendCertificateId = this.state.controlMap.has(\"SendCertificate\") && this.state.controlMap.get(\"SendCertificate\").ncontrolcode;\r\n        const certificateCorrectionId = this.state.controlMap.has(\"CertificateCorrection\") && this.state.controlMap.get(\"CertificateCorrection\").ncontrolcode;\r\n        const ReportId = this.state.controlMap.has(\"Re-GenerateCetrificate\") && this.state.controlMap.get(\"Re-GenerateCetrificate\").ncontrolcode\r\n        const XmlReportID = this.state.controlMap.has(\"XmlReport\") && this.state.controlMap.get(\"XmlReport\").ncontrolcode;\r\n        this.confirmMessage = new ConfirmMessage();\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n            this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n\r\n       // let breadCrumbFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealFromDate)\r\n        //let breadCrumbToDate=rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.RealToDate)\r\n    \r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom || this.state.RealFromDate\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto || this.state.RealToDate\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                //\"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\r\n                \"value\": this.state.RealSampleTypeValue\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.state.RealRegTypeValue\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.state.RealRegSubTypeValue,\r\n            }, {\r\n                \"label\": \"IDS_FILTERSTATUS\",\r\n                \"value\": this.state.RealFilterValue?this.state.RealFilterValue.stransdisplaystatus:\"-\"\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_CONFIGVERSION\",\r\n                \"value\": this.state.RealApprovalVersion\r\n            }\r\n        ]\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Registration\", selectedObject: \"SelectedRegistration\", primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"samplecertification/getSampleCertificationById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n\r\n                    {this.breadCrumbData && this.breadCrumbData.length > 0 ?\r\n                        <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} /> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={30}\r\n                              primaryMinSize={40} secondaryMinSize={20}>\r\n                                <TransactionListMaster\r\n                                    masterList={searchedData || Registration || []}\r\n                                    selectedMaster={[SelectedRegistration]}\r\n                                    primaryKeyField=\"npreregno\"\r\n                                    getMasterDetail={(SampleCertification) => this.props.getActiveSample(SampleCertification, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                    inputParam={getSample}\r\n                                    additionalParam={[]}\r\n                                    mainField=\"ssamplecertificateversioncode\"\r\n                                    mainFieldLabel={this.props.intl.formatMessage({ id: \"IDS_CERTIFICATENUMBER\" })}\r\n                                    listName=\"IDS_SAMPLE\"\r\n                                    showStatusLink={false}\r\n                                    subFieldsLabel={true}\r\n                                    subFields={\r\n                                        [\r\n                                            { [designProperties.LABEL]: \"IDS_ARNO\", [designProperties.VALUE]: \"sarno\" },\r\n                                            { [designProperties.LABEL]: \"IDS_MANUFACTURERLOTNO\", [designProperties.VALUE]: \"smanuflotno\" },\r\n                                            { [designProperties.LABEL]: \"IDS_COMPONENT\", [designProperties.VALUE]: \"scomponentname\" },\r\n                                            // { [designProperties.LABEL]: \"IDS_STATUS\", [designProperties.VALUE]: \"stransdisplaystatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                        ]\r\n                                    }\r\n                                    // moreField=\"sarno\"\r\n                                    //needValidation={false}\r\n                                    needFilter={true}\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    filterParam={filterParam}\r\n                                    handlePageChange={this.handlePageChange}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n\r\n                                    commonActions={\r\n                                        <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                onClick={() => this.reloadData()} >\r\n                                                <RefreshIcon className='custom_icons'/>\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                    }\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_SAMPLECERTIFICATEGENERATION\": <SampleCertificationFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                Product={this.props.Login.masterData.MAHProduct || []}\r\n                                                SampleType={this.state.SampleType || []}\r\n                                                RegistrationType={this.state.RegistrationType || []}\r\n                                                RegistrationSubType={this.state.RegistrationSubType || []}\r\n                                                FilterStatus={this.state.FilterList || []}\r\n                                                ApprovalVersion={this.state.ApprovalValue || []}\r\n                                                ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                                userInfo={this.props.Login.userInfo || {}}\r\n                                                SampleTypeValue={this.state.SampleTypeValue || {}}\r\n                                                RegTypeValue={this.state.RegTypeValue || {}}\r\n                                                regSubTypeValue={this.state.regSubTypeValue || {}}\r\n                                                FilterStatusValue={this.state.FilterStatusValue || {}}\r\n                                                // FilterStatusValue={this.props.Login.masterData.FilterStatus || {}}\r\n                                                FromDate={this.fromDate}\r\n                                                ToDate={this.toDate}\r\n                                                onSampleTypeChange={this.onSampleTypeChange}\r\n                                                onRegTypeChange={this.onRegTypeChange}\r\n                                                onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                onFilterComboChange={this.onFilterComboChange}\r\n                                                onFilterChange={this.onFilterChange}\r\n\r\n                                            />\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                                <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={400}\r\n                                    customClassName=\"fixed_list_height\">\r\n                                    <PerfectScrollbar>\r\n\r\n                                        <div className=\"card_group\">\r\n                                            <ContentPanel className=\"panel-main-content\">\r\n                                                <Card className=\"border-0\">\r\n                                                    {this.props.Login.masterData.SelectedRegistration ?\r\n                                                        <>\r\n                                                            <Card.Header>\r\n                                                                {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                <Card.Title className=\"product-title-main\">\r\n                                                                    {this.props.Login.masterData.SelectedRegistration.sarno}\r\n                                                                </Card.Title>\r\n\r\n                                                                <Card.Subtitle>\r\n                                                                    <div className=\"d-flex product-category\">\r\n                                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                            <OutlineTransactionStatus\r\n                                                                                transcolor={this.props.Login.masterData.SelectedRegistration.scolorhexcode}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.stransdisplaystatus}\r\n                                                                            </OutlineTransactionStatus>\r\n                                                                            {/* <DecisionStatus\r\n                                                                                decisioncolor={this.props.Login.masterData.SelectedRegistration.sdecisioncolor}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.sdecisionstatus}\r\n                                                                            </DecisionStatus> */}\r\n\r\n                                                                            {/* <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.sdecisionstatus}\r\n                                                                            </span> */}\r\n                                                                        </h2>\r\n                                                                        <div className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                                                            {/* certificate Generation */}\r\n                                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                            <Nav.Link\r\n                                                                                name=\"generateCertificate\"\r\n                                                                                hidden={this.state.userRoleControlRights.indexOf(genCertificateId) === -1}\r\n                                                                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                                ///onClick = {()=>this.props.(editParam)}\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATECERTIFICATE\" })}\r\n                                                                                onClick={(e) => this.generateCertificate(\"generate\", this.props.Login.masterData, genCertificateId)}\r\n                                                                            >\r\n                                                                                <Certified className=\"custom_icons\" width=\"20\" height=\"20\" name=\"Certified\" />\r\n                                                                            </Nav.Link>\r\n                                                                            {/* Certificate Correction */}\r\n                                                                            <Nav.Link name=\"correctionCertificate\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                                hidden={this.state.userRoleControlRights.indexOf(certificateCorrectionId) === -1}\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RECERTIFICATECORRECTION\" })}\r\n                                                                                onClick={(e) => this.correctionCertificate(\"CorrectionCertificate\", this.props.Login.masterData, certificateCorrectionId)}\r\n                                                                            >\r\n                                                                                <CertificateCorrectionicon className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                                    name=\"Correction\"\r\n                                                                                />\r\n                                                                            </Nav.Link>\r\n                                                                            {/* Send Certificate */}\r\n                                                                            <Nav.Link name=\"sendCertificate\"\r\n                                                                                hidden={this.state.userRoleControlRights.indexOf(sendCertificateId) === -1}\r\n                                                                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDCERTIFICATE\" })}\r\n                                                                                onClick={(e) => this.checkConfirmation(this.props.Login.masterData, sendCertificateId)}\r\n                                                                            >\r\n                                                                                <CertificateSend className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                                    name=\"Sent\"\r\n                                                                                />\r\n                                                                            </Nav.Link>\r\n                                                                            {/* Certificate XML */}\r\n                                                                            <Nav.Link name=\"xmlExport\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                                hidden={this.state.userRoleControlRights.indexOf(XmlReportID) === -1}\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_XMLEXPORT\" })}\r\n                                                                                onClick={(e) => this.xmlExport(\"Export\", this.props.Login.masterData, XmlReportID)}\r\n                                                                            >\r\n                                                                                <FontAwesomeIcon icon={faFileCode} />\r\n                                                                            </Nav.Link>\r\n\r\n                                                                            <Nav.Link name=\"Report\"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENREATEREPORT\" })} hidden={this.state.userRoleControlRights.indexOf(ReportId) === -1}\r\n                                                                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                                onClick={() => this.showConfirmAlert(this.props.Login.masterData.SelectedRegistration, 1, ReportId)}\r\n                                                                            >\r\n                                                                                {/* <CertificateSend className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                                        name=\"ReportView\"\r\n                                                                                        /> */}\r\n                                                                                <CertificateSend className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                                    name=\"Sent\"\r\n                                                                                />\r\n                                                                            </Nav.Link>\r\n                                                                            {/* </Tooltip> */}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </Card.Subtitle>\r\n                                                            </Card.Header>\r\n                                                            <Card.Body>\r\n                                                                <Row>\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_ARNO\" message=\"Arno\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sarno}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_COMPONENTNAME\" message=\"Componentname\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.scomponentname}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_GENERICPRODUCT\" message=\"Generic Product\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sproductname}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_CERTIFICATENUMBER\" message=\"Certificate No.\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.ssamplecertificateversioncode}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sversion}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_MANUFACTURENAME\" message=\"Manufacturename\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.smanufname}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    \r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATIONSTUDYPLAN\" message=\"Specificationname\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sspecname}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n\r\n                                                                    {this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode !== RegistrationSubType.EXTERNAL_POOL ?\r\n                                                                        <Col md={4}>\r\n                                                                            <FormGroup>\r\n                                                                                <FormLabel><FormattedMessage id=\"IDS_RMSNO\" message=\"Rmsno\" /></FormLabel>\r\n                                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.nrmsno}</ReadOnlyText>\r\n                                                                            </FormGroup>\r\n                                                                        </Col>\r\n                                                                        : \"\"\r\n                                                                    }\r\n\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONDATE\" message=\"RegistrationDate\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.dtransactiondate}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_MANUFLOTNO\" message=\"Manuf Lot No.\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.smanuflotno}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_DECISIONSTATUS\" message=\"Decisionstatus\" /></FormLabel>\r\n                                                                            <DecisionStatus style={{ marginLeft: \"0rem\" }}\r\n                                                                                decisioncolor={this.props.Login.masterData.SelectedRegistration.sdecisioncolor}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.sdecisionstatus}\r\n                                                                            </DecisionStatus>\r\n                                                                            {/* <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sdecisionstatus}</ReadOnlyText> */}\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                <div className=\"horizontal-line\"></div>\r\n\r\n                                                                <Row>\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_USERNAME\" message=\"User Name\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.CertificateHistoryView && this.props.Login.masterData.CertificateHistoryView[0] ? this.props.Login.masterData.CertificateHistoryView[0].username : \"-\"}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_USERROLE\" message=\"User Role\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.CertificateHistoryView && this.props.Login.masterData.CertificateHistoryView[0] ? this.props.Login.masterData.CertificateHistoryView[0].suserrolename : \"-\"}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_CERTIFIEDDATE\" message=\"Certified Date\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.CertificateHistoryView && this.props.Login.masterData.CertificateHistoryView[0] ? this.props.Login.masterData.CertificateHistoryView[0].scertificatedate : \"-\"}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_CERTIFICATECOMMENTS\" message=\"Certificate Comments\" /></FormLabel>\r\n                                                                            <ReadOnlyText>\r\n                                                                                {\r\n                                                                                    this.props.Login.masterData.CertificateHistoryView && this.props.Login.masterData.CertificateHistoryView[0] ?\r\n                                                                                        this.props.Login.masterData.CertificateHistoryView[0].scomments === \"\" || this.props.Login.masterData.CertificateHistoryView[0].scomments === null ?\r\n                                                                                            \"-\" : this.props.Login.masterData.CertificateHistoryView[0].scomments\r\n                                                                                        : \"-\"\r\n                                                                                }\r\n                                                                            </ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n\r\n                                                                <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n\r\n                                                            </Card.Body>\r\n                                                        </>\r\n\r\n                                                        : \"\"}\r\n                                                </Card>\r\n                                            </ContentPanel>\r\n                                        </div>\r\n                                    </PerfectScrollbar>\r\n                                </SplitterLayout>\r\n                            </SplitterLayout >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {this.props.Login.showReport ?\r\n                    <DocViewer file={fileViewUrl() + this.props.Login.ViewUrl} \r\n                    showReport = {this.props.Login.showReport}\r\n                    closeModal = {this.closeModal}\r\n                    type={\"pdf\"}>\r\n                    </DocViewer>  \r\n                    :\"\"\r\n                }\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : \"\"}\r\n                    /> : \"\"}\r\n                {/* End of Modal Sideout for GoodsIn Creation */}\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampleMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                \"ssampletypename\", undefined, undefined, true);\r\n            const SampleType = SampleMap.get(\"OptionList\");\r\n            const SampleTypeValue = { nsampletypecode: SampleType.length > 0 ? SampleType[0] : \"\" };\r\n\r\n            const RegMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                \"sregtypename\", undefined, undefined, true);\r\n            const RegistrationType = RegMap.get(\"OptionList\");\r\n            const RegTypeValue = { nregtypecode: RegistrationType.length > 0 ? RegistrationType[0] : \"\" };\r\n\r\n            const RegSubMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                \"sregsubtypename\", 'nsorter', \"ascending\", false);\r\n            const RegistrationSubType = RegSubMap.get(\"OptionList\");\r\n            //const regSubTypeValue = {nregsubtypecode: RegistrationSubType.length> 0? RegistrationSubType[2]: \"\"};\r\n\r\n            const FilterStatus = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"napprovalstatuscode\",\r\n                \"stransdisplaystatus\", undefined, undefined, true);\r\n            const FilterList = FilterStatus.get(\"OptionList\")\r\n\r\n            const ConfigVersionList = constructOptionList(this.props.Login.masterData.ApprovalVersion || [],\r\n                \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const ApprovalValue = ConfigVersionList.get(\"OptionList\");\r\n            // const ApprovalVersionValue = ApprovalValue.length > 0 ? ApprovalValue[0] : \"\" \r\n\r\n            // const Transcolor=  this.props.Login.masterData?this.props.Login.masterData[\"SelectedRegistration\"][\"stransdisplaystatus\"]\r\n            // :\"\"\r\n            // let  Transdisplaystatus={};\r\n            // if(this.props.Login.masterData.SelectedRegistration.stransdisplaystatus===transactionStatus.CERTIFIED){\r\n            //     Transdisplaystatus = this.props.Login.masterData[\"SelectedRegistration\"][\"stransdisplaystatus\"]\r\n            // }\r\n            let FilterStatusValue = {};\r\n            let regSubTypeValue = {};\r\n            let ApprovalVersionValue = {};\r\n            if (this.props.Login.masterData.operation === \"FilterSubmit\" || this.props.Login.masterData.operation === \"onChange\") {\r\n                //FilterStatusValue = this.props.Login.masterData.FilterStatusValue //this.state.FilterStatusValue\r\n                FilterStatusValue = { ntransactionstatus: { \"label\": this.props.Login.masterData.FilterStatusValue.stransdisplaystatus, \"value\": this.props.Login.masterData.FilterStatusValue.napprovalstatuscode ,\r\n                \"item\":this.props.Login.masterData.FilterStatusValue}};\r\n                regSubTypeValue = this.state.regSubTypeValue\r\n                ApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue ?\r\n                    {\r\n                        label: this.props.Login.masterData.ApprovalVersionValue.sversionname,\r\n                        value: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.ApprovalVersionValue\r\n                    }\r\n                    : this.state.ApprovalVersionValue\r\n            }\r\n            else {\r\n                FilterStatusValue = { ntransactionstatus: FilterList.length > 0 ? FilterList[0] : \"\" };\r\n                regSubTypeValue = {\r\n                    nregsubtypecode: RegistrationSubType.length > 0 ?\r\n                        {\r\n                            label: this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename,\r\n                            value: this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode,\r\n                            item: this.props.Login.masterData.ApprovalVersionValue\r\n                        }\r\n                        : \"\"\r\n                };\r\n                ApprovalVersionValue = ApprovalValue.length > 0 ? ApprovalValue[0] : \"\"\r\n            }\r\n            let RealFilterValue = {};\r\n            let RealRegSubTypeValue = {};\r\n            let RealFromDate = {};\r\n            let RealToDate = {};\r\n            let RealApprovalVersion = {};\r\n            if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData) {\r\n\r\n                RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue :\r\n                    this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue :\"\"\r\n                       \r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.RealRegSubTypeValue !== previousProps.Login.masterData) {\r\n\r\n                RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue ? this.props.Login.masterData.RealRegSubTypeValue :\r\n                    this.props.Login.masterData.RegistrationSubTypeValue ? this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename :\"\"\r\n                        // this.props.intl.formatMessage({ id: \"IDS_PLASMAPOOL\" })\r\n\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.RealFromDate !== previousProps.Login.masterData) {\r\n\r\n                RealFromDate = this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate :\r\n                    this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate : \"\"\r\n\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.RealToDate !== previousProps.Login.masterData) {\r\n\r\n                RealToDate = this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate :\r\n                    this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate : \"\"\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.ApprovalVersionValue !== previousProps.Login.masterData) {\r\n\r\n                RealApprovalVersion = this.props.Login.masterData.RealApprovalVersion ? this.props.Login.masterData.RealApprovalVersion :\r\n                    this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname :\r\n                        \" - \"\r\n\r\n            }\r\n\r\n\r\n            // const RealFromDate = this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate:\"\"\r\n            // const RealToDate = this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate:\"\"\r\n            const RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename : \"\"\r\n            const RealRegTypeValue = this.props.Login.masterData.RegistrationTypeValue ? this.props.Login.masterData.RegistrationTypeValue.sregtypename : \"\"\r\n          \r\n          \r\n        \r\n            let {appHistoryDataState,\r\n                resultsDataState,printHistoryDataState,sentMailHistory } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                if (this.props.screenName === \"IDS_APPROVALHISTORY\") {\r\n                    appHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                }  else if (this.props.screenName === \"IDS_MAILSTATUS\") {\r\n                    sentMailHistory = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                } else if (this.props.screenName === \"IDS_PRINTHISTORY\") {\r\n                    printHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                }       \r\n                else if (this.props.screenName === \"IDS_RESULTS\") {\r\n                    resultsDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                }          \r\n                else {\r\n                     appHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                     resultsDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                     printHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                     sentMailHistory = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n                }\r\n            };\r\n          \r\n            this.setState({\r\n                appHistoryDataState,resultsDataState,printHistoryDataState,sentMailHistory,SampleType, RegistrationType, RegistrationSubType, FilterList, SampleTypeValue, RegTypeValue, RealSampleTypeValue,\r\n                regSubTypeValue, FilterStatusValue, RealRegTypeValue, RealRegSubTypeValue, RealFilterValue,\r\n                RealFromDate, RealToDate, ApprovalValue, RealApprovalVersion, ApprovalVersionValue\r\n            });\r\n\r\n        }\r\n        // if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData)  {\r\n\r\n        //     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\r\n\r\n        //     this.setState({RealFilterValue});\r\n        //  }\r\n        //else{\r\n        //     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\r\n\r\n        //     //this.setState({RealFilterValue});\r\n        // }this.state.regSubTypeValue\r\n\r\n\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSampleCertTypeChange, filterColumnData,viewAttachment,\r\n    getSampleCertRegSubTypeChange, getTestResultData, getActiveSample, generateCertificateAction, sentCertificateAction,viewReportForSample,\r\n    correctionCertificateAction, xmlExportAction, getWholeFilterStatus, validateXMLEsignCredential, getApprovalVersionSampleCertification, onClickReportSample,validateEsignforSampCerGen\r\n\r\n}\r\n)(injectIntl(SampleCertification));"]},"metadata":{},"sourceType":"module"}