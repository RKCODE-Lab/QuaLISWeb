{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { WindowTitleBar } from './WindowTitlebar';\nimport { dispatchEvent, Keys, classNames } from '@progress/kendo-react-common';\nimport { Draggable } from '@progress/kendo-react-common';\nimport { ResizeHandlers } from './WindowResizeHandlers';\nimport { MiddleLayerOptimization } from './MiddleLayerOptimization';\nimport { windowStage } from './StageEnum';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { WindowActionsBar } from './WindowActionsBar';\nvar DEFAULT_WIDTH = 300;\nvar DEFAULT_HEIGHT = 300;\nvar DEFAULT_MIN_WIDTH = 120;\nvar DEFAULT_MIN_HEIGHT = 100;\nvar DEFAULT_STEP = 5;\n\nvar Window = function (_super) {\n  __extends(Window, _super);\n\n  function Window(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.offSetCoordinates = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * @hidden\n     */\n\n    _this.onPress = function (data) {\n      var e = data.event;\n      _this.windowCoordinatesState.differenceLeft = e.pageX - _this.left;\n      _this.windowCoordinatesState.differenceTop = e.pageY - _this.top;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onDrag = function (data) {\n      var e = data.event;\n      e.originalEvent.preventDefault();\n\n      if (_this.windowStage !== windowStage.FULLSCREEN && _this.props.draggable) {\n        _this.setState({\n          top: Math.max(e.pageY - _this.windowCoordinatesState.differenceTop, 0),\n          left: e.pageX - _this.windowCoordinatesState.differenceLeft,\n          isDragging: true\n        });\n\n        if (_this.props.onMove) {\n          // eslint-disable-next-line max-len\n          _this.dispatchMoveEvent(_this.props.onMove, e, true, false);\n        }\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRelease = function (data) {\n      var e = data.event;\n\n      if (_this.windowStage !== windowStage.FULLSCREEN && _this.props.draggable) {\n        if (_this.props.onMove) {\n          _this.dispatchMoveEvent(_this.props.onMove, e, true, true);\n        }\n      }\n\n      _this.setState({\n        isDragging: false\n      });\n    }; // Keyboard navigation\n\n\n    _this.handleKeyDown = function (event) {\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      var minWidth = _this.props.minWidth || DEFAULT_MIN_WIDTH;\n      var minHeight = _this.props.minHeight || DEFAULT_MIN_HEIGHT;\n\n      if (event.ctrlKey && _this.props.resizable) {\n        switch (event.keyCode) {\n          case Keys.up:\n            event.preventDefault();\n\n            if (minHeight <= _this.height - DEFAULT_STEP) {\n              _this.setState({\n                height: _this.height - DEFAULT_STEP\n              });\n            }\n\n            break;\n\n          case Keys.down:\n            event.preventDefault();\n\n            _this.setState({\n              height: _this.height + DEFAULT_STEP\n            });\n\n            break;\n\n          case Keys.left:\n            if (minWidth <= _this.width - DEFAULT_STEP) {\n              _this.setState({\n                width: _this.width - DEFAULT_STEP\n              });\n            }\n\n            break;\n\n          case Keys.right:\n            _this.setState({\n              width: _this.width + DEFAULT_STEP\n            });\n\n            break;\n\n          default:\n            return;\n        }\n\n        _this.dispatchMoveEvent(_this.props.onResize, event, false, undefined);\n\n        return;\n      }\n\n      if (event.altKey) {\n        switch (event.keyCode) {\n          case Keys.up:\n            if (_this.windowStage === windowStage.MINIMIZED) {\n              _this.handleRestore(event);\n\n              dispatchEvent(_this.props.onStageChange, event, _this, {\n                state: windowStage.DEFAULT\n              });\n            } else if (_this.windowStage === windowStage.DEFAULT) {\n              _this.handleFullscreen(event);\n\n              dispatchEvent(_this.props.onStageChange, event, _this, {\n                state: windowStage.FULLSCREEN\n              });\n            }\n\n            break;\n\n          case Keys.down:\n            if (_this.windowStage === windowStage.FULLSCREEN) {\n              _this.handleRestore(event);\n\n              dispatchEvent(_this.props.onStageChange, event, _this, {\n                state: windowStage.DEFAULT\n              });\n            } else if (_this.windowStage === windowStage.DEFAULT) {\n              _this.handleMinimize(event);\n\n              dispatchEvent(_this.props.onStageChange, event, _this, {\n                state: windowStage.MINIMIZED\n              });\n            }\n\n            break;\n\n          default:\n        }\n\n        return;\n      }\n\n      if (!event.ctrlKey) {\n        switch (event.keyCode) {\n          case Keys.esc:\n            if (_this.props.onClose) {\n              _this.handleCloseWindow(event);\n            }\n\n            return;\n\n          case Keys.up:\n            _this.setState({\n              top: _this.state.top - DEFAULT_STEP\n            });\n\n            break;\n\n          case Keys.down:\n            _this.setState({\n              top: _this.state.top + DEFAULT_STEP\n            });\n\n            break;\n\n          case Keys.left:\n            _this.setState({\n              left: _this.state.left - DEFAULT_STEP\n            });\n\n            break;\n\n          case Keys.right:\n            _this.setState({\n              left: _this.state.left + DEFAULT_STEP\n            });\n\n            break;\n\n          default:\n            return;\n        }\n      }\n\n      _this.dispatchMoveEvent(_this.props.onMove, event, false, undefined);\n    }; // Get initial coordinates of the Window\n\n\n    _this.getInitialTop = function () {\n      if (_this.props.top !== undefined) {\n        return _this.props.top;\n      }\n\n      if (_this.props.initialTop !== undefined) {\n        return _this.props.initialTop;\n      }\n\n      var height = DEFAULT_HEIGHT;\n\n      if (_this.props.height !== undefined) {\n        height = _this.props.height;\n      } else if (_this.props.initialHeight !== undefined) {\n        height = _this.props.initialHeight;\n      }\n\n      if (_this.props.appendTo) {\n        return _this.props.appendTo.offsetHeight / 2 - height / 2;\n      }\n\n      return window.innerHeight / 2 - height / 2;\n    };\n\n    _this.getInitialLeft = function () {\n      if (_this.props.left !== undefined) {\n        return _this.props.left;\n      }\n\n      if (_this.props.initialLeft !== undefined) {\n        return _this.props.initialLeft;\n      }\n\n      var width = DEFAULT_WIDTH;\n\n      if (_this.props.width !== undefined) {\n        width = _this.props.width;\n      } else if (_this.props.initialWidth !== undefined) {\n        width = _this.props.initialWidth;\n      }\n\n      if (_this.props.appendTo) {\n        return _this.props.appendTo.offsetWidth / 2 - width / 2;\n      }\n\n      return window.innerWidth / 2 - width / 2;\n    };\n\n    _this.getInitialWidth = function () {\n      var width = DEFAULT_WIDTH;\n\n      if (_this.props.width !== undefined) {\n        width = _this.props.width;\n      } else if (_this.props.initialWidth !== undefined) {\n        width = _this.props.initialWidth;\n      }\n\n      return width;\n    };\n\n    _this.getInitialHeight = function () {\n      var height = DEFAULT_HEIGHT;\n\n      if (_this.props.height !== undefined) {\n        height = _this.props.height;\n      } else if (_this.props.initialHeight !== undefined) {\n        height = _this.props.initialHeight;\n      }\n\n      return height;\n    }; // Handle actions\n\n\n    _this.handleMinimize = function (event) {\n      event.preventDefault();\n      _this.windowCoordinatesState.leftBeforeAction = _this.left;\n      _this.windowCoordinatesState.topBeforeAction = _this.top;\n      _this.windowCoordinatesState.widthBeforeAction = _this.width;\n      _this.windowCoordinatesState.heightBeforeAction = _this.height;\n\n      _this.setState({\n        stage: windowStage.MINIMIZED,\n        height: 0\n      });\n\n      dispatchEvent(_this.props.onStageChange, event, _this, {\n        state: windowStage.MINIMIZED\n      });\n    };\n\n    _this.handleFullscreen = function (event) {\n      event.preventDefault();\n      _this.windowCoordinatesState.leftBeforeAction = _this.left;\n      _this.windowCoordinatesState.topBeforeAction = _this.top;\n      _this.windowCoordinatesState.widthBeforeAction = _this.width;\n      _this.windowCoordinatesState.heightBeforeAction = _this.height;\n\n      _this.setState({\n        left: 0,\n        top: 0,\n        width: _this.props.appendTo ? _this.props.appendTo.offsetWidth : window.innerWidth,\n        height: _this.props.appendTo ? _this.props.appendTo.offsetHeight : window.innerHeight,\n        stage: windowStage.FULLSCREEN\n      });\n\n      dispatchEvent(_this.props.onStageChange, event, _this, {\n        state: windowStage.FULLSCREEN\n      });\n    };\n\n    _this.handleRestore = function (event) {\n      event.preventDefault();\n\n      if (_this.windowStage === windowStage.FULLSCREEN) {\n        _this.setState({\n          stage: windowStage.DEFAULT,\n          left: _this.windowCoordinatesState.leftBeforeAction,\n          top: _this.windowCoordinatesState.topBeforeAction,\n          width: _this.windowCoordinatesState.widthBeforeAction,\n          height: _this.windowCoordinatesState.heightBeforeAction\n        });\n      } else if (_this.windowStage === windowStage.MINIMIZED) {\n        _this.setState({\n          stage: windowStage.DEFAULT,\n          height: _this.windowCoordinatesState.heightBeforeAction\n        });\n      }\n\n      dispatchEvent(_this.props.onStageChange, event, _this, {\n        state: windowStage.DEFAULT\n      });\n    };\n\n    _this.handleCloseWindow = function (event) {\n      event.preventDefault();\n      dispatchEvent(_this.props.onClose, event, _this, {\n        state: undefined\n      });\n    };\n\n    _this.handleDoubleClick = function (e) {\n      if (_this.windowStage === windowStage.FULLSCREEN || _this.windowStage === windowStage.MINIMIZED) {\n        _this.handleRestore(e);\n      } else {\n        _this.handleFullscreen(e);\n      }\n    }; // Handle resizing\n\n\n    _this.handleResize = function (event, props) {\n      var x = _this.props.appendTo ? event.pageX - _this.offSetCoordinates.x : event.pageX;\n      var y = _this.props.appendTo ? event.pageY - _this.offSetCoordinates.y : event.pageY;\n      var currentWidth = _this.width;\n      var currentHeight = _this.height;\n      var minWidth = _this.props.minWidth || DEFAULT_MIN_WIDTH;\n      var minHeight = _this.props.minHeight || DEFAULT_MIN_HEIGHT;\n      var heightDifference = _this.top - y;\n      var widthDifference = _this.left - x;\n      var newWidth = x - _this.left;\n      var newHeight = y - _this.top;\n      var newState = Object.assign({}, _this.state, {\n        isDragging: !props.end\n      });\n\n      if (props.direction.indexOf('n') >= 0 && minHeight - (currentHeight + heightDifference) < 0) {\n        if (_this.top > 0) {\n          newState.height = currentHeight + heightDifference;\n        }\n\n        newState.top = y;\n      }\n\n      if (props.direction.indexOf('s') >= 0 && minHeight - newHeight < 0) {\n        newState.height = newHeight;\n      }\n\n      if (props.direction.indexOf('w') >= 0 && minWidth - (currentWidth + widthDifference) < 0) {\n        if (_this.left > 0) {\n          newState.width = currentWidth + widthDifference;\n        }\n\n        newState.left = x;\n      }\n\n      if (props.direction.indexOf('e') >= 0 && minWidth - newWidth < 0) {\n        newState.width = newWidth;\n      }\n\n      _this.setState(newState);\n\n      _this.dispatchMoveEvent(_this.props.onResize, event, true, props.end);\n    }; // Dispatcher for the resize and move events\n\n\n    _this.dispatchMoveEvent = function (callback, event, drag, end) {\n      if (!callback) {\n        return;\n      }\n\n      callback.call(undefined, {\n        nativeEvent: event.nativeEvent ? event.nativeEvent : event.originalEvent,\n        drag: drag,\n        end: end,\n        target: _this,\n        left: _this.state.left,\n        top: _this.state.top,\n        width: _this.state.width,\n        hight: _this.state.height,\n        height: _this.state.height\n      });\n    };\n\n    _this.handleBrowserWindowResize = function () {\n      if (_this.windowStage === windowStage.FULLSCREEN) {\n        _this.setState({\n          width: _this.props.appendTo ? _this.props.appendTo.offsetWidth : window.innerWidth,\n          height: _this.props.appendTo ? _this.props.appendTo.offsetHeight : window.innerHeight\n        });\n      }\n    };\n\n    _this.setZindex = function () {\n      if (_this.state.focused) {\n        var allWindows = document && document.querySelectorAll('.k-window');\n        var maxZindex_1 = 10002;\n        allWindows.forEach(function (KRwindow) {\n          var computedStyle = window.getComputedStyle(KRwindow, null);\n          var zIndexValue = parseInt(computedStyle.zIndex !== null ? computedStyle.zIndex : '10002', 10);\n          zIndexValue > maxZindex_1 ? maxZindex_1 = zIndexValue : null;\n        });\n        return (maxZindex_1 + 1).toString();\n      }\n\n      return _this.windowElement.style.zIndex;\n    };\n\n    validatePackage(packageMetadata);\n    _this.state = {\n      stage: _this.props.stage || windowStage.DEFAULT,\n      isDragging: false,\n      top: _this.getInitialTop(),\n      left: _this.getInitialLeft(),\n      width: _this.getInitialWidth(),\n      height: _this.getInitialHeight(),\n      focused: true\n    };\n    _this.windowCoordinatesState = {\n      leftBeforeAction: _this.getInitialLeft(),\n      topBeforeAction: _this.getInitialTop(),\n      widthBeforeAction: _this.getInitialWidth(),\n      heightBeforeAction: _this.getInitialHeight()\n    };\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Window.prototype.componentDidMount = function () {\n    if (window) {\n      window.addEventListener('resize', this.handleBrowserWindowResize);\n    }\n\n    if (this.props.appendTo) {\n      var containerCoordinates = this.props.appendTo.getBoundingClientRect();\n      var bodyRect = document.body.getBoundingClientRect();\n      this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;\n      this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Window.prototype.componentWillUnmount = function () {\n    if (window) {\n      window.removeEventListener('resize', this.handleBrowserWindowResize);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Window.prototype.componentDidUpdate = function () {\n    if (this.props.appendTo) {\n      var containerCoordinates = this.props.appendTo.getBoundingClientRect();\n      var bodyRect = document.body.getBoundingClientRect();\n      this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;\n      this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Window.prototype.render = function () {\n    var _this = this;\n\n    var elementsArray = React.Children.toArray(this.props.children);\n    var content = this.getContent(elementsArray);\n    var actions = this.getActionBar(elementsArray);\n    var classNamesWindow = classNames('k-widget', 'k-window', this.props.className, {\n      'k-window-minimized': this.state.stage === 'MINIMIZED'\n    }, {\n      'k-window-focused': this.state.focused\n    });\n    var windowElement = React.createElement(React.Fragment, null, this.props.modal && React.createElement(\"div\", {\n      className: \"k-overlay\"\n    }), React.createElement(\"div\", {\n      tabIndex: 0,\n      onFocus: function onFocus() {\n        return _this.setState({\n          focused: true\n        });\n      },\n      onBlur: function onBlur() {\n        return _this.setState({\n          focused: false\n        });\n      },\n      onKeyDown: this.handleKeyDown,\n      ref: function ref(el) {\n        return _this.windowElement = el;\n      },\n      className: classNamesWindow,\n      style: __assign({\n        top: this.top,\n        left: this.left,\n        width: this.width,\n        height: this.height || '',\n        zIndex: this.setZindex()\n      }, this.props.style)\n    }, React.createElement(MiddleLayerOptimization, {\n      shouldUpdateOnDrag: this.props.shouldUpdateOnDrag || false,\n      isDragging: this.state.isDragging\n    }, React.createElement(Draggable, {\n      onPress: this.onPress,\n      onDrag: this.onDrag,\n      onRelease: this.onRelease,\n      ref: function ref(component) {\n        return _this.draggable = component;\n      }\n    }, React.createElement(WindowTitleBar, {\n      stage: this.windowStage,\n      onDoubleClick: this.props.doubleClickStageChange ? this.handleDoubleClick : undefined,\n      onMinimizeButtonClick: this.handleMinimize,\n      onFullScreenButtonClick: this.handleFullscreen,\n      onRestoreButtonClick: this.handleRestore,\n      onCloseButtonClick: this.handleCloseWindow,\n      closeButton: this.props.closeButton,\n      minimizeButton: this.props.minimizeButton,\n      maximizeButton: this.props.maximizeButton,\n      restoreButton: this.props.restoreButton\n    }, this.props.title)), this.windowStage !== windowStage.MINIMIZED ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"k-window-content\"\n    }, content), actions) : null, this.windowStage === windowStage.DEFAULT && this.props.resizable ? React.createElement(ResizeHandlers, {\n      onResize: this.handleResize\n    }) : null)));\n\n    if (this.props.appendTo) {\n      return ReactDOM.createPortal(windowElement, this.props.appendTo);\n    }\n\n    return windowElement;\n  };\n\n  Object.defineProperty(Window.prototype, \"top\", {\n    // Getters\n    get: function get() {\n      if (this.windowStage !== windowStage.FULLSCREEN) {\n        return Math.max(this.props.top || this.state.top, 0);\n      }\n\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Window.prototype, \"left\", {\n    get: function get() {\n      if (this.windowStage !== windowStage.FULLSCREEN) {\n        return Math.max(this.props.left || this.state.left, 0);\n      }\n\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Window.prototype, \"width\", {\n    get: function get() {\n      var width = this.props.width || this.state.width;\n\n      if (this.windowStage === windowStage.FULLSCREEN) {\n        if (this.props.appendTo) {\n          width = this.props.appendTo.offsetWidth;\n          return width;\n        }\n\n        width = window.innerWidth;\n      }\n\n      return width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Window.prototype, \"height\", {\n    get: function get() {\n      var height = this.props.height || this.state.height;\n\n      if (this.windowStage === windowStage.FULLSCREEN) {\n        if (this.props.appendTo) {\n          height = this.props.appendTo.offsetHeight;\n          return height;\n        }\n\n        height = window.innerHeight;\n      } else if (this.windowStage === windowStage.MINIMIZED) {\n        height = 0;\n      }\n\n      return height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Window.prototype, \"windowStage\", {\n    get: function get() {\n      return this.props.stage || this.state.stage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Window.prototype.getActionBar = function (children) {\n    return children.filter(function (child) {\n      return child && child.type === WindowActionsBar;\n    });\n  };\n\n  Window.prototype.getContent = function (children) {\n    return children.filter(function (child) {\n      return child && child.type !== WindowActionsBar;\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Window.propTypes = {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    initialwidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    initialHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    initialLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    initialTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    minWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizable: PropTypes.bool,\n    draggable: PropTypes.bool,\n    title: PropTypes.any,\n    shouldUpdateOnDrag: PropTypes.bool,\n    stage: PropTypes.oneOf(['DEFAULT', 'MINIMIZED', 'FULLSCREEN']),\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n  /**\n   * @hidden\n   */\n\n  Window.defaultProps = {\n    minWidth: DEFAULT_MIN_WIDTH,\n    minHeight: DEFAULT_MIN_HEIGHT,\n    resizable: true,\n    draggable: true,\n    modal: false,\n    doubleClickStageChange: true\n  };\n  return Window;\n}(React.Component);\n\nexport { Window };","map":{"version":3,"sources":["../../src/Window.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAM,QAAb,MAA2B,WAA3B;AACA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AAEA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,aAAT,EAAwB,IAAxB,EAA8B,UAA9B,QAAgD,8BAAhD;AACA,SAAS,SAAT,QAA0B,8BAA1B;AACA,SAAS,cAAT,QAA+B,wBAA/B;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AACA,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,eAAT,QAAgC,8BAAhC;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAEA,IAAM,aAAa,GAAG,GAAtB;AACA,IAAM,cAAc,GAAG,GAAvB;AACA,IAAM,iBAAiB,GAAG,GAA1B;AACA,IAAM,kBAAkB,GAAG,GAA3B;AACA,IAAM,YAAY,GAAG,CAArB;;AAWA,IAAA,MAAA,GAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAiDxB,WAAA,MAAA,CAAY,KAAZ,EAA8B;AAA9B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADhB;;AAFQ,IAAA,KAAA,CAAA,iBAAA,GAA0B;AAAE,MAAA,CAAC,EAAE,CAAL;AAAQ,MAAA,CAAC,EAAE;AAAX,KAA1B;AAwDR;;AAEG;;AACH,IAAA,KAAA,CAAA,OAAA,GAAU,UAAC,IAAD,EAAU;AAChB,UAAM,CAAC,GAAG,IAAI,CAAC,KAAf;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,cAA5B,GAA6C,CAAC,CAAC,KAAF,GAAU,KAAI,CAAC,IAA5D;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,aAA5B,GAA4C,CAAC,CAAC,KAAF,GAAU,KAAI,CAAC,GAA3D;AACH,KAJD;AAMA;;AAEG;;;AACH,IAAA,KAAA,CAAA,MAAA,GAAS,UAAC,IAAD,EAAU;AACf,UAAM,CAAC,GAAG,IAAI,CAAC,KAAf;AAEA,MAAA,CAAC,CAAC,aAAF,CAAgB,cAAhB;;AACA,UAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAAjC,IAA+C,KAAI,CAAC,KAAL,CAAW,SAA9D,EAAyE;AACrE,QAAA,KAAI,CAAC,QAAL,CAAc;AACV,UAAA,GAAG,EAAE,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAF,GAAU,KAAI,CAAC,sBAAL,CAA4B,aAA/C,EAA8D,CAA9D,CADK;AAEV,UAAA,IAAI,EAAE,CAAC,CAAC,KAAF,GAAU,KAAI,CAAC,sBAAL,CAA4B,cAFlC;AAGV,UAAA,UAAU,EAAE;AAHF,SAAd;;AAMA,YAAI,KAAI,CAAC,KAAL,CAAW,MAAf,EAAuB;AACnB;AACA,UAAA,KAAI,CAAC,iBAAL,CAAuB,KAAI,CAAC,KAAL,CAAW,MAAlC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,KAAnD;AACH;AACJ;AACJ,KAhBD;AAkBA;;AAEG;;;AACH,IAAA,KAAA,CAAA,SAAA,GAAY,UAAC,IAAD,EAAU;AAClB,UAAM,CAAC,GAAG,IAAI,CAAC,KAAf;;AAEA,UAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAAjC,IAA+C,KAAI,CAAC,KAAL,CAAW,SAA9D,EAAyE;AACrE,YAAI,KAAI,CAAC,KAAL,CAAW,MAAf,EAAuB;AACnB,UAAA,KAAI,CAAC,iBAAL,CAAuB,KAAI,CAAC,KAAL,CAAW,MAAlC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD;AACH;AACJ;;AACD,MAAA,KAAI,CAAC,QAAL,CAAc;AACV,QAAA,UAAU,EAAE;AADF,OAAd;AAGH,KAXD,CAvF8B,CA0N9B;;;AACQ,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,KAAD,EAAM;AAC1B,UAAI,KAAK,CAAC,MAAN,KAAiB,KAAK,CAAC,aAA3B,EAA0C;AACtC;AACH;;AACD,UAAM,QAAQ,GAAG,KAAI,CAAC,KAAL,CAAW,QAAX,IAAuB,iBAAxC;AACA,UAAM,SAAS,GAAG,KAAI,CAAC,KAAL,CAAW,SAAX,IAAwB,kBAA1C;;AACA,UAAI,KAAK,CAAC,OAAN,IAAiB,KAAI,CAAC,KAAL,CAAW,SAAhC,EAA2C;AACvC,gBAAQ,KAAK,CAAC,OAAd;AACI,eAAK,IAAI,CAAC,EAAV;AACI,YAAA,KAAK,CAAC,cAAN;;AACA,gBAAI,SAAS,IAAK,KAAI,CAAC,MAAL,GAAc,YAAhC,EAA+C;AAC3C,cAAA,KAAI,CAAC,QAAL,CAAc;AAAE,gBAAA,MAAM,EAAE,KAAI,CAAC,MAAL,GAAc;AAAxB,eAAd;AACH;;AACD;;AACJ,eAAK,IAAI,CAAC,IAAV;AACI,YAAA,KAAK,CAAC,cAAN;;AACA,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,MAAM,EAAE,KAAI,CAAC,MAAL,GAAc;AAAxB,aAAd;;AACA;;AACJ,eAAK,IAAI,CAAC,IAAV;AACI,gBAAI,QAAQ,IAAK,KAAI,CAAC,KAAL,GAAa,YAA9B,EAA6C;AACzC,cAAA,KAAI,CAAC,QAAL,CAAc;AAAE,gBAAA,KAAK,EAAE,KAAI,CAAC,KAAL,GAAa;AAAtB,eAAd;AACH;;AACD;;AACJ,eAAK,IAAI,CAAC,KAAV;AACI,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,KAAK,EAAE,KAAI,CAAC,KAAL,GAAa;AAAtB,aAAd;;AACA;;AACJ;AAAS;AAnBb;;AAqBA,QAAA,KAAI,CAAC,iBAAL,CAAuB,KAAI,CAAC,KAAL,CAAW,QAAlC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,SAA1D;;AACA;AACH;;AAED,UAAI,KAAK,CAAC,MAAV,EAAkB;AACd,gBAAQ,KAAK,CAAC,OAAd;AACI,eAAK,IAAI,CAAC,EAAV;AACI,gBAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,SAArC,EAAgD;AAC5C,cAAA,KAAI,CAAC,aAAL,CAAmB,KAAnB;;AACA,cAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,gBAAA,KAAK,EAAE,WAAW,CAAC;AAArB,eAAxC,CAAb;AACH,aAHD,MAGO,IAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,OAArC,EAA8C;AACjD,cAAA,KAAI,CAAC,gBAAL,CAAsB,KAAtB;;AACA,cAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,gBAAA,KAAK,EAAE,WAAW,CAAC;AAArB,eAAxC,CAAb;AACH;;AACD;;AACJ,eAAK,IAAI,CAAC,IAAV;AACI,gBAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,cAAA,KAAI,CAAC,aAAL,CAAmB,KAAnB;;AACA,cAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,gBAAA,KAAK,EAAE,WAAW,CAAC;AAArB,eAAxC,CAAb;AACH,aAHD,MAGO,IAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,OAArC,EAA8C;AACjD,cAAA,KAAI,CAAC,cAAL,CAAoB,KAApB;;AACA,cAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,gBAAA,KAAK,EAAE,WAAW,CAAC;AAArB,eAAxC,CAAb;AACH;;AACD;;AACJ;AAnBJ;;AAqBA;AACH;;AACD,UAAI,CAAC,KAAK,CAAC,OAAX,EAAoB;AAChB,gBAAQ,KAAK,CAAC,OAAd;AACI,eAAK,IAAI,CAAC,GAAV;AACI,gBAAI,KAAI,CAAC,KAAL,CAAW,OAAf,EAAwB;AACpB,cAAA,KAAI,CAAC,iBAAL,CAAuB,KAAvB;AACH;;AACD;;AACJ,eAAK,IAAI,CAAC,EAAV;AAAc,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,GAAG,EAAE,KAAI,CAAC,KAAL,CAAW,GAAX,GAAiB;AAAxB,aAAd;;AAAuD;;AACrE,eAAK,IAAI,CAAC,IAAV;AAAgB,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,GAAG,EAAE,KAAI,CAAC,KAAL,CAAW,GAAX,GAAiB;AAAxB,aAAd;;AAAuD;;AACvE,eAAK,IAAI,CAAC,IAAV;AAAgB,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,IAAI,EAAE,KAAI,CAAC,KAAL,CAAW,IAAX,GAAkB;AAA1B,aAAd;;AAAyD;;AACzE,eAAK,IAAI,CAAC,KAAV;AAAiB,YAAA,KAAI,CAAC,QAAL,CAAc;AAAE,cAAA,IAAI,EAAE,KAAI,CAAC,KAAL,CAAW,IAAX,GAAkB;AAA1B,aAAd;;AAAyD;;AAC1E;AAAS;AAVb;AAaH;;AACD,MAAA,KAAI,CAAC,iBAAL,CAAuB,KAAI,CAAC,KAAL,CAAW,MAAlC,EAA0C,KAA1C,EAAiD,KAAjD,EAAwD,SAAxD;AACH,KAxEO,CA3NsB,CAqS9B;;;AACQ,IAAA,KAAA,CAAA,aAAA,GAAgB,YAAA;AACpB,UAAI,KAAI,CAAC,KAAL,CAAW,GAAX,KAAmB,SAAvB,EAAkC;AAC9B,eAAO,KAAI,CAAC,KAAL,CAAW,GAAlB;AACH;;AACD,UAAI,KAAI,CAAC,KAAL,CAAW,UAAX,KAA0B,SAA9B,EAAyC;AACrC,eAAO,KAAI,CAAC,KAAL,CAAW,UAAlB;AACH;;AACD,UAAI,MAAM,GAAG,cAAb;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,MAAX,KAAsB,SAA1B,EAAqC;AACjC,QAAA,MAAM,GAAG,KAAI,CAAC,KAAL,CAAW,MAApB;AACH,OAFD,MAEO,IAAI,KAAI,CAAC,KAAL,CAAW,aAAX,KAA6B,SAAjC,EAA4C;AAC/C,QAAA,MAAM,GAAG,KAAI,CAAC,KAAL,CAAW,aAApB;AACH;;AACD,UAAI,KAAI,CAAC,KAAL,CAAW,QAAf,EAAyB;AACrB,eAAQ,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,YAApB,GAAmC,CAApC,GAA0C,MAAM,GAAG,CAA1D;AACH;;AACD,aAAQ,MAAM,CAAC,WAAP,GAAqB,CAAtB,GAA4B,MAAM,GAAG,CAA5C;AACH,KAjBO;;AAkBA,IAAA,KAAA,CAAA,cAAA,GAAiB,YAAA;AACrB,UAAI,KAAI,CAAC,KAAL,CAAW,IAAX,KAAoB,SAAxB,EAAmC;AAC/B,eAAO,KAAI,CAAC,KAAL,CAAW,IAAlB;AACH;;AACD,UAAI,KAAI,CAAC,KAAL,CAAW,WAAX,KAA2B,SAA/B,EAA0C;AACtC,eAAO,KAAI,CAAC,KAAL,CAAW,WAAlB;AACH;;AACD,UAAI,KAAK,GAAG,aAAZ;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,KAAX,KAAqB,SAAzB,EAAoC;AAChC,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,KAAnB;AACH,OAFD,MAEO,IAAI,KAAI,CAAC,KAAL,CAAW,YAAX,KAA4B,SAAhC,EAA2C;AAC9C,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,YAAnB;AACH;;AACD,UAAI,KAAI,CAAC,KAAL,CAAW,QAAf,EAAyB;AACrB,eAAQ,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,WAApB,GAAkC,CAAnC,GAAyC,KAAK,GAAG,CAAxD;AACH;;AACD,aAAQ,MAAM,CAAC,UAAP,GAAoB,CAArB,GAA2B,KAAK,GAAG,CAA1C;AACH,KAjBO;;AAkBA,IAAA,KAAA,CAAA,eAAA,GAAkB,YAAA;AACtB,UAAI,KAAK,GAAG,aAAZ;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,KAAX,KAAqB,SAAzB,EAAoC;AAChC,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,KAAnB;AACH,OAFD,MAEO,IAAI,KAAI,CAAC,KAAL,CAAW,YAAX,KAA4B,SAAhC,EAA2C;AAC9C,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,YAAnB;AACH;;AACD,aAAO,KAAP;AACH,KARO;;AASA,IAAA,KAAA,CAAA,gBAAA,GAAmB,YAAA;AACvB,UAAI,MAAM,GAAG,cAAb;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,MAAX,KAAsB,SAA1B,EAAqC;AACjC,QAAA,MAAM,GAAG,KAAI,CAAC,KAAL,CAAW,MAApB;AACH,OAFD,MAEO,IAAI,KAAI,CAAC,KAAL,CAAW,aAAX,KAA6B,SAAjC,EAA4C;AAC/C,QAAA,MAAM,GAAG,KAAI,CAAC,KAAL,CAAW,aAApB;AACH;;AACD,aAAO,MAAP;AACH,KARO,CAnVsB,CA6V9B;;;AACQ,IAAA,KAAA,CAAA,cAAA,GAAiB,UAAC,KAAD,EAAiC;AACtD,MAAA,KAAK,CAAC,cAAN;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,gBAA5B,GAA+C,KAAI,CAAC,IAApD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,eAA5B,GAA8C,KAAI,CAAC,GAAnD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,iBAA5B,GAAgD,KAAI,CAAC,KAArD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,kBAA5B,GAAiD,KAAI,CAAC,MAAtD;;AACA,MAAA,KAAI,CAAC,QAAL,CAAc;AACV,QAAA,KAAK,EAAE,WAAW,CAAC,SADT;AAEV,QAAA,MAAM,EAAE;AAFE,OAAd;;AAIA,MAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,QAAA,KAAK,EAAE,WAAW,CAAC;AAArB,OAAxC,CAAb;AACH,KAXO;;AAaA,IAAA,KAAA,CAAA,gBAAA,GAAmB,UAAC,KAAD,EAAiC;AACxD,MAAA,KAAK,CAAC,cAAN;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,gBAA5B,GAA+C,KAAI,CAAC,IAApD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,eAA5B,GAA8C,KAAI,CAAC,GAAnD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,iBAA5B,GAAgD,KAAI,CAAC,KAArD;AACA,MAAA,KAAI,CAAC,sBAAL,CAA4B,kBAA5B,GAAiD,KAAI,CAAC,MAAtD;;AACA,MAAA,KAAI,CAAC,QAAL,CAAc;AACV,QAAA,IAAI,EAAE,CADI;AAEV,QAAA,GAAG,EAAE,CAFK;AAGV,QAAA,KAAK,EAAE,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,WAA1C,GAAwD,MAAM,CAAC,UAH5D;AAIV,QAAA,MAAM,EAAE,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,YAA1C,GAAyD,MAAM,CAAC,WAJ9D;AAKV,QAAA,KAAK,EAAE,WAAW,CAAC;AALT,OAAd;;AAOA,MAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,QAAA,KAAK,EAAE,WAAW,CAAC;AAArB,OAAxC,CAAb;AACH,KAdO;;AAgBA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,KAAD,EAAiC;AACrD,MAAA,KAAK,CAAC,cAAN;;AACA,UAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,QAAA,KAAI,CAAC,QAAL,CAAc;AACV,UAAA,KAAK,EAAE,WAAW,CAAC,OADT;AAEV,UAAA,IAAI,EAAE,KAAI,CAAC,sBAAL,CAA4B,gBAFxB;AAGV,UAAA,GAAG,EAAE,KAAI,CAAC,sBAAL,CAA4B,eAHvB;AAIV,UAAA,KAAK,EAAE,KAAI,CAAC,sBAAL,CAA4B,iBAJzB;AAKV,UAAA,MAAM,EAAE,KAAI,CAAC,sBAAL,CAA4B;AAL1B,SAAd;AAOH,OARD,MAQO,IAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,SAArC,EAAgD;AACnD,QAAA,KAAI,CAAC,QAAL,CAAc;AACV,UAAA,KAAK,EAAE,WAAW,CAAC,OADT;AAEV,UAAA,MAAM,EAAE,KAAI,CAAC,sBAAL,CAA4B;AAF1B,SAAd;AAIH;;AAED,MAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,EAA2B,KAA3B,EAAkC,KAAlC,EAAwC;AAAE,QAAA,KAAK,EAAE,WAAW,CAAC;AAArB,OAAxC,CAAb;AACH,KAlBO;;AAoBA,IAAA,KAAA,CAAA,iBAAA,GAAoB,UAAC,KAAD,EAAiC;AACzD,MAAA,KAAK,CAAC,cAAN;AACA,MAAA,aAAa,CAAC,KAAI,CAAC,KAAL,CAAW,OAAZ,EAAqB,KAArB,EAA4B,KAA5B,EAAkC;AAAE,QAAA,KAAK,EAAE;AAAT,OAAlC,CAAb;AACH,KAHO;;AAKA,IAAA,KAAA,CAAA,iBAAA,GAAoB,UAAC,CAAD,EAAE;AAC1B,UAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAAjC,IAA+C,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,SAApF,EAA+F;AAC3F,QAAA,KAAI,CAAC,aAAL,CAAmB,CAAnB;AACH,OAFD,MAEO;AACH,QAAA,KAAI,CAAC,gBAAL,CAAsB,CAAtB;AACH;AACJ,KANO,CApZsB,CA2Z9B;;;AACQ,IAAA,KAAA,CAAA,YAAA,GAAe,UAAC,KAAD,EAAa,KAAb,EAAuD;AAC1E,UAAM,CAAC,GAAG,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAK,CAAC,KAAN,GAAc,KAAI,CAAC,iBAAL,CAAuB,CAA3D,GAA+D,KAAK,CAAC,KAA/E;AACA,UAAM,CAAC,GAAG,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAK,CAAC,KAAN,GAAc,KAAI,CAAC,iBAAL,CAAuB,CAA3D,GAA+D,KAAK,CAAC,KAA/E;AACA,UAAM,YAAY,GAAG,KAAI,CAAC,KAA1B;AACA,UAAM,aAAa,GAAG,KAAI,CAAC,MAA3B;AACA,UAAM,QAAQ,GAAG,KAAI,CAAC,KAAL,CAAW,QAAX,IAAuB,iBAAxC;AACA,UAAM,SAAS,GAAG,KAAI,CAAC,KAAL,CAAW,SAAX,IAAwB,kBAA1C;AACA,UAAM,gBAAgB,GAAG,KAAI,CAAC,GAAL,GAAW,CAApC;AACA,UAAM,eAAe,GAAG,KAAI,CAAC,IAAL,GAAY,CAApC;AACA,UAAI,QAAQ,GAAG,CAAC,GAAG,KAAI,CAAC,IAAxB;AACA,UAAI,SAAS,GAAG,CAAC,GAAG,KAAI,CAAC,GAAzB;AAEA,UAAM,QAAQ,GAAgB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAAC,KAAvB,EAA8B;AAAE,QAAA,UAAU,EAAE,CAAC,KAAK,CAAC;AAArB,OAA9B,CAA9B;;AAEA,UAAI,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAhC,IAAqC,SAAS,IAAI,aAAa,GAAG,gBAApB,CAAT,GAAiD,CAA1F,EAA6F;AACzF,YAAI,KAAI,CAAC,GAAL,GAAW,CAAf,EAAkB;AACd,UAAA,QAAQ,CAAC,MAAT,GAAkB,aAAa,GAAG,gBAAlC;AACH;;AACD,QAAA,QAAQ,CAAC,GAAT,GAAe,CAAf;AACH;;AAED,UAAI,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAhC,IAAsC,SAAS,GAAG,SAAZ,GAAwB,CAAlE,EAAsE;AAClE,QAAA,QAAQ,CAAC,MAAT,GAAkB,SAAlB;AACH;;AAED,UAAI,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAhC,IAAqC,QAAQ,IAAI,YAAY,GAAG,eAAnB,CAAR,GAA8C,CAAvF,EAA0F;AACtF,YAAI,KAAI,CAAC,IAAL,GAAY,CAAhB,EAAmB;AACf,UAAA,QAAQ,CAAC,KAAT,GAAiB,YAAY,GAAG,eAAhC;AACH;;AACD,QAAA,QAAQ,CAAC,IAAT,GAAgB,CAAhB;AACH;;AAED,UAAI,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAhC,IAAsC,QAAQ,GAAG,QAAX,GAAsB,CAAhE,EAAoE;AAChE,QAAA,QAAQ,CAAC,KAAT,GAAiB,QAAjB;AACH;;AAED,MAAA,KAAI,CAAC,QAAL,CAAc,QAAd;;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,KAAI,CAAC,KAAL,CAAW,QAAlC,EAA4C,KAA5C,EAAmD,IAAnD,EAAyD,KAAK,CAAC,GAA/D;AACH,KAtCO,CA5ZsB,CAoc9B;;;AACQ,IAAA,KAAA,CAAA,iBAAA,GAAoB,UAAC,QAAD,EAAgB,KAAhB,EAA4B,IAA5B,EAA2C,GAA3C,EAAmE;AAC3F,UAAI,CAAC,QAAL,EAAe;AACX;AACH;;AACD,MAAA,QAAQ,CAAC,IAAT,CAAc,SAAd,EAAyB;AACrB,QAAA,WAAW,EAAE,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAA1B,GAAwC,KAAK,CAAC,aADtC;AAErB,QAAA,IAAI,EAAE,IAFe;AAGrB,QAAA,GAAG,EAAE,GAHgB;AAIrB,QAAA,MAAM,EAAE,KAJa;AAKrB,QAAA,IAAI,EAAE,KAAI,CAAC,KAAL,CAAW,IALI;AAMrB,QAAA,GAAG,EAAE,KAAI,CAAC,KAAL,CAAW,GANK;AAOrB,QAAA,KAAK,EAAE,KAAI,CAAC,KAAL,CAAW,KAPG;AAQrB,QAAA,KAAK,EAAE,KAAI,CAAC,KAAL,CAAW,MARG;AASrB,QAAA,MAAM,EAAE,KAAI,CAAC,KAAL,CAAW;AATE,OAAzB;AAWH,KAfO;;AAiBA,IAAA,KAAA,CAAA,yBAAA,GAA4B,YAAA;AAChC,UAAI,KAAI,CAAC,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,QAAA,KAAI,CAAC,QAAL,CAAc;AACV,UAAA,KAAK,EAAE,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,WAA1C,GAAwD,MAAM,CAAC,UAD5D;AAEV,UAAA,MAAM,EAAE,KAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,YAA1C,GAAyD,MAAM,CAAC;AAF9D,SAAd;AAIH;AACJ,KAPO;;AAkBA,IAAA,KAAA,CAAA,SAAA,GAAY,YAAA;AAChB,UAAG,KAAI,CAAC,KAAL,CAAW,OAAd,EAAsB;AAClB,YAAI,UAAU,GAAG,QAAQ,IAAI,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,CAA7B;AACA,YAAI,WAAS,GAAG,KAAhB;AACA,QAAA,UAAU,CAAC,OAAX,CAAmB,UAAA,QAAA,EAAQ;AACvB,cAAI,aAAa,GAAG,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,IAAlC,CAApB;AACA,cAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAd,KAAyB,IAAzB,GAAgC,aAAa,CAAC,MAA9C,GAAsD,OAAvD,EAAiE,EAAjE,CAA1B;AACA,UAAA,WAAW,GAAG,WAAd,GAA0B,WAAS,GAAG,WAAtC,GAAoD,IAApD;AACH,SAJD;AAKA,eAAO,CAAC,WAAS,GAAG,CAAb,EAAgB,QAAhB,EAAP;AACH;;AAED,aAAO,KAAI,CAAC,aAAL,CAAmB,KAAnB,CAAyB,MAAhC;AACH,KAbO;;AAteJ,IAAA,eAAe,CAAC,eAAD,CAAf;AAEA,IAAA,KAAI,CAAC,KAAL,GAAa;AACT,MAAA,KAAK,EAAE,KAAI,CAAC,KAAL,CAAW,KAAX,IAAoB,WAAW,CAAC,OAD9B;AAET,MAAA,UAAU,EAAE,KAFH;AAGT,MAAA,GAAG,EAAE,KAAI,CAAC,aAAL,EAHI;AAIT,MAAA,IAAI,EAAE,KAAI,CAAC,cAAL,EAJG;AAKT,MAAA,KAAK,EAAE,KAAI,CAAC,eAAL,EALE;AAMT,MAAA,MAAM,EAAE,KAAI,CAAC,gBAAL,EANC;AAOT,MAAA,OAAO,EAAE;AAPA,KAAb;AASA,IAAA,KAAI,CAAC,sBAAL,GAA8B;AAC1B,MAAA,gBAAgB,EAAE,KAAI,CAAC,cAAL,EADQ;AAE1B,MAAA,eAAe,EAAE,KAAI,CAAC,aAAL,EAFS;AAG1B,MAAA,iBAAiB,EAAE,KAAI,CAAC,eAAL,EAHO;AAI1B,MAAA,kBAAkB,EAAE,KAAI,CAAC,gBAAL;AAJM,KAA9B;;AAMH;AACD;;AAEG;;;AACH,EAAA,MAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACI,QAAI,MAAJ,EAAY;AACR,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,yBAAvC;AACH;;AACD,QAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACrB,UAAI,oBAAoB,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,qBAApB,EAA3B;AACA,UAAI,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,qBAAd,EAAf;AACA,WAAK,iBAAL,CAAuB,CAAvB,GAA2B,oBAAoB,CAAC,IAArB,GAA4B,QAAQ,CAAC,IAAhE;AACA,WAAK,iBAAL,CAAuB,CAAvB,GAA2B,oBAAoB,CAAC,GAArB,GAA2B,QAAQ,CAAC,GAA/D;AACH;AACJ,GAVD;AAWA;;AAEG;;;AACH,EAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AACI,QAAI,MAAJ,EAAY;AACR,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,yBAA1C;AACH;AACJ,GAJD;AAKA;;AAEG;;;AACH,EAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACI,QAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACrB,UAAI,oBAAoB,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,qBAApB,EAA3B;AACA,UAAI,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,qBAAd,EAAf;AACA,WAAK,iBAAL,CAAuB,CAAvB,GAA2B,oBAAoB,CAAC,IAArB,GAA4B,QAAQ,CAAC,IAAhE;AACA,WAAK,iBAAL,CAAuB,CAAvB,GAA2B,oBAAoB,CAAC,GAArB,GAA2B,QAAQ,CAAC,GAA/D;AACH;AACJ,GAPD;AAuDA;;AAEG;;;AACH,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,aAAa,GAAG,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,KAAK,KAAL,CAAW,QAAlC,CAAtB;AACA,QAAM,OAAO,GAAG,KAAK,UAAL,CAAgB,aAAhB,CAAhB;AACA,QAAM,OAAO,GAAG,KAAK,YAAL,CAAkB,aAAlB,CAAhB;AAEA,QAAM,gBAAgB,GAAG,UAAU,CAC/B,UAD+B,EAE/B,UAF+B,EAG/B,KAAK,KAAL,CAAW,SAHoB,EAI/B;AAAE,4BAAsB,KAAK,KAAL,CAAW,KAAX,KAAqB;AAA7C,KAJ+B,EAK/B;AAAE,0BAAoB,KAAK,KAAL,CAAW;AAAjC,KAL+B,CAAnC;AAMA,QAAM,aAAa,GACjB,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,KAAK,KAAL,CAAW,KAAX,IAAoB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,CADvB,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,QAAQ,EAAE,CADZ;AAEE,MAAA,OAAO,EAAE,mBAAA;AAAM,eAAA,KAAI,CAAC,QAAL,CAAc;AAAC,UAAA,OAAO,EAAtB;AAAc,SAAd,CAAA;AAA8B,OAF/C;AAGE,MAAA,MAAM,EAAE,kBAAA;AAAM,eAAA,KAAI,CAAC,QAAL,CAAc;AAAC,UAAA,OAAO,EAAtB;AAAc,SAAd,CAAA;AAA+B,OAH/C;AAIE,MAAA,SAAS,EAAE,KAAK,aAJlB;AAKE,MAAA,GAAG,EAAG,aAAA,EAAA,EAAE;AAAI,eAAA,KAAI,CAAC,aAAL,GAAA,EAAA;AAAuB,OALrC;AAME,MAAA,SAAS,EAAE,gBANb;AAOE,MAAA,KAAK,EAAA,QAAA,CAAA;AACK,QAAA,GAAG,EAAE,KAAK,GADf;AACoB,QAAA,IAAI,EAAE,KAAK,IAD/B;AACqC,QAAA,KAAK,EAAE,KAAK,KADjD;AACwD,QAAA,MAAM,EAAE,KAAK,MAAL,IAAe,EAD/E;AACmF,QAAA,MAAM,EAAE,KAAK,SAAL;AAD3F,OAAA,EAEQ,KAAK,KAAL,CAAW,KAFnB;AAPP,KAAA,EAYE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AACtB,MAAA,kBAAkB,EAAE,KAAK,KAAL,CAAW,kBAAX,IAAiC,KAD/B;AAEtB,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW;AAFD,KAAxB,EAIE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,MAAA,OAAO,EAAE,KAAK,OADN;AAER,MAAA,MAAM,EAAE,KAAK,MAFL;AAGR,MAAA,SAAS,EAAE,KAAK,SAHR;AAIR,MAAA,GAAG,EAAE,aAAC,SAAD,EAAU;AAAK,eAAA,KAAI,CAAC,SAAL,GAAA,SAAA;AAA0B;AAJtC,KAAV,EAME,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACb,MAAA,KAAK,EAAE,KAAK,WADC;AAEb,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,sBAAX,GAAoC,KAAK,iBAAzC,GAA6D,SAF/D;AAGb,MAAA,qBAAqB,EAAE,KAAK,cAHf;AAIb,MAAA,uBAAuB,EAAE,KAAK,gBAJjB;AAKb,MAAA,oBAAoB,EAAE,KAAK,aALd;AAMb,MAAA,kBAAkB,EAAE,KAAK,iBANZ;AAOb,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAPX;AAQb,MAAA,cAAc,EAAE,KAAK,KAAL,CAAW,cARd;AASb,MAAA,cAAc,EAAE,KAAK,KAAL,CAAW,cATd;AAUb,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW;AAVb,KAAf,EAYG,KAAK,KAAL,CAAW,KAZd,CANF,CAJF,EAyBG,KAAK,WAAL,KAAqB,WAAW,CAAC,SAAjC,GACc,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EACG,OADH,CADC,EAIA,OAJA,CADd,GAOa,IAhChB,EAiCG,KAAK,WAAL,KAAqB,WAAW,CAAC,OAAjC,IACW,KAAK,KAAL,CAAW,SADtB,GAEa,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,MAAA,QAAQ,EAAE,KAAK;AAAhB,KAAf,CAFb,GAGa,IApChB,CAZF,CAFF,CADF;;AAwDA,QAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACrB,aAAO,QAAQ,CAAC,YAAT,CAAsB,aAAtB,EAAqC,KAAK,KAAL,CAAW,QAAhD,CAAP;AACH;;AACD,WAAO,aAAP;AACH,GAvED;;AAyEA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,KAAZ,EAAe;AADf;SACA,eAAA;AACI,UAAI,KAAK,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,eAAO,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,GAAX,IAAkB,KAAK,KAAL,CAAW,GAAtC,EAA2C,CAA3C,CAAP;AACH;;AACD,aAAO,CAAP;AACH,KALc;oBAAA;;AAAA,GAAf;AAMA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,MAAZ,EAAgB;SAAhB,eAAA;AACI,UAAI,KAAK,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,eAAO,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,IAAX,IAAmB,KAAK,KAAL,CAAW,IAAvC,EAA6C,CAA7C,CAAP;AACH;;AACD,aAAO,CAAP;AACH,KALe;oBAAA;;AAAA,GAAhB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,OAAZ,EAAiB;SAAjB,eAAA;AACI,UAAI,KAAK,GAAG,KAAK,KAAL,CAAW,KAAX,IAAoB,KAAK,KAAL,CAAW,KAA3C;;AACA,UAAI,KAAK,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,YAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACrB,UAAA,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,WAA5B;AACA,iBAAO,KAAP;AACH;;AACD,QAAA,KAAK,GAAG,MAAM,CAAC,UAAf;AACH;;AACD,aAAO,KAAP;AACH,KAVgB;oBAAA;;AAAA,GAAjB;AAWA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,QAAZ,EAAkB;SAAlB,eAAA;AACI,UAAI,MAAM,GAAG,KAAK,KAAL,CAAW,MAAX,IAAqB,KAAK,KAAL,CAAW,MAA7C;;AACA,UAAI,KAAK,WAAL,KAAqB,WAAW,CAAC,UAArC,EAAiD;AAC7C,YAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACrB,UAAA,MAAM,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,YAA7B;AACA,iBAAO,MAAP;AACH;;AACD,QAAA,MAAM,GAAG,MAAM,CAAC,WAAhB;AACH,OAND,MAMO,IAAI,KAAK,WAAL,KAAqB,WAAW,CAAC,SAArC,EAAgD;AACnD,QAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAO,MAAP;AACH,KAZiB;oBAAA;;AAAA,GAAlB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,aAAZ,EAAuB;SAAvB,eAAA;AACI,aAAO,KAAK,KAAL,CAAW,KAAX,IAAoB,KAAK,KAAL,CAAW,KAAtC;AACH,KAFsB;oBAAA;;AAAA,GAAvB;;AAyQQ,EAAA,MAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,QAArB,EAAkC;AAC9B,WAAO,QAAQ,CAAC,MAAT,CAAgB,UAAC,KAAD,EAA+B;AAAK,aAAA,KAAK,IAAI,KAAK,CAAC,IAAN,KAAT,gBAAA;AAAwC,KAA5F,CAAP;AACH,GAFO;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAR,UAAmB,QAAnB,EAAgC;AAC5B,WAAO,QAAQ,CAAC,MAAT,CAAgB,UAAC,KAAD,EAA+B;AAClD,aAAA,KAAK,IAAI,KAAK,CAAC,IAAN,KAAe,gBAAxB;AAAwC,KADrC,CAAP;AAEH,GAHO;AAnhBR;;AAEG;;;AACI,EAAA,MAAA,CAAA,SAAA,GAAY;AACf,IAAA,EAAE,EAAE,SAAS,CAAC,MADC;AAEf,IAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAFQ;AAGf,IAAA,MAAM,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAHO;AAIf,IAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAJS;AAKf,IAAA,GAAG,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CALU;AAMf,IAAA,YAAY,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CANC;AAOf,IAAA,aAAa,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAPA;AAQf,IAAA,WAAW,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CARE;AASf,IAAA,UAAU,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CATG;AAUf,IAAA,QAAQ,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAVK;AAWf,IAAA,SAAS,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAXI;AAYf,IAAA,SAAS,EAAE,SAAS,CAAC,IAZN;AAaf,IAAA,SAAS,EAAE,SAAS,CAAC,IAbN;AAcf,IAAA,KAAK,EAAE,SAAS,CAAC,GAdF;AAef,IAAA,kBAAkB,EAAE,SAAS,CAAC,IAff;AAgBf,IAAA,KAAK,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,YAAzB,CAAhB,CAhBQ;AAiBf,IAAA,SAAS,EAAE,SAAS,CAAC,MAjBN;AAkBf,IAAA,KAAK,EAAE,SAAS,CAAC;AAlBF,GAAZ;AAoBP;;AAEG;;AACI,EAAA,MAAA,CAAA,YAAA,GAAe;AAClB,IAAA,QAAQ,EAAE,iBADQ;AAElB,IAAA,SAAS,EAAE,kBAFO;AAGlB,IAAA,SAAS,EAAE,IAHO;AAIlB,IAAA,SAAS,EAAE,IAJO;AAKlB,IAAA,KAAK,EAAE,KALW;AAMlB,IAAA,sBAAsB,EAAE;AANN,GAAf;AA4gBX,SAAA,MAAA;AAAC,CAviBD,CAA4B,KAAK,CAAC,SAAlC,CAAA;;SAAa,M","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { WindowTitleBar } from './WindowTitlebar';\nimport { dispatchEvent, Keys, classNames } from '@progress/kendo-react-common';\nimport { Draggable } from '@progress/kendo-react-common';\nimport { ResizeHandlers } from './WindowResizeHandlers';\nimport { MiddleLayerOptimization } from './MiddleLayerOptimization';\nimport { windowStage } from './StageEnum';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { WindowActionsBar } from './WindowActionsBar';\nvar DEFAULT_WIDTH = 300;\nvar DEFAULT_HEIGHT = 300;\nvar DEFAULT_MIN_WIDTH = 120;\nvar DEFAULT_MIN_HEIGHT = 100;\nvar DEFAULT_STEP = 5;\nvar Window = /** @class */ (function (_super) {\n    __extends(Window, _super);\n    function Window(props) {\n        var _this = _super.call(this, props) || this;\n        _this.offSetCoordinates = { x: 0, y: 0 };\n        /**\n         * @hidden\n         */\n        _this.onPress = function (data) {\n            var e = data.event;\n            _this.windowCoordinatesState.differenceLeft = e.pageX - _this.left;\n            _this.windowCoordinatesState.differenceTop = e.pageY - _this.top;\n        };\n        /**\n         * @hidden\n         */\n        _this.onDrag = function (data) {\n            var e = data.event;\n            e.originalEvent.preventDefault();\n            if (_this.windowStage !== windowStage.FULLSCREEN && _this.props.draggable) {\n                _this.setState({\n                    top: Math.max(e.pageY - _this.windowCoordinatesState.differenceTop, 0),\n                    left: e.pageX - _this.windowCoordinatesState.differenceLeft,\n                    isDragging: true\n                });\n                if (_this.props.onMove) {\n                    // eslint-disable-next-line max-len\n                    _this.dispatchMoveEvent(_this.props.onMove, e, true, false);\n                }\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRelease = function (data) {\n            var e = data.event;\n            if (_this.windowStage !== windowStage.FULLSCREEN && _this.props.draggable) {\n                if (_this.props.onMove) {\n                    _this.dispatchMoveEvent(_this.props.onMove, e, true, true);\n                }\n            }\n            _this.setState({\n                isDragging: false\n            });\n        };\n        // Keyboard navigation\n        _this.handleKeyDown = function (event) {\n            if (event.target !== event.currentTarget) {\n                return;\n            }\n            var minWidth = _this.props.minWidth || DEFAULT_MIN_WIDTH;\n            var minHeight = _this.props.minHeight || DEFAULT_MIN_HEIGHT;\n            if (event.ctrlKey && _this.props.resizable) {\n                switch (event.keyCode) {\n                    case Keys.up:\n                        event.preventDefault();\n                        if (minHeight <= (_this.height - DEFAULT_STEP)) {\n                            _this.setState({ height: _this.height - DEFAULT_STEP });\n                        }\n                        break;\n                    case Keys.down:\n                        event.preventDefault();\n                        _this.setState({ height: _this.height + DEFAULT_STEP });\n                        break;\n                    case Keys.left:\n                        if (minWidth <= (_this.width - DEFAULT_STEP)) {\n                            _this.setState({ width: _this.width - DEFAULT_STEP });\n                        }\n                        break;\n                    case Keys.right:\n                        _this.setState({ width: _this.width + DEFAULT_STEP });\n                        break;\n                    default: return;\n                }\n                _this.dispatchMoveEvent(_this.props.onResize, event, false, undefined);\n                return;\n            }\n            if (event.altKey) {\n                switch (event.keyCode) {\n                    case Keys.up:\n                        if (_this.windowStage === windowStage.MINIMIZED) {\n                            _this.handleRestore(event);\n                            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.DEFAULT });\n                        }\n                        else if (_this.windowStage === windowStage.DEFAULT) {\n                            _this.handleFullscreen(event);\n                            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.FULLSCREEN });\n                        }\n                        break;\n                    case Keys.down:\n                        if (_this.windowStage === windowStage.FULLSCREEN) {\n                            _this.handleRestore(event);\n                            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.DEFAULT });\n                        }\n                        else if (_this.windowStage === windowStage.DEFAULT) {\n                            _this.handleMinimize(event);\n                            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.MINIMIZED });\n                        }\n                        break;\n                    default:\n                }\n                return;\n            }\n            if (!event.ctrlKey) {\n                switch (event.keyCode) {\n                    case Keys.esc:\n                        if (_this.props.onClose) {\n                            _this.handleCloseWindow(event);\n                        }\n                        return;\n                    case Keys.up:\n                        _this.setState({ top: _this.state.top - DEFAULT_STEP });\n                        break;\n                    case Keys.down:\n                        _this.setState({ top: _this.state.top + DEFAULT_STEP });\n                        break;\n                    case Keys.left:\n                        _this.setState({ left: _this.state.left - DEFAULT_STEP });\n                        break;\n                    case Keys.right:\n                        _this.setState({ left: _this.state.left + DEFAULT_STEP });\n                        break;\n                    default: return;\n                }\n            }\n            _this.dispatchMoveEvent(_this.props.onMove, event, false, undefined);\n        };\n        // Get initial coordinates of the Window\n        _this.getInitialTop = function () {\n            if (_this.props.top !== undefined) {\n                return _this.props.top;\n            }\n            if (_this.props.initialTop !== undefined) {\n                return _this.props.initialTop;\n            }\n            var height = DEFAULT_HEIGHT;\n            if (_this.props.height !== undefined) {\n                height = _this.props.height;\n            }\n            else if (_this.props.initialHeight !== undefined) {\n                height = _this.props.initialHeight;\n            }\n            if (_this.props.appendTo) {\n                return (_this.props.appendTo.offsetHeight / 2) - (height / 2);\n            }\n            return (window.innerHeight / 2) - (height / 2);\n        };\n        _this.getInitialLeft = function () {\n            if (_this.props.left !== undefined) {\n                return _this.props.left;\n            }\n            if (_this.props.initialLeft !== undefined) {\n                return _this.props.initialLeft;\n            }\n            var width = DEFAULT_WIDTH;\n            if (_this.props.width !== undefined) {\n                width = _this.props.width;\n            }\n            else if (_this.props.initialWidth !== undefined) {\n                width = _this.props.initialWidth;\n            }\n            if (_this.props.appendTo) {\n                return (_this.props.appendTo.offsetWidth / 2) - (width / 2);\n            }\n            return (window.innerWidth / 2) - (width / 2);\n        };\n        _this.getInitialWidth = function () {\n            var width = DEFAULT_WIDTH;\n            if (_this.props.width !== undefined) {\n                width = _this.props.width;\n            }\n            else if (_this.props.initialWidth !== undefined) {\n                width = _this.props.initialWidth;\n            }\n            return width;\n        };\n        _this.getInitialHeight = function () {\n            var height = DEFAULT_HEIGHT;\n            if (_this.props.height !== undefined) {\n                height = _this.props.height;\n            }\n            else if (_this.props.initialHeight !== undefined) {\n                height = _this.props.initialHeight;\n            }\n            return height;\n        };\n        // Handle actions\n        _this.handleMinimize = function (event) {\n            event.preventDefault();\n            _this.windowCoordinatesState.leftBeforeAction = _this.left;\n            _this.windowCoordinatesState.topBeforeAction = _this.top;\n            _this.windowCoordinatesState.widthBeforeAction = _this.width;\n            _this.windowCoordinatesState.heightBeforeAction = _this.height;\n            _this.setState({\n                stage: windowStage.MINIMIZED,\n                height: 0\n            });\n            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.MINIMIZED });\n        };\n        _this.handleFullscreen = function (event) {\n            event.preventDefault();\n            _this.windowCoordinatesState.leftBeforeAction = _this.left;\n            _this.windowCoordinatesState.topBeforeAction = _this.top;\n            _this.windowCoordinatesState.widthBeforeAction = _this.width;\n            _this.windowCoordinatesState.heightBeforeAction = _this.height;\n            _this.setState({\n                left: 0,\n                top: 0,\n                width: _this.props.appendTo ? _this.props.appendTo.offsetWidth : window.innerWidth,\n                height: _this.props.appendTo ? _this.props.appendTo.offsetHeight : window.innerHeight,\n                stage: windowStage.FULLSCREEN\n            });\n            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.FULLSCREEN });\n        };\n        _this.handleRestore = function (event) {\n            event.preventDefault();\n            if (_this.windowStage === windowStage.FULLSCREEN) {\n                _this.setState({\n                    stage: windowStage.DEFAULT,\n                    left: _this.windowCoordinatesState.leftBeforeAction,\n                    top: _this.windowCoordinatesState.topBeforeAction,\n                    width: _this.windowCoordinatesState.widthBeforeAction,\n                    height: _this.windowCoordinatesState.heightBeforeAction\n                });\n            }\n            else if (_this.windowStage === windowStage.MINIMIZED) {\n                _this.setState({\n                    stage: windowStage.DEFAULT,\n                    height: _this.windowCoordinatesState.heightBeforeAction\n                });\n            }\n            dispatchEvent(_this.props.onStageChange, event, _this, { state: windowStage.DEFAULT });\n        };\n        _this.handleCloseWindow = function (event) {\n            event.preventDefault();\n            dispatchEvent(_this.props.onClose, event, _this, { state: undefined });\n        };\n        _this.handleDoubleClick = function (e) {\n            if (_this.windowStage === windowStage.FULLSCREEN || _this.windowStage === windowStage.MINIMIZED) {\n                _this.handleRestore(e);\n            }\n            else {\n                _this.handleFullscreen(e);\n            }\n        };\n        // Handle resizing\n        _this.handleResize = function (event, props) {\n            var x = _this.props.appendTo ? event.pageX - _this.offSetCoordinates.x : event.pageX;\n            var y = _this.props.appendTo ? event.pageY - _this.offSetCoordinates.y : event.pageY;\n            var currentWidth = _this.width;\n            var currentHeight = _this.height;\n            var minWidth = _this.props.minWidth || DEFAULT_MIN_WIDTH;\n            var minHeight = _this.props.minHeight || DEFAULT_MIN_HEIGHT;\n            var heightDifference = _this.top - y;\n            var widthDifference = _this.left - x;\n            var newWidth = x - _this.left;\n            var newHeight = y - _this.top;\n            var newState = Object.assign({}, _this.state, { isDragging: !props.end });\n            if (props.direction.indexOf('n') >= 0 && minHeight - (currentHeight + heightDifference) < 0) {\n                if (_this.top > 0) {\n                    newState.height = currentHeight + heightDifference;\n                }\n                newState.top = y;\n            }\n            if (props.direction.indexOf('s') >= 0 && (minHeight - newHeight < 0)) {\n                newState.height = newHeight;\n            }\n            if (props.direction.indexOf('w') >= 0 && minWidth - (currentWidth + widthDifference) < 0) {\n                if (_this.left > 0) {\n                    newState.width = currentWidth + widthDifference;\n                }\n                newState.left = x;\n            }\n            if (props.direction.indexOf('e') >= 0 && (minWidth - newWidth < 0)) {\n                newState.width = newWidth;\n            }\n            _this.setState(newState);\n            _this.dispatchMoveEvent(_this.props.onResize, event, true, props.end);\n        };\n        // Dispatcher for the resize and move events\n        _this.dispatchMoveEvent = function (callback, event, drag, end) {\n            if (!callback) {\n                return;\n            }\n            callback.call(undefined, {\n                nativeEvent: event.nativeEvent ? event.nativeEvent : event.originalEvent,\n                drag: drag,\n                end: end,\n                target: _this,\n                left: _this.state.left,\n                top: _this.state.top,\n                width: _this.state.width,\n                hight: _this.state.height,\n                height: _this.state.height\n            });\n        };\n        _this.handleBrowserWindowResize = function () {\n            if (_this.windowStage === windowStage.FULLSCREEN) {\n                _this.setState({\n                    width: _this.props.appendTo ? _this.props.appendTo.offsetWidth : window.innerWidth,\n                    height: _this.props.appendTo ? _this.props.appendTo.offsetHeight : window.innerHeight\n                });\n            }\n        };\n        _this.setZindex = function () {\n            if (_this.state.focused) {\n                var allWindows = document && document.querySelectorAll('.k-window');\n                var maxZindex_1 = 10002;\n                allWindows.forEach(function (KRwindow) {\n                    var computedStyle = window.getComputedStyle(KRwindow, null);\n                    var zIndexValue = parseInt(computedStyle.zIndex !== null ? computedStyle.zIndex : '10002', 10);\n                    zIndexValue > maxZindex_1 ? maxZindex_1 = zIndexValue : null;\n                });\n                return (maxZindex_1 + 1).toString();\n            }\n            return _this.windowElement.style.zIndex;\n        };\n        validatePackage(packageMetadata);\n        _this.state = {\n            stage: _this.props.stage || windowStage.DEFAULT,\n            isDragging: false,\n            top: _this.getInitialTop(),\n            left: _this.getInitialLeft(),\n            width: _this.getInitialWidth(),\n            height: _this.getInitialHeight(),\n            focused: true\n        };\n        _this.windowCoordinatesState = {\n            leftBeforeAction: _this.getInitialLeft(),\n            topBeforeAction: _this.getInitialTop(),\n            widthBeforeAction: _this.getInitialWidth(),\n            heightBeforeAction: _this.getInitialHeight()\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    Window.prototype.componentDidMount = function () {\n        if (window) {\n            window.addEventListener('resize', this.handleBrowserWindowResize);\n        }\n        if (this.props.appendTo) {\n            var containerCoordinates = this.props.appendTo.getBoundingClientRect();\n            var bodyRect = document.body.getBoundingClientRect();\n            this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;\n            this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Window.prototype.componentWillUnmount = function () {\n        if (window) {\n            window.removeEventListener('resize', this.handleBrowserWindowResize);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Window.prototype.componentDidUpdate = function () {\n        if (this.props.appendTo) {\n            var containerCoordinates = this.props.appendTo.getBoundingClientRect();\n            var bodyRect = document.body.getBoundingClientRect();\n            this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;\n            this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Window.prototype.render = function () {\n        var _this = this;\n        var elementsArray = React.Children.toArray(this.props.children);\n        var content = this.getContent(elementsArray);\n        var actions = this.getActionBar(elementsArray);\n        var classNamesWindow = classNames('k-widget', 'k-window', this.props.className, { 'k-window-minimized': this.state.stage === 'MINIMIZED' }, { 'k-window-focused': this.state.focused });\n        var windowElement = (React.createElement(React.Fragment, null,\n            this.props.modal && React.createElement(\"div\", { className: \"k-overlay\" }),\n            React.createElement(\"div\", { tabIndex: 0, onFocus: function () { return _this.setState({ focused: true }); }, onBlur: function () { return _this.setState({ focused: false }); }, onKeyDown: this.handleKeyDown, ref: (function (el) { return _this.windowElement = el; }), className: classNamesWindow, style: __assign({ top: this.top, left: this.left, width: this.width, height: this.height || '', zIndex: this.setZindex() }, this.props.style) },\n                React.createElement(MiddleLayerOptimization, { shouldUpdateOnDrag: this.props.shouldUpdateOnDrag || false, isDragging: this.state.isDragging },\n                    React.createElement(Draggable, { onPress: this.onPress, onDrag: this.onDrag, onRelease: this.onRelease, ref: function (component) { return _this.draggable = component; } },\n                        React.createElement(WindowTitleBar, { stage: this.windowStage, onDoubleClick: this.props.doubleClickStageChange ? this.handleDoubleClick : undefined, onMinimizeButtonClick: this.handleMinimize, onFullScreenButtonClick: this.handleFullscreen, onRestoreButtonClick: this.handleRestore, onCloseButtonClick: this.handleCloseWindow, closeButton: this.props.closeButton, minimizeButton: this.props.minimizeButton, maximizeButton: this.props.maximizeButton, restoreButton: this.props.restoreButton }, this.props.title)),\n                    this.windowStage !== windowStage.MINIMIZED\n                        ? (React.createElement(React.Fragment, null,\n                            React.createElement(\"div\", { className: \"k-window-content\" }, content),\n                            actions))\n                        : null,\n                    this.windowStage === windowStage.DEFAULT &&\n                        this.props.resizable\n                        ? React.createElement(ResizeHandlers, { onResize: this.handleResize })\n                        : null))));\n        if (this.props.appendTo) {\n            return ReactDOM.createPortal(windowElement, this.props.appendTo);\n        }\n        return windowElement;\n    };\n    Object.defineProperty(Window.prototype, \"top\", {\n        // Getters\n        get: function () {\n            if (this.windowStage !== windowStage.FULLSCREEN) {\n                return Math.max(this.props.top || this.state.top, 0);\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Window.prototype, \"left\", {\n        get: function () {\n            if (this.windowStage !== windowStage.FULLSCREEN) {\n                return Math.max(this.props.left || this.state.left, 0);\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Window.prototype, \"width\", {\n        get: function () {\n            var width = this.props.width || this.state.width;\n            if (this.windowStage === windowStage.FULLSCREEN) {\n                if (this.props.appendTo) {\n                    width = this.props.appendTo.offsetWidth;\n                    return width;\n                }\n                width = window.innerWidth;\n            }\n            return width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Window.prototype, \"height\", {\n        get: function () {\n            var height = this.props.height || this.state.height;\n            if (this.windowStage === windowStage.FULLSCREEN) {\n                if (this.props.appendTo) {\n                    height = this.props.appendTo.offsetHeight;\n                    return height;\n                }\n                height = window.innerHeight;\n            }\n            else if (this.windowStage === windowStage.MINIMIZED) {\n                height = 0;\n            }\n            return height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Window.prototype, \"windowStage\", {\n        get: function () {\n            return this.props.stage || this.state.stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Window.prototype.getActionBar = function (children) {\n        return children.filter(function (child) { return child && child.type === WindowActionsBar; });\n    };\n    Window.prototype.getContent = function (children) {\n        return children.filter(function (child) {\n            return child && child.type !== WindowActionsBar;\n        });\n    };\n    /**\n     * @hidden\n     */\n    Window.propTypes = {\n        id: PropTypes.string,\n        width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        initialwidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        initialHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        initialLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        initialTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        minWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        resizable: PropTypes.bool,\n        draggable: PropTypes.bool,\n        title: PropTypes.any,\n        shouldUpdateOnDrag: PropTypes.bool,\n        stage: PropTypes.oneOf(['DEFAULT', 'MINIMIZED', 'FULLSCREEN']),\n        className: PropTypes.string,\n        style: PropTypes.object\n    };\n    /**\n     * @hidden\n     */\n    Window.defaultProps = {\n        minWidth: DEFAULT_MIN_WIDTH,\n        minHeight: DEFAULT_MIN_HEIGHT,\n        resizable: true,\n        draggable: true,\n        modal: false,\n        doubleClickStageChange: true\n    };\n    return Window;\n}(React.Component));\nexport { Window };\n//# sourceMappingURL=Window.js.map"]},"metadata":{},"sourceType":"module"}