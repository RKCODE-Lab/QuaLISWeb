{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import Axios from'axios';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{sortData,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{chartType,designComponents}from'../components/Enumeration';export function fetchRecordDashBoardType(fetchRecordParam){return function(dispatch){var chartTypeURL=rsapi.post(\"dashboardtypes/getChartTypes\",{\"userinfo\":fetchRecordParam.userInfo});var selectedRecord={};var urlArray=[];var selectedId=null;if(fetchRecordParam.operation===\"update\"){var dashBoardType=rsapi.post(\"dashboardtypes/getDashBoardTypeByID\",{\"userinfo\":fetchRecordParam.userInfo,\"ndashboardtypecode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode)});var sqlQuery=rsapi.post(\"dashboardtypes/getSqlQueriesByChart\",{\"userinfo\":fetchRecordParam.userInfo,\"ncharttypecode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode)});var chartProps=rsapi.post(\"dashboardtypes/getChartProperty\",{\"userinfo\":fetchRecordParam.userInfo,\"ncharttypecode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode)});// const sqlCols = rsapi.post(\"dashboardtypes/getColumnsBasedOnQuery\", { \"userinfo\": fetchRecordParam.userInfo, \"nsqlquerycode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.nquerycode) });\nvar chartPropTransaction=rsapi.post(\"dashboardtypes/getChartPropTransaction\",{\"userinfo\":fetchRecordParam.userInfo,\"ncharttypecode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode),\"ndashboardtypecode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode),\"nsqlquerycode\":parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.nsqlquerycode)});urlArray=[chartTypeURL,sqlQuery,dashBoardType,chartProps,chartPropTransaction];selectedId=fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode;}else{urlArray=[chartTypeURL];}dispatch(initRequest(true));Axios.all(urlArray).then(Axios.spread(function(){for(var _len=arguments.length,response=new Array(_len),_key=0;_key<_len;_key++){response[_key]=arguments[_key];}var xValue=[];var yValue=[];var xSeriesColumns=[];var ySeriesColumns=[];var sqlQueryList=[];var xSeriesColumnList=[];var ySeriesColumnList=[];var sizeField=[];var yFieldBubble=[];var categoryField=[];var chartTypeMap=constructOptionList(response[0].data||[],\"ncharttypecode\",\"schartname\",undefined,undefined,true);var chartTypeList=chartTypeMap.get(\"OptionList\");if(fetchRecordParam.operation===\"update\"){var sqlQueryMap=constructOptionList(response[1].data||[],\"nsqlquerycode\",\"ssqlqueryname\",undefined,undefined,true);sqlQueryList=sqlQueryMap.get(\"OptionList\");var xSeriesColumnMap=constructOptionList(response[4].data.Columns.xSeriesColumns||[],\"Value\",\"ColumnName\",undefined,undefined,true);xSeriesColumnList=xSeriesColumnMap.get(\"OptionList\");var ySeriesColumnMap=constructOptionList(response[4].data.Columns.ySeriesColumns||[],\"Value\",\"ColumnName\",undefined,undefined,true);ySeriesColumnList=ySeriesColumnMap.get(\"OptionList\");selectedRecord=response[2].data;selectedRecord[\"ncharttypecode\"]={label:response[2].data[\"schartname\"],value:response[2].data[\"ncharttypecode\"]};selectedRecord[\"nsqlquerycode\"]={label:response[2].data[\"ssqlqueryname\"],value:response[2].data[\"nsqlquerycode\"]};// let index = 0;\nif(response[2].data[\"ncharttypecode\"].value===chartType.PIECHART||response[2].data[\"ncharttypecode\"].value===chartType.DONUT){selectedRecord[\"field\"]={label:response[4].data.pieCategoryColumn,value:response[4].data.pieCategoryColumnComboVal,item:{Value:response[4].data.pieCategoryColumnComboVal,ColumnName:response[4].data.pieCategoryColumn,Color:\"\"}};selectedRecord[\"nameField\"]={label:response[4].data.pieValueColumn,value:response[4].data.pieValueColumnComboVal,item:{Value:response[4].data.pieValueColumnComboVal,ColumnName:response[4].data.pieValueColumn,Color:\"\"}};}else{if(response[2].data[\"ncharttypecode\"].value===chartType.BUBBLE){selectedRecord[\"xFieldBubble\"]={label:response[4].data.xFieldBubble[0][\"schartpropvalue\"],value:response[4].data.xFieldBubble[0][\"schartpropvalue\"],item:{Value:response[4].data.xFieldBubble[0][\"schartpropvalue\"],ColumnName:response[4].data.xFieldBubble[0][\"schartpropvalue\"],Color:\"\"}};response[4].data.colorField.map(function(item){return sizeField.push({label:item.ColumnName,value:item.ColumnName,item:{Value:item.ColumnName,ColumnName:item.ColumnName,Color:item.Color}});});response[4].data.yFieldBubble.map(function(item){return yFieldBubble.push({label:item.schartpropvalue,value:item.schartpropvalue,item:{Value:item.schartpropvalue,ColumnName:item.schartpropvalue,Color:\"\"}});});response[4].data.categoryField.map(function(item){return categoryField.push({label:item.schartpropvalue,value:item.schartpropvalue,item:{Value:item.schartpropvalue,ColumnName:item.schartpropvalue,Color:\"\"}});});selectedRecord[\"sizeField\"]=sizeField;selectedRecord[\"yFieldBubble\"]=yFieldBubble;selectedRecord[\"categoryField\"]=categoryField;}else{// selectedRecord[\"xColumnName\"] = {\n//     label: response[4].data.xField[0][\"schartpropvalue\"],\n//     value: response[4].data.xField[0][\"schartpropvalue\"],\n//     item: {\n//         Value: response[4].data.xField[0][\"schartpropvalue\"],\n//         ColumnName: response[4].data.xField[0][\"schartpropvalue\"],\n//         Color: \"\"\n//     }\n// }\nresponse[4].data.Columns.xSeriesColumns&&response[4].data.Columns.xSeriesColumns.map(function(field){if(field.Value===response[4].data.xField[0][\"schartpropvalue\"]){selectedRecord[\"xColumnName\"]={label:field.ColumnName,value:response[4].data.xField[0][\"schartpropvalue\"],item:{Value:response[4].data.xField[0][\"schartpropvalue\"],ColumnName:field.ColumnName,Color:\"\"}};}});response[4].data.Colors.map(function(item){return yValue.push({label:item.ColumnName,value:item.ColumnName,item:{Value:item.ColumnName,ColumnName:item.ColumnName,Color:item.Color}});});selectedRecord[\"yColumnName\"]=yValue;}}}dispatch({type:DEFAULT_RETURN,payload:{chartType:chartTypeList,sqlQuery:fetchRecordParam.operation===\"update\"?sqlQueryList:[],selectedRecord:selectedRecord,operation:fetchRecordParam.operation,screenName:\"IDS_DASHBOARDTYPES\",openModal:true,ncontrolCode:fetchRecordParam.ncontrolCode,loading:false,selectedId:selectedId,ChartProperty:fetchRecordParam.operation===\"update\"?response[3].data:[],SqlColumns:fetchRecordParam.operation===\"update\"?{xSeriesColumns:xSeriesColumnList,ySeriesColumns:ySeriesColumnList}:[],xValue:xValue,yValue:yValue,Colors:fetchRecordParam.operation===\"update\"?response[4].data.Colors:[],xSeriesColumns:xSeriesColumns,ySeriesColumns:ySeriesColumns,xSeriesColumnList:xSeriesColumnList,ySeriesColumnList:ySeriesColumnList}});})).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function selectCheckBoxDashBoardTypes(DashBoardTypes,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(//\"/dashboardtypes/getAllSelectionDashBoardTypes\"\n\"/dashboardtypes/getDashBoardTypes\",{'userinfo':userInfo,\"ndashboardtypecode\":DashBoardTypes.ndashboardtypecode}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,screenName:\"IDS_DESIGNPARAMETERS\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSqlQueryDataService(nchartTypeCode,selectedRecord,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"dashboardtypes/getSqlQueriesByChart\",{\"userinfo\":userInfo,\"ncharttypecode\":parseInt(nchartTypeCode)}).then(function(response){var sqlQueryMap=constructOptionList(response.data||[],\"nsqlquerycode\",\"ssqlqueryname\",undefined,undefined,true);var sqlQueryList=sqlQueryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{sqlQuery:sqlQueryList,ChartProperty:[],selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSqlQueryColumns(nSqlQueryCode,nChartTypeCode,userInfo,selectedRecord){return function(dispatch){// let selectedRecord = {};\nvar chartProps=rsapi.post(\"dashboardtypes/getChartProperty\",{\"userinfo\":userInfo,\"ncharttypecode\":parseInt(nChartTypeCode)});var sqlCols=rsapi.post(\"dashboardtypes/getColumnsBasedOnQuery\",{\"userinfo\":userInfo,\"nsqlquerycode\":parseInt(nSqlQueryCode)});var urlArray=[chartProps,sqlCols];dispatch(initRequest(true));Axios.all(urlArray).then(Axios.spread(function(){var Value=[];selectedRecord=_objectSpread({},selectedRecord);if(nChartTypeCode!==chartType.PIECHART){selectedRecord[\"yColumnName\"]=undefined;selectedRecord[\"xColumnName\"]=undefined;}else{selectedRecord[\"field\"]=undefined;selectedRecord[\"nameField\"]=undefined;}for(var _len2=arguments.length,response=new Array(_len2),_key2=0;_key2<_len2;_key2++){response[_key2]=arguments[_key2];}var xSeriesColumnMap=constructOptionList(response[1].data.xSeriesColumns||[],\"Value\",\"ColumnName\",undefined,undefined,true);var xSeriesColumnList=xSeriesColumnMap.get(\"OptionList\");var ySeriesColumnMap=constructOptionList(response[1].data.ySeriesColumns||[],\"Value\",\"ColumnName\",undefined,undefined,true);var ySeriesColumnList=ySeriesColumnMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{ChartProperty:response[0].data,SqlColumns:{xSeriesColumns:xSeriesColumnList,ySeriesColumns:ySeriesColumnList},Value:Value,loading:false,// operation: \"create\",\nselectedRecord:selectedRecord,xSeriesColumns:[],ySeriesColumns:[],xSeriesColumnList:xSeriesColumnList,ySeriesColumnList:ySeriesColumnList}});})).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getAddDashboardDesign(selectedDashBoardTypes,userInfo){return function(dispatch){var urlArray=[];var selectedId=null;var designDashBoard=rsapi.post(\"dashboardtypes/getDashBoardDesign\",{\"userinfo\":userInfo,\"ndashBoardTypeCode\":parseInt(selectedDashBoardTypes.ndashboardtypecode),\"nSqlQueryCode\":parseInt(selectedDashBoardTypes.nsqlquerycode)});urlArray=[designDashBoard];dispatch(initRequest(true));Axios.all(urlArray).then(Axios.spread(function(){for(var _len3=arguments.length,response=new Array(_len3),_key3=0;_key3<_len3;_key3++){response[_key3]=arguments[_key3];}if(response[0].data.sqlQueryForParams.length>0){var parameterMap=constructOptionList(response[0].data.sqlQueryForParams||[],\"sqlQueryParams\",\"sqlQueryParams\",undefined,undefined,true);var reportParameterList=parameterMap.get(\"OptionList\");var designComponentMap=constructOptionList(response[0].data.designComponents||[],\"ndesigncomponentcode\",\"sdesigncomponentname\",undefined,undefined,true);var designComponentList=designComponentMap.get(\"OptionList\");var sqlQueryMap=constructOptionList(response[0].data.sqlQueryForExistingLinkTable||[],\"nsqlquerycode\",\"ssqlqueryname\",undefined,undefined,true);var sqlQueryList=sqlQueryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{operation:\"create\",screenName:\"IDS_DESIGNPARAMETERS\",openChildModal:true,// ncontrolCode: fetchRecordParam.ncontrolCode,\nloading:false,selectedId:selectedId,sqlQueryForParams:reportParameterList,sqlQueryForExistingLinkTable:sqlQueryList,designComponents:designComponentList}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.warn(intl.formatMessage({id:\"IDS_NOPARAMETERSTOMAPDASHBOARD\"}));}})).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getDashboardView(userInfo){return function(dispatch){var urlArray=[];var selectedId=null;var dashBoardView=rsapi.post(\"dashboardtypes/getDashBoardView\",{\"userinfo\":userInfo,\"ndashBoardTypeCode\":0});urlArray=[dashBoardView];dispatch(initRequest(true));Axios.all(urlArray).then(Axios.spread(function(){for(var _len4=arguments.length,response=new Array(_len4),_key4=0;_key4<_len4;_key4++){response[_key4]=arguments[_key4];}dispatch({type:DEFAULT_RETURN,payload:{operation:\"create\",screenName:\"IDS_DASHBOARDVIEW\",openChildModal:true,// ncontrolCode: fetchRecordParam.ncontrolCode,\nloading:false,selectedId:selectedId,sqlQueryForParams:response[0].data.sqlQueryForParams,sqlQueryForExistingLinkTable:response[0].data.sqlQueryForExistingLinkTable,designComponents:response[0].data.designComponents}});})).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function selectCheckBoxDashBoardView(screenName,selectedRecord,masterData,viewDashBoardParam,dashBoardTemplateNo,templateCode,homeDashBoard,currentPageNo){return function(dispatch){var homeDashBoardType={};dispatch(initRequest(true));rsapi.post(\"/dashboardview/getChartParameters\",_objectSpread({},viewDashBoardParam)).then(function(response){var selectedRecordRealValue=selectedRecord;masterData=_objectSpread(_objectSpread({},masterData),response.data);var respObject={};if(screenName===\"HomeDashBoard\"){if(dashBoardTemplateNo===\"dashBoardType1\"){homeDashBoardType={\"dashBoardType1\":_objectSpread({},response.data),\"ntemplatecode\":templateCode};}else if(dashBoardTemplateNo===\"dashBoardType2\"){homeDashBoardType={\"dashBoardType2\":_objectSpread({},response.data),\"ntemplatecode\":templateCode};}else if(dashBoardTemplateNo===\"dashBoardType3\"){homeDashBoardType={\"dashBoardType3\":_objectSpread({},response.data),\"ntemplatecode\":templateCode};}else if(dashBoardTemplateNo===\"dashBoardType4\"){homeDashBoardType={\"dashBoardType4\":_objectSpread({},response.data),\"ntemplatecode\":templateCode};}if(homeDashBoard&&homeDashBoard!==undefined){homeDashBoard[currentPageNo]=_objectSpread(_objectSpread({},homeDashBoard[currentPageNo]),homeDashBoardType);}respObject={homeDashBoard:homeDashBoard};}if(response.data.chartData.length===0){toast.info(intl.formatMessage({id:\"IDS_NODATAAVAILABLE\"}));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({selectedRecordRealValue:selectedRecordRealValue,masterData:masterData,loading:false,openModal:false,openModalForHomeDashBoard:false},respObject)});}).catch(function(error){// dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false } })\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,openNodal:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getAllSelectionDashBoardView(dashBoardTypes,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dashboardview/getAllSelectionDashBoardView\",{'userinfo':userInfo,\"ndashboardtypecode\":dashBoardTypes.ndashboardtypecode}).then(function(response){dispatch(selectedDashBoardView(response,masterData,userInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function selectedDashBoardView(response,masterData,userInfo){return function(dispatch){var openModalNew=false;var selectedRecord={};var inputFieldData={};if(response.data.viewDashBoardDesignConfigList!==undefined&&response.data.viewDashBoardDesignConfigList.length>0){openModalNew=true;response.data.viewDashBoardDesignConfigList.map(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){var _objectSpread2;selectedRecord[item.sfieldname]=rearrangeDateFormat(userInfo,item.dataList[0]);inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread2={},_defineProperty(_objectSpread2,item.sfieldname,rearrangeDateFormat(userInfo,item.dataList[0])),_defineProperty(_objectSpread2,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread2,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread2));}else if(item.ndesigncomponentcode===designComponents.COMBOBOX){var comboMap=constructOptionList(item.dataList||[],item.svaluemember,item.sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");item.dataList=comboList;var getList=comboList.filter(function(lst){return lst.value===parseInt(item.sdefaultvalue);});if(getList.length>0){var _objectSpread3;selectedRecord[item.sfieldname]={label:getList[0].label,value:getList[0].value};inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread3={},_defineProperty(_objectSpread3,item.sfieldname,getList[0].value),_defineProperty(_objectSpread3,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread3,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread3));}else{selectedRecord[item.sfieldname]=undefined;}}else if(item.ndesigncomponentcode===designComponents.USERINFO){var _objectSpread4;selectedRecord[item.sfieldname]=userInfo&&userInfo[item.sfieldname]||\"\";inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread4={},_defineProperty(_objectSpread4,item.sfieldname,userInfo&&userInfo[item.sfieldname]||\"\"),_defineProperty(_objectSpread4,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread4,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread4));}else{selectedRecord[item.sfieldname]=item.sdefaultvalue;}return null;});}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{// comboParamData: response.data.comboParamData,\n// selectedDashBoardTypes: dashBoardTypes,\nviewDashBoardDesignConfigList:response.data.viewDashBoardDesignConfigList,xSeries:openModalNew===true?[]:response.data.xSeries,ySeries:openModalNew===true?[]:response.data.ySeries,pieChart:openModalNew===true?[]:response.data.pieChart});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,openModal:openModalNew,selectedRecord:selectedRecord,inputFieldData:inputFieldData}});};}export function checkParametersAvailableForHomeDashBoard(DashBoardTypes,userInfo,masterData,dashBoardTemplateNo,templateCode){return function(dispatch){var openModalNew=false;var openChildModalNew=false;var selectedRecord={};var inputFieldData={};dispatch(initRequest(true));// console.log(\"checkParametersAvailableForHomeDashBoard action:\", DashBoardTypes, masterData);\nrsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\",{'userinfo':userInfo,\"ndashboardtypecode\":DashBoardTypes.ndashboardtypecode}).then(function(response){//console.log(\"res in checkParametersAvailableForHomeDashBoard:\", response);\nif(response.data.viewDashBoardDesignConfigList!==undefined&&response.data.viewDashBoardDesignConfigList.length>0){openChildModalNew=true;response.data.viewDashBoardDesignConfigList.map(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){var _objectSpread5;selectedRecord[item.sfieldname]=rearrangeDateFormat(userInfo,item.dataList[0]);inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread5={},_defineProperty(_objectSpread5,item.sfieldname,rearrangeDateFormat(userInfo,item.dataList[0])),_defineProperty(_objectSpread5,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread5,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread5));}else if(item.ndesigncomponentcode===designComponents.COMBOBOX){var comboMap=constructOptionList(item.dataList||[],item.svaluemember,item.sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");item.dataList=comboList;var getList=comboList.filter(function(lst){return lst.value===parseInt(item.sdefaultvalue);});if(getList.length>0){var _objectSpread6;selectedRecord[item.sfieldname]={label:getList[0].label,value:getList[0].value};inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread6={},_defineProperty(_objectSpread6,item.sfieldname,getList[0].value),_defineProperty(_objectSpread6,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread6,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread6));}else{selectedRecord[item.sfieldname]=undefined;}}else if(item.ndesigncomponentcode===designComponents.USERINFO){var _objectSpread7;selectedRecord[item.sfieldname]=userInfo&&userInfo[item.sfieldname]||\"\";inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread7={},_defineProperty(_objectSpread7,item.sfieldname,userInfo&&userInfo[item.sfieldname]||\"\"),_defineProperty(_objectSpread7,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread7,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread7));}else{var _objectSpread8;selectedRecord[item.sfieldname]=item.sdefaultvalue;inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread8={},_defineProperty(_objectSpread8,item.sfieldname,item.sdefaultvalue),_defineProperty(_objectSpread8,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread8,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread8));}return null;});}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{comboParamData:response.data.comboParamData,selectedDashBoardTypes:DashBoardTypes,viewDashBoardDesignConfigList:response.data.viewDashBoardDesignConfigList,xSeries:openModalNew===true?[]:response.data.xSeries,ySeries:openModalNew===true?[]:response.data.ySeries,pieChart:openModalNew===true?[]:response.data.pieChart});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,selectedRecord:selectedRecord,inputFieldData:inputFieldData,dashBoardTemplateNo:dashBoardTemplateNo,templateCode:templateCode,openModalForHomeDashBoard:openChildModalNew}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function checkParametersAvailable(DashBoardTypes,userInfo,masterData,dashBoardTemplateNo,templateCode){return function(dispatch){var openModalNew=false;var selectedRecord={};var inputFieldData={};dispatch(initRequest(true));rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\",{'userinfo':userInfo,\"ndashboardtypecode\":DashBoardTypes.ndashboardtypecode}).then(function(response){if(response.data.viewDashBoardDesignConfigList!==undefined&&response.data.viewDashBoardDesignConfigList.length>0){openModalNew=true;response.data.viewDashBoardDesignConfigList.map(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){var _objectSpread9;selectedRecord[item.sfieldname]=rearrangeDateFormat(userInfo,item.dataList[0]);inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread9={},_defineProperty(_objectSpread9,item.sfieldname,rearrangeDateFormat(userInfo,item.dataList[0])),_defineProperty(_objectSpread9,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread9,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread9));}else if(item.ndesigncomponentcode===designComponents.COMBOBOX){var comboMap=constructOptionList(item.dataList||[],item.svaluemember,item.sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");item.dataList=comboList;var getList=comboList.filter(function(lst){return lst.value===parseInt(item.sdefaultvalue);});if(getList.length>0){var _objectSpread10;selectedRecord[item.sfieldname]={label:getList[0].label,value:getList[0].value};inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread10={},_defineProperty(_objectSpread10,item.sfieldname,getList[0].value),_defineProperty(_objectSpread10,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread10,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread10));}else{selectedRecord[item.sfieldname]=undefined;}}else if(item.ndesigncomponentcode===designComponents.USERINFO){var _objectSpread11;selectedRecord[item.sfieldname]=userInfo&&userInfo[item.sfieldname]||\"\";inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread11={},_defineProperty(_objectSpread11,item.sfieldname,userInfo&&userInfo[item.sfieldname]||\"\"),_defineProperty(_objectSpread11,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread11,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread11));}else{var _objectSpread12;selectedRecord[item.sfieldname]=item.sdefaultvalue;inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread12={},_defineProperty(_objectSpread12,item.sfieldname,item.sdefaultvalue),_defineProperty(_objectSpread12,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread12,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread12));}return null;});}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{comboParamData:response.data.comboParamData,selectedDashBoardTypes:DashBoardTypes,viewDashBoardDesignConfigList:response.data.viewDashBoardDesignConfigList,xSeries:openModalNew===true?[]:response.data.xSeries,ySeries:openModalNew===true?[]:response.data.ySeries,pieChart:openModalNew===true?[]:response.data.pieChart});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,openModal:openModalNew,selectedRecord:selectedRecord,inputFieldData:inputFieldData,dashBoardTemplateNo:dashBoardTemplateNo,templateCode:templateCode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function checkParametersAvailableForDefaultValue(DashBoardTypes,userInfo,masterData,operation,screenName){return function(dispatch){var openModalNew=false;var openChildModalNew=false;var selectedRecord={};var inputFieldData={};dispatch(initRequest(true));rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\",{'userinfo':userInfo,\"ndashboardtypecode\":DashBoardTypes.ndashboardtypecode}).then(function(response){var viewList=response.data.viewDashBoardDesignConfigList;if(viewList!==undefined&&viewList.length>0){openChildModalNew=true;viewList.map(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){var _objectSpread13;selectedRecord[item.sfieldname]=rearrangeDateFormat(userInfo,item.dataList[0]);inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread13={},_defineProperty(_objectSpread13,item.sfieldname,rearrangeDateFormat(userInfo,item.dataList[0])),_defineProperty(_objectSpread13,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread13,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread13));}else if(item.ndesigncomponentcode===designComponents.COMBOBOX){var comboMap=constructOptionList(item.dataList||[],item.svaluemember,item.sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");item.dataList=comboList;var getList=comboList.filter(function(lst){return lst.value===parseInt(item.sdefaultvalue);});if(getList.length>0){var _objectSpread14;selectedRecord[item.sfieldname]={label:getList[0].label,value:getList[0].value};inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread14={},_defineProperty(_objectSpread14,item.sfieldname,getList[0].value),_defineProperty(_objectSpread14,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread14,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread14));}else{selectedRecord[item.sfieldname]=undefined;}}else{var _objectSpread15;selectedRecord[item.sfieldname]=item.sdefaultvalue;inputFieldData=_objectSpread(_objectSpread({},inputFieldData),{},(_objectSpread15={},_defineProperty(_objectSpread15,item.sfieldname,item.sdefaultvalue),_defineProperty(_objectSpread15,item.sfieldname.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread15,item.sfieldname.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread15));}return null;});}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{comboParamData:response.data.comboParamData,selectedDashBoardTypes:DashBoardTypes,viewDashBoardDesignConfigList:viewList,xSeries:openModalNew===true?[]:response.data.xSeries,ySeries:openModalNew===true?[]:response.data.ySeries,pieChart:openModalNew===true?[]:response.data.pieChart});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,openChildModal:openChildModalNew,selectedRecord:selectedRecord,inputFieldData:inputFieldData,operation:operation,screenName:screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function showDefaultValueInDataGrid(DashBoardTypes, userInfo, masterData) {\n//     return function (dispatch) {\n//         let dashBoardDefaultValue = [];\n//         dispatch(initRequest(true));\n//         rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\n//             .then(response => {\n//                 if (response.data.viewDashBoardDesignConfigList !== undefined && response.data.viewDashBoardDesignConfigList.length > 0) {\n//                     response.data.viewDashBoardDesignConfigList.map(item => {\n//                         if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n//                             // selectedRecord[item.sfieldname] = new Date(item.dataList[0])\n//                         }\n//                         else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n//                             const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\n//                                 item.sdisplaymember, undefined, undefined, true);\n//                             let index = -1;\n//                             const comboList = comboMap.get(\"OptionList\");\n//                             item.dataList = comboList;\n//                             index = comboList.findIndex(lst => (\n//                                 lst.value === item.sdefaultvalue && item.sdefaultvalue === \"\" ? -1 :\n//                                     parseInt(item.sdefaultvalue))\n//                             )\n//                             if (index !== -1) {\n//                                 dashBoardDefaultValue.push({ ndashboarddesigncode: item.ndashboarddesigncode, sdisplayname: item.sdisplayname, sdefaultvalue: comboList[index].label });\n//                             }\n//                         }\n//                         else {\n//                             dashBoardDefaultValue.push({ ndashboarddesigncode: item.ndashboarddesigncode, sdisplayname: item.sdisplayname, sdefaultvalue: item.sdefaultvalue });\n//                         }\n//                         return null;\n//                     })\n//                 }\n//                 masterData = {\n//                     ...masterData,\n//                     dashBoardDefaultValue: dashBoardDefaultValue\n//                 };\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         masterData, loading: false\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//             })\n//     }\n// }\nexport function getDashBoardParameterMappingComboService(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"dashboardtypes/getDashBoardParameterMappingComboData\",{ndashboardtypecode:parseInt(inputParam.dashBoardTypes.ndashboardtypecode),userinfo:inputParam.userInfo}).then(function(response){if(response.data[\"ChildComponentList\"].length>0){var parentComponentMap=constructOptionList(response.data[\"ParentComponenList\"]||[],\"ndashboarddesigncode\",\"sdisplayname\",undefined,undefined,true);var parentComponentList=parentComponentMap.get(\"OptionList\");var childComponentMap=constructOptionList(response.data[\"ChildComponentList\"]||[],\"ndashboarddesigncode\",\"sdisplayname\",undefined,undefined,true);var childComponentList=childComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{parentComponentList:parentComponentList,//response.data[\"ParentComponenList\"] || [],\nchildComponentList:childComponentList,//response.data[\"ChildComponentList\"] || [],\noperation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:{},openChildModal:true,ncontrolCode:inputParam.ncontrolCode,loading:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.warn(intl.formatMessage({id:\"IDS_NOPARAMETERSTOMAPDASHBOARD\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportViewChildDataListForDashBoard(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"dashboardview/getChildDataList\",_objectSpread({},inputParam[\"inputData\"])).then(function(response){var controlList=inputParam.viewDashBoardDesignConfigList;var selectedRecord=inputParam.selectedRecord;Object.keys(response.data).map(function(displayName){var index=controlList.findIndex(function(item){return displayName===item.sdisplayname;});var comboMap=constructOptionList(response.data[displayName]||[],controlList[index].svaluemember,controlList[index].sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");selectedRecord[controlList[index].svaluemember]=undefined;return controlList[index][\"dataList\"]=comboList;//response.data[displayName]\n});dispatch({type:DEFAULT_RETURN,payload:{viewDashBoardDesignConfigList:controlList,loading:false,inputFieldData:inputParam.inputData.inputfielddata,selectedRecord:selectedRecord}});}).catch(function(error){// console.log(\"error:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getDashBoardHomePagesandTemplates(inputParam){return function(dispatch){var urlArray=[];var selectedRecord={};var selectedId=null;var userRole=rsapi.post(\"userrole/getUserRole\",{\"userinfo\":inputParam.userInfo});var homeDashBoard=rsapi.post(\"dashboardhomeconfig/getDashBoardHomePagesandTemplates\",{\"userinfo\":inputParam.userInfo});if(inputParam.operation===\"update\"){var homeDashBoardById=rsapi.post(\"dashboardhomeconfig/getDashBoardHomeConfigByID\",{\"userinfo\":inputParam.userInfo,\"ndashboardhomeprioritycode\":inputParam.editRow.ndashboardhomeprioritycode});urlArray=[homeDashBoard,userRole,homeDashBoardById];selectedId=inputParam.primaryKeyValue;}else{urlArray=[homeDashBoard,userRole];}dispatch(initRequest(true));Axios.all(urlArray).then(Axios.spread(function(){for(var _len5=arguments.length,response=new Array(_len5),_key5=0;_key5<_len5;_key5++){response[_key5]=arguments[_key5];}var userRoleMap=constructOptionList(response[1].data||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,true);var userRoleList=userRoleMap.get(\"OptionList\");var parameterMap=constructOptionList(response[0].data.dashBoardHomePages||[],\"ndashboardhomepagecode\",\"sdashboardhomepagename\",undefined,undefined,true);var reportParameterList=parameterMap.get(\"OptionList\");if(inputParam.operation===\"update\"){selectedRecord=response[2].data.DashBoardHomeConfigByID;selectedRecord[\"nuserrolecode\"]={label:response[2].data.DashBoardHomeConfigByID[\"suserrolename\"],value:response[2].data.DashBoardHomeConfigByID[\"nuserrolecode\"]};selectedRecord[\"ndashboardhomepagecode\"]={label:response[2].data.DashBoardHomeConfigByID[\"sdashboardhomepagename\"],value:response[2].data.DashBoardHomeConfigByID[\"ndashboardhomepagecode\"]};response[2].data.DashBoardTypeNames.map(function(item){return selectedRecord[\"dashboardtype\"+item.nsorter]={sdashboardtypename:item.sdashboardtypename,ndashboardtypecode:item.ndashboardtypecode};});}dispatch({type:DEFAULT_RETURN,payload:{operation:inputParam.operation,screenName:\"IDS_DASHBOARDHOMECONFIG\",openModal:true,loading:false,selectedId:selectedId,dashBoardHomePages:reportParameterList,dashBoardHomeTemplate:response[0].data.dashBoardHomeTemplate,dashBoardType:response[0].data.dashBoardType,userRoleList:userRoleList,selectedRecord:inputParam.operation===\"update\"?selectedRecord:undefined,ncontrolCode:inputParam.ncontrolCode}});})).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getHomeDashBoard(userInfo,pageCode,pageAction,respObject){return function(dispatch){// dispatch(initRequest(true));\nrsapi.post(\"/dashboardview/getHomeDashBoard\",{'userinfo':userInfo,\"ndashboardhomepageCode\":pageCode,\"pageAction\":pageAction}).then(function(response){//console.log(\"home dash:\", response);\nvar currentPageNo=0;if(response.data[\"homeDashBoard\"].length>0){currentPageNo=parseInt(Object.keys(response.data[\"homeDashBoard\"])[0]);}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{currentPageNo:currentPageNo},respObject)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function updateDashBoarddesignDefaultValue(inputData,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dashboardtypes/updateDashBoardDesignConfig\",_objectSpread({},inputData)//{ 'userinfo': inputData.userinfo, \"dashboarddesignconfig\": inputData.dashboarddesignconfig }\n).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),response.data),openChildModal:false,loading:false}});// dispatch(showDefaultValueInDataGrid(masterData.selectedDashBoardTypes,inputData.userinfo, masterData));\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/DashBoardTypeAction.js"],"names":["rsapi","DEFAULT_RETURN","Axios","toast","initRequest","intl","sortData","constructOptionList","rearrangeDateFormat","chartType","designComponents","fetchRecordDashBoardType","fetchRecordParam","dispatch","chartTypeURL","post","userInfo","selectedRecord","urlArray","selectedId","operation","dashBoardType","parseInt","masterData","selectedDashBoardTypes","ndashboardtypecode","sqlQuery","ncharttypecode","chartProps","chartPropTransaction","nsqlquerycode","all","then","spread","response","xValue","yValue","xSeriesColumns","ySeriesColumns","sqlQueryList","xSeriesColumnList","ySeriesColumnList","sizeField","yFieldBubble","categoryField","chartTypeMap","data","undefined","chartTypeList","get","sqlQueryMap","xSeriesColumnMap","Columns","ySeriesColumnMap","label","value","PIECHART","DONUT","pieCategoryColumn","pieCategoryColumnComboVal","item","Value","ColumnName","Color","pieValueColumn","pieValueColumnComboVal","BUBBLE","xFieldBubble","colorField","map","push","schartpropvalue","field","xField","Colors","type","payload","screenName","openModal","ncontrolCode","loading","ChartProperty","SqlColumns","catch","error","status","formatMessage","id","message","warn","selectCheckBoxDashBoardTypes","DashBoardTypes","getSqlQueryDataService","nchartTypeCode","getSqlQueryColumns","nSqlQueryCode","nChartTypeCode","sqlCols","getAddDashboardDesign","designDashBoard","sqlQueryForParams","length","parameterMap","reportParameterList","designComponentMap","designComponentList","sqlQueryForExistingLinkTable","openChildModal","getDashboardView","dashBoardView","selectCheckBoxDashBoardView","viewDashBoardParam","dashBoardTemplateNo","templateCode","homeDashBoard","currentPageNo","homeDashBoardType","selectedRecordRealValue","respObject","chartData","info","openModalForHomeDashBoard","openNodal","getAllSelectionDashBoardView","dashBoardTypes","selectedDashBoardView","openModalNew","inputFieldData","viewDashBoardDesignConfigList","ndesigncomponentcode","DATEPICKER","sfieldname","dataList","concat","sdesigncomponentname","COMBOBOX","comboMap","svaluemember","sdisplaymember","comboList","getList","filter","lst","sdefaultvalue","USERINFO","xSeries","ySeries","pieChart","checkParametersAvailableForHomeDashBoard","openChildModalNew","comboParamData","checkParametersAvailable","checkParametersAvailableForDefaultValue","viewList","getDashBoardParameterMappingComboService","inputParam","userinfo","parentComponentMap","parentComponentList","childComponentMap","childComponentList","getReportViewChildDataListForDashBoard","controlList","Object","keys","displayName","index","findIndex","sdisplayname","inputData","inputfielddata","getDashBoardHomePagesandTemplates","userRole","homeDashBoardById","editRow","ndashboardhomeprioritycode","primaryKeyValue","userRoleMap","userRoleList","dashBoardHomePages","DashBoardHomeConfigByID","DashBoardTypeNames","nsorter","sdashboardtypename","dashBoardHomeTemplate","getHomeDashBoard","pageCode","pageAction","updateDashBoarddesignDefaultValue"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { chartType, designComponents } from '../components/Enumeration';\r\n\r\n\r\nexport function fetchRecordDashBoardType(fetchRecordParam) {\r\n    return function (dispatch) {\r\n\r\n        const chartTypeURL = rsapi.post(\"dashboardtypes/getChartTypes\", { \"userinfo\": fetchRecordParam.userInfo });\r\n        let selectedRecord = {};\r\n        let urlArray = [];\r\n        let selectedId = null;\r\n        if (fetchRecordParam.operation === \"update\") {\r\n\r\n            const dashBoardType = rsapi.post(\"dashboardtypes/getDashBoardTypeByID\", { \"userinfo\": fetchRecordParam.userInfo, \"ndashboardtypecode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode) });\r\n            const sqlQuery = rsapi.post(\"dashboardtypes/getSqlQueriesByChart\", { \"userinfo\": fetchRecordParam.userInfo, \"ncharttypecode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode) });\r\n            const chartProps = rsapi.post(\"dashboardtypes/getChartProperty\", { \"userinfo\": fetchRecordParam.userInfo, \"ncharttypecode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode) });\r\n            // const sqlCols = rsapi.post(\"dashboardtypes/getColumnsBasedOnQuery\", { \"userinfo\": fetchRecordParam.userInfo, \"nsqlquerycode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.nquerycode) });\r\n            const chartPropTransaction = rsapi.post(\"dashboardtypes/getChartPropTransaction\", {\r\n                \"userinfo\": fetchRecordParam.userInfo, \"ncharttypecode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ncharttypecode),\r\n                \"ndashboardtypecode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode),\r\n                \"nsqlquerycode\": parseInt(fetchRecordParam.masterData.selectedDashBoardTypes.nsqlquerycode)\r\n            });\r\n\r\n            urlArray = [chartTypeURL, sqlQuery, dashBoardType, chartProps, chartPropTransaction];\r\n            selectedId = fetchRecordParam.masterData.selectedDashBoardTypes.ndashboardtypecode;\r\n        }\r\n        else {\r\n\r\n            urlArray = [chartTypeURL];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n\r\n\r\n                let xValue = [];\r\n                let yValue = [];\r\n                let xSeriesColumns = [];\r\n                let ySeriesColumns = [];\r\n                let sqlQueryList = [];\r\n                let xSeriesColumnList = [];\r\n                let ySeriesColumnList = [];\r\n                let sizeField = [];\r\n                let yFieldBubble = [];\r\n                let categoryField = [];\r\n\r\n                const chartTypeMap = constructOptionList(response[0].data || [], \"ncharttypecode\",\r\n                    \"schartname\", undefined, undefined, true);\r\n\r\n                const chartTypeList = chartTypeMap.get(\"OptionList\");\r\n\r\n                if (fetchRecordParam.operation === \"update\") {\r\n\r\n                    const sqlQueryMap = constructOptionList(response[1].data || [], \"nsqlquerycode\",\r\n                        \"ssqlqueryname\", undefined, undefined, true);\r\n\r\n                    sqlQueryList = sqlQueryMap.get(\"OptionList\");\r\n\r\n                    const xSeriesColumnMap = constructOptionList(response[4].data.Columns.xSeriesColumns || [], \"Value\",\r\n                        \"ColumnName\", undefined, undefined, true);\r\n                    xSeriesColumnList = xSeriesColumnMap.get(\"OptionList\");\r\n\r\n                    const ySeriesColumnMap = constructOptionList(response[4].data.Columns.ySeriesColumns || [], \"Value\",\r\n                        \"ColumnName\", undefined, undefined, true);\r\n                    ySeriesColumnList = ySeriesColumnMap.get(\"OptionList\");\r\n\r\n                    selectedRecord = response[2].data;\r\n\r\n                    selectedRecord[\"ncharttypecode\"] = {\r\n                        label: response[2].data[\"schartname\"],\r\n                        value: response[2].data[\"ncharttypecode\"]\r\n                    };\r\n                    selectedRecord[\"nsqlquerycode\"] = {\r\n                        label: response[2].data[\"ssqlqueryname\"],\r\n                        value: response[2].data[\"nsqlquerycode\"]\r\n                    };\r\n                    // let index = 0;\r\n                    if (response[2].data[\"ncharttypecode\"].value === chartType.PIECHART ||\r\n                        response[2].data[\"ncharttypecode\"].value === chartType.DONUT) {\r\n\r\n                        selectedRecord[\"field\"] = {\r\n                            label: response[4].data.pieCategoryColumn,\r\n                            value: response[4].data.pieCategoryColumnComboVal,\r\n                            item: {\r\n                                Value: response[4].data.pieCategoryColumnComboVal,\r\n                                ColumnName: response[4].data.pieCategoryColumn,\r\n                                Color: \"\"\r\n                            }\r\n                        }\r\n\r\n                        selectedRecord[\"nameField\"] = {\r\n                            label: response[4].data.pieValueColumn,\r\n                            value: response[4].data.pieValueColumnComboVal,\r\n                            item: {\r\n                                Value: response[4].data.pieValueColumnComboVal,\r\n                                ColumnName: response[4].data.pieValueColumn,\r\n                                Color: \"\"\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        if (response[2].data[\"ncharttypecode\"].value === chartType.BUBBLE) {\r\n                            selectedRecord[\"xFieldBubble\"] = {\r\n                                label: response[4].data.xFieldBubble[0][\"schartpropvalue\"],\r\n                                value: response[4].data.xFieldBubble[0][\"schartpropvalue\"],\r\n                                item: {\r\n                                    Value: response[4].data.xFieldBubble[0][\"schartpropvalue\"],\r\n                                    ColumnName: response[4].data.xFieldBubble[0][\"schartpropvalue\"],\r\n                                    Color: \"\"\r\n                                }\r\n                            }\r\n                            response[4].data.colorField.map((item) =>\r\n                                sizeField.push({\r\n                                    label: item.ColumnName,\r\n                                    value: item.ColumnName,\r\n                                    item: {\r\n                                        Value: item.ColumnName,\r\n                                        ColumnName: item.ColumnName,\r\n                                        Color: item.Color\r\n                                    }\r\n                                })\r\n                            );\r\n                            response[4].data.yFieldBubble.map((item) =>\r\n                                yFieldBubble.push({\r\n                                    label: item.schartpropvalue,\r\n                                    value: item.schartpropvalue,\r\n                                    item: {\r\n                                        Value: item.schartpropvalue,\r\n                                        ColumnName: item.schartpropvalue,\r\n                                        Color: \"\"\r\n                                    }\r\n                                })\r\n                            );\r\n                            response[4].data.categoryField.map((item) =>\r\n                                categoryField.push({\r\n                                    label: item.schartpropvalue,\r\n                                    value: item.schartpropvalue,\r\n                                    item: {\r\n                                        Value: item.schartpropvalue,\r\n                                        ColumnName: item.schartpropvalue,\r\n                                        Color: \"\"\r\n                                    }\r\n                                })\r\n                            );\r\n                            selectedRecord[\"sizeField\"] = sizeField;\r\n                            selectedRecord[\"yFieldBubble\"] = yFieldBubble;\r\n                            selectedRecord[\"categoryField\"] = categoryField;\r\n\r\n                        } else {\r\n                            // selectedRecord[\"xColumnName\"] = {\r\n                            //     label: response[4].data.xField[0][\"schartpropvalue\"],\r\n                            //     value: response[4].data.xField[0][\"schartpropvalue\"],\r\n                            //     item: {\r\n                            //         Value: response[4].data.xField[0][\"schartpropvalue\"],\r\n                            //         ColumnName: response[4].data.xField[0][\"schartpropvalue\"],\r\n                            //         Color: \"\"\r\n                            //     }\r\n\r\n                            // }\r\n                            response[4].data.Columns.xSeriesColumns && response[4].data.Columns.xSeriesColumns.map(field => {\r\n                                if (field.Value === response[4].data.xField[0][\"schartpropvalue\"]) {\r\n                                    selectedRecord[\"xColumnName\"] = {\r\n                                        label: field.ColumnName,\r\n                                        value: response[4].data.xField[0][\"schartpropvalue\"],\r\n                                        item: {\r\n                                            Value: response[4].data.xField[0][\"schartpropvalue\"],\r\n                                            ColumnName: field.ColumnName,\r\n                                            Color: \"\"\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            })\r\n                            response[4].data.Colors.map((item) =>\r\n                                yValue.push({\r\n                                    label: item.ColumnName,\r\n                                    value: item.ColumnName,\r\n                                    item: {\r\n                                        Value: item.ColumnName,\r\n                                        ColumnName: item.ColumnName,\r\n                                        Color: item.Color\r\n                                    }\r\n                                })\r\n                            )\r\n                            selectedRecord[\"yColumnName\"] = yValue;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        chartType: chartTypeList,\r\n                        sqlQuery: fetchRecordParam.operation === \"update\" ? sqlQueryList : [],\r\n                        selectedRecord: selectedRecord,\r\n                        operation: fetchRecordParam.operation,\r\n                        screenName: \"IDS_DASHBOARDTYPES\",\r\n\r\n                        openModal: true, ncontrolCode: fetchRecordParam.ncontrolCode,\r\n                        loading: false, selectedId,\r\n                        ChartProperty: fetchRecordParam.operation === \"update\" ? response[3].data : [],\r\n                        SqlColumns: fetchRecordParam.operation === \"update\" ? { xSeriesColumns: xSeriesColumnList, ySeriesColumns: ySeriesColumnList } : [],\r\n                        xValue: xValue, yValue: yValue,\r\n                        Colors: fetchRecordParam.operation === \"update\" ? response[4].data.Colors : [],\r\n                        xSeriesColumns, ySeriesColumns, xSeriesColumnList, ySeriesColumnList\r\n                    }\r\n                });\r\n            }))\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function selectCheckBoxDashBoardTypes(DashBoardTypes, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(//\"/dashboardtypes/getAllSelectionDashBoardTypes\"\r\n            \"/dashboardtypes/getDashBoardTypes\"\r\n            , { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\r\n\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, screenName: \"IDS_DESIGNPARAMETERS\" } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSqlQueryDataService(nchartTypeCode, selectedRecord, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"dashboardtypes/getSqlQueriesByChart\", { \"userinfo\": userInfo, \"ncharttypecode\": parseInt(nchartTypeCode) })\r\n            .then(response => {\r\n\r\n                const sqlQueryMap = constructOptionList(response.data || [], \"nsqlquerycode\",\r\n                    \"ssqlqueryname\", undefined, undefined, true);\r\n\r\n                const sqlQueryList = sqlQueryMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        sqlQuery: sqlQueryList, ChartProperty: [], selectedRecord, loading: false\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSqlQueryColumns(nSqlQueryCode, nChartTypeCode, userInfo, selectedRecord) {\r\n    return function (dispatch) {\r\n\r\n        // let selectedRecord = {};\r\n\r\n        const chartProps = rsapi.post(\"dashboardtypes/getChartProperty\", { \"userinfo\": userInfo, \"ncharttypecode\": parseInt(nChartTypeCode) });\r\n        const sqlCols = rsapi.post(\"dashboardtypes/getColumnsBasedOnQuery\", { \"userinfo\": userInfo, \"nsqlquerycode\": parseInt(nSqlQueryCode) });\r\n\r\n        let urlArray = [chartProps, sqlCols];\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n\r\n                let Value = [];\r\n\r\n                selectedRecord = { ...selectedRecord }\r\n                if (nChartTypeCode !== chartType.PIECHART) {\r\n                    selectedRecord[\"yColumnName\"] = undefined;\r\n                    selectedRecord[\"xColumnName\"] = undefined;\r\n                }\r\n                else {\r\n                    selectedRecord[\"field\"] = undefined;\r\n                    selectedRecord[\"nameField\"] = undefined;\r\n                }\r\n\r\n                const xSeriesColumnMap = constructOptionList(response[1].data.xSeriesColumns || [], \"Value\",\r\n                    \"ColumnName\", undefined, undefined, true);\r\n                const xSeriesColumnList = xSeriesColumnMap.get(\"OptionList\");\r\n\r\n                const ySeriesColumnMap = constructOptionList(response[1].data.ySeriesColumns || [], \"Value\",\r\n                    \"ColumnName\", undefined, undefined, true);\r\n                const ySeriesColumnList = ySeriesColumnMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChartProperty: response[0].data, SqlColumns: { xSeriesColumns: xSeriesColumnList, ySeriesColumns: ySeriesColumnList },\r\n                        Value: Value, loading: false,\r\n                        // operation: \"create\",\r\n                        selectedRecord, xSeriesColumns: [], ySeriesColumns: [], xSeriesColumnList, ySeriesColumnList\r\n                    }\r\n                });\r\n\r\n            })).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAddDashboardDesign(selectedDashBoardTypes, userInfo) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        let selectedId = null;\r\n\r\n        const designDashBoard = rsapi.post(\"dashboardtypes/getDashBoardDesign\",\r\n            {\r\n                \"userinfo\": userInfo,\r\n                \"ndashBoardTypeCode\": parseInt(selectedDashBoardTypes.ndashboardtypecode),\r\n                \"nSqlQueryCode\": parseInt(selectedDashBoardTypes.nsqlquerycode)\r\n            });\r\n\r\n        urlArray = [designDashBoard];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n                if (response[0].data.sqlQueryForParams.length > 0) {\r\n\r\n                    const parameterMap = constructOptionList(response[0].data.sqlQueryForParams || [], \"sqlQueryParams\",\r\n                        \"sqlQueryParams\", undefined, undefined, true);\r\n\r\n                    const reportParameterList = parameterMap.get(\"OptionList\");\r\n\r\n                    const designComponentMap = constructOptionList(response[0].data.designComponents || [], \"ndesigncomponentcode\",\r\n                        \"sdesigncomponentname\", undefined, undefined, true);\r\n\r\n                    const designComponentList = designComponentMap.get(\"OptionList\");\r\n\r\n                    const sqlQueryMap = constructOptionList(response[0].data.sqlQueryForExistingLinkTable || [], \"nsqlquerycode\",\r\n                        \"ssqlqueryname\", undefined, undefined, true);\r\n\r\n                    const sqlQueryList = sqlQueryMap.get(\"OptionList\");\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n\r\n                            operation: \"create\",\r\n                            screenName: \"IDS_DESIGNPARAMETERS\",\r\n                            openChildModal: true,// ncontrolCode: fetchRecordParam.ncontrolCode,\r\n                            loading: false, selectedId,\r\n                            sqlQueryForParams: reportParameterList,\r\n                            sqlQueryForExistingLinkTable: sqlQueryList,\r\n                            designComponents: designComponentList,\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_NOPARAMETERSTOMAPDASHBOARD\" }))\r\n                }\r\n            }))\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getDashboardView(userInfo) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        let selectedId = null;\r\n\r\n        const dashBoardView = rsapi.post(\"dashboardtypes/getDashBoardView\", { \"userinfo\": userInfo, \"ndashBoardTypeCode\": 0 });\r\n\r\n        urlArray = [dashBoardView];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n\r\n                        operation: \"create\",\r\n                        screenName: \"IDS_DASHBOARDVIEW\",\r\n                        openChildModal: true,// ncontrolCode: fetchRecordParam.ncontrolCode,\r\n                        loading: false, selectedId,\r\n                        sqlQueryForParams: response[0].data.sqlQueryForParams,\r\n                        sqlQueryForExistingLinkTable: response[0].data.sqlQueryForExistingLinkTable,\r\n                        designComponents: response[0].data.designComponents,\r\n                    }\r\n                });\r\n            }))\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function selectCheckBoxDashBoardView(screenName, selectedRecord, masterData, viewDashBoardParam, dashBoardTemplateNo,\r\n    templateCode, homeDashBoard, currentPageNo) {\r\n    return function (dispatch) {\r\n        let homeDashBoardType = {};\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardview/getChartParameters\", { ...viewDashBoardParam })\r\n\r\n            .then(response => {\r\n\r\n                const selectedRecordRealValue = selectedRecord;\r\n                masterData = { ...masterData, ...response.data };\r\n\r\n                let respObject = {};\r\n                if (screenName === \"HomeDashBoard\") {\r\n                    if (dashBoardTemplateNo === \"dashBoardType1\") {\r\n                        homeDashBoardType = { \"dashBoardType1\": { ...response.data }, \"ntemplatecode\": templateCode };\r\n                    }\r\n                    else if (dashBoardTemplateNo === \"dashBoardType2\") {\r\n                        homeDashBoardType = { \"dashBoardType2\": { ...response.data }, \"ntemplatecode\": templateCode };\r\n                    }\r\n                    else if (dashBoardTemplateNo === \"dashBoardType3\") {\r\n                        homeDashBoardType = { \"dashBoardType3\": { ...response.data }, \"ntemplatecode\": templateCode };\r\n                    }\r\n                    else if (dashBoardTemplateNo === \"dashBoardType4\") {\r\n                        homeDashBoardType = { \"dashBoardType4\": { ...response.data }, \"ntemplatecode\": templateCode };\r\n                    }\r\n                    if (homeDashBoard && homeDashBoard !== undefined) {\r\n                        homeDashBoard[currentPageNo] = { ...homeDashBoard[currentPageNo], ...homeDashBoardType };\r\n\r\n                    }\r\n                    respObject = { homeDashBoard };\r\n                }\r\n\r\n                if (response.data.chartData.length === 0) {\r\n                    toast.info(intl.formatMessage({ id: \"IDS_NODATAAVAILABLE\" }));\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecordRealValue,\r\n                        masterData, loading: false,\r\n                        openModal: false,\r\n                        openModalForHomeDashBoard: false,\r\n                        ...respObject\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                // dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false } })\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openNodal: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAllSelectionDashBoardView(dashBoardTypes, userInfo, masterData) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardview/getAllSelectionDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": dashBoardTypes.ndashboardtypecode })\r\n\r\n            .then(response => {\r\n                dispatch(selectedDashBoardView(response, masterData, userInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function selectedDashBoardView(response, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        let openModalNew = false;\r\n        let selectedRecord = {};\r\n        let inputFieldData = {};\r\n\r\n        if (response.data.viewDashBoardDesignConfigList !== undefined && response.data.viewDashBoardDesignConfigList.length > 0) {\r\n            openModalNew = true;\r\n            response.data.viewDashBoardDesignConfigList.map(item => {\r\n\r\n                if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                    selectedRecord[item.sfieldname] = rearrangeDateFormat(userInfo, item.dataList[0]);\r\n                    inputFieldData = {\r\n                        ...inputFieldData,\r\n                        [item.sfieldname]: rearrangeDateFormat(userInfo, item.dataList[0]),\r\n                        [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                        [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                    };\r\n                }\r\n                else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n\r\n                    const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n                        item.sdisplaymember, undefined, undefined, true);\r\n\r\n                    const comboList = comboMap.get(\"OptionList\");\r\n                    item.dataList = comboList;\r\n\r\n                    let getList = comboList.filter(lst => {\r\n                        return lst.value === parseInt(item.sdefaultvalue);\r\n                    });\r\n\r\n                    if (getList.length > 0) {\r\n                        selectedRecord[item.sfieldname] = { label: getList[0].label, value: getList[0].value };\r\n\r\n                        inputFieldData = {\r\n                            ...inputFieldData,\r\n                            [item.sfieldname]: getList[0].value,\r\n                            [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                            [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                        };\r\n                    } else {\r\n                        selectedRecord[item.sfieldname] = undefined;\r\n                    }\r\n                }else if (item.ndesigncomponentcode === designComponents.USERINFO) {\r\n                    selectedRecord[item.sfieldname] = (userInfo && userInfo[item.sfieldname]) || \"\";\r\n                    inputFieldData = {\r\n                        ...inputFieldData,\r\n                        [item.sfieldname]: (userInfo && userInfo[item.sfieldname]) || \"\",\r\n                        [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                        [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                    };\r\n                }\r\n                else {\r\n                    selectedRecord[item.sfieldname] = item.sdefaultvalue;\r\n                }\r\n\r\n                return null;\r\n            })\r\n\r\n        }\r\n\r\n        masterData = {\r\n            ...masterData,\r\n            ...response.data,\r\n            // comboParamData: response.data.comboParamData,\r\n            // selectedDashBoardTypes: dashBoardTypes,\r\n            viewDashBoardDesignConfigList: response.data.viewDashBoardDesignConfigList,\r\n            xSeries: openModalNew === true ? [] : response.data.xSeries,\r\n            ySeries: openModalNew === true ? [] : response.data.ySeries,\r\n            pieChart: openModalNew === true ? [] : response.data.pieChart\r\n\r\n        };\r\n\r\n        dispatch({\r\n            type: DEFAULT_RETURN, payload: {\r\n                masterData, loading: false,\r\n                openModal: openModalNew, selectedRecord,\r\n                inputFieldData: inputFieldData\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function checkParametersAvailableForHomeDashBoard(DashBoardTypes, userInfo, masterData, dashBoardTemplateNo, templateCode) {\r\n    return function (dispatch) {\r\n        let openModalNew = false;\r\n        let openChildModalNew = false;\r\n        let selectedRecord = {};\r\n        let inputFieldData = {};\r\n        dispatch(initRequest(true));\r\n        // console.log(\"checkParametersAvailableForHomeDashBoard action:\", DashBoardTypes, masterData);\r\n        rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\r\n\r\n            .then(response => {\r\n                //console.log(\"res in checkParametersAvailableForHomeDashBoard:\", response);\r\n                if (response.data.viewDashBoardDesignConfigList !== undefined && response.data.viewDashBoardDesignConfigList.length > 0) {\r\n\r\n                    openChildModalNew = true;\r\n                    response.data.viewDashBoardDesignConfigList.map(item => {\r\n                        if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n\r\n                            selectedRecord[item.sfieldname] = rearrangeDateFormat(userInfo, item.dataList[0])\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: rearrangeDateFormat(userInfo, item.dataList[0]),\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n                        else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n                            const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n                                item.sdisplaymember, undefined, undefined, true);\r\n\r\n                            const comboList = comboMap.get(\"OptionList\");\r\n                            item.dataList = comboList;\r\n\r\n                            let getList = comboList.filter(lst => {\r\n                                return lst.value === parseInt(item.sdefaultvalue);\r\n                            });\r\n\r\n                            if (getList.length > 0) {\r\n                                selectedRecord[item.sfieldname] = { label: getList[0].label, value: getList[0].value };\r\n\r\n                                inputFieldData = {\r\n                                    ...inputFieldData,\r\n                                    [item.sfieldname]: getList[0].value,\r\n                                    [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                    [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                                };\r\n                            } else {\r\n                                selectedRecord[item.sfieldname] = undefined;\r\n                            }\r\n\r\n                        } else if (item.ndesigncomponentcode === designComponents.USERINFO) {\r\n                            selectedRecord[item.sfieldname] = (userInfo&& userInfo[item.sfieldname]) || \"\";\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: (userInfo && userInfo[item.sfieldname]) || \"\",\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[item.sfieldname] = item.sdefaultvalue;\r\n\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: item.sdefaultvalue,\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n\r\n                        return null;\r\n                    })\r\n\r\n                }\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    comboParamData: response.data.comboParamData,\r\n                    selectedDashBoardTypes: DashBoardTypes,\r\n                    viewDashBoardDesignConfigList: response.data.viewDashBoardDesignConfigList,\r\n                    xSeries: openModalNew === true ? [] : response.data.xSeries,\r\n                    ySeries: openModalNew === true ? [] : response.data.ySeries,\r\n                    pieChart: openModalNew === true ? [] : response.data.pieChart\r\n\r\n                };\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, selectedRecord, inputFieldData: inputFieldData, dashBoardTemplateNo, templateCode, openModalForHomeDashBoard: openChildModalNew } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function checkParametersAvailable(DashBoardTypes, userInfo, masterData, dashBoardTemplateNo, templateCode) {\r\n    return function (dispatch) {\r\n        let openModalNew = false;\r\n        let selectedRecord = {};\r\n        let inputFieldData = {};\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\r\n\r\n            .then(response => {\r\n\r\n                if (response.data.viewDashBoardDesignConfigList !== undefined && response.data.viewDashBoardDesignConfigList.length > 0) {\r\n                    openModalNew = true;\r\n\r\n                    response.data.viewDashBoardDesignConfigList.map(item => {\r\n\r\n                        if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                            selectedRecord[item.sfieldname] = rearrangeDateFormat(userInfo, item.dataList[0])\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: rearrangeDateFormat(userInfo, item.dataList[0]),\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n                        else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n                            const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n                                item.sdisplaymember, undefined, undefined, true);\r\n\r\n                            const comboList = comboMap.get(\"OptionList\");\r\n                            item.dataList = comboList;\r\n\r\n\r\n                            let getList = comboList.filter(lst => {\r\n                                return lst.value === parseInt(item.sdefaultvalue);\r\n                            });\r\n                            if (getList.length > 0) {\r\n                                selectedRecord[item.sfieldname] = { label: getList[0].label, value: getList[0].value };\r\n\r\n                                inputFieldData = {\r\n                                    ...inputFieldData,\r\n                                    [item.sfieldname]: getList[0].value,\r\n                                    [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                    [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                                };\r\n                            } else {\r\n                                selectedRecord[item.sfieldname] = undefined;\r\n                            }\r\n                        }else if (item.ndesigncomponentcode === designComponents.USERINFO) {\r\n                            selectedRecord[item.sfieldname] = (userInfo && userInfo[item.sfieldname]) || \"\";\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: (userInfo && userInfo[item.sfieldname]) || \"\",\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[item.sfieldname] = item.sdefaultvalue;\r\n\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: item.sdefaultvalue,\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n\r\n                        return null;\r\n                    })\r\n\r\n                }\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    comboParamData: response.data.comboParamData,\r\n                    selectedDashBoardTypes: DashBoardTypes,\r\n                    viewDashBoardDesignConfigList: response.data.viewDashBoardDesignConfigList,\r\n                    xSeries: openModalNew === true ? [] : response.data.xSeries,\r\n                    ySeries: openModalNew === true ? [] : response.data.ySeries,\r\n                    pieChart: openModalNew === true ? [] : response.data.pieChart\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false,\r\n                        openModal: openModalNew, selectedRecord, inputFieldData: inputFieldData,\r\n                        dashBoardTemplateNo, templateCode\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function checkParametersAvailableForDefaultValue(DashBoardTypes, userInfo, masterData, operation, screenName) {\r\n    return function (dispatch) {\r\n        let openModalNew = false;\r\n        let openChildModalNew = false;\r\n        let selectedRecord = {};\r\n        let inputFieldData = {};\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\r\n\r\n            .then(response => {\r\n                const viewList = response.data.viewDashBoardDesignConfigList;\r\n\r\n                if (viewList !== undefined && viewList.length > 0) {\r\n\r\n                    openChildModalNew = true;\r\n                    viewList.map(item => {\r\n\r\n                        if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                            selectedRecord[item.sfieldname] = rearrangeDateFormat(userInfo, item.dataList[0])\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: rearrangeDateFormat(userInfo, item.dataList[0]),\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n                        else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n                            const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n                                item.sdisplaymember, undefined, undefined, true);\r\n\r\n                            const comboList = comboMap.get(\"OptionList\");\r\n                            item.dataList = comboList;\r\n\r\n                            let getList = comboList.filter(lst => {\r\n                                return lst.value === parseInt(item.sdefaultvalue);\r\n                            });\r\n                            if (getList.length > 0) {\r\n                                selectedRecord[item.sfieldname] = { label: getList[0].label, value: getList[0].value };\r\n\r\n                                inputFieldData = {\r\n                                    ...inputFieldData,\r\n                                    [item.sfieldname]: getList[0].value,\r\n                                    [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                    [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                                };\r\n                            } else {\r\n                                selectedRecord[item.sfieldname] = undefined;\r\n                            }\r\n                        }\r\n                        else {\r\n                            selectedRecord[item.sfieldname] = item.sdefaultvalue;\r\n\r\n                            inputFieldData = {\r\n                                ...inputFieldData,\r\n                                [item.sfieldname]: item.sdefaultvalue,\r\n                                [item.sfieldname.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                                [item.sfieldname.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                            };\r\n                        }\r\n\r\n                        return null;\r\n                    })\r\n\r\n                }\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    comboParamData: response.data.comboParamData,\r\n                    selectedDashBoardTypes: DashBoardTypes,\r\n                    viewDashBoardDesignConfigList: viewList,\r\n                    xSeries: openModalNew === true ? [] : response.data.xSeries,\r\n                    ySeries: openModalNew === true ? [] : response.data.ySeries,\r\n                    pieChart: openModalNew === true ? [] : response.data.pieChart\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false,\r\n                        openChildModal: openChildModalNew, selectedRecord,\r\n                        inputFieldData: inputFieldData, operation, screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export function showDefaultValueInDataGrid(DashBoardTypes, userInfo, masterData) {\r\n//     return function (dispatch) {\r\n//         let dashBoardDefaultValue = [];\r\n//         dispatch(initRequest(true));\r\n//         rsapi.post(\"/dashboardview/checkParameteAvailableInDashBoardView\", { 'userinfo': userInfo, \"ndashboardtypecode\": DashBoardTypes.ndashboardtypecode })\r\n\r\n//             .then(response => {\r\n\r\n//                 if (response.data.viewDashBoardDesignConfigList !== undefined && response.data.viewDashBoardDesignConfigList.length > 0) {\r\n\r\n//                     response.data.viewDashBoardDesignConfigList.map(item => {\r\n\r\n//                         if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n//                             // selectedRecord[item.sfieldname] = new Date(item.dataList[0])\r\n//                         }\r\n//                         else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n//                             const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n//                                 item.sdisplaymember, undefined, undefined, true);\r\n\r\n//                             let index = -1;\r\n//                             const comboList = comboMap.get(\"OptionList\");\r\n//                             item.dataList = comboList;\r\n//                             index = comboList.findIndex(lst => (\r\n//                                 lst.value === item.sdefaultvalue && item.sdefaultvalue === \"\" ? -1 :\r\n//                                     parseInt(item.sdefaultvalue))\r\n//                             )\r\n//                             if (index !== -1) {\r\n//                                 dashBoardDefaultValue.push({ ndashboarddesigncode: item.ndashboarddesigncode, sdisplayname: item.sdisplayname, sdefaultvalue: comboList[index].label });\r\n//                             }\r\n//                         }\r\n//                         else {\r\n//                             dashBoardDefaultValue.push({ ndashboarddesigncode: item.ndashboarddesigncode, sdisplayname: item.sdisplayname, sdefaultvalue: item.sdefaultvalue });\r\n\r\n//                         }\r\n\r\n//                         return null;\r\n//                     })\r\n\r\n//                 }\r\n\r\n//                 masterData = {\r\n//                     ...masterData,\r\n//                     dashBoardDefaultValue: dashBoardDefaultValue\r\n\r\n//                 };\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         masterData, loading: false\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//             })\r\n//     }\r\n// }\r\n\r\n\r\nexport function getDashBoardParameterMappingComboService(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"dashboardtypes/getDashBoardParameterMappingComboData\", {\r\n            ndashboardtypecode: parseInt(inputParam.dashBoardTypes.ndashboardtypecode),\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n                if (response.data[\"ChildComponentList\"].length > 0) {\r\n\r\n                    const parentComponentMap = constructOptionList(response.data[\"ParentComponenList\"] || [], \"ndashboarddesigncode\",\r\n                        \"sdisplayname\", undefined, undefined, true);\r\n                    const parentComponentList = parentComponentMap.get(\"OptionList\");\r\n\r\n                    const childComponentMap = constructOptionList(response.data[\"ChildComponentList\"] || [], \"ndashboarddesigncode\",\r\n                        \"sdisplayname\", undefined, undefined, true);\r\n                    const childComponentList = childComponentMap.get(\"OptionList\");\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            parentComponentList: parentComponentList, //response.data[\"ParentComponenList\"] || [],\r\n                            childComponentList: childComponentList,//response.data[\"ChildComponentList\"] || [],\r\n                            operation: inputParam.operation,\r\n                            screenName: inputParam.screenName,\r\n                            selectedRecord: {},\r\n                            openChildModal: true,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_NOPARAMETERSTOMAPDASHBOARD\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function getReportViewChildDataListForDashBoard(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"dashboardview/getChildDataList\", { ...inputParam[\"inputData\"] })\r\n            .then(response => {\r\n\r\n                const controlList = inputParam.viewDashBoardDesignConfigList;\r\n                const selectedRecord = inputParam.selectedRecord;\r\n\r\n                Object.keys(response.data).map(displayName => {\r\n                    const index = controlList.findIndex(item => displayName === item.sdisplayname);\r\n\r\n                    const comboMap = constructOptionList(response.data[displayName] || [], controlList[index].svaluemember,\r\n                        controlList[index].sdisplaymember, undefined, undefined, true);\r\n\r\n                    const comboList = comboMap.get(\"OptionList\");\r\n\r\n                    selectedRecord[controlList[index].svaluemember] = undefined;\r\n\r\n                    return controlList[index][\"dataList\"] = comboList;//response.data[displayName]\r\n                })\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        viewDashBoardDesignConfigList: controlList,\r\n                        loading: false,\r\n                        inputFieldData: inputParam.inputData.inputfielddata,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"error:\", error);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getDashBoardHomePagesandTemplates(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        let selectedRecord = {};\r\n        let selectedId = null;\r\n\r\n        const userRole = rsapi.post(\"userrole/getUserRole\", { \"userinfo\": inputParam.userInfo });\r\n        const homeDashBoard = rsapi.post(\"dashboardhomeconfig/getDashBoardHomePagesandTemplates\", { \"userinfo\": inputParam.userInfo });\r\n        if (inputParam.operation === \"update\") {\r\n\r\n            const homeDashBoardById = rsapi.post(\"dashboardhomeconfig/getDashBoardHomeConfigByID\", { \"userinfo\": inputParam.userInfo, \"ndashboardhomeprioritycode\": inputParam.editRow.ndashboardhomeprioritycode });\r\n\r\n            urlArray = [homeDashBoard, userRole, homeDashBoardById];\r\n            selectedId = inputParam.primaryKeyValue;\r\n        }\r\n        else {\r\n            urlArray = [homeDashBoard, userRole];\r\n        }\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n\r\n                const userRoleMap = constructOptionList(response[1].data || [], \"nuserrolecode\",\r\n                    \"suserrolename\", undefined, undefined, true);\r\n\r\n                const userRoleList = userRoleMap.get(\"OptionList\");\r\n\r\n                const parameterMap = constructOptionList(response[0].data.dashBoardHomePages || [], \"ndashboardhomepagecode\",\r\n                    \"sdashboardhomepagename\", undefined, undefined, true);\r\n\r\n                const reportParameterList = parameterMap.get(\"OptionList\");\r\n\r\n                if (inputParam.operation === \"update\") {\r\n\r\n                    selectedRecord = response[2].data.DashBoardHomeConfigByID;\r\n\r\n                    selectedRecord[\"nuserrolecode\"] = {\r\n                        label: response[2].data.DashBoardHomeConfigByID[\"suserrolename\"],\r\n                        value: response[2].data.DashBoardHomeConfigByID[\"nuserrolecode\"]\r\n                    };\r\n                    selectedRecord[\"ndashboardhomepagecode\"] = {\r\n                        label: response[2].data.DashBoardHomeConfigByID[\"sdashboardhomepagename\"],\r\n                        value: response[2].data.DashBoardHomeConfigByID[\"ndashboardhomepagecode\"]\r\n                    };\r\n\r\n                    response[2].data.DashBoardTypeNames.map((item) =>\r\n                        selectedRecord[\"dashboardtype\" + item.nsorter] = { sdashboardtypename: item.sdashboardtypename, ndashboardtypecode: item.ndashboardtypecode }\r\n                    )\r\n\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n\r\n                        operation: inputParam.operation,\r\n                        screenName: \"IDS_DASHBOARDHOMECONFIG\",\r\n                        openModal: true,\r\n                        loading: false, selectedId,\r\n                        dashBoardHomePages: reportParameterList,\r\n                        dashBoardHomeTemplate: response[0].data.dashBoardHomeTemplate,\r\n                        dashBoardType: response[0].data.dashBoardType,\r\n                        userRoleList: userRoleList,\r\n                        selectedRecord: inputParam.operation === \"update\" ? selectedRecord : undefined,\r\n                        ncontrolCode: inputParam.ncontrolCode\r\n                    }\r\n                });\r\n            }))\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getHomeDashBoard(userInfo, pageCode, pageAction, respObject) {\r\n    return function (dispatch) {\r\n        // dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardview/getHomeDashBoard\", { 'userinfo': userInfo, \"ndashboardhomepageCode\": pageCode, \"pageAction\": pageAction })\r\n\r\n            .then(response => {\r\n                //console.log(\"home dash:\", response);\r\n                let currentPageNo = 0;\r\n                if (response.data[\"homeDashBoard\"].length > 0) {\r\n                    currentPageNo = parseInt(Object.keys(response.data[\"homeDashBoard\"])[0]);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { ...response.data, currentPageNo, ...respObject } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function updateDashBoarddesignDefaultValue(inputData, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dashboardtypes/updateDashBoardDesignConfig\", { ...inputData }\r\n            //{ 'userinfo': inputData.userinfo, \"dashboarddesignconfig\": inputData.dashboarddesignconfig }\r\n        )\r\n\r\n            .then(response => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: { ...masterData, ...response.data },\r\n                        openChildModal: false,\r\n                        loading: false\r\n                    }\r\n                });\r\n                // dispatch(showDefaultValueInDataGrid(masterData.selectedDashBoardTypes,inputData.userinfo, masterData));\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}