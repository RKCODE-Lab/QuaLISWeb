{"ast":null,"code":"import { intl } from '../../components/App';\nimport { convertDateTimetoStringDBFormat, formatInputDate, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\nimport { SampleType, orderType, transactionStatus } from '../../components/Enumeration';\nexport function fnCheckBatchComponentMandatory(Components) {\n  // Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].nnoofcontainer && Components[i].nnoofcontainer.length <= 0) {\n      // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERNOOFCONTFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n    }\n  }\n\n  return true;\n}\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\n  //Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\n      //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } //return null;\n    //});\n\n  }\n\n  return true;\n}\nexport function checkDuplicateComponentandManufLot(Components) {\n  let copiedArrays = [...Components];\n  let DuplicateComponent = [];\n  let bReturnFlag = true;\n  Components.map(component => {\n    copiedArrays.forEach(componentArray => {\n      component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno && component.scomponentname === componentArray.scomponentname && DuplicateComponent.push(component);\n    });\n    return null;\n  });\n\n  if (DuplicateComponent.length > 0) {\n    let smanuflotno = DuplicateComponent[0].smanuflotno;\n    let scomponentname = DuplicateComponent[0].scomponentname; // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\n\n    bReturnFlag = intl.formatMessage({\n      id: 'IDS_DUPLICATEMANFNO'\n    }) + \" \" + smanuflotno + \" \" + intl.formatMessage({\n      id: 'IDS_FOR'\n    }) + \" \" + scomponentname;\n  }\n\n  return bReturnFlag;\n}\nexport function TestListManipulation(Components, Test) {\n  //console.log(\"Test in component\");\n  let ArrayList = [];\n  Components.map(component => {\n    return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\n  }); //    ArrayList.map(item=>{\n  //        item['jsondata']={}\n  //       // if(item==='nsectioncode'||item==='nmethodcode'){\n  //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\n  //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\n  //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\n  //         item['jsondata']['ntestcode']=item['ntestcode']\n  //         item['jsondata']['ncost']=item['ncost']\n  //       // }\n  //    })\n\n  return ArrayList ? ArrayList : [];\n}\nexport function SubSample(Components, specBasedComponent, nneedsubsample, selectedSpec) {\n  //  let ArrayList = [];\n  if (nneedsubsample) {\n    if (specBasedComponent) {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"]; // }\n      });\n      return Components;\n    } else {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"] = -1; // }\n      });\n      return Components;\n    }\n  } else {\n    Components.map(component => {\n      // if(component===\"ncomponentcode\"){\n      component[\"ncomponentcode\"] = -1;\n      component[\"nspecsampletypecode\"] = selectedSpec.nallottedspeccode.item.nspecsampletypecode;\n      return component; // }\n    });\n    return Components;\n  }\n}\nexport function getRegistration(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode || -1;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode || -1;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue && masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode || -1;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypeversioncode || -1;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.STABILITY) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n    const protocolLabelName = comboComponents.filter(x => x.name === \"protocol id\");\n    sampleRegistration[\"nprotocolcode\"] = selectedRecord[protocolLabelName[0].label] && selectedRecord[protocolLabelName[0].label].value || -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n    sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n  } //console.log(\"save registration:\", selectedRecord);\n\n\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n              //  if(componentrow.recordbasedreadonly)\n              if (componentrow.inputtype === \"predefineddropdown\") {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label // pkey: componentrow.valuemember,\n                  // nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  // source: componentrow.source,\n                  // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\n                  // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\n                  // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :\n                  //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \n                  //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :  selectedRecord[componentrow.label].vale\n\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label,\n                  pkey: componentrow.valuemember,\n                  nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  source: componentrow.source,\n                  [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].value\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n\n\n              if (componentrow.name === 'manualorderid') {\n                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n                if (operation === 'update') {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                } else {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                }\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n            if (component.inputtype === \"predefineddropdown\") {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label // pkey: component.valuemember,\n                // nquerybuildertablecode: component.nquerybuildertablecode,\n                // source: component.source,\n                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\n                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\n                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :\n                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \n                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :  selectedRecord[component.label].vale\n\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label,\n                pkey: component.valuemember,\n                nquerybuildertablecode: component.nquerybuildertablecode,\n                source: component.source,\n                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            }\n\n            if (component.name === 'manualorderid') {\n              sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\n              sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n              if (operation === 'update') {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              } else {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\n                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spassportno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              }\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              console.log(typeof selectedRecord[component.label] === \"object\");\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsondata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsonuidata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsondata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function getStabilityStudyPlan(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode || -1;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode || -1;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.ndesigntemplatemappingcode && masterData.ndesigntemplatemappingcode || -1;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypeversioncode || -1;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.STABILITY) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n    const protocolLabelName = comboComponents.filter(x => x.name === \"protocol id\");\n    sampleRegistration[\"nprotocolcode\"] = selectedRecord[protocolLabelName[0].label] && selectedRecord[protocolLabelName[0].label].value || -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n    sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n  } //console.log(\"save registration:\", selectedRecord);\n\n\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n              //  if(componentrow.recordbasedreadonly)\n              if (componentrow.inputtype === \"predefineddropdown\") {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label // pkey: componentrow.valuemember,\n                  // nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  // source: componentrow.source,\n                  // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\n                  // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\n                  // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :\n                  //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \n                  //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :  selectedRecord[componentrow.label].vale\n\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label,\n                  pkey: componentrow.valuemember,\n                  nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  source: componentrow.source,\n                  [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].value\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n\n\n              if (componentrow.name === 'manualorderid') {\n                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n                if (operation === 'update') {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                } else {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                }\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n            if (component.inputtype === \"predefineddropdown\") {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label // pkey: component.valuemember,\n                // nquerybuildertablecode: component.nquerybuildertablecode,\n                // source: component.source,\n                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\n                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\n                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :\n                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \n                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :  selectedRecord[component.label].vale\n\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label,\n                pkey: component.valuemember,\n                nquerybuildertablecode: component.nquerybuildertablecode,\n                source: component.source,\n                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            }\n\n            if (component.name === 'manualorderid') {\n              sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\n              sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n              if (operation === 'update') {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              } else {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\n                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spassportno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              }\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              console.log(typeof selectedRecord[component.label] === \"object\");\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsondata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsonuidata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsondata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function getRegistrationScheduler(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue ? masterData.RealSampleTypeValue.nsampletypecode : 1;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue ? masterData.RealRegTypeValue.nregtypecode : 1;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypecode : 1;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue ? masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode : masterData.ndesigntemplatemappingcode;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypeversioncode : masterData.nregsubtypeversioncode ? masterData.nregsubtypeversioncode : -1;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample.ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample.nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (sampleRegistration[\"nsampletypecode\"] === 1) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 2) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 3) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              //  if(componentrow.recordbasedreadonly)\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n} // export function getComponentListfromUnwantedAttr(Components) {\n//     Components.map(component => {\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\n//         //     component.ncomponentcode = component.ncomponentcode.value;\n//         // }\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\n//         return component;\n//     });\n//     return Components;\n// }\n\nexport function getRegistrationSubSample(selectedRecord, templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\n  let sampleRegistration = {};\n  let dateList = []; // let dataGridList={}\n  // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\n  // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          //  let componentrowlabel = ''\n          // let componentrowvalue = ''\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n              if (componentrow.inputtype === \"predefineddropdown\") {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label // pkey: componentrow.valuemember,\n                  // nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  // source: componentrow.source,\n                  // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\n                  // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\n                  // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :\n                  //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:\n                  //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :  selectedRecord[componentrow.label].vale\n\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label,\n                  //   pkey: operation && operation==='update'?\n                  //         selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.pkey\n                  //         :selectedRecord[componentrow.label].pkey\n                  //         :selectedRecord[componentrow.label].item.pkey,\n                  pkey: componentrow.valuemember,\n                  nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  source: componentrow.source,\n                  [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].value // nquerybuildertablecode:operation&&operation==='update'?selectedRecord[componentrow.label].item ?selectedRecord[componentrow.label].item.nquerybuildertablecode :selectedRecord[componentrow.label].nquerybuildertablecode :selectedRecord[componentrow.label].item.nquerybuildertablecode,\n                  // source:operation&&operation==='update'?selectedRecord[componentrow.label].item?selectedRecord[componentrow.label].item.source: selectedRecord[componentrow.label].source:selectedRecord[componentrow.label].item.source\n\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } // if (componentrow.mandatory || selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\n              // }\n              // ALPD-3575\n\n\n              if (componentrow.name === \"sampleappearance\") {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\n                  'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\n                  'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label\n                };\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              } // ALPD-3575\n\n\n              if (componentrow.name === \"subsamplecollectiondatetime\") {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][componentrow.label]\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][componentrow.label],\n                  userInfo\n                };\n              }\n\n              if (componentrow.name === \"Occurrence Date\") {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'Occurrence Date': sampleRegistration[\"jsondata\"][componentrow.label]\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'Occurrence Date': sampleRegistration[\"jsonuidata\"][componentrow.label]\n                };\n              }\n\n              dateList.push(componentrow.label);\n            } else if (componentrow.inputtype === \"files\") {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              let tempData = {};\n\n              if (typeof selectedRecord[componentrow && componentrow.label] === \"object\") {\n                selectedRecord[componentrow && componentrow.label] && selectedRecord[componentrow && componentrow.label].forEach((item1, index) => {\n                  const fileName = create_UUID();\n                  const splittedFileName = item1.name.split('.');\n                  const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n                  const uniquefilename = fileName + '.' + fileExtension;\n                  tempData[componentrow && componentrow.label + '_susername_subSample'] = userInfo.susername;\n                  tempData[componentrow && componentrow.label + '_suserrolename_subSample'] = userInfo.suserrolename;\n                  tempData[componentrow && componentrow.label + '_nfilesize_subSample'] = item1.size;\n                  tempData[componentrow && componentrow.label + '_ssystemfilename_subSample'] = uniquefilename;\n                  tempData[componentrow && componentrow.label] = Lims_JSON_stringify(item1.name.trim(), false);\n                  sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                    ...tempData\n                  };\n                  sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                    ...tempData\n                  };\n                  sampleRegistration['uniquefilename'] = uniquefilename;\n                  sampleRegistration[selectedRecord[componentrow.label]] = selectedRecord[componentrow.label];\n                });\n              }\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n\n              if (componentrow.name === 'externalsampleid') {\n                //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label]\n                //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label]\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\n                  'nordertypecode': orderType.MANUAL,\n                  'sordertypename': \"Manual\"\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\n                  'nordertypecode': orderType.MANUAL,\n                  'sordertypename': \"Manual\"\n                };\n              } // if (selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\n              // }\n\n            }\n\n            return sampleRegistration;\n          }); //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n        } else {\n          if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n            if (component.inputtype === \"predefineddropdown\") {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label // pkey: component.valuemember,\n                // nquerybuildertablecode: component.nquerybuildertablecode,\n                // source: component.source,\n                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\n                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\n                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :\n                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:\n                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :  selectedRecord[component.label].vale\n\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label,\n                //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\n                //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\n                //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\n                pkey: component.valuemember,\n                nquerybuildertablecode: component.nquerybuildertablecode,\n                source: component.source,\n                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            } // ALPD-3575\n\n\n            if (component.name === \"sampleappearance\") {\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\n                'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\n                'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label\n              };\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            } // ALPD-3575\n\n\n            if (component.name === \"subsamplecollectiondatetime\") {\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][component.label]\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][component.label],\n                userInfo\n              };\n            }\n\n            if (component.name === \"Occurrence Date\") {\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'Occurrence Date': sampleRegistration[\"jsondata\"][component.label]\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'Occurrence Date': sampleRegistration[\"jsonuidata\"][component.label]\n              };\n            }\n\n            dateList.push(component.label);\n          } else if (component.inputtype === \"files\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            let tempData = {};\n\n            if (typeof selectedRecord[component && component.label] === \"object\") {\n              selectedRecord[component && component.label] && selectedRecord[component && component.label].forEach((item1, index) => {\n                const fileName = create_UUID();\n                const splittedFileName = item1.name.split('.');\n                const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n                const uniquefilename = fileName + '.' + fileExtension;\n                tempData[component && component.label + '_susername_subSample'] = userInfo.susername;\n                tempData[component && component.label + '_suserrolename_subSample'] = userInfo.suserrolename;\n                tempData[component && component.label + '_nfilesize_subSample'] = item1.size;\n                tempData[component && component.label + '_ssystemfilename_subSample'] = uniquefilename;\n                tempData[component && component.label] = Lims_JSON_stringify(item1.name.trim(), false);\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  ...tempData\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  ...tempData\n                };\n                sampleRegistration['uniquefilename'] = uniquefilename;\n                sampleRegistration[component.label] = selectedRecord[component.label];\n              });\n            }\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n\n            if (component.name === 'externalsampleid') {\n              //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\n              //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\n                'nordertypecode': orderType.MANUAL,\n                'sordertypename': \"Manual\"\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\n                'nordertypecode': orderType.MANUAL,\n                'sordertypename': \"Manual\"\n              };\n            }\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (preRegPopUp) {\n    sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\n\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n    }\n  } else {\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\n    }\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function checkTestPresent(Test, Samples) {\n  const filterArray = Samples.filter(function (x) {\n    return !Test.some(function (y) {\n      return x[\"npreregno\"] === y[\"npreregno\"] && y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED;\n    });\n  });\n  return filterArray.length > 0 ? false : true;\n} // //added by perumalraj on 23/12/2020\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n//     const filterArray = firstArray.filter(function (x) {\n//         return secondArray.some(function (y) {\n//             return x[PrimaryKey] === y[PrimaryKey]\n//         })\n//     });\n//     return filterArray;\n// }\n\nexport function getRegistrationRoutine(selectedRecord) {\n  let sampleRegistrationRoutine = {};\n  sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\n  sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\n  sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\n  sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\n  sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\n  sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\n  sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\n  sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\n  sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\n  sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\n  sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\n  sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\n  sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\n  sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\n  sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\n  sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\n  sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\n  sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\n  sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\n  sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\n  return sampleRegistrationRoutine;\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/registration/RegistrationValidation.jsx"],"names":["intl","convertDateTimetoStringDBFormat","formatInputDate","Lims_JSON_stringify","create_UUID","SampleType","orderType","transactionStatus","fnCheckBatchComponentMandatory","Components","i","length","smanuflotno","formatMessage","id","scomponentname","nnoofcontainer","dreceiveddate","fnCheckBatchProtocolComponentMandatory","checkDuplicateComponentandManufLot","copiedArrays","DuplicateComponent","bReturnFlag","map","component","forEach","componentArray","slno","push","TestListManipulation","Test","ArrayList","SubSample","specBasedComponent","nneedsubsample","selectedSpec","nallottedspeccode","item","nspecsampletypecode","getRegistration","masterData","selectedRecord","templateList","userInfo","defaulttimezone","operation","comboComponents","sampleRegistration","dateList","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","RealDesignTemplateMappingValue","ndesigntemplatemappingcode","nregsubtypeversioncode","selectedSample","ntemplatemanipulationcode","value","PRODUCT","findIndex","x","name","INSTRUMENT","MATERIAL","CLINICALTYPE","undefined","PROJECTSAMPLETYPE","STABILITY","protocolLabelName","filter","label","Order","jsondata","nexternalordertypecode","row","children","column","hasOwnProperty","componentrow","inputtype","pkey","valuemember","nquerybuildertablecode","source","table","mandatory","Date","loadcurrentdate","timezone","console","log","sexternalordertypename","param","getStabilityStudyPlan","getRegistrationScheduler","getRegistrationSubSample","preRegPopUp","tempData","item1","index","fileName","splittedFileName","split","fileExtension","uniquefilename","susername","suserrolename","size","trim","MANUAL","checkTestPresent","Samples","filterArray","some","y","REJECT","CANCELLED","getRegistrationRoutine","sampleRegistrationRoutine","nclientcode","nmanufcode","nsuppliercode","ssamplecondition","nstorageconditioncode","ntzdreceivedate","stzdreceivedate","ncontainertypecode","sourfile","sbatchno","slotno","ndisposition","stotalqty","ntotalunitcode","npriority","sdeadline","nperiodconfigcode","sremarks","sreportremarks","sdeviationcomments"],"mappings":"AACA,SAASA,IAAT,QAAqB,sBAArB;AACA,SAASC,+BAAT,EAA0CC,eAA1C,EAA2DC,mBAA3D,EAAgFC,WAAhF,QAAmG,+BAAnG;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,iBAAhC,QAAyD,8BAAzD;AACA,OAAO,SAASC,8BAAT,CAAwCC,UAAxC,EAAoD;AACvD;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,QACID,UAAU,CAACC,CAAD,CAAV,CAAcE,WADd,CAC2BD,MAD3B,IACqC,CADzC,EAC4C;AACxC;AACA,aAAQX,IAAI,CAACa,aAAL,CAAmB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAnB,IAAuDL,UAAU,CAACC,CAAD,CAAV,CAAcK,cAA7E;AAEH,KALD,MAKO,IAAIN,UAAU,CAACC,CAAD,CAAV,CAAcM,cAAd,IAAiCP,UAAU,CAACC,CAAD,CAAV,CAAcM,cAAf,CAA+BL,MAA/B,IAAyC,CAA7E,EAAgF;AACnF;AACA,aAAQX,IAAI,CAACa,aAAL,CAAmB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAnB,IAAqDL,UAAU,CAACC,CAAD,CAAV,CAAcK,cAA3E,CAFmF,CAGnF;AACH,KAJM,MAIA,IAAIN,UAAU,CAACC,CAAD,CAAV,CAAcO,aAAd,KAAgC,IAApC,EAA0C;AAC7C;AACA,aAAQjB,IAAI,CAACa,aAAL,CAAmB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAnB,IAAuDL,UAAU,CAACC,CAAD,CAAV,CAAcK,cAA7E,CAF6C,CAG7C;AACH;AACJ;;AACD,SAAO,IAAP;AACH;AACD,OAAO,SAASG,sCAAT,CAAgDT,UAAhD,EAA4D;AAC/D;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,QAAKD,UAAU,CAACC,CAAD,CAAV,CAAcE,WAAf,CAA4BD,MAA5B,IAAsC,CAA1C,EAA6C;AACzC;AACA;AACA,aAAQX,IAAI,CAACa,aAAL,CAAmB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAnB,IAAuDL,UAAU,CAACC,CAAD,CAAV,CAAcK,cAA7E;AACH,KAJD,MAIO,IAAIN,UAAU,CAACC,CAAD,CAAV,CAAcO,aAAd,KAAgC,IAApC,EAA0C;AAC7C;AACA,aAAQjB,IAAI,CAACa,aAAL,CAAmB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAnB,IAAuDL,UAAU,CAACC,CAAD,CAAV,CAAcK,cAA7E;AACH,KARuC,CASxC;AACA;;AACH;;AACD,SAAO,IAAP;AACH;AAED,OAAO,SAASI,kCAAT,CAA4CV,UAA5C,EAAwD;AAC3D,MAAIW,YAAY,GAAG,CAAC,GAAGX,UAAJ,CAAnB;AACA,MAAIY,kBAAkB,GAAG,EAAzB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACAb,EAAAA,UAAU,CAACc,GAAX,CAAeC,SAAS,IAAI;AACxBJ,IAAAA,YAAY,CAACK,OAAb,CAAqBC,cAAc,IAAI;AAClCF,MAAAA,SAAS,CAACG,IAAV,KAAmBD,cAAc,CAACC,IAAlC,IAA0CH,SAAS,CAACZ,WAAV,KAA0Bc,cAAc,CAACd,WAAnF,IACGY,SAAS,CAACT,cAAV,KAA6BW,cAAc,CAACX,cADhD,IACmEM,kBAAkB,CAACO,IAAnB,CAAwBJ,SAAxB,CADnE;AAEH,KAHD;AAIA,WAAO,IAAP;AACH,GAND;;AAOA,MAAIH,kBAAkB,CAACV,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,QAAIC,WAAW,GAAGS,kBAAkB,CAAC,CAAD,CAAlB,CAAsBT,WAAxC;AACA,QAAIG,cAAc,GAAGM,kBAAkB,CAAC,CAAD,CAAlB,CAAsBN,cAA3C,CAF+B,CAG/B;;AACAO,IAAAA,WAAW,GAAGtB,IAAI,CAACa,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,IAAoD,GAApD,GAA0DF,WAA1D,GAAwE,GAAxE,GAA8EZ,IAAI,CAACa,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAA9E,GAAsH,GAAtH,GAA4HC,cAA1I;AACH;;AACD,SAAOO,WAAP;AACH;AACD,OAAO,SAASO,oBAAT,CAA8BpB,UAA9B,EAA0CqB,IAA1C,EAAgD;AACnD;AACA,MAAIC,SAAS,GAAG,EAAhB;AACAtB,EAAAA,UAAU,CAACc,GAAX,CAAeC,SAAS,IAAI;AACxB,WAAOO,SAAS,GAAGD,IAAI,IAAIA,IAAI,CAACN,SAAS,CAACG,IAAX,CAAZ,GAA+B,CAAC,GAAGI,SAAJ,EAAe,GAAGD,IAAI,CAACN,SAAS,CAACG,IAAX,CAAtB,CAA/B,GAAyEI,SAA5F;AACH,GAFD,EAHmD,CAOnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOA,SAAS,GAAGA,SAAH,GAAe,EAA/B;AACH;AAED,OAAO,SAASC,SAAT,CAAmBvB,UAAnB,EAA+BwB,kBAA/B,EAAmDC,cAAnD,EAAmEC,YAAnE,EAAiF;AACpF;AACA,MAAID,cAAJ,EAAoB;AAChB,QAAID,kBAAJ,EAAwB;AACpBxB,MAAAA,UAAU,CAACc,GAAX,CAAeC,SAAS,IAAI;AACxB;AACA,eAAOA,SAAS,CAAC,gBAAD,CAAhB,CAFwB,CAGxB;AACH,OAJD;AAKA,aAAOf,UAAP;AACH,KAPD,MAOO;AACHA,MAAAA,UAAU,CAACc,GAAX,CAAeC,SAAS,IAAI;AACxB;AACA,eAAOA,SAAS,CAAC,gBAAD,CAAT,GAA8B,CAAC,CAAtC,CAFwB,CAGxB;AACH,OAJD;AAKA,aAAOf,UAAP;AACH;AACJ,GAhBD,MAgBO;AACHA,IAAAA,UAAU,CAACc,GAAX,CAAeC,SAAS,IAAI;AACxB;AACAA,MAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B,CAAC,CAA/B;AACAA,MAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmCW,YAAY,CAACC,iBAAb,CAA+BC,IAA/B,CAAoCC,mBAAvE;AACA,aAAOd,SAAP,CAJwB,CAKxB;AACH,KAND;AAOA,WAAOf,UAAP;AACH;AACJ;AAED,OAAO,SAAS8B,eAAT,CAAyBC,UAAzB,EAAqCC,cAArC,EAAqDN,YAArD,EACHO,YADG,EACWC,QADX,EACqBC,eADrB,EACsCC,SADtC,EACiDC,eADjD,EACkE;AACrE,MAAIC,kBAAkB,GAAG,EAAzB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAD,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACS,mBAAX,CAA+BC,eAAvE;AACAH,EAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACW,gBAAX,CAA4BC,YAA3D,IAAyE,CAAC,CAA/G;AACAL,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACa,mBAAX,CAA+BC,eAA9D,IAA+E,CAAC,CAAxH;AACAP,EAAAA,kBAAkB,CAAC,4BAAD,CAAlB,GAAkDP,UAAU,CAACe,8BAAX,IAA6Cf,UAAU,CAACe,8BAAX,CAA0CC,0BAAvF,IAAmH,CAAC,CAAtK;AACAT,EAAAA,kBAAkB,CAAC,wBAAD,CAAlB,GAA8CP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACa,mBAAX,CAA+BI,sBAA9D,IAAsF,CAAC,CAArI;AACAV,EAAAA,kBAAkB,CAAC,2BAAD,CAAlB,GAAkDF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0B,CAA1B,EAA6BC,yBAAtD,GAAkFxB,YAAY,CAACwB,yBAAjJ;AACAZ,EAAAA,kBAAkB,CAAC,mBAAD,CAAlB,GAA0CF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0B,CAA1B,EAA6BtB,iBAAtD,GAA0ED,YAAY,CAACC,iBAAb,CAA+BwB,KAAnJ;;AAGA,MAAIpB,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACwD,OAAlE,EAA2E;AAEvEd,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,GACjCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GAVD,MAUO,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC4D,UAAlE,EAA8E;AACjFlB,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2CN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,GACvCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,CAA2GJ,KADpE,GAC4E,CAAC,CADxH;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,CAAkGJ,KAD9D,GACsE,CAAC,CAD/G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GATM,MAUF,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC6D,QAAlE,EAA4E;AAC7EnB,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,GACrCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,CAAyGJ,KADpE,GAC4E,CAAC,CADtH;AAEAb,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,GAClCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,CAAgGJ,KAD9D,GACsE,CAAC,CAD7G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACH,GATI,MAUA,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC8D,YAAlE,EAAgF;AACjFpB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,IAAyElB,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAA1E,CAAd,KAA4KI,SAA5K,GACjC3B,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,aAAD,CAAlB,GAAoCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,QAA1C,CAAD,CAAf,CAAqE,OAArE,CAAD,CAAd,GAChCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,QAA1C,CAAD,CAAf,CAAqE,OAArE,CAAD,CAAd,CAA8FJ,KAD9D,GACsE,CAAC,CAD3G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GAXI,MAYA,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACgE,iBAAlE,EAAqF;AACtFtB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,IAAyElB,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAA1E,CAAd,KAA4KI,SAA5K,GACjC3B,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2CN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,cAA1C,CAAD,CAAf,CAA2E,OAA3E,CAAD,CAAd,GACvCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,cAA1C,CAAD,CAAf,CAA2E,OAA3E,CAAD,CAAd,CAAoGJ,KAD7D,GACqE,CAAC,CADjH;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GAXI,MAWC,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACiE,SAAlE,EAA6E;AAC/EvB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,GACjCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACA,UAAMwB,iBAAiB,GAAGzB,eAAe,CAAC0B,MAAhB,CAAuBT,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,aAAvC,CAA1B;AACAjB,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAuCN,cAAc,CAAC8B,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,KAAtB,CAAd,IACvChC,cAAc,CAAC8B,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,KAAtB,CAAd,CAA2Cb,KADJ,IACW,CAAC,CADnD;AAEH;;AAEDb,EAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAAjC;AACAA,EAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAAnC;;AAEA,MAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC8D,YAAlE,EAAgF;AAC5EpB,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CN,cAAc,CAAC,YAAD,CAAd,GAA+BA,cAAc,CAAC,YAAD,CAA7C,GAA8D,EAA7G;AACAM,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDN,cAAc,CAAC,YAAD,CAAd,GAA+BA,cAAc,CAAC,YAAD,CAA7C,GAA8D,EAA/G;AACAM,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAACiC,KAAf,IAAwBjC,cAAc,CAACiC,KAAf,CAAqBrC,IAA7C,IAAqDI,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAAxF,GAAiHnC,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAApJ,GAA6KnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,CAAC,CAArU;AACA7B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAACiC,KAAf,IAAwBjC,cAAc,CAACiC,KAAf,CAAqBrC,IAA7C,IAAqDI,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAAxF,GAAiHnC,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAApJ,GAA6KnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,CAAC,CAAvU;AACA7B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,gBAA/B,IAAmDN,cAAc,CAAC,YAAD,CAAd,IAAgCA,cAAc,CAAC,YAAD,CAAd,CAA6BmB,KAAhH;AACAb,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,gBAAjC,IAAqDN,cAAc,CAAC,YAAD,CAAd,IAAgCA,cAAc,CAAC,YAAD,CAAd,CAA6BmB,KAAlH;AACH,GAzFoE,CA2FrE;;;AACAlB,EAAAA,YAAY,IAAIA,YAAY,CAACnB,GAAb,CAAiBsD,GAAG,IAAI;AACpC,WAAOA,GAAG,CAACC,QAAJ,CAAavD,GAAb,CAAiBwD,MAAM,IAAI;AAC9B,aAAOA,MAAM,CAACD,QAAP,CAAgBvD,GAAhB,CAAoBC,SAAS,IAAI;AACpC,YAAIA,SAAS,CAACwD,cAAV,CAAyB,UAAzB,CAAJ,EAA0C;AACtC,iBAAOxD,SAAS,CAACsD,QAAV,CAAmBvD,GAAnB,CAAuB0D,YAAY,IAAI;AAC1C,gBAAIA,YAAY,CAACC,SAAb,KAA2B,OAA3B,IAAsCD,YAAY,CAACC,SAAb,KAA2B,oBAArE,EAA2F;AACvF;AACA,kBAAID,YAAY,CAACC,SAAb,KAA2B,oBAA/B,EAAqD;AACjDnC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,iBADiD,GAe7C,CAAC,CAfT;AAgBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,eAnBD,MAmBO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C;AAGIU,kBAAAA,IAAI,EAAEF,YAAY,CAACG,WAHvB;AAIIC,kBAAAA,sBAAsB,EAAEJ,YAAY,CAACI,sBAJzC;AAKIC,kBAAAA,MAAM,EAAEL,YAAY,CAACK,MALzB;AAMI,mBAACL,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvF,GAAqGvC,SAAS,KAAK,QAAd,GACjGJ,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAF6F,GAIjG3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,IAAwI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAAxI,GACM3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb;AAZrD,iBADiD,GAe7C,CAAC,CAfT;AAgBAb,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,eAxCsF,CAyCvF;;;AACA,kBAAIQ,YAAY,CAACjB,IAAb,KAAsB,eAA1B,EAA2C;AACvCjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAC3CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAD2C,GACIN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAC3CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,YAApD,CAD2C,GACyB,EAF5E;AAIAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAAjD;;AACA,oBAAIF,SAAS,KAAK,QAAlB,EAA4B;AACxBE,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAAC,2BAAD,CAAd,GAA8CA,cAAc,CAAC,2BAAD,CAA5D,GAA4F,EAA1J;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAAC,yBAAD,CAAd,GAA4CA,cAAc,CAAC,yBAAD,CAA1D,GAAwF,EAApJ;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAAC,aAAD,CAAd,GAAgCA,cAAc,CAAC,aAAD,CAA9C,GAAgE,EAAhH;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,EAAxI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,kBAAD,CAAd,GAAqCA,cAAc,CAAC,kBAAD,CAAnD,GAA0E,EAA/H;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,mBAAD,CAAd,GAAsCA,cAAc,CAAC,mBAAD,CAApD,GAA4E,EAAjI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAAC,eAAD,CAAd,GAAkCA,cAAc,CAAC,eAAD,CAAhD,GAAoE,EAAtH;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAAC,oBAAD,CAAd,GAAuCA,cAAc,CAAC,oBAAD,CAArD,GAA8E,EAArI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH,iBA7BD,MA8BK;AAEDA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC1DhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,eAApD,CAD0D,GACa,EAD3E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACxDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CADwD,GACa,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5ChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CAD4C,GACyB,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAGAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACpDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CADoD,GACiB,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,UAApD,CADiD,GACiB,EADtE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,kBAApD,CADiD,GACyB,EAD9E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC9ChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,kBAApD,CAD8C,GAC4B,EAD9E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACnDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,oBAApD,CADmD,GACyB,EADhF;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH;AACJ;AAGJ,aA7HD,MA8HK,IAAIkC,YAAY,CAACC,SAAb,KAA2B,MAA/B,EAAuC;AACxC,kBAAID,YAAY,CAACO,SAAjB,EAA4B;AACxBzC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAsD,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACjDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADkB,GAGhD,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAGMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EAPjD;AASA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH,eAXD,MAWO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDQ,YAAY,CAACS,eAAb,GACjD,OAAOjD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADnC,GAGI,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAIMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EATA,GAUjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqC,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACjCxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADE,GAEgC,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAC7DxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CAD8B,GAI3DF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GAEI,EARd,GAQmB,EAlBvB;AAoBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;;AACD,kBAAIQ,YAAY,CAACU,QAAjB,EAA2B;AACvB5C,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,IAA4DhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,GACxD;AAAEb,kBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0Cb,KAAnD;AAA0Da,kBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0CA;AAA3G,iBADwD,GAExD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIkC,YAAY,CAACR,KAAM,EAAzD,IAA8D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,CAA9D;AACH;;AACDzB,cAAAA,QAAQ,CAACpB,IAAT,CAAcqD,YAAY,CAACR,KAA3B;AACH,aA3CI,MA6CA;AACD1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADmC,GACZ,EADzC;AAGA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;AACJ,WAlLM,CAAP;AAmLA,iBAAO1B,kBAAP;AAEH,SAtLD,MAuLK;AACD,cAAIvB,SAAS,CAAC0D,SAAV,KAAwB,OAAxB,IAAmC1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA/D,EAAqF;AACjF,gBAAI1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA5B,EAAkD;AAC9CnC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,eAD8C,GAe1C,CAAC,CAfT;AAgBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AAEH,aAnBD,MAmBO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C;AAGIU,gBAAAA,IAAI,EAAE3D,SAAS,CAAC4D,WAHpB;AAIIC,gBAAAA,sBAAsB,EAAE7D,SAAS,CAAC6D,sBAJtC;AAKIC,gBAAAA,MAAM,EAAE9D,SAAS,CAAC8D,MALtB;AAMI,iBAAC9D,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAjF,GAA+FvC,SAAS,KAAK,QAAd,GAC3FJ,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAFuF,GAI3F3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,IAA+H3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAA/H,GACM3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb;AAZlD,eAD8C,GAe1C,CAAC,CAfT;AAgBAb,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AAEH;;AACD,gBAAIjD,SAAS,CAACwC,IAAV,KAAmB,eAAvB,EAAwC;AACpCjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAC3CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAD2C,GACIN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC3ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,YAAjD,CAD2C,GACsB,EAFzE;AAIAU,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAAjD;;AAEA,kBAAIF,SAAS,KAAK,QAAlB,EAA4B;AACxBE,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAAC,2BAAD,CAAd,GAA8CA,cAAc,CAAC,2BAAD,CAA5D,GAA4F,EAA1J;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAAC,yBAAD,CAAd,GAA4CA,cAAc,CAAC,yBAAD,CAA1D,GAAwF,EAApJ;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAAC,aAAD,CAAd,GAAgCA,cAAc,CAAC,aAAD,CAA9C,GAAgE,EAAhH;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,EAAxI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,kBAAD,CAAd,GAAqCA,cAAc,CAAC,kBAAD,CAAnD,GAA0E,EAA/H;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,mBAAD,CAAd,GAAsCA,cAAc,CAAC,mBAAD,CAApD,GAA4E,EAAjI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAAC,eAAD,CAAd,GAAkCA,cAAc,CAAC,eAAD,CAAhD,GAAoE,EAAtH;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAAC,oBAAD,CAAd,GAAuCA,cAAc,CAAC,oBAAD,CAArD,GAA8E,EAArI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH,eA7BD,MA8BK;AAEDA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC1DhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,eAAjD,CAD0D,GACU,EADxE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACxDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CADwD,GACU,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CAD4C,GACsB,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CAD4C,GAC2B,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,oBAAjD,CAD8C,GAC2B,EAD7E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CADoD,GACc,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACjDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,UAAjD,CADiD,GACc,EADnE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACjDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CADiD,GACsB,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CAD8C,GACyB,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACnDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,oBAAjD,CADmD,GACsB,EAD7E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH;AACJ;AACJ,WA1ID,MA2IK,IAAIvB,SAAS,CAAC0D,SAAV,KAAwB,MAA5B,EAAoC;AACrC,gBAAI1D,SAAS,CAACgE,SAAd,EAAyB;AACrBI,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAOpD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAAvD;AACA1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkD,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAE9CxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CAFe,GAI7C,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA5C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAGIF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACIhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADlB,GACsC,EAR9C;AAUA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH,aAbD,MAaO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDjD,SAAS,CAACkE,eAAV,GAC9C,OAAOjD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CADnC,GAGI,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAIMF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EATA,GAU9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkC,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpHhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADsG,GAClF,IAAIgB,IAAJ,EADiF,EACrE9C,QADqE,CAArF,GAC4B,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAC1DxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CAD2B,GAGxDF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EAL1C,GAK+C,EAfnD;AAiBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,gBAAIjD,SAAS,CAACmE,QAAd,EAAwB;AACpB5C,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,IAAyDhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,GACrD;AAAEb,gBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCb,KAAhD;AAAuDa,gBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCA;AAArG,eADqD,GAErD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIvB,SAAS,CAACiD,KAAM,EAAtD,IAA2D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,CAA3D;AACH;;AACDzB,YAAAA,QAAQ,CAACpB,IAAT,CAAcJ,SAAS,CAACiD,KAAxB;AACH,WA1CI,MA2CA;AACD1B,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADgC,GACZ,EADtC;AAGA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,iBAAO1B,kBAAP;AACH;AACJ,OAvXM,CAAP;AAyXH,KA1XM,CAAP;AA2XH,GA5Xe,CAAhB;;AA8XA,MAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACwD,OAA9D,IAAyEpB,cAAc,CAAC,aAAD,CAAvF,IAA0GA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAAxI,IAAgJI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAvL,EAAiM;AAC7L5B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAnH,GAA4InC,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAxL,GAAiNnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,EAAxW;AACA7B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAnH,GAA4InC,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAxL,GAAiNnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,EAA1W;AACA7B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAnH,GAA4IrD,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAxL,GAAiNrD,cAAc,IAAEA,cAAc,CAACqD,sBAA/B,GAAsDrD,cAAc,CAACqD,sBAArE,GAA4F,EAAxW;AACA/C,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAnH,GAA4IrD,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAxL,GAAiNrD,cAAc,IAAEA,cAAc,CAACqD,sBAA/B,GAAsDrD,cAAc,CAACqD,sBAArE,GAA4F,EAA1W;AAEA/C,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,iBAA/B,IAAqDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BgC,KAAhE,IAAwE,EAA5H;AACA1B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,iBAAjC,IAAuDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BgC,KAAhE,IAAwE,EAA9H;AACA1B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAwDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BmB,KAAhE,IAAwE,EAA/H;AACAb,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAA0DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BmB,KAAhE,IAAwE,EAAjI;AAEH;;AAED,QAAMmC,KAAK,GAAG;AAAEhD,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAAd;AACA,SAAO+C,KAAP;AACH;AAGD,OAAO,SAASC,qBAAT,CAA+BxD,UAA/B,EAA2CC,cAA3C,EAA2DN,YAA3D,EACHO,YADG,EACWC,QADX,EACqBC,eADrB,EACsCC,SADtC,EACiDC,eADjD,EACkE;AACrE,MAAIC,kBAAkB,GAAG,EAAzB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAD,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACS,mBAAX,CAA+BC,eAAvE;AACAH,EAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACW,gBAAX,CAA4BC,YAA3D,IAAyE,CAAC,CAA/G;AACAL,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACa,mBAAX,CAA+BC,eAA9D,IAA+E,CAAC,CAAxH;AACAP,EAAAA,kBAAkB,CAAC,4BAAD,CAAlB,GAAkDP,UAAU,CAACgB,0BAAX,IAAyChB,UAAU,CAACgB,0BAApD,IAAgF,CAAC,CAAnI;AACAT,EAAAA,kBAAkB,CAAC,wBAAD,CAAlB,GAA8CP,UAAU,CAACW,gBAAX,IAA+BX,UAAU,CAACa,mBAAX,CAA+BI,sBAA9D,IAAsF,CAAC,CAArI;AACAV,EAAAA,kBAAkB,CAAC,2BAAD,CAAlB,GAAkDF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0B,CAA1B,EAA6BC,yBAAtD,GAAkFxB,YAAY,CAACwB,yBAAjJ;AACAZ,EAAAA,kBAAkB,CAAC,mBAAD,CAAlB,GAA0CF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0B,CAA1B,EAA6BtB,iBAAtD,GAA0ED,YAAY,CAACC,iBAAb,CAA+BwB,KAAnJ;;AAGA,MAAIpB,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACiE,SAAlE,EAA6E;AACzEvB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,GACjCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACA,UAAMwB,iBAAiB,GAAGzB,eAAe,CAAC0B,MAAhB,CAAuBT,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,aAAvC,CAA1B;AACAjB,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAuCN,cAAc,CAAC8B,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,KAAtB,CAAd,IACvChC,cAAc,CAAC8B,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,KAAtB,CAAd,CAA2Cb,KADJ,IACW,CAAC,CADnD;AAEH,GAZD,MAYO,IAAIpB,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC4D,UAAlE,EAA8E;AACjFlB,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2CN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,GACvCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,CAA2GJ,KADpE,GAC4E,CAAC,CADxH;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,CAAkGJ,KAD9D,GACsE,CAAC,CAD/G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GATM,MAUF,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC6D,QAAlE,EAA4E;AAC7EnB,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,GACrCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,CAAyGJ,KADpE,GAC4E,CAAC,CADtH;AAEAb,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,GAClCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,CAAgGJ,KAD9D,GACsE,CAAC,CAD7G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACH,GATI,MAUA,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC8D,YAAlE,EAAgF;AACjFpB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,IAAyElB,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAA1E,CAAd,KAA4KI,SAA5K,GACjC3B,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,aAAD,CAAlB,GAAoCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,QAA1C,CAAD,CAAf,CAAqE,OAArE,CAAD,CAAd,GAChCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,QAA1C,CAAD,CAAf,CAAqE,OAArE,CAAD,CAAd,CAA8FJ,KAD9D,GACsE,CAAC,CAD3G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GAXI,MAYA,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACgE,iBAAlE,EAAqF;AACtFtB,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,IAAyElB,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAA1E,CAAd,KAA4KI,SAA5K,GACjC3B,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2CN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,cAA1C,CAAD,CAAf,CAA2E,OAA3E,CAAD,CAAd,GACvCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,cAA1C,CAAD,CAAf,CAA2E,OAA3E,CAAD,CAAd,CAAoGJ,KAD7D,GACqE,CAAC,CADjH;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH;;AAEDA,EAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAAjC;AACAA,EAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAAnC;;AAEA,MAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAAC8D,YAAlE,EAAgF;AAC5EpB,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CN,cAAc,CAAC,YAAD,CAAd,GAA+BA,cAAc,CAAC,YAAD,CAA7C,GAA8D,EAA7G;AACAM,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDN,cAAc,CAAC,YAAD,CAAd,GAA+BA,cAAc,CAAC,YAAD,CAA7C,GAA8D,EAA/G;AACAM,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAACiC,KAAf,IAAwBjC,cAAc,CAACiC,KAAf,CAAqBrC,IAA7C,IAAqDI,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAAxF,GAAiHnC,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAApJ,GAA6KnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,CAAC,CAArU;AACA7B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAACiC,KAAf,IAAwBjC,cAAc,CAACiC,KAAf,CAAqBrC,IAA7C,IAAqDI,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAAxF,GAAiHnC,cAAc,CAACiC,KAAf,CAAqBrC,IAArB,CAA0BsC,QAA1B,CAAmCC,sBAApJ,GAA6KnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,CAAC,CAAvU;AACA7B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,gBAA/B,IAAmDN,cAAc,CAAC,YAAD,CAAd,IAAgCA,cAAc,CAAC,YAAD,CAAd,CAA6BmB,KAAhH;AACAb,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,gBAAjC,IAAqDN,cAAc,CAAC,YAAD,CAAd,IAAgCA,cAAc,CAAC,YAAD,CAAd,CAA6BmB,KAAlH;AACH,GA/EoE,CAiFrE;;;AACAlB,EAAAA,YAAY,IAAIA,YAAY,CAACnB,GAAb,CAAiBsD,GAAG,IAAI;AACpC,WAAOA,GAAG,CAACC,QAAJ,CAAavD,GAAb,CAAiBwD,MAAM,IAAI;AAC9B,aAAOA,MAAM,CAACD,QAAP,CAAgBvD,GAAhB,CAAoBC,SAAS,IAAI;AACpC,YAAIA,SAAS,CAACwD,cAAV,CAAyB,UAAzB,CAAJ,EAA0C;AACtC,iBAAOxD,SAAS,CAACsD,QAAV,CAAmBvD,GAAnB,CAAuB0D,YAAY,IAAI;AAC1C,gBAAIA,YAAY,CAACC,SAAb,KAA2B,OAA3B,IAAsCD,YAAY,CAACC,SAAb,KAA2B,oBAArE,EAA2F;AACvF;AACA,kBAAID,YAAY,CAACC,SAAb,KAA2B,oBAA/B,EAAqD;AACjDnC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,iBADiD,GAe7C,CAAC,CAfT;AAgBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,eAnBD,MAmBO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C;AAGIU,kBAAAA,IAAI,EAAEF,YAAY,CAACG,WAHvB;AAIIC,kBAAAA,sBAAsB,EAAEJ,YAAY,CAACI,sBAJzC;AAKIC,kBAAAA,MAAM,EAAEL,YAAY,CAACK,MALzB;AAMI,mBAACL,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvF,GAAqGvC,SAAS,KAAK,QAAd,GACjGJ,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAF6F,GAIjG3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,IAAwI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAAxI,GACM3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb;AAZrD,iBADiD,GAe7C,CAAC,CAfT;AAgBAb,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,eAxCsF,CAyCvF;;;AACA,kBAAIQ,YAAY,CAACjB,IAAb,KAAsB,eAA1B,EAA2C;AACvCjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAC3CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAD2C,GACIN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAC3CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,YAApD,CAD2C,GACyB,EAF5E;AAIAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAAjD;;AACA,oBAAIF,SAAS,KAAK,QAAlB,EAA4B;AACxBE,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAAC,2BAAD,CAAd,GAA8CA,cAAc,CAAC,2BAAD,CAA5D,GAA4F,EAA1J;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAAC,yBAAD,CAAd,GAA4CA,cAAc,CAAC,yBAAD,CAA1D,GAAwF,EAApJ;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAAC,aAAD,CAAd,GAAgCA,cAAc,CAAC,aAAD,CAA9C,GAAgE,EAAhH;AAEAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,EAAxI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,kBAAD,CAAd,GAAqCA,cAAc,CAAC,kBAAD,CAAnD,GAA0E,EAA/H;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,mBAAD,CAAd,GAAsCA,cAAc,CAAC,mBAAD,CAApD,GAA4E,EAAjI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAAC,eAAD,CAAd,GAAkCA,cAAc,CAAC,eAAD,CAAhD,GAAoE,EAAtH;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAAC,oBAAD,CAAd,GAAuCA,cAAc,CAAC,oBAAD,CAArD,GAA8E,EAArI;AACAM,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH,iBA7BD,MA8BK;AAEDA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC1DhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,eAApD,CAD0D,GACa,EAD3E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACxDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CADwD,GACa,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5ChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CAD4C,GACyB,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAGAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACpDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,aAApD,CADoD,GACiB,EADzE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,UAApD,CADiD,GACiB,EADtE;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,kBAApD,CADiD,GACyB,EAD9E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC9ChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,kBAApD,CAD8C,GAC4B,EAD9E;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACnDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwC,UAAxC,EAAoD,oBAApD,CADmD,GACyB,EADhF;AAGAU,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH;AACJ;AAGJ,aA7HD,MA8HK,IAAIkC,YAAY,CAACC,SAAb,KAA2B,MAA/B,EAAuC;AACxC,kBAAID,YAAY,CAACO,SAAjB,EAA4B;AACxBzC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAsD,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACjDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADkB,GAGhD,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAGMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EAPjD;AASA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH,eAXD,MAWO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDQ,YAAY,CAACS,eAAb,GACjD,OAAOjD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADnC,GAGI,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAIMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EATA,GAUjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqC,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACjCxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADE,GAEgC,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAC7DxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CAD8B,GAI3DF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GAEI,EARd,GAQmB,EAlBvB;AAoBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;;AACD,kBAAIQ,YAAY,CAACU,QAAjB,EAA2B;AACvB5C,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,IAA4DhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,GACxD;AAAEb,kBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0Cb,KAAnD;AAA0Da,kBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0CA;AAA3G,iBADwD,GAExD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIkC,YAAY,CAACR,KAAM,EAAzD,IAA8D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,CAA9D;AACH;;AACDzB,cAAAA,QAAQ,CAACpB,IAAT,CAAcqD,YAAY,CAACR,KAA3B;AACH,aA3CI,MA6CA;AACD1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADmC,GACZ,EADzC;AAGA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;AACJ,WAlLM,CAAP;AAmLA,iBAAO1B,kBAAP;AAEH,SAtLD,MAuLK;AACD,cAAIvB,SAAS,CAAC0D,SAAV,KAAwB,OAAxB,IAAmC1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA/D,EAAqF;AACjF,gBAAI1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA5B,EAAkD;AAC9CnC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,eAD8C,GAe1C,CAAC,CAfT;AAgBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AAEH,aAnBD,MAmBO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C;AAGIU,gBAAAA,IAAI,EAAE3D,SAAS,CAAC4D,WAHpB;AAIIC,gBAAAA,sBAAsB,EAAE7D,SAAS,CAAC6D,sBAJtC;AAKIC,gBAAAA,MAAM,EAAE9D,SAAS,CAAC8D,MALtB;AAMI,iBAAC9D,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAjF,GAA+FvC,SAAS,KAAK,QAAd,GAC3FJ,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAFuF,GAI3F3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,IAA+H3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAA/H,GACM3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb;AAZlD,eAD8C,GAe1C,CAAC,CAfT;AAgBAb,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AAEH;;AACD,gBAAIjD,SAAS,CAACwC,IAAV,KAAmB,eAAvB,EAAwC;AACpCjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAA+CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,IAC3CA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAD2C,GACIN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC3ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,YAAjD,CAD2C,GACsB,EAFzE;AAIAU,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,YAAjC,IAAiDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,YAA/B,CAAjD;;AAEA,kBAAIF,SAAS,KAAK,QAAlB,EAA4B;AACxBE,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAAC,2BAAD,CAAd,GAA8CA,cAAc,CAAC,2BAAD,CAA5D,GAA4F,EAA1J;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAAC,yBAAD,CAAd,GAA4CA,cAAc,CAAC,yBAAD,CAA1D,GAAwF,EAApJ;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAAC,aAAD,CAAd,GAAgCA,cAAc,CAAC,aAAD,CAA9C,GAAgE,EAAhH;AAEAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,EAAxI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,kBAAD,CAAd,GAAqCA,cAAc,CAAC,kBAAD,CAAnD,GAA0E,EAA/H;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAAC,mBAAD,CAAd,GAAsCA,cAAc,CAAC,mBAAD,CAApD,GAA4E,EAAjI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAAC,eAAD,CAAd,GAAkCA,cAAc,CAAC,eAAD,CAAhD,GAAoE,EAAtH;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAAC,oBAAD,CAAd,GAAuCA,cAAc,CAAC,oBAAD,CAArD,GAA8E,EAArI;AACAM,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH,eA7BD,MA8BK;AAEDA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,IAA8DN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC1DhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,eAAjD,CAD0D,GACU,EADxE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,2BAAjC,IAAgEA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,2BAA/B,CAAhE;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,IAA4DN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACxDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CADwD,GACU,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,yBAAjC,IAA8DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,yBAA/B,CAA9D;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CAD4C,GACsB,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,IAAgDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CAD4C,GAC2B,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,aAAjC,IAAkDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,aAA/B,CAAlD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,oBAAjD,CAD8C,GAC2B,EAD7E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,IAAwDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,aAAjD,CADoD,GACc,EADtE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,qBAAjC,IAA0DA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,qBAA/B,CAA1D;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACjDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,UAAjD,CADiD,GACc,EADnE;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,IAAqDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACjDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CADiD,GACsB,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,kBAAjC,IAAuDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,kBAA/B,CAAvD;AAEAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,IAAkDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,kBAAjD,CAD8C,GACyB,EAD3E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,eAAjC,IAAoDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,eAA/B,CAApD;AAGAA,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAuDN,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACnDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqC,UAArC,EAAiD,oBAAjD,CADmD,GACsB,EAD7E;AAGAU,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAAyDA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,CAAzD;AAEH;AACJ;AACJ,WA1ID,MA2IK,IAAIvB,SAAS,CAAC0D,SAAV,KAAwB,MAA5B,EAAoC;AACrC,gBAAI1D,SAAS,CAACgE,SAAd,EAAyB;AACrBI,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAOpD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAAvD;AACA1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkD,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAE9CxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CAFe,GAI7C,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA5C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAGIF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACIhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADlB,GACsC,EAR9C;AAUA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH,aAbD,MAaO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDjD,SAAS,CAACkE,eAAV,GAC9C,OAAOjD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CADnC,GAGI,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAIMF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EATA,GAU9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkC,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpHhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADsG,GAClF,IAAIgB,IAAJ,EADiF,EACrE9C,QADqE,CAArF,GAC4B,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAC1DxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CAD2B,GAGxDF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EAL1C,GAK+C,EAfnD;AAiBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,gBAAIjD,SAAS,CAACmE,QAAd,EAAwB;AACpB5C,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,IAAyDhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,GACrD;AAAEb,gBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCb,KAAhD;AAAuDa,gBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCA;AAArG,eADqD,GAErD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIvB,SAAS,CAACiD,KAAM,EAAtD,IAA2D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,CAA3D;AACH;;AACDzB,YAAAA,QAAQ,CAACpB,IAAT,CAAcJ,SAAS,CAACiD,KAAxB;AACH,WA1CI,MA2CA;AACD1B,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADgC,GACZ,EADtC;AAGA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,iBAAO1B,kBAAP;AACH;AACJ,OAvXM,CAAP;AAyXH,KA1XM,CAAP;AA2XH,GA5Xe,CAAhB;;AA8XA,MAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD7C,UAAU,CAACwD,OAA9D,IAAyEpB,cAAc,CAAC,aAAD,CAAvF,IAA0GA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAAxI,IAAgJI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAvL,EAAiM;AAC7L5B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAnH,GAA4InC,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAxL,GAAiNnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,EAAxW;AACA7B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAnH,GAA4InC,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CC,sBAAxL,GAAiNnC,cAAc,IAAEA,cAAc,CAACmC,sBAA/B,GAAsDnC,cAAc,CAACmC,sBAArE,GAA4F,EAA1W;AACA7B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,wBAA/B,IAA2DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAnH,GAA4IrD,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAxL,GAAiNrD,cAAc,IAAEA,cAAc,CAACqD,sBAA/B,GAAsDrD,cAAc,CAACqD,sBAArE,GAA4F,EAAxW;AACA/C,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,wBAAjC,IAA6DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA/D,IAAuEI,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAnH,GAA4IrD,cAAc,CAAC,aAAD,CAAd,CAA8BJ,IAA9B,CAAmCsC,QAAnC,CAA4CmB,sBAAxL,GAAiNrD,cAAc,IAAEA,cAAc,CAACqD,sBAA/B,GAAsDrD,cAAc,CAACqD,sBAArE,GAA4F,EAA1W;AAEA/C,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,iBAA/B,IAAqDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BgC,KAAhE,IAAwE,EAA5H;AACA1B,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,iBAAjC,IAAuDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BgC,KAAhE,IAAwE,EAA9H;AACA1B,IAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+B,oBAA/B,IAAwDN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BmB,KAAhE,IAAwE,EAA/H;AACAb,IAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,oBAAjC,IAA0DN,cAAc,CAAC,aAAD,CAAd,IAAiCA,cAAc,CAAC,aAAD,CAAd,CAA8BmB,KAAhE,IAAwE,EAAjI;AAEH;;AAED,QAAMmC,KAAK,GAAG;AAAEhD,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAAd;AACA,SAAO+C,KAAP;AACH;AACD,OAAO,SAASE,wBAAT,CAAkCzD,UAAlC,EAA8CC,cAA9C,EAA8DN,YAA9D,EACHO,YADG,EACWC,QADX,EACqBC,eADrB,EACsCC,SADtC,EACiDC,eADjD,EACkE;AACrE,MAAIC,kBAAkB,GAAG,EAAzB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAD,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACS,mBAAX,GAAiCT,UAAU,CAACS,mBAAX,CAA+BC,eAAhE,GAAkF,CAA1H;AACAH,EAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCP,UAAU,CAACW,gBAAX,GAA8BX,UAAU,CAACW,gBAAX,CAA4BC,YAA1D,GAAyE,CAA9G;AACAL,EAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCP,UAAU,CAACa,mBAAX,GAAiCb,UAAU,CAACa,mBAAX,CAA+BC,eAAhE,GAAkF,CAA1H;AACAP,EAAAA,kBAAkB,CAAC,4BAAD,CAAlB,GAAmDP,UAAU,CAACe,8BAAX,GAC/Cf,UAAU,CAACe,8BAAX,CAA0CC,0BADK,GACwBhB,UAAU,CAACgB,0BADtF;AAEAT,EAAAA,kBAAkB,CAAC,wBAAD,CAAlB,GAA+CP,UAAU,CAACa,mBAAX,GAC3Cb,UAAU,CAACa,mBAAX,CAA+BI,sBADY,GACajB,UAAU,CAACiB,sBAAX,GAAoCjB,UAAU,CAACiB,sBAA/C,GAAwE,CAAC,CADrI;AAEAV,EAAAA,kBAAkB,CAAC,2BAAD,CAAlB,GAAkDF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0BC,yBAAnD,GAA+ExB,YAAY,CAACwB,yBAA9I;AACAZ,EAAAA,kBAAkB,CAAC,mBAAD,CAAlB,GAA0CF,SAAS,KAAK,QAAd,GAAyBL,UAAU,CAACkB,cAAX,CAA0BtB,iBAAnD,GAAuED,YAAY,CAACC,iBAAb,CAA+BwB,KAAhJ;;AAGA,MAAIb,kBAAkB,CAAC,iBAAD,CAAlB,KAA0C,CAA9C,EAAiD;AAE7CA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAA1C,CAAD,CAAf,CAA+E,OAA/E,CAAD,CAAd,CAAwGJ,KADpE,GAC4E,CAAC,CADrH;AAEAb,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,GACjCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA1C,CAAD,CAAf,CAAsE,OAAtE,CAAD,CAAd,CAA+FJ,KAD9D,GACsE,CAAC,CAD5G;AAEAb,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GAVD,MAUO,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD,CAAvD,EAA0D;AAC7DH,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2CN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,GACvCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,qBAA1C,CAAD,CAAf,CAAkF,OAAlF,CAAD,CAAd,CAA2GJ,KADpE,GAC4E,CAAC,CADxH;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,GACpCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAA1C,CAAD,CAAf,CAAyE,OAAzE,CAAD,CAAd,CAAkGJ,KAD9D,GACsE,CAAC,CAD/G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyC,CAAC,CAA1C;AACAA,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsC,CAAC,CAAvC;AACH,GATM,MAUF,IAAIP,UAAU,CAACS,mBAAX,CAA+BC,eAA/B,KAAmD,CAAvD,EAA0D;AAC3DH,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB,GAAyCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,GACrCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,mBAA1C,CAAD,CAAf,CAAgF,OAAhF,CAAD,CAAd,CAAyGJ,KADpE,GAC4E,CAAC,CADtH;AAEAb,IAAAA,kBAAkB,CAAC,eAAD,CAAlB,GAAsCN,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,GAClCvB,cAAc,CAACK,eAAe,CAACA,eAAe,CAACgB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAA1C,CAAD,CAAf,CAAuE,OAAvE,CAAD,CAAd,CAAgGJ,KAD9D,GACsE,CAAC,CAD7G;AAEAb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACAA,IAAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,CAAC,CAAtC;AACAA,IAAAA,kBAAkB,CAAC,oBAAD,CAAlB,GAA2C,CAAC,CAA5C;AACAA,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB,GAAwC,CAAC,CAAzC;AACH;;AAEDA,EAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAAjC;AACAA,EAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAAnC;AAIAL,EAAAA,YAAY,IAAIA,YAAY,CAACnB,GAAb,CAAiBsD,GAAG,IAAI;AACpC,WAAOA,GAAG,CAACC,QAAJ,CAAavD,GAAb,CAAiBwD,MAAM,IAAI;AAC9B,aAAOA,MAAM,CAACD,QAAP,CAAgBvD,GAAhB,CAAoBC,SAAS,IAAI;AACpC,YAAIA,SAAS,CAACwD,cAAV,CAAyB,UAAzB,CAAJ,EAA0C;AACtC,iBAAOxD,SAAS,CAACsD,QAAV,CAAmBvD,GAAnB,CAAuB0D,YAAY,IAAI;AAC1C,gBAAIA,YAAY,CAACC,SAAb,KAA2B,OAA/B,EAAwC;AACpC;AACAnC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AAAEb,gBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAA5C;AAAmDa,gBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA;AAA7F,eADiD,GACsD,CAAC,CAD5G;AAEA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,aAND,MAOK,IAAIQ,YAAY,CAACC,SAAb,KAA2B,MAA/B,EAAuC;AACxC,kBAAID,YAAY,CAACO,SAAjB,EAA4B;AACxBzC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqD,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACjDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADkB,GAEgBF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC7DhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAD+C,GACxB,EAH7C;AAKA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH,eAPD,MAOO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDQ,YAAY,CAACS,eAAb,GACjD,OAAOjD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAAyDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACrFhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADuE,GAChD,IAAIgB,IAAJ,EAD+C,EACnC9C,QADmC,CAAxF,GACiEF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC7DhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAD+C,GACxB,EAHQ,GAIjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqC,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAAyDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC1HhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAD4G,GACrF,IAAIgB,IAAJ,EADoF,EACxE9C,QADwE,CAAxF,GAC4BF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC7DhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAD+C,GACxB,EAFzC,GAE8C,EANlD;AAQA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;;AACD,kBAAIQ,YAAY,CAACU,QAAjB,EAA2B;AACvB5C,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,IAA4DhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,GACxD;AAAEb,kBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0Cb,KAAnD;AAA0Da,kBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0CA;AAA3G,iBADwD,GAExD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIkC,YAAY,CAACR,KAAM,EAAzD,IAA8D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,CAA9D;AACH;;AACDzB,cAAAA,QAAQ,CAACpB,IAAT,CAAcqD,YAAY,CAACR,KAA3B;AACH,aA3BI,MA6BA;AACD1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADmC,GACZ,EADzC;AAGA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;AACJ,WA3CM,CAAP;AA4CA,iBAAO1B,kBAAP;AAEH,SA/CD,MAgDK;AACD,cAAIvB,SAAS,CAAC0D,SAAV,KAAwB,OAA5B,EAAqC;AACjCnC,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AAAEb,cAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAAzC;AAAgDa,cAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA;AAAvF,aAD8C,GACmD,CAAC,CADtG;AAGA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AACH,WALD,MAMK,IAAIjD,SAAS,CAAC0D,SAAV,KAAwB,MAA5B,EAAoC;AACrC,gBAAI1D,SAAS,CAACgE,SAAd,EAAyB;AACrBzC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkD,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAC9CxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CADe,GAG9CF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACIhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADlB,GACsC,EAJ1C;AAMA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH,aARD,MAQO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDjD,SAAS,CAACkE,eAAV,GAC9C,OAAOjD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAClFhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADoE,GAChD,IAAIgB,IAAJ,EAD+C,EACnC9C,QADmC,CAArF,GAC8DF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC1DhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAD4C,GACxB,EAHQ,GAI9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkC,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpHhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADsG,GAClF,IAAIgB,IAAJ,EADiF,EACrE9C,QADqE,CAArF,GAC4BF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC1DhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAD4C,GACxB,EAFtC,GAE2C,EAN/C;AAQA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,gBAAIjD,SAAS,CAACmE,QAAd,EAAwB;AACpB5C,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,IAAyDhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,GACrD;AAAEb,gBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCb,KAAhD;AAAuDa,gBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCA;AAArG,eADqD,GAErD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIvB,SAAS,CAACiD,KAAM,EAAtD,IAA2D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,CAA3D;AACH;;AACDzB,YAAAA,QAAQ,CAACpB,IAAT,CAAcJ,SAAS,CAACiD,KAAxB;AACH,WA5BI,MA6BA;AACD1B,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADgC,GACZ,EADtC;AAGA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,iBAAO1B,kBAAP;AACH;AACJ,OA7FM,CAAP;AA+FH,KAhGM,CAAP;AAiGH,GAlGe,CAAhB;AAmGA,QAAMgD,KAAK,GAAG;AAAEhD,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAAd;AACA,SAAO+C,KAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAGA,OAAO,SAASG,wBAAT,CAAkCzD,cAAlC,EACHC,YADG,EACWC,QADX,EACqBC,eADrB,EACsCuD,WADtC,EACmDlE,kBADnD,EACuEE,YADvE,EACqFU,SADrF,EACgG;AACnG,MAAIE,kBAAkB,GAAG,EAAzB;AACA,MAAIC,QAAQ,GAAG,EAAf,CAFmG,CAGnG;AACA;AACA;;AAEAD,EAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAAjC;AACAA,EAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAAnC;AACAL,EAAAA,YAAY,IAAIA,YAAY,CAACnB,GAAb,CAAiBsD,GAAG,IAAI;AACpC,WAAOA,GAAG,CAACC,QAAJ,CAAavD,GAAb,CAAiBwD,MAAM,IAAI;AAC9B,aAAOA,MAAM,CAACD,QAAP,CAAgBvD,GAAhB,CAAoBC,SAAS,IAAI;AACpC,YAAIA,SAAS,CAACwD,cAAV,CAAyB,UAAzB,CAAJ,EAA0C;AACtC;AACA;AACA,iBAAOxD,SAAS,CAACsD,QAAV,CAAmBvD,GAAnB,CAAuB0D,YAAY,IAAI;AAE1C,gBAAIA,YAAY,CAACC,SAAb,KAA2B,OAA3B,IAAqCD,YAAY,CAACC,SAAb,KAA2B,oBAApE,EAA0F;AACtF,kBAAID,YAAY,CAACC,SAAb,KAA2B,oBAA/B,EAAqD;AACjDnC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,iBADiD,GAe7C,CAAC,CAfT;AAgBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AAEH,eAnBD,MAmBK;AACL1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjD;AACIb,kBAAAA,KAAK,EAAEnB,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAD9C;AAEIa,kBAAAA,KAAK,EAAEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAF9C;AAGI;AACA;AACA;AACA;AACAU,kBAAAA,IAAI,EAAEF,YAAY,CAACG,WAPvB;AAQIC,kBAAAA,sBAAsB,EAAEJ,YAAY,CAACI,sBARzC;AASIC,kBAAAA,MAAM,EAAEL,YAAY,CAACK,MATzB;AAUI,mBAACL,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvF,GAAqGvC,SAAS,KAAK,QAAd,GACjGJ,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAF6F,GAIjG3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,GAA0CI,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCpC,IAAnC,CAAwCsC,QAAxC,CAAiDM,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAvI,CAA1C,GACI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,IAAwI3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCQ,YAAY,CAACM,KAAb,CAAmBlD,IAAnB,CAAwBb,SAAxB,KAAsC,SAAtC,GAAkD,oBAAlD,GAAyEyD,YAAY,CAACG,WAAzH,CAAxI,GACM3C,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCb,KAhBrD,CAiBI;AACA;;AAlBJ,iBADiD,GAoB7C,CAAC,CApBT;AAsBAb,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqChC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,CAAmCA,KAAxE,GAAgF,EAAvI;AACC,eA5CqF,CA4CrF;AACD;AACA;AACA;AACrB;;;AACqB,kBAAGQ,YAAY,CAACjB,IAAb,KAAsB,kBAAzB,EAA4C;AACxCjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,2CAAyBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,EAAmDb,KAA/G;AAChC,uCAAqBb,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,EAAmDA;AADxC,iBAAhC;AAEA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,2CAAyBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,EAAmDb,KAAjH;AAClC,uCAAqBb,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,EAAmDA;AADtC,iBAAlC;AAEH;AACJ,aAvDD,MAwDK,IAAIQ,YAAY,CAACC,SAAb,KAA2B,MAA/B,EAAuC;AACxC,kBAAID,YAAY,CAACO,SAAjB,EAA4B;AACxBzC,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqD,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GACjDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5BhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADc,GACS,IAAIgB,IAAJ,EADV,EACsB9C,QADtB,CADkB,GAGhD,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAIMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EARjD;AAUA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH,eAZD,MAYO;AACH1B,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDQ,YAAY,CAACS,eAAb,GACjD,OAAOjD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAAyDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACrFhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADuE,GAChD,IAAIgB,IAAJ,EAD+C,EACnC9C,QADmC,CAAxF,GAEK,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAGMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EAPA,GAQjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAAqC,OAAOhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA9C,GAAyDxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC1HhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAD4G,GACrF,IAAIgB,IAAJ,EADoF,EACxE9C,QADwE,CAAxF,GAEhC,OAAOF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAArB,KAA8C,QAA/C,GACIxE,+BAA+B,CAACwC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvB,CAD4B,GACmB,IAAIgB,IAAJ,EADpB,EACgC9C,QADhC,CADnC,GAGMF,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACEhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADhB,GACuC,EANjD,GAMsD,EAd1D;AAgBA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACH;;AACD,kBAAIQ,YAAY,CAACU,QAAjB,EAA2B;AACvB5C,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,IAA4DhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,GACxD;AAAEb,kBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0Cb,KAAnD;AAA0Da,kBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIwC,YAAY,CAACR,KAAM,EAAzB,CAAd,CAA0CA;AAA3G,iBADwD,GAExD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIkC,YAAY,CAACR,KAAM,EAAzD,IAA8D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIkC,YAAY,CAACR,KAAM,EAAvD,CAA9D;AACH,eAtCuC,CAuC7D;;;AACqB,kBAAGQ,YAAY,CAACjB,IAAb,KAAsB,6BAAzB,EAAuD;AACnDjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,iDAA+BA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C;AAAlE,iBAAhC;AACA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,iDAA+BA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,CAApE;AAA0H9B,kBAAAA;AAA1H,iBAAlC;AACP;;AACD,kBAAGsC,YAAY,CAACjB,IAAb,KAAsB,iBAAzB,EAA2C;AACvCjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,qCAAmBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C;AAAtD,iBAAhC;AACA1B,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,qCAAmBA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C;AAAxD,iBAAlC;AACF;;AACEzB,cAAAA,QAAQ,CAACpB,IAAT,CAAcqD,YAAY,CAACR,KAA3B;AACH,aAjDI,MAkDA,IAAIQ,YAAY,CAACC,SAAb,KAA2B,OAA/B,EAAwC;AACzCnC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADmC,GACZ,EADzC;AAEA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;AACA,kBAAI2B,QAAQ,GAAG,EAAf;;AACA,kBAAI,OAAO3D,cAAc,CAACwC,YAAY,IAAIA,YAAY,CAACR,KAA9B,CAArB,KAA8D,QAAlE,EAA4E;AACxEhC,gBAAAA,cAAc,CAACwC,YAAY,IAAIA,YAAY,CAACR,KAA9B,CAAd,IAAsDhC,cAAc,CAACwC,YAAY,IAAIA,YAAY,CAACR,KAA9B,CAAd,CAAmDhD,OAAnD,CAA2D,CAAC4E,KAAD,EAAQC,KAAR,KAAkB;AAC/H,wBAAMC,QAAQ,GAAGnG,WAAW,EAA5B;AACA,wBAAMoG,gBAAgB,GAAGH,KAAK,CAACrC,IAAN,CAAWyC,KAAX,CAAiB,GAAjB,CAAzB;AACA,wBAAMC,aAAa,GAAGL,KAAK,CAACrC,IAAN,CAAWyC,KAAX,CAAiB,GAAjB,EAAsBD,gBAAgB,CAAC7F,MAAjB,GAA0B,CAAhD,CAAtB;AACA,wBAAMgG,cAAc,GAAGJ,QAAQ,GAAG,GAAX,GAAiBG,aAAxC;AACAN,kBAAAA,QAAQ,CAACnB,YAAY,IAAIA,YAAY,CAACR,KAAb,GAAqB,sBAAtC,CAAR,GAAwE9B,QAAQ,CAACiE,SAAjF;AACAR,kBAAAA,QAAQ,CAACnB,YAAY,IAAIA,YAAY,CAACR,KAAb,GAAqB,0BAAtC,CAAR,GAA4E9B,QAAQ,CAACkE,aAArF;AACAT,kBAAAA,QAAQ,CAACnB,YAAY,IAAIA,YAAY,CAACR,KAAb,GAAqB,sBAAtC,CAAR,GAAwE4B,KAAK,CAACS,IAA9E;AACAV,kBAAAA,QAAQ,CAACnB,YAAY,IAAIA,YAAY,CAACR,KAAb,GAAqB,4BAAtC,CAAR,GAA8EkC,cAA9E;AACAP,kBAAAA,QAAQ,CAACnB,YAAY,IAAIA,YAAY,CAACR,KAA9B,CAAR,GAA+CtE,mBAAmB,CAACkG,KAAK,CAACrC,IAAN,CAAW+C,IAAX,EAAD,EAAoB,KAApB,CAAlE;AAEAhE,kBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAC7B,GAAGA,kBAAkB,CAAC,UAAD,CADQ;AAE7B,uBAAGqD;AAF0B,mBAAjC;AAIArD,kBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAC/B,GAAGA,kBAAkB,CAAC,YAAD,CADU;AAE/B,uBAAGqD;AAF4B,mBAAnC;AAIArD,kBAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuC4D,cAAvC;AACA5D,kBAAAA,kBAAkB,CAACN,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAf,CAAlB,GAAyDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAvE;AACH,iBArBqD,CAAtD;AAwBH;AACJ,aA/BI,MAiCA;AAED1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,IAAqDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CAAd,GACjDhC,cAAc,CAACwC,YAAY,CAACR,KAAd,CADmC,GACZ,EADzC;AAGA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCkC,YAAY,CAACR,KAA9C,IAAuD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAvD;;AACA,kBAAIQ,YAAY,CAACjB,IAAb,KAAsB,kBAA1B,EAA8C;AACzC;AACD;AACAjB,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,mCAAiBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAApD;AAChC,oCAAkBnE,SAAS,CAAC0G,MADI;AACG,oCAAkB;AADrB,iBAAhC;AAEAjE,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,mCAAiBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BkC,YAAY,CAACR,KAA5C,CAAtD;AAClC,oCAAkBnE,SAAS,CAAC0G,MADM;AACC,oCAAkB;AADnB,iBAAlC;AAEH,eAbA,CAcD;AACA;AACA;AACA;;AACH;;AACD,mBAAOjE,kBAAP;AACH,WAjKM,CAAP,CAHsC,CAsKtC;AACH,SAvKD,MAwKK;AACD,cAAIvB,SAAS,CAAC0D,SAAV,KAAwB,OAAxB,IAAkC1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA9D,EAAoF;AAChF,gBAAI1D,SAAS,CAAC0D,SAAV,KAAwB,oBAA5B,EAAkD;AAC9CnC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZJ,eAD8C,GAe1C,CAAC,CAfT;AAgBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AAEH,aAnBD,MAmBM;AACN1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9C;AACIb,gBAAAA,KAAK,EAAEnB,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb,KAD3C;AAEIa,gBAAAA,KAAK,EAAEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAF3C;AAGI;AACA;AACA;AACAU,gBAAAA,IAAI,EAAE3D,SAAS,CAAC4D,WANpB;AAOIC,gBAAAA,sBAAsB,EAAE7D,SAAS,CAAC6D,sBAPtC;AAQIC,gBAAAA,MAAM,EAAE9D,SAAS,CAAC8D,MARtB;AASI,iBAAC9D,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAjF,GAA+FvC,SAAS,KAAK,QAAd,GAC3FJ,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAFuF,GAI3F3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,GAAuCI,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCpC,IAAhC,CAAqCsC,QAArC,CAA8CnD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAA9H,CAAvC,GACI3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,IAA+H3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCjD,SAAS,CAAC+D,KAAV,CAAgBlD,IAAhB,CAAqBb,SAArB,KAAmC,SAAnC,GAA+C,oBAA/C,GAAsEA,SAAS,CAAC4D,WAAhH,CAA/H,GACM3C,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCb;AAflD,eAD8C,GAiB1C,CAAC,CAjBT;AAmBAb,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,CAAgCA,KAAlE,GAA0E,EAA9H;AACC,aAzC+E,CAyC/E;;;AACD,gBAAGjD,SAAS,CAACwC,IAAV,KAAmB,kBAAtB,EAAyC;AACrCjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,yCAAyBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,EAAgDb,KAA5G;AAChC,qCAAqBb,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,EAAgDA;AADrC,eAAhC;AAEA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,yCAAyBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,EAAgDb,KAA9G;AAClC,qCAAqBb,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,EAAgDA;AADnC,eAAlC;AAEH;AACJ,WAhDD,MAiDK,IAAIjD,SAAS,CAAC0D,SAAV,KAAwB,MAA5B,EAAoC;AACrC,gBAAI1D,SAAS,CAACgE,SAAd,EAAyB;AACrBzC,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkD,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAC9CxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5BhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADc,GACM,IAAIgB,IAAJ,EADP,EACmB9C,QADnB,CADe,GAG7C,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA5C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAGMF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EAP9C;AASA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH,aAXD,MAWO;AACH1B,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDjD,SAAS,CAACkE,eAAV,GAC9C,OAAOjD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAClFhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADoE,GAChD,IAAIgB,IAAJ,EAD+C,EACnC9C,QADmC,CAArF,GAEK,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA5C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAGMF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EAPA,GAQ9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAAkC,OAAOhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA3C,GAAsDxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACpHhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADsG,GAClF,IAAIgB,IAAJ,EADiF,EACrE9C,QADqE,CAArF,GAE7B,OAAOF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAArB,KAA2C,QAA5C,GACIxE,+BAA+B,CAACwC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC5B,IAAIgB,IAAJ,CAAShD,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAvB,CAD4B,GACgB,IAAIgB,IAAJ,EADjB,EAC6B9C,QAD7B,CADnC,GAGMF,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GACEhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADhB,GACoC,EAN9C,GAMmD,EAdvD;AAgBA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACH;;AACD,gBAAIjD,SAAS,CAACmE,QAAd,EAAwB;AACpB5C,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,IAAyDhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,GACrD;AAAEb,gBAAAA,KAAK,EAAEnB,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCb,KAAhD;AAAuDa,gBAAAA,KAAK,EAAEhC,cAAc,CAAE,KAAIjB,SAAS,CAACiD,KAAM,EAAtB,CAAd,CAAuCA;AAArG,eADqD,GAErD7B,eAAe,GAAGA,eAAH,GAAqB,CAAC,CAFzC;AAIAG,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAkC,KAAIvB,SAAS,CAACiD,KAAM,EAAtD,IAA2D1B,kBAAkB,CAAC,UAAD,CAAlB,CAAgC,KAAIvB,SAAS,CAACiD,KAAM,EAApD,CAA3D;AACH,aArCoC,CAsCvD;;;AACkB,gBAAGjD,SAAS,CAACwC,IAAV,KAAmB,6BAAtB,EAAoD;AAC5CjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,+CAA+BA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC;AAAlE,eAAhC;AACA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,+CAA+BA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,CAApE;AAAuH9B,gBAAAA;AAAvH,eAAlC;AACP;;AACD,gBAAGnB,SAAS,CAACwC,IAAV,KAAmB,iBAAtB,EAAwC;AACpCjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,mCAAmBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC;AAAtD,eAAhC;AACA1B,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,mCAAmBA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C;AAAxD,eAAlC;AACF;;AACFzB,YAAAA,QAAQ,CAACpB,IAAT,CAAcJ,SAAS,CAACiD,KAAxB;AACH,WAhDI,MAgDE,IAAIjD,SAAS,CAAC0D,SAAV,KAAwB,OAA5B,EAAqC;AACxCnC,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADgC,GACZ,EADtC;AAEA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AACA,gBAAI2B,QAAQ,GAAG,EAAf;;AACA,gBAAI,OAAO3D,cAAc,CAACjB,SAAS,IAAIA,SAAS,CAACiD,KAAxB,CAArB,KAAwD,QAA5D,EAAsE;AAClEhC,cAAAA,cAAc,CAACjB,SAAS,IAAIA,SAAS,CAACiD,KAAxB,CAAd,IAAgDhC,cAAc,CAACjB,SAAS,IAAIA,SAAS,CAACiD,KAAxB,CAAd,CAA6ChD,OAA7C,CAAqD,CAAC4E,KAAD,EAAQC,KAAR,KAAkB;AACnH,sBAAMC,QAAQ,GAAGnG,WAAW,EAA5B;AACA,sBAAMoG,gBAAgB,GAAGH,KAAK,CAACrC,IAAN,CAAWyC,KAAX,CAAiB,GAAjB,CAAzB;AACA,sBAAMC,aAAa,GAAGL,KAAK,CAACrC,IAAN,CAAWyC,KAAX,CAAiB,GAAjB,EAAsBD,gBAAgB,CAAC7F,MAAjB,GAA0B,CAAhD,CAAtB;AACA,sBAAMgG,cAAc,GAAGJ,QAAQ,GAAG,GAAX,GAAiBG,aAAxC;AACAN,gBAAAA,QAAQ,CAAC5E,SAAS,IAAIA,SAAS,CAACiD,KAAV,GAAkB,sBAAhC,CAAR,GAAkE9B,QAAQ,CAACiE,SAA3E;AACAR,gBAAAA,QAAQ,CAAC5E,SAAS,IAAIA,SAAS,CAACiD,KAAV,GAAkB,0BAAhC,CAAR,GAAsE9B,QAAQ,CAACkE,aAA/E;AACAT,gBAAAA,QAAQ,CAAC5E,SAAS,IAAIA,SAAS,CAACiD,KAAV,GAAkB,sBAAhC,CAAR,GAAkE4B,KAAK,CAACS,IAAxE;AACAV,gBAAAA,QAAQ,CAAC5E,SAAS,IAAIA,SAAS,CAACiD,KAAV,GAAkB,4BAAhC,CAAR,GAAwEkC,cAAxE;AACAP,gBAAAA,QAAQ,CAAC5E,SAAS,IAAIA,SAAS,CAACiD,KAAxB,CAAR,GAAyCtE,mBAAmB,CAACkG,KAAK,CAACrC,IAAN,CAAW+C,IAAX,EAAD,EAAoB,KAApB,CAA5D;AACAhE,gBAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,EAC7B,GAAGA,kBAAkB,CAAC,UAAD,CADQ;AAE7B,qBAAGqD;AAF0B,iBAAjC;AAIArD,gBAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,EAC/B,GAAGA,kBAAkB,CAAC,YAAD,CADU;AAE/B,qBAAGqD;AAF4B,iBAAnC;AAIArD,gBAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuC4D,cAAvC;AACA5D,gBAAAA,kBAAkB,CAACvB,SAAS,CAACiD,KAAX,CAAlB,GAAsChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAApD;AACH,eApB+C,CAAhD;AAsBH;AACJ,WA7BM,MA8BF;AACD1B,YAAAA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,IAAkDhC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CAAd,GAC9ChC,cAAc,CAACjB,SAAS,CAACiD,KAAX,CADgC,GACZ,EADtC;AAGA1B,YAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiCvB,SAAS,CAACiD,KAA3C,IAAoD1B,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;;AACA,gBAAIjD,SAAS,CAACwC,IAAV,KAAmB,kBAAvB,EAA2C;AACvC;AACA;AACAjB,cAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAgC,EAAC,GAAGA,kBAAkB,CAAC,UAAD,CAAtB;AAAmC,iCAAiBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAApD;AAChC,kCAAkBnE,SAAS,CAAC0G,MADI;AACG,kCAAkB;AADrB,eAAhC;AAEAjE,cAAAA,kBAAkB,CAAC,YAAD,CAAlB,GAAkC,EAAC,GAAGA,kBAAkB,CAAC,YAAD,CAAtB;AAAqC,iCAAiBA,kBAAkB,CAAC,UAAD,CAAlB,CAA+BvB,SAAS,CAACiD,KAAzC,CAAtD;AAClC,kCAAkBnE,SAAS,CAAC0G,MADM;AACC,kCAAkB;AADnB,eAAlC;AAEH;AACJ;;AACD,iBAAOjE,kBAAP;AACH;AAEJ,OA1TM,CAAP;AA4TH,KA7TM,CAAP;AA8TH,GA/Te,CAAhB;;AAgUA,MAAIoD,WAAJ,EAAiB;AACbpD,IAAAA,kBAAkB,CAAC,mBAAD,CAAlB,GAA0CZ,YAAY,CAAC,mBAAD,CAAZ,GAAoCA,YAAY,CAAC,mBAAD,CAAZ,CAAkCyB,KAAtE,GAA8E,CAAC,CAAzH;;AACA,QAAI3B,kBAAJ,EAAwB;AACpBc,MAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuCN,cAAc,CAAC,gBAAD,CAAd,CAAiCgC,KAAxE;AACA1B,MAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,gBAAjC,IAAqDA,kBAAkB,CAAC,gBAAD,CAAvE;AAEAA,MAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuCN,cAAc,CAAC,gBAAD,CAAd,GAAmCA,cAAc,CAAC,gBAAD,CAAd,CAAiCmB,KAApE,GAA4E,CAAC,CAApH;AACAb,MAAAA,kBAAkB,CAAC,qBAAD,CAAlB,GAA4CN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,CAAC,CAA7H;AACH,KAND,MAMO;AACHM,MAAAA,kBAAkB,CAAC,qBAAD,CAAlB,GAA4CZ,YAAY,CAAC,mBAAD,CAAZ,GAAoCA,YAAY,CAAC,mBAAD,CAAZ,CAAkC,MAAlC,EAA0CG,mBAA9E,GAAoG,CAAC,CAAjJ;AACH;AACJ,GAXD,MAWO;AACH,QAAIL,kBAAJ,EAAwB;AACpBc,MAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuCN,cAAc,CAAC,gBAAD,CAAd,CAAiCgC,KAAxE;AACA1B,MAAAA,kBAAkB,CAAC,YAAD,CAAlB,CAAiC,gBAAjC,IAAqDA,kBAAkB,CAAC,gBAAD,CAAvE;AAEAA,MAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuCN,cAAc,CAAC,gBAAD,CAAd,GAAmCA,cAAc,CAAC,gBAAD,CAAd,CAAiCmB,KAApE,GAA4E,CAAC,CAApH;AACAb,MAAAA,kBAAkB,CAAC,qBAAD,CAAlB,GAA4CN,cAAc,CAAC,qBAAD,CAAd,GAAwCA,cAAc,CAAC,qBAAD,CAAtD,GAAgF,CAAC,CAA7H;AACH,KAND,MAMO;AACH;AACAM,MAAAA,kBAAkB,CAAC,gBAAD,CAAlB,GAAuCN,cAAc,CAAC,gBAAD,CAAd,GAAmCA,cAAc,CAAC,gBAAD,CAAjD,GAAsE,CAAC,CAA9G;AACH;AACJ;;AACD,QAAMsD,KAAK,GAAG;AAAEhD,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAAd;AACA,SAAO+C,KAAP;AACH;AACD,OAAO,SAASkB,gBAAT,CAA0BnF,IAA1B,EAAgCoF,OAAhC,EAAyC;AAE5C,QAAMC,WAAW,GAAGD,OAAO,CAAC1C,MAAR,CAAe,UAAUT,CAAV,EAAa;AAC5C,WAAO,CAACjC,IAAI,CAACsF,IAAL,CAAU,UAAUC,CAAV,EAAa;AAC3B,aAAOtD,CAAC,CAAC,WAAD,CAAD,KAAmBsD,CAAC,CAAC,WAAD,CAApB,IAAsCA,CAAC,CAAC,oBAAD,CAAD,KAA4B9G,iBAAiB,CAAC+G,MAA9C,IAAwDD,CAAC,CAAC,oBAAD,CAAD,KAA4B9G,iBAAiB,CAACgH,SAAnJ;AACH,KAFO,CAAR;AAGH,GAJmB,CAApB;AAKA,SAAOJ,WAAW,CAACxG,MAAZ,GAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAAxC;AACH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAAS6G,sBAAT,CAAgC/E,cAAhC,EAAgD;AAEnD,MAAIgF,yBAAyB,GAAG,EAAhC;AACAA,EAAAA,yBAAyB,CAAC,aAAD,CAAzB,GAA2ChF,cAAc,CAACiF,WAAf,GAA6BjF,cAAc,CAACiF,WAAf,CAA2B9D,KAAxD,GAAgE,CAAC,CAA5G;AACA6D,EAAAA,yBAAyB,CAAC,YAAD,CAAzB,GAA0ChF,cAAc,CAACkF,UAAf,GAA4BlF,cAAc,CAACkF,UAAf,CAA0B/D,KAAtD,GAA8D,CAAC,CAAzG;AACA6D,EAAAA,yBAAyB,CAAC,eAAD,CAAzB,GAA6ChF,cAAc,CAACmF,aAAf,GAA+BnF,cAAc,CAACmF,aAAf,CAA6BhE,KAA5D,GAAoE,CAAC,CAAlH;AACA6D,EAAAA,yBAAyB,CAAC,kBAAD,CAAzB,GAAgDhF,cAAc,CAACoF,gBAAf,GAAkCpF,cAAc,CAACoF,gBAAjD,GAAoE,EAApH;AACAJ,EAAAA,yBAAyB,CAAC,uBAAD,CAAzB,GAAqDhF,cAAc,CAACqF,qBAAf,GAAuCrF,cAAc,CAACqF,qBAAf,CAAqClE,KAA5E,GAAoF,CAAC,CAA1I;AACA6D,EAAAA,yBAAyB,CAAC,eAAD,CAAzB,GAA6ChF,cAAc,CAAC,eAAD,CAAd,GAAkCvC,eAAe,CAACuC,cAAc,CAAC,eAAD,CAAf,EAAkC,KAAlC,CAAjD,GAA4F,MAAzI;AACAgF,EAAAA,yBAAyB,CAAC,eAAD,CAAzB,GAA6ChF,cAAc,CAAC,eAAD,CAAd,GAAkCvC,eAAe,CAACuC,cAAc,CAAC,eAAD,CAAf,EAAkC,KAAlC,CAAjD,GAA4F,MAAzI;AACAgF,EAAAA,yBAAyB,CAAC,iBAAD,CAAzB,GAA+ChF,cAAc,CAACsF,eAAf,GAAiCtF,cAAc,CAACsF,eAAf,CAA+BnE,KAAhE,GAAwE,CAAC,CAAxH;AACA6D,EAAAA,yBAAyB,CAAC,iBAAD,CAAzB,GAA+ChF,cAAc,CAACuF,eAAf,GAAiCvF,cAAc,CAACuF,eAAf,CAA+BvD,KAAhE,GAAwE,CAAC,CAAxH;AACAgD,EAAAA,yBAAyB,CAAC,oBAAD,CAAzB,GAAkDhF,cAAc,CAACwF,kBAAf,GAAoCxF,cAAc,CAACwF,kBAAf,CAAkCrE,KAAtE,GAA8E,CAAC,CAAjI;AACA6D,EAAAA,yBAAyB,CAAC,UAAD,CAAzB,GAAwChF,cAAc,CAACyF,QAAf,GAA0BzF,cAAc,CAACyF,QAAzC,GAAoD,EAA5F;AACAT,EAAAA,yBAAyB,CAAC,UAAD,CAAzB,GAAwChF,cAAc,CAAC0F,QAAf,GAA0B1F,cAAc,CAAC0F,QAAzC,GAAoD,EAA5F;AACAV,EAAAA,yBAAyB,CAAC,QAAD,CAAzB,GAAsChF,cAAc,CAAC2F,MAAf,GAAwB3F,cAAc,CAAC2F,MAAvC,GAAgD,EAAtF;AACAX,EAAAA,yBAAyB,CAAC,cAAD,CAAzB,GAA4ChF,cAAc,CAAC4F,YAAf,GAA8B5F,cAAc,CAAC4F,YAAf,CAA4BzE,KAA1D,GAAkE,CAAC,CAA/G;AACA6D,EAAAA,yBAAyB,CAAC,WAAD,CAAzB,GAAyChF,cAAc,CAAC6F,SAAf,GAA2B7F,cAAc,CAAC6F,SAA1C,GAAsD,GAA/F;AACAb,EAAAA,yBAAyB,CAAC,gBAAD,CAAzB,GAA8ChF,cAAc,CAAC8F,cAAf,GAAgC9F,cAAc,CAAC8F,cAAf,CAA8B3E,KAA9D,GAAsE,CAAC,CAArH;AACA6D,EAAAA,yBAAyB,CAAC,WAAD,CAAzB,GAAyChF,cAAc,CAAC+F,SAAf,GAA2B/F,cAAc,CAAC+F,SAAf,CAAyB5E,KAApD,GAA4D,CAAC,CAAtG;AACA6D,EAAAA,yBAAyB,CAAC,WAAD,CAAzB,GAAyChF,cAAc,CAACgG,SAAf,GAA2BhG,cAAc,CAACgG,SAA1C,GAAsD,GAA/F;AACAhB,EAAAA,yBAAyB,CAAC,mBAAD,CAAzB,GAAiDhF,cAAc,CAACiG,iBAAf,GAAmCjG,cAAc,CAACiG,iBAAf,CAAiC9E,KAApE,GAA4E,CAAC,CAA9H;AACA6D,EAAAA,yBAAyB,CAAC,UAAD,CAAzB,GAAwChF,cAAc,CAACkG,QAAf,GAA0BlG,cAAc,CAACkG,QAAzC,GAAoD,IAA5F;AACAlB,EAAAA,yBAAyB,CAAC,gBAAD,CAAzB,GAA8ChF,cAAc,CAACmG,cAAf,GAAgCnG,cAAc,CAACmG,cAA/C,GAAgE,IAA9G;AACAnB,EAAAA,yBAAyB,CAAC,oBAAD,CAAzB,GAAkDhF,cAAc,CAACoG,kBAAf,GAAoCpG,cAAc,CAACoG,kBAAnD,GAAwE,IAA1H;AAEA,SAAOpB,yBAAP;AACH","sourcesContent":["\r\nimport { intl } from '../../components/App';\r\nimport { convertDateTimetoStringDBFormat, formatInputDate, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\r\nimport { SampleType, orderType, transactionStatus } from '../../components/Enumeration';\r\nexport function fnCheckBatchComponentMandatory(Components) {\r\n    // Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((\r\n            Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n\r\n        } else if (Components[i].nnoofcontainer && (Components[i].nnoofcontainer).length <= 0) {\r\n            // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERNOOFCONTFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\r\n    //Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\r\n            //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        }\r\n        //return null;\r\n        //});\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkDuplicateComponentandManufLot(Components) {\r\n    let copiedArrays = [...Components];\r\n    let DuplicateComponent = [];\r\n    let bReturnFlag = true;\r\n    Components.map(component => {\r\n        copiedArrays.forEach(componentArray => {\r\n            (component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno &&\r\n                component.scomponentname === componentArray.scomponentname) && DuplicateComponent.push(component);\r\n        })\r\n        return null;\r\n    });\r\n    if (DuplicateComponent.length > 0) {\r\n        let smanuflotno = DuplicateComponent[0].smanuflotno;\r\n        let scomponentname = DuplicateComponent[0].scomponentname;\r\n        // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\r\n        bReturnFlag = intl.formatMessage({ id: 'IDS_DUPLICATEMANFNO' }) + \" \" + smanuflotno + \" \" + intl.formatMessage({ id: 'IDS_FOR' }) + \" \" + scomponentname;\r\n    }\r\n    return bReturnFlag;\r\n}\r\nexport function TestListManipulation(Components, Test) {\r\n    //console.log(\"Test in component\");\r\n    let ArrayList = [];\r\n    Components.map(component => {\r\n        return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\r\n    });\r\n\r\n    //    ArrayList.map(item=>{\r\n    //        item['jsondata']={}\r\n    //       // if(item==='nsectioncode'||item==='nmethodcode'){\r\n    //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\r\n    //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\r\n    //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\r\n    //         item['jsondata']['ntestcode']=item['ntestcode']\r\n    //         item['jsondata']['ncost']=item['ncost']\r\n    //       // }\r\n    //    })\r\n    return ArrayList ? ArrayList : [];\r\n}\r\n\r\nexport function SubSample(Components, specBasedComponent, nneedsubsample, selectedSpec) {\r\n    //  let ArrayList = [];\r\n    if (nneedsubsample) {\r\n        if (specBasedComponent) {\r\n            Components.map(component => {\r\n                // if(component===\"ncomponentcode\"){\r\n                return component[\"ncomponentcode\"]\r\n                // }\r\n            });\r\n            return Components;\r\n        } else {\r\n            Components.map(component => {\r\n                // if(component===\"ncomponentcode\"){\r\n                return component[\"ncomponentcode\"] = -1;\r\n                // }\r\n            });\r\n            return Components;\r\n        }\r\n    } else {\r\n        Components.map(component => {\r\n            // if(component===\"ncomponentcode\"){\r\n            component[\"ncomponentcode\"] = -1\r\n            component[\"nspecsampletypecode\"] = selectedSpec.nallottedspeccode.item.nspecsampletypecode\r\n            return component;\r\n            // }\r\n        });\r\n        return Components;\r\n    }\r\n}\r\n\r\nexport function getRegistration(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode||-1;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode||-1;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] =masterData.RealDesignTemplateMappingValue && masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode||-1;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] =masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypeversioncode||-1;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\r\n\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.STABILITY) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n        const protocolLabelName = comboComponents.filter(x => x.name === \"protocol id\");\r\n        sampleRegistration[\"nprotocolcode\"]  = selectedRecord[protocolLabelName[0].label] &&\r\n        selectedRecord[protocolLabelName[0].label].value||-1;\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n        sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n    }\r\n    \r\n    //console.log(\"save registration:\", selectedRecord);\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label\r\n                                        // pkey: componentrow.valuemember,\r\n                                        // nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        // source: componentrow.source,\r\n                                        // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                        // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                        // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :\r\n                                        //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                        //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :  selectedRecord[componentrow.label].vale\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label,\r\n                                        pkey: componentrow.valuemember,\r\n                                        nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        source: componentrow.source,\r\n                                        [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                            :\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                    : selectedRecord[componentrow.label].value\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            }\r\n                            //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n                            if (componentrow.name === 'manualorderid') {\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                    sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n                                if (operation === 'update') {\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                                else {\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label]\r\n                                                : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\r\n                        if (component.inputtype === \"predefineddropdown\") {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    // pkey: component.valuemember,\r\n                                    // nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    // source: component.source,\r\n                                    // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                    // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                    //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :\r\n                                    //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                    //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :  selectedRecord[component.label].vale\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    pkey: component.valuemember,\r\n                                    nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    source: component.source,\r\n                                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        :\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                : selectedRecord[component.label].value\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        }\r\n                        if (component.name === 'manualorderid') {\r\n                            sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n\r\n                            if (operation === 'update') {\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                            }\r\n                            else {\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spassportno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code']\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No']\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            console.log(typeof selectedRecord[component.label] === \"object\")\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                    selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n        sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n\r\n        sampleRegistration[\"jsondata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsonuidata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsondata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n       \r\n    }\r\n\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n\r\n\r\nexport function getStabilityStudyPlan(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegTypeValue.nregtypecode||-1;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypecode||-1;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] =masterData.ndesigntemplatemappingcode && masterData.ndesigntemplatemappingcode||-1;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] =masterData.RealRegTypeValue && masterData.RealRegSubTypeValue.nregsubtypeversioncode||-1;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.STABILITY) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n        const protocolLabelName = comboComponents.filter(x => x.name === \"protocol id\");\r\n        sampleRegistration[\"nprotocolcode\"]  = selectedRecord[protocolLabelName[0].label] &&\r\n        selectedRecord[protocolLabelName[0].label].value||-1;\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n        sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n    }\r\n    \r\n    //console.log(\"save registration:\", selectedRecord);\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label\r\n                                        // pkey: componentrow.valuemember,\r\n                                        // nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        // source: componentrow.source,\r\n                                        // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                        // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                        // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :\r\n                                        //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                        //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :  selectedRecord[componentrow.label].vale\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label,\r\n                                        pkey: componentrow.valuemember,\r\n                                        nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        source: componentrow.source,\r\n                                        [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                            :\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                    : selectedRecord[componentrow.label].value\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            }\r\n                            //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n                            if (componentrow.name === 'manualorderid') {\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                    sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n                                if (operation === 'update') {\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                                else {\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label]\r\n                                                : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\r\n                        if (component.inputtype === \"predefineddropdown\") {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    // pkey: component.valuemember,\r\n                                    // nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    // source: component.source,\r\n                                    // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                    // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                    //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :\r\n                                    //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                    //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :  selectedRecord[component.label].vale\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    pkey: component.valuemember,\r\n                                    nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    source: component.source,\r\n                                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        :\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                : selectedRecord[component.label].value\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        }\r\n                        if (component.name === 'manualorderid') {\r\n                            sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n\r\n                            if (operation === 'update') {\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                            }\r\n                            else {\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spassportno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code']\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No']\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            console.log(typeof selectedRecord[component.label] === \"object\")\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                    selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n        sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n\r\n        sampleRegistration[\"jsondata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsonuidata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsondata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n       \r\n    }\r\n\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\nexport function getRegistrationScheduler(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue ? masterData.RealSampleTypeValue.nsampletypecode : 1;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue ? masterData.RealRegTypeValue.nregtypecode : 1;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypecode : 1;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue ?\r\n        masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode : masterData.ndesigntemplatemappingcode;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue ?\r\n        masterData.RealRegSubTypeValue.nregsubtypeversioncode : masterData.nregsubtypeversioncode ? masterData.nregsubtypeversioncode : -1;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample.ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample.nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n\r\n\r\n    if (sampleRegistration[\"nsampletypecode\"] === 1) {\r\n\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === 2) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === 3) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n\r\n\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n// export function getComponentListfromUnwantedAttr(Components) {\r\n//     Components.map(component => {\r\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\r\n//         //     component.ncomponentcode = component.ncomponentcode.value;\r\n//         // }\r\n\r\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\r\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\r\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\r\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\r\n\r\n\r\n//         return component;\r\n//     });\r\n//     return Components;\r\n// }\r\n\r\n\r\nexport function getRegistrationSubSample(selectedRecord,\r\n    templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    // let dataGridList={}\r\n    // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\r\n    // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    //  let componentrowlabel = ''\r\n                    // let componentrowvalue = ''\r\n                    return component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\"|| componentrow.inputtype === \"predefineddropdown\") {\r\n                            if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label\r\n                                        // pkey: componentrow.valuemember,\r\n                                        // nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        // source: componentrow.source,\r\n                                        // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                        // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                        // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :\r\n                                        //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:\r\n                                        //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :  selectedRecord[componentrow.label].vale\r\n \r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n \r\n                            }else{\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                {\r\n                                    value: selectedRecord[componentrow.label].value,\r\n                                    label: selectedRecord[componentrow.label].label,\r\n                                    //   pkey: operation && operation==='update'?\r\n                                    //         selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.pkey\r\n                                    //         :selectedRecord[componentrow.label].pkey\r\n                                    //         :selectedRecord[componentrow.label].item.pkey,\r\n                                    pkey: componentrow.valuemember,\r\n                                    nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                    source: componentrow.source,\r\n                                    [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                        selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                            selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :\r\n                                        selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                            selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                : selectedRecord[componentrow.label].value\r\n                                    // nquerybuildertablecode:operation&&operation==='update'?selectedRecord[componentrow.label].item ?selectedRecord[componentrow.label].item.nquerybuildertablecode :selectedRecord[componentrow.label].nquerybuildertablecode :selectedRecord[componentrow.label].item.nquerybuildertablecode,\r\n                                    // source:operation&&operation==='update'?selectedRecord[componentrow.label].item?selectedRecord[componentrow.label].item.source: selectedRecord[componentrow.label].source:selectedRecord[componentrow.label].item.source\r\n                                } : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n                            }// if (componentrow.mandatory || selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\r\n                            // }\r\n\t\t\t\t\t\t\t// ALPD-3575\r\n                            if(componentrow.name === \"sampleappearance\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value, \r\n                                'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\r\n                                'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label}\r\n                            }\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n\t\t\t\t\t\t\t// ALPD-3575\r\n                            if(componentrow.name === \"subsamplecollectiondatetime\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][componentrow.label]}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][componentrow.label], userInfo}\r\n                        }\r\n                        if(componentrow.name === \"Occurrence Date\"){\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'Occurrence Date': sampleRegistration[\"jsondata\"][componentrow.label]}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'Occurrence Date': sampleRegistration[\"jsonuidata\"][componentrow.label]}\r\n                         }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n                        else if (componentrow.inputtype === \"files\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            let tempData = {}\r\n                            if (typeof selectedRecord[componentrow && componentrow.label] === \"object\") {\r\n                                selectedRecord[componentrow && componentrow.label] && selectedRecord[componentrow && componentrow.label].forEach((item1, index) => {\r\n                                    const fileName = create_UUID();\r\n                                    const splittedFileName = item1.name.split('.');\r\n                                    const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                                    const uniquefilename = fileName + '.' + fileExtension;\r\n                                    tempData[componentrow && componentrow.label + '_susername_subSample'] = userInfo.susername\r\n                                    tempData[componentrow && componentrow.label + '_suserrolename_subSample'] = userInfo.suserrolename\r\n                                    tempData[componentrow && componentrow.label + '_nfilesize_subSample'] = item1.size\r\n                                    tempData[componentrow && componentrow.label + '_ssystemfilename_subSample'] = uniquefilename\r\n                                    tempData[componentrow && componentrow.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n\r\n                                    sampleRegistration[\"jsondata\"] = {\r\n                                        ...sampleRegistration[\"jsondata\"],\r\n                                        ...tempData\r\n                                    };\r\n                                    sampleRegistration[\"jsonuidata\"] = {\r\n                                        ...sampleRegistration[\"jsonuidata\"],\r\n                                        ...tempData\r\n                                    };\r\n                                    sampleRegistration['uniquefilename'] = uniquefilename;\r\n                                    sampleRegistration[selectedRecord[componentrow.label]] = selectedRecord[componentrow.label]\r\n                                }\r\n\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                        else {\r\n\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            if (componentrow.name === 'externalsampleid') {\r\n                                 //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                                //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\r\n                                'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\r\n                                'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                            }\r\n                            // if (selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\r\n                            // }\r\n                        }\r\n                        return sampleRegistration;\r\n                    })\r\n\r\n                    //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\"|| component.inputtype === \"predefineddropdown\") {\r\n                        if (component.inputtype === \"predefineddropdown\") {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    // pkey: component.valuemember,\r\n                                    // nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    // source: component.source,\r\n                                    // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                    // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                    //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :\r\n                                    //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:\r\n                                    //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :  selectedRecord[component.label].vale\r\n \r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n \r\n                        } else{\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            {\r\n                                value: selectedRecord[component.label].value,\r\n                                label: selectedRecord[component.label].label,\r\n                                //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\r\n                                //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\r\n                                //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\r\n                                pkey: component.valuemember,\r\n                                nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                source: component.source,\r\n                                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                    selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                        selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    :\r\n                                    selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                        selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                            : selectedRecord[component.label].value\r\n                            } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                        }// ALPD-3575\r\n                        if(component.name === \"sampleappearance\"){\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value, \r\n                            'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\r\n                            'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label}\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n\t\t\t\t\t\t// ALPD-3575\r\n                        if(component.name === \"subsamplecollectiondatetime\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][component.label]}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][component.label], userInfo}\r\n                        }\r\n                        if(component.name === \"Occurrence Date\"){\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'Occurrence Date': sampleRegistration[\"jsondata\"][component.label]}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'Occurrence Date': sampleRegistration[\"jsonuidata\"][component.label]}\r\n                         }\r\n                        dateList.push(component.label)\r\n                    } else if (component.inputtype === \"files\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        let tempData = {}\r\n                        if (typeof selectedRecord[component && component.label] === \"object\") {\r\n                            selectedRecord[component && component.label] && selectedRecord[component && component.label].forEach((item1, index) => {\r\n                                const fileName = create_UUID();\r\n                                const splittedFileName = item1.name.split('.');\r\n                                const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                                const uniquefilename = fileName + '.' + fileExtension;\r\n                                tempData[component && component.label + '_susername_subSample'] = userInfo.susername\r\n                                tempData[component && component.label + '_suserrolename_subSample'] = userInfo.suserrolename\r\n                                tempData[component && component.label + '_nfilesize_subSample'] = item1.size\r\n                                tempData[component && component.label + '_ssystemfilename_subSample'] = uniquefilename\r\n                                tempData[component && component.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n                                sampleRegistration[\"jsondata\"] = {\r\n                                    ...sampleRegistration[\"jsondata\"],\r\n                                    ...tempData\r\n                                };\r\n                                sampleRegistration[\"jsonuidata\"] = {\r\n                                    ...sampleRegistration[\"jsonuidata\"],\r\n                                    ...tempData\r\n                                };\r\n                                sampleRegistration['uniquefilename'] = uniquefilename;\r\n                                sampleRegistration[component.label] = selectedRecord[component.label]\r\n                            }\r\n                            )\r\n                        }\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        if (component.name === 'externalsampleid') {\r\n                            //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\r\n                            //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\r\n                            'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\r\n                            'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                        }\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    if (preRegPopUp) {\r\n        sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n        }\r\n    } else {\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\r\n        }\r\n    }\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\nexport function checkTestPresent(Test, Samples) {\r\n\r\n    const filterArray = Samples.filter(function (x) {\r\n        return !Test.some(function (y) {\r\n            return x[\"npreregno\"] === y[\"npreregno\"] && (y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED)\r\n        });\r\n    });\r\n    return filterArray.length > 0 ? false : true\r\n}\r\n\r\n// //added by perumalraj on 23/12/2020\r\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\r\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n\r\n//     const filterArray = firstArray.filter(function (x) {\r\n//         return secondArray.some(function (y) {\r\n//             return x[PrimaryKey] === y[PrimaryKey]\r\n//         })\r\n//     });\r\n//     return filterArray;\r\n// }\r\n\r\nexport function getRegistrationRoutine(selectedRecord) {\r\n\r\n    let sampleRegistrationRoutine = {};\r\n    sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\r\n    sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\r\n    sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\r\n    sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\r\n    sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\r\n    sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\r\n    sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\r\n    sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\r\n    sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\r\n    sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\r\n    sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\r\n    sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\r\n    sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\r\n    sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\r\n    sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\r\n    sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\r\n    sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\r\n    sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\r\n    sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\r\n    sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\r\n\r\n    return sampleRegistrationRoutine;\r\n}"]},"metadata":{},"sourceType":"module"}