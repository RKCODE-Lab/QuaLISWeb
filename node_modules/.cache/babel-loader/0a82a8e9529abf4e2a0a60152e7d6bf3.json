{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{intl}from'../../components/App';import{MediaHeader,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import TestPopOver from'./TestPopOver';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{// getPredefinedData,\nupdateStore}from'../../actions';import{connect}from'react-redux';//const ResultEntryInstrumentForm = (this.props) => {\nvar ResultEntryTaskForm=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryTaskForm,_React$Component);var _super=_createSuper(ResultEntryTaskForm);function ResultEntryTaskForm(props){var _this;_classCallCheck(this,ResultEntryTaskForm);_this=_super.call(this,props);_this.onInputChange=function(Data,name){var selectedRecordTaskForm=_this.state.selectedRecordTaskForm||[];selectedRecordTaskForm[name]=Data.target.value;//Sync child Data with parent Component\n_this.props.onInputChange(Data,name);_this.setState({selectedRecordTaskForm:selectedRecordTaskForm});};_this.onNumericChange=function(numericData,numericName){var selectedRecordTaskForm=_this.state.selectedRecordTaskForm||[];if(numericData){if(numericName!==\"scomments\"){selectedRecordTaskForm[numericName]=numericData;}else{selectedRecordTaskForm[numericName]=numericData.target.value;}}else{selectedRecordTaskForm[numericName]=\"\";}//Sync child Data with parent Component\n_this.props.onNumericChange(numericData,numericName);_this.setState({selectedRecordTaskForm:selectedRecordTaskForm});};_this.state={selectedRecordTaskForm:_this.props.selectedRecordTaskForm};return _this;}_createClass(ResultEntryTaskForm,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.selectedRecordTaskForm!==previousProps.selectedRecordTaskForm){this.setState({selectedRecordTaskForm:this.props.selectedRecordTaskForm});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{isTaskInitialRender:false}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;var stestsynonyms=this.state.selectedRecordTaskForm.stestsynonym?this.state.selectedRecordTaskForm.stestsynonym.split(\",\"):[];//   this.props.selectedRecord.stestsynonym ? this.props.selectedRecord.stestsynonym.split(\",\") : []\nvar message=\"\".concat(stestsynonyms.length,\" \").concat(this.props.intl.formatMessage({id:\"IDS_TESTS\"}),\" \").concat(this.props.intl.formatMessage({id:\"IDS_SELECTED\"}));return/*#__PURE__*/React.createElement(React.Fragment,null,Object.values(this.state.selectedRecordTaskForm).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},stestsynonyms.length===1?\"\".concat(this.props.intl.formatMessage({id:\"IDS_TEST\"}),\": \").concat(stestsynonyms[0]):/*#__PURE__*/ // <span \n//     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\n//     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\n//     title={stestsynonyms}>\n//     {stestsynonyms.length}{\" \"}\n//     {this.props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\n//     {this.props.intl.formatMessage({id:\"IDS_SELECTED\"})}\n// </span>\nReact.createElement(TestPopOver,{stringList:stestsynonyms,message:message}))))):\"\",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\"// placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\n,isMandatory:true,label:this.props.intl.formatMessage({id:\"IDS_PREANALYSISTIME\"}),value:Object.values(this.state.selectedRecordTaskForm).length>0?this.state.selectedRecordTaskForm.spreanalysistime:\"\",strict:true,maxLength:6,noStyle:true,required:true,className:\"form-control\",onChange:function onChange(event){return _this2.onNumericChange(event,\"spreanalysistime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},this.props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\n,label:this.props.intl.formatMessage({id:\"IDS_PREPARATIONTIME\"}),value:Object.values(this.state.selectedRecordTaskForm).length>0?this.state.selectedRecordTaskForm.spreparationtime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return _this2.onNumericChange(event,\"spreparationtime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},this.props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\n,label:this.props.intl.formatMessage({id:\"IDS_ANALYSISTIME\"}),value:Object.values(this.state.selectedRecordTaskForm).length>0?this.state.selectedRecordTaskForm.sanalysistime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return _this2.onNumericChange(event,\"sanalysistime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},this.props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\n,label:this.props.intl.formatMessage({id:\"IDS_MISCTIME\"}),value:Object.values(this.state.selectedRecordTaskForm).length>0?this.state.selectedRecordTaskForm.smisctime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return _this2.onNumericChange(event,\"smisctime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},this.props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormTextarea,{name:\"Task Procedure\",placeholder:intl.formatMessage({id:\"IDS_TASKPROCEDURE\"}),label:intl.formatMessage({id:\"IDS_TASKPROCEDURE\"}),type:\"text\"// defaultValue={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\n//     this.state.selectedRecordTaskForm!==undefined ? this.state.selectedRecordTaskForm.staskprocedure : \"\"}\n,value:Object.values(this.state.selectedRecordTaskForm).length>0&&this.state.selectedRecordTaskForm.staskprocedure!==undefined?this.state.selectedRecordTaskForm.staskprocedure:\"\",isMandatory:false,required:false,maxLength:1000,onChange:function onChange(event){return _this2.onInputChange(event,\"staskprocedure\");}})),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormTextarea,{name:\"Result\",placeholder:intl.formatMessage({id:\"IDS_COMMENTS\"}),label:intl.formatMessage({id:\"IDS_COMMENTS\"}),type:\"text\"// defaultValue={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\n//     this.state.selectedRecordTaskForm!==undefined ? this.state.selectedRecordTaskForm.scomments : \"\"}\n,value:Object.values(this.state.selectedRecordTaskForm).length>0&&this.state.selectedRecordTaskForm.scomments!==undefined?this.state.selectedRecordTaskForm.scomments:\"\",isMandatory:false,required:false,maxLength:100,onChange:function onChange(event){return _this2.onInputChange(event,\"scomments\");}}))));}}]);return ResultEntryTaskForm;}(React.Component);// export default injectIntl(ResultEntryTaskForm);\nexport default connect(null,{updateStore:updateStore})(injectIntl(ResultEntryTaskForm));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskForm.jsx"],"names":["React","Row","Col","injectIntl","intl","MediaHeader","MediaLabel","ListWrapper","FormNumericInput","FormTextarea","TestPopOver","DEFAULT_RETURN","updateStore","connect","ResultEntryTaskForm","props","onInputChange","Data","name","selectedRecordTaskForm","state","target","value","setState","onNumericChange","numericData","numericName","previousProps","updateInfo","typeName","data","isTaskInitialRender","stestsynonyms","stestsynonym","split","message","length","formatMessage","id","Object","values","spreanalysistime","event","spreparationtime","sanalysistime","smisctime","staskprocedure","undefined","scomments","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { intl } from '../../components/App';\r\nimport { MediaHeader, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport TestPopOver from './TestPopOver';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    // getPredefinedData,\r\n    updateStore\r\n} from '../../actions';\r\nimport { connect } from 'react-redux';\r\n//const ResultEntryInstrumentForm = (this.props) => {\r\nclass ResultEntryTaskForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            selectedRecordTaskForm: this.props.selectedRecordTaskForm \r\n        }\r\n\r\n    } \r\n       componentDidUpdate(previousProps ) { \r\n        if(this.props.selectedRecordTaskForm!==previousProps.selectedRecordTaskForm ){ \r\n            this.setState({ selectedRecordTaskForm:this.props.selectedRecordTaskForm });\r\n        } \r\n    }\r\n    componentWillUnmount() { \r\n          const updateInfo = {\r\n              typeName: DEFAULT_RETURN, \r\n              data: { isTaskInitialRender: false  } \r\n          }\r\n          this.props.updateStore(updateInfo);\r\n      }\r\n    onInputChange = (Data, name) => {\r\n        const selectedRecordTaskForm = this.state.selectedRecordTaskForm || [];\r\n        selectedRecordTaskForm[name] = Data.target.value;\r\n        //Sync child Data with parent Component\r\n        this.props.onInputChange(Data, name)\r\n        this.setState({ selectedRecordTaskForm });\r\n    }\r\n    onNumericChange = (numericData, numericName) => {\r\n        const selectedRecordTaskForm = this.state.selectedRecordTaskForm || [];\r\n        if (numericData) {\r\n            if (numericName !== \"scomments\") {\r\n                selectedRecordTaskForm[numericName] = numericData;\r\n            } else {\r\n                selectedRecordTaskForm[numericName] = numericData.target.value;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecordTaskForm[numericName] = \"\";\r\n        }\r\n        //Sync child Data with parent Component\r\n        this.props.onNumericChange(numericData, numericName)\r\n\r\n        this.setState({ selectedRecordTaskForm });\r\n    }\r\n    render() {\r\n        let stestsynonyms =this.state.selectedRecordTaskForm.stestsynonym ? this.state.selectedRecordTaskForm.stestsynonym.split(\",\") : []\r\n      //   this.props.selectedRecord.stestsynonym ? this.props.selectedRecord.stestsynonym.split(\",\") : []\r\n\r\n        let message = `${stestsynonyms.length} ${this.props.intl.formatMessage({ id: \"IDS_TESTS\" })} ${this.props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n\r\n        return (\r\n            <>\r\n\r\n                {Object.values(this.state.selectedRecordTaskForm).length > 0 ?\r\n                    <div>\r\n                        <Row className=\"mb-4\">\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>\r\n                                    {stestsynonyms.length === 1 ?\r\n                                        `${this.props.intl.formatMessage({ id: \"IDS_TEST\" })}: ${stestsynonyms[0]}` :\r\n                                        // <span \r\n                                        //     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\r\n                                        //     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\r\n                                        //     title={stestsynonyms}>\r\n                                        //     {stestsynonyms.length}{\" \"}\r\n                                        //     {this.props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\r\n                                        //     {this.props.intl.formatMessage({id:\"IDS_SELECTED\"})}\r\n                                        // </span>\r\n                                        <TestPopOver stringList={stestsynonyms} message={message}></TestPopOver>\r\n\r\n                                    }\r\n                                </MediaHeader>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    : \"\"}\r\n\r\n                <Row>\r\n\r\n                    <Col md={8}>\r\n                        <FormNumericInput\r\n                            name=\"numeric\"\r\n                            type=\"number\"\r\n                            // placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                            isMandatory={true}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                            value={Object.values(this.state.selectedRecordTaskForm).length > 0 ? this.state.selectedRecordTaskForm.spreanalysistime : \"\"}\r\n                            strict={true}\r\n                            maxLength={6}\r\n                            noStyle={true}\r\n                            required={true}\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.onNumericChange(event, \"spreanalysistime\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        {/* {this.this.props.selectedResultGrade.length > 0 ? */}\r\n                        <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                            {this.props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                        {/* : \"\"} */}\r\n                    </Col>\r\n\r\n                    <Col md={8}>\r\n                        <FormNumericInput\r\n                            name=\"numeric\"\r\n                            type=\"number\"\r\n                            isMandatory={true}\r\n                            // placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                            value={Object.values(this.state.selectedRecordTaskForm).length > 0 ? this.state.selectedRecordTaskForm.spreparationtime : \"\"}\r\n                            strict={true}\r\n                            maxLength={6}\r\n                            noStyle={true}\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.onNumericChange(event, \"spreparationtime\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        {/* {this.this.props.selectedResultGrade.length > 0 ? */}\r\n                        <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                            {this.props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                        {/* : \"\"} */}\r\n                    </Col>\r\n\r\n                    <Col md={8}>\r\n                        <FormNumericInput\r\n                            name=\"numeric\"\r\n                            type=\"number\"\r\n                            isMandatory={true}\r\n                            // placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                            value={Object.values(this.state.selectedRecordTaskForm).length > 0 ? this.state.selectedRecordTaskForm.sanalysistime : \"\"}\r\n                            strict={true}\r\n                            maxLength={6}\r\n                            noStyle={true}\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.onNumericChange(event, \"sanalysistime\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        {/* {this.this.props.selectedResultGrade.length > 0 ? */}\r\n                        <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                            {this.props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                        {/* : \"\"} */}\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <FormNumericInput\r\n                            name=\"numeric\"\r\n                            type=\"number\"\r\n                            isMandatory={true}\r\n                            // placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                            value={Object.values(this.state.selectedRecordTaskForm).length > 0 ? this.state.selectedRecordTaskForm.smisctime : \"\"}\r\n                            strict={true}\r\n                            maxLength={6}\r\n                            noStyle={true}\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.onNumericChange(event, \"smisctime\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        {/* {this.this.props.selectedResultGrade.length > 0 ? */}\r\n                        <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                            {this.props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                        {/* : \"\"} */}\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <FormTextarea\r\n                            name={\"Task Procedure\"}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_TASKPROCEDURE\" })}\r\n                            label={intl.formatMessage({ id: \"IDS_TASKPROCEDURE\" })}\r\n                            type=\"text\"\r\n                            // defaultValue={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\r\n                            //     this.state.selectedRecordTaskForm!==undefined ? this.state.selectedRecordTaskForm.staskprocedure : \"\"}\r\n                                value={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\r\n                                    this.state.selectedRecordTaskForm.staskprocedure!==undefined ? this.state.selectedRecordTaskForm.staskprocedure : \"\"}\r\n                                isMandatory={false} \r\n                            required={false}\r\n                            maxLength={1000}\r\n                            onChange={(event) => this.onInputChange(event, \"staskprocedure\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <FormTextarea\r\n                            name={\"Result\"}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            label={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            type=\"text\"\r\n                            // defaultValue={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\r\n                            //     this.state.selectedRecordTaskForm!==undefined ? this.state.selectedRecordTaskForm.scomments : \"\"}\r\n                                value={Object.values(this.state.selectedRecordTaskForm).length > 0 &&\r\n                                    this.state.selectedRecordTaskForm.scomments!==undefined ? this.state.selectedRecordTaskForm.scomments : \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={100}\r\n                            onChange={(event) => this.onInputChange(event, \"scomments\")}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n// export default injectIntl(ResultEntryTaskForm);\r\n\r\nexport default connect(null, {\r\n    updateStore \r\n\r\n})(injectIntl(ResultEntryTaskForm));\r\n"]},"metadata":{},"sourceType":"module"}