{"ast":null,"code":"import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{transactionStatus}from'../../components/Enumeration';var TestSectionTab=function TestSectionTab(props){var addSectionId=props.controlMap.has(\"AddSection\")&&props.controlMap.get(\"AddSection\").ncontrolcode;var testSectionColumnList=[{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"width\":\"200px\"},{\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\",\"componentName\":\"switch\",\"switchFieldName\":\"ndefaultstatus\",\"switchStatus\":transactionStatus.YES,\"needRights\":true,\"controlName\":\"DefaultTestSection\"}];var methodUrl=\"TestSection\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestsection\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addSectionId)===-1,onClick:function onClick(){return props.getAvailableData(props.selectedTest,\"getAvailableSection\",\"section\",\"IDS_SECTION\",props.userInfo,addSectionId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDSECTION\",defaultMessage:\"Section\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"ntestsectioncode\",data:props.TestSection,dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:testSectionColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,deleteRecord:props.deleteRecord,pageable:true,scrollable:'scrollable',gridHeight:'450px',isActionRequired:true,deleteParam:{operation:\"delete\",methodUrl:methodUrl},methodUrl:methodUrl,hideColumnFilter:false,onSwitchChange:props.defaultRecord,switchParam:{operation:\"Default\",methodUrl:methodUrl}}))));};export default injectIntl(TestSectionTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestSectionTab.jsx"],"names":["React","injectIntl","FormattedMessage","faPlus","Nav","Row","Col","FontAwesomeIcon","DataGrid","transactionStatus","TestSectionTab","props","addSectionId","controlMap","has","get","ncontrolcode","testSectionColumnList","YES","methodUrl","userRoleControlRights","indexOf","getAvailableData","selectedTest","userInfo","TestSection","dataResult","dataState","dataStateChange","inputParam","deleteRecord","operation","defaultRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst TestSectionTab = (props) => {\r\n    const addSectionId = props.controlMap.has(\"AddSection\") && props.controlMap.get(\"AddSection\").ncontrolcode;\r\n    const testSectionColumnList = [\r\n        {\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\", \"componentName\": \"switch\", \r\n            \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultTestSection\"}\r\n    ];\r\n    const methodUrl = \"TestSection\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addtestsection\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addSectionId) === -1}\r\n                        onClick={()=>props.getAvailableData(props.selectedTest, \r\n                            \"getAvailableSection\", \"section\", \"IDS_SECTION\", props.userInfo, addSectionId)}>\r\n                        <FontAwesomeIcon icon = { faPlus } />{\" \"}\r\n                        <FormattedMessage id=\"IDS_ADDSECTION\" defaultMessage=\"Section\"></FormattedMessage>\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField = \"ntestsectioncode\"\r\n                        data = {props.TestSection}\r\n                        dataResult = {props.dataResult}\r\n                        dataState = {props.dataState}\r\n                        dataStateChange = {props.dataStateChange}\r\n                        extractedColumnList = {testSectionColumnList}\r\n                        controlMap = {props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam = {props.inputParam}\r\n                        userInfo = {props.userInfo}\r\n                        deleteRecord = {props.deleteRecord}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight = {'450px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange = {props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}} \r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestSectionTab);"]},"metadata":{},"sourceType":"module"}