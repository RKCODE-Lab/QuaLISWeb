{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import{Col,Row}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import{ListNode,NodeIcon,ProfileTag}from'../../components/custom-tree/TreeStyledComponent';var AddProfileTree=function AddProfileTree(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(ProfileTag,null,/*#__PURE__*/React.createElement(ListNode,{className:\"form-label-group tree-level\"},props.treetempTranstestGroup&&props.treetempTranstestGroup.map(function(item,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NodeIcon,{className:\"line\",style:{width:(index+1)*10}}),/*#__PURE__*/React.createElement(NodeIcon,{md:1,className:\"ml-1\"},item.slabelname),/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:(index+1)*10}},/*#__PURE__*/React.createElement(FormInput,{key:index.toString(),name:\"sleveldescription_\".concat(index),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,2,_defineProperty({},index,item),\"sleveldescription\");},placeholder:item.slabelname,value:props.selectedRecord?props.selectedRecord[\"sleveldescription_\".concat(index)]:\"\",defaultValue:item.sleveldescription,maxLength:100,readOnly:item.isreadonly})));}))))));};export default AddProfileTree;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddProfileTree.js"],"names":["React","Col","Row","FormInput","ListNode","NodeIcon","ProfileTag","AddProfileTree","props","treetempTranstestGroup","map","item","index","width","slabelname","marginLeft","toString","event","onInputOnChange","selectedRecord","sleveldescription","isreadonly"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,OAASC,QAAT,CAAmBC,QAAnB,CAA6BC,UAA7B,KAA+C,kDAA/C,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC9B,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,UAAD,mBACI,oBAAC,QAAD,EAAU,SAAS,CAAC,6BAApB,EACEA,KAAK,CAACC,sBAAN,EAAgCD,KAAK,CAACC,sBAAN,CAA6BC,GAA7B,CAAiC,SAACC,IAAD,CAAOC,KAAP,CAAe,CAClF,mBACI,qDACI,oBAAC,QAAD,EAAU,SAAS,CAAC,MAApB,CAA2B,KAAK,CAAE,CAAEC,KAAK,CAAE,CAACD,KAAK,CAAG,CAAT,EAAc,EAAvB,CAAlC,EADJ,cAEI,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAd,CAAiB,SAAS,CAAC,MAA3B,EAAmCD,IAAI,CAACG,UAAxC,CAFJ,cAGI,2BAAK,KAAK,CAAE,CAAEC,UAAU,CAAE,CAACH,KAAK,CAAG,CAAT,EAAc,EAA5B,CAAZ,eACI,oBAAC,SAAD,EAAW,GAAG,CAAEA,KAAK,CAACI,QAAN,EAAhB,CACI,IAAI,6BAAuBJ,KAAvB,CADR,CAEI,IAAI,CAAC,MAFT,CAGI,QAAQ,CAAE,kBAACK,KAAD,QAAWT,CAAAA,KAAK,CAACU,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,oBAAkCL,KAAlC,CAA0CD,IAA1C,EAAiD,mBAAjD,CAAX,EAHd,CAII,WAAW,CAAEA,IAAI,CAACG,UAJtB,CAKI,KAAK,CAAEN,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACW,cAAN,6BAA0CP,KAA1C,EAArB,CAAwE,EALnF,CAMI,YAAY,CAAED,IAAI,CAACS,iBANvB,CAOI,SAAS,CAAE,GAPf,CAQI,QAAQ,CAAET,IAAI,CAACU,UARnB,EADJ,CAHJ,CADJ,CAkBC,CAnBiC,CADlC,CADJ,CADJ,CADJ,CADJ,CADJ,CAgCH,CAjCD,CAmCA,cAAed,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ListNode, NodeIcon, ProfileTag } from '../../components/custom-tree/TreeStyledComponent';\r\n\r\nconst AddProfileTree = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <ProfileTag>\r\n                        <ListNode className=\"form-label-group tree-level\">\r\n                        { props.treetempTranstestGroup && props.treetempTranstestGroup.map((item, index)=>{\r\n                        return (\r\n                            <>\r\n                                <NodeIcon className=\"line\" style={{ width: (index + 1) * 10 }}></NodeIcon>\r\n                                <NodeIcon md={1} className=\"ml-1\">{item.slabelname}</NodeIcon>\r\n                                <div style={{ marginLeft: (index + 1) * 10 }}>\r\n                                    <FormInput key={index.toString()}\r\n                                        name={`sleveldescription_${index}`}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => props.onInputOnChange(event, 2, {[index]: item}, \"sleveldescription\")}\r\n                                        placeholder={item.slabelname}\r\n                                        value={props.selectedRecord?props.selectedRecord[`sleveldescription_${index}`]:\"\"}\r\n                                        defaultValue={item.sleveldescription}\r\n                                        maxLength={100}\r\n                                        readOnly={item.isreadonly}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        })}\r\n                        </ListNode>\r\n                    </ProfileTag>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddProfileTree;"]},"metadata":{},"sourceType":"module"}