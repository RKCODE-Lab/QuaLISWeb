{"ast":null,"code":"import { initRequest, updateStore } from './LoginAction';\nimport rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport { openModal } from './ApprovalConfigAction';\nimport { replaceUpdatedObject } from '../components/CommonScript';\nimport Axios from \"axios\"; //\tALPD-5322\tAdded action file by Vishakh for Out Of Specification screen\n\nexport function getOOSMasterData(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"oos/getOOS\", inputParam.inputData).then(response => {\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData,\n        searchedData: undefined\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const oosOpenClose = (parameter, userInfo) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let masterData = parameter.masterData;\n    let urlArray = [];\n    const url = \"oos/openCloseOOS\";\n    urlArray.push(rsapi.post(url, {\n      userinfo: userInfo,\n      noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode && masterData.selectedOosMaster.noosmastercode,\n      operation: parameter.operation\n    }));\n    Axios.all(urlArray).then(response => {\n      let OosMaster = masterData.OosMaster;\n\n      if (response[0].data && response[0].data.selectedOosMaster && response[0].data.selectedOosMaster != null) {\n        OosMaster = replaceUpdatedObject([response[0].data.selectedOosMaster], OosMaster, \"noosmastercode\");\n      }\n\n      masterData = { ...masterData,\n        ...response[0].data,\n        ...OosMaster\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      };\n      dispatch(updateStore(updateInfo));\n    }).catch(error => {\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n    });\n  };\n};\nexport const getOosMasterDetail = (OosMasterItem, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"oos/getActiveOosMasterById\", {\n      noosmastercode: OosMasterItem.noosmastercode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function onSaveOOSWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData).then(response => {\n      const masterData = { ...inputParam.inputData.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function onUpdateOOSWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false,\n          selectedId: \"\"\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n} // export function onSaveOOSMasterChecklist(inputParam) {\n//     return function (dispatch) {\n//         let listResultCheckList = [];\n//         if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\n//             inputParam.selectedRecord.editedQB.map(qbcode =>\n//                 listResultCheckList.push(inputParam.selectedRecord[qbcode]))\n//             let inputParamData = {\n//                 noosmastercode: inputParam.inputData.noosmastercode,\n//                 OOSMasterChecklist: {\n//                     nchecklistcode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistcode\n//                         && inputParam.selectedRecord.nchecklistcode.value,\n//                     nchecklistversioncode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistversioncode\n//                         && inputParam.selectedRecord.nchecklistversioncode.value,\n//                     jsondata: inputParam.selectedRecord.jsondata,\n//                     noosmastercode: inputParam.inputData.noosmastercode,\n//                 },\n//                 userinfo: inputParam.inputData.userinfo,\n//                 ncontrolcode: -1\n//             }\n//             dispatch(initRequest(true));\n//             rsapi.post(\"oos/createOOSMasterChecklist\", inputParamData)\n//                 .then(response => {\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             selectedRecord: {},\n//                             templateData: undefined,\n//                             openTemplateModal: false,\n//                             openModal: false,\n//                             loading: false,\n//                             loadEsign: false\n//                         }\n//                     })\n//                 })\n//                 .catch(error => {\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             loading: false,\n//                             loadEsign: false\n//                         }\n//                     })\n//                     if (error.response.status === 500) {\n//                         toast.error(error.message);\n//                     } else {\n//                         toast.warn(error.response.data);\n//                     }\n//                 })\n//         } else {\n//             dispatch({\n//                 type: DEFAULT_RETURN,\n//                 payload: {\n//                     openTemplateModal: false,\n//                     selectedRecord: {},\n//                     loading: false,\n//                     loadEsign: false\n//                 }\n//             })\n//         }\n//     }\n// }\n\nexport function onSaveOOSChecklistQb(inputParam) {\n  return function (dispatch) {\n    let listResultCheckList = [];\n\n    if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\n      inputParam.selectedRecord.editedQB.map(qbcode => listResultCheckList.push(inputParam.selectedRecord[qbcode]));\n      let inputParamData = {\n        noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\n        OOSChecklistQb: {\n          jsondata: inputParam.selectedRecord.jsondata,\n          noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode\n        },\n        userinfo: inputParam.inputData.userinfo,\n        ncontrolcode: -1\n      };\n      dispatch(initRequest(true));\n      rsapi.post(\"oos/createOOSChecklistQb\", inputParamData).then(response => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            selectedRecord: {},\n            selectedId: \"\",\n            templateData: undefined,\n            openModal: false,\n            loading: false,\n            loadEsign: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openTemplateModal: false,\n          selectedRecord: {},\n          loading: false,\n          loadEsign: false\n        }\n      });\n    }\n  };\n}\nexport function deleteOOSWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getOOSDetailsData(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          screenName: inputParam.screenName,\n          openModal: true,\n          operation: inputParam.operation\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/OOSMasterAction.js"],"names":["initRequest","updateStore","rsapi","DEFAULT_RETURN","toast","openModal","replaceUpdatedObject","Axios","getOOSMasterData","inputParam","dispatch","post","inputData","then","response","responseData","data","masterData","searchedData","undefined","type","payload","loading","catch","error","status","message","warn","oosOpenClose","parameter","userInfo","urlArray","url","push","userinfo","noosmastercode","selectedOosMaster","operation","all","OosMaster","updateInfo","typeName","getOosMasterDetail","OosMasterItem","onSaveOOSWorkFlowTransaction","classUrl","methodUrl","formData","onUpdateOOSWorkFlowTransaction","selectedId","onSaveOOSChecklistQb","listResultCheckList","selectedRecord","jsondata","editedQB","map","qbcode","inputParamData","noosworkflowtransactioncode","OOSChecklistQb","ncontrolcode","templateData","loadEsign","openTemplateModal","deleteOOSWorkFlowTransaction","getOOSDetailsData","screenName"],"mappings":"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","sourcesContent":["import { initRequest, updateStore } from './LoginAction';\r\nimport rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { openModal } from './ApprovalConfigAction';\r\nimport { replaceUpdatedObject } from '../components/CommonScript';\r\nimport Axios from \"axios\";\r\n\r\n//\tALPD-5322\tAdded action file by Vishakh for Out Of Specification screen\r\nexport function getOOSMasterData(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"oos/getOOS\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    searchedData: undefined\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport const oosOpenClose = (parameter,userInfo) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let masterData = parameter.masterData;\r\n        let urlArray = [];\r\n        const url = \"oos/openCloseOOS\";\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: userInfo,\r\n            noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode\r\n                && masterData.selectedOosMaster.noosmastercode,\r\n            operation: parameter.operation\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let OosMaster = masterData.OosMaster;\r\n                if (response[0].data && response[0].data.selectedOosMaster && response[0].data.selectedOosMaster != null) {\r\n                    OosMaster = replaceUpdatedObject([response[0].data.selectedOosMaster], OosMaster, \"noosmastercode\");\r\n                }\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response[0].data,\r\n                    ...OosMaster\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        masterData,\r\n                        loading: false,\r\n                        openModal: false\r\n                    }\r\n                }\r\n                dispatch(updateStore(updateInfo))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const getOosMasterDetail = (OosMasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"oos/getActiveOosMasterById\", { noosmastercode: OosMasterItem.noosmastercode, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function onSaveOOSWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.inputData.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function onUpdateOOSWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false,\r\n                            selectedId: \"\"\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export function onSaveOOSMasterChecklist(inputParam) {\r\n//     return function (dispatch) {\r\n//         let listResultCheckList = [];\r\n//         if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\r\n//             inputParam.selectedRecord.editedQB.map(qbcode =>\r\n//                 listResultCheckList.push(inputParam.selectedRecord[qbcode]))\r\n//             let inputParamData = {\r\n//                 noosmastercode: inputParam.inputData.noosmastercode,\r\n//                 OOSMasterChecklist: {\r\n//                     nchecklistcode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistcode\r\n//                         && inputParam.selectedRecord.nchecklistcode.value,\r\n//                     nchecklistversioncode: inputParam.selectedRecord && inputParam.selectedRecord.nchecklistversioncode\r\n//                         && inputParam.selectedRecord.nchecklistversioncode.value,\r\n//                     jsondata: inputParam.selectedRecord.jsondata,\r\n//                     noosmastercode: inputParam.inputData.noosmastercode,\r\n//                 },\r\n//                 userinfo: inputParam.inputData.userinfo,\r\n//                 ncontrolcode: -1\r\n//             }\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"oos/createOOSMasterChecklist\", inputParamData)\r\n//                 .then(response => {\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             selectedRecord: {},\r\n//                             templateData: undefined,\r\n//                             openTemplateModal: false,\r\n//                             openModal: false,\r\n//                             loading: false,\r\n//                             loadEsign: false\r\n//                         }\r\n//                     })\r\n//                 })\r\n//                 .catch(error => {\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             loading: false,\r\n//                             loadEsign: false\r\n//                         }\r\n//                     })\r\n//                     if (error.response.status === 500) {\r\n//                         toast.error(error.message);\r\n//                     } else {\r\n//                         toast.warn(error.response.data);\r\n//                     }\r\n//                 })\r\n//         } else {\r\n//             dispatch({\r\n//                 type: DEFAULT_RETURN,\r\n//                 payload: {\r\n//                     openTemplateModal: false,\r\n//                     selectedRecord: {},\r\n//                     loading: false,\r\n//                     loadEsign: false\r\n//                 }\r\n//             })\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport function onSaveOOSChecklistQb(inputParam) {\r\n    return function (dispatch) {\r\n        let listResultCheckList = [];\r\n        if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\r\n            inputParam.selectedRecord.editedQB.map(qbcode =>\r\n                listResultCheckList.push(inputParam.selectedRecord[qbcode]))\r\n            let inputParamData = {\r\n                noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                OOSChecklistQb: {\r\n                    jsondata: inputParam.selectedRecord.jsondata,\r\n                    noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                },\r\n                userinfo: inputParam.inputData.userinfo,\r\n                ncontrolcode: -1\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"oos/createOOSChecklistQb\", inputParamData)\r\n                .then(response => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            selectedRecord: {},\r\n                            selectedId: \"\",\r\n                            templateData: undefined,\r\n                            openModal: false,\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    openTemplateModal: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadEsign: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteOOSWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getOOSDetailsData(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            screenName: inputParam.screenName,\r\n                            openModal: true,\r\n                            operation: inputParam.operation\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}