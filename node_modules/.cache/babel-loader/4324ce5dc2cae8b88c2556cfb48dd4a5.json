{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\worklist\\\\WorklistSampleTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { process } from '@progress/kendo-data-query';\n\nclass WorklistSampleTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleDataState: {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      }\n    };\n  }\n\n  render() {\n    const methodUrl = \"WorklistSample\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editSample\",\n      className: \"add-txt-btn\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }),\n      hidden: this.props.userRoleControlRights.indexOf(this.props.addSampleId) === -1,\n      onClick: () => this.props.getWorklistSample(\"IDS_WORKLISTSAMPLE\", \"create\", \"nworklistcode\", // this.props.Login.masterData,\n      this.props.masterData, // this.props.Login.userInfo,\n      this.props.userInfo, this.props.addSampleId, this.props.dataStateSample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAMPLE\",\n      defaultMessage: \"Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"worklistsamplekey\",\n      primaryKeyField: \"nworklistsamplecode\",\n      data: this.props.WorklistSamples,\n      dataResult: process(this.props.selectedWorklist || [], this.state.sampleDataState) //dataResult={this.props.selectedWorklist || []}\n      ,\n      expandField: \"expanded\",\n      dataState: this.state.sampleDataState,\n      dataStateChange: event => this.setState({\n        sampleDataState: event.dataState\n      }),\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      extractedColumnList: this.props.extractedColumnList,\n      detailedFieldList: this.props.detailedFieldList,\n      deleteRecord: this.props.deleteRecord,\n      deleteParam: {\n        operation: \"delete\",\n        methodUrl,\n        screenName: this.props.screenName\n      },\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '335px',\n      isActionRequired: true,\n      methodUrl: methodUrl,\n      actionIcons: [{\n        title: this.props.intl.formatMessage({\n          id: \"IDS_PREVIOUSRESULTVIEW\"\n        }),\n        controlname: \"faEye\",\n        objectName: \"ExceptionLogs\",\n        hidden: this.props.userRoleControlRights.indexOf(this.props.viewSampleId) === -1,\n        onClick: viewSample => this.props.viewSample(viewSample)\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.WorklistSamples !== previousProps.WorklistSamples) {\n      let {\n        sampleDataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        sampleDataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        sampleDataState\n      });\n    }\n  }\n\n}\n\n;\nexport default injectIntl(WorklistSampleTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/worklist/WorklistSampleTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","process","WorklistSampleTab","Component","constructor","props","state","sampleDataState","skip","take","settings","parseInt","render","methodUrl","intl","formatMessage","id","userRoleControlRights","indexOf","addSampleId","getWorklistSample","masterData","userInfo","dataStateSample","WorklistSamples","selectedWorklist","event","setState","dataState","controlMap","extractedColumnList","detailedFieldList","deleteRecord","operation","screenName","title","controlname","objectName","hidden","viewSampleId","onClick","viewSample","componentDidUpdate","previousProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { process } from '@progress/kendo-data-query';\r\nclass WorklistSampleTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            sampleDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n        });\r\n    }\r\n    render() {\r\n\r\n        const methodUrl = \"WorklistSample\";\r\n        return (\r\n            <>\r\n                <div className=\"actions-stripe\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n\r\n                        <Nav.Link\r\n                            name=\"editSample\" className=\"add-txt-btn\"\r\n                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\", })}\r\n                             hidden={this.props.userRoleControlRights.indexOf(this.props.addSampleId) === -1 }\r\n                            onClick={() =>\r\n                                this.props.getWorklistSample(\r\n                                    \"IDS_WORKLISTSAMPLE\",\r\n                                    \"create\",\r\n                                    \"nworklistcode\",\r\n                                    // this.props.Login.masterData,\r\n                                    this.props.masterData,\r\n                                    // this.props.Login.userInfo,\r\n                                    this.props.userInfo,\r\n                                    this.props.addSampleId,\r\n                                    this.props.dataStateSample\r\n                                )\r\n                            }\r\n                        >\r\n                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                            <FormattedMessage id=\"IDS_SAMPLE\" defaultMessage=\"Sample\"></FormattedMessage>\r\n                        </Nav.Link>\r\n                    </div>\r\n                </div>\r\n                <Row noGutters={true}>\r\n                    <Col md=\"12\">\r\n                        <DataGrid\r\n                            key=\"worklistsamplekey\"\r\n                            primaryKeyField=\"nworklistsamplecode\"\r\n                            data={this.props.WorklistSamples}\r\n                            dataResult={process(this.props.selectedWorklist || [], this.state.sampleDataState)}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            expandField=\"expanded\"\r\n                            dataState={this.state.sampleDataState}\r\n                            dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            extractedColumnList={this.props.extractedColumnList}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            deleteRecord={this.props.deleteRecord}\r\n                            deleteParam={{ operation: \"delete\", methodUrl, screenName: this.props.screenName }}\r\n                            pageable={true}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'335px'}\r\n                            isActionRequired={true}\r\n                            methodUrl={methodUrl}\r\n                            actionIcons={[{\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                controlname: \"faEye\",\r\n                                objectName: \"ExceptionLogs\",\r\n                                hidden: this.props.userRoleControlRights.indexOf(this.props.viewSampleId) === -1,\r\n                               onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                            }]}\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.WorklistSamples !== previousProps.WorklistSamples) {\r\n            let { sampleDataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                sampleDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n            }\r\n            this.setState({ sampleDataState });\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default injectIntl(WorklistSampleTab);"]},"metadata":{},"sourceType":"module"}