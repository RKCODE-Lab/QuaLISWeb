{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{ListWrapper}from'../../components/client-group.styles';import AddSampleReceiving from'../storagemanagement//AddSampleReceiving';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{transactionStatus}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{callService,crudMaster,updateStore,validateEsignCredential,getComboSampleReceiving,getBarcodeDataRecord,saveReceiving,getActiveSampleReceivingById,getSampleReceiving,generateControlBasedReport}from'../../actions';import{sortData,getControlMap,getStartOfDay,getEndOfDay,convertDateValuetoString,rearrangeDateFormat,constructOptionList,Lims_JSON_stringify,formatInputDate,showEsign}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleReceivingStorage=/*#__PURE__*/function(_React$Component){_inherits(SampleReceivingStorage,_React$Component);var _super=_createSuper(SampleReceivingStorage);function SampleReceivingStorage(props){var _this;_classCallCheck(this,SampleReceivingStorage);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='update'){_this.props.validateEsignCredential(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.deleteRecord=function(deleteParam){var _inputData;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:\"IDS_STORAGESAMPLERECEIVING\",inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"fromDate\",fromDate),_defineProperty(_inputData,\"toDate\",toDate),_defineProperty(_inputData,\"nprojecttypecode\",_this.props.Login.masterData.selectedProjectType.value||-1),_defineProperty(_inputData,\"nstoragesamplereceivingcode\",deleteParam.selectedRecord['nstoragesamplereceivingcode']),_defineProperty(_inputData,\"scollectiondate\",deleteParam.selectedRecord['scollectiondate']),_defineProperty(_inputData,\"scomments\",deleteParam.selectedRecord['scomments']),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_STORAGESAMPLERECEIVING\"}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.checkNoRecord=function(inputData){var _inputData$SampleRece;if(inputData===null||inputData===void 0?void 0:(_inputData$SampleRece=inputData.SampleReceiving)===null||_inputData$SampleRece===void 0?void 0:_inputData$SampleRece.jsondata){try{var jsonData=JSON.parse(inputData.SampleReceiving.jsondata);return jsonData.hasOwnProperty(\"NoRecord\");}catch(error){console.error(\"Invalid JSON string:\",error);return false;}}// Return false if jsondata does not exist\nreturn false;};_this.onSaveClick=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord||{};var inputData={};var jsonDataCheck=_this.state.barcodedata;if(selectedRecord[\"sbarcodeid\"]&&selectedRecord[\"sbarcodeid\"].length===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)){if(jsonDataCheck!==undefined&&jsonDataCheck!==''&&jsonDataCheck!=0){inputData[\"SampleReceiving\"]={};if(_this.props.Login.operation===\"create\"){inputData[\"SampleReceiving\"][\"jsondata\"]=Lims_JSON_stringify(JSON.stringify(_this.state.barcodedata));}inputData[\"SampleReceiving\"][\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;if(_this.props.Login.operation===\"update\"){inputData[\"SampleReceiving\"][\"nstoragesamplereceivingcode\"]=_this.props.Login.selectedId;}inputData[\"SampleReceiving\"][\"sbarcodeid\"]=selectedRecord[\"sbarcodeid\"]?selectedRecord[\"sbarcodeid\"]:-1;inputData[\"SampleReceiving\"][\"dcollectiondate\"]=formatInputDate(selectedRecord[\"dcollectiondate\"],false);inputData[\"SampleReceiving\"][\"scomments\"]=selectedRecord[\"scomments\"]&&selectedRecord[\"scomments\"]||\"\";inputData[\"SampleReceiving\"][\"ntzcollectiondatetime\"]=selectedRecord[\"ntzcollectiondatetime\"]&&selectedRecord[\"ntzcollectiondatetime\"].value||transactionStatus.NA;inputData[\"SampleReceiving\"][\"noffsetdcollectiondatetime\"]=selectedRecord[\"noffsetdcollectiondatetime\"]&&selectedRecord[\"noffsetdcollectiondatetime\"].value||transactionStatus.NA;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData[\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;inputData[\"userinfo\"]=_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)});var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"samplereceiving\",methodUrl:\"SampleReceiving\",inputData:inputData,operation:_this.props.Login.operation,displayName:\"IDS_STORAGESAMPLERECEIVING\",saveType:saveType,formRef:formRef,selectedRecord:_this.state.selectedRecord||{}};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.saveReceiving(inputParam,masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CLICKENTERTOJSONRECORD\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDABARCODE\"}));}};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName===\"nprojecttypecode\"){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData={userinfo:_this.props.Login.userInfo,nprojecttypecode:parseInt(comboData.value),selectedProjectType:comboData,toDate:toDate,fromDate:fromDate};var masterData=_objectSpread({},_this.props.Login.masterData);var inputParam={masterData:masterData,inputData:inputData};_this.props.getSampleReceiving(inputParam);}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.handleDateChangeSlidout=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event,fieldname){var value=event.target.value;//const { selectedRecord } = this.state;\nvar selectedRecord=_this.state.selectedRecord||{};if(fieldname==='sbarcodeid'){if(!/^\\s*$/.test(value)&&value.length>=parseInt(_this.props.Login.settings[37])){if(event.target.name===\"sbarcodeid\"){selectedRecord[event.target.name]=value;}else{selectedRecord[event.target.name]=value;}var barcodenorecord=false;_this.setState({selectedRecord:selectedRecord,barcodenorecord:barcodenorecord});}else{var str=true;_this.setState({barcodenorecord:str});}}selectedRecord[event.target.name]=value;_this.setState({selectedRecord:selectedRecord});};_this.barcodeEnter=function(event,fieldName){var value=_this.state.selectedRecord.sbarcodeid;if(!/^\\s*$/.test(value)&&value.length===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)&&event.keyCode===13){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData={userinfo:_this.props.Login.userInfo,selectedRecord:_this.state.selectedRecord,toDate:toDate,fromDate:fromDate};var masterData=_objectSpread({},_this.props.Login.masterData);var inputParam={masterData:masterData,inputData:inputData};_this.props.getBarcodeDataRecord(inputParam);}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}if(dateName==='todate'){selectedRecord[dateName]=dateValue;}else{selectedRecord[dateName]=dateValue;}selectedRecord[dateName]=dateValue;// this.setState({ selectedRecord });\n// this.reloadData(selectedRecord, true);\nvar dateObj={};var obj=convertDateValuetoString(selectedRecord['fromdate']&&selectedRecord['fromdate']||_this.props.Login.masterData.FromDate,selectedRecord['todate']&&selectedRecord['todate']||_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate,nprojecttypecode:_this.props.Login.masterData.selectedProjectType&&_this.props.Login.masterData.selectedProjectType.value||-1},classUrl:'samplereceiving',methodUrl:\"SampleReceiving\",displayName:\"IDS_STORAGESAMPLERECEIVING\",userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord};_this.props.callService(inputParam);};_this.reloadData=function(selectedRecord,isDateChange){//this.searchRef.current.value = \"\";\nvar fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo,true);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,//ALPD-4684-Vignesh R(20-08-2024)\nnprojecttypecode:_this.props.Login.masterData.selectedProjectType.value||-1,fromDate:obj.fromDate,toDate:obj.toDate},classUrl:'samplereceiving',methodUrl:\"SampleReceiving\",displayName:\"IDS_STORAGESAMPLERECEIVING\",userInfo:_this.props.Login.userInfo,selectedRecord:_this.state.selectedRecord||{}};_this.props.callService(inputParam);};_this.samplereceivingData=function(SampleReceivingReportId){var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var filterTestParam={todate:toDate,fromdate:fromDate,nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value||-1,nsitecode:_this.props.Login.userInfo.nsitecode};_this.props.generateControlBasedReport(SampleReceivingReportId,filterTestParam,_this.props.Login,\"nsamplereceivingcode\",_this.state.selectedRecord.nsamplereceivingcode);};_this.searchRef=React.createRef();var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map(),showSaveContinue:true};var extractedColumnList1=[];extractedColumnList1=[{idsName:'IDS_BARCODEID',dataField:'sbarcodeid',width:'250px',mandatoryLabel:'IDS_ENTER',controlType:'textinput'},{idsName:\"IDS_SAMPLETYPE\",\"dataField\":\"sproductname\",mandatoryLabel:\"IDS_ENTER\",controlType:\"selectbox\"},{idsName:\"IDS_COLLECTIONTUBETYPEPROCESSTYPE\",\"dataField\":\"stubename\",mandatoryLabel:\"IDS_ENTER\",controlType:\"selectbox\"},{idsName:\"IDS_VISITNUMBER\",\"dataField\":\"svisitnumber\",mandatoryLabel:\"IDS_ENTER\",controlType:\"selectbox\"},//{ idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\n//{ idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\n{idsName:'IDS_SAMPLERECEIVINGDATE',dataField:'scollectiondate',width:'250px'},{idsName:'IDS_COMMENTS',dataField:'scomments',width:'250px'}];return _this;}_createClass(SampleReceivingStorage,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data,barcodeFields){var temparray1=[{idsName:'IDS_BARCODEID',dataField:'sbarcodeid',width:'250px',mandatoryLabel:'IDS_ENTER',controlType:'textinput'},//{ idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\n//{ idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\n{idsName:'IDS_SAMPLERECEIVINGDATE',dataField:'scollectiondate',width:'250px'},{idsName:'IDS_COMMENTS',dataField:'scomments',width:'250px'}];/*let temparray2 = []\r\n        barcodeFields&&barcodeFields.forEach(item=>{\r\n            data && data.forEach((item) => {\r\n                const entries = Object.entries(item.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if(item.sfieldname===key){\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                           \r\n                        }\r\n    \r\n    \r\n                    });\r\n                }\r\n            });\r\n        });*/var temparray2=[];barcodeFields&&barcodeFields.forEach(function(barcodeItem){data&&data.forEach(function(dataItem){var entries=Object.entries(dataItem.jsondata);if(entries.length>0){entries.forEach(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];var keyExists=temparray2.some(function(column){return column.idsName===key;});if(!keyExists){if(barcodeItem.sfieldname===key){temparray2.push({idsName:key,dataField:key,width:'250px'});}}});}});});var newArray=[].concat(temparray1,temparray2);return newArray;}},{key:\"render\",value:function render(){var _this2=this;var fromDate=\"\";var toDate=\"\";var extractedColumnList=this.gridfillingColumn(this.props.Login.masterData.SampleReceiving&&this.props.Login.masterData.SampleReceiving||[],this.props.Login.masterData.jsondataBarcodeFields&&this.props.Login.masterData.jsondataBarcodeFields);this.extractedColumnList=extractedColumnList;var addId=this.state.controlMap.has(\"AddSampleReceiving\")&&this.state.controlMap.get(\"AddSampleReceiving\").ncontrolcode;var editId=this.state.controlMap.has(\"EditSampleReceiving\")&&this.state.controlMap.get(\"EditSampleReceiving\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteSampleReceiving\")&&this.state.controlMap.get(\"DeleteSampleReceiving\").ncontrolcode;var SampleReceivingReportId=this.state.controlMap.has(\"SampleReceivingReport\")&&this.state.controlMap.get(\"SampleReceivingReport\").ncontrolcode;var editParam={screenName:this.props.Login.displayName,operation:\"update\",userInfo:this.props.Login.userInfo,ncontrolcode:editId,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,primaryKeyField:\"nstoragesamplereceivingcode\",selectedRecord:this.state.selectedRecord||{},dataState:this.state.dataState};var addParam={screenName:this.props.Login.displayName,primaryKeyField:\"nstoragesamplereceivingcode\",primaryKeyValue:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolcode:addId,selectedRecord:this.state.selectedRecord,masterData:this.props.Login.masterData};var deleteParam={deleteId:deleteId,operation:\"delete\",selectedRecord:this.state.selectedRecord};var samplereceivingreportParam={SampleReceivingReportId:SampleReceivingReportId,masterData:this.props.Login.masterData,selectedRecord:this.state.selectedRecord};if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){fromDate=this.state.selectedRecord[\"fromdate\"]&&getStartOfDay(this.state.selectedRecord[\"fromdate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.FromDate);toDate=this.state.selectedRecord[\"todate\"]&&getEndOfDay(this.state.selectedRecord[\"todate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"fromdate\"]||fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"fromdate\",date);},value:this.state.selectedRecord[\"fromdate\"]||fromDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"todate\"]||toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"todate\",date);},value:this.state.selectedRecord[\"todate\"]||toDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isSearchable:true,name:\"nprojecttypecode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:this.state.projectType,value:this.props.Login.masterData.selectedProjectType,defaultValue:this.state.selectedRecord[\"nprojecttypecode\"],onChange:function onChange(event){return _this2.onComboChange(event,\"nprojecttypecode\");},closeMenuOnSelect:true}))),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nstoragesamplereceivingcode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,scrollable:\"scrollable\",pageable:true,isComponent:true,gridHeight:'530px',isToolBarRequired:true,isActionRequired:true,expandField:\"expanded\",selectedId:0,addRecord:function addRecord(){return _this2.props.getComboSampleReceiving(addParam,_this2.props.Login.masterData);},isDownloadButtonOn:true//report \n,samplereceivingData:this.samplereceivingData//report\n,deleteParam:deleteParam,deleteRecord:this.deleteRecord,fetchRecord:this.props.getActiveSampleReceivingById,editParam:editParam//ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\n,isDownloadPDFRequired:false,isDownloadExcelRequired:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,size:'lg',esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},showSaveContinue:true,mandatoryFields:[{\"mandatory\":true,\"idsName\":\"IDS_BARCODEID\",\"dataField\":\"sbarcodeid\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textinput\"},{\"mandatory\":true,\"idsName\":\"IDS_SAMPLERECEIVINGDATE\",\"dataField\":\"dcollectiondate\",\"width\":\"250px\",\"fieldType\":'dateOnlyFormat',\"controlType\":\"textinput\"}],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddSampleReceiving,{barcodedata:this.state.barcodedata,barcodeFields:this.state.barcodeFields//barcodenorecord={this.state.barcodenorecord}\n,selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,barcodeEnter:this.barcodeEnter,formatMessage:this.props.intl.formatMessage,operation:this.props.Login.operation,unit:this.props.Login.unit,userInfo:this.props.Login.userInfo,handleDateChangeSlidout:this.handleDateChangeSlidout})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var projectType=this.state.projectType;var bool=false;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData.projectType!==previousProps.Login.masterData.projectType){var projectTypeMap=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);projectType=projectTypeMap.get(\"OptionList\");bool=true;}// if (this.props.Login.masterData.SampleReceiving !== previousProps.Login.masterData.SampleReceiving) {\n//     let samplecollect = [];\n//     samplecollect =\n//         this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\n//             const entries = Object.entries(sampleItem.jsondata);\n//             if (entries.length > 0) {\n//                 const newItem = { ...sampleItem };\n//                 entries.forEach(([key, value]) => {\n//                     newItem[key] = value;\n//                 });\n//                 return newItem;\n//             }\n//             return sampleItem;\n//         });\n//         let { dataState } = this.state;\n//         if (dataState === undefined) {\n//             dataState = { skip: 0, take: this.state.dataState.take }\n//         }\n//         if (this.state.dataResult.data) {\n//             if (this.state.dataResult.data.length === 1) {\n//                 let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\n//                     this.state.dataState.skip\n//                 dataState = { skip: skipcount, take: this.state.dataState.take }\n//             }\n//         }\n//         this.setState({\n//             data: samplecollect,\n//             dataState,\n//             dataResult: process(samplecollect || [], dataState),\n//         });\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var samplecollect=[];samplecollect=this.props.Login.masterData.SampleReceiving&&this.props.Login.masterData.SampleReceiving.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];newItem[key]=value;});return newItem;}return sampleItem;});//     let { dataState } = this.state;\n// if (dataState === undefined) {\n//     dataState = { skip: 0, take: this.state.dataState.take }\n// }\n// if (this.state.dataResult.data) {\n//     if (this.state.dataResult.data.length === 1) {\n//         let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\n//             this.state.dataState.skip\n//         dataState = { skip: skipcount, take: this.state.dataState.take }\n//     }\n// }\nthis.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:samplecollect,dataResult:process(samplecollect||[],this.state.dataState)});}else{//jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\nvar samplereceiving=[];samplereceiving=this.props.Login.masterData.SampleReceiving&&this.props.Login.masterData.SampleReceiving.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];newItem[key]=value;});return newItem;}return sampleItem;});var dataState=this.state.dataState;if(this.props.Login.dataState===undefined||this.props.Login.masterData.selectedProjectType!==previousProps.Login.masterData.selectedProjectType){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({data:samplereceiving,selectedRecord:this.props.Login.selectedRecord,dataResult:process(samplereceiving||[],dataState),dataState:dataState});}// else {\n//     if (this.props.Login.masterData.SampleReceiving) {\n//         let samplecollect = [];\n//         samplecollect =\n//             this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\n//                 const entries = Object.entries(sampleItem.jsondata);\n//                 if (entries.length > 0) {\n//                     const newItem = { ...sampleItem };\n//                     entries.forEach(([key, value]) => {\n//                         newItem[key] = value;\n//                     });\n//                     return newItem;\n//                 }\n//                 return sampleItem;\n//             });\n//         this.setState({\n//             data: samplecollect,\n//             dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\n//             dataResult: process(samplecollect || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\n//         });\n//     }\n// }\n}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}// if (this.props.Login.masterData.barcodenorecord !== previousProps.Login.masterData.barcodenorecord) {\n//     this.setState({ barcodenorecord: this.props.Login.masterData.barcodenorecord });\n// }\nif(this.props.Login.masterData.jsondataBarcodeFields!==previousProps.Login.masterData.jsondataBarcodeFields){var retrievedData=sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");this.setState({jsondataBarcodeFields:retrievedData});}if(this.props.Login.masterData.jsondataBarcodeFields!==previousProps.Login.masterData.jsondataBarcodeFields){this.setState({jsondataBarcodeFields:this.props.Login.masterData.jsondataBarcodeFields});}if(this.props.Login.masterData.barcodeFields!==previousProps.Login.masterData.barcodeFields){this.setState({barcodeFields:this.props.Login.masterData.barcodeFields});}if(this.props.Login.masterData.barcodedata!==previousProps.Login.masterData.barcodedata){this.setState({barcodedata:this.props.Login.masterData.barcodedata});}// if (this.props.Login.barcodenorecord !== previousProps.Login.barcodenorecord) {\n//     this.setState({ barcodenorecord: false });\n// }\nif(bool){this.setState({projectType:projectType});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleReceivingStorage;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getActiveSampleReceivingById:getActiveSampleReceivingById,getSampleReceiving:getSampleReceiving,generateControlBasedReport:generateControlBasedReport,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getComboSampleReceiving:getComboSampleReceiving,getBarcodeDataRecord:getBarcodeDataRecord,saveReceiving:saveReceiving})(injectIntl(SampleReceivingStorage));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/SampleReceivingStorage.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","DateTimePicker","ListWrapper","AddSampleReceiving","SlideOutModal","Esign","transactionStatus","DEFAULT_RETURN","FormSelectSearch","callService","crudMaster","updateStore","validateEsignCredential","getComboSampleReceiving","getBarcodeDataRecord","saveReceiving","getActiveSampleReceivingById","getSampleReceiving","generateControlBasedReport","sortData","getControlMap","getStartOfDay","getEndOfDay","convertDateValuetoString","rearrangeDateFormat","constructOptionList","Lims_JSON_stringify","formatInputDate","showEsign","mapStateToProps","state","Login","SampleReceivingStorage","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","dataStateChange","event","setState","dataResult","dataState","validateEsign","inputParam","inputData","userInfo","sreason","nreasoncode","value","spredefinedreason","label","password","screenData","deleteRecord","deleteParam","obj","masterData","FromDate","ToDate","fromDate","toDate","classUrl","methodUrl","displayName","toLowerCase","selectedProjectType","userRoleControlRights","nformcode","ncontrolCode","screenName","intl","formatMessage","id","checkNoRecord","SampleReceiving","jsondata","jsonData","JSON","parse","hasOwnProperty","error","console","onSaveClick","saveType","formRef","jsonDataCheck","barcodedata","length","parseInt","nbarcodelength","undefined","stringify","NA","selectedId","sformname","smodulename","ncontrolcode","warn","onComboChange","comboData","fieldName","userinfo","nprojecttypecode","handleDateChangeSlidout","dateName","dateValue","onInputOnChange","fieldname","target","test","settings","name","barcodenorecord","str","barcodeEnter","sbarcodeid","keyCode","handleDateChange","Date","dateObj","reloadData","isDateChange","samplereceivingData","SampleReceivingReportId","filterTestParam","todate","fromdate","nsitecode","nsamplereceivingcode","searchRef","createRef","skip","take","masterStatus","controlMap","Map","showSaveContinue","extractedColumnList1","idsName","dataField","width","mandatoryLabel","controlType","barcodeFields","temparray1","temparray2","forEach","barcodeItem","dataItem","entries","Object","key","keyExists","some","column","sfieldname","push","newArray","extractedColumnList","gridfillingColumn","jsondataBarcodeFields","addId","has","get","editId","deleteId","editParam","primaryKeyField","addParam","primaryKeyValue","samplereceivingreportParam","ssitedate","date","projectType","unit","previousProps","bool","projectTypeMap","values","map","item","samplecollect","sampleItem","newItem","samplereceiving","skipcount","retrievedData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport AddSampleReceiving from '../storagemanagement//AddSampleReceiving';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\n\r\n\r\nimport {\r\n    callService, crudMaster,\r\n    updateStore, validateEsignCredential, getComboSampleReceiving, getBarcodeDataRecord,\r\n    saveReceiving, getActiveSampleReceivingById, getSampleReceiving,generateControlBasedReport\r\n} from '../../actions';\r\nimport {sortData,\r\n    getControlMap, getStartOfDay, getEndOfDay, convertDateValuetoString, rearrangeDateFormat,\r\n    constructOptionList, Lims_JSON_stringify, formatInputDate, showEsign\r\n} from '../../components/CommonScript'\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleReceivingStorage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showSaveContinue: true\r\n        };\r\n        let extractedColumnList1 = [];\r\n        extractedColumnList1 = [\r\n            { idsName: 'IDS_BARCODEID', dataField: 'sbarcodeid', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n            { idsName: \"IDS_SAMPLETYPE\", \"dataField\": \"sproductname\", mandatoryLabel: \"IDS_ENTER\", controlType: \"selectbox\" },\r\n            { idsName: \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\", \"dataField\": \"stubename\", mandatoryLabel: \"IDS_ENTER\", controlType: \"selectbox\" },\r\n            { idsName: \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", mandatoryLabel: \"IDS_ENTER\", controlType: \"selectbox\" },\r\n            //{ idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n            //{ idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n            { idsName: 'IDS_SAMPLERECEIVINGDATE', dataField: 'scollectiondate', width: '250px'},\r\n            { idsName: 'IDS_COMMENTS', dataField: 'scomments', width: '250px' }\r\n        ];\r\n\r\n\r\n    }\r\n    \r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // closeModal = () => {\r\n    //     let loadEsign = this.props.Login.loadEsign;\r\n    //     let openModal = this.props.Login.openModal;\r\n    //     let selectedRecord = this.props.Login.selectedRecord;\r\n    //     let jsondataBarcodeFields = this.props.Login.masterData.jsondataBarcodeFields;\r\n    //     let barcodeFields = this.props.Login.masterData.barcodeFields;\r\n    //     let barcodedata = this.props.Login.masterData.barcodedata;\r\n\r\n\r\n\r\n    //     if (this.props.Login.loadEsign) {\r\n    //         if (this.props.Login.operation === \"delete\") {\r\n    //             loadEsign = false;\r\n    //             openModal = false;\r\n    //             selectedRecord = {};\r\n    //         }\r\n    //         else {\r\n    //             loadEsign = false;\r\n    //             selectedRecord['esignpassword'] = \"\"\r\n    //             selectedRecord['esigncomments'] = \"\"\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         openModal = false;\r\n    //         selectedRecord = {};\r\n    //         jsondataBarcodeFields = {};\r\n    //         barcodeFields = {};\r\n    //         barcodedata = {};\r\n    //     }\r\n\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { openModal, loadEsign, selectedRecord }\r\n    //     }\r\n\r\n    //     this.setState({ jsondataBarcodeFields: jsondataBarcodeFields, barcodeFields: jsondataBarcodeFields, barcodedata: jsondataBarcodeFields });\r\n\r\n    //     this.props.updateStore(updateInfo);\r\n    // }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    gridfillingColumn(data, barcodeFields) {\r\n        \r\n        const temparray1 = [\r\n            { idsName: 'IDS_BARCODEID', dataField: 'sbarcodeid', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n            //{ idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n            //{ idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n            { idsName: 'IDS_SAMPLERECEIVINGDATE', dataField: 'scollectiondate', width: '250px'},\r\n            { idsName: 'IDS_COMMENTS', dataField: 'scomments', width: '250px' }\r\n\r\n        ];\r\n        /*let temparray2 = []\r\n        barcodeFields&&barcodeFields.forEach(item=>{\r\n            data && data.forEach((item) => {\r\n                const entries = Object.entries(item.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if(item.sfieldname===key){\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                           \r\n                        }\r\n    \r\n    \r\n                    });\r\n                }\r\n            });\r\n        });*/\r\n        let temparray2 = [];\r\n        barcodeFields && barcodeFields.forEach(barcodeItem => {\r\n            data && data.forEach(dataItem => {\r\n                const entries = Object.entries(dataItem.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if (barcodeItem.sfieldname === key) {\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        const newArray = [...temparray1, ...temparray2]\r\n        return newArray;\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'update') {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n    render() {\r\n\r\n\r\n        let fromDate = \"\";\r\n        let toDate = \"\";\r\n        const extractedColumnList = this.gridfillingColumn(this.props.Login.masterData.SampleReceiving\r\n            && this.props.Login.masterData.SampleReceiving || [], this.props.Login.masterData.jsondataBarcodeFields\r\n        && this.props.Login.masterData.jsondataBarcodeFields);\r\n\r\n        this.extractedColumnList = extractedColumnList;\r\n\r\n        const addId = this.state.controlMap.has(\"AddSampleReceiving\") && this.state.controlMap.get(\"AddSampleReceiving\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSampleReceiving\") && this.state.controlMap.get(\"EditSampleReceiving\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSampleReceiving\") && this.state.controlMap.get(\"DeleteSampleReceiving\").ncontrolcode;\r\n        const SampleReceivingReportId = this.state.controlMap.has(\"SampleReceivingReport\") && this.state.controlMap.get(\"SampleReceivingReport\").ncontrolcode;\r\n\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.displayName,\r\n            operation: \"update\",\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            inputParam: this.props.Login.inputParam,\r\n            primaryKeyField: \"nstoragesamplereceivingcode\",\r\n            selectedRecord: this.state.selectedRecord || {},\r\n            dataState:this.state.dataState\r\n\r\n        };\r\n        const addParam = {\r\n            screenName: this.props.Login.displayName, primaryKeyField: \"nstoragesamplereceivingcode\", primaryKeyValue: undefined,\r\n            operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolcode: addId,\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: this.props.Login.masterData\r\n        };\r\n        const deleteParam = { deleteId: deleteId, operation: \"delete\", selectedRecord: this.state.selectedRecord };\r\n\r\n        const samplereceivingreportParam = { SampleReceivingReportId: SampleReceivingReportId,masterData: this.props.Login.masterData,  selectedRecord: this.state.selectedRecord };\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            fromDate = (this.state.selectedRecord[\"fromdate\"] && getStartOfDay(this.state.selectedRecord[\"fromdate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n            toDate = (this.state.selectedRecord[\"todate\"] && getEndOfDay(this.state.selectedRecord[\"todate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        }\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n\r\n\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"fromdate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"todate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || toDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || toDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"nprojecttypecode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={this.state.projectType}\r\n                                        value={this.props.Login.masterData.selectedProjectType}\r\n                                        defaultValue={this.state.selectedRecord[\"nprojecttypecode\"]}\r\n                                        onChange={(event) => this.onComboChange(event, \"nprojecttypecode\")}\r\n                                        closeMenuOnSelect={true}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                            </Row>\r\n                           \r\n                            {this.state.data ?\r\n\r\n\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nstoragesamplereceivingcode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    scrollable={\"scrollable\"}\r\n                                    pageable={true}\r\n                                    isComponent={true}\r\n                                    gridHeight={'530px'}\r\n                                    isToolBarRequired={true}\r\n                                    isActionRequired={true}\r\n                                    expandField=\"expanded\"\r\n                                    selectedId={0}\r\n                                    addRecord={() => this.props.getComboSampleReceiving(addParam,this.props.Login.masterData)}\r\n                                    isDownloadButtonOn={true} //report \r\n                                    samplereceivingData={this.samplereceivingData}   //report\r\n                                    deleteParam={deleteParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    fetchRecord={this.props.getActiveSampleReceivingById}\r\n                                    editParam={editParam}\r\n                                    //ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={true}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        size={'lg'}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={true}\r\n                        mandatoryFields={[\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_BARCODEID\", \"dataField\": \"sbarcodeid\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textinput\" },\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_SAMPLERECEIVINGDATE\", \"dataField\": \"dcollectiondate\", \"width\": \"250px\", \"fieldType\": 'dateOnlyFormat', \"controlType\": \"textinput\" },\r\n                        ]}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddSampleReceiving\r\n\r\n                                barcodedata={this.state.barcodedata}\r\n                                barcodeFields={this.state.barcodeFields}\r\n                                //barcodenorecord={this.state.barcodenorecord}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                barcodeEnter={this.barcodeEnter}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                operation={this.props.Login.operation}\r\n                                unit={this.props.Login.unit}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                handleDateChangeSlidout={this.handleDateChangeSlidout}\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    deleteRecord = (deleteParam) => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: \"IDS_STORAGESAMPLERECEIVING\",\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n\r\n\r\n                \"fromDate\": fromDate,\r\n                \"toDate\": toDate,\r\n                \"nprojecttypecode\": this.props.Login.masterData.selectedProjectType.value || -1,\r\n                \"nstoragesamplereceivingcode\": deleteParam.selectedRecord['nstoragesamplereceivingcode'],\r\n                \"scollectiondate\": deleteParam.selectedRecord['scollectiondate'],\r\n                \"scomments\": deleteParam.selectedRecord['scomments']\r\n\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_STORAGESAMPLERECEIVING\" }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    checkNoRecord = (inputData) => {\r\n     \r\n        if (inputData?.SampleReceiving?.jsondata) {\r\n            try {\r\n              \r\n                const jsonData = JSON.parse(inputData.SampleReceiving.jsondata);\r\n               \r\n                return jsonData.hasOwnProperty(\"NoRecord\");\r\n            } catch (error) {\r\n           \r\n                console.error(\"Invalid JSON string:\", error);\r\n                return false;\r\n            }\r\n        }\r\n        // Return false if jsondata does not exist\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let inputData = {};\r\n\r\n        const jsonDataCheck = this.state.barcodedata;\r\n\r\n        if (selectedRecord[\"sbarcodeid\"] && selectedRecord[\"sbarcodeid\"].length === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength) ) {\r\n            if(jsonDataCheck !== undefined && jsonDataCheck !== '' && jsonDataCheck !=0){\r\n\r\n            inputData[\"SampleReceiving\"] = {};\r\n            if (this.props.Login.operation === \"create\") {\r\n\r\n                inputData[\"SampleReceiving\"][\"jsondata\"] = Lims_JSON_stringify(JSON.stringify(this.state.barcodedata));\r\n            }\r\n            inputData[\"SampleReceiving\"][\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n            if (this.props.Login.operation === \"update\") {\r\n                inputData[\"SampleReceiving\"][\"nstoragesamplereceivingcode\"] = this.props.Login.selectedId;\r\n            }\r\n            inputData[\"SampleReceiving\"][\"sbarcodeid\"] = selectedRecord[\"sbarcodeid\"] ? selectedRecord[\"sbarcodeid\"] : -1;\r\n\r\n            inputData[\"SampleReceiving\"][\"dcollectiondate\"] = formatInputDate(selectedRecord[\"dcollectiondate\"], false);\r\n            inputData[\"SampleReceiving\"][\"scomments\"] = selectedRecord[\"scomments\"] && selectedRecord[\"scomments\"] || \"\";\r\n            inputData[\"SampleReceiving\"][\"ntzcollectiondatetime\"] = selectedRecord[\"ntzcollectiondatetime\"] && selectedRecord[\"ntzcollectiondatetime\"].value || transactionStatus.NA\r\n            inputData[\"SampleReceiving\"][\"noffsetdcollectiondatetime\"] = selectedRecord[\"noffsetdcollectiondatetime\"] && selectedRecord[\"noffsetdcollectiondatetime\"].value || transactionStatus.NA\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData[\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n            inputData[\"userinfo\"] = {\r\n                ...this.props.Login.userInfo,\r\n                sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\r\n            }\r\n\r\n\r\n\r\n            const inputParam = {\r\n                nformcode: this.props.Login.userInfo.nformcode,\r\n                classUrl: \"samplereceiving\",\r\n                methodUrl: \"SampleReceiving\",\r\n                inputData: inputData,\r\n                operation: this.props.Login.operation,\r\n                displayName:\"IDS_STORAGESAMPLERECEIVING\",\r\n                saveType, formRef,\r\n                selectedRecord: this.state.selectedRecord || {}\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.saveReceiving(inputParam, masterData);\r\n            }\r\n        }\r\n            else {\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_CLICKENTERTOJSONRECORD\",\r\n                    })\r\n                );\r\n            }\r\n        \r\n        } else {\r\n           \r\n\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_INVALIDABARCODE\",\r\n                    })\r\n                );\r\n\r\n            }\r\n          \r\n        \r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (fieldName === \"nprojecttypecode\") {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: parseInt(comboData.value),\r\n                selectedProjectType: comboData,\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n            const masterData = { ...this.props.Login.masterData }\r\n            const inputParam = { masterData, inputData }\r\n            this.props.getSampleReceiving(inputParam)\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChangeSlidout = (dateName, dateValue) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onInputOnChange = (event, fieldname) => {\r\n\r\n        const value = event.target.value;\r\n        //const { selectedRecord } = this.state;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (fieldname === 'sbarcodeid') {\r\n            \r\n            if (!/^\\s*$/.test(value) && value.length >= parseInt(this.props.Login.settings[37])) {\r\n                \r\n                if (event.target.name === \"sbarcodeid\") {\r\n                    selectedRecord[event.target.name] = value;\r\n                } else {\r\n                    selectedRecord[event.target.name] = value;\r\n                }\r\n                const barcodenorecord = false;\r\n                this.setState({ selectedRecord: selectedRecord, barcodenorecord: barcodenorecord });\r\n            } else {\r\n\r\n                const str = true;\r\n                this.setState({ barcodenorecord: str });\r\n            }\r\n\r\n        }\r\n\r\n        selectedRecord[event.target.name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    barcodeEnter = (event, fieldName) => {\r\n        const value = this.state.selectedRecord.sbarcodeid;\r\n\r\n        if (!/^\\s*$/.test(value) && value.length === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength) && event.keyCode === 13) {\r\n\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate,\r\n                this.props.Login.masterData.ToDate,\r\n                this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n            const masterData = { ...this.props.Login.masterData }\r\n            const inputParam = { masterData, inputData }\r\n            this.props.getBarcodeDataRecord(inputParam)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { projectType } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData.projectType !== previousProps.Login.masterData.projectType) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            bool = true;\r\n        }\r\n\r\n        // if (this.props.Login.masterData.SampleReceiving !== previousProps.Login.masterData.SampleReceiving) {\r\n        //     let samplecollect = [];\r\n        //     samplecollect =\r\n        //         this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\r\n        //             const entries = Object.entries(sampleItem.jsondata);\r\n        //             if (entries.length > 0) {\r\n        //                 const newItem = { ...sampleItem };\r\n        //                 entries.forEach(([key, value]) => {\r\n\r\n        //                     newItem[key] = value;\r\n\r\n        //                 });\r\n        //                 return newItem;\r\n        //             }\r\n        //             return sampleItem;\r\n        //         });\r\n\r\n        //         let { dataState } = this.state;\r\n        //         if (dataState === undefined) {\r\n        //             dataState = { skip: 0, take: this.state.dataState.take }\r\n        //         }\r\n        //         if (this.state.dataResult.data) {\r\n        //             if (this.state.dataResult.data.length === 1) {\r\n        //                 let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n        //                     this.state.dataState.skip\r\n        //                 dataState = { skip: skipcount, take: this.state.dataState.take }\r\n        //             }\r\n        //         }\r\n        //         this.setState({\r\n        //             data: samplecollect,\r\n        //             dataState,\r\n        //             dataResult: process(samplecollect || [], dataState),\r\n        //         });\r\n        // }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                let samplecollect = [];\r\n                samplecollect =\r\n                    this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\r\n                        const entries = Object.entries(sampleItem.jsondata);\r\n                        if (entries.length > 0) {\r\n                            const newItem = { ...sampleItem };\r\n                            entries.forEach(([key, value]) => {\r\n    \r\n                                newItem[key] = value;\r\n    \r\n                            });\r\n                            return newItem;\r\n                        }\r\n                        return sampleItem;\r\n                    });\r\n                //     let { dataState } = this.state;\r\n                // if (dataState === undefined) {\r\n                //     dataState = { skip: 0, take: this.state.dataState.take }\r\n                // }\r\n                // if (this.state.dataResult.data) {\r\n                //     if (this.state.dataResult.data.length === 1) {\r\n                //         let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                //             this.state.dataState.skip\r\n                //         dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                //     }\r\n                // }\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: samplecollect,\r\n                    dataResult: process(samplecollect || [],this.state.dataState),\r\n                });\r\n            }else {\r\n\r\n                //jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\r\n\r\n                let samplereceiving = [];\r\n                samplereceiving =\r\n                    this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\r\n                        const entries = Object.entries(sampleItem.jsondata);\r\n                        if (entries.length > 0) {\r\n                            const newItem = { ...sampleItem };\r\n                            entries.forEach(([key, value]) => {\r\n    \r\n                                newItem[key] = value;\r\n    \r\n                            });\r\n                            return newItem;\r\n                        }\r\n                        return sampleItem;\r\n                    });\r\n\r\n                let {dataState}=this.state;\r\n                if(this.props.Login.dataState===undefined  || this.props.Login.masterData.selectedProjectType !== previousProps.Login.masterData.selectedProjectType){\r\n                    dataState={skip:0,take:this.state.dataState.take}\r\n                }\r\n                 if(this.state.dataResult.data){\r\n                     if(this.state.dataResult.data.length ===1){\r\n                        let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n                        this.state.dataState.skip\r\n                         dataState={skip:skipcount,take:this.state.dataState.take}\r\n                     }\r\n                 }\r\n                 this.setState({\r\n                    data: samplereceiving, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(samplereceiving || [],dataState),\r\n                    dataState\r\n                });\r\n            }\r\n            // else {\r\n            //     if (this.props.Login.masterData.SampleReceiving) {\r\n            //         let samplecollect = [];\r\n            //         samplecollect =\r\n            //             this.props.Login.masterData.SampleReceiving && this.props.Login.masterData.SampleReceiving.map(sampleItem => {\r\n            //                 const entries = Object.entries(sampleItem.jsondata);\r\n            //                 if (entries.length > 0) {\r\n            //                     const newItem = { ...sampleItem };\r\n            //                     entries.forEach(([key, value]) => {\r\n\r\n            //                         newItem[key] = value;\r\n\r\n            //                     });\r\n            //                     return newItem;\r\n            //                 }\r\n            //                 return sampleItem;\r\n            //             });\r\n\r\n            //         this.setState({\r\n            //             data: samplecollect,\r\n            //             dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            //             dataResult: process(samplecollect || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\r\n            //         });\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        // if (this.props.Login.masterData.barcodenorecord !== previousProps.Login.masterData.barcodenorecord) {\r\n        //     this.setState({ barcodenorecord: this.props.Login.masterData.barcodenorecord });\r\n        // }\r\n        if (this.props.Login.masterData.jsondataBarcodeFields !== previousProps.Login.masterData.jsondataBarcodeFields) {\r\n            const retrievedData = sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");\r\n            this.setState({ jsondataBarcodeFields: retrievedData });\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.jsondataBarcodeFields !== previousProps.Login.masterData.jsondataBarcodeFields) {\r\n            this.setState({ jsondataBarcodeFields: this.props.Login.masterData.jsondataBarcodeFields });\r\n        }\r\n\r\n        if (this.props.Login.masterData.barcodeFields !== previousProps.Login.masterData.barcodeFields) {\r\n            this.setState({ barcodeFields: this.props.Login.masterData.barcodeFields });\r\n        }\r\n\r\n        if (this.props.Login.masterData.barcodedata !== previousProps.Login.masterData.barcodedata) {\r\n            this.setState({ barcodedata: this.props.Login.masterData.barcodedata });\r\n        }\r\n\r\n        // if (this.props.Login.barcodenorecord !== previousProps.Login.barcodenorecord) {\r\n        //     this.setState({ barcodenorecord: false });\r\n        // }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                projectType\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        if (dateName === 'todate') {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        // this.setState({ selectedRecord });\r\n        // this.reloadData(selectedRecord, true);\r\n\r\n        let dateObj = {};\r\n        let obj = convertDateValuetoString(selectedRecord['fromdate'] && selectedRecord['fromdate'] || this.props.Login.masterData.FromDate, selectedRecord['todate'] && selectedRecord['todate'] || this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: fromDate,\r\n                toDate: toDate,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.value || -1\r\n            },\r\n            classUrl: 'samplereceiving',\r\n            methodUrl: \"SampleReceiving\",\r\n            displayName: \"IDS_STORAGESAMPLERECEIVING\",\r\n            userInfo: this.props.Login.userInfo, selectedRecord\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    reloadData = (selectedRecord, isDateChange) => {\r\n        //this.searchRef.current.value = \"\";\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n\r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo, true);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                //ALPD-4684-Vignesh R(20-08-2024)\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType.value || -1,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate\r\n            },\r\n            classUrl: 'samplereceiving',\r\n            methodUrl: \"SampleReceiving\",\r\n            displayName: \"IDS_STORAGESAMPLERECEIVING\",\r\n            userInfo: this.props.Login.userInfo,\r\n            selectedRecord: this.state.selectedRecord || {}\r\n\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n    samplereceivingData = (SampleReceivingReportId) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate,\r\n            this.props.Login.masterData.ToDate,\r\n            this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const filterTestParam = {\r\n            todate: toDate,\r\n            fromdate: fromDate,\r\n            nprojecttypecode:this.props.Login.masterData.selectedProjectType.value || -1,\r\n            nsitecode:this.props.Login.userInfo.nsitecode\r\n        }\r\n\r\n\r\n        this.props.generateControlBasedReport(SampleReceivingReportId, filterTestParam, this.props.Login, \"nsamplereceivingcode\",\r\n            this.state.selectedRecord.nsamplereceivingcode);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getActiveSampleReceivingById, getSampleReceiving,generateControlBasedReport,\r\n    updateStore, validateEsignCredential, getComboSampleReceiving, getBarcodeDataRecord, saveReceiving\r\n})(injectIntl(SampleReceivingStorage));"]},"metadata":{},"sourceType":"module"}