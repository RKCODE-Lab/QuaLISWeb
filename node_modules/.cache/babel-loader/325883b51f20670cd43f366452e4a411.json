{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export function getTestPriceVersionDetail(testPriceVersion,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"testpricing/getTestPriceVersion\",{npriceversioncode:testPriceVersion.npriceversioncode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEditTestPriceVersionService(inputParam){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"testpricing/getActiveTestPriceVersionById\",(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.primaryKeyName,inputParam.masterData.SelectedTestPriceVersion[inputParam.primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){//const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:inputParam.operation,loading:false,screenName:inputParam.screenName,selectedRecord:response.data,ncontrolCode:inputParam.ncontrolcode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPricingAddTestService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedTestPriceVersion.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"testpricing/getPriceUnmappedTest\",{\"npriceversioncode\":masterData.SelectedTestPriceVersion[\"npriceversioncode\"],userinfo:userInfo}).then(function(response){// const testMap = constructOptionList(response.data || [], \"ntestcode\", \"stestname\",\n//              undefined, undefined, true) ;\n// const testList = testMap.get(\"OptionList\");                          \ndispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \npricingTestList:response.data,openModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTTESTPRICEVERSION\"}));}};}export function getPricingEditService(editParam){return function(dispatch){// screenName, operation, masterData, userInfo, ncontrolCode\n//console.log(\"editParam:\", editParam);\nif(editParam.masterData.SelectedTestPriceVersion.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"testpricing/getTestPrice\",{\"npriceversioncode\":editParam.masterData.SelectedTestPriceVersion[\"npriceversioncode\"],\"ntestpricecode\":editParam.editRow?editParam.editRow.ntestpricecode:null,userinfo:editParam.userInfo}).then(function(response){var selectedRecord=[];if(editParam.editRow){selectedRecord.push(response.data[\"SelectedTestPrice\"]);}else{selectedRecord=sortData(response.data[\"TestPrice\"]);}dispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \n//testPriceList:response.data[\"TestPrice\"],\nopenModal:true,operation:editParam.operation,screenName:editParam.screenName,ncontrolCode:editParam.ncontrolCode,selectedRecord:selectedRecord,selectedId:editParam.editRow?editParam.editRow.ntestpricecode:null,loading:false,priceDataState:editParam.priceDataState}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTTESTPRICEVERSION\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TestMasterPricingAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","initRequest","transactionStatus","intl","getTestPriceVersionDetail","testPriceVersion","userInfo","masterData","dispatch","post","npriceversioncode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getEditTestPriceVersionService","inputParam","primaryKeyName","SelectedTestPriceVersion","openModal","screenName","selectedRecord","ncontrolCode","ncontrolcode","getPricingAddTestService","ntransactionstatus","DRAFT","pricingTestList","formatMessage","id","getPricingEditService","editParam","editRow","ntestpricecode","push","selectedId","priceDataState"],"mappings":"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","sourcesContent":["\r\nimport rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\n\r\nexport function getTestPriceVersionDetail (testPriceVersion, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"testpricing/getTestPriceVersion\", {npriceversioncode:testPriceVersion.npriceversioncode, \r\n                                                          userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getEditTestPriceVersionService(inputParam){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testpricing/getActiveTestPriceVersionById\",{[inputParam.primaryKeyName]:inputParam.masterData.SelectedTestPriceVersion[inputParam.primaryKeyName], \r\n                                                                    userinfo:inputParam.userInfo})\r\n        .then(response=>{\r\n            //const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\r\n            \r\n            \r\n            dispatch({type: DEFAULT_RETURN, payload:{ openModal:true,\r\n                                                       operation:inputParam.operation, \r\n                                                       loading:false,\r\n                                                       screenName:inputParam.screenName,   \r\n                                                       selectedRecord:response.data,\r\n                                                       ncontrolCode:inputParam.ncontrolcode,}})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })\r\n    }\r\n}\r\n\r\nexport function getPricingAddTestService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testpricing/getPriceUnmappedTest\",{\"npriceversioncode\":masterData.SelectedTestPriceVersion[\"npriceversioncode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n                // const testMap = constructOptionList(response.data || [], \"ntestcode\", \"stestname\",\r\n                //              undefined, undefined, true) ;\r\n\r\n                // const testList = testMap.get(\"OptionList\");                          \r\n                dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                                                        pricingTestList:response.data,\r\n                                                        openModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\r\n    }\r\n}}\r\n\r\nexport function getPricingEditService(editParam){\r\n    return function (dispatch) {    \r\n       // screenName, operation, masterData, userInfo, ncontrolCode\r\n       //console.log(\"editParam:\", editParam);\r\n        if (editParam.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testpricing/getTestPrice\",{\"npriceversioncode\":editParam.masterData.SelectedTestPriceVersion[\"npriceversioncode\"], \r\n                                                \"ntestpricecode\":editParam.editRow ? editParam.editRow.ntestpricecode :null,\r\n                                                userinfo:editParam.userInfo})\r\n\r\n        .then(response=>{\r\n                   \r\n                let selectedRecord =[];\r\n                if (editParam.editRow){\r\n                    selectedRecord.push(response.data[\"SelectedTestPrice\"]);\r\n                }\r\n                else{\r\n                    selectedRecord = sortData(response.data[\"TestPrice\"])\r\n                }\r\n                dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                                                        //testPriceList:response.data[\"TestPrice\"],\r\n                                                        openModal:true,\r\n                                                        operation:editParam.operation,\r\n                                                        screenName:editParam.screenName, \r\n                                                        ncontrolCode:editParam.ncontrolCode,\r\n                                                        selectedRecord, \r\n                                                        selectedId:editParam.editRow ? editParam.editRow.ntestpricecode :null,\r\n                                                        loading:false,\r\n                                                        priceDataState:editParam.priceDataState}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\r\n    }\r\n}}"]},"metadata":{},"sourceType":"module"}