{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\Approval.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { faFileInvoice, faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\nimport { ContentPanel } from '../../components/App.styles';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport { process } from \"@progress/kendo-data-query\"; //import SplitPane from \"react-splitter-layout\";\n\nimport SplitterLayout from \"react-splitter-layout\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport, getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail, ViewPatientDetails, getTestBasedCompletedBatch, updateEnforceStatus, checkReleaseRecord } from '../../actions';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ApprovalResultsTab from './ApprovalResultsTab';\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify'; //import TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\n\nimport ApprovalFilter from './ApprovalFilter';\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno, SideBarTabIndex } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport SampleInfoGrid from './SampleInfoGrid';\nimport SampleInfoView from './SampleInfoView';\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport Esign from '../audittrail/Esign';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EditApprovalParameter from './EditApprovalParameter'; //import ApprovalHistoryTab from './ApprovalHistoryTab';\n\nimport SampleApprovalHistory from './SampleApprovalHistory';\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\nimport ApprovalTask from './ApprovalTask';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\nimport TemplateForm from '../checklist/checklist/TemplateForm';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport CustomPopOver from '../../components/customPopover';\nimport ScrollBar from 'react-perfect-scrollbar';\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport ReportHistoryTab from './ReportHistoryTab'; // import ReactTooltip from 'react-tooltip';\n\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SpecificationInfo from '../testgroup/SpecificationInfo';\nimport fullviewExpand from \"../../assets/image/fullview-expand.svg\";\nimport fullviewCollapse from \"../../assets/image/fullview-collapse.svg\";\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import ReactTooltip from 'react-tooltip';\n\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport { checkBoxOperation } from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Approval extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subSampleSkip: e.skip,\n        subSampleTake: e.take\n      });\n    };\n\n    this.showAPSampleinfo = () => {\n      this.setState({\n        showSample: true,\n        showTest: false\n      });\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.currentResultStateChange = event => {\n      this.setState({\n        currentResultState: event.dataState\n      });\n    };\n\n    this.tabDetailResultView = () => {\n      const tabMap = new Map();\n      {\n        tabMap.set(\"IDS_PREVIOUSRESULT\", /*#__PURE__*/React.createElement(DataGrid, {\n          primaryKeyField: \"ntransactiontestcode\",\n          data: this.props.Login.masterData.AuditModifiedComments || [],\n          detailedFieldList: this.feildsForGrid,\n          extractedColumnList: this.feildsForGrid,\n          dataResult: this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0 && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.state.dataState ? this.state.dataState : {\n            skip: 0,\n            take: 10\n          },\n          pageable: true,\n          pageSizes: this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n          scrollable: 'scrollable',\n          dataStateChange: this.dataStateChange,\n          activeTabName: \"IDS_PREVIOUSRESULT\",\n          gridHeight: '500px',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }\n        }));\n        tabMap.set(\"IDS_CURRENTRESULT\", /*#__PURE__*/React.createElement(DataGrid, {\n          primaryKeyField: \"ntransactiontestcode\",\n          data: this.props.Login.masterData.CurrentResult || [],\n          detailedFieldList: this.feildsForGrid,\n          extractedColumnList: this.feildsForGrid,\n          dataResult: this.props.Login.masterData.CurrentResult && this.props.Login.masterData.CurrentResult.length > 0 && process(this.props.Login.masterData.CurrentResult, this.state.currentResultState ? this.state.currentResultState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.state.currentResultState ? this.state.currentResultState : {\n            skip: 0,\n            take: 10\n          },\n          pageable: true,\n          scrollable: 'scrollable',\n          dataStateChange: this.currentResultStateChange,\n          activeTabName: \"IDS_CURRENTRESULT\",\n          pageSizes: this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n          gridHeight: '500px',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.onTabChangeResultView = tabProps => {\n      let masterData = this.props.Login.masterData && this.props.Login.masterData;\n      masterData['activeTabName'] = tabProps.activeTabName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.verticalPaneSizeChange = val => {\n      if (this.state.enableAutoHeight) {\n        this.setState({\n          initialVerticalWidth: val - 150\n        });\n      }\n    };\n\n    this.changeSplitterOption = () => {\n      this.setState({\n        enableAutoHeight: !this.state.enableAutoHeight,\n        initialVerticalWidth: \"57vh\"\n      });\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_RESULTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        tabDetail: this.resultTabDetail(),\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }) : screenName == \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }\n      }) : screenName == \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }) : screenName == \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(ApprovalInstrumentTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.instrumentDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_INSTRUMENT\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 29\n        }\n      }) : screenName == \"IDS_MATERIAL\" ? /*#__PURE__*/React.createElement(ApprovalUsedMaterial, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"ResultUsedMaterial\",\n        controlMap: this.state.controlMap // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        ,\n        dataState: this.state.materialDataState // selectedId={this.props.Login.selectedId || null}\n        ,\n        isActionRequired: false,\n        dataStateChange: this.testDataStateChange //deleteRecord={this.deleteMaterialRecord}\n        ,\n        fetchRecord: this.props.fetchMaterialRecord,\n        userRoleControlRights: this.state.userRoleControlRights,\n        screenName: \"IDS_MATERIAL\",\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 33\n        }\n      }) : screenName == \"IDS_TASK\" ? /*#__PURE__*/React.createElement(ApprovalTask, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        ResultUsedTasks: this.props.Login.masterData.ResultUsedTasks,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.taskDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TASK\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 37\n        }\n      }) : screenName == \"IDS_TESTAPPROVALHISTORY\" ? /*#__PURE__*/React.createElement(ApprovalHistoryTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        ApprovalHistory: this.props.Login.masterData.ApprovalHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.historyDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TESTAPPROVALHISTORY\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 45\n        }\n      }) : screenName == \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0 ? this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {},\n        SingleItem: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.APSelectedSample,\n        userInfo: this.props.Login.userInfo || {},\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleInfoDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_SAMPLEINFO\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 49\n        }\n      }) : \"\";\n    };\n\n    this.changePropertyViewClose = id => {\n      // this.setState({\n      //             activeTabIndex :undefined,\n      //             activeTestTab:undefined,\n      //             activeTabId :  id\n      //         })\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, screenName, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      } //console.log(this.state.activeTabId, id , \"=======>\")\n\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false; //activeTabId = this.state.activeTabIndex !== index ? true:false;\n      }\n\n      if (status != \"click\") {\n        if (index) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName,\n            activeTabIndex //activeTabId\n\n          };\n          this.onTabChange(tabProps);\n        } //     if (index == SideBarTabIndex.RESULT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_RESULTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.INSTRUMENT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_INSTRUMENT\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.MATERIAL) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_MATERIAL\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.TASK) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TASK\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTAPPROVALHISTORY\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.ATTACHMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTATTACHMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.COMMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTCOMMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else {\n        //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        //             const updateInfo = {\n        //                 typeName: DEFAULT_RETURN,\n        //                 data: {\n        //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n        //                     activeTabId: id\n        //                 }\n        //             }\n        //             this.props.updateStore(updateInfo);\n        //         }\n        //     }\n\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence; // if (activeTestTab !== this.props.Login.activeTestTab) {\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            resultDataState: this.state.resultDataState,\n            instrumentDataState: this.state.instrumentDataState,\n            materialDataState: this.state.materialDataState,\n            taskDataState: this.state.taskDataState,\n            documentDataState: this.state.documentDataState,\n            historyDataState: this.state.historyDataState,\n            resultChangeDataState: this.state.resultChangeDataState,\n            testCommentDataState: this.state.testCommentDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getTestChildTabDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.APSelectedSample,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      } //}\n\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        UserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\n        TestValue: this.props.Login.masterData.realTestValue || {},\n        BatchValue: this.props.Login.masterData.realBatchvalue || {},\n        defaultBatchvalue: this.props.Login.masterData.realBatchvalue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        UserSection: this.props.Login.masterData.realUserSectionList || [],\n        Test: this.props.Login.masterData.realTestList || [],\n        Batchvalues: this.props.Login.masterData.realBatchvaluesList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      }; // JobStatus={this.props.Login.masterData.JobStatus || []}\n      // DynamicDesignMapping={this.state.stateDynamicDesign || []}\n      // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadReport = input => {\n      let inputParam = {\n        inputData: {\n          selectedRecord: { ...input.inputData\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"approval\",\n        operation: \"view\",\n        methodUrl: \"Report\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.subsampleTabDetail = () => {\n      let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      const tabMap = new Map();\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      let {\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2227,\n          columnNumber: 48\n        }\n      }));\n      tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2268,\n          columnNumber: 45\n        }\n      }));\n      return tabMap;\n    };\n\n    this.resultTabDetail = () => {\n      const resultTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      resultTabMap.set(\"IDS_RESULTS\", /*#__PURE__*/React.createElement(ApprovalResultsTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        tabSequence: SideBarSeqno.TEST,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTS\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        getStatusCombo: this.props.getStatusCombo,\n        selectedId: this.props.Login.masterData.selectedParamId,\n        viewFile: this.props.viewAttachment,\n        checkListRecord: this.props.checkListRecord,\n        getEnforceCommentsHistory: this.props.getEnforceCommentsHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2326,\n          columnNumber: 41\n        }\n      }));\n      resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\", /*#__PURE__*/React.createElement(ResultChangeHistoryTab, {\n        tabSequence: SideBarSeqno.TEST,\n        genericLabel: this.props.Login.genericLabel,\n        userInfo: this.props.Login.userInfo,\n        ApprovalResultChangeHistory: this.props.Login.masterData.ApprovalResultChangeHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultChangeDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTCHANGEHISTORY\",\n        controlMap: this.state.controlMap,\n        masterData: this.props.Login.masterData,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2345,\n          columnNumber: 13\n        }\n      }));\n      return resultTabMap;\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_TESTATTACHMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"screateddate\"\n        }],\n        isneedReport: false,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2382,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment //  masterList={this.props.Login.masterData.APSelectedSubSample}\n        ,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2428,\n          columnNumber: 58\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: this.props.Login.masterData.APSelectedSample,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick // masterList={this.props.Login.masterData.APSelectedSample}\n        ,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.APSelectedSample\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2472,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        isSampleTestComment: true,\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        isneedReport: false,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2536,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false //  masterList={this.props.Login.masterData.APSelectedSubSample}\n        ,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2585,\n          columnNumber: 53\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false //masterList={this.props.Login.masterData.APSelectedSample}\n        ,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.sampleCommentDataState,\n        dataStateChange: this.sampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.APSelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2632,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (value === 0 || value === 0.0) {\n        selectedRecord[name] = \"\";\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[name] = value;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      }); //setTimeout(() => { this._scrollBarRef.updateScroll() })\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.closeAlert = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          availableReleaseRecord: undefined,\n          loading: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkRetestAction = (action, ncontrolCode) => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.props.Login.availableReleaseRecord == undefined) {\n          //|| action.ntransactionstatus === transactionStatus.RECALC) \n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n              let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n              if (ntransCode === transactionStatus.ALL) {\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n              } else {\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n              }\n\n              let {\n                testskip,\n                testtake\n              } = this.state;\n              let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n              testList = testList.slice(testskip, testskip + testtake);\n              let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n              const inputParam = {\n                inputData: {\n                  'performaction': {\n                    npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n                    ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n                    nTransStatus: action.ntransactionstatus,\n                    stransdisplaystatus: action.stransdisplaystatus,\n                    ntransactionstatus: String(-1),\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                    nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                    nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n                    dfrom: obj.fromDate,\n                    dto: obj.toDate,\n                    nflag: 2,\n                    ntype: 1,\n                    userinfo: this.props.Login.userInfo,\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\n                    retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n                    ncontrolCode,\n                    //  checkBoxOperation: 3,\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                    nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n                    activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n                    activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n                    activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\n                  },\n                  userinfo: this.props.Login.userInfo\n                },\n                userinfo: this.props.Login.userInfo,\n                masterData: this.props.Login.masterData,\n                methodUrl: \"checkReleaseRecord\",\n                postParamList: this.postParamList,\n                action: action,\n                availableReleaseRecord: undefined\n              };\n              this.props.checkReleaseRecord(inputParam);\n            }\n          }\n        } else if (action.ntransactionstatus === transactionStatus.RETEST) {\n          //&& this.props.Login.availableReleaseRecord === false) {\n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              if (this.props.Login.masterData.APSelectedTest[0].nisiqcmaterial === 3) {\n                toast.warn(this.props.intl.formatMessage({\n                  id: \"IDS_IQCSAMPLECAN'TRETEST\"\n                }));\n              } else {\n                const updateInfo = {\n                  typeName: DEFAULT_RETURN,\n                  data: {\n                    action,\n                    masterData: this.props.Login.masterData,\n                    openChildModal: true,\n                    screenName: \"IDS_RETESTCOUNT\",\n                    operation: \"dynamic\",\n                    availableReleaseRecord: undefined\n                  }\n                };\n                this.props.updateStore(updateInfo);\n              }\n            }\n          } else {\n            this.performTestActions(action, ncontrolCode);\n          }\n        } else if (action.ntransactionstatus === transactionStatus.RECALC && this.props.Login.availableReleaseRecord == undefined) {\n          const inputParam = {\n            inputData: {\n              'performaction': {\n                npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n                ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n                nTransStatus: action.ntransactionstatus,\n                stransdisplaystatus: action.stransdisplaystatus,\n                ntransactionstatus: String(-1),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n                // dfrom: obj.fromDate,\n                // dto: obj.toDate,\n                nflag: 2,\n                ntype: 1,\n                userinfo: this.props.Login.userInfo,\n                APSelectedSample: this.props.Login.masterData.APSelectedSample,\n                APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n                APSelectedTest: this.props.Login.masterData.APSelectedTest,\n                retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n                ncontrolCode,\n                // checkBoxOperation: 3,\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n                activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n                activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n                activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\n              },\n              userinfo: this.props.Login.userInfo\n            },\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            methodUrl: \"checkReleaseRecord\",\n            postParamList: this.postParamList,\n            action: action,\n            availableReleaseRecord: undefined\n          };\n          this.props.checkReleaseRecord(inputParam);\n        } else if (action.ntransactionstatus === transactionStatus.RECALC) {\n          // && this.props.Login.availableReleaseRecord === false)\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              action,\n              masterData: this.props.Login.masterData,\n              //openChildModal: true,\n              //screenName: \"IDS_RETESTCOUNT\",\n              operation: \"dynamic\",\n              availableReleaseRecord: undefined\n            }\n          };\n          this.props.updateStore(updateInfo);\n          this.performTestActions(action, ncontrolCode);\n        } else {\n          this.performTestActions(action, ncontrolCode);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.performTestActions = (action, ncontrolCode) => {\n      if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount);\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n        if (ntransCode === transactionStatus.ALL) {\n          ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        } else {\n          ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n        }\n\n        let {\n          testskip,\n          testtake\n        } = this.state;\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n        testList = testList.slice(testskip, testskip + testtake);\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n        const inputParam = {\n          inputData: {\n            'performaction': {\n              npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n              ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n              ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n              nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              nTransStatus: action.ntransactionstatus,\n              stransdisplaystatus: action.stransdisplaystatus,\n              ntransactionstatus: String(-1),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nflag: 2,\n              ntype: 1,\n              userinfo: this.props.Login.userInfo,\n              APSelectedSample: this.props.Login.masterData.APSelectedSample,\n              APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n              APSelectedTest: this.props.Login.masterData.APSelectedTest,\n              retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              ncontrolCode,\n              //  checkBoxOperation: 3,\n              checkBoxOperation: checkBoxOperation.SINGLESELECT,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n              nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n              activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n              activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n              activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\n            },\n            userinfo: this.props.Login.userInfo\n          },\n          masterData: this.props.Login.masterData,\n          methodUrl: \"performaction\",\n          postParamList: this.postParamList\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"performaction\",\n              operation: \"dynamic\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.performAction(inputParam);\n        }\n      }\n    };\n\n    this.updateDecision = action => {\n      let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus;\n\n      if (ntransCode === transactionStatus.ALL) {\n        ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      }\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      let {\n        skip,\n        take\n      } = this.state;\n      let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.splice(skip, skip + take);\n      let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\n\n      if (selectedsampleList.length > 0) {\n        const inputData = {\n          'updatedecision': {\n            npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\n            nTransStatus: action.ntransactionstatus,\n            ntransactionstatus: String(ntransCode),\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\n            nflag: 1,\n            userinfo: this.props.Login.userInfo,\n            napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\n            napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\n            selectedSample: this.props.Login.masterData.selectedSample\n          },\n          userinfo: this.props.Login.userInfo\n        };\n        let inputParam = {\n          postParamList: this.postParamList,\n          inputData,\n          masterData: this.props.Login.masterData\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"updatedecision\",\n              operation: \"decision\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateDecision(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLE\"\n        }));\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            this.props.getRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            this.props.getRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              //nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            let ApprovalVersionValue = comboData.item;\n            ApprovalVersionValue['napproveconfversioncode'] = comboData.value;\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              napproveconfversioncode: comboData.value,\n              ApprovalVersionValue: comboData.item,\n              //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\n              //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            let inputData = {\n              masterData: masterData,\n              ntestcode: comboData.item.ntestcode,\n              defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\n              //ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus.toString(),\n              userinfo: this.props.Login.userInfo,\n              napprovalversioncode: parseInt(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode)\n            };\n            this.props.getTestBasedCompletedBatch(inputData); // const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //     data: { masterData }\n            // }\n            // this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'nbatchmastercode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let defaultBatchvalue = comboData.item;\n            this.props.Login.masterData.defaultBatchvalue = defaultBatchvalue;\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData: { ...this.props.Login.masterData\n                }\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null,\n              //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1 //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode, \n\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        }\n      } else {\n        if (fieldName === 'nbatchmastercode') {\n          this.props.Login.masterData.defaultBatchvalue = [];\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData: { ...this.props.Login.masterData\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.onComboChange = comboData => {\n      if (comboData) {\n        let masterData = { ...this.props.Login.masterData,\n          GradeValue: comboData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            masterData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n          realRegTypeList: this.props.Login.masterData.realRegTypeList,\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getApprovalVersion(inputParam);\n    };\n\n    this.changeMandatory = (event, dataItem) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO;\n      selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"],\n        [dataItem.ntransactionresultcode]: value\n      };\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onReload = () => {\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realBatchvalue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        nbatchmastercode: realBatchvalue && realBatchvalue.nbatchmastercode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realBatchCodeValue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType && this.props.Login.masterData.SampleType;\n      let realRegTypeList = this.props.Login.masterData.RegType && this.props.Login.masterData.RegType;\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType && this.props.Login.masterData.RegSubType;\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus && this.props.Login.masterData.FilterStatus;\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion && this.props.Login.masterData.ApprovalVersion;\n      let realUserSectionList = this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection;\n      let realTestList = this.props.Login.masterData.Test && this.props.Login.masterData.Test;\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping;\n      let realBatchvalue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue;\n      let realBatchvaluesList = this.props.Login.masterData.Batchvalues && this.props.Login.masterData.Batchvalues; // Batchvalues:this.props.Login.masterData.realBatchvaluesList || {},\n\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue,\n        realBatchCodeValue,\n        realDesignTemplateMappingList,\n        realTestList,\n        realUserSectionList,\n        realApprovalVersionList,\n        realFilterStatusList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realSampleTypeList,\n        realBatchvalue,\n        realBatchvaluesList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab,\n        activeSampleTab: this.props.Login.activeSampleTab,\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        //  checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_RESULTS\":\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_INSTRUMENT\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_MATERIAL\":\n          this.setState({\n            materialDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TASK\":\n          this.setState({\n            taskDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_DOCUMENTS\":\n          this.setState({\n            documentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_RESULTCHANGEHISTORY\":\n          this.setState({\n            resultChangeDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTAPPROVALHISTORY\":\n          this.setState({\n            historyDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.subSampledataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subSampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subSampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            popUptestDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLEINFO\":\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEAPPROVALHISTORY\":\n          this.setState({\n            sampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_PRINTHISTORY\":\n          this.setState({\n            samplePrintHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_REPORTHISTORY\":\n          this.setState({\n            reportHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLECOMMENTS\":\n          this.setState({\n            sampleCommentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData;\n      let {\n        realFromDate,\n        realToDate,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n      let inputData = {};\n      let inputParam = {};\n      let ok = true;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.operation === 'enforce') {\n        inputData[\"enforcestatus\"] = {\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          ngradecode: this.props.Login.masterData.GradeValue.value || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\n          ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\n          senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\n          selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\n          // ALPD-1413\n          // ntransactionstatus: this.props.Login.masterData.FilterStatusValue \n          // ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\n          // || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \n          // ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\n          napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n          npreregno: \"0\",\n          preregno: this.props.Login.masterData.APSelectedSample[0].npreregno,\n          // ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample[0].ntransactionsamplecode,\n          nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n          ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          ntype: 2,\n          //  checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          activeTestTab: this.props.Login.activeTestTab || \"\",\n          activeSampleTab: this.props.Login.activeSampleTab || \"\",\n          activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n          enforcestatus: true,\n          masterData: this.props.Login.masterData\n        };\n        inputParam = {\n          methodUrl: \"EnforceStatus\",\n          classUrl: 'approval',\n          inputData: inputData,\n          masterData: this.props.Login.masterData,\n          postParam: {\n            selectedObject: \"APSelectedTest\",\n            primaryKeyField: \"ntransactiontestcode\"\n          },\n          operation: \"update\"\n        };\n      } else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord: this.state.selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation\n        };\n        inputParam = onSaveSampleAttachment(saveParam);\n      } else {\n        let approvalparameter = [];\n\n        if (this.state.selectedRecord.approvalParameterEdit) {\n          Object.keys(this.state.selectedRecord.approvalParameterEdit).map(key => approvalparameter.push({\n            ntransactionresultcode: key,\n            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\n          }));\n          inputData[\"approvalparameter\"] = approvalparameter;\n          inputParam = {\n            methodUrl: \"ApprovalParameter\",\n            classUrl: 'approval',\n            inputData: inputData,\n            postParam: {\n              selectedObject: \"APSelectedTest\",\n              primaryKeyField: \"ntransactiontestcode\"\n            },\n            operation: \"update\"\n          };\n        } else {\n          ok = false;\n          this.handleClose();\n        }\n      }\n\n      if (ok) {\n        if (this.props.Login.operation === 'enforce') {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                operation: this.props.Login.operation,\n                screenName: \"IDS_ENFORCESTATUS\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.updateEnforceStatus(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                operation: this.props.Login.operation,\n                screenName: \"IDS_ENFORCESTATUS\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        }\n      }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let templateData = this.props.Login.templateData;\n      let operation = this.props.Login.operation;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n      let availableReleaseRecord = this.props.Login.availableReleaseRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n          templateData = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n        }\n\n        selectedRecord['esignpassword'] = \"\";\n        selectedRecord['esigncomments'] = \"\";\n        selectedRecord['esignreason'] = \"\";\n        availableReleaseRecord = undefined;\n      } else {\n        openTemplateModal = false;\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        templateData = {};\n        availableReleaseRecord = undefined;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          templateData,\n          selectedParamId: null,\n          operation,\n          openTemplateModal,\n          availableReleaseRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewSample = viewdetails => {\n      this.props.ViewPatientDetails(this.props.Login.masterData, \"IDS_PREVIOUSRESULTVIEW\", this.props.Login.userInfo, viewdetails);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData,\n        operation: this.props.Login.operation\n      };\n\n      if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision' || this.props.Login.operation === 'enforce') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\n      }\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveTestComments(saveParam, selectedTestList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSampleComments(saveParam, acceptList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSubSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\"); // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\n\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSubSampleComments(saveParam, acceptList);\n        }\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let {\n        testskip,\n        testtake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let ok = true;\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n\n        if (selectedSampleList.length > 0) {\n          inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n\n        if (selectedTestList.length > 0) {\n          inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n        }\n      }\n    };\n\n    this.generateCOAReport = (inputData, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        let inputParam = {\n          reporparam: inputData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openChildModal: true,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: \"reportgeneration\",\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateCOAReport(inputData);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }]\n\n      },\n      instrumentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      materialDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      taskDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 // group: [{ field: 'sarno' }] \n\n      },\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      documentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      resultChangeDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      sampleHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      reportHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      historyDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      dataState: {\n        skip: 0,\n        take: 10\n      },\n      samplePrintHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }]\n\n      },\n      subSampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      currentResultState: {\n        skip: 0,\n        take: 10\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      showSample: false,\n      showSubSample: false,\n      showTest: true,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      stateDynamicDesign: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      TestList: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 22,\n      subSampleSkip: 0,\n      subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\n      initialVerticalWidth: \"57vh\",\n      enablePin: false\n    }; //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  } // onSecondaryPaneSizeChange = (e, val) => {\n  //     this.setState({\n  //         firstPane: e - val,\n  //         tabPane: e - 80,\n  //         childPane: this.state.parentHeight - e - 80\n  //     })\n  // }\n\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  constructDesign(list) {\n    let newList = [];\n\n    if (list.length > 0) {\n      list.map(i => {\n        newList.push({\n          [designProperties.LABEL]: i,\n          [designProperties.VALUE]: i\n        });\n      });\n    }\n\n    return newList;\n  }\n\n  showAPTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false,\n      showSubSample: false\n    });\n  }\n\n  showAPSubSampleinfo() {\n    this.setState({\n      showSample: false,\n      showTest: true,\n      showSubSample: !this.state.showSubSample\n    });\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\",\n        \"dataType\": [option[designProperties.LISTITEM]]\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const auditInfoFields = [// { \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \n    {\n      \"label\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"fieldName\": \"sarno\"\n    }, //{ \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\n    //{ \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \n    {\n      \"fieldName\": \"sfirstname\",\n      \"label\": \"IDS_PATIENTNAME\"\n    }, //{ \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\n    {\n      \"fieldName\": \"sgendername\",\n      \"label\": \"IDS_GENDER\"\n    } //{ \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\n    //{ \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\n    ];\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\n    {\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"200px\"\n    }, //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\n    //{ \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }, \n    {\n      \"idsName\": \"IDS_TEST\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETER\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REGISTRATIONDATE\",\n      \"dataField\": \"sregdate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTREFNO\",\n      \"dataField\": \"sreportno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    } // { \"idsName\": \"IDS_COMPLETEDDATEANDTIME\", \"dataField\": \"scompletedate\", \"width\": \"200px\" },\n    ];\n    const filterSampleParam = {\n      inputListName: \"AP_SAMPLE\",\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      selectedObject: \"APSelectedSample\",\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        // checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\n      searchFieldList: this.state.sampleSearchField || [],\n      changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"AP_SUBSAMPLE\",\n      selectedObject: \"APSelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        //  checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.subsampleSearchField || [],\n      changeList: [\"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\n    };\n    const filterTestParam = {\n      inputListName: \"AP_TEST\",\n      selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        // checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n      },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.testSearchField || [],\n      changeList: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedTest\"]\n    };\n    let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\n    let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\n    let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\n    let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\n    let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\n    let subSampleGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      subSampleCommentDataState: this.state.subSampleCommentDataState,\n      subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      // activeTabIndex: this.state.enableAutoClick ? 1 : \"\",\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n    };\n    let testChildGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      postParamList: this.postParamList,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      historyDataState: this.state.historyDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, // {\n    //     \"label\": \"IDS_SAMPLETYPE\",\n    //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\n    //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n    // }, \n    {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, // {\n    //     \"label\": \"IDS_DESIGNTEMPLATE\",\n    //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\n    //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\n    //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_CONFIGVERSION\",\n    //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\n    //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n    //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n    // // },\n    // {\n    //     \"label\": \"IDS_SECTION\",\n    //     \"value\": this.props.Login.masterData.realUserSectionValue ?\n    //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\n    //         this.props.Login.masterData.UserSectionValue ?\n    //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    // },\n    {\n      \"label\": \"IDS_Test\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const PatientPreviousResultViewId = this.state.controlMap.has(\"PatientPreviousResultView\") && this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode;\n    const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\n    const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\n    const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\n    const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\n    const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\n    const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\n    let {\n      testskip,\n      testtake\n    } = this.state;\n    let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n    const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n    testList = testList.slice(testskip, testskip + testtake);\n    let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n    let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      fecthInputObject: subSampleGetParam,\n      selectedObject: \"APSelectedSample\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"updatedSample\",\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      updatedListname: \"updatedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: testGetParam,\n      selectedObject: \"APSelectedSubSample\",\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      inputListName: \"AP_SUBSAMPLE\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedTests\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: testChildGetParam,\n      selectedObject: \"APSelectedTest\",\n      inputListName: \"AP_TEST\",\n      updatedListname: \"updatedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      clickIconGroup: true // paneHeight={this.state.initialVerticalWidth}\n      ,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedTests || AP_TestList,\n      selectedMaster: this.props.Login.masterData.APSelectedTest || [],\n      primaryKeyField: \"ntransactiontestcode\" //getMasterDetail={this.props.getTestChildTabDetail}\n      ,\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(1, \"IDS_RESULTS\", event, \"click\");\n      },\n      inputParam: testChildGetParam,\n      additionalParam: [],\n      mainField: 'stestsynonym',\n      selectedListName: \"APSelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      showStatusIcon: false,\n      showStatusName: true,\n      subFieldsLabel: true // jsonField={'jsondata'}\n      //jsonDesignFields={false}\n      ,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"scolorhexcode\",\n      selectionList: this.props.Login.masterData.FilterStatus || [],\n      needSubFieldlabel: true,\n      subFields: this.state.testListColumns,\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTests\",\n      searchRef: this.searchTestRef,\n      filterParam: filterTestParam,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"AP_SAMPLE\",\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\", \"ResultUsedMaterial\"],\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        hidden: this.state.userRoleControlRights.indexOf(editParamId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTMANDATORY\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": \"left\",\n        className: \"btn btn-circle outline-grey\",\n        onClick: () => this.props.getParameterEdit({\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 37\n        }\n      })), this.props.Login.masterData.actionStatus && this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 && actionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: actionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        dynamicButton: value => this.checkRetestAction(value, TestApprovalActionId),\n        textKey: \"stransdisplaystatus\",\n        iconKey: \"ntransactionstatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 37\n        }\n      }) : \"\") // actionIcons={\n      //     [\n      //        { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),  controlname: \"faEye\", hidden:this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\n      //     ]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage // onSecondaryPaneSizeChange={this.paneSizeChange}\n        ,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0  sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView //clickIconGroup={true}\n      , {\n        cardHead: 94 //paneHeight={this.state.initialVerticalWidth}\n        ,\n        masterList: this.props.Login.masterData.searchedSubSample || AP_SubSampleList,\n        selectedMaster: this.props.Login.masterData.APSelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\",\n        getMasterDetail: this.props.getTestDetail,\n        inputParam: testGetParam,\n        additionalParam: [],\n        mainField: \"ssamplearno\",\n        selectedListName: \"APSelectedSubSample\",\n        objectName: \"subSample\",\n        listName: \"IDS_SUBSAMPLE\",\n        showStatusLink: true,\n        showStatusName: false,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        selectionList: this.state.selectedFilter,\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"sfilterstatus\",\n        selectionColorField: \"stranscolor\",\n        statusColor: \"stranscolor\",\n        subFields: this.state.DynamicSubSampleColumns,\n        moreField: this.state.subSampleMoreField,\n        needValidation: false,\n        needMultiSelect: true,\n        needFilter: false,\n        searchRef: this.searchSubSampleRef,\n        filterParam: filterSubSampleParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        skip: this.state.subSampleSkip,\n        take: this.state.subSampleTake,\n        handlePageChange: this.handleSubSamplePageChange,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n        childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"ResultUsedMaterial\"],\n        subFieldsFile: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1233,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      bsPrefix: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage //onSecondaryPaneSizeChange={this.paneSizeChange} \n      ,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedSample || AP_SampleList,\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      primaryKeyField: \"npreregno\",\n      getMasterDetail: this.props.getsubSampleDetail,\n      inputParam: subSampleGetParam,\n      additionalParam: ['napprovalversioncode'],\n      mainField: 'sarno',\n      selectionList: this.state.selectedFilter,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"stranscolor\",\n      selectedListName: \"APSelectedSample\",\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedSample\",\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      moreField: this.state.sampleMoreField,\n      jsonDesignFields: true,\n      jsonField: 'jsondata',\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" //statusColor=\"sdecisioncolor\"\n      ,\n      statusColor: \"stranscolor\",\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      searchRef: this.searchSampleRef,\n      filterParam: filterSampleParam,\n      skip: this.state.skip,\n      take: this.state.take,\n      handlePageChange: this.handlePageChange,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      listMasterShowIcon: 0 //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n      ,\n      childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"],\n      actionIcons: [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: this.props.previewSampleReport,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId\n        }\n      } : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: obj => this.generateCOAReport(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode\n        }\n      } : {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\n        onClick: obj => this.props.reportGenerate(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: coaReportId\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_PREVIOUSRESULTVIEW\"\n        }),\n        controlname: \"faEye\",\n        hidden: this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1,\n        onClick: this.viewSample,\n        objectName: \"test\",\n        inputData: {\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          elnUserInfo: this.props.Login.elnUserInfo,\n          elnSite: this.props.Login.elnSite\n        }\n      }],\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        onClick: () => this.onReload() // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 65\n        }\n      })), this.props.Login.masterData.decisionStatus && this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 && this.props.Login.masterData.decisionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: decisionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        textKey: \"sdecisionstatus\",\n        iconKey: \"ntransactionstatus\",\n        dynamicButton: value => this.updateDecision(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 65\n        }\n      }) : \"\")),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ApprovalFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          Batch: this.state.Batchvalues || [],\n          BatchValue: this.props.Login.masterData.defaultBatchvalue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true ? {\n        display: \"block\",\n        background: \"#FFFF\"\n      } : {\n        display: \"none\",\n        background: \"#FFFF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1415,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-results position-relative sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 41\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 41\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1475,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1478,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TESTAPPROVALHISTORY\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1502,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1, \"IDS_RESULTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileInvoice //  data-for=\"tooltip-common-wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RESULTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2, \"IDS_ATTACHMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3, \"IDS_COMMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1518,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1519,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(5, \"IDS_MATERIAL\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1529,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFlask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(6, \"IDS_TASK\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCommentDots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8, \"IDS_SAMPLEDETAILS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch //label={\"IDS_AUTOSHOW\"}\n    , {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1556,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openChildModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'enforce' ? [{\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"senforcestatuscomment\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      loginoperation: this.props.Login.operation === 'view' ? true : false //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\n      ,\n      noSave: this.props.Login.operation === 'view' ? true : false,\n      hideSave: this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? true : false,\n      size: this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? \"xl\" : \"lg\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'enforce' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1616,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"ngradecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        value: this.props.Login.masterData.GradeValue || [],\n        options: this.props.Login.masterData.Grade || [],\n        optionId: \"ngradecode\",\n        optionValue: \"sgradename\",\n        isMandatory: true,\n        isMulti: false,\n        isDisabled: false,\n        isSearchable: false,\n        closeMenuOnSelect: true,\n        isClearable: false,\n        onChange: event => this.onComboChange(event, 'ngradecode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1617,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"senforcestatuscomment\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\",\n        rows: \"2\",\n        isMandatory: true,\n        required: false,\n        maxLength: 255,\n        onChange: event => this.onInputOnChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1633,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.operation === 'dynamic' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1647,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormNumericInput, {\n        name: \"retestcount\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_RETESTCOUNT\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount,\n        type: \"text\",\n        strict: true,\n        className: \"form-control\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\",\n        maxLength: 6,\n        onChange: event => this.onNumericInputOnChange(event, 'retestcount'),\n        isMandatory: \"*\",\n        required: true,\n        noStyle: true // min={1}\n        // max={this.props.Login.masterData.retestcount}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1661,\n          columnNumber: 45\n        }\n      }))) : this.props.Login.screenName === 'IDS_PREVIOUSRESULTVIEW' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n        className: \"one\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1683,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(SpecificationInfo, {\n        controlMap: this.state.controlMap,\n        auditInfoFields: auditInfoFields,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedSpecification: this.props.Login.masterData.viewdetails,\n        userInfo: this.props.Login.userInfo,\n        selectedNode: this.props.Login.masterData.selectedNode,\n        selectedRecord: this.state.filterData,\n        approvalRoleActionDetail: this.props.Login.masterData.ApprovalRoleActionDetail,\n        screenName: \"IDS_PREVIOUSRESULTVIEW\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 47\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(CustomTab, {\n        tabDetail: this.tabDetailResultView(),\n        onTabChange: this.onTabChangeResultView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 66\n        }\n      })))) : this.props.Login.operation === 'view' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"nresultparamcommenthistorycode\",\n        data: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataResult: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataState: {\n          skip: 0,\n          take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0\n        } // dataStateChange={this.dataStateChange}\n        ,\n        extractedColumnList: [{\n          \"idsName\": this.props.Login.idsName,\n          \"dataField\": this.props.Login.dataField,\n          \"width\": \"450px\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        pageable: false,\n        hideColumnFilter: true,\n        isActionRequired: false,\n        isToolBarRequired: false,\n        scrollable: \"scrollable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 49\n        }\n      }))) : /*#__PURE__*/React.createElement(EditApprovalParameter, {\n        ApprovalParamEdit: this.props.Login.ApprovalParamEdit || [],\n        changeMandatory: this.changeMandatory,\n        selectedRecord: this.state.selectedRecord.approvalParameterEdit || {},\n        nsubsampleneed: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1759,\n          columnNumber: 41\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ? /*#__PURE__*/React.createElement(TemplateForm, {\n      templateData: this.props.Login.masterData.ChecklistData,\n      needSaveButton: false,\n      formRef: this.formRef,\n      onTemplateInputChange: this.onTemplateInputChange,\n      handleClose: this.handleClose,\n      onTemplateComboChange: this.onTemplateComboChange,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.onSaveCheckList,\n      Login: this.props.Login,\n      viewScreen: this.props.Login.openTemplateModal,\n      selectedRecord: this.state.selectedRecord || [],\n      onTemplateDateChange: this.onTemplateDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentWillUnmount() {\n    let activeTabIndex = this.props.Login.activeTabIndex;\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        activeTabIndex: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      activeTabIndex,\n      activeTabId,\n      Batchvalues,\n      subSampleSkip,\n      subSampleTake\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true; // this.setState({userRoleControlRights, controlMap});\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState; // this.setState({\n        //     resultDataState: dataSate,instrumentDataState: dataSate,\n        //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\n        //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\n        //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\n        // });\n\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord; // this.setState({selectedRecord: this.props.Login.selectedRecord });\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      Batchvalues = constructOptionList(this.props.Login.masterData.Batchvalues || [], 'nbatchmastercode', 'sbatcharno', 'ascending', 'nbatchmastercode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      Batchvalues = Batchvalues.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      subSampleSkip = this.props.Login.subSampleSkip === undefined ? subSampleSkip : this.props.Login.subSampleSkip;\n      subSampleTake = this.props.Login.subSampleTake || subSampleTake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      }; // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \n      //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\n      // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\n      //     this.props.Login.masterData.FilterStatus : [];\n\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.availableReleaseRecord === true) {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_TESTADDEDINRELEASE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_AREUSURETORETESTORCALC\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.checkRetestAction(this.props.Login.action, this.props.Login.ncontrolCode), undefined, () => this.closeAlert());\n    }\n\n    if (this.props.Login.availableReleaseRecord === false) {\n      this.checkRetestAction(this.props.Login.action, this.props.Login.ncontrolCode);\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample && DynamicSubSampleColumns.push({\n        1: {\n          'en-US': 'Specimen',\n          'ru-RU': 'Образец',\n          'tg-TG': 'Намуна'\n        },\n        2: \"scomponentname\"\n      });\n      bool = true; // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\n      // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\n      // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\n      // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\n      // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\n      // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\n      // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\n      // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\n      // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\n      // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\n      // let {selectedRecord}=this.state\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate; // this.setState({\n      //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\n      //     sampleListMainField, subSampleListMainField, testListMainField,\n      //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\n      // })\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        activeTabIndex,\n        activeTabId,\n        Batchvalues,\n        subSampleSkip,\n        subSampleTake\n      });\n    }\n  } // previewSampleReport = (ncontrolCode) => {\n  //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\n  //     const selectedSample = this.props.Login.masterData.selectedSample[0];\n  //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\n  //                         userinfo:this.props.Login.userInfo,\n  //                         nprimarykey: selectedSample.npreregno,\n  //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\n  //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\n  //                         sprimarykeyname :\"npreregno\",\n  //                         ncontrolcode : ncontrolCode,\n  //                         nregtypecode:selectedSample.nregtypecode,\n  //                         nregsubtypecode: selectedSample.nregsubtypecode\n  //                         }\n  //     this.props.previewSampleReport(inputData);\n  // }\n\n\n  sampleTabDetail() {\n    const tabMap = new Map();\n    let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n    tabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n      screenName: \"IDS_SAMPLEATTACHMENTS\",\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      attachments: this.props.Login.masterData.RegistrationAttachment || [],\n      deleteRecord: this.props.deleteAttachment,\n      onSaveClick: this.onAttachmentSaveClick,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n      nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n      fetchRecord: this.props.getAttachmentCombo,\n      addName: \"AddSampleAttachment\",\n      editName: \"EditSampleAttachment\",\n      deleteName: \"DeleteSampleAttachment\",\n      viewName: \"ViewSampleAttachment\",\n      methodUrl: \"SampleAttachment\",\n      userInfo: this.props.Login.userInfo,\n      deleteParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: this.props.Login.screenName\n      },\n      editParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        masterList: this.props.Login.masterData.APSelectedSample\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      isneedHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2076,\n        columnNumber: 13\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n      screenName: \"IDS_SAMPLECOMMENTS\",\n      onSaveClick: this.onCommentsSaveClick,\n      selectedMaster: \"APSelectedSample\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      Comments: this.props.Login.masterData.RegistrationComment || [],\n      fetchRecord: this.props.getCommentsCombo,\n      addName: \"AddSampleComment\",\n      editName: \"EditSampleComment\",\n      deleteName: \"DeleteSampleComment\",\n      methodUrl: \"SampleComment\",\n      isTestComment: false,\n      masterData: this.props.Login.masterData,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n      primaryKeyField: \"nregcommentcode\",\n      dataState: this.state.testCommentDataState,\n      dataStateChange: this.testDataStateChange,\n      deleteParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\"\n      },\n      editParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        operation: \"update\",\n        masterList: this.props.Login.masterData.APSelectedSample || [],\n        ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      selectedId: this.props.Login.selectedId || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2118,\n        columnNumber: 42\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\", /*#__PURE__*/React.createElement(SampleApprovalHistory, {\n      userInfo: this.props.Login.userInfo,\n      genericLabel: this.props.Login.genericLabel,\n      ApprovalHistory: this.props.Login.masterData.SampleApprovalHistory,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleHistoryDataState,\n      dataStateChange: this.sampleDataStateChange,\n      screenName: \"IDS_SAMPLEAPPROVALHISTORY\",\n      controlMap: this.state.controlMap,\n      masterData: this.props.Login.masterData,\n      userRoleControlRights: this.state.userRoleControlRights,\n      selectedId: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2165,\n        columnNumber: 13\n      }\n    })); // tabMap.set(\"IDS_PRINTHISTORY\",\n    //     <ApprovalPrintHistoryTab\n    //         userInfo={this.props.Login.userInfo}\n    //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\n    //         inputParam={this.props.Login.inputParam}\n    //         dataState={this.state.samplePrintHistoryDataState}\n    //         dataStateChange={this.sampleDataStateChange}\n    //         screenName=\"IDS_PRINTHISTORY\"\n    //         controlMap={this.state.controlMap}\n    //         userRoleControlRights={this.state.userRoleControlRights}\n    //         selectedId={null}\n    //     />);\n    // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\n    //     tabMap.set(\"IDS_REPORTHISTORY\",\n    //         <ReportHistoryTab\n    //             userInfo={this.props.Login.userInfo}\n    //             COAHistory={this.props.Login.masterData.COAHistory}\n    //             inputParam={this.props.Login.inputParam}\n    //             dataState={this.state.reportHistoryDataState}\n    //             dataStateChange={this.sampleDataStateChange}\n    //             screenName=\"IDS_REPORTHISTORY\"\n    //             controlMap={this.state.controlMap}\n    //             userRoleControlRights={this.state.userRoleControlRights}\n    //             selectedId={null}\n    //             viewDownloadFile={this.downloadReport}\n    //         />);\n    // }\n\n    return tabMap;\n  }\n\n  // onSampleTabChange = (tabProps) => {\n  //     const activeSampleTab = tabProps.screenName;\n  //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSample: this.props.Login.masterData.APSelectedSample,\n  //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSampleTab,\n  //             activeSampleTab\n  //         }\n  //         this.props.getSampleChildTabDetail(inputData)\n  //     }\n  // }\n  // onSubSampleTabChange = (tabProps) => {\n  //     const activeSubSampleTab = tabProps.screenName;\n  //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n  //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSubSampleTab,\n  //             activeSubSampleTab,\n  //             subSampleCommentDataState: this.state.subSampleCommentDataState,\n  //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n  //         }\n  //         this.props.getSubSampleChildTabDetail(inputData)\n  //     }\n  // }\n  showSampleInfo() {\n    this.setState({\n      showSample: true,\n      showTest: false\n    });\n  }\n\n  showTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false\n    });\n  }\n\n  // covertDatetoString(startDateValue, endDateValue) {\n  //     const startDate = new Date(startDateValue);\n  //     const endDate = new Date(endDateValue);\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n  //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n  //     const fromDate = fromDateOnly + \"T00:00:00\";\n  //     const toDate = toDateOnly + \"T23:59:59\";\n  //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n  // }\n  getActiveTestURL() {\n    let url = \"approval/getapprovalparameter\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_RESULTS\":\n        url = \"approval/getapprovalparameter\";\n        break;\n\n      case \"IDS_INSTRUMENT\":\n        url = \"resultentrybysample/getResultUsedInstrument\";\n        break;\n\n      case \"IDS_MATERIAL\":\n        url = \"resultentrybysample/getResultUsedMaterial\";\n        break;\n\n      case \"IDS_TASK\":\n        url = \"resultentrybysample/getResultUsedTask\";\n        break;\n\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      case \"IDS_RESULTCHANGEHISTORY\":\n        url = \"approval/getApprovalResultChangeHistory\";\n        break;\n\n      case \"IDS_TESTAPPROVALHISTORY\":\n        url = \"approval/getApprovalHistory\";\n        break;\n\n      default:\n        url = \"approval/getapprovalparameter\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getsubSampleDetail,\n  getTestDetail,\n  getTestChildTabDetail,\n  performAction,\n  updateStore,\n  viewAttachment,\n  checkListRecord,\n  updateDecision,\n  getRegistrationType,\n  getRegistrationSubType,\n  getFilterStatus,\n  getApprovalSample,\n  getStatusCombo,\n  validateEsignCredential,\n  crudMaster,\n  validateEsignforApproval,\n  getApprovalVersion,\n  getParameterEdit,\n  filterTransactionList,\n  getSampleChildTabDetail,\n  getAttachmentCombo,\n  deleteAttachment,\n  getCommentsCombo,\n  previewSampleReport,\n  getFilterBasedTest,\n  ViewPatientDetails,\n  generateCOAReport,\n  getEnforceCommentsHistory,\n  reportGenerate,\n  getSubSampleChildTabDetail,\n  getTestBasedCompletedBatch,\n  updateEnforceStatus,\n  checkReleaseRecord\n})(injectIntl(Approval));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/Approval.jsx"],"names":["React","connect","injectIntl","faFileInvoice","faBolt","faBorderAll","faChevronRight","faComment","faCommentDots","faComments","faEye","faFlask","faHistory","faLink","faMicroscope","faPaperclip","faPencilAlt","faSync","FontAwesomeIcon","Button","Card","Col","Nav","Row","ContentPanel","ListWrapper","ProductList","process","SplitterLayout","DEFAULT_RETURN","getsubSampleDetail","getTestDetail","getTestChildTabDetail","performAction","updateStore","updateDecision","getRegistrationType","getRegistrationSubType","getFilterStatus","getApprovalSample","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforApproval","getApprovalVersion","getParameterEdit","filterTransactionList","checkListRecord","generateCOAReport","getSampleChildTabDetail","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getFilterBasedTest","getEnforceCommentsHistory","reportGenerate","getSubSampleChildTabDetail","ViewPatientDetails","getTestBasedCompletedBatch","updateEnforceStatus","checkReleaseRecord","CustomTabs","ApprovalResultsTab","getControlMap","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","toast","ApprovalFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","SideBarSeqno","SideBarTabIndex","BreadcrumbComponent","SampleInfoGrid","SampleInfoView","ApprovalInstrumentTab","FormSelectSearch","FormTextarea","Esign","SlideOutModal","EditApprovalParameter","SampleApprovalHistory","ResultChangeHistoryTab","ApprovalTask","templateChangeHandler","TemplateForm","Attachments","onSaveSampleAttachment","onSaveSubSampleAttachment","onSaveTestAttachment","Comments","onSaveSampleComments","onSaveSubSampleComments","onSaveTestComments","CustomPopOver","ScrollBar","ApprovalPrintHistoryTab","ApprovalHistoryTab","FormNumericInput","DataGrid","ReportHistoryTab","ApprovalUsedMaterial","CustomSwitch","TransactionListMasterJsonView","SpecificationInfo","ConfirmMessage","CustomTab","checkBoxOperation","mapStateToProps","state","Login","Approval","Component","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","handleTestPageChange","e","testskip","skip","testtake","take","handleSubSamplePageChange","subSampleSkip","subSampleTake","showAPSampleinfo","showSample","showTest","sampleInfoDataStateChange","event","sampleGridDataState","dataState","currentResultStateChange","currentResultState","tabDetailResultView","tabMap","Map","set","masterData","AuditModifiedComments","feildsForGrid","length","settings","split","map","setting","parseInt","dataStateChange","CurrentResult","onTabChangeResultView","tabProps","activeTabName","updateInfo","typeName","data","verticalPaneSizeChange","val","enableAutoHeight","initialVerticalWidth","changeSplitterOption","sideNavDetail","screenName","testList","searchedTests","AP_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","APSelectedTest","ntransactiontestcode","test","join","activeTestTab","resultTabDetail","onTabChange","attachmentTabDetail","commentTabDetail","userInfo","genericLabel","inputParam","instrumentDataState","testDataStateChange","userRoleControlRights","materialDataState","fetchMaterialRecord","ResultUsedTasks","taskDataState","ApprovalHistory","historyDataState","APSelectedSample","SingleItem","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","changePropertyViewClose","id","activeTabIndex","undefined","activeTabId","changePropertyView","index","status","ntransactionsamplecode","npreregno","window","innerWidth","enableAutoClick","tabSequence","TEST","onInputSwitchOnChange","target","name","enablePropertyPopup","tabseqno","inputData","String","item","userinfo","resultDataState","documentDataState","resultChangeDataState","testCommentDataState","warn","intl","formatMessage","SUBSAMPLE","selectedSubSample","APSelectedSubSample","activeSubSampleTab","subSampleCommentDataState","subSampleAttachmentDataState","selectedSample","activeSampleTab","closeFilter","inputValues","SampleTypeValue","realSampleTypeValue","RegTypeValue","realRegTypeValue","RegSubTypeValue","realRegSubTypeValue","ApprovalVersionValue","realApprovalVersionValue","UserSectionValue","realUserSectionValue","TestValue","realTestValue","BatchValue","realBatchvalue","defaultBatchvalue","FilterStatusValue","realFilterStatusValue","fromDate","realFromDate","Date","toDate","realToDate","DesignTemplateMappingValue","realDesignTemplateMappingValue","SampleType","realSampleTypeList","RegType","realRegTypeList","RegSubType","realRegSubTypeList","FilterStatus","realFilterStatusList","ApprovalVersion","realApprovalVersionList","UserSection","realUserSectionList","Test","realTestList","Batchvalues","realBatchvaluesList","DesignTemplateMapping","realDesignTemplateMappingList","showFilter","downloadReport","input","selectedRecord","classUrl","operation","methodUrl","subsampleTabDetail","sample","subsampleList","AP_SUBSAMPLE","selectedSubSampleList","onAttachmentSaveClick","RegistrationSampleAttachment","nneedsubsample","attachmentskip","attachmenttake","esignRights","masterList","onCommentsSaveClick","RegistrationSampleComment","subSampledataStateChange","ncontrolCode","selectedId","resultTabMap","selectedParamId","ApprovalResultChangeHistory","attachmentTabMap","sampleList","AP_SAMPLE","selectedSampleList","RegistrationTestAttachment","VALUE","SAMPLE","RegistrationAttachment","commentTabMap","RegistrationTestComment","RegistrationComment","sampleCommentDataState","sampleDataStateChange","onNumericInputOnChange","value","handlePageChange","closeAlert","availableReleaseRecord","loading","checkRetestAction","action","ntransactionstatus","RETEST","retestcount","obj","ntransCode","ALL","nsectioncode","section","ntestcode","nTransStatus","stransdisplaystatus","nsampletypecode","nregtypecode","nregsubtypecode","napprovalversioncode","napprovalconfigversioncode","nneedtemplatebasedflow","nneedjoballocation","dfrom","dto","nflag","ntype","SINGLESELECT","ndesigntemplatemappingcode","nbatchmastercode","postParamList","nisiqcmaterial","openChildModal","performTestActions","RECALC","info","nesignneed","YES","loadEsign","screenData","splice","selectedsampleList","napprovalconfigcode","onFilterComboChange","comboData","fieldName","inputParamData","stransactionstatus","napproveconfversioncode","JobStatusValue","njobstatuscode","defaultRegistrationSubType","ntranscode","toString","onComboChange","GradeValue","onInputOnChange","type","checked","NO","handleDateChange","dateName","dateValue","changeMandatory","dataItem","currentTarget","ntransactionresultcode","onReload","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","samplePrintHistoryDataState","sampleHistoryDataState","onFilterSubmit","realBatchCodeValue","sampleGridDataStateChange","popUptestDataState","reportHistoryDataState","onSaveClick","saveType","formRef","ok","ngradecode","senforcestatuscomment","selectedTestCode","preregno","enforcestatus","postParam","selectedObject","primaryKeyField","saveParam","approvalparameter","approvalParameterEdit","Object","keys","key","push","nreportmandatory","handleClose","nformcode","openModal","templateData","openTemplateModal","viewSample","viewdetails","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onTemplateInputChange","control","onTemplateComboChange","onTemplateDateChange","dateData","isTestComment","x","searchedSample","acceptList","searchedSubSample","selectedMaster","reporparam","createRef","confirmMessage","masterStatus","error","oldComboData","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","stateDynamicDesign","sampleSearchField","subsampleSearchField","testSearchField","TestList","enablePin","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","constructDesign","list","newList","i","LABEL","showAPTestList","showAPSubSampleinfo","temparray","option","slanguagetypecode","LISTITEM","render","auditInfoFields","filterSampleParam","inputListName","fetchUrl","isSortable","sortValue","sortList","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","isSingleSelect","AP_SampleList","AP_SubSampleList","AP_TestList","decisionStatus","actionStatus","subSampleGetParam","testGetParam","testChildGetParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","stestsynonym","PatientPreviousResultViewId","reportPreviewId","editParamId","TestDecisionActionId","TestApprovalActionId","reportGenerateId","coaReportId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","testDesign","borderBottom","display","indexOf","mainDesign","marginTop","selectedFilter","DynamicSubSampleColumns","subSampleMoreField","openFilter","DynamicSampleColumns","sampleMoreField","PLASMA_POOL","title","controlname","objectName","hidden","onClick","ROUTINE","elnUserInfo","elnSite","JobStatus","onDesignTemplateChange","background","width","propertyPopupWidth","fullviewExpand","fullviewCollapse","Grade","selectedNode","filterData","ApprovalRoleActionDetail","enforceCommentsHistory","idsName","dataField","ApprovalParamEdit","nsubsampleneed","ChecklistData","onSaveCheckList","componentWillUnmount","componentDidUpdate","previousProps","DynamicTestColumns","bool","values","SampletypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","UserSectionListMap","TestListMap","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","findIndex","confirm","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","samplesearchfields","subsamplesearchfields","sampledisplayfields","testListFields","testlistmoreitems","testsearchfields","DesignTemplateMappingMap","sampleTabDetail","showSampleInfo","showTestList","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faFileInvoice,faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport { process } from \"@progress/kendo-data-query\";\r\n//import SplitPane from \"react-splitter-layout\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision,\r\n    getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail,ViewPatientDetails,\r\n    getTestBasedCompletedBatch,updateEnforceStatus,checkReleaseRecord\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalResultsTab from './ApprovalResultsTab';\r\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\n//import TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport ApprovalFilter from './ApprovalFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType,SideBarSeqno,SideBarTabIndex } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SampleInfoGrid from './SampleInfoGrid';\r\nimport SampleInfoView from './SampleInfoView';\r\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EditApprovalParameter from './EditApprovalParameter';\r\n//import ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport SampleApprovalHistory from './SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\r\nimport ApprovalTask from './ApprovalTask';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\r\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReportHistoryTab from './ReportHistoryTab';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SpecificationInfo from '../testgroup/SpecificationInfo';\r\nimport fullviewExpand from '../../assets/image/fullview-expand.svg';\r\nimport fullviewCollapse from '../../assets/image/fullview-collapse.svg';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport { checkBoxOperation } from '../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Approval extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }]\r\n            },\r\n            instrumentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            materialDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            taskDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,// group: [{ field: 'sarno' }] \r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            documentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            resultChangeDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            sampleHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            reportHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            dataState: { skip: 0, take:10 },\r\n            samplePrintHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }]\r\n            },\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            sampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            currentResultState: { skip: 0, take:  10 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            stateDynamicDesign: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            TestList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false\r\n        }\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n    // onSecondaryPaneSizeChange = (e, val) => {\r\n    //     this.setState({\r\n    //         firstPane: e - val,\r\n    //         tabPane: e - 80,\r\n    //         childPane: this.state.parentHeight - e - 80\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subSampleSkip: e.skip,\r\n            subSampleTake: e.take\r\n        });\r\n    };\r\n\r\n    // handleSubSamplePageChange = e => {\r\n    //     this.setState({ subSampleSkip: e.skip, subSampleTake: e.take });\r\n\r\n    //     setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    // }\r\n\r\n    showAPSampleinfo = () => {\r\n\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showAPTestList() {\r\n\r\n        this.setState({ showTest: true, showSample: false, showSubSample: false })\r\n    }\r\n    showAPSubSampleinfo() {\r\n        this.setState({ showSample: false, showTest: true, showSubSample: !this.state.showSubSample })\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" ,\"dataType\":[option[designProperties.LISTITEM]]};\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    currentResultStateChange = (event) => {\r\n        this.setState({\r\n    currentResultState: event.dataState\r\n});\r\n}\r\n\r\n    tabDetailResultView = () => {\r\n        const tabMap = new Map();\r\n        {          \r\n            tabMap.set(\"IDS_PREVIOUSRESULT\",\r\n            <DataGrid\r\n            primaryKeyField={\"ntransactiontestcode\"}\r\n            data={this.props.Login.masterData.AuditModifiedComments || []}\r\n            detailedFieldList={this.feildsForGrid}\r\n            extractedColumnList={this.feildsForGrid}\r\n            dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : { skip: 0, take: 10 })}\r\n              dataState={this.state.dataState\r\n                ? this.state.dataState : { skip: 0, take: 10 }}\r\n            pageable={true}\r\n            pageSizes= {this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n\r\n            scrollable={'scrollable'}\r\n            dataStateChange={this.dataStateChange}\r\n            activeTabName={\"IDS_PREVIOUSRESULT\"}\r\n            gridHeight = {'500px'}\r\n                >\r\n            </DataGrid>\r\n        ); \r\n        tabMap.set(\"IDS_CURRENTRESULT\",\r\n                <DataGrid\r\n                primaryKeyField={\"ntransactiontestcode\"}\r\n                data={this.props.Login.masterData.CurrentResult || []}\r\n                detailedFieldList={this.feildsForGrid}\r\n                extractedColumnList={this.feildsForGrid}\r\n             dataResult={this.props.Login.masterData.CurrentResult && this.props.Login.masterData.CurrentResult.length > 0\r\n                    && process(this.props.Login.masterData.CurrentResult, this.state.currentResultState ? this.state.currentResultState : { skip: 0, take: 10 })}\r\n                  dataState={this.state.currentResultState\r\n                    ? this.state.currentResultState : { skip: 0, take: 10 }}\r\n                pageable={true}\r\n                scrollable={'scrollable'}\r\n                dataStateChange={this.currentResultStateChange}\r\n                activeTabName={\"IDS_CURRENTRESULT\"}\r\n                pageSizes= {this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                gridHeight = {'500px'}\r\n                >\r\n                </DataGrid>); \r\n        }\r\n        return tabMap;\r\n    }\r\n    onTabChangeResultView = (tabProps) => {\r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        masterData['activeTabName'] = tabProps.activeTabName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        if (this.state.enableAutoHeight) {\r\n            this.setState({\r\n                initialVerticalWidth: val - 150\r\n            })\r\n        }\r\n    }\r\n    changeSplitterOption = () => {\r\n        this.setState({\r\n            enableAutoHeight: !this.state.enableAutoHeight,\r\n            initialVerticalWidth: \"57vh\"\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName == \"IDS_RESULTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"} tabDetail={this.resultTabDetail()} onTabChange={this.onTabChange} />\r\n                : screenName == \"IDS_ATTACHMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName == \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />                       \r\n                        :\r\n                        screenName == \"IDS_INSTRUMENT\" ?\r\n                            <ApprovalInstrumentTab\r\n                                userInfo={this.props.Login.userInfo}\r\n                                genericLabel ={this.props.Login.genericLabel}\r\n                                masterData={this.props.Login.masterData}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                dataState={this.state.instrumentDataState}\r\n                                dataStateChange={this.testDataStateChange}\r\n                                screenName=\"IDS_INSTRUMENT\"\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                selectedId={null}\r\n                            />\r\n                            :\r\n                            screenName == \"IDS_MATERIAL\" ?\r\n                                <ApprovalUsedMaterial\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    genericLabel ={this.props.Login.genericLabel}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    methodUrl={\"ResultUsedMaterial\"}\r\n                                    controlMap={this.state.controlMap}\r\n                                    // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    dataState={this.state.materialDataState}\r\n                                    // selectedId={this.props.Login.selectedId || null}\r\n                                    isActionRequired={false}\r\n                                    dataStateChange={this.testDataStateChange}\r\n                                    //deleteRecord={this.deleteMaterialRecord}\r\n                                    fetchRecord={this.props.fetchMaterialRecord}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    screenName=\"IDS_MATERIAL\"\r\n                                    selectedId={null}\r\n                                />\r\n                                :\r\n                                screenName == \"IDS_TASK\" ?\r\n                                    <ApprovalTask\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        genericLabel ={this.props.Login.genericLabel}\r\n                                        ResultUsedTasks={this.props.Login.masterData.ResultUsedTasks}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        dataState={this.state.taskDataState}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        dataStateChange={this.testDataStateChange}\r\n                                        screenName=\"IDS_TASK\"\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        selectedId={null}\r\n                                    />\r\n                                        :\r\n                                        screenName == \"IDS_TESTAPPROVALHISTORY\" ?\r\n                                            <ApprovalHistoryTab\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                genericLabel ={this.props.Login.genericLabel}\r\n                                                ApprovalHistory={this.props.Login.masterData.ApprovalHistory}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                dataState={this.state.historyDataState}\r\n                                                masterData={this.props.Login.masterData}\r\n                                                dataStateChange={this.testDataStateChange}\r\n                                                screenName=\"IDS_TESTAPPROVALHISTORY\"\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                selectedId={null}\r\n                                            />\r\n\r\n                                            :\r\n                                            screenName == \"IDS_SAMPLEDETAILS\" ?\r\n                                            this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ?\r\n                                                <SampleInfoView\r\n                                                    data={(this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0) ?\r\n                                                        this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {}}\r\n                                                    SingleItem={this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ?\r\n                                                        this.state.SingleItem : []}\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    userInfo={this.props.Login.userInfo}\r\n\r\n                                                />\r\n\r\n                                                :\r\n                                                <SampleInfoGrid\r\n                                                    selectedSample={this.props.Login.masterData.APSelectedSample}\r\n                                                    userInfo={this.props.Login.userInfo || {}}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    dataState={this.state.sampleGridDataState}\r\n                                                    dataStateChange={this.sampleInfoDataStateChange}\r\n                                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                    detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                    primaryKeyField={\"npreregno\"}\r\n                                                    expandField=\"expanded\"\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    jsonField={\"jsondata\"}\r\n                                                />\r\n                                            \r\n                                            : \"\"\r\n        )\r\n    }\r\n\r\n\r\n    changePropertyViewClose = (id) => {\r\n        // this.setState({\r\n        //             activeTabIndex :undefined,\r\n        //             activeTestTab:undefined,\r\n        //             activeTabId :  id\r\n        //         })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index,screenName, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n        //console.log(this.state.activeTabId, id , \"=======>\")\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n            //activeTabId = this.state.activeTabIndex !== index ? true:false;\r\n        }\r\n        if (status != \"click\") {\r\n            if(index)\r\n            {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\": screenName === \"IDS_ATTACHMENTS\"?\"IDS_TESTATTACHMENTS\":screenName ,\r\n                    activeTabIndex,\r\n                    //activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n\r\n        //     if (index == SideBarTabIndex.RESULT) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_RESULTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.INSTRUMENT) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_INSTRUMENT\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.MATERIAL) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_MATERIAL\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.TASK) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TASK\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTAPPROVALHISTORY\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.ATTACHMENTS) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTATTACHMENTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.COMMENTS) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTCOMMENTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else {\r\n        //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n        //             const updateInfo = {\r\n        //                 typeName: DEFAULT_RETURN,\r\n        //                 data: {\r\n        //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n        //                     activeTabId: id\r\n        //                 }\r\n        //             }\r\n        //             this.props.updateStore(updateInfo);\r\n\r\n        //         }\r\n        //     }\r\n        }\r\n        \r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if(event.target.name == \"PopupNav\")\r\n        {\r\n            this.setState({\r\n                enablePropertyPopup : !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else\r\n        {\r\n        this.setState({\r\n            enableAutoClick: !this.state.enableAutoClick\r\n        })\r\n    }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        // if (activeTestTab !== this.props.Login.activeTestTab) {\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ?\r\n                        String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ?\r\n                        this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                    subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n\r\n        //}\r\n    }\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const auditInfoFields = [\r\n       // { \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \r\n       { \"label\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"fieldName\": \"sarno\",},\r\n      //{ \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\r\n        //{ \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \r\n        { \"fieldName\": \"sfirstname\", \"label\": \"IDS_PATIENTNAME\" },\r\n        //{ \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\r\n        { \"fieldName\": \"sgendername\", \"label\": \"IDS_GENDER\" },\r\n        \r\n        //{ \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\r\n        //{ \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\r\n        \r\n        ];\r\n\r\n        this.feildsForGrid =\r\n      [\r\n        // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\":  this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n\r\n        //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n        //{ \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }, \r\n        { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },             \r\n        { \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_REGISTRATIONDATE\", \"dataField\": \"sregdate\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_REPORTREFNO\", \"dataField\": \"sreportno\", \"width\": \"200px\" },   \r\n        { \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n\r\n        // { \"idsName\": \"IDS_COMPLETEDDATEANDTIME\", \"dataField\": \"scompletedate\", \"width\": \"200px\" },\r\n       \r\n        \r\n      ];\r\n\r\n    \r\n       \r\n        const filterSampleParam = {\r\n            inputListName: \"AP_SAMPLE\",\r\n            skip:0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            selectedObject: \"APSelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"approval/getApprovalSubSample\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ?this.props.Login.masterData.UserSection&& this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n               // checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\r\n            searchFieldList: this.state.sampleSearchField || [],\r\n            changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\r\n        };\r\n        const filterSubSampleParam = {\r\n            inputListName: \"AP_SUBSAMPLE\",\r\n            selectedObject: \"APSelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"approval/getApprovalTest\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n              //  checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.subsampleSearchField || [],\r\n            changeList: [\"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"AP_TEST\",\r\n            selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n               // checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.testSearchField || [],\r\n            changeList: [\"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedTest\"]\r\n        };\r\n\r\n        let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\r\n        let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\r\n        let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\r\n        let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        };\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            // activeTabIndex: this.state.enableAutoClick ? 1 : \"\",\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n\r\n        };\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n            //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_DESIGNTEMPLATE\",\r\n            //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n            //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n            //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n            // // },\r\n            // {\r\n            //     \"label\": \"IDS_SECTION\",\r\n            //     \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n            //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n            //         this.props.Login.masterData.UserSectionValue ?\r\n            //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            // },\r\n            {\r\n                \"label\": \"IDS_Test\",\r\n                \"value\": this.props.Login.masterData.realTestValue ?\r\n                    this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ?\r\n                        this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n           \r\n        ];\r\n\r\n\r\n        \r\n        const PatientPreviousResultViewId = this.state.controlMap.has(\"PatientPreviousResultView\") && this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode;\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\r\n        const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\r\n        const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\r\n        const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\r\n        const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\r\n        const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\r\n\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"approval/getApprovalSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                selectedObject: \"APSelectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"updatedSample\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"APSelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedTests\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"APSelectedTest\",\r\n                inputListName: \"AP_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager'>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        clickIconGroup={true}\r\n                        // paneHeight={this.state.initialVerticalWidth}\r\n                        needMultiSelect={true}\r\n                        masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                        selectedMaster={this.props.Login.masterData.APSelectedTest || []}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        //getMasterDetail={this.props.getTestChildTabDetail}\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetail(event, status); this.state.enableAutoClick && this.changePropertyView(1,\"IDS_RESULTS\", event, \"click\") }}\r\n                        inputParam={testChildGetParam}\r\n                        additionalParam={[]}\r\n                        mainField={'stestsynonym'}\r\n                        selectedListName=\"APSelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        showStatusIcon={false}\r\n                        showStatusName={true}\r\n                        subFieldsLabel={true}\r\n                        // jsonField={'jsondata'}\r\n                        //jsonDesignFields={false}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"sfilterstatus\"\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                        needSubFieldlabel={true}\r\n                        subFields={this.state.testListColumns}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTests\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={filterTestParam}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"AP_SAMPLE\"\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        childTabsKey={\r\n                            [\r\n                                \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\", \"ResultUsedMaterial\"\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n\r\n                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                <Nav.Link\r\n                                    hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                  //  data-for=\"tooltip-common-wrap\"\r\n                                    data-place=\"left\"\r\n                                    className=\"btn btn-circle outline-grey\"\r\n                                    onClick={() => this.props.getParameterEdit({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </Nav.Link>\r\n\r\n                                {this.props.Login.masterData.actionStatus &&\r\n                                    this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                    actionStatus.length > 0 ?\r\n                                    <CustomPopOver\r\n                                        icon={faBolt}\r\n                                        nav={true}\r\n                                        data={actionStatus}\r\n                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                        dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                        textKey=\"stransdisplaystatus\"\r\n                                        iconKey=\"ntransactionstatus\"\r\n                                    >\r\n                                    </CustomPopOver>\r\n                                    : \"\"}\r\n                            </ProductList>\r\n                        }\r\n\r\n\r\n                        // actionIcons={\r\n                        //     [\r\n                        //        { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),  controlname: \"faEye\", hidden:this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\r\n                        //     ]}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue &&\r\n            this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card>\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0  sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            //clickIconGroup={true}\r\n                            cardHead={94}\r\n                            //paneHeight={this.state.initialVerticalWidth}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || AP_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.APSelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={this.props.getTestDetail}\r\n                            inputParam={testGetParam}\r\n                            additionalParam={[]}\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"APSelectedSubSample\"\r\n                            objectName=\"subSample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectionList={this.state.selectedFilter}\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"sfilterstatus\"\r\n                            selectionColorField=\"stranscolor\"\r\n                            statusColor=\"stranscolor\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            moreField={this.state.subSampleMoreField}\r\n                            needValidation={false}\r\n                            needMultiSelect={true}\r\n                            needFilter={false}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={filterSubSampleParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            skip={this.state.subSampleSkip}\r\n                            take={this.state.subSampleTake}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            childTabsKey={[\"RegistrationTestAttachment\", \"RegistrationTestComment\",\"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"ResultUsedMaterial\"]}\r\n                            subFieldsFile={true}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        }\r\n        else {\r\n            mainDesign = testDesign\r\n        }\r\n\r\n        return (\r\n            <>\r\n              \r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"} bsPrefix=\"toolbar-top\">\r\n                        {/* sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }} */}\r\n                        <Col md={12} className='parent-port-height' >\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        //onSecondaryPaneSizeChange={this.paneSizeChange} \r\n                                        primaryMinSize={40} secondaryMinSize={20}>\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                needMultiSelect={true}\r\n                                                masterList={this.props.Login.masterData.searchedSample || AP_SampleList}\r\n                                                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                                                primaryKeyField=\"npreregno\"\r\n                                                getMasterDetail={this.props.getsubSampleDetail}\r\n                                                inputParam={subSampleGetParam}\r\n                                                additionalParam={['napprovalversioncode']}\r\n                                                mainField={'sarno'}\r\n                                                selectionList={this.state.selectedFilter}\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"sfilterstatus\"\r\n                                                selectionColorField=\"stranscolor\"\r\n                                                selectedListName=\"APSelectedSample\"\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                searchListName=\"searchedSample\"\r\n                                                needValidation={true}\r\n                                                validationKey=\"napprovalversioncode\"\r\n                                                validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                moreField={this.state.sampleMoreField}\r\n                                                jsonDesignFields={true}\r\n                                                jsonField={'jsondata'}\r\n                                                showStatusLink={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                //statusColor=\"sdecisioncolor\"\r\n                                                statusColor=\"stranscolor\"\r\n                                                showStatusIcon={false}\r\n                                                showStatusName={true}\r\n                                                needFilter={true}\r\n                                                searchRef={this.searchSampleRef}\r\n                                                filterParam={filterSampleParam}\r\n                                                skip={this.state.skip}\r\n                                                take={this.state.take}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                showStatusBlink={true}\r\n                                                callCloseFunction={true}\r\n                                                listMasterShowIcon={0}\r\n                                                //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                childTabsKey={[\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\",\r\n                                                \"RegistrationSampleComment\", \"RegistrationSampleAttachment\",\"RegistrationTestAttachment\", \"RegistrationTestComment\"]}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                            {\r\n                                                                title: \"Report\",\r\n                                                                controlname: \"reports\",\r\n                                                                objectName: \"sample\",\r\n                                                                hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                                // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                onClick: this.props.previewSampleReport,\r\n                                                                inputData: {\r\n                                                                    userinfo: this.props.Login.userInfo,\r\n                                                                    ncontrolcode: reportPreviewId\r\n                                                                },\r\n                                                            } :\r\n                                                            this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                                {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\r\n                                                                    // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                    //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                    onClick: (obj) => this.generateCOAReport(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: reportPreviewId,\r\n                                                                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                                                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                                                    },\r\n                                                                }\r\n                                                                \r\n                                                                : {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\r\n                                                                    onClick: (obj) => this.props.reportGenerate(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: coaReportId,\r\n\r\n                                                                    },\r\n\r\n                                                                },{ title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),  controlname: \"faEye\", hidden:this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\r\n                                                      \r\n                                                    ]\r\n                                                }\r\n\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                                onClick={() => this.onReload()}\r\n                                                               // data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                            </Button>\r\n                                                            {this.props.Login.masterData.decisionStatus &&\r\n                                                                this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 &&\r\n                                                                this.props.Login.masterData.decisionStatus.length > 0 ?\r\n                                                                <CustomPopOver\r\n                                                                    icon={faBolt}\r\n                                                                    nav={true}\r\n                                                                    data={decisionStatus}\r\n                                                                    btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                    textKey=\"sdecisionstatus\"\r\n                                                                    iconKey=\"ntransactionstatus\"\r\n                                                                    dynamicButton={(value) => this.updateDecision(value)}\r\n                                                                >\r\n                                                                </CustomPopOver>\r\n\r\n                                                                : \"\"}\r\n                                                        </ProductList>\r\n                                                    </>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <ApprovalFilter\r\n                                                            SampleType={this.state.SampletypeList || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                            RegType={this.state.RegistrationTypeList || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                            UserSection={this.state.UserSectionList || []}\r\n                                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                            JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                            Test={this.state.TestList || []}\r\n                                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                            Batch={this.state.Batchvalues || []}\r\n                                                            BatchValue = {this.props.Login.masterData.defaultBatchvalue || []}\r\n                                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-results position-relative sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_INSTRUMENT\") : \"\"}\r\n                                        </div> */}\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`}>\r\n                                        <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`}>\r\n                                        <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1,\"IDS_RESULTS\")}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                               //  data-for=\"tooltip-common-wrap\"\r\n                                                 data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })} />\r\n                                                <span>\r\n                                                    { this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2,\"IDS_ATTACHMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3,\"IDS_COMMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4,\"IDS_INSTRUMENT\")}>\r\n                                                <FontAwesomeIcon icon={faMicroscope} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(5,\"IDS_MATERIAL\")}>\r\n                                                <FontAwesomeIcon icon={faFlask} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(6,\"IDS_TASK\")}>\r\n                                                <FontAwesomeIcon icon={faCommentDots} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(7)}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8,\"IDS_SAMPLEDETAILS\")}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                //label={\"IDS_AUTOSHOW\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                //label={\"IDS_POPUPNAV\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openChildModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'enforce' ? [{ \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforcestatuscomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        loginoperation={this.props.Login.operation === 'view' ? true : false}\r\n                        //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\r\n                        noSave={this.props.Login.operation === 'view' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? true : false}\r\n                        size={this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? \"xl\" :\"lg\"}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.operation === 'enforce' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ngradecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            value={this.props.Login.masterData.GradeValue || []}\r\n                                            options={this.props.Login.masterData.Grade || []}\r\n                                            optionId=\"ngradecode\"\r\n                                            optionValue=\"sgradename\"\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isDisabled={false}\r\n                                            isSearchable={false}\r\n                                            closeMenuOnSelect={true}\r\n                                            isClearable={false}\r\n                                            onChange={(event) => this.onComboChange(event, 'ngradecode')}\r\n                                        />\r\n                                        <FormTextarea\r\n                                            name=\"senforcestatuscomment\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                            rows=\"2\"\r\n                                            isMandatory={true}\r\n                                            required={false}\r\n                                            maxLength={255}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> :\r\n                                this.props.Login.operation === 'dynamic' ?\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            {/* <FormNumericInput\r\n                                            name={\"retestcount\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                            type=\"number\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                            value={this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\"}\r\n                                            isMandatory=\"*\" \r\n                                            required={true}\r\n                                            min={1}\r\n                                            max={10}\r\n                                        /> */}\r\n                                            <FormNumericInput\r\n                                                name=\"retestcount\"\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount}\r\n                                                type=\"text\"\r\n                                                strict={true}\r\n                                                className=\"form-control\"\r\n                                                value={this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\"}\r\n                                                maxLength={6}\r\n                                                onChange={(event) => this.onNumericInputOnChange(event, 'retestcount')}\r\n                                                isMandatory=\"*\"\r\n                                                required={true}\r\n                                                noStyle={true}\r\n                                            // min={1}\r\n                                            // max={this.props.Login.masterData.retestcount}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row> :\r\n                                    this.props.Login.screenName === 'IDS_PREVIOUSRESULTVIEW' ?\r\n                                    (\r\n                                        <>\r\n                  \r\n                                          <Card className='one' >\r\n                                            <Card.Body>\r\n                                              <SpecificationInfo\r\n                                                controlMap={this.state.controlMap}\r\n                                                auditInfoFields={auditInfoFields}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                selectedSpecification={this.props.Login.masterData.viewdetails}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                selectedNode={this.props.Login.masterData.selectedNode}\r\n                                                selectedRecord={this.state.filterData}\r\n                                                approvalRoleActionDetail={this.props.Login.masterData.ApprovalRoleActionDetail}\r\n                                                screenName=\"IDS_PREVIOUSRESULTVIEW\"\r\n                  \r\n                                              />\r\n                                            </Card.Body>\r\n                                          </Card>\r\n                                          <br></br>\r\n                                          <Row>\r\n                                                                <Col md={12}> \r\n                                                                    \r\n                                                                {<CustomTab tabDetail={this.tabDetailResultView()} onTabChange={this.onTabChangeResultView} /> }\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                          {/* <DataGrid\r\n                                            primaryKeyField={\"ntransactiontestcode\"}\r\n                                            data={this.props.Login.masterData.AuditModifiedComments || []}\r\n                                            //data={this.props.Login.addComponentDataList || []}\r\n                                            detailedFieldList={this.feildsForGrid}\r\n                                            extractedColumnList={this.feildsForGrid}\r\n                                            // dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                            //   && process(this.props.Login.masterData.AuditModifiedComments, { skip: 0, take: 10 })}\r\n                                            // dataState={{ skip: 0, take: 10 }}\r\n                                            dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                                && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : { skip: 0, take: 10 })}\r\n                                              //dataState={{ skip: 0, take: 10 }}\r\n                                              dataState={this.state.dataState\r\n                                                ? this.state.dataState : { skip: 0, take: 10 }}\r\n                                            pageable={true}\r\n                                            scrollable={'scrollable'}\r\n                                            dataStateChange={this.dataStateChange}\r\n                  \r\n                                          /> */}\r\n                                        </>\r\n                                      )\r\n                                        :\r\n\r\n                                        \r\n                                        this.props.Login.operation === 'view' ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"nresultparamcommenthistorycode\"}\r\n                                                    data={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataResult={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataState={{ skip: 0, take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0 }}\r\n                                                    // dataStateChange={this.dataStateChange}\r\n                                                    extractedColumnList={\r\n                                                        [\r\n                                                            { \"idsName\": this.props.Login.idsName, \"dataField\": this.props.Login.dataField, \"width\": \"450px\" }\r\n                                                        ]\r\n                                                    }\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    pageable={false}\r\n                                                    hideColumnFilter={true}\r\n                                                    isActionRequired={false}\r\n                                                    isToolBarRequired={false}\r\n                                                    scrollable={\"scrollable\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n\r\n\r\n                                        <EditApprovalParameter\r\n                                            ApprovalParamEdit={this.props.Login.ApprovalParamEdit || []}\r\n                                            changeMandatory={this.changeMandatory}\r\n                                            selectedRecord={this.state.selectedRecord.approvalParameterEdit || {}}\r\n                                            nsubsampleneed={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed}\r\n                                        />\r\n                        }\r\n                    />\r\n                    : \"\"}\r\n                {this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                    <TemplateForm\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.handleClose}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.onSaveCheckList}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n    closeFilter=()=>{\r\n        let inputValues={\r\n            SampleTypeValue:this.props.Login.masterData.realSampleTypeValue || {},\r\n            RegTypeValue:this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue:this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue:this.props.Login.masterData.realApprovalVersionValue || {},\r\n            UserSectionValue:this.props.Login.masterData.realUserSectionValue || {},\r\n            TestValue:this.props.Login.masterData.realTestValue || {},\r\n            BatchValue :this.props.Login.masterData.realBatchvalue || {},\r\n            defaultBatchvalue:this.props.Login.masterData.realBatchvalue || {},\r\n            FilterStatusValue:this.props.Login.masterData.realFilterStatusValue || {},\r\n            fromDate:this.props.Login.masterData.realFromDate || new Date(), //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\r\n           toDate:this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\r\n           DesignTemplateMappingValue:this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n           SampleType:this.props.Login.masterData.realSampleTypeList || [],\r\n           RegType:this.props.Login.masterData.realRegTypeList || [],\r\n           RegSubType:this.props.Login.masterData.realRegSubTypeList || [],\r\n           FilterStatus:this.props.Login.masterData.realFilterStatusList || [],\r\n           ApprovalVersion:this.props.Login.masterData.realApprovalVersionList || [],\r\n           UserSection:this.props.Login.masterData.realUserSectionList || [],\r\n           Test:this.props.Login.masterData.realTestList || [],\r\n           Batchvalues:this.props.Login.masterData.realBatchvaluesList || [],\r\n           DesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMappingList ||[],\r\n\r\n        }\r\n        // JobStatus={this.props.Login.masterData.JobStatus || []}\r\n        // DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n        // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false,masterData:{...this.props.Login.masterData,...inputValues} }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let activeTabIndex=this.props.Login.activeTabIndex\r\n         const updateInfo = {\r\n             typeName: DEFAULT_RETURN,\r\n             data: {\r\n                 activeTabIndex: undefined\r\n             }\r\n         }\r\n         this.props.updateStore(updateInfo);\r\n     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField,\r\n            activeTabIndex, activeTabId,Batchvalues, subSampleSkip, subSampleTake } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n            // this.setState({userRoleControlRights, controlMap});\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n                // this.setState({\r\n                //     resultDataState: dataSate,instrumentDataState: dataSate,\r\n                //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\r\n                //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\r\n                //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\r\n                // });\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            // this.setState({selectedRecord: this.props.Login.selectedRecord });\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            Batchvalues = constructOptionList(this.props.Login.masterData.Batchvalues || [], 'nbatchmastercode', 'sbatcharno', 'ascending', 'nbatchmastercode', false);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            Batchvalues = Batchvalues.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subSampleSkip = this.props.Login.subSampleSkip === undefined ? subSampleSkip : this.props.Login.subSampleSkip\r\n            subSampleTake = this.props.Login.subSampleTake || subSampleTake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \r\n            //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\r\n            //     this.props.Login.masterData.FilterStatus : [];\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if(this.props.Login.availableReleaseRecord === true){\r\n            this.confirmMessage.confirm(\"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_TESTADDEDINRELEASE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_AREUSURETORETESTORCALC\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), \r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.checkRetestAction(this.props.Login.action,\r\n                this.props.Login.ncontrolCode),\r\n                undefined,() => this.closeAlert());\r\n        }\r\n        if(this.props.Login.availableReleaseRecord === false){\r\n            this.checkRetestAction(this.props.Login.action,\r\n                this.props.Login.ncontrolCode)\r\n        }\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems: []; \r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : []; \r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];  \r\n\r\n            this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample &&\r\n            DynamicSubSampleColumns.push({1:{'en-US': 'Specimen', 'ru-RU': 'Образец', 'tg-TG': 'Намуна'},\r\n            2:\"scomponentname\"});\r\n\r\n            bool = true;\r\n            // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\r\n            // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\r\n            // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\r\n            // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\r\n            // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\r\n            // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\r\n            // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\r\n            // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\r\n            // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\r\n            // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\r\n            // let {selectedRecord}=this.state\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            // this.setState({\r\n            //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            //     sampleListMainField, subSampleListMainField, testListMainField,\r\n            //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\r\n            // })\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField,\r\n                activeTabIndex, activeTabId,Batchvalues, subSampleSkip, subSampleTake\r\n            });\r\n        }\r\n    }\r\n\r\n    // previewSampleReport = (ncontrolCode) => {\r\n\r\n    //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\r\n    //     const selectedSample = this.props.Login.masterData.selectedSample[0];\r\n\r\n    //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\r\n    //                         userinfo:this.props.Login.userInfo,\r\n    //                         nprimarykey: selectedSample.npreregno,\r\n    //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n    //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\r\n    //                         sprimarykeyname :\"npreregno\",\r\n    //                         ncontrolcode : ncontrolCode,\r\n    //                         nregtypecode:selectedSample.nregtypecode,\r\n    //                         nregsubtypecode: selectedSample.nregsubtypecode\r\n    //                         }\r\n    //     this.props.previewSampleReport(inputData);\r\n\r\n    // }\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n                isneedHeader={true}\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterData={this.props.Login.masterData}\r\n            masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                genericLabel ={this.props.Login.genericLabel}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        // tabMap.set(\"IDS_PRINTHISTORY\",\r\n        //     <ApprovalPrintHistoryTab\r\n        //         userInfo={this.props.Login.userInfo}\r\n        //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\r\n        //         inputParam={this.props.Login.inputParam}\r\n        //         dataState={this.state.samplePrintHistoryDataState}\r\n        //         dataStateChange={this.sampleDataStateChange}\r\n        //         screenName=\"IDS_PRINTHISTORY\"\r\n        //         controlMap={this.state.controlMap}\r\n        //         userRoleControlRights={this.state.userRoleControlRights}\r\n        //         selectedId={null}\r\n        //     />);\r\n        // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n        //     tabMap.set(\"IDS_REPORTHISTORY\",\r\n        //         <ReportHistoryTab\r\n        //             userInfo={this.props.Login.userInfo}\r\n        //             COAHistory={this.props.Login.masterData.COAHistory}\r\n        //             inputParam={this.props.Login.inputParam}\r\n        //             dataState={this.state.reportHistoryDataState}\r\n        //             dataStateChange={this.sampleDataStateChange}\r\n        //             screenName=\"IDS_REPORTHISTORY\"\r\n        //             controlMap={this.state.controlMap}\r\n        //             userRoleControlRights={this.state.userRoleControlRights}\r\n        //             selectedId={null}\r\n        //             viewDownloadFile={this.downloadReport}\r\n        //         />);\r\n        // }\r\n        return tabMap;\r\n    }\r\n    downloadReport = (input) => {\r\n        let inputParam = {\r\n            inputData: { selectedRecord: { ...input.inputData }, userinfo: this.props.Login.userInfo },\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Report\"\r\n        }\r\n        this.props.viewAttachment(inputParam)\r\n    }\r\n\r\n    subsampleTabDetail = () => {\r\n        let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ?\r\n            this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        let { subSampleSkip, subSampleTake } = this.state\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    resultTabDetail = () => {\r\n        const resultTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        resultTabMap.set(\"IDS_RESULTS\", <ApprovalResultsTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel ={this.props.Login.genericLabel}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            screenName=\"IDS_RESULTS\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            getStatusCombo={this.props.getStatusCombo}\r\n            selectedId={this.props.Login.masterData.selectedParamId}\r\n            viewFile={this.props.viewAttachment}\r\n            checkListRecord={this.props.checkListRecord}\r\n            getEnforceCommentsHistory={this.props.getEnforceCommentsHistory}\r\n        />)\r\n\r\n        resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\",\r\n            <ResultChangeHistoryTab\r\n                tabSequence={SideBarSeqno.TEST}\r\n                genericLabel ={this.props.Login.genericLabel}\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ApprovalResultChangeHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        return resultTabMap;\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake,skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n        let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"screateddate\" }]}\r\n            isneedReport = {false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            isneedHeader={true}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n        attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            tabSequence={SideBarSeqno.SUBSAMPLE}\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            //  masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterList={selectedSubSampleList}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n            isneedHeader={true}\r\n        />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                // masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterList={selectedSampleList}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n                isneedHeader={true}\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake,skip,take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n        let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            isSampleTestComment={true}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            isneedReport = {false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n         commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SUBSAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n           //  masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterList={selectedSubSampleList}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            //masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterList={selectedSampleList}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.sampleCommentDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // onSampleTabChange = (tabProps) => {\r\n    //     const activeSampleTab = tabProps.screenName;\r\n    //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSample: this.props.Login.masterData.APSelectedSample,\r\n    //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSampleTab,\r\n    //             activeSampleTab\r\n    //         }\r\n    //         this.props.getSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    // onSubSampleTabChange = (tabProps) => {\r\n    //     const activeSubSampleTab = tabProps.screenName;\r\n    //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSubSampleTab,\r\n    //             activeSubSampleTab,\r\n    //             subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n    //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n    //         }\r\n    //         this.props.getSubSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestList() {\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    closeAlert=() =>{\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { availableReleaseRecord : undefined, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    \r\n    checkRetestAction = (action, ncontrolCode) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n            if (action.ntransactionstatus === transactionStatus.RETEST && this.props.Login.availableReleaseRecord==undefined) {\r\n                //|| action.ntransactionstatus === transactionStatus.RECALC) \r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                  if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                 }else{\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                    let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n                    if (ntransCode === transactionStatus.ALL) {\r\n                        ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n                    } else {\r\n                        ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n                    }\r\n                let { testskip, testtake } = this.state\r\n                let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n                testList = testList.slice(testskip, testskip + testtake);\r\n                let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n                const inputParam = {\r\n                    inputData: {\r\n                        'performaction': {\r\n                            npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                            ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                            nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                                this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                    this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                    String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                                null,\r\n                            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                            nTransStatus: action.ntransactionstatus,\r\n                            stransdisplaystatus:action.stransdisplaystatus,\r\n                            ntransactionstatus:String(-1),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                            dfrom: obj.fromDate,\r\n                            dto: obj.toDate,\r\n                            nflag: 2,\r\n                            ntype: 1,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                            APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                            APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                            retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                            ncontrolCode,\r\n                          //  checkBoxOperation: 3,\r\n                            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                            nbatchmastercode : (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                            activeTestTab : this.props.Login.masterData.activeTestTab || \"\",\r\n                            activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\", \r\n                            activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\r\n                        },\r\n                        userinfo: this.props.Login.userInfo\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    methodUrl: \"checkReleaseRecord\",\r\n                    postParamList: this.postParamList,\r\n                    action:action,\r\n                    availableReleaseRecord:undefined\r\n                  }\r\n                 this.props.checkReleaseRecord(inputParam)\r\n                 }\r\n               }\r\n            }else if (action.ntransactionstatus === transactionStatus.RETEST){\r\n                //&& this.props.Login.availableReleaseRecord === false) {\r\n\r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n\r\n                        if(this.props.Login.masterData.APSelectedTest[0].nisiqcmaterial===3)\r\n                        {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"IDS_IQCSAMPLECAN'TRETEST\" }));\r\n                        }\r\n                     else{\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                action,\r\n                                masterData: this.props.Login.masterData,\r\n                                openChildModal: true,\r\n                                screenName: \"IDS_RETESTCOUNT\",\r\n                                operation: \"dynamic\",\r\n                                availableReleaseRecord:undefined\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                      }\r\n                    }\r\n                }\r\n                else {\r\n                    this.performTestActions(action, ncontrolCode);\r\n                }\r\n\r\n            }else if (action.ntransactionstatus === transactionStatus.RECALC && this.props.Login.availableReleaseRecord==undefined) {\r\n                const inputParam = {\r\n                    inputData: {\r\n                        'performaction': {\r\n                            npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                            ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                            nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                                this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                    this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                    String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                                null,\r\n                            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                            nTransStatus: action.ntransactionstatus,\r\n                            stransdisplaystatus:action.stransdisplaystatus,\r\n                            ntransactionstatus:String(-1),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                            // dfrom: obj.fromDate,\r\n                            // dto: obj.toDate,\r\n                            nflag: 2,\r\n                            ntype: 1,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                            APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                            APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                            retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                            ncontrolCode,\r\n                           // checkBoxOperation: 3,\r\n                            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                            nbatchmastercode : (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                            activeTestTab : this.props.Login.masterData.activeTestTab || \"\",\r\n                            activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\", \r\n                            activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\r\n                        },\r\n                        userinfo: this.props.Login.userInfo\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    methodUrl: \"checkReleaseRecord\",\r\n                    postParamList: this.postParamList,\r\n                    action:action,\r\n                    availableReleaseRecord:undefined\r\n                  }\r\n                 this.props.checkReleaseRecord(inputParam)\r\n            }else if (action.ntransactionstatus === transactionStatus.RECALC) {\r\n               // && this.props.Login.availableReleaseRecord === false)\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        action,\r\n                        masterData: this.props.Login.masterData,\r\n                        //openChildModal: true,\r\n                        //screenName: \"IDS_RETESTCOUNT\",\r\n                        operation: \"dynamic\",\r\n                        availableReleaseRecord:undefined\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n                this.performTestActions(action, ncontrolCode);\r\n            }else {\r\n                this.performTestActions(action, ncontrolCode);\r\n\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    performTestActions = (action, ncontrolCode) => {\r\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\r\n\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount)\r\n        }else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            if (ntransCode === transactionStatus.ALL) {\r\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            } else {\r\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n            }\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n            const inputParam = {\r\n                inputData: {\r\n                    'performaction': {\r\n                        npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                        ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                        ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                            null,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        nTransStatus: action.ntransactionstatus,\r\n                        stransdisplaystatus:action.stransdisplaystatus,\r\n                        ntransactionstatus:String(-1),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nflag: 2,\r\n                        ntype: 1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                        APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                        APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                        retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        ncontrolCode,\r\n                      //  checkBoxOperation: 3,\r\n                        checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                        nbatchmastercode : (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                        activeTestTab : this.props.Login.masterData.activeTestTab || \"\",\r\n                        activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\", \r\n                        activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                methodUrl: \"performaction\",\r\n                postParamList: this.postParamList\r\n            }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"performaction\",\r\n                        operation: \"dynamic\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.performAction(inputParam)\r\n            }\r\n        }\r\n    }\r\n    updateDecision = (action) => {\r\n        let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        }\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let { skip, take } = this.state\r\n        let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.splice(skip, skip + take);\r\n        let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (selectedsampleList.length > 0) {\r\n            const inputData = {\r\n                'updatedecision': {\r\n                    npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\r\n                    nTransStatus: action.ntransactionstatus,\r\n                    ntransactionstatus: String(ntransCode),\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\r\n                    nflag: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\r\n                    napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                }, userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n            let inputParam = { postParamList: this.postParamList, inputData, masterData: this.props.Login.masterData }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"updatedecision\",\r\n                        operation: \"decision\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.updateDecision(inputParam)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n        }\r\n\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realApprovalVersionList:this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList:this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList :this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList:this.props.Login.masterData.realFilterStatusList\r\n\r\n                    };\r\n                    this.props.getRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realApprovalVersionList:this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList:this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList :this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList:this.props.Login.masterData.realFilterStatusList\r\n\r\n                    }\r\n                    this.props.getRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        //nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null,\r\n                        realApprovalVersionList:this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList:this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList :this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList:this.props.Login.masterData.realFilterStatusList\r\n\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                  //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    let ApprovalVersionValue=comboData.item\r\n                    ApprovalVersionValue['napproveconfversioncode']=comboData.value\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue  }, \r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        napproveconfversioncode:comboData.value,\r\n                        ApprovalVersionValue: comboData.item,\r\n                      //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\r\n                   //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode&& \r\n                        this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? \r\n                             this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    let inputData = {\r\n                        masterData: masterData,\r\n                        ntestcode : comboData.item.ntestcode,\r\n                        defaultRegistrationSubType : this.props.Login.masterData.defaultRegistrationSubType,\r\n                        //ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus.toString(),\r\n                        userinfo:this.props.Login.userInfo,\r\n                        napprovalversioncode: parseInt(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode)\r\n    \r\n                    }\r\n                    this.props.getTestBasedCompletedBatch(inputData)\r\n                    // const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //     data: { masterData }\r\n                    // }\r\n                    // this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'nbatchmastercode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                let defaultBatchvalue = comboData.item;\r\n                this.props.Login.masterData.defaultBatchvalue = defaultBatchvalue;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null,//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                    \r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1    //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode, \r\n \r\n               \r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(fieldName === 'nbatchmastercode' ){\r\n\r\n                this.props.Login.masterData.defaultBatchvalue = [];\r\n\r\n                const updateInfo = {\r\n                   typeName: DEFAULT_RETURN,\r\n                   data: { masterData: { ...this.props.Login.masterData } }\r\n               }\r\n               this.props.updateStore(updateInfo);\r\n            }\r\n            \r\n        }\r\n    }\r\n    onComboChange = (comboData) => {\r\n        if (comboData) {\r\n            let masterData = { ...this.props.Login.masterData, GradeValue: comboData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realApprovalVersionList:this.props.Login.masterData.realApprovalVersionList,\r\n                realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                realRegTypeList:this.props.Login.masterData.realRegTypeList,\r\n                realRegSubTypeList :this.props.Login.masterData.realRegSubTypeList,\r\n                realFilterStatusList:this.props.Login.masterData.realFilterStatusList\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersion(inputParam)\r\n    }\r\n    changeMandatory = (event, dataItem) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO\r\n        selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"], [dataItem.ntransactionresultcode]: value }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realBatchvalue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n           // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n           ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                                || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                                ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n   \r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            //checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n            nbatchmastercode: (realBatchvalue && realBatchvalue.nbatchmastercode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realBatchCodeValue = this.props.Login.masterData.defaultBatchvalue &&  this.props.Login.masterData.defaultBatchvalue\r\n        let realSampleTypeList=this.props.Login.masterData.SampleType &&  this.props.Login.masterData.SampleType\r\n        let realRegTypeList=this.props.Login.masterData.RegType &&  this.props.Login.masterData.RegType\r\n        let realRegSubTypeList=this.props.Login.masterData.RegSubType &&  this.props.Login.masterData.RegSubType\r\n        let realFilterStatusList=this.props.Login.masterData.FilterStatus &&  this.props.Login.masterData.FilterStatus\r\n        let realApprovalVersionList=this.props.Login.masterData.ApprovalVersion &&  this.props.Login.masterData.ApprovalVersion\r\n        let realUserSectionList=this.props.Login.masterData.UserSection &&  this.props.Login.masterData.UserSection\r\n        let realTestList=this.props.Login.masterData.Test &&  this.props.Login.masterData.Test\r\n        let realDesignTemplateMappingList=this.props.Login.masterData.DesignTemplateMapping &&  this.props.Login.masterData.DesignTemplateMapping\r\n        let realBatchvalue=this.props.Login.masterData.defaultBatchvalue &&  this.props.Login.masterData.defaultBatchvalue\r\n        let realBatchvaluesList=this.props.Login.masterData.Batchvalues &&  this.props.Login.masterData.Batchvalues\r\n            // Batchvalues:this.props.Login.masterData.realBatchvaluesList || {},\r\n       \r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, \r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, \r\n            realDesignTemplateMappingValue,realBatchCodeValue,realDesignTemplateMappingList,realTestList,realUserSectionList,\r\n            realApprovalVersionList,realFilterStatusList,realRegSubTypeList,realRegTypeList,realSampleTypeList,\r\n            realBatchvalue,realBatchvaluesList}\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                                || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                                ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            activeSampleTab: this.props.Login.activeSampleTab,\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n          //  checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                this.setState({\r\n                    historyDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState })\r\n      }\r\n    subSampledataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subSampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subSampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleCommentDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let { realFromDate, realToDate, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let ok = true;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.operation === 'enforce') {\r\n            inputData[\"enforcestatus\"] = {\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                ngradecode: this.props.Login.masterData.GradeValue.value || -1,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\r\n                ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\r\n                senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\r\n                selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\r\n                \r\n                // ALPD-1413\r\n                // ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                // ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                // || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                // ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n                napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                npreregno: \"0\",\r\n                preregno: this.props.Login.masterData.APSelectedSample[0].npreregno,\r\n                // ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample[0].ntransactionsamplecode,\r\n                nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n                    ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n                dfrom : obj.fromDate,\r\n                dto : obj.toDate,\r\n                ntype: 2,\r\n              //  checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                activeTestTab: this.props.Login.activeTestTab || \"\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n                enforcestatus: true,\r\n                masterData:this.props.Login.masterData\r\n            }\r\n            inputParam = {\r\n                methodUrl: \"EnforceStatus\",\r\n                classUrl: 'approval',\r\n                inputData: inputData,\r\n                masterData: this.props.Login.masterData,\r\n                postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                operation: \"update\"\r\n            }\r\n            \r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam);\r\n        }\r\n        else {\r\n            let approvalparameter = []\r\n            if (this.state.selectedRecord.approvalParameterEdit) {\r\n                Object.keys(this.state.selectedRecord.approvalParameterEdit).map((key) =>\r\n                    approvalparameter.push(\r\n                        {\r\n                            ntransactionresultcode: key,\r\n                            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\r\n                        }\r\n                    )\r\n                )\r\n                inputData[\"approvalparameter\"] = approvalparameter\r\n                inputParam = {\r\n                    methodUrl: \"ApprovalParameter\",\r\n                    classUrl: 'approval',\r\n                    inputData: inputData,\r\n                    postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                    operation: \"update\"\r\n                }\r\n            } else {\r\n                ok = false;\r\n                this.handleClose()\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (this.props.Login.operation === 'enforce') { \r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            openChildModal: true,\r\n                            operation: this.props.Login.operation,\r\n                            screenName: \"IDS_ENFORCESTATUS\",\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.updateEnforceStatus(inputParam, masterData, \"openChildModal\");\r\n                }\r\n            } else {\r\n                \r\n            \r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            openChildModal: true,\r\n                            operation: this.props.Login.operation,\r\n                            screenName: \"IDS_ENFORCESTATUS\",\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        let availableReleaseRecord = this.props.Login.availableReleaseRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord['esignpassword'] = \"\"\r\n            selectedRecord['esigncomments'] = \"\"\r\n            selectedRecord['esignreason']=\"\"\r\n            availableReleaseRecord=undefined;\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {};\r\n            availableReleaseRecord=undefined\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, templateData,\r\n                 selectedParamId: null, operation, openTemplateModal,availableReleaseRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    viewSample = (viewdetails) => {\r\n        this.props.ViewPatientDetails(this.props.Login.masterData, \"IDS_PREVIOUSRESULTVIEW\", this.props.Login.userInfo, viewdetails);\r\n      };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision' || this.props.Login.operation === 'enforce' ) {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");  \r\n        }\r\n         else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    getActiveTestURL() {\r\n        let url = \"approval/getapprovalparameter\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"approval/getApprovalResultChangeHistory\"\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                url = \"approval/getApprovalHistory\"\r\n                break;\r\n\r\n            default:\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSampleComments(saveParam, acceptList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n                // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedSampleList.length > 0) {\r\n                inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCOAReport = (inputData, ncontrolCode) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            let inputParam = { reporparam: inputData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: \"reportgeneration\",\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        } else {\r\n\r\n            this.props.generateCOAReport(inputData);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList,\r\n    getSampleChildTabDetail, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    ViewPatientDetails,\r\n    generateCOAReport, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail,getTestBasedCompletedBatch,updateEnforceStatus,checkReleaseRecord\r\n})(injectIntl(Approval))"]},"metadata":{},"sourceType":"module"}