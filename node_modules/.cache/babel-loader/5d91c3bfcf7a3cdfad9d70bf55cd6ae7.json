{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var AddMaterialOpenDate=function AddMaterialOpenDate(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:props.label,label:props.isMultiLingualLabel?props.intl.formatMessage({id:props.label}):props.label,className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:props.selectedRecord[props.label]?new Date(props.selectedRecord[props.label]):null,dateFormat:props.dateonly===true?props.userInfo[\"ssitedate\"]:props.timeonly?'HH:mm':props.userInfo[\"ssitedatetime\"],timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:props.dateonly===true?false:true,showTimeSelectOnly:props.timeonly,isMandatory:props.mandatory,maxDate:props.CurrentTime,maxTime:props.CurrentTime,onChange:function onChange(date){return props.handleDateChange(date,props.label);},value:props.selectedRecord?props.selectedRecord[\"dcollectiondate\"]:new Date()})));};export default injectIntl(AddMaterialOpenDate);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/AddMaterialOpenDate.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","injectIntl","DateTimePicker","AddMaterialOpenDate","props","label","isMultiLingualLabel","intl","formatMessage","id","selectedRecord","Date","dateonly","userInfo","timeonly","mandatory","CurrentTime","date","handleDateChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACnC,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,cAAD,EACI,IAAI,CAAEA,KAAK,CAACC,KADhB,CAEI,KAAK,CAAED,KAAK,CAACE,mBAAN,CAA4BF,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAEL,KAAK,CAACC,KAAZ,CAAzB,CAA5B,CAA4ED,KAAK,CAACC,KAF7F,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAED,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,gBAAN,CAAzB,CAJrB,CAKI,QAAQ,CAAEL,KAAK,CAACM,cAAN,CAAqBN,KAAK,CAACC,KAA3B,EAAoC,GAAIM,CAAAA,IAAJ,CAASP,KAAK,CAACM,cAAN,CAAqBN,KAAK,CAACC,KAA3B,CAAT,CAApC,CAAkF,IALhG,CAMI,UAAU,CAAED,KAAK,CAACQ,QAAN,GAAmB,IAAnB,CAA0BR,KAAK,CAACS,QAAN,CAAe,WAAf,CAA1B,CAAwDT,KAAK,CAACU,QAAN,CAAiB,OAAjB,CAA2BV,KAAK,CAACS,QAAN,CAAe,eAAf,CANnG,CAOI,cAAc,CAAET,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAPpB,CAQI,aAAa,CAAEL,KAAK,CAACQ,QAAN,GAAmB,IAAnB,CAA0B,KAA1B,CAAkC,IARrD,CASI,kBAAkB,CAAER,KAAK,CAACU,QAT9B,CAUI,WAAW,CAAEV,KAAK,CAACW,SAVvB,CAWI,OAAO,CAAEX,KAAK,CAACY,WAXnB,CAYI,OAAO,CAAEZ,KAAK,CAACY,WAZnB,CAaI,QAAQ,CAAE,kBAACC,IAAD,QAAUb,CAAAA,KAAK,CAACc,gBAAN,CAAuBD,IAAvB,CAA6Bb,KAAK,CAACC,KAAnC,CAAV,EAbd,CAcI,KAAK,CAAED,KAAK,CAACM,cAAN,CAAuBN,KAAK,CAACM,cAAN,CAAqB,iBAArB,CAAvB,CAAiE,GAAIC,CAAAA,IAAJ,EAd5E,EADJ,CADJ,CADJ,CAwCH,CAzCD,CA0CA,cAAeV,CAAAA,UAAU,CAACE,mBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddMaterialOpenDate = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <DateTimePicker\r\n                    name={props.label}\r\n                    label={props.isMultiLingualLabel ? props.intl.formatMessage({ id: props.label }) : props.label}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                    selected={props.selectedRecord[props.label] ? new Date(props.selectedRecord[props.label]) : null}\r\n                    dateFormat={props.dateonly === true ? props.userInfo[\"ssitedate\"] : props.timeonly ? 'HH:mm' : props.userInfo[\"ssitedatetime\"]}\r\n                    timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                    showTimeInput={props.dateonly === true ? false : true}\r\n                    showTimeSelectOnly={props.timeonly}\r\n                    isMandatory={props.mandatory}\r\n                    maxDate={props.CurrentTime}\r\n                    maxTime={props.CurrentTime}\r\n                    onChange={(date) => props.handleDateChange(date, props.label)}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                />\r\n            </Col>\r\n            {/* <Col md={6}>\r\n                <FormSelectSearch\r\n                    name={`tz${props.label}`}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event,`tz${props.label}`)}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    // defaultValue={this.props.defaultTimeZone}\r\n                    value={props.selectedRecord[`tz${props.label}`] ? props.selectedRecord[`tz${props.label}`] : props.defaultTimeZone}\r\n                    options={props.timeZoneList}\r\n                    optionId={\"value\"}\r\n                    optionValue={\"label\"}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    isClearable={false}\r\n                />\r\n            </Col> */}\r\n        </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddMaterialOpenDate);"]},"metadata":{},"sourceType":"module"}