{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';var AddAdhocParameter=function AddAdhocParameter(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"ntestparametercode\",label:props.intl.formatMessage({id:\"IDS_ADHOCPARAMETER\"}),options:props.adhocParamter||[],optionId:\"value\",optionValue:\"label\",value:props.selectedRecord&&props.selectedRecord[\"nparamtercode\"]?props.selectedRecord[\"nparamtercode\"]||[]:[],isMandatory:true,isClearable:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,allItemSelectedLabel:props.intl.formatMessage({id:\"IDS_ALLITEMSAREMSELECTED\"}),noOptionsLabel:props.intl.formatMessage({id:\"IDS_NOOPTION\"}),searchLabel:props.intl.formatMessage({id:\"IDS_SEARCH\"}),selectAllLabel:props.intl.formatMessage({id:\"IDS_SELECTALL\"}),onChange:function onChange(event){return props.onComboChange(event,\"nparamtercode\");}})));};export default injectIntl(AddAdhocParameter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/ResultEntryBySample/AddAdhocParameter.jsx"],"names":["React","Row","Col","FormMultiSelect","CustomSwitch","injectIntl","transactionStatus","AddAdhocParameter","props","intl","formatMessage","id","adhocParamter","selectedRecord","event","onComboChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gEAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjC,mBAEI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,eAAD,EACI,IAAI,CAAE,oBADV,CAEI,KAAK,CAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,oBAAL,CAAzB,CAFZ,CAGI,OAAO,CAAGH,KAAK,CAACI,aAAN,EAAuB,EAHrC,CAII,QAAQ,CAAC,OAJb,CAKI,WAAW,CAAC,OALhB,CAMI,KAAK,CAAKJ,KAAK,CAACK,cAAN,EAAwBL,KAAK,CAACK,cAAN,CAAqB,eAArB,CAAxB,CAAgEL,KAAK,CAACK,cAAN,CAAqB,eAArB,GAAyC,EAAzG,CAA6G,EAN3H,CAOI,WAAW,CAAE,IAPjB,CAQI,WAAW,CAAE,IARjB,CASI,aAAa,CAAE,KATnB,CAUI,QAAQ,CAAE,KAVd,CAWI,iBAAiB,CAAE,KAXvB,CAYI,gBAAgB,CAAE,IAZtB,CAaI,oBAAoB,CAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,0BAAL,CAAzB,CAb1B,CAcI,cAAc,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,cAAL,CAAzB,CAdpB,CAeI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,YAAL,CAAzB,CAfjB,CAgBI,cAAc,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,eAAL,CAAzB,CAhBpB,CAiBI,QAAQ,CAAI,kBAACG,KAAD,QAAUN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,eAA3B,CAAV,EAjBhB,EADJ,CADJ,CAFJ,CA2CH,CA5CD,CA6CA,cAAeT,CAAAA,UAAU,CAACE,iBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddAdhocParameter = (props) => {\r\n    return (\r\n\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                    name={\"ntestparametercode\"}\r\n                    label={ props.intl.formatMessage({ id:\"IDS_ADHOCPARAMETER\" })}                              \r\n                    options={ props.adhocParamter || []}\r\n                    optionId=\"value\"\r\n                    optionValue=\"label\"\r\n                    value = { props.selectedRecord && props.selectedRecord[\"nparamtercode\"] ? props.selectedRecord[\"nparamtercode\"] || [] :[]}\r\n                    isMandatory={true}                                               \r\n                    isClearable={true}\r\n                    disableSearch={false}                                \r\n                    disabled={false}\r\n                    closeMenuOnSelect={false}\r\n                    alphabeticalSort={true}\r\n                    allItemSelectedLabel={props.intl.formatMessage({ id:\"IDS_ALLITEMSAREMSELECTED\" })}\r\n                    noOptionsLabel={props.intl.formatMessage({ id:\"IDS_NOOPTION\" })}\r\n                    searchLabel={props.intl.formatMessage({ id:\"IDS_SEARCH\" })}\r\n                    selectAllLabel={props.intl.formatMessage({ id:\"IDS_SELECTALL\" })}\r\n                    onChange = {(event)=> props.onComboChange(event, \"nparamtercode\")}\r\n                />\r\n            </Col>\r\n            {/* <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_INVISIBLEPARAMETERINTESTGROUP\" })}\r\n                    type=\"switch\"\r\n                    name={\"nvisibleadhocparameter\"}\r\n                    onChange={(event) => this.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_INVISIBLEPARAMETERINTESTGROUP\" })}\r\n                    defaultValue={props.selectedRecord[\"nvisibleadhocparameter\"] ===  transactionStatus.ACTIVE ? true : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord[\"nvisibleadhocparameter\"] ===  transactionStatus.ACTIVE ? true : false}\r\n                />\r\n            </Col> */}\r\n              \r\n        </Row>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default injectIntl(AddAdhocParameter);\r\n"]},"metadata":{},"sourceType":"module"}