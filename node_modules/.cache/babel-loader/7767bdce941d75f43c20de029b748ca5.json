{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faThumbsUp,faCopy}from'@fortawesome/free-solid-svg-icons';//, faUserTimes,faTrash,\nimport{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{toast}from'react-toastify';import{callService,crudMaster,validateEsignCredential,updateStore,getPasswordPolicyDetail,getPasswordPolicyComboService,getCopyUseRolePolicy,comboChangeUserRolePolicy,filterColumnData}from'../../actions';import rsapi from'../../rsapi';//import { callService, crudMaster } from '../../actions';\nimport{ContentPanel}from'../../components/App.styles';import{constructOptionList,searchData,sortData,showEsign,getControlMap}from'../../components/CommonScript';import ListMaster from'../../components/list-master/list-master.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Axios from'axios';import UserRoleFilter from'./UserRoleFilter';import AddPasswordPolicy from'./AddPasswordPolicy';import UserRolePolicy from'./UserRolePolicy';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';import{transactionStatus}from'../../components/Enumeration';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport ConfirmMessage from'../../components/confirm-alert/confirm-message.component';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport BreadcrumbComponent from'../../components/Breadcrumb.Component';import{Affix}from'rsuite';// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PasswordPolicy=/*#__PURE__*/function(_React$Component){_inherits(PasswordPolicy,_React$Component);var _super=_createSuper(PasswordPolicy);function PasswordPolicy(props){var _this;_classCallCheck(this,PasswordPolicy);_this=_super.call(this,props);_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(\"PasswordPolicy\",_this.props.Login.masterData.SelectedPasswordPolicy,\"delete\",deleteId);});};_this.getPasswordPolicyComboService=function(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode){if(masterData.UserRole.length>0){if(operation===\"create\"||operation===\"update\"&&masterData.SelectedPasswordPolicy.ntransactionstatus!==transactionStatus.RETIRED&&masterData.SelectedPasswordPolicy.ntransactionstatus!==transactionStatus.APPROVED){_this.props.getPasswordPolicyComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLEFROMFILTER\"}));}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";if(_this.state.selectedcombo[\"nuserrolecode\"]){_this.props.comboChangeUserRolePolicy(_this.state.selectedcombo[\"nuserrolecode\"].value,_this.props.Login.masterData,_this.props.Login.userInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLE\"}));}};_this.getPasswordPolicyDetail=function(passwordPolicy){return rsapi.post(\"passwordpolicy/getPasswordPolicy\",{npolicycode:passwordPolicy.npolicycode,\"userinfo\":_this.props.Login.userInfo}).then(function(response){var masterData=response.data;sortData(masterData);var selectedcombo={nuserrolecode:masterData.UserRole&&masterData.UserRole.length>0?{\"value\":_this.state.selectedcombo[\"nuserrolecode\"].value,\"label\":_this.state.selectedcombo[\"nuserrolecode\"].label}:_this.state.selectedcombo[\"nuserrolecode\"]};_this.setState({userRolePolicyDataData:masterData[\"UserRole\"],selectedPasswordPolicy:masterData[\"SelectedPasswordPolicy\"],selectedcombo:selectedcombo});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.deleteRecord=function(methodUrl,selectedRecord,operation,ncontrolCode){if(_this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.RETIRED||_this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.APPROVED){var message=\"IDS_SELECTDRAFTRECORDTODELETE\";// if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n//     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\n// }\ntoast.warn(_this.props.intl.formatMessage({id:message}));//toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\n}else{var _inputData;var postParam={inputListName:\"PasswordPolicy\",selectedObject:\"SelectedPasswordPolicy\",primaryKeyField:\"npolicycode\",primaryKeyValue:_this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,fetchUrl:\"passwordpolicy/getPasswordPolicy\",fecthInputObject:{userInfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"passwordpolicy\",_this.props.Login.masterData.SelectedPasswordPolicy),_inputData),operation:operation};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"PasswordPolicy\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"approve\"){loadEsign=false;openModal=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";//selectedRecord = {};\n}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null// operation: undefined\n}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){var selectedcombo=_this.state.selectedcombo||{};var selectedRecord=_this.state.selectedRecord||{};selectedcombo[fieldName]=comboData;selectedRecord[fieldName]=comboData;_this.setState({selectedcombo:selectedcombo,selectedRecord:selectedRecord});// if (fieldName === \"nuserrolecode\") {\n//   this.searchRef.current.value = \"\";\n//   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\n// }\n}};_this.onComboChangeUserRole=function(comboData,fieldName){if(comboData!=null){var selectedcomboUserRole=_this.state.selectedcomboUserRole||{};//this.state.selectedRecord || {};\nselectedcomboUserRole[fieldName]=comboData;var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedcomboUserRole:selectedcomboUserRole,selectedRecord:selectedRecord});}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;// else if (event.target.name === \"nlockmode\")\n//     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\nelse selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};// if (value === 0 || value === 0.0) {\n//     selectedRecord[name] = '';\n//     this.setState({ selectedRecord });\n// } else {\nselectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});//}\n};_this.onApproveClick=function(screenName,operation,primaryKeyName,primaryKeyValue,ncontrolCode){if(_this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.DRAFT){var approveId=_this.state.controlMap.has(\"ApprovePasswordPolicy\")&&_this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;//add               \nvar postParam=undefined;inputData[\"passwordpolicy\"]={\"nuserrolecode\":_this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"]?_this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value:\"\"};inputData[\"passwordpolicy\"]=_this.props.Login.masterData.SelectedPasswordPolicy;postParam={inputListName:\"PasswordPolicy\",selectedObject:\"SelectedPasswordPolicy\",primaryKeyField:\"npolicycode\"};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"UserRolePolicy\",inputData:inputData,operation:\"approve\",postParam:postParam};var saveType;var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,approveId);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,openModal:true,operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}//toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\n}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOAPPROVE\"}));}};_this.validation=function(){var ntotal=0;var nminpswlen=0;var nmaxpaslen=0;var nexpairyDays=0;var nremainderdays=0;ntotal=parseInt(_this.state.selectedRecord.nminnoofnumberchar)+parseInt(_this.state.selectedRecord.nminnooflowerchar)+parseInt(_this.state.selectedRecord.nminnoofupperchar)+parseInt(_this.state.selectedRecord.nminnoofspecialchar);nminpswlen=parseInt(_this.state.selectedRecord.nminpasslength);nmaxpaslen=parseInt(_this.state.selectedRecord.nmaxpasslength);nexpairyDays=parseInt(_this.state.selectedRecord.nexpirypolicy);nremainderdays=parseInt(_this.state.selectedRecord.nremainderdays);if(ntotal===0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTTOTALPSWZERO\"}));return false;}if(nminpswlen===0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTMINPSWZERO\"}));return false;}if(nminpswlen<ntotal){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MINPSWCANTLESSTOTALLEN\"}));return false;}if(nmaxpaslen<nminpswlen){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MAXPSWCANTLESSMINPSWLEN\"}));return false;}if(nremainderdays>nexpairyDays){toast.warn(_this.props.intl.formatMessage({id:\"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\"}));return false;}return true;};_this.onSaveClick=function(saveType,formRef){var inputData=[];var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;if(_this.props.Login.screenName===\"IDS_PASSWORDPOLICY\"){if(_this.validation()){inputParam=_this.savePasswordPolicy(saveType,formRef);var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}}else if(_this.props.Login.screenName===\"IDS_USERROLEPOLICYS\"){var copyId=_this.state.controlMap.has(\"CopyPasswordPolicy\")&&_this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;inputParam=_this.copyUserRolePolicy(saveType,formRef);var _masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,copyId)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData},saveType:saveType}};_this.props.updateStore(_updateInfo);}else{_this.props.crudMaster(inputParam,_masterData,\"openModal\");// toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\n}}};_this.reloadData=function(){_this.searchRef.current.value=\"\";if(_this.state.selectedcombo[\"nuserrolecode\"].value){var inputParam={inputData:{nuserrolecode:_this.state.selectedcombo[\"nuserrolecode\"].value,userinfo:_this.props.Login.userInfo},classUrl:\"passwordpolicy\",methodUrl:\"PasswordPolicyByUserRoleCode\"};_this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode,_this.props.Login.masterData,inputParam.inputData.userinfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USERROLENOTAVAILABLE\"}));}};_this.state={isOpen:false,passwordPolicyData:[],userRolePolicyData:[],masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",screenName:undefined,userLogged:true,selectedPasswordPolicy:undefined,selectedcombo:undefined,selectedcomboUserRole:undefined,userRoleControlRights:[],controlMap:new Map(),showAccordian:true,userRole:[]};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.policyFieldList=['spolicyname','nminnoofnumberchar','nminnooflowerchar','nminnoofupperchar','nminnoofspecialchar','nminpasslength','nmaxpasslength','nnooffailedattempt','nideallocktime','nexpirypolicyrequired','nexpirypolicy','nremainderdays','scomments'];//'nmahcode',\n_this.searchFieldList=[\"nexpirypolicy\",\"nideallocktime\",\"nmaxpasslength\",\"nminnooflowerchar\",\"nminnoofnumberchar\",\"nminnoofspecialchar\",\"nminnoofupperchar\",\"nminpasslength\",\"nnooffailedattempt\",\"scomments\",\"sexpirystatus\",\"spolicyname\",\"stransstatus\"];return _this;}_createClass(PasswordPolicy,[{key:\"render\",value:function render(){var _this2=this;var userStatusCSS=\"outline-secondary\";if(this.props.Login.masterData.SelectedPasswordPolicy&&this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.ACTIVE||this.props.Login.masterData.SelectedPasswordPolicy&&this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.APPROVED){userStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.SelectedPasswordPolicy&&this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.RETIRED){userStatusCSS=\"outline-danger\";}var addId=this.state.controlMap.has(\"AddPasswordPolicy\")&&this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;var editId=this.state.controlMap.has(\"EditPasswordPolicy\")&&this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeletePasswordPolicy\")&&this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode;var approveId=this.state.controlMap.has(\"ApprovePasswordPolicy\")&&this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;var copyId=this.state.controlMap.has(\"CopyPasswordPolicy\")&&this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;var filterParam={inputListName:\"PasswordPolicy\",selectedObject:\"SelectedPasswordPolicy\",primaryKeyField:\"npolicycode\",fetchUrl:\"passwordpolicy/getPasswordPolicy\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};this.validationColumnList=[{\"idsName\":\"IDS_POLICYNAME\",\"dataField\":\"spolicyname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINNUMBERCHAR\",\"dataField\":\"nminnoofnumberchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINLOWERCHAR\",\"dataField\":\"nminnooflowerchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINUPPERCHAR\",\"dataField\":\"nminnoofupperchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINSPECIALCHAR\",\"dataField\":\"nminnoofspecialchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINPASSWORDLENGTH\",\"dataField\":\"nminpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MAXPASSWORDLENGTH\",\"dataField\":\"nmaxpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_NOOFFAILEDATTEPT\",\"dataField\":\"nnooffailedattempt\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\n//{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\n];if(this.state.selectedRecord[\"nexpirypolicyrequired\"]===3){this.validationColumnList=[{\"idsName\":\"IDS_POLICYNAME\",\"dataField\":\"spolicyname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINNUMBERCHAR\",\"dataField\":\"nminnoofnumberchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINLOWERCHAR\",\"dataField\":\"nminnooflowerchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINUPPERCHAR\",\"dataField\":\"nminnoofupperchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINSPECIALCHAR\",\"dataField\":\"nminnoofspecialchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINPASSWORDLENGTH\",\"dataField\":\"nminpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MAXPASSWORDLENGTH\",\"dataField\":\"nmaxpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_NOOFFAILEDATTEPT\",\"dataField\":\"nnooffailedattempt\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_EXPIRYPOLICY\",\"dataField\":\"nexpirypolicy\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REMAINDERDAYS\",\"dataField\":\"nremainderdays\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}else{this.validationColumnList=[{\"idsName\":\"IDS_POLICYNAME\",\"dataField\":\"spolicyname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINNUMBERCHAR\",\"dataField\":\"nminnoofnumberchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINLOWERCHAR\",\"dataField\":\"nminnooflowerchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINUPPERCHAR\",\"dataField\":\"nminnoofupperchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINSPECIALCHAR\",\"dataField\":\"nminnoofspecialchar\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MINPASSWORDLENGTH\",\"dataField\":\"nminpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_MAXPASSWORDLENGTH\",\"dataField\":\"nmaxpasslength\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_NOOFFAILEDATTEPT\",\"dataField\":\"nnooffailedattempt\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}this.copyValidationColumnList=[{\"idsName\":\"IDS_POLICYNAME\",\"dataField\":\"spolicyname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_USERROLEPOLICY\",\"dataField\":\"nuserrolecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});var copyMandatoryFields=[];this.copyValidationColumnList.forEach(function(item){return item.mandatory===true?copyMandatoryFields.push(item):\"\";});var breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{formatMessage:this.props.intl.formatMessage,screenName:\"Password Policy\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.PasswordPolicy,getMasterDetail:function getMasterDetail(passwordPolicy){return _this2.props.getPasswordPolicyDetail(passwordPolicy,_this2.props.Login.userInfo,_this2.props.Login.masterData,_this2.state.selectedcombo);},selectedMaster:this.props.Login.masterData.SelectedPasswordPolicy,primaryKeyField:\"npolicycode\",mainField:\"spolicyname\",firstField:\"stransstatus\"// secondField=\"stransstatus\"\n// isIDSField=\"Yes\"\n//filterColumnData={this.props.filterColumnDataPasswordPolicy}\n,filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\",\"create\",\"npolicycode\",null,_this2.props.Login.masterData,_this2.props.Login.userInfo,addId);},hidePaging:true,needAccordianFilter:false,showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterComponent:[{\"IDS_USERROLEPOLICYS\":/*#__PURE__*/React.createElement(UserRoleFilter,{formatMessage:this.props.intl.formatMessage,filterUserRole:this.state.userRole||[]//{this.props.Login.masterData.UserRole || []}\n,selectedRecord:this.state.selectedcombo||{}//\n,onComboChange:this.onComboChange})}]})),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.PasswordPolicy&&this.props.Login.masterData.PasswordPolicy.length>0&&this.props.Login.masterData.SelectedPasswordPolicy?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"product-title-main\"},this.props.Login.masterData.SelectedPasswordPolicy.spolicyname)),/*#__PURE__*/React.createElement(Card.Subtitle,{className:\"text-muted font-weight-normal d-flex justify-content-between\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(userStatusCSS,\" btn-sm ml-3\")},this.props.Login.masterData.SelectedPasswordPolicy&&this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.ACTIVE||this.props.Login.masterData.SelectedPasswordPolicy&&this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus===transactionStatus.APPROVED?/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-check \"}):\"\",/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.masterData.SelectedPasswordPolicy.stransstatus}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline \"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\",\"update\",\"npolicycode\",_this2.props.Login.masterData.SelectedPasswordPolicy.npolicycode,_this2.props.Login.masterData,_this2.props.Login.userInfo,editId);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//  data-for=\"tooltip_list_wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deletePassword Policy\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}// data-for=\"tooltip_list_wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,onClick:function onClick(){return _this2.onApproveClick(\"PasswordPolicy\",\"approve\",\"npolicycode\",_this2.props.Login.masterData.SelectedPasswordPolicy.npolicycode,approveId);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})// data-for=\"tooltip_list_wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(copyId)===-1,onClick:function onClick(){return _this2.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\",\"copy\",\"nuserrolecode\",undefined);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"})//  data-for=\"tooltip_list_wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MINNUMBERCHAR\",message:\"Division\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MINLOWERCHAR\",message:\"nminnooflowerchar\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MINUPPERCHAR\",message:\"nminnoofupperchar\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MINSPECIALCHAR\",message:\"nminnoofspecialchar\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MINPASSWORDLENGTH\",message:\"nminpasslength\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MAXPASSWORDLENGTH\",message:\"nmaxpasslength\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOOFFAILEDATTEPT\",message:\"nnooffailedattempt\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXPIRYREQUIRED\",message:\"nexpirypolicyrequired\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXPIRYPOLICY\",message:\"nexpirypolicy\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_REMAINDERDAYS\",message:\"nremainderdays\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMMENTS\",message:\"scomments\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},this.props.Login.masterData.SelectedPasswordPolicy.scomments))))))):\"\"))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_PASSWORDPOLICY\"?mandatoryFields:copyMandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_PASSWORDPOLICY\"?/*#__PURE__*/React.createElement(AddPasswordPolicy,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onNumericInputOnChange:this.onNumericInputOnChange,onComboChange:this.onComboChange,formatMessage:this.props.intl.formatMessage,selectedPasswordPolicy:this.props.Login.masterData.SelectedPasswordPolicy,operation:this.props.operation}):/*#__PURE__*/React.createElement(UserRolePolicy,{selectedRecord:this.props.Login.masterData.selectedcomboUserRole||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChangeUserRole,formatMessage:this.props.intl.formatMessage,operation:this.props.operation,filterUserRole:this.state.userRole||[]//{this.props.Login.masterData.UserRole || []}\n,selectedPasswordPolicy:this.props.Login.masterData.SelectedPasswordPolicy})}));}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.UserRole){breadCrumbData.push({\"label\":\"IDS_USERROLE\",\"value\":this.props.Login.masterData.SelectedUserRole?this.props.Login.masterData.SelectedUserRole.suserrolename:\"NA\"});}return breadCrumbData;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var masterData=this.props.Login.masterData;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData.UserRole!==previousProps.Login.masterData.UserRole){var selectedcombo={nuserrolecode:masterData.UserRole&&masterData.UserRole.length>0?{\"value\":masterData.UserRole[0].nuserrolecode,\"label\":masterData.UserRole[0].suserrolename}:this.state.selectedRecord[\"nuserrolecode\"]};this.setState({selectedcombo:selectedcombo});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}if(this.props.Login.masterData.UserRole!==previousProps.Login.masterData.UserRole){var userRole=constructOptionList(this.props.Login.masterData.UserRole||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,undefined);var UserRoleList=userRole.get(\"OptionList\");this.setState({userRole:UserRoleList});}if(this.props.Login.masterData!==previousProps.Login.masterData){var filterData=this.generateBreadCrumData();this.setState({filterData:filterData});}}},{key:\"filterColumnData\",value:function filterColumnData(event){var _this3=this;var filterValue=event.target.value;if(filterValue===\"\"){this.setState({passwordPolicyData:this.props.Login.masterData[\"PasswordPolicy\"],//this.props.Login.masterData[\"Users\"],\nuserRolePolicyData:this.props.Login.masterData[\"UserRole\"],selectedPasswordPolicy:this.props.Login.masterData[\"SelectedPasswordPolicy\"]});}else{if(filterValue.length>2){var searchedData=searchData(filterValue,this.props.Login.masterData[\"PasswordPolicy\"],\"spolicyname\");if(searchedData&&searchedData.length>0){return rsapi.post(\"passwordpolicy/getPasswordPolicy\",{nmahcode:searchedData[0].nmahcode,userinfo:this.props.Login.userInfo}).then(function(response){_this3.setState({passwordPolicyData:searchedData,userRolePolicyData:response.data[\"UserRole\"],selectedPasswordPolicy:response.data[\"SelectedPasswordPolicy\"]});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this3.props.intl.formatMessage({id:error.response.data}));}});}else{this.setState({passwordPolicyData:[],userRolePolicyData:[],selectedPasswordPolicy:{}});}}}}},{key:\"getCopyUseRolePolicy\",value:function getCopyUseRolePolicy(screenName,operation,primaryKeyName,primaryKeyValue,ncontrolCode){this.setState({operation:operation,screenName:screenName,isOpen:true});}},{key:\"getPasswwordPolicyComboService\",value:function getPasswwordPolicyComboService(screenName,operation,primaryKeyName,primaryKeyValue){var _this4=this;if(operation===\"create\"||operation===\"update\"&&this.state.selectedPasswordPolicy.ntransactionstatus!==transactionStatus.RETIRED){//ntransactionstatus = 7 -- User Retired           \nvar userLogged=this.state.userLogged;var selectedRecord={};var urlArray=[];if(operation===\"update\"){var _rsapi$post;var policyById=rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",this.props.Login.userInfo),_rsapi$post));urlArray=[policyById];Axios.all(urlArray).then(function(response){selectedRecord=response[0].data;_this4.setState({operation:operation,screenName:screenName,selectedRecord:selectedRecord,userLogged:userLogged,isOpen:true});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this4.props.intl.formatMessage({id:error.response.data}));}});}else{this.setState({operation:operation,screenName:screenName,selectedRecord:selectedRecord,isOpen:true});}}else{toast.warn(this.props.intl.formatMessage({id:this.state.selectedPasswordPolicy.stransstatus}));}}},{key:\"savePasswordPolicy\",value:function savePasswordPolicy(saveType,formRef){var _this5=this;var inputData=[];inputData[\"userinfo\"]=this.props.Login.userInfo;var postParam=undefined;if(this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"PasswordPolicy\",selectedObject:\"SelectedPasswordPolicy\",primaryKeyField:\"npolicycode\"};inputData[\"passwordpolicy\"]=this.state.selectedRecord;inputData[\"passwordpolicy\"][\"scomments\"]=this.state.selectedRecord[\"scomments\"]!==null?this.state.selectedRecord[\"scomments\"]:\"\";// this.policyFieldList.map(item => {\n//     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\n// })\n// inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\n}else{//add               \ninputData[\"passwordpolicy\"]={\"nideallocktime\":6000};//this.props.Login.userInfo.nmastersitecode };\nthis.policyFieldList.map(function(item){return inputData[\"passwordpolicy\"][item]=_this5.state.selectedRecord[item];});inputData[\"nuserrolecode\"]=this.state.selectedcombo[\"nuserrolecode\"]?this.state.selectedcombo[\"nuserrolecode\"].value:\"\";}inputData[\"passwordpolicy\"][\"nexpirypolicy\"]=this.state.selectedRecord[\"nexpirypolicyrequired\"]===3?this.state.selectedRecord[\"nexpirypolicy\"]:0;inputData[\"passwordpolicy\"][\"nremainderdays\"]=this.state.selectedRecord[\"nexpirypolicyrequired\"]===3?this.state.selectedRecord[\"nremainderdays\"]:0;var inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"PasswordPolicy\",inputData:inputData,operation:this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:this.searchRef};return inputParam;}},{key:\"copyUserRolePolicy\",value:function copyUserRolePolicy(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=this.props.Login.userInfo;inputData[\"userrole\"]={};var postParam=undefined;var userroleArray=[];userroleArray=this.state.selectedcomboUserRole.nuserrolecode.map(function(item){var userrolelist={};userrolelist[\"nuserrolecode\"]=item.value;userrolelist[\"suserrolename\"]=item.label;userrolelist[\"sdescription\"]=\"a\";userrolelist[\"nsitecode\"]=-1;//userroleArray.push(userrolelist);\nreturn userrolelist;});inputData['userrole']=userroleArray;inputData['npolicycode']=this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;inputData['spolicyname']=this.state.selectedRecord.spolicyname;postParam={inputListName:\"PasswordPolicy\",selectedObject:\"SelectedPasswordPolicy\",primaryKeyField:\"npolicycode\"};var inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"PasswordPolicyToSelectedRole\",inputData:inputData,operation:this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:this.searchRef};return inputParam;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}// if (props.Login.selectedRecord === undefined) {\n//     return { selectedRecord: {} }\n// }\nreturn null;}}]);return PasswordPolicy;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getPasswordPolicyDetail:getPasswordPolicyDetail,getPasswordPolicyComboService:getPasswordPolicyComboService,getCopyUseRolePolicy:getCopyUseRolePolicy,comboChangeUserRolePolicy:comboChangeUserRolePolicy,filterColumnData:filterColumnData})(injectIntl(PasswordPolicy));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/PasswordPolicy.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faCopy","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getPasswordPolicyDetail","getPasswordPolicyComboService","getCopyUseRolePolicy","comboChangeUserRolePolicy","filterColumnData","rsapi","ContentPanel","constructOptionList","searchData","sortData","showEsign","getControlMap","ListMaster","SlideOutModal","Axios","UserRoleFilter","AddPasswordPolicy","UserRolePolicy","DEFAULT_RETURN","Esign","transactionStatus","ConfirmMessage","BreadcrumbComponent","Affix","mapStateToProps","state","Login","PasswordPolicy","props","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","masterData","SelectedPasswordPolicy","screenName","operation","primaryKeyName","primaryKeyValue","userInfo","ncontrolCode","UserRole","length","ntransactionstatus","RETIRED","APPROVED","warn","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","searchRef","current","value","selectedcombo","passwordPolicy","post","npolicycode","then","response","nuserrolecode","label","setState","userRolePolicyDataData","selectedPasswordPolicy","catch","error","status","message","methodUrl","selectedRecord","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","inputParam","classUrl","inputData","toLowerCase","userRoleControlRights","nformcode","loadEsign","screenData","openModal","validateEsign","sreason","password","closeModal","selectedId","onComboChange","comboData","fieldName","onComboChangeUserRole","selectedcomboUserRole","onInputOnChange","event","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","onNumericInputOnChange","onApproveClick","DRAFT","approveId","controlMap","has","get","ncontrolcode","undefined","Value","saveType","esignNeeded","validation","ntotal","nminpswlen","nmaxpaslen","nexpairyDays","nremainderdays","parseInt","nminnoofnumberchar","nminnooflowerchar","nminnoofupperchar","nminnoofspecialchar","nminpasslength","nmaxpasslength","nexpirypolicy","onSaveClick","formRef","savePasswordPolicy","copyId","copyUserRolePolicy","reloadData","userinfo","isOpen","passwordPolicyData","userRolePolicyData","masterStatus","userLogged","Map","showAccordian","userRole","createRef","policyFieldList","searchFieldList","userStatusCSS","addId","editId","filterParam","validationColumnList","copyValidationColumnList","mandatoryFields","forEach","item","mandatory","push","copyMandatoryFields","breadCrumbData","filterData","searchedData","spolicyname","stransstatus","indexOf","nnooffailedattempt","sexpirystatus","scomments","SelectedUserRole","suserrolename","previousProps","Object","values","map","UserRoleList","generateBreadCrumData","filterValue","nmahcode","urlArray","policyById","all","userroleArray","userrolelist","modalName","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faCopy } from '@fortawesome/free-solid-svg-icons';//, faUserTimes,faTrash,\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getPasswordPolicyDetail,\r\n    getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n} from '../../actions';\r\nimport rsapi from '../../rsapi';\r\n//import { callService, crudMaster } from '../../actions';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { constructOptionList, searchData, sortData, showEsign, getControlMap } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Axios from 'axios';\r\nimport UserRoleFilter from './UserRoleFilter';\r\nimport AddPasswordPolicy from './AddPasswordPolicy';\r\nimport UserRolePolicy from './UserRolePolicy';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PasswordPolicy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            isOpen: false,\r\n            passwordPolicyData: [], userRolePolicyData: [],\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedPasswordPolicy: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true, userRole: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.policyFieldList = ['spolicyname', 'nminnoofnumberchar', 'nminnooflowerchar', 'nminnoofupperchar', 'nminnoofspecialchar',\r\n            'nminpasslength', 'nmaxpasslength', 'nnooffailedattempt', 'nideallocktime', 'nexpirypolicyrequired', 'nexpirypolicy',\r\n            'nremainderdays', 'scomments'];//'nmahcode',\r\n\r\n        this.searchFieldList = [\"nexpirypolicy\", \"nideallocktime\", \"nmaxpasslength\", \"nminnooflowerchar\", \"nminnoofnumberchar\",\r\n            \"nminnoofspecialchar\", \"nminnoofupperchar\", \"nminpasslength\", \"nnooffailedattempt\", \"scomments\",\r\n            \"sexpirystatus\", \"spolicyname\", \"stransstatus\"];\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord === undefined) {\r\n        //     return { selectedRecord: {} }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if ((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n            || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddPasswordPolicy\") && this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditPasswordPolicy\") && this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeletePasswordPolicy\") && this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode\r\n        const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n        const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n        const filterParam = {\r\n            inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\",\r\n            fetchUrl: \"passwordpolicy/getPasswordPolicy\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\r\n            //{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\r\n        ]\r\n        if (this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            ]\r\n        }\r\n        else {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n            ]\r\n        }\r\n        this.copyValidationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_USERROLEPOLICY\", \"dataField\": \"nuserrolecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        const copyMandatoryFields = [];\r\n        this.copyValidationColumnList.forEach(item => item.mandatory === true ?\r\n            copyMandatoryFields.push(item) : \"\"\r\n        );\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Password Policy\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.PasswordPolicy}\r\n                                getMasterDetail={(passwordPolicy) => this.props.getPasswordPolicyDetail(passwordPolicy, this.props.Login.userInfo, this.props.Login.masterData, this.state.selectedcombo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                primaryKeyField=\"npolicycode\"\r\n                                mainField=\"spolicyname\"\r\n                                firstField=\"stransstatus\"\r\n                                // secondField=\"stransstatus\"\r\n                                // isIDSField=\"Yes\"\r\n                                //filterColumnData={this.props.filterColumnDataPasswordPolicy}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"create\", \"npolicycode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                hidePaging={true}\r\n                                needAccordianFilter={false}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_USERROLEPOLICYS\":\r\n                                            <UserRoleFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.PasswordPolicy && this.props.Login.masterData.PasswordPolicy.length > 0 && this.props.Login.masterData.SelectedPasswordPolicy ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedPasswordPolicy.spolicyname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal d-flex justify-content-between\">\r\n                                                    {/* <Row>\r\n                                                        <Col md={8} className=\"d-flex\"> */}\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            {((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n                                                                || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) ? <i class=\"fas fa-check \"></i> : \"\"}\r\n                                                            <FormattedMessage id={this.props.Login.masterData.SelectedPasswordPolicy.stransstatus} />\r\n                                                        </span>\r\n\r\n                                                    </h2>\r\n                                                    {/* </Col>\r\n                                                        <Col md={4}> */}\r\n                                                    <div className=\"d-flex product-category\" >\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"d-inline \">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"update\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                                                                    this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n                                                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                    onClick={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link> */}\r\n                                                            <Nav.Link name=\"deletePassword Policy\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        handleClickDelete={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy,\r\n                                                                            \"delete\", deleteId)}\r\n                                                                    /> */}\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                onClick={() => this.onApproveClick(\"PasswordPolicy\", \"approve\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, approveId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                onClick={() => this.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\", \"copy\", \"nuserrolecode\", undefined)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCopy} />\r\n                                                            </Nav.Link>\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n                                                    {/* </Col>\r\n                                                    </Row> */}\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINNUMBERCHAR\" message=\"Division\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINLOWERCHAR\" message=\"nminnooflowerchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINUPPERCHAR\" message=\"nminnoofupperchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINSPECIALCHAR\" message=\"nminnoofspecialchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINPASSWORDLENGTH\" message=\"nminpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MAXPASSWORDLENGTH\" message=\"nmaxpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_NOOFFAILEDATTEPT\" message=\"nnooffailedattempt\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYREQUIRED\" message=\"nexpirypolicyrequired\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYPOLICY\" message=\"nexpirypolicy\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_REMAINDERDAYS\" message=\"nremainderdays\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={8}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_COMMENTS\" message=\"scomments\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.scomments}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n\r\n\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? mandatoryFields : copyMandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ?\r\n                                <AddPasswordPolicy selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                    operation={this.props.operation}\r\n\r\n                                />\r\n                                : <UserRolePolicy selectedRecord={this.props.Login.masterData.selectedcomboUserRole || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChangeUserRole}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    operation={this.props.operation}\r\n                                    filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                />\r\n\r\n\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId));\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.UserRole) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_USERROLE\",\r\n                    \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\r\n\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    getPasswordPolicyComboService = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) => {\r\n        if (masterData.UserRole.length > 0) {\r\n            if (operation === \"create\" || (operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !==\r\n             transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED)) {\r\n                this.props.getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode)\r\n             }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n             }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLEFROMFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedcombo[\"nuserrolecode\"]) {\r\n            this.props.comboChangeUserRolePolicy(this.state.selectedcombo[\"nuserrolecode\"].value, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const selectedcombo = {\r\n                nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                    \"value\": masterData.UserRole[0].nuserrolecode,\r\n                    \"label\": masterData.UserRole[0].suserrolename\r\n                } : this.state.selectedRecord[\"nuserrolecode\"]\r\n\r\n            }\r\n            this.setState({ selectedcombo: selectedcombo });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const userRole = constructOptionList(this.props.Login.masterData.UserRole || [], \"nuserrolecode\",\r\n                \"suserrolename\", undefined, undefined, undefined);\r\n            const UserRoleList = userRole.get(\"OptionList\");\r\n\r\n\r\n            this.setState({ userRole: UserRoleList });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n    getPasswordPolicyDetail = (passwordPolicy) => {\r\n        return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n            npolicycode: passwordPolicy.npolicycode,\r\n            \"userinfo\": this.props.Login.userInfo\r\n        })\r\n            .then(response => {\r\n                const masterData = response.data;\r\n                sortData(masterData);\r\n                const selectedcombo = {\r\n                    nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                        \"value\": this.state.selectedcombo[\"nuserrolecode\"].value,\r\n                        \"label\": this.state.selectedcombo[\"nuserrolecode\"].label\r\n                    } : this.state.selectedcombo[\"nuserrolecode\"]\r\n                }\r\n                this.setState({\r\n                    userRolePolicyDataData: masterData[\"UserRole\"],\r\n\r\n                    selectedPasswordPolicy: masterData[\"SelectedPasswordPolicy\"],\r\n                    selectedcombo\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    filterColumnData(event) {\r\n        let filterValue = event.target.value;\r\n        if (filterValue === \"\") {\r\n            this.setState({\r\n                passwordPolicyData: this.props.Login.masterData[\"PasswordPolicy\"],//this.props.Login.masterData[\"Users\"],\r\n                userRolePolicyData: this.props.Login.masterData[\"UserRole\"],\r\n\r\n                selectedPasswordPolicy: this.props.Login.masterData[\"SelectedPasswordPolicy\"],\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (filterValue.length > 2) {\r\n                const searchedData = searchData(filterValue, this.props.Login.masterData[\"PasswordPolicy\"], \"spolicyname\");\r\n\r\n                if (searchedData && searchedData.length > 0) {\r\n                    return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n                        nmahcode: searchedData[0].nmahcode,\r\n                        userinfo: this.props.Login.userInfo\r\n                    })\r\n                        .then(response => {\r\n\r\n                            this.setState({\r\n                                passwordPolicyData: searchedData, userRolePolicyData: response.data[\"UserRole\"],\r\n\r\n                                selectedPasswordPolicy: response.data[\"SelectedPasswordPolicy\"]\r\n\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    this.setState({\r\n\r\n                        passwordPolicyData: [], userRolePolicyData: [], selectedPasswordPolicy: {}\r\n\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED ||\r\n            this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            let message = \"IDS_SELECTDRAFTRECORDTODELETE\";\r\n            // if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            //     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\r\n            // }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n            //toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\",\r\n                primaryKeyField: \"npolicycode\",\r\n                primaryKeyValue: this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                fetchUrl: \"passwordpolicy/getPasswordPolicy\",\r\n                fecthInputObject: { userInfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"passwordpolicy\": this.props.Login.masterData.SelectedPasswordPolicy\r\n                },\r\n                operation\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"PasswordPolicy\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    getCopyUseRolePolicy(screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) {\r\n\r\n        this.setState({\r\n\r\n            operation, screenName,\r\n            isOpen: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getPasswwordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue) {\r\n\r\n        if (operation === \"create\" || (operation === \"update\" && this.state.selectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED)) {       //ntransactionstatus = 7 -- User Retired           \r\n\r\n\r\n            let userLogged = this.state.userLogged;\r\n\r\n            let selectedRecord = {};\r\n\r\n            let urlArray = [];\r\n\r\n            if (operation === \"update\") {\r\n                const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo });\r\n\r\n                urlArray = [policyById];\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n\r\n\r\n\r\n                        selectedRecord = response[0].data;\r\n\r\n                        this.setState({\r\n                            operation, screenName, selectedRecord, userLogged,\r\n                            isOpen: true\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    operation, screenName, selectedRecord, isOpen: true\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: this.state.selectedPasswordPolicy.stransstatus }));\r\n        }\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                //selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: null,\r\n                // operation: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n\r\n            const selectedcombo = this.state.selectedcombo || {};\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedcombo[fieldName] = comboData;\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedcombo, selectedRecord });\r\n            // if (fieldName === \"nuserrolecode\") {\r\n            //   this.searchRef.current.value = \"\";\r\n            //   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    onComboChangeUserRole = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedcomboUserRole = this.state.selectedcomboUserRole || {}; //this.state.selectedRecord || {};\r\n            selectedcomboUserRole[fieldName] = comboData;\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedcomboUserRole, selectedRecord });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        // if (value === 0 || value === 0.0) {\r\n        //     selectedRecord[name] = '';\r\n        //     this.setState({ selectedRecord });\r\n        // } else {\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n        //}\r\n    }\r\n    onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.DRAFT) {\r\n            const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"passwordpolicy\"] = { \"nuserrolecode\": this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"] ? this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value : \"\" };\r\n            inputData[\"passwordpolicy\"] = this.props.Login.masterData.SelectedPasswordPolicy;\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"UserRolePolicy\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n            //toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n    }\r\n    validation = () => {\r\n        let ntotal = 0;\r\n        let nminpswlen = 0;\r\n        let nmaxpaslen = 0;\r\n        let nexpairyDays = 0;\r\n        let nremainderdays = 0;\r\n        ntotal = parseInt(this.state.selectedRecord.nminnoofnumberchar) + parseInt(this.state.selectedRecord.nminnooflowerchar) + parseInt(this.state.selectedRecord.nminnoofupperchar) + parseInt(this.state.selectedRecord.nminnoofspecialchar);\r\n        nminpswlen = parseInt(this.state.selectedRecord.nminpasslength);\r\n        nmaxpaslen = parseInt(this.state.selectedRecord.nmaxpasslength);\r\n        nexpairyDays = parseInt(this.state.selectedRecord.nexpirypolicy);\r\n        nremainderdays = parseInt(this.state.selectedRecord.nremainderdays);\r\n        if (ntotal === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTTOTALPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTMINPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen < ntotal) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MINPSWCANTLESSTOTALLEN\" }));\r\n            return false;\r\n        }\r\n        if (nmaxpaslen < nminpswlen) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MAXPSWCANTLESSMINPSWLEN\" }));\r\n            return false;\r\n        }\r\n        if (nremainderdays > nexpairyDays) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\" }));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        if (this.props.Login.screenName === \"IDS_PASSWORDPOLICY\") {\r\n\r\n            if (this.validation()) {\r\n                inputParam = this.savePasswordPolicy(saveType, formRef);\r\n\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                if (\r\n                    showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_USERROLEPOLICYS\") {\r\n            const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n            inputParam = this.copyUserRolePolicy(saveType, formRef);\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, copyId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    savePasswordPolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            inputData[\"passwordpolicy\"] = this.state.selectedRecord;\r\n            inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] !== null ? this.state.selectedRecord[\"scomments\"] : \"\";\r\n\r\n            // this.policyFieldList.map(item => {\r\n            //     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\r\n            // })\r\n\r\n            // inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"passwordpolicy\"] = { \"nideallocktime\": 6000 };//this.props.Login.userInfo.nmastersitecode };\r\n\r\n            this.policyFieldList.map(item => {\r\n                return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item]\r\n            });\r\n            inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n\r\n        }\r\n        inputData[\"passwordpolicy\"][\"nexpirypolicy\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nexpirypolicy\"] : 0;\r\n        inputData[\"passwordpolicy\"][\"nremainderdays\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nremainderdays\"] : 0;\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicy\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    copyUserRolePolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"userrole\"] = {};\r\n        let postParam = undefined;\r\n\r\n        let userroleArray = []\r\n        userroleArray = this.state.selectedcomboUserRole.nuserrolecode.map(item => {\r\n            let userrolelist = {}\r\n            userrolelist[\"nuserrolecode\"] = item.value;\r\n            userrolelist[\"suserrolename\"] = item.label;\r\n            userrolelist[\"sdescription\"] = \"a\";\r\n            userrolelist[\"nsitecode\"] = -1;\r\n            //userroleArray.push(userrolelist);\r\n            return userrolelist;\r\n        });\r\n        inputData['userrole'] = userroleArray;\r\n        inputData['npolicycode'] = this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;\r\n        inputData['spolicyname'] = this.state.selectedRecord.spolicyname;\r\n        postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicyToSelectedRole\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedcombo[\"nuserrolecode\"].value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nuserrolecode: this.state.selectedcombo[\"nuserrolecode\"].value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                },\r\n                classUrl: \"passwordpolicy\",\r\n                methodUrl: \"PasswordPolicyByUserRoleCode\"\r\n            }\r\n            this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode, this.props.Login.masterData, inputParam.inputData.userinfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_USERROLENOTAVAILABLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getPasswordPolicyDetail, getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n})(injectIntl(PasswordPolicy));\r\n\r\n"]},"metadata":{},"sourceType":"module"}