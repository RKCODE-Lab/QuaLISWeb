{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\submitter\\\\submitter\\\\Submitter.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\nimport { Affix } from 'rsuite';\nimport { getControlMap, constructOptionList, showEsign, validateEmail, validatePhoneNumber } from '../../../components/CommonScript';\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getSubmitterDetail, getSubmitterCombo, getInstitution, getInstitutionSite, changeInstitutionCategoryFilterSubmit } from \"../../../actions\";\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\nimport ListMaster from \"../../../components/list-master/list-master.component\";\nimport ReactTooltip from 'react-tooltip';\nimport SubmitterCategoryFilter from \"./SubmitterCategoryFilter\";\nimport { ReadOnlyText } from '../../../components/App.styles';\nimport { ContentPanel } from '../../product/product.styled';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt, faUserTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\nimport AddSubmitter from \"./AddSubmitter\";\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../../audittrail/Esign\";\nimport { transactionStatus } from \"../../../components/Enumeration\";\nimport { toast } from \"react-toastify\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Submitter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let screenName = this.props.Login.screenName;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else if (this.props.Login.operation === \"update\") {\n          loadEsign = false;\n          openModal = true;\n          screenName = \"IDS_SUBMITTER\";\n        } else {\n          loadEsign = false;\n          openModal = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n      let postParam = undefined;\n\n      if (isValidateEmail) {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let dataState = undefined;\n\n        if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\n          if (this.props.Login.operation === \"update\") {\n            // edit\n            const selectedRecord = this.state.selectedRecord;\n            postParam = {\n              inputListName: \"Submitter\",\n              selectedObject: \"selectedSubmitter\",\n              primaryKeyField: \"ssubmittercode\"\n            };\n            inputData[\"submitter\"] = {};\n            this.fieldSubmitterList.map(item => {\n              return inputData[\"submitter\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n            });\n            inputData[\"submitter\"][\"ssubmittercode\"] = selectedRecord[\"ssubmittercode\"] ? selectedRecord[\"ssubmittercode\"] : \"\";\n            inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\n            inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\n            inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\n            inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\n            inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\n            dataState = this.state.dataState;\n          } else {\n            //add               \n            inputData[\"submitter\"] = {\n              \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n            };\n            this.fieldSubmitterList.map(item => {\n              return inputData[\"submitter\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n            });\n            inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\n            inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\n            inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\n            inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\n            inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\n          }\n\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"Submitter\",\n            displayName: this.props.Login.inputParam.displayName,\n            inputData: inputData,\n            selectedId: this.state.selectedRecord[\"ssubmittercode\"],\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            dataState,\n            searchRef: this.searchRef,\n            postParam: postParam\n          }; //this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n          //this.setState({ FilterInstitution: { \"label\":  this.state.selectedRecord.ninstitutioncode.label, \"value\":  this.state.selectedRecord.ninstitutioncode.value } });\n          //this.setState({ FilterInstitutionSite: { \"label\":  this.state.selectedRecord.ninstitutionsitecode.label, \"value\":  this.state.selectedRecord.ninstitutionsitecode.value } });\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                screenName: this.props.intl.formatMessage({\n                  id: this.props.Login.inputParam.displayName\n                }),\n                operation: this.props.Login.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteSubmitter(\"delete\", deleteId));\n    };\n\n    this.DeleteSubmitter = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"submitter\"] = this.props.Login.masterData.selectedSubmitter;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"submitter\",\n        selectedObject: \"selectedSubmitter\",\n        primaryKeyField: \"ssubmittercode\",\n        primaryKeyValue: this.props.Login.masterData.selectedSubmitter.ssubmittercode,\n        fetchUrl: \"submitter/getSubmitter\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Submitter\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Submitter\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.retireSubmitter = (methodUrl, selectedSubmitter, operation, ncontrolCode) => {\n      if (selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\n        let message = \"\";\n\n        if (operation === \"retire\") {\n          message = \"IDS_SUBMITTERALREADYRETIRED\";\n        }\n\n        toast.warn(this.props.intl.formatMessage({\n          id: message\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"Submitter\",\n          selectedObject: \"selectedSubmitter\",\n          primaryKeyField: \"ssubmittercode\",\n          primaryKeyValue: selectedSubmitter.ssubmittercode,\n          fetchUrl: \"submitter/getSubmitter\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"submitter\": selectedSubmitter\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_SUBMITTER\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\n      } else {\n        if (event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeFilter = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || [];\n\n      if (comboData) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\n            let inputParam = {};\n            inputParam = {\n              nflag: 2,\n              ninstitutioncatcode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultInstitutionCategory: comboData.item\n            };\n            this.props.getInstitution(inputParam); //this.setState({nfilterInstitutionCategory:comboData});\n          }\n        } else if (fieldName === \"ninstitutioncode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitution.ninstitutioncode) {\n            let inputParam = {};\n            inputParam = {\n              nflag: 3,\n              ninstitutioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultInstitution: comboData.item\n            };\n            this.props.getInstitutionSite(inputParam);\n          }\n        } else if (fieldName === \"ninstitutionsitecode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultInstitutionSite: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.props.Login.masterData.defaultInstitutionCategory) {\n        if (this.props.Login.masterData.defaultInstitution) {\n          if (this.props.Login.masterData.defaultInstitutionSite) {\n            let inputParam = {\n              inputData: {\n                ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\n                ninstitutioncode: this.props.Login.masterData.defaultInstitution.ninstitutioncode,\n                ninstitutionsitecode: this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode,\n                userinfo: this.props.Login.userInfo\n              },\n              classUrl: \"submitter\",\n              methodUrl: \"SubmitterByFilter\"\n            };\n            this.props.changeInstitutionCategoryFilterSubmit(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.defaultInstitutionCategory, this.props.Login.masterData.FilterInstitution, this.props.Login.masterData.defaultInstitution, this.props.Login.masterData.FilterInstitutionSite, this.props.Login.masterData.defaultInstitutionSite);\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_INSTITUTIONSITENOTAVAILABLE\"\n            }));\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_INSTITUTIONNOTAVAILABLE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"ninstitutioncatcode\": this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode,\n          \"ninstitutioncode\": this.props.Login.masterData.selectedInstitution.ninstitutioncode,\n          \"ninstitutionsitecode\": this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"SubmitterByFilter\",\n        displayName: this.props.intl.formatMessage({\n          id: \"IDS_SUBMITTER\"\n        })\n      };\n      this.props.changeInstitutionCategoryFilterSubmit(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.selectedInstitutionCategory, this.props.Login.masterData.FilterInstitution, this.props.Login.masterData.selectedInstitution, this.props.Login.masterData.FilterInstitutionSite, this.props.Login.masterData.selectedInstitutionSite);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData != null) {\n        if (fieldName === \"ninstitutiondeptcode\") {\n          selectedRecord[\"ninstitutiondeptcode\"] = comboData;\n          selectedRecord[\"sinstitutiondeptcode\"] = comboData.item[\"sinstitutiondeptcode\"];\n          this.setState({\n            selectedRecord\n          });\n        }\n      }\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchRef = React.createRef();\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_SUBMITTER\",\n        dataField: \"ssubmittername\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SHORTNAME\",\n        dataField: \"sshortname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONDEPARTMENT\",\n        dataField: \"ninstitutiondeptcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MOBILENO\",\n        dataField: \"smobileno\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_EMAIL\",\n        dataField: \"semail\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      });\n    }\n\n    this.fieldSubmitterList = [\"ninstitutioncatcode\", \"ninstitutioncode\", \"ninstitutionsitecode\", \"ninstitutiondeptcode\", \"ssubmittername\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\", \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"ntransactionstatus\"];\n    let submitterStatusCSS = \"outline-secondary\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.ACTIVE) {\n      submitterStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\n      submitterStatusCSS = \"outline-danger\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.DEACTIVE) {\n      activeIconCSS = \"\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddSubmitter\") && this.state.controlMap.get(\"AddSubmitter\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditSubmitter\") && this.state.controlMap.get(\"EditSubmitter\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteSubmitter\") && this.state.controlMap.get(\"DeleteSubmitter\").ncontrolcode;\n    const retireId = this.state.controlMap.has(\"RetireSubmitter\") && this.state.controlMap.get(\"RetireSubmitter\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Submitter\",\n      selectedObject: \"selectedSubmitter\",\n      primaryKeyField: \"ssubmittercode\",\n      fetchUrl: \"submitter/getSelectedSubmitterDetail\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sinstitutioncatname\", \"sinstitutionname\", \"sinstitutionsitename\", \"ssubmittername\", \"ssubmitterid\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\", \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"stransdisplaystatus\"]\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Submitter\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Submitter,\n      getMasterDetail: Submitter => this.props.getSubmitterDetail(Submitter, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedSubmitter,\n      primaryKeyField: \"ssubmittercode\",\n      mainField: \"ssubmittername\",\n      firstField: \"ssubmitterid\",\n      secondField: \"stransdisplaystatus\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getSubmitterCombo(\"IDS_SUBMITTER\", \"create\", \"ssubmittercode\", // this.state.selectedRecord,\n      this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_SUBMITTERCATEGORYFILTER\": /*#__PURE__*/React.createElement(SubmitterCategoryFilter, {\n          FilterInstitutionCategory: this.state.FilterInstitutionCategory || [],\n          nfilterInstitutionCategory: this.props.Login.masterData.defaultInstitutionCategory || {},\n          FilterInstitution: this.state.FilterInstitution || [],\n          nfilterInstitution: this.props.Login.masterData.defaultInstitution || {},\n          FilterInstitutionSite: this.state.FilterInstitutionSite || [],\n          nfilterInstitutionSite: this.props.Login.masterData.defaultInstitutionSite || {},\n          selectedRecord: this.state.selectedRecord || {},\n          onFilterComboChange: this.onComboChangeFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 41\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedSubmitter ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.selectedSubmitter.ssubmittername), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${submitterStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 57\n      }\n    }, activeIconCSS !== \"\" ? /*#__PURE__*/React.createElement(\"i\", {\n      class: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 86\n      }\n    }) : \"\", this.props.Login.masterData.selectedSubmitter.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstitution\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getSubmitterCombo(\"IDS_SUBMITTER\", \"update\", \"ssubmittercode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstitution\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"retireSubmitter\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(retireId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.retireSubmitter(\"Submitter\", this.props.Login.masterData.selectedSubmitter, \"retire\", retireId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBMITTER\",\n      messasge: \"Submitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.ssubmittername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SHORTNAME\",\n      messasge: \"Short Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sshortname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_WARDNAME\",\n      messasge: \"Ward Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.swardname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TELEPHONE\",\n      messasge: \"Telephone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.stelephone))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOBILENO\",\n      messasge: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FAX\",\n      messasge: \"Fax No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sfaxno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAIL\",\n      messasge: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIALIZATION\",\n      messasge: \"Specialization\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sspecialization))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REPORTINGREQUIREMENT\",\n      messasge: \"Report Requriement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sreportrequirement))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAMPLETRANSPORT\",\n      messasge: \"Sample Transport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.ssampletransport))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISPLAYSTATUS\",\n      messasge: \"Display Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedSubmitter.stransdisplaystatus)))))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_SUBMITTER\" ? /*#__PURE__*/React.createElement(AddSubmitter, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstitutionDepartment: this.props.Login.InstitutionDepartment,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n    breadCrumbData.push({\n      \"label\": \"IDS_INSTITUTIONCATEGORY\",\n      \"value\": this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.sinstitutioncatname : \"-\"\n    }, {\n      \"label\": \"IDS_INSTITUTION\",\n      \"value\": this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.sinstitutionname : \"-\"\n    }, {\n      \"label\": \"IDS_INSTITUTIONSITE\",\n      \"value\": this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.sinstitutionsitename : \"-\"\n    });\n    return breadCrumbData;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(previousProps) {\n    let selectedRecord = this.state.selectedRecord || {};\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      this.setState({\n        selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          dataState,\n          selectedRecord: this.props.Login.selectedRecord\n        });\n      }\n\n      let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\n      let FilterInstitution = this.state.FilterInstitution || {};\n      let FilterInstitutionSite = this.state.FilterInstitutionSite || {}; // let nfilterInstitutionCategory =this.state.nfilterInstitutionCategory ||{};\n      // let nfilterInstitution =this.state.nfilterInstitution || {};\n      // let nfilterInstitutionSite = this.state.nfilterInstitutionSite ||{};\n\n      if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\n        const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\n        FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\"); // if(FilterInstitutionCategory && FilterInstitutionCategory.length >=0){\n        //     // const FTC =this.props.Login.masterData.selectedInstitutionCategory;\n        //     // nfilterInstitutionCategory = FTC;\n        //     nfilterInstitutionCategory = FilterInstitutionCategory[0];\n        // }       \n      }\n\n      if (this.props.Login.masterData.FilterInstitution !== previousProps.Login.masterData.FilterInstitution) {\n        const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitution || [], \"ninstitutioncode\", \"sinstitutionname\", 'ninstitutioncode', 'descending', false);\n        FilterInstitution = InstitutionMap.get(\"OptionList\"); // if(FilterInstitution && FilterInstitution.length >=0){\n        //     nfilterInstitution = FilterInstitution[0];\n        // }  \n      }\n\n      if (this.props.Login.masterData.FilterInstitutionSite !== previousProps.Login.masterData.FilterInstitutionSite) {\n        const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitutionSite || [], \"ninstitutionsitecode\", \"sinstitutionsitename\", 'ninstitutionsitecode', 'descending', false);\n        FilterInstitutionSite = InstitutionMap.get(\"OptionList\"); // if(FilterInstitutionSite && FilterInstitutionSite.length>=0){\n        //     nfilterInstitutionSite =FilterInstitutionSite[0] ;\n        // }   \n      } //this.setState({ FilterInstitutionCategory,nfilterInstitutionCategory,FilterInstitution,nfilterInstitution,FilterInstitutionSite,nfilterInstitutionSite});\n\n\n      this.setState({\n        FilterInstitutionCategory,\n        FilterInstitution,\n        FilterInstitutionSite\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getSubmitterDetail,\n  getSubmitterCombo,\n  getInstitution,\n  getInstitutionSite,\n  changeInstitutionCategoryFilterSubmit\n})(injectIntl(Submitter));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/submitter/submitter/Submitter.jsx"],"names":["React","connect","FormattedMessage","injectIntl","BreadcrumbComponent","Affix","getControlMap","constructOptionList","showEsign","validateEmail","validatePhoneNumber","ConfirmMessage","callService","crudMaster","validateEsignCredential","updateStore","getSubmitterDetail","getSubmitterCombo","getInstitution","getInstitutionSite","changeInstitutionCategoryFilterSubmit","Row","Col","Card","FormGroup","FormLabel","Nav","ListMaster","ReactTooltip","SubmitterCategoryFilter","ReadOnlyText","ContentPanel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faUserTimes","DEFAULT_RETURN","AddSubmitter","SlideOutModal","Esign","transactionStatus","toast","mapStateToProps","state","Login","Submitter","Component","constructor","props","openFilter","showFilter","updateInfo","typeName","data","closeFilter","closeModal","loadEsign","openModal","screenName","selectedRecord","operation","selectedId","onSaveClick","saveType","formRef","isValidateEmail","postParam","undefined","inputData","userInfo","dataState","inputListName","selectedObject","primaryKeyField","fieldSubmitterList","map","item","masterData","selectedInstitutionCategory","ninstitutioncatcode","selectedInstitution","ninstitutioncode","selectedInstitutionSite","ninstitutionsitecode","value","ACTIVE","nmastersitecode","inputParam","classUrl","methodUrl","displayName","searchRef","userRoleControlRights","nformcode","ncontrolCode","screenData","intl","formatMessage","id","info","ConfirmDelete","deleteId","confirmMessage","confirm","DeleteSubmitter","selectedSubmitter","primaryKeyValue","ssubmittercode","fetchUrl","fecthInputObject","userinfo","retireSubmitter","ntransactionstatus","RETIRED","message","warn","isClearSearch","validateEsign","sreason","password","onNumericInputOnChange","name","setState","onInputOnChange","event","target","type","checked","DEACTIVE","onComboChangeFilter","comboData","fieldName","defaultInstitutionCategory","nflag","defaultInstitution","defaultInstitutionSite","onFilterSubmit","FilterInstitutionCategory","FilterInstitution","FilterInstitutionSite","reloadData","current","onComboChange","createRef","skip","take","settings","parseInt","controlMap","Map","render","mandatoryFields","push","mandatory","idsName","dataField","mandatoryLabel","controlType","submitterStatusCSS","activeIconCSS","addId","has","get","ncontrolcode","editId","retireId","filterParam","searchFieldList","breadCrumbData","filterData","length","searchedData","filterColumnData","ssubmittername","stransdisplaystatus","indexOf","e","sshortname","swardname","stelephone","smobileno","sfaxno","semail","sspecialization","sreportrequirement","ssampletransport","masterStatus","InstitutionDepartment","generateBreadCrumData","sinstitutioncatname","sinstitutionname","sinstitutionsitename","getDerivedStateFromProps","error","componentDidUpdate","previousProps","Object","values","InstitutionCategoryMap","InstitutionMap"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage,injectIntl } from \"react-intl\";\r\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\r\nimport { Affix } from 'rsuite';\r\nimport { getControlMap,constructOptionList,showEsign,validateEmail, validatePhoneNumber } from '../../../components/CommonScript';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { callService,crudMaster,validateEsignCredential,updateStore,getSubmitterDetail,getSubmitterCombo,getInstitution,getInstitutionSite,changeInstitutionCategoryFilterSubmit } from \"../../../actions\";\r\nimport { Row,Col,Card,FormGroup, FormLabel,Nav} from \"react-bootstrap\";\r\nimport ListMaster from \"../../../components/list-master/list-master.component\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport SubmitterCategoryFilter  from  \"./SubmitterCategoryFilter\";\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\nimport { ContentPanel } from '../../product/product.styled';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt,faUserTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\r\nimport AddSubmitter from \"./AddSubmitter\";\r\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../../audittrail/Esign\"; \r\nimport { transactionStatus } from \"../../../components/Enumeration\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Submitter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchRef = React.createRef();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state ={\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {}, \r\n        }\r\n    }\r\n    render(){\r\n        let mandatoryFields = [];\r\n        if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\r\n          mandatoryFields.push(\r\n            {\r\n              mandatory: true,\r\n              idsName: \"IDS_SUBMITTER\",\r\n              dataField: \"ssubmittername\",\r\n              mandatoryLabel: \"IDS_ENTER\",\r\n              controlType: \"textbox\",\r\n            },\r\n            {\r\n              mandatory: true,\r\n              idsName: \"IDS_SHORTNAME\",\r\n              dataField: \"sshortname\",\r\n              mandatoryLabel: \"IDS_ENTER\",\r\n              controlType: \"textbox\",\r\n            },\r\n            {\r\n                mandatory: true,\r\n                idsName: \"IDS_INSTITUTIONDEPARTMENT\",\r\n                dataField: \"ninstitutiondeptcode\",\r\n                mandatoryLabel: \"IDS_SELECT\",\r\n                controlType: \"selectbox\",\r\n              },\r\n              {\r\n                mandatory: true,\r\n                idsName: \"IDS_MOBILENO\",\r\n                dataField: \"smobileno\",\r\n                mandatoryLabel: \"IDS_ENTER\",\r\n                controlType: \"textbox\",\r\n              },\r\n              {\r\n                mandatory: true,\r\n                idsName: \"IDS_EMAIL\",\r\n                dataField: \"semail\",\r\n                mandatoryLabel: \"IDS_ENTER\",\r\n                controlType: \"textbox\",\r\n              },           \r\n          );          \r\n        }\r\n\r\n        this.fieldSubmitterList = [\"ninstitutioncatcode\",\"ninstitutioncode\",\"ninstitutionsitecode\",\"ninstitutiondeptcode\",\r\n         \"ssubmittername\", \"sshortname\",\"swardname\",\"stelephone\",\"smobileno\",\"sfaxno\",\"semail\",\"sspecialization\",\"sreportrequirement\",\"ssampletransport\",\"ntransactionstatus\"];\r\n\r\n\r\n         let submitterStatusCSS = \"outline-secondary\";\r\n         let activeIconCSS = \"fa fa-check\"\r\n         if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            submitterStatusCSS = \"outline-success\";\r\n         }\r\n         else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\r\n            submitterStatusCSS = \"outline-danger\";\r\n             activeIconCSS = \"\";\r\n         }\r\n         else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.DEACTIVE) {\r\n             activeIconCSS = \"\";\r\n         }\r\n         \r\n        const addId = this.state.controlMap.has(\"AddSubmitter\") && this.state.controlMap.get(\"AddSubmitter\").ncontrolcode;\r\n        const editId =  this.state.controlMap.has(\"EditSubmitter\") && this.state.controlMap.get(\"EditSubmitter\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSubmitter\") && this.state.controlMap.get(\"DeleteSubmitter\").ncontrolcode;\r\n        const retireId = this.state.controlMap.has(\"RetireSubmitter\") && this.state.controlMap.get(\"RetireSubmitter\").ncontrolcode;\r\n         \r\n        const filterParam = {\r\n            inputListName: \"Submitter\", selectedObject: \"selectedSubmitter\", primaryKeyField: \"ssubmittercode\",\r\n            fetchUrl: \"submitter/getSelectedSubmitterDetail\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList : [\"sinstitutioncatname\",\"sinstitutionname\",\"sinstitutionsitename\",\"ssubmittername\",\"ssubmitterid\",\"sshortname\",\"swardname\",\"stelephone\",\"smobileno\",\r\n                              \"sfaxno\",\"semail\",\"sspecialization\",\"sreportrequirement\",\"ssampletransport\",\"stransdisplaystatus\"]\r\n           \r\n        };\r\n\r\n        const breadCrumbData =this.state.filterData || [];\r\n        return(\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                        <ListMaster\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            screenName={\"Submitter\"}\r\n                            masterData={this.props.Login.masterData}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Submitter}\r\n                            getMasterDetail={(Submitter) => this.props.getSubmitterDetail(Submitter, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                            selectedMaster={this.props.Login.masterData.selectedSubmitter}\r\n                            primaryKeyField=\"ssubmittercode\"\r\n                            mainField=\"ssubmittername\"\r\n                            firstField=\"ssubmitterid\"\r\n                            secondField=\"stransdisplaystatus\"\r\n                            isIDSField=\"Yes\"\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            filterParam={filterParam}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            addId={addId}\r\n                            searchRef={this.searchRef}\r\n                            reloadData={this.reloadData}\r\n                            hidePaging={true}\r\n                            openModal={() =>\r\n                                this.props.getSubmitterCombo(\r\n                                \"IDS_SUBMITTER\",\r\n                                \"create\",\r\n                                \"ssubmittercode\",\r\n                                // this.state.selectedRecord,\r\n                                this.props.Login.masterData,\r\n                                this.props.Login.userInfo,\r\n                                addId\r\n                                )\r\n                              }\r\n                            openFilter={this.openFilter}\r\n                            closeFilter={this.closeFilter}\r\n                            onFilterSubmit={this.onFilterSubmit}\r\n                            showFilterIcon={true}\r\n                            showFilter={this.props.Login.showFilter}\r\n                            filterComponent={[\r\n                                {\r\n                                    \"IDS_SUBMITTERCATEGORYFILTER\":\r\n                                        <SubmitterCategoryFilter\r\n                                        FilterInstitutionCategory={this.state.FilterInstitutionCategory || []}\r\n                                        nfilterInstitutionCategory ={this.props.Login.masterData.defaultInstitutionCategory ||{}}\r\n                                        FilterInstitution = {this.state.FilterInstitution || []}\r\n                                        nfilterInstitution ={this.props.Login.masterData.defaultInstitution ||{}}\r\n                                        FilterInstitutionSite = {this.state.FilterInstitutionSite || []}\r\n                                        nfilterInstitutionSite ={this.props.Login.masterData.defaultInstitutionSite ||{}}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onFilterComboChange={this.onComboChangeFilter}\r\n                                        />\r\n                                }\r\n                            ]}\r\n                        />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedSubmitter ?(\r\n                                               <>\r\n                                               <Card.Header>\r\n                                                <ReactTooltip\r\n                                                    place=\"bottom\"\r\n                                                    globalEventOff=\"click\"\r\n                                                    id=\"tooltip_list_wrap\"\r\n                                                />\r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.selectedSubmitter.ssubmittername}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${submitterStatusCSS} btn-sm ml-3`}>\r\n                                                             {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                             {this.props.Login.masterData.selectedSubmitter.stransdisplaystatus}\r\n\r\n                                                            </span>\r\n                                                        </h2>\r\n                                                        <div className=\"d-inline\">\r\n                                                        <Nav.Link\r\n                                                            name=\"editInstitution\"\r\n                                                            data-tip={this.props.intl.formatMessage({id: \"IDS_EDIT\", })}\r\n                                                            data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getSubmitterCombo(\"IDS_SUBMITTER\",\"update\",\"ssubmittercode\",this.props.Login.masterData,this.props.Login.userInfo,editId)}\r\n                                    \r\n                                                        >\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            name=\"deleteInstitution\"\r\n                                                            className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({id: \"IDS_DELETE\",})}\r\n                                                            data-for=\"tooltip_list_wrap\"  hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() =>this.ConfirmDelete(deleteId)}\r\n                                                        >\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link \r\n                                                            name=\"retireSubmitter\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(retireId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.retireSubmitter(\"Submitter\", this.props.Login.masterData.selectedSubmitter,\"retire\", retireId)}\r\n                                                            >\r\n                                                            <FontAwesomeIcon icon={faUserTimes} />\r\n                                                            </Nav.Link>\r\n\r\n                                                        </div>    \r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                               </Card.Header>\r\n                                               <Card.Body>\r\n                                                    <Row>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_SUBMITTER\" messasge=\"Submitter\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.ssubmittername}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_SHORTNAME\" messasge=\"Short Name\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.sshortname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_WARDNAME\" messasge=\"Ward Name\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.swardname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_TELEPHONE\" messasge=\"Telephone\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.stelephone}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_MOBILENO\" messasge=\"Mobile No\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.smobileno}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_FAX\" messasge=\"Fax No\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.sfaxno}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_EMAIL\" messasge=\"Email\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.semail}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_SPECIALIZATION\" messasge=\"Specialization\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.sspecialization}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_REPORTINGREQUIREMENT\" messasge=\"Report Requriement\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.sreportrequirement}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_SAMPLETRANSPORT\" messasge=\"Sample Transport\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.ssampletransport}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_DISPLAYSTATUS\" messasge=\"Display Status\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.stransdisplaystatus}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>                                                      \r\n                                                    </Row>                                                    \r\n                                               </Card.Body>\r\n                                               </>     \r\n                                            ):(\r\n                                             \"\"\r\n                                            )}\r\n                                        </Card>    \r\n                                     </ContentPanel>   \r\n                                </Col>   \r\n                            </Row>\r\n                        </Col>  \r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal && (\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                             this.props.Login.loadEsign ? (\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            ) : this.props.Login.screenName === \"IDS_SUBMITTER\" ? (\r\n                            <AddSubmitter\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                InstitutionDepartment={this.props.Login.InstitutionDepartment}   \r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                \r\n                            />                           \r\n                            )  : (\r\n                            \"\"\r\n                            )\r\n                        }   \r\n                    />\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_INSTITUTIONCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.sinstitutioncatname : \"-\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_INSTITUTION\",\r\n                    \"value\": this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.sinstitutionname : \"-\"\r\n\r\n                },\r\n                {   \r\n                    \"label\": \"IDS_INSTITUTIONSITE\",\r\n                    \"value\": this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.sinstitutionsitename : \"-\"\r\n\r\n                }\r\n            );\r\n      \r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let screenName=this.props.Login.screenName;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n          if (this.props.Login.operation === \"delete\") {\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n          } else if(this.props.Login.operation === \"update\"){\r\n            loadEsign = false;\r\n            openModal = true;\r\n            screenName = \"IDS_SUBMITTER\";\r\n          } else {\r\n            loadEsign = false;\r\n            openModal = false;\r\n          }\r\n        } else {\r\n          openModal = false;\r\n          selectedRecord = {};\r\n        }\r\n    \r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: { openModal, loadEsign, selectedRecord, selectedId: null,screenName },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      };\r\n\r\n      onSaveClick = (saveType, formRef) => {\r\n        const isValidateEmail = this.state.selectedRecord[\"semail\"]? validateEmail(this.state.selectedRecord[\"semail\"]): true;\r\n        let postParam = undefined;\r\n        if(isValidateEmail){\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let dataState = undefined;\r\n            if(this.props.Login.screenName === \"IDS_SUBMITTER\"){\r\n                if (this.props.Login.operation === \"update\") {  // edit\r\n                    const selectedRecord=this.state.selectedRecord;\r\n                        postParam = {\r\n                          inputListName: \"Submitter\",\r\n                          selectedObject: \"selectedSubmitter\",\r\n                          primaryKeyField: \"ssubmittercode\",\r\n                        };\r\n                      inputData[\"submitter\"] = {};\r\n        \r\n                      this.fieldSubmitterList.map(item => {\r\n                          return inputData[\"submitter\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                     })\r\n                     inputData[\"submitter\"][\"ssubmittercode\"] =selectedRecord[\"ssubmittercode\"] ? selectedRecord[\"ssubmittercode\"] :\"\" ;\r\n                     inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\r\n                     inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\r\n                     inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\r\n                     inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\r\n                     inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\r\n    \r\n                     dataState = this.state.dataState;\r\n                }else {\r\n                      //add               \r\n                      inputData[\"submitter\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n        \r\n        \r\n                      this.fieldSubmitterList.map(item => {\r\n                          return inputData[\"submitter\"][item] = this.state.selectedRecord[item]!==undefined ? this.state.selectedRecord[item]:\"\";\r\n                      })\r\n                      inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\r\n                      inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\r\n                      inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\r\n                      inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\r\n                      inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\r\n    \r\n    \r\n                }   \r\n           \r\n                const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Submitter\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"ssubmittercode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                searchRef: this.searchRef,\r\n                postParam:postParam\r\n                }\r\n                //this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n                //this.setState({ FilterInstitution: { \"label\":  this.state.selectedRecord.ninstitutioncode.label, \"value\":  this.state.selectedRecord.ninstitutioncode.value } });\r\n                //this.setState({ FilterInstitutionSite: { \"label\":  this.state.selectedRecord.ninstitutionsitecode.label, \"value\":  this.state.selectedRecord.ninstitutionsitecode.value } });\r\n    \r\n    \r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                              loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                              openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                              operation: this.props.Login.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n        }else{\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n        }                \r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteSubmitter(\"delete\",deleteId));\r\n    }\r\n\r\n    DeleteSubmitter= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"submitter\"] = this.props.Login.masterData.selectedSubmitter;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"submitter\", selectedObject: \"selectedSubmitter\",\r\n            primaryKeyField: \"ssubmittercode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedSubmitter.ssubmittercode,\r\n            fetchUrl: \"submitter/getSubmitter\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Submitter\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Submitter\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error!==\"\"&& props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    retireSubmitter = (methodUrl, selectedSubmitter, operation, ncontrolCode) => {\r\n        if (selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\r\n            let message = \"\";\r\n            if (operation === \"retire\") {\r\n              message = \"IDS_SUBMITTERALREADYRETIRED\";\r\n            }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"Submitter\", selectedObject: \"selectedSubmitter\",\r\n                primaryKeyField: \"ssubmittercode\",\r\n                primaryKeyValue: selectedSubmitter.ssubmittercode,\r\n                fetchUrl: \"submitter/getSubmitter\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"submitter\": selectedSubmitter\r\n                },\r\n                operation,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_SUBMITTER\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onInputOnChange = (event) => {\r\n      const selectedRecord = this.state.selectedRecord || {};\r\n      if (event.target.type === \"checkbox\") {\r\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n      } else {\r\n            if(event.target.name === \"smobileno\" || event.target.name === \"sfaxno\"){\r\n                if(event.target.value !== \"\"){\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                }else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            }else{\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n\r\n          \r\n      }\r\n      this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChangeFilter = (comboData,fieldName) => {\r\n        const selectedRecord =this.state.selectedRecord || [];\r\n        if(comboData){\r\n            if(fieldName===\"ninstitutioncatcode\"){\r\n               if(comboData.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\r\n\r\n                    let inputParam ={};\r\n                    inputParam ={\r\n                        nflag:2,\r\n                        ninstitutioncatcode:comboData.value,\r\n                        userinfo :this.props.Login.userInfo,\r\n                        masterData :this.props.Login.masterData,\r\n                        defaultInstitutionCategory : comboData.item,\r\n                        \r\n                    }\r\n                    this.props.getInstitution(inputParam)\r\n                    //this.setState({nfilterInstitutionCategory:comboData});\r\n\r\n                }  \r\n            }\r\n            else if(fieldName===\"ninstitutioncode\"){\r\n                if(comboData.value !== this.props.Login.masterData.defaultInstitution.ninstitutioncode) {\r\n                    let inputParam ={};\r\n                    inputParam ={\r\n                        nflag:3,\r\n                        ninstitutioncode:comboData.value,\r\n                        userinfo :this.props.Login.userInfo,\r\n                        masterData :this.props.Login.masterData,\r\n                        defaultInstitution: comboData.item\r\n                    }\r\n                    this.props.getInstitutionSite(inputParam)\r\n                }  \r\n             } \r\n             else if(fieldName===\"ninstitutionsitecode\"){\r\n                if(comboData.value !== this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode) {\r\n                     let masterData = { ...this.props.Login.masterData, defaultInstitutionSite: comboData.item }\r\n                     const updateInfo = {\r\n                         typeName: DEFAULT_RETURN,\r\n                         data: { masterData }\r\n                     }\r\n                     this.props.updateStore(updateInfo);\r\n                 }  \r\n             }            \r\n        }     \r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.props.Login.masterData.defaultInstitutionCategory) {\r\n            if(this.props.Login.masterData.defaultInstitution){\r\n                if(this.props.Login.masterData.defaultInstitutionSite){\r\n                    let inputParam = {\r\n                        inputData: {\r\n                            ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\r\n                            ninstitutioncode: this.props.Login.masterData.defaultInstitution.ninstitutioncode,\r\n                            ninstitutionsitecode: this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode,\r\n                            userinfo: this.props.Login.userInfo,\r\n                           \r\n                        },\r\n                        classUrl: \"submitter\",\r\n                        methodUrl: \"SubmitterByFilter\"\r\n                    }\r\n                    this.props.changeInstitutionCategoryFilterSubmit(inputParam,this.props.Login.masterData.FilterInstitutionCategory,this.props.Login.masterData.defaultInstitutionCategory,\r\n                                                            this.props.Login.masterData.FilterInstitution,this.props.Login.masterData.defaultInstitution,\r\n                                                            this.props.Login.masterData.FilterInstitutionSite,this.props.Login.masterData.defaultInstitutionSite);\r\n             \r\n                }else{\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONSITENOTAVAILABLE\" }));\r\n                }\r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONNOTAVAILABLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n      }\r\n\r\n      reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: {\"ninstitutioncatcode\": this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode,\r\n                        \"ninstitutioncode\": this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n                        \"ninstitutionsitecode\": this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode,\r\n                        \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl:\"SubmitterByFilter\",\r\n            displayName:this.props.intl.formatMessage({ id: \"IDS_SUBMITTER\" }),\r\n        };\r\n        this.props.changeInstitutionCategoryFilterSubmit(inputParam,this.props.Login.masterData.FilterInstitutionCategory,this.props.Login.masterData.selectedInstitutionCategory,\r\n            this.props.Login.masterData.FilterInstitution,this.props.Login.masterData.selectedInstitution,\r\n            this.props.Login.masterData.FilterInstitutionSite,this.props.Login.masterData.selectedInstitutionSite);\r\n\r\n    }\r\n\r\n    onComboChange=(comboData,fieldName)=> {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData != null) {\r\n            if(fieldName=== \"ninstitutiondeptcode\"){\r\n                selectedRecord[\"ninstitutiondeptcode\"] = comboData;\r\n                selectedRecord[\"sinstitutiondeptcode\"]= comboData.item[\"sinstitutiondeptcode\"];\r\n                this.setState({ selectedRecord });  \r\n            }          \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord =  this.props.Login.selectedRecord \r\n            this.setState({ selectedRecord});\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({  userRoleControlRights, controlMap, data: this.props.Login.masterData});\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({ data: this.props.Login.masterData, dataState,selectedRecord :this.props.Login.selectedRecord  });\r\n            }\r\n\r\n                \r\n\r\n            let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\r\n            let FilterInstitution = this.state.FilterInstitution || {};\r\n            let FilterInstitutionSite = this.state.FilterInstitutionSite || {};\r\n\r\n            // let nfilterInstitutionCategory =this.state.nfilterInstitutionCategory ||{};\r\n            // let nfilterInstitution =this.state.nfilterInstitution || {};\r\n            // let nfilterInstitutionSite = this.state.nfilterInstitutionSite ||{};\r\n    \r\n            if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\r\n                const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\r\n                FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitutionCategory && FilterInstitutionCategory.length >=0){\r\n                //     // const FTC =this.props.Login.masterData.selectedInstitutionCategory;\r\n                //     // nfilterInstitutionCategory = FTC;\r\n                //     nfilterInstitutionCategory = FilterInstitutionCategory[0];\r\n                // }       \r\n            } \r\n            if (this.props.Login.masterData.FilterInstitution !== previousProps.Login.masterData.FilterInstitution) {\r\n                const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitution || [], \"ninstitutioncode\", \"sinstitutionname\", 'ninstitutioncode', 'descending', false);\r\n                FilterInstitution = InstitutionMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitution && FilterInstitution.length >=0){\r\n                //     nfilterInstitution = FilterInstitution[0];\r\n                // }  \r\n               \r\n            } \r\n            if (this.props.Login.masterData.FilterInstitutionSite !== previousProps.Login.masterData.FilterInstitutionSite) {\r\n                const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitutionSite || [], \"ninstitutionsitecode\", \"sinstitutionsitename\", 'ninstitutionsitecode', 'descending', false);\r\n                FilterInstitutionSite = InstitutionMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitutionSite && FilterInstitutionSite.length>=0){\r\n                //     nfilterInstitutionSite =FilterInstitutionSite[0] ;\r\n                // }   \r\n               \r\n            } \r\n\r\n            //this.setState({ FilterInstitutionCategory,nfilterInstitutionCategory,FilterInstitution,nfilterInstitution,FilterInstitutionSite,nfilterInstitutionSite});\r\n            this.setState({ FilterInstitutionCategory,FilterInstitution,FilterInstitutionSite});\r\n\r\n        }    \r\n        \r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService,crudMaster,validateEsignCredential,updateStore,getSubmitterDetail,getSubmitterCombo,getInstitution,getInstitutionSite,changeInstitutionCategoryFilterSubmit\r\n})(injectIntl(Submitter));\r\n\r\n"]},"metadata":{},"sourceType":"module"}