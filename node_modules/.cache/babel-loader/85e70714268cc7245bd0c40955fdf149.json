{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{constructOptionList,replaceUpdatedObject}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{sortData}from'../components/CommonScript';import{saveAs,encodeBase64}from'@progress/kendo-file-saver';export function getSampleCertTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplecertification/getFilterSampleData\",Map).then(function(response){var regtypeMap=constructOptionList(response.data.RegTypeValue||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,false);var RegTypeValue=regtypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,RegTypeValue:RegTypeValue}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSampleCertRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/samplecertification/getFilterRegData\",Map).then(function(response){var regsubtypeMap=constructOptionList(response.data.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,false);var RegSubTypeValue=regsubtypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({RegSubTypeValue:RegSubTypeValue},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTestResultData(methodParam){return function(dispatch){return rsapi.post(\"/samplecertification/getParameterSampleResults\",{transactiontestcode:methodParam.primaryKeyValue,userinfo:methodParam.userInfo}).then(function(response){var sampleTestResults=methodParam.masterData.sampleTestResults||new Map();sampleTestResults.set(methodParam.primaryKeyValue,Object.values(response.data[\"ParameterSampleResults\"]));var masterData=_objectSpread(_objectSpread({},methodParam.masterData),{},{sampleTestResults:sampleTestResults});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{//...masterData,\nmasterData:masterData,dataState:methodParam.dataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveSample(Sample,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertification/getSampleCertificationById\",{npreregno:parseInt(Sample.npreregno),userinfo:userInfo}).then(function(response){var printHistory=response.data.printHistory;var TransactionSampleResults=response.data.TransactionSampleResults;var TransactionSampleTests=response.data.TransactionSampleTests;var emailSentHistory=response.data.emailSentHistory;masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{printHistory:printHistory,emailSentHistory:emailSentHistory,TransactionSampleResults:TransactionSampleResults,TransactionSampleTests:TransactionSampleTests});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateCertificateAction(inputParam){return function(dispatch){var urlArray=[];var CertificateStatus=rsapi.post(\"/samplecertification/generateCertificationStatus\",{\"registration\":inputParam.registration,\"npreregno\":inputParam.npreregno,\"nversioncode\":inputParam.nversioncode,\"userinfo\":inputParam.userinfo,\"ncontrolcode\":inputParam.ncontrolcode});urlArray=[CertificateStatus];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var SAMPLESTATUS=response[0].data.SAMPLESTATUS;var REPORTSTATUS=response[0].data.REPORTSTATUS;var SampleResponse=response[0].data.SampleResponse;var ReportResponse=response[0].data.ReportResponse;if(SAMPLESTATUS===200){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{SelectedRegistration:response[0].data.SampleResponse.SelectedRegistration,Registration:replaceUpdatedObject([response[0].data.SampleResponse.SelectedRegistration],inputParam.masterData.Registration,'npreregno'),CertificateHistoryView:response[0].data.SampleResponse.CertificateHistoryView,ReportHistory:sortData(response[0].data.SampleResponse.ReportHistory||[])});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined,loadEsign:false,openModal:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false,dataState:undefined}});toast.warn(SampleResponse);}if(REPORTSTATUS===200){document.getElementById(\"download_data\").setAttribute(\"href\",ReportResponse.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(ReportResponse);dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function sentCertificateAction(SendData,operation,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertification/sendCertification\",{npreregno:SendData.npreregno,nregtypecode:SendData.nregtypecode,nregsubtypecode:SendData.nregsubtypecode,userinfo:SendData.userinfo,ncontrolcode:SendData.ncontrolcode}).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{SelectedRegistration:response.data.SelectedRegistration,Registration:replaceUpdatedObject([response.data.SelectedRegistration],masterData.Registration,'npreregno')});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function correctionCertificateAction(CorrectionData,operation,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertification/correctionCertificate\",{npreregno:CorrectionData.npreregno,userinfo:CorrectionData.userinfo,fromDate:CorrectionData.fromDate,toDate:CorrectionData.toDate,nregtypecode:CorrectionData.nregtypecode,nregsubtypecode:CorrectionData.nregsubtypecode,napprovalversioncode:CorrectionData.napprovalversioncode}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function xmlExportAction(inputParam,masterData,inputData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertification/xmlExport\",{npreregno:inputParam.npreregno,userinfo:inputData.userinfo,ncontrolcode:inputParam.ncontrolcode}).then(function(response){// let value = \"\";\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,dataState:undefined}});var dataURI=\"data:\"+response[\"headers\"][\"content-type\"]+\";base64,\"+encodeBase64(response[\"data\"]);saveAs(dataURI,\"XMLFile\");}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getWholeFilterStatus(masterData,inputData,operation,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"samplecertification/getFilterWholeStatus\",{FromDate:inputData.FromDate,ToDate:inputData.ToDate,userinfo:inputData.userinfo,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,nfilterstatus:inputData.nfilterstatus,napprovalversioncode:inputData.napprovalversioncode,approvalVersionValue:inputData.approvalVersionValue}).then(function(response){var SelectedRegistration=response.data.SelectedRegistration?response.data.SelectedRegistration:\"\";var Registration=response.data.Registration?response.data.Registration:\"\";var FilterStatusValue=response.data.FilterStatusValue?response.data.FilterStatusValue:\"\";var RegistrationSubTypeValue=response.data.RegistrationSubTypeValue?response.data.RegistrationSubTypeValue:masterData.RegistrationSubTypeValue;masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{Registration:Registration,SelectedRegistration:SelectedRegistration,FilterStatusValue:FilterStatusValue,RegistrationSubTypeValue:RegistrationSubTypeValue,operation:operation});if(searchRef.current!==null){searchRef.current.value=\"\";masterData['searchedData']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var validateXMLEsignCredential=function validateXMLEsignCredential(inputParam,modalName){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}if(inputParam[\"screenData\"][\"inputParam\"]['methodUrl']==='regenerateCertificate'){dispatch(onClickReportSample(inputParam[\"screenData\"][\"inputParam\"]));}else if(inputParam[\"screenData\"][\"inputParam\"]['operation']==='xml'){dispatch(xmlExportAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"],inputParam[\"screenData\"][\"masterData\"],inputParam[\"inputData\"]));}else if(inputParam[\"screenData\"][\"inputParam\"]['operation']==='generate'){dispatch(generateCertificateAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]));}}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export function getApprovalVersionSampleCertification(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"samplecertification/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),{},{ApprovalVersion:response.data.ApprovalVersion,ApprovalVersionValue:response.data.ApprovalVersionValue},responseData),{},{FromDate:inputParam.inputData.FromDate,ToDate:inputParam.inputData.ToDate}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export function onClickReportSample(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(inputParam.classUrl+\"/\"+inputParam.methodUrl,inputParam.inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignforSampCerGen(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(generateCertificateAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function viewReportForSample(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertification/viewCertificateReport\",inputParam.inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false,loadEsign:false,openModal:false,showReport:true})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function getApprovalVersionSampleCertificate(inputParam) {\n//     return function (dispatch) {\n//         dispatch(initRequest(true));\n//         rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\n//             .then(response => {\n//                 let responseData = { ...response.data }\n//                 responseData = sortData(responseData)\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         masterData: {\n//                             ...inputParam.masterData,\n//                             ...responseData,\n//                             fromDate: inputParam.inputData.dfrom,\n//                             toDate: inputParam.inputData.dto,\n//                         },\n//                         loading: false,\n//                     }\n//                 })\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/SampleCertificationAction.js"],"names":["rsapi","Axios","constructOptionList","replaceUpdatedObject","DEFAULT_RETURN","initRequest","toast","sortData","saveAs","encodeBase64","getSampleCertTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","regtypeMap","data","RegTypeValue","undefined","get","item","type","payload","loading","catch","error","status","message","warn","getSampleCertRegSubTypeChange","regsubtypeMap","RegistrationSubType","RegSubTypeValue","getTestResultData","methodParam","transactiontestcode","primaryKeyValue","userinfo","userInfo","sampleTestResults","set","Object","values","dataState","getActiveSample","Sample","npreregno","parseInt","printHistory","TransactionSampleResults","TransactionSampleTests","emailSentHistory","operation","modalName","generateCertificateAction","inputParam","urlArray","CertificateStatus","registration","nversioncode","ncontrolcode","all","SAMPLESTATUS","REPORTSTATUS","SampleResponse","ReportResponse","SelectedRegistration","Registration","CertificateHistoryView","ReportHistory","loadEsign","openModal","document","getElementById","setAttribute","filepath","click","sentCertificateAction","SendData","nregtypecode","nregsubtypecode","correctionCertificateAction","CorrectionData","fromDate","toDate","napprovalversioncode","xmlExportAction","inputData","dataURI","getWholeFilterStatus","searchRef","FromDate","ToDate","nsampletypecode","nfilterstatus","approvalVersionValue","FilterStatusValue","RegistrationSubTypeValue","current","value","showFilter","validateXMLEsignCredential","methodUrl","toLowerCase","onClickReportSample","getApprovalVersionSampleCertification","responseData","ApprovalVersion","ApprovalVersionValue","classUrl","showConfirmAlert","validateEsignforSampCerGen","viewReportForSample","showReport"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    constructOptionList,\r\n    replaceUpdatedObject\r\n} from '../components/CommonScript'\r\n\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\n\r\nimport {\r\n    initRequest\r\n} from './LoginAction';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    sortData\r\n} from '../components/CommonScript';\r\n\r\nimport {\r\n    saveAs,\r\n    encodeBase64\r\n} from '@progress/kendo-file-saver';\r\n\r\nexport function getSampleCertTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplecertification/getFilterSampleData\", Map)\r\n            .then(response => {\r\n                const regtypeMap = constructOptionList(response.data.RegTypeValue || [], \"nregtypecode\",\r\n                    \"sregtypename\", undefined, undefined, false);\r\n                const RegTypeValue = regtypeMap.get(\"OptionList\");\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: {\r\n                        ...event.item\r\n                    }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        RegTypeValue\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getSampleCertRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/samplecertification/getFilterRegData\", Map)\r\n            .then(response => {\r\n                const regsubtypeMap = constructOptionList(response.data.RegistrationSubType || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", undefined, undefined, false);\r\n                const RegSubTypeValue = regsubtypeMap.get(\"OptionList\");\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    RegSubTypeValue,\r\n                    [labelname]: {\r\n                        ...event.item\r\n                    }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestResultData(methodParam) {\r\n    return function (dispatch) {\r\n        return rsapi.post(\"/samplecertification/getParameterSampleResults\", {\r\n            transactiontestcode: methodParam.primaryKeyValue,\r\n            userinfo: methodParam.userInfo\r\n        })\r\n            .then(response => {\r\n                let sampleTestResults = methodParam.masterData.sampleTestResults||new Map();\r\n                sampleTestResults.set(methodParam.primaryKeyValue,\r\n                    Object.values(response.data[\"ParameterSampleResults\"]));\r\n                const masterData = {\r\n                    ...methodParam.masterData,\r\n                    sampleTestResults,\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        //...masterData,\r\n                        masterData: masterData,\r\n                        dataState: methodParam.dataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getActiveSample(Sample, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertification/getSampleCertificationById\", {\r\n            npreregno: parseInt(Sample.npreregno),\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n                const printHistory = response.data.printHistory;\r\n                const TransactionSampleResults = response.data.TransactionSampleResults\r\n                const TransactionSampleTests = response.data.TransactionSampleTests;\r\n                const emailSentHistory = response.data.emailSentHistory;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    printHistory,\r\n                    emailSentHistory,\r\n                    TransactionSampleResults,\r\n                    TransactionSampleTests\r\n\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        operation: null,\r\n                        modalName: undefined,\r\n                        loading: false,\r\n                        dataState:undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function generateCertificateAction(inputParam) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        const CertificateStatus = rsapi.post(\"/samplecertification/generateCertificationStatus\", {\r\n            \"registration\": inputParam.registration,\r\n            \"npreregno\": inputParam.npreregno,\r\n            \"nversioncode\": inputParam.nversioncode,\r\n            \"userinfo\": inputParam.userinfo,\r\n            \"ncontrolcode\":inputParam.ncontrolcode\r\n        });\r\n        urlArray = [CertificateStatus];\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let SAMPLESTATUS = response[0].data.SAMPLESTATUS\r\n                let REPORTSTATUS = response[0].data.REPORTSTATUS\r\n                let SampleResponse = response[0].data.SampleResponse\r\n                let ReportResponse = response[0].data.ReportResponse\r\n\r\n            \r\n\r\n                if(SAMPLESTATUS === 200){\r\n                    const masterData  = {\r\n                        ...inputParam.masterData,\r\n                        SelectedRegistration: response[0].data.SampleResponse.SelectedRegistration,\r\n                        Registration: replaceUpdatedObject([response[0].data.SampleResponse.SelectedRegistration], inputParam.masterData.Registration, 'npreregno'),\r\n                        CertificateHistoryView: response[0].data.SampleResponse.CertificateHistoryView,\r\n                        ReportHistory:sortData(response[0].data.SampleResponse.ReportHistory||[])\r\n                    };\r\n                    // sortData(masterData);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState: undefined, loadEsign: false, openModal: false } });\r\n                }else{\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false,\r\n                        dataState:undefined } })\r\n                    toast.warn(SampleResponse);\r\n                }\r\n                if(REPORTSTATUS === 200){\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", ReportResponse.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                }else{\r\n                    toast.warn(ReportResponse);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false } })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function sentCertificateAction(SendData, operation, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertification/sendCertification\", {\r\n            npreregno: SendData.npreregno,\r\n            nregtypecode: SendData.nregtypecode,\r\n            nregsubtypecode: SendData.nregsubtypecode,\r\n            userinfo: SendData.userinfo,\r\n            ncontrolcode:SendData.ncontrolcode,\r\n\r\n        })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    SelectedRegistration: response.data.SelectedRegistration,\r\n                    Registration: replaceUpdatedObject([response.data.SelectedRegistration], masterData.Registration, 'npreregno'),\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        operation: null,\r\n                        modalName: undefined,\r\n                        loading: false,\r\n                        dataState:undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function correctionCertificateAction(CorrectionData, operation, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertification/correctionCertificate\", {\r\n            npreregno: CorrectionData.npreregno,\r\n            userinfo: CorrectionData.userinfo,\r\n            fromDate: CorrectionData.fromDate,\r\n            toDate: CorrectionData.toDate,\r\n            nregtypecode: CorrectionData.nregtypecode,\r\n            nregsubtypecode: CorrectionData.nregsubtypecode,\r\n            napprovalversioncode:CorrectionData.napprovalversioncode\r\n\r\n        })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        operation: null,\r\n                        modalName: undefined,\r\n                        loading: false,\r\n                        dataState:undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function xmlExportAction(inputParam, masterData,inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertification/xmlExport\", {\r\n            npreregno: inputParam.npreregno,\r\n            userinfo:  inputData.userinfo,\r\n            ncontrolcode: inputParam.ncontrolcode\r\n        })\r\n            .then(response => {\r\n                // let value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        dataState:undefined\r\n                    }\r\n                })\r\n                const dataURI = \"data:\" + response[\"headers\"][\"content-type\"] + \";base64,\" + encodeBase64(response[\"data\"]);\r\n                saveAs(dataURI, \"XMLFile\");\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getWholeFilterStatus(masterData, inputData, operation, searchRef) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"samplecertification/getFilterWholeStatus\", {\r\n            FromDate: inputData.FromDate,\r\n            ToDate: inputData.ToDate,\r\n            userinfo: inputData.userinfo,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            nfilterstatus: inputData.nfilterstatus,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            approvalVersionValue:inputData.approvalVersionValue\r\n        })\r\n\r\n            .then(response => {\r\n                const SelectedRegistration = response.data.SelectedRegistration ? response.data.SelectedRegistration : \"\";\r\n                const Registration = response.data.Registration ? response.data.Registration : \"\";\r\n                const FilterStatusValue = response.data.FilterStatusValue ? response.data.FilterStatusValue : \"\";\r\n                const RegistrationSubTypeValue = response.data.RegistrationSubTypeValue ? response.data.RegistrationSubTypeValue : masterData.RegistrationSubTypeValue;\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    Registration,\r\n                    SelectedRegistration,\r\n                    FilterStatusValue,\r\n                    RegistrationSubTypeValue,\r\n                    operation,\r\n                };\r\n                if (searchRef.current !== null) {\r\n                    searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        dataState:undefined\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const validateXMLEsignCredential = (inputParam, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    const methodUrl = \"\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];                          \r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    if(inputParam[\"screenData\"][\"inputParam\"]['methodUrl'] === 'regenerateCertificate')\r\n                    {\r\n                        dispatch(onClickReportSample(inputParam[\"screenData\"][\"inputParam\"]));\r\n                    }\r\n                    else if(inputParam[\"screenData\"][\"inputParam\"]['operation'] === 'xml'){\r\n                        dispatch(xmlExportAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"], inputParam[\"screenData\"][\"masterData\"], inputParam[\"inputData\"]))\r\n                    }\r\n                    else if(inputParam[\"screenData\"][\"inputParam\"]['operation'] === 'generate'){\r\n                        dispatch(generateCertificateAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]))\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n};\r\n\r\nexport function getApprovalVersionSampleCertification(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"samplecertification/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ApprovalVersion:response.data.ApprovalVersion,\r\n                            ApprovalVersionValue: response.data.ApprovalVersionValue,\r\n                            ...responseData,\r\n                            FromDate: inputParam.inputData.FromDate,\r\n                            ToDate: inputParam.inputData.ToDate,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n};\r\n\r\nexport function onClickReportSample(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(inputParam.classUrl + \"/\" + inputParam.methodUrl,inputParam.inputData)\r\n            .then(response => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, loadEsign: false, openModal: false ,showConfirmAlert:false} })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function validateEsignforSampCerGen(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    const methodUrl = \"\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                        dispatch(generateCertificateAction(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function viewReportForSample(inputParam){\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertification/viewCertificateReport\",inputParam.inputData)\r\n          \r\n            .then(response => {\r\n                 dispatch({ type: DEFAULT_RETURN, \r\n                    payload: {\r\n                      ...response.data,\r\n                        loading: false, \r\n                        loadEsign: false, \r\n                        openModal: false ,\r\n                        showReport:true\r\n                    } \r\n                })\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export function getApprovalVersionSampleCertificate(inputParam) {\r\n//     return function (dispatch) {\r\n//         dispatch(initRequest(true));\r\n//         rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\r\n//             .then(response => {\r\n//                 let responseData = { ...response.data }\r\n//                 responseData = sortData(responseData)\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         masterData: {\r\n//                             ...inputParam.masterData,\r\n//                             ...responseData,\r\n//                             fromDate: inputParam.inputData.dfrom,\r\n//                             toDate: inputParam.inputData.dto,\r\n//                         },\r\n//                         loading: false,\r\n//                     }\r\n//                 })\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}