{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryAdhocParameter.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nclass ResultEntryAdhocParameter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputOnChange = (event, name) => {\n      const selectedRecordAdhocParameter = this.state.selectedRecordAdhocParameter || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecordAdhocParameter[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecordAdhocParameter[event.target.name] = event.target.value;\n      }\n\n      this.props.onAdhocParameterInputChange(event, name);\n      this.setState({\n        selectedRecordAdhocParameter\n      });\n    };\n\n    this.onComboChange = (comboData, comboName) => {\n      const selectedRecordAdhocParameter = this.state.selectedRecordAdhocParameter || [];\n\n      if (comboData) {\n        selectedRecordAdhocParameter[comboName] = comboData;\n      } else {\n        selectedRecordAdhocParameter[comboName] = [];\n      }\n\n      this.props.onAdhocParameterComboChange(comboData, comboName);\n      this.setState({\n        selectedRecordAdhocParameter\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n      name: \"ntestparametercode\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ADHOCPARAMETER\"\n      }),\n      options: this.props.adhocParamter || [],\n      optionId: \"value\",\n      optionValue: \"label\",\n      value: this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nparamtercode\"] !== undefined ? this.state.selectedRecordAdhocParameter[\"nparamtercode\"] || [] : this.props.selectedRecordAdhocParameter && this.props.selectedRecordAdhocParameter[\"nparamtercode\"] ? this.props.selectedRecordAdhocParameter[\"nparamtercode\"] || [] : [],\n      isMandatory: true,\n      isClearable: true,\n      disableSearch: false,\n      disabled: false,\n      closeMenuOnSelect: false,\n      alphabeticalSort: true,\n      allItemSelectedLabel: this.props.intl.formatMessage({\n        id: \"IDS_ALLITEMSAREMSELECTED\"\n      }),\n      noOptionsLabel: this.props.intl.formatMessage({\n        id: \"IDS_NOOPTION\"\n      }),\n      searchLabel: this.props.intl.formatMessage({\n        id: \"IDS_SEARCH\"\n      }),\n      selectAllLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTALL\"\n      }),\n      onChange: event => this.onComboChange(event, \"nparamtercode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_VISIBLETESTINTESTGROUP\"\n      }),\n      type: \"switch\",\n      name: \"nvisibleadhocparameter\",\n      onChange: event => this.onInputOnChange(event, \"nvisibleadhocparameter\"),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_VISIBLETESTINTESTGROUP\"\n      }),\n      defaultValue: this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] !== undefined ? this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false : this.props.selectedRecordAdhocParameter && this.props.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false,\n      isMandatory: false,\n      required: false,\n      checked: this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] !== undefined ? this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false : this.props.selectedRecordAdhocParameter && this.props.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.selectedRecordAdhocParameter !== previousProps.selectedRecordAdhocParameter) {\n      this.setState({\n        selectedRecordAdhocParameter: this.props.selectedRecordAdhocParameter\n      });\n    }\n  }\n\n}\n\nexport default injectIntl(ResultEntryAdhocParameter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryAdhocParameter.jsx"],"names":["React","Row","Col","injectIntl","FormMultiSelect","CustomSwitch","transactionStatus","ResultEntryAdhocParameter","Component","constructor","props","onInputOnChange","event","name","selectedRecordAdhocParameter","state","target","type","checked","YES","NO","value","onAdhocParameterInputChange","setState","onComboChange","comboData","comboName","onAdhocParameterComboChange","render","intl","formatMessage","id","adhocParamter","undefined","componentDidUpdate","previousProps","previousState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\n\r\nclass ResultEntryAdhocParameter extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={}\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n             <Row>\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                    name={\"ntestparametercode\"}\r\n                    label={ this.props.intl.formatMessage({ id:\"IDS_ADHOCPARAMETER\" })}                              \r\n                    options={ this.props.adhocParamter|| []}\r\n                    optionId=\"value\"\r\n                    optionValue=\"label\"\r\n                            value={this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nparamtercode\"] !== undefined ?\r\n                                this.state.selectedRecordAdhocParameter[\"nparamtercode\"] || [] : this.props.selectedRecordAdhocParameter &&\r\n                                    this.props.selectedRecordAdhocParameter[\"nparamtercode\"] ? this.props.selectedRecordAdhocParameter[\"nparamtercode\"] || [] : []}\r\n                    isMandatory={true}                                               \r\n                    isClearable={true}\r\n                    disableSearch={false}                                \r\n                    disabled={false}\r\n                    closeMenuOnSelect={false}\r\n                    alphabeticalSort={true}\r\n                    allItemSelectedLabel={this.props.intl.formatMessage({ id:\"IDS_ALLITEMSAREMSELECTED\" })}\r\n                    noOptionsLabel={this.props.intl.formatMessage({ id:\"IDS_NOOPTION\" })}\r\n                    searchLabel={this.props.intl.formatMessage({ id:\"IDS_SEARCH\" })}\r\n                    selectAllLabel={this.props.intl.formatMessage({ id:\"IDS_SELECTALL\" })}\r\n                    onChange = {(event)=> this.onComboChange(event, \"nparamtercode\")}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={this.props.intl.formatMessage({ id: \"IDS_VISIBLETESTINTESTGROUP\" })}\r\n                    type=\"switch\"\r\n                    name={\"nvisibleadhocparameter\"}\r\n                    onChange={(event) => this.onInputOnChange(event,\"nvisibleadhocparameter\")}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_VISIBLETESTINTESTGROUP\" })}\r\n                            defaultValue={this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] !==undefined?\r\n                            this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false :\r\n                            this.props.selectedRecordAdhocParameter && this.props.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"]=== transactionStatus.YES ? true : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                            checked={this.state.selectedRecordAdhocParameter && this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] !==undefined?\r\n                                this.state.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"] === transactionStatus.YES ? true : false :\r\n                                this.props.selectedRecordAdhocParameter && this.props.selectedRecordAdhocParameter[\"nvisibleadhocparameter\"]=== transactionStatus.YES ? true : false}\r\n                />\r\n            </Col>\r\n              \r\n        </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n    componentDidUpdate(previousProps,previousState ) { \r\n        if(this.props.selectedRecordAdhocParameter!==previousProps.selectedRecordAdhocParameter ){ \r\n            this.setState({ selectedRecordAdhocParameter:this.props.selectedRecordAdhocParameter });\r\n        } \r\n    }\r\n\r\n    onInputOnChange = (event,name) => {\r\n        const selectedRecordAdhocParameter = this.state.selectedRecordAdhocParameter || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecordAdhocParameter[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecordAdhocParameter[event.target.name] = event.target.value;\r\n        }\r\n        this.props.onAdhocParameterInputChange(event,name);\r\n        this.setState({ selectedRecordAdhocParameter });\r\n    }\r\n\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecordAdhocParameter = this.state.selectedRecordAdhocParameter || [];\r\n        if (comboData) { \r\n            selectedRecordAdhocParameter[comboName] = comboData; \r\n        } else {\r\n            selectedRecordAdhocParameter[comboName] = [] \r\n        }\r\n        this.props.onAdhocParameterComboChange(comboData, comboName);\r\n        this.setState({ selectedRecordAdhocParameter });\r\n    }\r\n\r\n}\r\n\r\nexport default (injectIntl(ResultEntryAdhocParameter));\r\n"]},"metadata":{},"sourceType":"module"}