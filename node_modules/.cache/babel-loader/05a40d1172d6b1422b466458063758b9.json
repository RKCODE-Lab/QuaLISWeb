{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\ComboFilterProperties.jsx\";\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Col, Form, Nav, Row } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { condition } from '../Enumeration';\nimport FormInput from '../form-input/form-input.component';\nimport { ContentPanel, MediaLabel } from '../App.styles'; // import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\n\nconst ComboFilterProperties = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FILTERCOLUMN\"\n    }),\n    isSearchable: true,\n    name: \"filtercolumn\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.tableColumn,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"filtercolumn\"] ? props.selectedFieldRecord[\"filtercolumn\"] : \"\",\n    onChange: value => props.onComboChange(value, \"filtercolumn\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CONDITION\"\n    }),\n    isSearchable: true,\n    name: \"condition\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type === 'numeric' ? props.numericConditions : props.stringConditions,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\",\n    onChange: value => props.onComboChange(value, \"condition\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"padding\": \"0px\",\n      \"margin-bottom\": \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"nsystemconfiguration\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SYSTEMCONFIGURATION\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"nsystemconfiguration\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"nsystemconfiguration\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })))), props.selectedFieldRecord[\"nsystemconfiguration\"] && /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SYSTEMINFO\"\n    }),\n    isSearchable: true,\n    name: \"staticfiltertable\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.staticfiltertables || [],\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"staticfiltertable\"] ? props.selectedFieldRecord[\"staticfiltertable\"] : \"\",\n    onChange: value => props.onComboChange(value, \"staticfiltertable\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), props.selectedFieldRecord[\"nsystemconfiguration\"] ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FIELDS\"\n    }),\n    isSearchable: true,\n    name: \"staticfiltercolumn\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.staticfiltercolumn || [],\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"staticfiltercolumn\"] ? props.selectedFieldRecord[\"staticfiltercolumn\"] : \"\",\n    onChange: value => props.onComboChange(value, \"staticfiltercolumn\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }) : props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type !== 'numeric' ? /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FILTERVALUE\"\n    }),\n    name: \"staticfiltervalue\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FILTERVALUE\"\n    }),\n    value: props.selectedFieldRecord[\"staticfiltervalue\"] ? props.selectedFieldRecord[\"staticfiltervalue\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FILTERVALUE\"\n    }),\n    isSearchable: true,\n    name: \"filtervalue\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.filterData,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\",\n    onChange: value => props.onComboChange(value, \"filtervalue\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    isMulti: props.selectedFieldRecord[\"condition\"] && (props.selectedFieldRecord[\"condition\"].value === condition.CONTAINS || props.selectedFieldRecord[\"condition\"].value === condition.NOTCONTAINS) ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: props.addCondition,\n    className: \"add-txt-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }))), props.selectedFieldRecord.conditionArrayUI && props.selectedFieldRecord.conditionArrayUI.map((condition, index) => {\n    return /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      style: {\n        border: \".5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, condition), /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => props.deleteCondition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      className: \"pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    })));\n  }));\n};\n\nexport default injectIntl(ComboFilterProperties);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/components/droparea/ComboFilterProperties.jsx"],"names":["faPlus","faTrashAlt","FontAwesomeIcon","React","Col","Form","Nav","Row","FormattedMessage","injectIntl","condition","FormInput","ContentPanel","MediaLabel","FormSelectSearch","ComboFilterProperties","props","intl","formatMessage","id","tableColumn","selectedFieldRecord","value","onComboChange","type","numericConditions","stringConditions","event","onInputOnChange","staticfiltertables","staticfiltercolumn","filterData","CONTAINS","NOTCONTAINS","addCondition","conditionArrayUI","map","index","border","deleteCondition"],"mappings":"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","sourcesContent":["import { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport { Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { condition } from '../Enumeration';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { ContentPanel, MediaLabel } from '../App.styles';\r\n// import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\n\r\nconst ComboFilterProperties = (props) => {\r\n    return (\r\n        <>\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_FILTERCOLUMN\" })}\r\n                isSearchable={true}\r\n                name={\"filtercolumn\"}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.tableColumn}\r\n                value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtercolumn\"] ? props.selectedFieldRecord[\"filtercolumn\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"filtercolumn\")}\r\n                closeMenuOnSelect={true}\r\n                alphabeticalSort={true}\r\n            />\r\n            {/* <Col md={12} > */}\r\n           \r\n                <FormSelectSearch\r\n                \r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                    isSearchable={true}\r\n                    name={\"condition\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type === 'numeric' ?\r\n                        props.numericConditions : props.stringConditions}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"condition\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n              \r\n            {/* </Col> */}\r\n\r\n            {/* <CustomSwitch\r\n                label={props.intl.formatMessage({ id: \"IDS_SYSTEMCONFIGURATION\" })}\r\n                type=\"switch\"\r\n                name={\"nsystemconfiguration\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SYSTEMCONFIGURATION\" })}\r\n                defaultValue={props.selectedFieldRecord[\"nsystemconfiguration\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                checked={props.selectedFieldRecord[\"nsystemconfiguration\"]}\r\n            /> */}\r\n            <Col md={12} style={{\r\n                \"padding\": \"0px\",\r\n               \"margin-bottom\":\"10px\" \r\n            }}>\r\n                <Row>\r\n                    <Col md={12} style={{\r\n                        \"margin\": \"16px\",\r\n                        \"padding\": \"0px\",\r\n                        \"margin-top\": \"1px\",\r\n                        \"margin-left\": \"0.5px\"\r\n                    }}>\r\n                        <Form.Check\r\n                            //inline={true}\r\n                            type=\"checkbox\"\r\n                            name={\"nsystemconfiguration\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_SYSTEMCONFIGURATION\" })}\r\n                            // label={checkbox.text}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //id={checkbox.id}\r\n                            checked={props.selectedFieldRecord[\"nsystemconfiguration\"] ? true : false}\r\n                            defaultChecked={props.selectedFieldRecord[\"nsystemconfiguration\"] ? true : false}\r\n                            // isMandatory={control.mandatory}\r\n                            //required={control.mandatory}\r\n                            size={'xl'}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            {props.selectedFieldRecord[\"nsystemconfiguration\"] &&\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SYSTEMINFO\" })}\r\n                    isSearchable={true}\r\n                    name={\"staticfiltertable\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.staticfiltertables || []}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"staticfiltertable\"] ?\r\n                        props.selectedFieldRecord[\"staticfiltertable\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"staticfiltertable\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            }\r\n            {props.selectedFieldRecord[\"nsystemconfiguration\"] ?\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                    isSearchable={true}\r\n                    name={\"staticfiltercolumn\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.staticfiltercolumn || []}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"staticfiltercolumn\"] ?\r\n                        props.selectedFieldRecord[\"staticfiltercolumn\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"staticfiltercolumn\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                /> :\r\n\r\n                props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type !== 'numeric' ?\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                        name={\"staticfiltervalue\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                        value={props.selectedFieldRecord[\"staticfiltervalue\"] ? props.selectedFieldRecord[\"staticfiltervalue\"] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n                    :\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                        isSearchable={true}\r\n                        name={\"filtervalue\"}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        options={props.filterData}\r\n                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\"}\r\n                        onChange={value => props.onComboChange(value, \"filtervalue\")}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        isMulti={props.selectedFieldRecord[\"condition\"] && (\r\n                            props.selectedFieldRecord[\"condition\"].value === condition.CONTAINS ||\r\n                            props.selectedFieldRecord[\"condition\"].value === condition.NOTCONTAINS) ? true : false\r\n                        }\r\n                    />\r\n            }\r\n            <div className='d-flex justify-content-end'>\r\n                <Nav.Link onClick={props.addCondition} className=\"add-txt-btn\">\r\n                    <FontAwesomeIcon icon={faPlus} />{ }\r\n                    <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                </Nav.Link>\r\n            </div>\r\n            {props.selectedFieldRecord.conditionArrayUI && props.selectedFieldRecord.conditionArrayUI.map((condition, index) => {\r\n                return (\r\n                    <ContentPanel className='d-flex justify-content-between'>\r\n                        <MediaLabel style={{ border: \".5rem\" }}>\r\n                            {condition}\r\n                        </MediaLabel>\r\n                        <Nav.Link onClick={() => props.deleteCondition(index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\"></FontAwesomeIcon>\r\n                        </Nav.Link>\r\n                    </ContentPanel>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ComboFilterProperties);"]},"metadata":{},"sourceType":"module"}