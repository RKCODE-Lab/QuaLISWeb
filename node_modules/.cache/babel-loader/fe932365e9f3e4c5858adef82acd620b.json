{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\DynamicPreRegDesign.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData, getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues, getDynamicFilter, getDynamicFilterExecuteData, rearrangeDateFormatforKendoDataTool, validateEsignCredential, validatePreview } from '../../actions/index';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\nimport { ageCalculate, childComboClear, constructOptionList, convertDateTimetoStringDBFormat, deleteAttachmentDropZone, getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign, validateEmail } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PortalModal from '../../PortalModal';\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport DynamicSlideout from './DynamicSlideout.jsx';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { designProperties, transactionStatus, SampleType } from '../../components/Enumeration';\nimport FormInput from '../../components/form-input/form-input.component';\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport { Utils as QbUtils } from \"react-awesome-query-builder\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DynamicPreRegDesign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.custombuttonclick = (event, component) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const inputparam = {\n        component,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getDynamicFilter(inputparam);\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          selectedRecord: selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.handlePageChange = event => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          kendoSkip: event.skip,\n          kendoTake: event.take\n        }\n      };\n      this.props.updateStore(updateInfo); //this.setState({ kendoSkip: event.skip, kendoTake: event.take });\n    };\n\n    this.handleFilterChange = event => {\n      // event.preventDefault();\n      //event.stopPropagation();\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          kendoFilter: event.filter // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ kendoFilter: event.filter });\n    };\n\n    this.handleExecuteClick = event => {\n      const selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord['filterquery'] !== \"\" && selectedRecord['filterquery'] !== undefined) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: selectedRecord['filterquery']\n        };\n        this.props.getDynamicFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let selecteddata = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n\n      if (component.hasOwnProperty(\"child\")) {\n        const selectedRecord = this.state.selectedRecord;\n        component.child.map(y => {\n          // component.filterfields.filter(x=>x.)\n          const withoutCombocomponent = this.state.withoutCombocomponent;\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n\n          if (readonlyfields !== -1) {\n            if (withoutCombocomponent[readonlyfields]['inputtype'] === \"date\") {\n              selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : \"\";\n              selectedRecord[y.label + 'value'] = selectedRecord[y.label];\n\n              if (withoutCombocomponent[readonlyfields].child) {\n                const Age = withoutCombocomponent.filter(x => x.name === 'Age');\n                withoutCombocomponent[readonlyfields].child.map(k => {\n                  if (k.label === Age[0].label) {\n                    const age = ageCalculate(selectedRecord[y.label]);\n                    selectedRecord[Age[0].label] = age;\n                  }\n                });\n              }\n            } else {\n              if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\n                selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] : selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\";\n              } else {\n                selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\";\n              }\n            }\n          } else {\n            const comboComponents = this.state.comboComponents;\n            const readonlyfields = comboComponents.findIndex(k => k.label === y.label);\n\n            if (readonlyfields !== -1) {\n              if (this.props.Login.comboData[y.label]) {\n                const val = this.props.Login.comboData[y.label].filter(item => item.value === selecteddata[y.foriegntablePK]);\n                if (val.length > 0) selectedRecord[y.label] = val[0]; //selectedRecord[y.label]=this.props.Login.comboData[y.label].filter(item=>item.value===selecteddata[y.foriegntablePK])\n              }\n            }\n          }\n        });\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            loadCustomSearchFilter: false // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n\n          }\n        };\n        this.props.updateStore(updateInfo); // }\n      }\n    };\n\n    this.mandatoryValidation = () => {\n      const mandatoryFields = [];\n      const selectedRecord = this.state.selectedRecord;\n      this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata.map(row => {\n        return row.children.map(column => {\n          return column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.mandatory === true) {\n                if (componentrow.recordbasedshowhide) {\n                  if (this.state.selectedRecord[componentrow.parentLabel] === componentrow.recordbasedhide) {\n                    if (componentrow.inputtype === \"email\") {\n                      mandatoryFields.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"alertPreFix\": this.props.intl.formatMessage({\n                          id: \"IDS_VALID\"\n                        }),\n                        \"validateFunction\": validateEmail,\n                        \"mandatoryLabel\": \"IDS_ENTER\",\n                        \"controlType\": \"textbox\"\n                      });\n                    } else {\n                      mandatoryFields.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                        \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                      });\n                    }\n                  }\n                } else {\n                  if (componentrow.inputtype === \"email\") {\n                    mandatoryFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": componentrow.label,\n                      \"dataField\": componentrow.label,\n                      \"alertPreFix\": this.props.intl.formatMessage({\n                        id: \"IDS_VALID\"\n                      }),\n                      \"validateFunction\": validateEmail,\n                      \"mandatoryLabel\": \"IDS_ENTER\",\n                      \"controlType\": \"textbox\"\n                    });\n                  } else {\n                    mandatoryFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": componentrow.label,\n                      \"dataField\": componentrow.label,\n                      \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                      \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                    });\n                  }\n                }\n              } else {\n                if (componentrow.inputtype === \"email\") {\n                  selectedRecord[componentrow.label] && selectedRecord[componentrow.label] !== \"\" && mandatoryFields.push({\n                    \"mandatory\": true,\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"alertPreFix\": this.props.intl.formatMessage({\n                      id: \"IDS_VALID\"\n                    }),\n                    \"validateFunction\": validateEmail,\n                    \"mandatoryLabel\": \"IDS_ENTER\",\n                    \"controlType\": \"textbox\"\n                  });\n                }\n              }\n\n              return null;\n            }) : component.mandatory === true ? component.recordbasedshowhide ? this.state.selectedRecord[component.parentLabel] === component.recordbasedhide ? component.inputtype === \"email\" ? mandatoryFields.push({\n              \"mandatory\": true,\n              \"idsName\": component.label,\n              \"dataField\": component.label,\n              \"alertPreFix\": this.props.intl.formatMessage({\n                id: \"IDS_VALID\"\n              }),\n              \"validateFunction\": validateEmail,\n              \"mandatoryLabel\": \"IDS_ENTER\",\n              \"controlType\": \"textbox\"\n            }) : mandatoryFields.push({\n              \"mandatory\": true,\n              \"idsName\": component.label,\n              \"dataField\": component.label,\n              \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n              \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n            }) : \"\" : component.inputtype === \"email\" ? mandatoryFields.push({\n              \"mandatory\": true,\n              \"idsName\": component.label,\n              \"dataField\": component.label,\n              \"alertPreFix\": this.props.intl.formatMessage({\n                id: \"IDS_VALID\"\n              }),\n              \"validateFunction\": validateEmail,\n              \"mandatoryLabel\": \"IDS_ENTER\",\n              \"controlType\": \"textbox\"\n            }) : mandatoryFields.push({\n              \"mandatory\": true,\n              \"idsName\": component.label,\n              \"dataField\": component.label,\n              \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n              \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n            }) : selectedRecord[component.label] ? component.inputtype === \"email\" ? mandatoryFields.push({\n              \"mandatory\": true,\n              \"idsName\": component.label,\n              \"dataField\": component.label,\n              \"alertPreFix\": this.props.intl.formatMessage({\n                id: \"IDS_VALID\"\n              }),\n              \"validateFunction\": validateEmail,\n              \"mandatoryLabel\": \"IDS_ENTER\",\n              \"controlType\": \"textbox\"\n            }) : \"\" : \"\";\n          });\n        });\n      });\n      return mandatoryFields;\n    };\n\n    this.onExecuteClick = () => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const userInfo = this.props.Login.userInfo;\n      const sampleRegistration = {};\n      sampleRegistration[\"jsondata\"] = {};\n      const dateList = [];\n      const defaulttimezone = this.props.Login.defaultTimeZone;\n      console.log(\"selected in execute:\", selectedRecord);\n      this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata.map(row => {\n        return row.children.map(column => {\n          return column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              return component.children.map(componentrow => {\n                if (componentrow.inputtype === \"date\") {\n                  if (componentrow.mandatory) {\n                    sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                  } else {\n                    sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                  }\n\n                  if (componentrow.timezone) {\n                    sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                      value: selectedRecord[`tz${componentrow.label}`].value,\n                      label: selectedRecord[`tz${componentrow.label}`].label\n                    } : defaulttimezone ? defaulttimezone : -1;\n                  }\n\n                  dateList.push(componentrow.label);\n                }\n              });\n              return sampleRegistration;\n            } else {\n              if (component.inputtype === \"date\") {\n                if (component.mandatory) {\n                  sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                } else {\n                  sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n                }\n\n                if (component.timezone) {\n                  sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                    value: selectedRecord[`tz${component.label}`].value,\n                    label: selectedRecord[`tz${component.label}`].label\n                  } : defaulttimezone ? defaulttimezone : -1;\n                }\n\n                dateList.push(component.label);\n              }\n\n              return sampleRegistration;\n            }\n          });\n        });\n      });\n      const {\n        dateconstraints,\n        combinationunique\n      } = this.getJsondata(this.props.Login.masterData.selectedTemplate.jsondata);\n      const inputParam = {\n        Registration: sampleRegistration,\n        DateList: dateList,\n        dateconstraints: dateconstraints,\n        userinfo: userInfo,\n        combinationunique: combinationunique\n      };\n      this.props.validatePreview(inputParam);\n    };\n\n    this.getJsondata = templatedata => {\n      let dateconstraints = [];\n      let combinationunique = [];\n      templatedata && templatedata.map(row => row.children && row.children.map(column => {\n        column.children && column.children.map(component => {\n          if (component.hasOwnProperty('children')) {\n            component.children.map(componentRow => {\n              // componentRow.unique && sampleuniquevalidation.push({ [designProperties.LABEL]: componentRow.label });\n              componentRow.unique && combinationunique.push({\n                [componentRow.label]: {\n                  [designProperties.LABEL]: componentRow.displayname,\n                  [designProperties.VALUE]: componentRow.label\n                }\n              });\n\n              if (componentRow.inputtype === 'date') {\n                // sampledatefields.push({ [designProperties.VALUE]: componentRow.label, dateonly: componentRow.dateonly || false });\n                dateconstraints = componentRow.dateConstraintArraySQL ? [...componentRow.dateConstraintArraySQL, ...dateconstraints] : dateconstraints;\n              }\n\n              return null;\n            });\n          } else {\n            component.unique && combinationunique.push({\n              [component.label]: {\n                [designProperties.LABEL]: component.displayname,\n                [designProperties.VALUE]: component.label\n              }\n            });\n\n            if (component.inputtype === 'date') {\n              dateconstraints = component.dateConstraintArraySQL ? [...component.dateConstraintArraySQL, ...dateconstraints] : dateconstraints;\n            }\n\n            return null;\n          }\n        });\n      }));\n      let jsondata = {\n        combinationunique,\n        dateconstraints\n      };\n      return jsondata;\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.filterComboChange = comboData => {\n      this.setState({\n        selectedSampleType: comboData\n      });\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData();\n    };\n\n    this.closeModal = () => {\n      let updateInfo = {};\n\n      if (!this.props.Login.loadCustomSearchFilter) {\n        let loadEsign = this.props.Login.loadEsign;\n        let openModal = this.props.Login.openModal;\n        let openPortal = this.props.Login.openPortal;\n        let selectedRecord = this.props.Login.selectedRecord;\n\n        if (this.props.Login.loadEsign) {\n          if (this.props.Login.operation === \"delete\") {\n            loadEsign = false;\n            openModal = false;\n            openPortal = false;\n            selectedRecord = {};\n          } else {\n            loadEsign = false;\n            selectedRecord['esignpassword'] = \"\";\n            selectedRecord['esigncomments'] = \"\";\n            selectedRecord['esignreason'] = \"\";\n          }\n        } else {\n          openModal = false;\n          openPortal = false;\n          selectedRecord = {};\n        }\n\n        updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal,\n            openPortal,\n            loadEsign,\n            selectedRecord,\n            selectedId: null,\n            design: [],\n            selectedFieldRecord: {},\n            showConfirmAlert: false\n          } // data: {openModal, loadEsign, selectedRecord}\n\n        };\n      } else {\n        updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadCustomSearchFilter: false,\n            kendoSkip: 0,\n            kendoTake: 5,\n            kendoFilter: {\n              logic: \"and\",\n              filters: []\n            },\n            awesomeTree: undefined,\n            awesomeConfig: undefined\n          } // data: {openModal, loadEsign, selectedRecord}\n\n        };\n      }\n\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openModal = ncontrolCode => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedRecord: {},\n          operation: \"copy\",\n          ncontrolCode,\n          selectedId: null,\n          openModal: true,\n          screenName: this.props.Login.inputParam.displayName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let dataState = undefined;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let selectedId = null;\n      inputData['registrationtemplate'] = {\n        nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        sregtemplatename: this.state.selectedRecord['sregtemplatename'],\n        nsampletypecode: this.props.Login.masterData.selectedTemplate.nsampletypecode\n      };\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        searchRef: this.searchRef,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        selectedId,\n        dataState\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteApproveTemplate(\"delete\", deleteId));\n    };\n\n    this.deleteApproveTemplate = (operation, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n      const postParam = {\n        inputListName: \"RegistrationTemplate\",\n        selectedObject: \"selectedTemplate\",\n        primaryKeyField: \"nreactregtemplatecode\",\n        fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\n        primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n        },\n        masterData: this.props.Login.masterData\n      };\n      const data = [];\n      const Layout = this.props.Login.masterData.selectedTemplate.jsondata;\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              component.children.map(componentrow => {\n                if (this.state.breadCrumbData[0].item.value === -1) componentrow['label'] = componentrow.label + \"_child\";\n                data.push(componentrow.label);\n              });\n            } else {\n              if (this.state.breadCrumbData[0].item.value === -1) {\n                component['label'] = component.label + \"_child\";\n                data.push(component.label);\n              } else {\n                data.push(component.label);\n              }\n            }\n          });\n        });\n      });\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        postParam,\n        searchRef: this.searchRef,\n        inputData: {\n          registrationtemplate: {\n            sregtemplatename: this.props.Login.masterData.selectedTemplate.sregtemplatename,\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n            jsonString: JSON.stringify(Layout)\n          },\n          userinfo: this.props.Login.userInfo,\n          dynamicFields: data,\n          nsampletypecode: this.state.breadCrumbData[0].item.value\n        },\n        operation\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            operation: \"delete\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedSampleType) {\n        this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SAMPLETYPENOTAVALIABLE\"\n        }));\n      }\n    };\n\n    this.getPreviewTemplate = (masterData, userInfo, editId) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.selectedTemplate.jsondata;\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      let childColumnList = {};\n      data.map(columnList => {\n        const val = this.comboChild(data, columnList, childColumnList, true);\n        data = val.data;\n        childColumnList = val.childColumnList;\n      });\n      this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true);\n    };\n\n    this.comboChild = (data, columnList, childColumnList, slice) => {\n      let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n      if (!childColumnList.hasOwnProperty(columnList.label)) {\n        if (childColumnList[columnList.label] === undefined) {\n          if (columnList.hasOwnProperty(\"child\")) {\n            let childList = [];\n            columnList.child.map(childData => {\n              const index = data.findIndex(x => x.label === childData.label);\n\n              if (index !== -1) {\n                childList.push(data[index]);\n\n                if (slice) {\n                  data = [...data.slice(0, index), ...data.slice(index + 1)];\n                }\n              }\n            });\n            childColumnList[columnList.label] = childList;\n\n            if (childList.length > 0) {\n              childList.map(y => {\n                if (y.hasOwnProperty(\"child\")) {\n                  const val = this.comboChild(data, y, childColumnList, slice);\n                  retunObj[\"data\"] = val.data;\n                  retunObj[\"childColumnList\"] = val.childColumnList;\n                } else {\n                  retunObj[\"data\"] = data;\n                  retunObj[\"childColumnList\"] = childColumnList;\n                }\n              });\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          } else {\n            retunObj[\"data\"] = data;\n            retunObj[\"childColumnList\"] = childColumnList;\n          }\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n\n      return retunObj;\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      let selectedRecord = this.state.selectedRecord || {}; //if (comboData) {\n\n      comboData[\"item\"] = { ...comboData[\"item\"],\n        \"pkey\": control.valuemember,\n        \"nquerybuildertablecode\": control.nquerybuildertablecode,\n        \"source\": control.source\n      };\n      selectedRecord[comboName] = comboData;\n      console.log(\"selected:\", selectedRecord, comboData, control, customName);\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\");\n\n        if (comboData) {\n          const inputParem = {\n            child: control.child,\n            source: control.source,\n            primarykeyField: control.valuemember,\n            value: comboData.value,\n            item: comboData.item\n          };\n          this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList]);\n        } else {\n          let comboData = this.props.Login.comboData;\n          const withoutCombocomponent = this.state.withoutCombocomponent || [];\n          const inputParam = {\n            control,\n            comboComponents: this.state.comboComponents,\n            withoutCombocomponent,\n            selectedRecord,\n            comboData\n          };\n          const childParam = childComboClear(inputParam);\n          selectedRecord = childParam.selectedRecord;\n          comboData = childParam.comboData;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord,\n              comboData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = (event, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'toggle') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedRecord[event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        const value = selectedRecord[event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index === 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedRecord[event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = radiotext;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      }); // this.saveComponentProperties()\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericBlur = (value, control) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord[control.label]) {\n        if (control.max) {\n          if (!(selectedRecord[control.label] < parseFloat(control.max))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedRecord[control.label] > parseFloat(control.min))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord,\n        withoutCombocomponent\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n\n      if (this.props.Login.masterData.selectedTemplate.nsampletypecode === SampleType.CLINICALTYPE) {\n        const age = ageCalculate(dateValue);\n        const Age = withoutCombocomponent.filter(x => x.name === 'Age');\n        selectedRecord[Age[0].label] = age;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (value, type, oldVlaue) => {\n      const design = this.state.design;\n      let columns = design[0].children;\n      let designData = this.props.Login.ReactInputFields;\n      value = JSON.parse(value.fields);\n      value = { ...value,\n        type: \"component\"\n      };\n      let designDataIndex = designData.findIndex(item => item.label === value.label);\n      let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\n      let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\n      if (designDataIndex >= 0) designData.splice(designDataIndex, 1);\n\n      if (firstIndex >= 0) {\n        if (type !== 1) {\n          columns[0].children.splice(firstIndex, 1); // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[0].children.findIndex(item => item.label === value.label);\n            let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\n            columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 1) {\n        if (columns[0]) {\n          columns[0].children.push(value);\n        } else {\n          columns[0] = {\n            id: \"1\",\n            type: \"column\",\n            children: []\n          };\n          columns[0].children.push(value);\n        }\n      }\n\n      if (secondIndex >= 0) {\n        if (type !== 2) {\n          columns[1].splice(secondIndex, 1);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[1].children.findIndex(item => item.label === value.label);\n            let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\n            columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 2) {\n        if (columns[1]) {\n          columns[1].children.push(value);\n        } else {\n          columns[1] = {\n            id: \"2\",\n            type: \"column\",\n            children: []\n          };\n          columns[1].children.push(value);\n        }\n      } // design.push(columns)\n\n\n      this.setState({\n        designData,\n        design\n      });\n    };\n\n    this.onDropFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      addTemplateId: -1,\n      editId: -1,\n      deleteId: -1,\n      approveID: -1,\n      previewId: -1,\n      copyID: -1,\n      selectedRecord: {},\n      sampleTypeOptions: [],\n      selectedSampleType: {},\n      breadCrumbData: [],\n      design: [],\n      comboComponents: [],\n      withoutCombocomponent: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.masterStatus\n      }));\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const Layout = this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata;\n    const filterParam = {\n      inputListName: \"RegistrationTemplate\",\n      selectedObject: \"selectedTemplate\",\n      primaryKeyField: \"nreactregtemplatecode\",\n      fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"realSampleType\", \"SampleTypes\"],\n      searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, this.state.breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.state.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      filterColumnData: this.props.filterColumnData,\n      screenName: \"Dynamic Pre-Reg Design\",\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || [],\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      getMasterDetail: template => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.selectedTemplate,\n      primaryKeyField: \"nreactregtemplatecode\",\n      mainField: \"sregtemplatename\",\n      firstField: \"stransdisplaystatus\" // secondField=\"stransdisplaystatus\"\n      ,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: this.state.addTemplateId,\n      filterParam: filterParam,\n      hidePaging: true,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getReactInputFields(this.props.Login.userInfo, 'create'),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_SAMPLETYPEFILTER\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nsampletypecode\",\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_SAMPLETYPE\"\n          }),\n          isSearchable: false,\n          placeholder: \"Please Select...\",\n          options: this.state.sampleTypeOptions,\n          value: this.state.selectedSampleType ? this.state.selectedSampleType : \"\",\n          onChange: value => this.filterComboChange(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 53\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.selectedTemplate ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedTemplate.sregtemplatename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-secondary\"} btn-sm mr-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedTemplate.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEW\"\n      }) // data-for=\"tooltip_list_wrap\"\n      // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.previewId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(this.state.editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"delete\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1,\n      onClick: () => this.ConfirmDelete(this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approve\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(this.state.approveID) === -1,\n      onClick: () => this.deleteApproveTemplate('approve', this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"copy\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.openModal(this.state.copyID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 41\n      }\n    }, Layout ? Layout.map(item => /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 57\n      }\n    }, item.children.length > 0 ? item.children.map(column => /*#__PURE__*/React.createElement(Col, {\n      md: 12 / item.children.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 69\n      }\n    }, column.children.map(component => {\n      return component.hasOwnProperty(\"children\") ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 89\n        }\n      }, component.children.map(componentrow =>\n      /*#__PURE__*/\n      //<Col md={12 / componentrow.length}>\n      React.createElement(Col, {\n        md: componentrow && componentrow.length || 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 105\n        }\n      }, componentrow.displayname ? componentrow.displayname[this.props.Login.userInfo.slanguagetypecode] || componentrow.label : componentrow.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 105\n        }\n      }, \"-\"))))) : /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 93\n        }\n      }, component.displayname ? component.displayname[this.props.Login.userInfo.slanguagetypecode] || component.label : component.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 93\n        }\n      }, \" \", \"-\"));\n    }))) : \"\")) : \"\"))) : \"\"))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PreRegDesignPopUp, {\n      closeModal: this.closeModal,\n      nsampletypecode: this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1,\n      ncategorybasedflowrequired: this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.item.ncategorybasedflowrequired : 4,\n      searchRef: this.searchRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      size: this.props.Login.operation === 'copy' || \"approve\" ? 'lg' : \"xl\",\n      onSaveClick: this.props.Login.operation === 'copy' ? this.onSaveClick : this.props.Login.operation === \"preview\" ? this.onExecuteClick : this.closeModal,\n      hideSave: this.props.Login.operation === 'copy' ? false : true,\n      loginoperation: this.props.Login.operation === 'copy' ? false : true,\n      operation: this.props.Login.operation,\n      showValidate: this.props.Login.operation === \"preview\" ? true : false,\n      screenName: this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\",\n      closeModal: this.closeModal,\n      show: this.props.Login.openModal,\n      onExecuteClick: this.onExecuteClick,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'copy' ? [{\n        \"idsName\": \"IDS_TEMPLATENAME\",\n        \"dataField\": \"sregtemplatename\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : this.props.Login.operation === \"preview\" ? this.mandatoryValidation() : [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: event => this.onInputOnChange(event),\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'copy' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        name: \"sregtemplatename\",\n        type: \"text\",\n        onChange: event => this.setState({\n          selectedRecord: { ...this.state.selectedRecord,\n            sregtemplatename: event.target.value\n          }\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        value: this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.loadCustomSearchFilter ? this.props.Login.seletedFilterComponent && this.props.Login.seletedFilterComponent.inputtype === 'frontendsearchfilter' ? /*#__PURE__*/React.createElement(KendoDatatoolFilter, {\n        filter: this.props.Login.kendoFilter,\n        handleFilterChange: this.handleFilterChange,\n        filterData: this.props.Login.lstPatient || [],\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        fields: this.props.Login.fields || [],\n        gridColumns: this.props.Login.gridColumns || [],\n        onRowClick: this.handleKendoRowClick,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick,\n        userInfo: this.props.Login.userInfo // static={true}\n        // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 46\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata,\n        handleChange: this.handleChange,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        Login: this.props.Login,\n        custombuttonclick: this.custombuttonclick,\n        onNumericBlur: this.onNumericBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      userRoleControlRights,\n      controlMap,\n      addTemplateId,\n      sampleTypeOptions,\n      breadCrumbData,\n      selectedSampleType,\n      editId,\n      deleteId,\n      approveID,\n      copyID,\n      selectedRecord,\n      comboComponents,\n      previewId,\n      withoutCombocomponent,\n      kendoSkip,\n      kendoTake,\n      awesomeConfig,\n      awesomeTree,\n      kendoFilter\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n      addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\n      editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\n      deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\n      approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\n      copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\n      previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\n    }\n\n    if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\n      sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsorter', \"ascending\").get(\"OptionList\");\n      selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\n      breadCrumbData = sampleTypeOptions.length > 0 ? [{\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": sampleTypeOptions[0].label,\n        \"item\": sampleTypeOptions[0]\n      }] : [];\n      updateState = true;\n    }\n\n    if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\n      updateState = true;\n      breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\n      updateState = true;\n      comboComponents = this.props.Login.comboComponents;\n    }\n\n    if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\n      updateState = true;\n      withoutCombocomponent = this.props.Login.withoutCombocomponent;\n    } // if (this.props.Login.kendoTake !== previousProps.Login.kendoTake) {\n    //     updateState = true;\n    //     kendoTake = this.props.Login.kendoTake\n    // }\n\n\n    if (updateState) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        addTemplateId,\n        sampleTypeOptions,\n        breadCrumbData,\n        selectedSampleType,\n        editId,\n        deleteId,\n        approveID,\n        copyID,\n        selectedRecord,\n        comboComponents,\n        previewId,\n        withoutCombocomponent\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  crudMaster,\n  getReactInputFields,\n  selectRegistrationTemplate,\n  filterColumnData,\n  getRegistrationTemplate,\n  getEditRegTemplate,\n  getPreviewTemplate,\n  getChildValues,\n  getDynamicFilter,\n  getDynamicFilterExecuteData,\n  validateEsignCredential,\n  validatePreview\n})(injectIntl(DynamicPreRegDesign));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dynamicpreregdesign/DynamicPreRegDesign.jsx"],"names":["React","connect","injectIntl","updateStore","getReactInputFields","selectRegistrationTemplate","filterColumnData","getRegistrationTemplate","getEditRegTemplate","crudMaster","getPreviewTemplate","getChildValues","getDynamicFilter","getDynamicFilterExecuteData","rearrangeDateFormatforKendoDataTool","validateEsignCredential","validatePreview","DEFAULT_RETURN","Row","Col","FormGroup","FormLabel","Card","Nav","ListMaster","ContentPanel","MediaLabel","ReadOnlyText","ageCalculate","childComboClear","constructOptionList","convertDateTimetoStringDBFormat","deleteAttachmentDropZone","getControlMap","getSameRecordFromTwoArrays","onDropAttachFileList","showEsign","validateEmail","toast","PreRegDesignPopUp","FormSelectSearch","BreadcrumbComponent","Affix","PortalModal","faCopy","faEye","faPencilAlt","faThumbsUp","faTrashAlt","FontAwesomeIcon","ConfirmMessage","DynamicSlideout","SlideOutModal","Esign","designProperties","transactionStatus","SampleType","FormInput","KendoDatatoolFilter","FilterQueryBuilder","Utils","QbUtils","mapStateToProps","state","Login","DynamicPreRegDesign","Component","constructor","props","custombuttonclick","event","component","preventDefault","stopPropagation","inputparam","userinfo","userInfo","onChangeAwesomeQueryBuilder","immutableTree","config","selectedRecord","sqlFormat","updateInfo","typeName","data","awesomeTree","awesomeConfig","handlePageChange","kendoSkip","skip","kendoTake","take","handleFilterChange","kendoFilter","filter","handleExecuteClick","undefined","seletedFilterComponent","filterquery","warn","intl","formatMessage","id","handleKendoRowClick","selecteddata","dataItem","hasOwnProperty","child","map","y","withoutCombocomponent","readonlyfields","findIndex","k","label","Age","x","name","age","languagetypeCode","comboComponents","comboData","val","item","value","foriegntablePK","length","loadCustomSearchFilter","mandatoryValidation","mandatoryFields","masterData","selectedTemplate","jsondata","row","children","column","componentrow","mandatory","recordbasedshowhide","parentLabel","recordbasedhide","inputtype","push","onExecuteClick","sampleRegistration","dateList","defaulttimezone","defaultTimeZone","console","log","Date","loadcurrentdate","timezone","dateconstraints","combinationunique","getJsondata","inputParam","Registration","DateList","templatedata","componentRow","unique","LABEL","displayname","VALUE","dateConstraintArraySQL","openFilter","showFilter","filterComboChange","setState","selectedSampleType","closeFilter","onFilterSubmit","reloadData","closeModal","loadEsign","openModal","openPortal","operation","selectedId","design","selectedFieldRecord","showConfirmAlert","logic","filters","ncontrolCode","screenName","displayName","onSaveClick","saveType","formRef","inputData","dataState","nreactregtemplatecode","sregtemplatename","nsampletypecode","methodUrl","classUrl","searchRef","esignNeeded","userRoleControlRights","nformcode","screenData","ConfirmDelete","deleteId","confirmMessage","confirm","deleteApproveTemplate","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","primaryKeyValue","fecthInputObject","breadCrumbData","Layout","registrationtemplate","jsonString","JSON","stringify","dynamicFields","current","editId","childColumnList","columnList","comboChild","Map","slice","retunObj","childList","childData","index","onComboChange","control","customName","comboName","valuemember","nquerybuildertablecode","source","childComboList","parentList","inputParem","primarykeyField","childParam","onInputOnChange","radiotext","target","type","checked","YES","NO","test","includes","indexOf","indexcomma","validateEsign","sreason","nreasoncode","spredefinedreason","password","onNumericInputChange","onNumericBlur","max","parseFloat","precision","parseInt","min","handleDateChange","dateValue","dateName","CLINICALTYPE","onDrop","oldVlaue","columns","designData","ReactInputFields","parse","fields","designDataIndex","firstIndex","secondIndex","splice","from","to","onDropFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","file","createRef","controlMap","addTemplateId","approveID","previewId","copyID","sampleTypeOptions","getDerivedStateFromProps","masterStatus","error","render","filterParam","unchangeList","searchFieldList","searchedData","RegistrationTemplate","template","ntransactionstatus","APPROVED","stransdisplaystatus","e","slanguagetypecode","ncategorybasedflowrequired","lstPatient","gridColumns","handleChange","timeZoneList","componentDidUpdate","previousProps","updateState","Object","values","ncontrolcode","has","get","SampleTypes","realSampleType","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, crudMaster,\r\n    getPreviewTemplate, getChildValues, getDynamicFilter, getDynamicFilterExecuteData,\r\n    rearrangeDateFormatforKendoDataTool, validateEsignCredential, validatePreview\r\n} from '../../actions/index'\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\r\nimport {\r\n    ageCalculate,\r\n    childComboClear,\r\n    constructOptionList, convertDateTimetoStringDBFormat, deleteAttachmentDropZone,\r\n    getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign, validateEmail\r\n} from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PortalModal from '../../PortalModal';\r\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport DynamicSlideout from './DynamicSlideout.jsx'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { designProperties, transactionStatus ,SampleType} from '../../components/Enumeration';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass DynamicPreRegDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            addTemplateId: -1,\r\n            editId: -1, deleteId: -1, approveID: -1, previewId: -1, copyID: -1,\r\n            selectedRecord: {},\r\n            sampleTypeOptions: [],\r\n            selectedSampleType: {},\r\n            breadCrumbData: [],\r\n            design: [],\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.masterStatus }));\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    custombuttonclick = (event, component) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const inputparam = {\r\n            component, userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getDynamicFilter(inputparam)\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n\r\n    handlePageChange = (event) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoSkip: event.skip, kendoTake: event.take\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        //this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    handleFilterChange = (event) => {\r\n        // event.preventDefault();\r\n        //event.stopPropagation();\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoFilter: event.filter\r\n                // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // this.setState({ kendoFilter: event.filter });\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        const selectedRecord = this.state.selectedRecord\r\n        if (selectedRecord['filterquery'] !== \"\" && selectedRecord['filterquery'] !== undefined) {\r\n            const inputparam = {\r\n                component: this.props.Login.seletedFilterComponent,\r\n                userinfo: this.props.Login.userInfo,\r\n                filterquery: selectedRecord['filterquery']\r\n\r\n            }\r\n            this.props.getDynamicFilterExecuteData(inputparam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n        }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let selecteddata = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent\r\n        if (component.hasOwnProperty(\"child\")) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            component.child.map(y => {\r\n                // component.filterfields.filter(x=>x.)\r\n                const withoutCombocomponent = this.state.withoutCombocomponent;\r\n                const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n                if (readonlyfields !== -1) {\r\n\r\n                    if (withoutCombocomponent[readonlyfields]['inputtype'] === \"date\") {\r\n                        selectedRecord[y.label]  = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ?\r\n                            rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : \"\"\r\n                            selectedRecord[y.label+'value'] =selectedRecord[y.label] \r\n                          \r\n                           if(withoutCombocomponent[readonlyfields].child){\r\n                            const Age = withoutCombocomponent.filter(x => x.name === 'Age');\r\n                            withoutCombocomponent[readonlyfields].child.map(k=>{\r\n                                if(k.label===Age[0].label)\r\n                                {\r\n                                    const age = ageCalculate( selectedRecord[y.label] );\r\n                            \r\n                                    selectedRecord[Age[0].label] = age\r\n                                }\r\n                            })\r\n                           \r\n                           \r\n                           }\r\n\r\n                            \r\n\r\n                        } else {\r\n                        if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]?\r\n                                selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] ?\r\n                                 selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode]: selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]:\"\"\r\n                        } else {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\"\r\n                        }\r\n                    }\r\n\r\n\r\n                }else{\r\n                    const comboComponents = this.state.comboComponents;\r\n                   const readonlyfields = comboComponents.findIndex(k => k.label === y.label);\r\n                   if(readonlyfields !== -1){\r\n                    if(this.props.Login.comboData[y.label]){\r\n                        const val= this.props.Login.comboData[y.label].filter(item => item.value === selecteddata[y.foriegntablePK])\r\n                               if(val.length>0) \r\n                               selectedRecord[y.label] = val[0]\r\n                        //selectedRecord[y.label]=this.props.Login.comboData[y.label].filter(item=>item.value===selecteddata[y.foriegntablePK])\r\n                    }\r\n                   \r\n                   }\r\n\r\n                }\r\n\r\n            })\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectedRecord,\r\n                    loadCustomSearchFilter: false,\r\n                    // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo)\r\n            // }\r\n        }\r\n    };\r\n    render() {\r\n        const Layout = this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate.jsondata\r\n\r\n        const filterParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"realSampleType\", \"SampleTypes\"],\r\n            searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {this.state.breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={this.state.breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                screenName={\"Dynamic Pre-Reg Design\"}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || []}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(template) => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedTemplate}\r\n                                primaryKeyField=\"nreactregtemplatecode\"\r\n                                mainField=\"sregtemplatename\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={this.state.addTemplateId}\r\n                                filterParam={filterParam}\r\n                                hidePaging={true}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getReactInputFields(this.props.Login.userInfo, 'create')}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLETYPEFILTER\":\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsampletypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.sampleTypeOptions}\r\n                                                        value={this.state.selectedSampleType ? this.state.selectedSampleType : \"\"}\r\n                                                        onChange={value => this.filterComboChange(value)}\r\n                                                    >\r\n                                                    </FormSelectSearch>\r\n                                                </Col>\r\n                                            </Row>\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {this.props.Login.masterData.selectedTemplate ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedTemplate.sregtemplatename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <MediaLabel className={`btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\"\r\n                                                            : \"outline-secondary\"} btn-sm mr-3`}>\r\n                                                            {this.props.Login.masterData.selectedTemplate.stransdisplaystatus}\r\n                                                        </MediaLabel>\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEW\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.getPreviewTemplate(this.props.Login.masterData,\r\n                                                                this.props.Login.userInfo, this.state.previewId\r\n                                                            )}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"delete\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"approve\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.approveID) === -1}\r\n                                                            onClick={() => this.deleteApproveTemplate('approve', this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"copy\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.openModal(this.state.copyID)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            {\r\n                                                Layout ?\r\n                                                    Layout.map((item) =>\r\n                                                        <Row>\r\n                                                            {item.children.length > 0 ?\r\n                                                                item.children.map((column) =>\r\n                                                                    <Col md={12 / item.children.length}>\r\n                                                                        {\r\n                                                                            column.children.map((component) => {\r\n                                                                                return (\r\n                                                                                    component.hasOwnProperty(\"children\") ?\r\n                                                                                        <Row>\r\n                                                                                            {component.children.map(componentrow =>\r\n                                                                                                //<Col md={12 / componentrow.length}>\r\n                                                                                                <Col md={componentrow && componentrow.length || 4}>\r\n                                                                                                    <FormGroup>\r\n                                                                                                        <FormLabel>{componentrow.displayname ? componentrow.displayname[this.props.Login.userInfo.slanguagetypecode] || componentrow.label : componentrow.label}</FormLabel>\r\n                                                                                                        <ReadOnlyText>{\"-\"}</ReadOnlyText>\r\n                                                                                                    </FormGroup>\r\n                                                                                                </Col>\r\n                                                                                            )\r\n                                                                                            }\r\n                                                                                        </Row>\r\n                                                                                        :\r\n                                                                                        <FormGroup>\r\n                                                                                            <FormLabel>{component.displayname ? component.displayname[this.props.Login.userInfo.slanguagetypecode] || component.label : component.label}</FormLabel>\r\n                                                                                            <ReadOnlyText> {\"-\"}</ReadOnlyText>\r\n                                                                                        </FormGroup>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                : \"\"}\r\n                                                        </Row>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegDesignPopUp\r\n                            closeModal={this.closeModal}\r\n                            nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\r\n                            ncategorybasedflowrequired={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.item.ncategorybasedflowrequired : 4}\r\n                            searchRef={this.searchRef}\r\n                        />\r\n                    </PortalModal> : \"\"}\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        size={this.props.Login.operation === 'copy' || \"approve\" ? 'lg' : \"xl\"}\r\n                        onSaveClick={this.props.Login.operation === 'copy' ? this.onSaveClick :\r\n                            this.props.Login.operation === \"preview\" ?\r\n                                this.onExecuteClick : this.closeModal}\r\n                        hideSave={this.props.Login.operation === 'copy' ? false : true}\r\n                        loginoperation={this.props.Login.operation === 'copy' ? false : true}\r\n                        operation={this.props.Login.operation}\r\n                        showValidate={this.props.Login.operation === \"preview\" ? true : false}\r\n                        screenName={this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\"}\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        onExecuteClick={this.onExecuteClick}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'copy' ?\r\n                            [{ \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"sregtemplatename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : this.props.Login.operation === \"preview\" ? this.mandatoryValidation() : []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={(event) => this.onInputOnChange(event)}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === 'copy' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormInput\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            name={\"sregtemplatename\"}\r\n                                            type=\"text\"\r\n                                            onChange={(event) => this.setState({ selectedRecord: { ...this.state.selectedRecord, sregtemplatename: event.target.value } })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            value={this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            maxLength={\"30\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                : this.props.Login.loadCustomSearchFilter ?\r\n                                    this.props.Login.seletedFilterComponent &&\r\n                                        this.props.Login.seletedFilterComponent.inputtype === 'frontendsearchfilter' ?\r\n                                        <KendoDatatoolFilter\r\n                                            filter={this.props.Login.kendoFilter}\r\n                                            handleFilterChange={this.handleFilterChange}\r\n                                            filterData={this.props.Login.lstPatient || []}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            fields={this.props.Login.fields || []}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        /> : <FilterQueryBuilder\r\n                                            fields={this.props.Login.fields || {}}\r\n                                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                                            tree={this.props.Login.awesomeTree}\r\n                                            config={this.props.Login.awesomeConfig}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            filterData={this.props.Login.lstPatient}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            handleExecuteClick={this.handleExecuteClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                           // static={true}\r\n                                        // controlMap={this.state.controlMap}\r\n                                        // dataState={this.state.dataState}\r\n                                        // dataStateChange={this.dataStateChange}\r\n                                        />\r\n                                    :\r\n                                    <DynamicSlideout\r\n                                        selectedRecord={this.props.Login.selectedRecord}\r\n                                        templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                            this.props.Login.masterData.selectedTemplate.jsondata}\r\n                                        handleChange={this.handleChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputChange={this.onNumericInputChange}\r\n                                        comboData={this.props.Login.comboData}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onDropFile={this.onDropFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                        defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        Login={this.props.Login}\r\n                                        custombuttonclick={this.custombuttonclick}\r\n                                        onNumericBlur={this.onNumericBlur}\r\n                                    />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    mandatoryValidation = () => {\r\n        const mandatoryFields = []\r\n        const selectedRecord = this.state.selectedRecord;\r\n        this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate.jsondata.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ?\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.mandatory === true) {\r\n                                    if (componentrow.recordbasedshowhide) {\r\n                                        if (this.state.selectedRecord[componentrow.parentLabel]\r\n                                            === componentrow.recordbasedhide) {\r\n                                            if (componentrow.inputtype === \"email\") {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                            } else {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                    \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"selectbox\" : \"textbox\"\r\n                                                })\r\n                                            }\r\n                                        }\r\n\r\n                                    } else {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                        } else {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    if (componentrow.inputtype === \"email\") {\r\n\r\n                                        selectedRecord[componentrow.label] &&\r\n                                            selectedRecord[componentrow.label] !== \"\" &&\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            })\r\n                            : component.mandatory === true ?\r\n                                component.recordbasedshowhide ?\r\n                                    this.state.selectedRecord[component.parentLabel]\r\n                                        === component.recordbasedhide ?\r\n                                        component.inputtype === \"email\" ?\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                            :\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                            }) : \"\" :\r\n                                    component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        })\r\n                                        :\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                : selectedRecord[component.label] ?\r\n                                    component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        }) : \"\" : \"\"\r\n                    })\r\n                })\r\n            })\r\n\r\n        return mandatoryFields;\r\n    }\r\n\r\n    onExecuteClick = () => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        const userInfo = this.props.Login.userInfo\r\n        const sampleRegistration = {}\r\n        sampleRegistration[\"jsondata\"] = {}\r\n        const dateList = []\r\n        const defaulttimezone = this.props.Login.defaultTimeZone\r\n\r\n        console.log(\"selected in execute:\", selectedRecord);\r\n\r\n        this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate.jsondata.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            return component.children.map(componentrow => {\r\n\r\n                                if (componentrow.inputtype === \"date\") {\r\n                                    if (componentrow.mandatory) {\r\n                                        sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\";\r\n                                    } else {\r\n                                        sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                            typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                            selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                    }\r\n                                    if (componentrow.timezone) {\r\n                                        sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                            { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n                                    }\r\n                                    dateList.push(componentrow.label)\r\n                                }\r\n\r\n                            })\r\n                            return sampleRegistration;\r\n                        }\r\n                        else {\r\n\r\n                            if (component.inputtype === \"date\") {\r\n                                if (component.mandatory) {\r\n                                    sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : new Date(), userInfo) :\r\n                                        selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\";\r\n                                } else {\r\n                                    sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                        typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                        selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n                                }\r\n                                if (component.timezone) {\r\n                                    sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                        { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                        defaulttimezone ? defaulttimezone : -1\r\n                                }\r\n                                dateList.push(component.label)\r\n                            }\r\n                            return sampleRegistration;\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n\r\n        const { dateconstraints, combinationunique } = this.getJsondata(this.props.Login.masterData.selectedTemplate.jsondata)\r\n\r\n        const inputParam = {\r\n            Registration: sampleRegistration,\r\n            DateList: dateList,\r\n            dateconstraints: dateconstraints,\r\n            userinfo: userInfo,\r\n            combinationunique: combinationunique,\r\n        }\r\n\r\n        this.props.validatePreview(inputParam);\r\n\r\n    }\r\n\r\n\r\n    getJsondata = (templatedata) => {\r\n\r\n        let dateconstraints = [];\r\n        let combinationunique = []\r\n        templatedata && templatedata.map(row =>\r\n            row.children && row.children.map(column => {\r\n                column.children && column.children.map(component => {\r\n                    if (component.hasOwnProperty('children')) {\r\n                        component.children.map(componentRow => {\r\n                            // componentRow.unique && sampleuniquevalidation.push({ [designProperties.LABEL]: componentRow.label });\r\n                            componentRow.unique && combinationunique.push({ [componentRow.label]: { [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label } })\r\n                            if (componentRow.inputtype === 'date') {\r\n                                // sampledatefields.push({ [designProperties.VALUE]: componentRow.label, dateonly: componentRow.dateonly || false });\r\n                                dateconstraints = componentRow.dateConstraintArraySQL ? [...componentRow.dateConstraintArraySQL, ...dateconstraints] : dateconstraints;\r\n                            }\r\n                            return null;\r\n                        })\r\n                    } else {\r\n                        component.unique && combinationunique.push({ [component.label]: { [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label } })\r\n                        if (component.inputtype === 'date') {\r\n                            dateconstraints = component.dateConstraintArraySQL ? [...component.dateConstraintArraySQL, ...dateconstraints] : dateconstraints;\r\n                        }\r\n                        return null;\r\n                    }\r\n                })\r\n            }\r\n            )\r\n        )\r\n        let jsondata = {\r\n            combinationunique,\r\n            dateconstraints,\r\n        }\r\n        return jsondata;\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { userRoleControlRights, controlMap, addTemplateId,\r\n            sampleTypeOptions, breadCrumbData, selectedSampleType,\r\n            editId, deleteId, approveID, copyID, selectedRecord, comboComponents,\r\n            previewId, withoutCombocomponent, kendoSkip, kendoTake,\r\n            awesomeConfig, awesomeTree, kendoFilter\r\n        } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            updateState = true;\r\n            addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\r\n            editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\r\n            deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\r\n            approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\r\n            copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\r\n            previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\r\n        }\r\n        if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsorter', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            breadCrumbData = sampleTypeOptions.length > 0 ? [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": sampleTypeOptions[0].label,\r\n                    \"item\": sampleTypeOptions[0]\r\n                }\r\n            ] : [];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\r\n            updateState = true;\r\n            breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\r\n            updateState = true;\r\n            comboComponents = this.props.Login.comboComponents\r\n        }\r\n        if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\r\n            updateState = true;\r\n            withoutCombocomponent = this.props.Login.withoutCombocomponent\r\n        }\r\n\r\n        // if (this.props.Login.kendoTake !== previousProps.Login.kendoTake) {\r\n        //     updateState = true;\r\n        //     kendoTake = this.props.Login.kendoTake\r\n        // }\r\n\r\n\r\n        if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, addTemplateId, sampleTypeOptions,\r\n                breadCrumbData, selectedSampleType,\r\n                editId, deleteId, approveID, copyID, selectedRecord,\r\n                comboComponents, previewId, withoutCombocomponent\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    filterComboChange = (comboData) => {\r\n        this.setState({ selectedSampleType: comboData })\r\n    }\r\n\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.reloadData()\r\n    }\r\n\r\n    closeModal = () => {\r\n        let updateInfo = {}\r\n        if (!this.props.Login.loadCustomSearchFilter) {\r\n            let loadEsign = this.props.Login.loadEsign;\r\n            let openModal = this.props.Login.openModal;\r\n            let openPortal = this.props.Login.openPortal;\r\n            let selectedRecord = this.props.Login.selectedRecord;\r\n            if (this.props.Login.loadEsign) {\r\n                if (this.props.Login.operation === \"delete\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                    openPortal = false;\r\n                    selectedRecord = {};\r\n\r\n                }\r\n                else {\r\n                    loadEsign = false;\r\n                    selectedRecord['esignpassword'] = \"\";\r\n                    selectedRecord['esigncomments'] = \"\";\r\n                    selectedRecord['esignreason']=\"\";\r\n                }\r\n            }\r\n            else {\r\n                openModal = false;\r\n                openPortal = false;\r\n                selectedRecord = {};\r\n            }\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, openPortal, loadEsign, selectedRecord, selectedId: null, design: [], selectedFieldRecord: {}, showConfirmAlert: false }\r\n                // data: {openModal, loadEsign, selectedRecord}\r\n            }\r\n        } else {\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadCustomSearchFilter: false, kendoSkip: 0,\r\n                    kendoTake: 5,\r\n                    kendoFilter: {\r\n                        logic: \"and\",\r\n                        filters: []\r\n                    },\r\n                    awesomeTree: undefined,\r\n                    awesomeConfig: undefined\r\n                }\r\n                // data: {openModal, loadEsign, selectedRecord}\r\n            }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    openModal = (ncontrolCode) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: \"copy\", ncontrolCode, selectedId: null,\r\n                openModal: true, screenName: this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let dataState = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let selectedId = null;\r\n        inputData['registrationtemplate'] =\r\n        {\r\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            sregtemplatename: this.state.selectedRecord['sregtemplatename'],\r\n            nsampletypecode:this.props.Login.masterData.selectedTemplate.nsampletypecode\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            searchRef: this.searchRef,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, operation: this.props.Login.operation,\r\n            saveType, formRef, selectedId, dataState\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApproveTemplate(\"delete\", deleteId));\r\n    }\r\n\r\n    deleteApproveTemplate = (operation, ncontrolCode) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const postParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const data=[]\r\n        const Layout = this.props.Login.masterData.selectedTemplate.jsondata\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    if(component.hasOwnProperty(\"children\") ){\r\n                    component.children.map(componentrow => {\r\n                        if(this.state.breadCrumbData[0].item.value===-1)\r\n                        componentrow['label']=componentrow.label+\"_child\"\r\n\r\n                            data.push(componentrow.label)\r\n                        \r\n                    })\r\n                }else{\r\n                    if( this.state.breadCrumbData[0].item.value===-1){\r\n                        component['label']=component.label+\"_child\"\r\n                        data.push(component.label)\r\n                    }else{\r\n                        data.push(component.label) \r\n                    }\r\n                }  \r\n                })\r\n            })\r\n        })\r\n\r\n\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            inputData: {\r\n                registrationtemplate: {\r\n                    sregtemplatename:this.props.Login.masterData.selectedTemplate.sregtemplatename,\r\n                    nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n                    jsonString: JSON.stringify(Layout),\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                dynamicFields:data,\r\n                nsampletypecode:this.state.breadCrumbData[0].item.value\r\n                \r\n            },\r\n            operation\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    operation: \"delete\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedSampleType) {\r\n            this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVALIABLE\" }));\r\n        }\r\n    }\r\n\r\n    getPreviewTemplate = (masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.selectedTemplate.jsondata\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        let childColumnList = {};\r\n        data.map(columnList => {\r\n            const val = this.comboChild(data, columnList, childColumnList, true);\r\n            data = val.data;\r\n            childColumnList = val.childColumnList\r\n        })\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord,\r\n            childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true)\r\n\r\n    }\r\n\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        //if (comboData) {\r\n        comboData[\"item\"] = {...comboData[\"item\"], \"pkey\":control.valuemember, \"nquerybuildertablecode\":control.nquerybuildertablecode,\r\n        \"source\": control.source};\r\n        selectedRecord[comboName] = comboData;\r\n\r\n        console.log(\"selected:\", selectedRecord, comboData, control, customName);\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\")\r\n\r\n            if (comboData) {\r\n                const inputParem = {\r\n                    child: control.child,\r\n                    source: control.source,\r\n                    primarykeyField: control.valuemember,\r\n                    value: comboData.value,\r\n                    item: comboData.item\r\n                }\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                    childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList])\r\n            } else {\r\n                let comboData = this.props.Login.comboData\r\n                const withoutCombocomponent = this.state.withoutCombocomponent || []\r\n                const inputParam = { control, comboComponents: this.state.comboComponents, withoutCombocomponent, selectedRecord, comboData }\r\n                const childParam = childComboClear(inputParam)\r\n                selectedRecord = childParam.selectedRecord\r\n                comboData = childParam.comboData\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord, comboData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onInputOnChange = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'toggle') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedRecord[event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        // this.saveComponentProperties()\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericBlur = (value, control) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (selectedRecord[control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedRecord[control.label] < parseFloat(control.max))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max)\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedRecord[control.label] > parseFloat(control.min))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord,withoutCombocomponent } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        if (this.props.Login.masterData.selectedTemplate.nsampletypecode === SampleType.CLINICALTYPE) {\r\n            const age = ageCalculate(dateValue);\r\n            const Age = withoutCombocomponent.filter(x => x.name === 'Age');\r\n            selectedRecord[Age[0].label] = age\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDrop = (value, type, oldVlaue) => {\r\n        const design = this.state.design;\r\n        let columns = design[0].children;\r\n        let designData = this.props.Login.ReactInputFields;\r\n        value = JSON.parse(value.fields);\r\n        value = { ...value, type: \"component\" }\r\n        let designDataIndex = designData.findIndex(item => item.label === value.label);\r\n        let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\r\n        let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\r\n\r\n        if (designDataIndex >= 0)\r\n            designData.splice(designDataIndex, 1);\r\n        if (firstIndex >= 0) {\r\n            if (type !== 1) {\r\n                columns[0].children.splice(firstIndex, 1);\r\n                // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[0].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n\r\n        } else if (type === 1) {\r\n            if (columns[0]) {\r\n                columns[0].children.push(value);\r\n            } else {\r\n                columns[0] = {\r\n                    id: \"1\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n\r\n                columns[0].children.push(value);\r\n            }\r\n        }\r\n        if (secondIndex >= 0) {\r\n            if (type !== 2) {\r\n                columns[1].splice(secondIndex, 1);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[1].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n        } else if (type === 2) {\r\n            if (columns[1]) {\r\n                columns[1].children.push(value);\r\n            } else {\r\n                columns[1] = {\r\n                    id: \"2\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n                columns[1].children.push(value);\r\n            }\r\n        }\r\n\r\n        // design.push(columns)\r\n        this.setState({ designData, design })\r\n    }\r\n\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, crudMaster,\r\n    getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate,\r\n    getPreviewTemplate, getChildValues,\r\n    getDynamicFilter, getDynamicFilterExecuteData, validateEsignCredential, validatePreview\r\n})(injectIntl(DynamicPreRegDesign))"]},"metadata":{},"sourceType":"module"}