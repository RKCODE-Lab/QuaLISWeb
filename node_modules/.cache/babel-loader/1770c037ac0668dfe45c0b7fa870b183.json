{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{constructOptionList,sortData}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getClientComboService(clientparam){return function(dispatch){if(clientparam.operation===\"create\"||clientparam.operation===\"update\"){var countryService=rsapi.post(\"country/getCountry\",{userinfo:clientparam.userInfo});var urlArray=[];var selectedId=null;if(clientparam.operation===\"create\"){urlArray=[countryService];}else{var _rsapi$post;var clientById=rsapi.post(\"client/getActiveClientById\",(_rsapi$post={},_defineProperty(_rsapi$post,clientparam.primaryKeyField,clientparam.masterData.selectedClient[clientparam.primaryKeyField]),_defineProperty(_rsapi$post,\"userinfo\",clientparam.userInfo),_rsapi$post));urlArray=[countryService,clientById];selectedId=clientparam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var country=[];var selectedRecord={};if(clientparam.operation===\"update\"){selectedRecord=response[1].data;country.push({\"value\":response[1].data[\"ncountrycode\"],\"label\":response[1].data[\"scountryname\"]});selectedRecord[\"ncountrycode\"]=country[0];}else{selectedRecord[\"ntransactionstatus\"]=1;}dispatch({type:DEFAULT_RETURN,payload:{countryList:response[0].data||[],selectedRecord:selectedRecord,openModal:true,operation:clientparam.operation,screenName:clientparam.screenName,ncontrolCode:clientparam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getClientDetail(client,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"client/getClientDetail\",{nclientcode:client.nclientcode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getClientDepartmentForAddEdit(screenName,operation,nclientcode,nclientdeptcode,ncontrolCode,userInfo){return function(dispatch){var urlArray=[];var selectedRecord={};if(operation===\"create\"){var Country=rsapi.post(\"/country/getCountry\",{\"userinfo\":userInfo});urlArray=[Country];}else{var _Country=rsapi.post(\"/country/getCountry\",{\"userinfo\":userInfo});var clientDepartmentByID=rsapi.post(\"/client/getClientDepartmentById\",{\"nclientcode\":nclientcode,\"nclientdeptcode\":nclientdeptcode,\"userinfo\":userInfo});urlArray=[_Country,clientDepartmentByID];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var countryCode=[];var countryMap=constructOptionList(response[0].data||[],\"ncountrycode\",\"scountryname\",undefined,undefined,true);var countryList=countryMap.get(\"OptionList\");if(operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"ncountrycode\"]={label:response[1].data[\"scountryname\"],value:response[1].data[\"ncountrycode\"]};}dispatch({type:DEFAULT_RETURN,payload:{Country:countryList,openChildModal:true,operation:operation,selectedRecord:operation===\"update\"?selectedRecord:{\"ntransactionstatus\":transactionStatus.ACTIVE,\"ndefaultstatus\":transactionStatus.YES},countryCode:countryCode,ncontrolCode:ncontrolCode,screenName:\"IDS_CLIENTDEPARTMENT\",loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getClientDeptContactDetails(inputParam){return function(dispatch){var Map={};Map[\"nclientcode\"]=inputParam.clientDepartment.nclientcode;Map[\"nclientdeptcode\"]=inputParam.clientDepartment.nclientdeptcode;Map[\"userinfo\"]=inputParam.userInfo;dispatch(initRequest(true));rsapi.post(\"/client/getClientContactByDepartment\",Map).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ClientContact:response.data,selectedClientDepartment:inputParam.clientDepartment});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getClientContactForAddEdit(fetchRecord){return function(dispatch){var urlArray=[];var selectedId=null;var ClientContactByID=rsapi.post(\"/client/getClientContactById\",{\"nclientcode\":fetchRecord.editRow.nclientcode,\"nclientdeptcode\":fetchRecord.editRow.nclientdeptcode,\"nclientcontactcode\":fetchRecord.editRow.nclientcontactcode,\"userinfo\":fetchRecord.userInfo});urlArray=[ClientContactByID];selectedId=fetchRecord.editRow.nclientcontactcode;dispatch(initRequest(true));Axios.all(urlArray).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:fetchRecord.operation,selectedRecord:fetchRecord.operation===\"update\"?response[0].data:undefined,defaultSite:fetchRecord.editRow.nclientdeptcode,ncontrolCode:fetchRecord.ncontrolCode,screenName:\"IDS_CONTACTDETAILS\",loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ClientAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","constructOptionList","sortData","intl","transactionStatus","getClientComboService","clientparam","dispatch","operation","countryService","post","userinfo","userInfo","urlArray","selectedId","clientById","primaryKeyField","masterData","selectedClient","primaryKeyValue","all","then","response","country","selectedRecord","data","push","type","payload","countryList","openModal","screenName","ncontrolCode","loading","catch","error","status","message","warn","getClientDetail","client","nclientcode","modalName","undefined","getClientDepartmentForAddEdit","nclientdeptcode","Country","clientDepartmentByID","countryCode","countryMap","get","label","value","openChildModal","ACTIVE","YES","formatMessage","id","getClientDeptContactDetails","inputParam","Map","clientDepartment","ClientContact","selectedClientDepartment","dataState","getClientContactForAddEdit","fetchRecord","ClientContactByID","editRow","nclientcontactcode","defaultSite"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, sortData } from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\n\r\nexport function getClientComboService(clientparam) {\r\n    return function (dispatch) {\r\n        if (clientparam.operation === \"create\" || clientparam.operation === \"update\") {\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: clientparam.userInfo });\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (clientparam.operation === \"create\") {\r\n\r\n                urlArray = [countryService];\r\n            }\r\n            else {\r\n                const clientById = rsapi.post(\"client/getActiveClientById\", { [clientparam.primaryKeyField]: clientparam.masterData.selectedClient[clientparam.primaryKeyField], \"userinfo\": clientparam.userInfo });\r\n\r\n                urlArray = [countryService, clientById];\r\n                selectedId = clientparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let country = [];\r\n                    let selectedRecord = {};\r\n                    if (clientparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n                    } else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n\r\n                            selectedRecord, openModal: true,\r\n                            operation: clientparam.operation, screenName: clientparam.screenName,\r\n                            ncontrolCode: clientparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\nexport function getClientDetail (client, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"client/getClientDetail\", {nclientcode:client.nclientcode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\nexport function getClientDepartmentForAddEdit(screenName, operation, nclientcode, nclientdeptcode, ncontrolCode, userInfo){\r\n    return function(dispatch){ \r\n    let urlArray = [];\r\n    let selectedRecord = {};\r\n\r\n    if (operation === \"create\") {\r\n        const Country = rsapi.post(\"/country/getCountry\", { \"userinfo\": userInfo });\r\n        urlArray = [Country];\r\n    }\r\n    else {\r\n\r\n        const Country = rsapi.post(\"/country/getCountry\", { \"userinfo\": userInfo });\r\n        const clientDepartmentByID = rsapi.post(\"/client/getClientDepartmentById\", { \"nclientcode\": nclientcode, \"nclientdeptcode\": nclientdeptcode ,\"userinfo\": userInfo});\r\n        urlArray = [Country, clientDepartmentByID];\r\n    }\r\n\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response => {\r\n\r\n            let countryCode = [];\r\n\r\n            const countryMap = constructOptionList(response[0].data || [], \"ncountrycode\",\r\n            \"scountryname\", undefined, undefined, true);\r\n\r\n            const countryList = countryMap.get(\"OptionList\");\r\n\r\n\r\n            if (operation === \"update\") {\r\n\r\n                selectedRecord = response[1].data;\r\n                selectedRecord[\"ncountrycode\"] = {\r\n                    label: response[1].data[\"scountryname\"],\r\n                    value: response[1].data[\"ncountrycode\"]\r\n                };\r\n            \r\n            }\r\n\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                Country: countryList, openChildModal:true, operation, \r\n                selectedRecord: operation === \"update\" ? selectedRecord : {\"ntransactionstatus\": transactionStatus.ACTIVE,\"ndefaultstatus\":transactionStatus.YES}, countryCode: countryCode, ncontrolCode,\r\n                screenName: \"IDS_CLIENTDEPARTMENT\", loading:false\r\n             }});\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: error.response.data }));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function getClientDeptContactDetails(inputParam){\r\n    return function(dispatch){ \r\n    let Map={};\r\n \r\n    Map[\"nclientcode\"]=inputParam.clientDepartment.nclientcode;\r\n    Map[\"nclientdeptcode\"]=inputParam.clientDepartment.nclientdeptcode;\r\n    Map[\"userinfo\"]=inputParam.userInfo;\r\n    dispatch(initRequest(true));\r\n    rsapi.post(\"/client/getClientContactByDepartment\",Map)\r\n    .then(response =>{          \r\n       let masterData = {...inputParam.masterData, ClientContact: response.data,\r\n            selectedClientDepartment:  inputParam.clientDepartment,\r\n            };     \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, loading:false, dataState: undefined}}); \r\n\r\n    })\r\n    .catch(error =>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n    })\r\n}\r\n}\r\nexport function getClientContactForAddEdit(fetchRecord){\r\n    return function(dispatch){ \r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    const ClientContactByID = rsapi.post(\"/client/getClientContactById\", { \"nclientcode\": fetchRecord.editRow.nclientcode, \"nclientdeptcode\": fetchRecord.editRow.nclientdeptcode, \"nclientcontactcode\": fetchRecord.editRow.nclientcontactcode,\"userinfo\": fetchRecord.userInfo });\r\n    urlArray = [ClientContactByID];\r\n    selectedId = fetchRecord.editRow.nclientcontactcode;\r\n\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response => {            \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                openChildModal:true, operation:fetchRecord.operation, \r\n                selectedRecord: fetchRecord.operation === \"update\" ? response[0].data : undefined,\r\n          defaultSite: fetchRecord.editRow.nclientdeptcode, ncontrolCode:fetchRecord.ncontrolCode ,\r\n          screenName: \"IDS_CONTACTDETAILS\", loading:false, selectedId\r\n        }});\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: error.response.data }));\r\n            }\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}