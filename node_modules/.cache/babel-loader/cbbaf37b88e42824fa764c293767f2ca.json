{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{intl}from'../../components/App';import{MediaHeader,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import TestPopOver from'./TestPopOver';var ResultEntryInstrumentForm=function ResultEntryInstrumentForm(props){var stestsynonyms=props.selecteRecord.stestsynonym?props.selecteRecord.stestsynonym.split(\",\"):[];var message=\"\".concat(stestsynonyms.length,\" \").concat(props.intl.formatMessage({id:\"IDS_TESTS\"}),\" \").concat(props.intl.formatMessage({id:\"IDS_SELECTED\"}));return/*#__PURE__*/React.createElement(React.Fragment,null,Object.values(props.selecteRecord).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},stestsynonyms.length===1?\"\".concat(props.intl.formatMessage({id:\"IDS_TEST\"}),\": \").concat(stestsynonyms[0]):/*#__PURE__*/ // <span \n//     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\n//     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\n//     title={stestsynonyms}>\n//     {stestsynonyms.length}{\" \"}\n//     {props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\n//     {props.intl.formatMessage({id:\"IDS_SELECTED\"})}\n// </span>\nReact.createElement(TestPopOver,{stringList:stestsynonyms,message:message}))))):\"\",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\"// placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\n,isMandatory:true,label:props.intl.formatMessage({id:\"IDS_PREANALYSISTIME\"}),value:Object.values(props.selecteRecord).length>0?props.selecteRecord.spreanalysistime:\"\",strict:true,maxLength:6,noStyle:true,required:true,className:\"form-control\",onChange:function onChange(event){return props.onNumericChange(event,\"spreanalysistime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\n,label:props.intl.formatMessage({id:\"IDS_PREPARATIONTIME\"}),value:Object.values(props.selecteRecord).length>0?props.selecteRecord.spreparationtime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return props.onNumericChange(event,\"spreparationtime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\n,label:props.intl.formatMessage({id:\"IDS_ANALYSISTIME\"}),value:Object.values(props.selecteRecord).length>0?props.selecteRecord.sanalysistime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return props.onNumericChange(event,\"sanalysistime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"numeric\",type:\"number\",isMandatory:true// placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\n,label:props.intl.formatMessage({id:\"IDS_MISCTIME\"}),value:Object.values(props.selecteRecord).length>0?props.selecteRecord.smisctime:\"\",strict:true,maxLength:6,noStyle:true,className:\"form-control\",onChange:function onChange(event){return props.onNumericChange(event,\"smisctime\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\"},props.intl.formatMessage({id:\"IDS_MINUTES\"})))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormTextarea,{name:\"Result\",placeholder:intl.formatMessage({id:\"IDS_COMMENTS\"}),label:intl.formatMessage({id:\"IDS_COMMENTS\"}),type:\"text\",defaultValue:Object.values(props.selecteRecord).length>0?props.selecteRecord.scomments:\"\",isMandatory:false,required:false,maxLength:100,onChange:function onChange(event){return props.onInputChange(event,\"scomments\");}}))));};export default injectIntl(ResultEntryInstrumentForm);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskForm.jsx"],"names":["React","Row","Col","injectIntl","intl","MediaHeader","MediaLabel","ListWrapper","FormNumericInput","FormTextarea","TestPopOver","ResultEntryInstrumentForm","props","stestsynonyms","selecteRecord","stestsynonym","split","message","length","formatMessage","id","Object","values","spreanalysistime","event","onNumericChange","spreparationtime","sanalysistime","smisctime","scomments","onInputChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { intl } from '../../components/App';\r\nimport { MediaHeader, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport TestPopOver from './TestPopOver';\r\nconst ResultEntryInstrumentForm = (props) => {\r\n    let stestsynonyms = props.selecteRecord.stestsynonym ? props.selecteRecord.stestsynonym.split(\",\") : []\r\n\r\n    let message= `${stestsynonyms.length} ${props.intl.formatMessage({ id: \"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n      return (\r\n        <>\r\n            \r\n            {Object.values(props.selecteRecord).length > 0 ?\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>\r\n                                {stestsynonyms.length === 1 ?\r\n                                        `${props.intl.formatMessage({id:\"IDS_TEST\"})}: ${stestsynonyms[0] }`:\r\n                                        // <span \r\n                                        //     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\r\n                                        //     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\r\n                                        //     title={stestsynonyms}>\r\n                                        //     {stestsynonyms.length}{\" \"}\r\n                                        //     {props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\r\n                                        //     {props.intl.formatMessage({id:\"IDS_SELECTED\"})}\r\n                                        // </span>\r\n                                        <TestPopOver stringList={stestsynonyms} message={message}></TestPopOver>\r\n\r\n                                }\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                : \"\"}\r\n\r\n            <Row>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                        isMandatory={true}\r\n                        label={props.intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreanalysistime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        required={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"spreanalysistime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true}\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreparationtime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"spreparationtime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true}\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.sanalysistime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"sanalysistime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true} \r\n                        // placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.smisctime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"smisctime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormTextarea\r\n                        name={\"Result\"}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        label={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        type=\"text\"\r\n                        defaultValue={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.scomments : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        onChange={(event) => props.onInputChange(event, \"scomments\")}\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ResultEntryInstrumentForm);\r\n"]},"metadata":{},"sourceType":"module"}