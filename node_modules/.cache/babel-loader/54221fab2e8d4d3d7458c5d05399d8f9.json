{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isImmutableTree = exports.getTree = exports.checkTree = void 0;\nObject.defineProperty(exports, \"isJsonLogic\", {\n  enumerable: true,\n  get: function get() {\n    return _stuff.isJsonLogic;\n  }\n});\nexports.loadTree = exports.isValidTree = exports.isTree = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _immutable = _interopRequireWildcard(require(\"immutable\"));\n\nvar _validation = require(\"../utils/validation\");\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _treeUtils = require(\"../utils/treeUtils\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar getTree = function getTree(immutableTree) {\n  var light = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!immutableTree) return undefined;\n  var tree = immutableTree;\n  tree = tree.toJS();\n  if (light) tree = (0, _treeUtils.getLightTree)(tree);\n  return tree;\n};\n\nexports.getTree = getTree;\n\nvar loadTree = function loadTree(serTree) {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexports.loadTree = loadTree;\n\nvar checkTree = function checkTree(tree, config) {\n  if (!tree) return undefined;\n  var extendedConfig = (0, _configUtils.extendConfig)(config);\n  return (0, _validation.validateTree)(tree, null, extendedConfig, extendedConfig, true, true);\n};\n\nexports.checkTree = checkTree;\n\nvar isValidTree = function isValidTree(tree) {\n  return (0, _treeUtils.getTreeBadFields)(tree).length == 0;\n};\n\nexports.isValidTree = isValidTree;\n\nvar isImmutableTree = function isImmutableTree(tree) {\n  return _immutable.Map.isMap(tree);\n};\n\nexports.isImmutableTree = isImmutableTree;\n\nvar isTree = function isTree(tree) {\n  return (0, _typeof2[\"default\"])(tree) == \"object\" && tree.type == \"group\";\n};\n\nexports.isTree = isTree;\n\nfunction jsTreeToImmutable(tree) {\n  return (0, _immutable.fromJS)(tree, function (key, value) {\n    var outValue;\n\n    if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      var valueJs = value.get(0).toJS();\n\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = _immutable[\"default\"].List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else {\n      outValue = _immutable[\"default\"].Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n\n    return outValue;\n  });\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/import/tree.js"],"names":["_interopRequireDefault","require","_typeof3","Object","defineProperty","exports","value","isImmutableTree","getTree","checkTree","enumerable","get","_stuff","isJsonLogic","loadTree","isValidTree","isTree","_typeof2","_immutable","_interopRequireWildcard","_validation","_configUtils","_treeUtils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","immutableTree","light","arguments","length","undefined","tree","toJS","getLightTree","serTree","jsTreeToImmutable","startsWith","JSON","parse","config","extendedConfig","extendConfig","validateTree","getTreeBadFields","Map","isMap","type","fromJS","outValue","valueJs","func","toOrderedMap","List","of","Iterable","isIndexed","toList"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isImmutableTree = exports.getTree = exports.checkTree = void 0;\nObject.defineProperty(exports, \"isJsonLogic\", {\n  enumerable: true,\n  get: function get() {\n    return _stuff.isJsonLogic;\n  }\n});\nexports.loadTree = exports.isValidTree = exports.isTree = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _immutable = _interopRequireWildcard(require(\"immutable\"));\n\nvar _validation = require(\"../utils/validation\");\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _treeUtils = require(\"../utils/treeUtils\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getTree = function getTree(immutableTree) {\n  var light = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!immutableTree) return undefined;\n  var tree = immutableTree;\n  tree = tree.toJS();\n  if (light) tree = (0, _treeUtils.getLightTree)(tree);\n  return tree;\n};\n\nexports.getTree = getTree;\n\nvar loadTree = function loadTree(serTree) {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexports.loadTree = loadTree;\n\nvar checkTree = function checkTree(tree, config) {\n  if (!tree) return undefined;\n  var extendedConfig = (0, _configUtils.extendConfig)(config);\n  return (0, _validation.validateTree)(tree, null, extendedConfig, extendedConfig, true, true);\n};\n\nexports.checkTree = checkTree;\n\nvar isValidTree = function isValidTree(tree) {\n  return (0, _treeUtils.getTreeBadFields)(tree).length == 0;\n};\n\nexports.isValidTree = isValidTree;\n\nvar isImmutableTree = function isImmutableTree(tree) {\n  return _immutable.Map.isMap(tree);\n};\n\nexports.isImmutableTree = isImmutableTree;\n\nvar isTree = function isTree(tree) {\n  return (0, _typeof2[\"default\"])(tree) == \"object\" && tree.type == \"group\";\n};\n\nexports.isTree = isTree;\n\nfunction jsTreeToImmutable(tree) {\n  return (0, _immutable.fromJS)(tree, function (key, value) {\n    var outValue;\n\n    if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      var valueJs = value.get(0).toJS();\n\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = _immutable[\"default\"].List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else {\n      outValue = _immutable[\"default\"].Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n\n    return outValue;\n  });\n}"]},"metadata":{},"sourceType":"script"}