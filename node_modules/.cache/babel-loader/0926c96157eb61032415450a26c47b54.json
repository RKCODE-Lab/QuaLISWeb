{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{intl}from'../../components/App';import{injectIntl}from'react-intl';import{MediaHeader}from'../../components/App.styles';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddMaterialIqc=function AddMaterialIqc(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_MATERIALTYPE\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nmaterialtypecode\",isDisabled:true,isMandatory:true//options={props.materialType || []}\n,value:props.selectedMaterialType?props.selectedMaterialType:\"\",showOption:true,required:true// onChange={(event) => props.onMaterialComboChange(event, 'nmaterialtypecode')}\n,isMulti:false,closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_MATERIALCATEGORY\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nmaterialcatcode\",isDisabled:false,isMandatory:true,options:props.materialCategory||[],value:props.selectedMaterialCategory?props.selectedMaterialCategory:\"\",showOption:true,required:true,onChange:function onChange(event){return props.onComboChange(event,'smaterialcatname');},isMulti:false,closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_MATERIAL\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nmaterialcode\",isDisabled:false,isMandatory:true,options:props.material||[],value:props.selectedMaterial?props.selectedMaterial:\"\",showOption:true,required:true,onChange:function onChange(event){return props.onComboChange(event,'smaterialname');},isMulti:false,closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_MATERIALINVENTORY\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nmaterialinventorycode\",isDisabled:false,isMandatory:true,options:props.materialInventory||[],value:props.selectedMaterialInventory?props.selectedMaterialInventory:\"\",showOption:true,required:true,onChange:function onChange(event){return props.onComboChange(event,'sinventoryid');},isMulti:false,closeMenuOnSelect:true})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_AVAILABLEQUANTITY\"}),name:\"savailablequantity\",type:\"text\",maxLength:\"100\",isMandatory:true,value:props.selectedInventoryUnit!=null?props.selectedInventoryUnit[\"savailablequatity\"]:\"\"//onChange={(event) => props.onInputOnChange(event)}\n,placeholder:props.intl.formatMessage({id:\"IDS_AVAILABLEQUANTITY\"}),isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_USEDQTY\"}),name:\"susedquantity\",type:\"text\",maxLength:\"100\",isMandatory:true//value={props.selectedRecord[\"susedquantity\"] || []}\n,onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_USEDQTY\"})})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_UNIT\"}),name:\"sunitname\",type:\"text\",maxLength:\"100\",isMandatory:true,value:props.selectedInventoryUnit!=null?props.selectedInventoryUnit[\"sunitname\"]:\"\"//onChange={(event) => props.onInputOnChange(event)}\n,placeholder:props.intl.formatMessage({id:\"IDS_UNIT\"}),isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),name:\"sremarks\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"})//value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\n,isMandatory:false,required:false,maxLength:255,row:2}))))));};export default injectIntl(AddMaterialIqc);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/AddMaterialIqc.jsx"],"names":["React","Row","Col","FormSelectSearch","intl","injectIntl","MediaHeader","FormInput","FormTextarea","AddMaterialIqc","props","formatMessage","id","selectedMaterialType","materialCategory","selectedMaterialCategory","event","onComboChange","material","selectedMaterial","materialInventory","selectedMaterialInventory","selectedInventoryUnit","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { intl } from '../../components/App';\r\nimport { injectIntl } from 'react-intl';\r\nimport { MediaHeader } from '../../components/App.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddMaterialIqc = (props) => {\r\n    return (\r\n        <>\r\n            {/* {Object.values(props.selectedRecord).length > 0 ?\r\n                <Row className=\"mb-4\">\r\n                    {props.needSubSample ?\r\n\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_SAMPLEARNO\" })}: {\" \" + props.selectedRecord.ssamplearno}</MediaHeader>\r\n                        </Col>\r\n                        :\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_ARNO\" })}: {\" \" + props.selectedRecord.sarno}</MediaHeader>\r\n                        </Col>\r\n                    }\r\n                    <Col md={12}>\r\n                        <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_TEST\" })}: {\" \" + props.selectedRecord.stestsynonym}</MediaHeader>\r\n                    </Col>\r\n                </Row>\r\n                : \"\"} */}\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={intl.formatMessage({ id: \"IDS_MATERIALTYPE\" })}\r\n                                placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isSearchable={false}\r\n                                name={\"nmaterialtypecode\"}\r\n                                isDisabled={true}\r\n                                isMandatory={true}\r\n                                //options={props.materialType || []}\r\n                                value={props.selectedMaterialType ? props.selectedMaterialType : \"\"}\r\n                                showOption={true}\r\n                                required={true}\r\n                               // onChange={(event) => props.onMaterialComboChange(event, 'nmaterialtypecode')}\r\n                                isMulti={false}\r\n                                closeMenuOnSelect={true}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={intl.formatMessage({ id: \"IDS_MATERIALCATEGORY\" })}\r\n                                placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isSearchable={false}\r\n                                name={\"nmaterialcatcode\"}\r\n                                isDisabled={false}\r\n                                isMandatory={true}\r\n                                options={props.materialCategory || []}\r\n                                value={props.selectedMaterialCategory ? props.selectedMaterialCategory : \"\"}\r\n                                showOption={true}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, 'smaterialcatname')}\r\n                                isMulti={false}\r\n                                closeMenuOnSelect={true}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isSearchable={false}\r\n                                name={\"nmaterialcode\"}\r\n                                isDisabled={false}\r\n                                isMandatory={true}\r\n                                options={props.material || []}\r\n                                value={props.selectedMaterial ? props.selectedMaterial : \"\"}\r\n                                showOption={true}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, 'smaterialname')}\r\n                                isMulti={false}\r\n                                closeMenuOnSelect={true}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={intl.formatMessage({ id: \"IDS_MATERIALINVENTORY\" })}\r\n                                placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isSearchable={false}\r\n                                name={\"nmaterialinventorycode\"}\r\n                                isDisabled={false}\r\n                                isMandatory={true}\r\n                                options={props.materialInventory || []}\r\n                                value={props.selectedMaterialInventory ? props.selectedMaterialInventory : \"\"}\r\n                                showOption={true}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, 'sinventoryid')}\r\n                                isMulti={false}\r\n                                closeMenuOnSelect={true}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_AVAILABLEQUANTITY\" })}\r\n                                name=\"savailablequantity\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={true}\r\n                                value={props.selectedInventoryUnit != null ? props.selectedInventoryUnit[\"savailablequatity\"] :\"\"}\r\n                                //onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_AVAILABLEQUANTITY\" })}\r\n                                isDisabled={true}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_USEDQTY\" })}\r\n                                name=\"susedquantity\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={true}\r\n                                //value={props.selectedRecord[\"susedquantity\"] || []}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_USEDQTY\" })}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                                name=\"sunitname\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={true}\r\n                                value={props.selectedInventoryUnit != null ? props.selectedInventoryUnit[\"sunitname\"] :\"\"}\r\n                                //onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                                isDisabled={true}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                name=\"sremarks\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                //value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                                row={2}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(AddMaterialIqc);\r\n"]},"metadata":{},"sourceType":"module"}