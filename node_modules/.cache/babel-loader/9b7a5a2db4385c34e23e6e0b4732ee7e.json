{"ast":null,"code":"import { initRequest } from \"./LoginAction\";\nimport rsapi from \"../rsapi\";\nimport { sortData, getComboLabelValue } from \"../components/CommonScript\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { toast } from 'react-toastify';\nimport Axios from \"axios\";\nimport { constructOptionList } from \"../components/CommonScript\";\nimport { intl } from '../components/App';\nimport { attachmentType, transactionStatus } from \"../components/Enumeration\";\nexport function getInstitutionDetail(institution, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"institution/getSelectedInstitutionDetail\", {\n      ninstitutioncode: institution.ninstitutioncode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getInstitutionCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (masterData.SelectedInstitutionCategory !== null) {\n      let urlArray = [];\n      const InstitutionCategory = rsapi.post(\"/institution/getInstitutionCategory\", {\n        \"userinfo\": userInfo\n      });\n\n      if (operation === \"create\") {\n        urlArray = [InstitutionCategory];\n      } else {\n        const Institution = rsapi.post(\"/institution/getActiveInstitutionById\", {\n          [primaryKeyName]: masterData.selectedInstitution[primaryKeyName],\n          \"userinfo\": userInfo\n        });\n        urlArray = [InstitutionCategory, Institution];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {};\n        const institutioncategoryMap = constructOptionList(response[0].data || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", undefined, undefined, false);\n        const InstitutionCategory = institutioncategoryMap.get(\"OptionList\");\n        selectedRecord = {\n          \"ninstitutioncatcode\": {\n            \"value\": masterData.SelectedInstitutionCategory.ninstitutioncatcode,\n            \"label\": masterData.SelectedInstitutionCategory.sinstitutioncatname\n          }\n        };\n        let institutionCategory = [];\n\n        if (operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"ninstitutioncatcode\"] = {\n            label: selectedRecord.sinstitutioncatname,\n            value: selectedRecord.ninstitutioncatcode\n          };\n          institutionCategory.push({\n            \"value\": response[0].data[\"ninstitutioncatcode\"],\n            \"label\": response[0].data[\"sinstitutioncatname\"]\n          }); //selectedRecord[\"ninstitutioncatcode\"] = institutionCategory[0];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            InstitutionCategory,\n            isOpen: true,\n            selectedRecord: selectedRecord,\n            operation: operation,\n            screenName: screenName,\n            openModal: true,\n            ncontrolCode: ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_CONFIGINSTITUTIONCATAGORY\"\n      }));\n    }\n  };\n}\nexport const getInstitutionSiteData = methodParam => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let url = '';\n    let urlArray = [];\n    let selectedRecord = {};\n    const institutionSiteService = rsapi.post(\"institution/getInstitutionSiteCombo\", {\n      userinfo: methodParam.userInfo\n    }); // url = \"/institution/getInstitutionSiteCombo\";\n    // return rsapi.post(url, {\"userinfo\": methodParam.userInfo})\n\n    if (methodParam.operation === \"create\") {\n      urlArray = [institutionSiteService];\n    } else {\n      const url = methodParam.inputParam.classUrl + \"/getActiveInstitutionSiteById\";\n      const institutionSiteById = rsapi.post(url, {\n        \"ninstitutioncode\": methodParam.instItem.ninstitutioncode,\n        [methodParam.primaryKeyField]: methodParam.primaryKeyValue,\n        \"userinfo\": methodParam.userInfo\n      });\n      const cityService = rsapi.post(\"institution/getCity\", {\n        \"ndistrictcode\": methodParam.editRow.ndistrictcode,\n        \"userinfo\": methodParam.userInfo\n      });\n      const districtService = rsapi.post(\"institution/getDistrict\", {\n        \"nregioncode\": methodParam.editRow.nregioncode,\n        \"userinfo\": methodParam.userInfo\n      });\n      urlArray = [institutionSiteService, institutionSiteById, cityService, districtService]; //selectedId = methodParam.primaryKeyValue;\n    }\n\n    Axios.all(urlArray).then(response => {\n      let cityMap = [];\n      let districtMap = [];\n      let cityList = [];\n      let districtList = [];\n      const siteMap = constructOptionList(response[0].data.Site || [], \"nsitecode\", \"ssitename\", undefined, undefined, false);\n      const regionMap = constructOptionList(response[0].data.Region || [], \"nregioncode\", \"sregionname\", undefined, undefined, false);\n      const countryMap = constructOptionList(response[0].data.Country || [], \"ncountrycode\", \"scountryname\", undefined, undefined, false);\n\n      if (methodParam.operation === \"update\") {\n        cityMap = constructOptionList(response[2].data.cityList || [], \"ncitycode\", \"scityname\", undefined, undefined, false);\n        districtMap = constructOptionList(response[3].data.districtList || [], \"ndistrictcode\", \"sdistrictname\", undefined, undefined, false);\n        cityList = cityMap.get(\"OptionList\");\n        districtList = districtMap.get(\"OptionList\");\n      }\n\n      const Site = siteMap.get(\"OptionList\");\n      const Region = regionMap.get(\"OptionList\");\n      const Country = countryMap.get(\"OptionList\");\n\n      if (methodParam.operation === \"update\") {\n        selectedRecord = response[1].data;\n        selectedRecord[\"ncountrycode\"] = getComboLabelValue(selectedRecord, response[0].data.Country, \"ncountrycode\", \"scountryname\");\n        selectedRecord[\"ndistrictcode\"] = getComboLabelValue(selectedRecord, response[3].data.districtList, \"ndistrictcode\", \"sdistrictname\");\n        selectedRecord[\"ncitycode\"] = getComboLabelValue(selectedRecord, response[2].data.cityList, \"ncitycode\", \"scityname\");\n        selectedRecord[\"nsitecode\"] = {\n          \"label\": selectedRecord.ssitename,\n          \"value\": selectedRecord.nregionalsitecode\n        };\n        selectedRecord[\"nregioncode\"] = getComboLabelValue(selectedRecord, response[0].data.Region, \"nregioncode\", \"sregionname\");\n      } else {\n        selectedRecord = methodParam.selectedRecord;\n        selectedRecord[\"nsitecode\"] = siteMap.get(\"DefaultValue\");\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          cityList,\n          districtList,\n          Site,\n          Region,\n          Country,\n          isOpen: true,\n          selectedRecord,\n          operation: methodParam.operation,\n          screenName: methodParam.screenName,\n          //openModal: true,\n          ncontrolCode: methodParam.ncontrolCode,\n          instItem: methodParam.instItem,\n          loading: false,\n          openChildModal: true,\n          selectedId: methodParam.primaryKeyValue // displayName: methodParam.screenName\n\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 417) {\n        toast.info(error.response.data);\n      } else {\n        toast.error(error.message);\n      }\n    });\n  };\n};\nexport const addInstitutionFile = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/institution/getInstitutionFileById\", {\n        userinfo: inputParam.userInfo,\n        institutionfile: inputParam.selectedRecord\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sfiledesc,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename\n          };\n        }\n\n        selectedRecord = { ...link,\n          ninstitutionfilecode: editObject.ninstitutionfilecode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          sfiledesc: editObject.sfiledesc,\n          //...editObject,\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          [inputParam.modalName]: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          // openModal: true\n          openChildModal: true,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport const changeInstitutionCategoryFilter = (inputParam, FilterInstitutionCategory, defaultInstitutionCategory) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/institution/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = response.data;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData,\n            FilterInstitutionCategory,\n            defaultInstitutionCategory,\n            SelectedInstitutionCategory: defaultInstitutionCategory\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport function getDistComboServices(methodParam) {\n  return function (dispatch) {\n    let URL = [];\n    URL = rsapi.post(\"/institution/getDistrict\", {\n      \"userinfo\": methodParam.inputData.userinfo,\n      \"nregioncode\": methodParam.inputData.primarykey\n    });\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      let districtList;\n      const districtMap = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\", \"sdistrictname\", undefined, undefined, false);\n      districtList = districtMap.get(\"OptionList\");\n      const cityList = undefined;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          districtList,\n          loading: false,\n          data: undefined,\n          dataState: undefined,\n          cityList\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getCitComboServices(methodParam) {\n  return function (dispatch) {\n    let URL = [];\n    URL = rsapi.post(\"/institution/getCity\", {\n      \"userinfo\": methodParam.inputData.userinfo,\n      \"ndistrictcode\": methodParam.inputData.primarykey\n    });\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      const cityMap = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\", \"scityname\", undefined, undefined, false);\n      const cityList = cityMap.get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          cityList,\n          loading: false,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/InstitutionAction.js"],"names":["initRequest","rsapi","sortData","getComboLabelValue","DEFAULT_RETURN","toast","Axios","constructOptionList","intl","attachmentType","transactionStatus","getInstitutionDetail","institution","userInfo","masterData","dispatch","post","ninstitutioncode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getInstitutionCombo","screenName","primaryKeyName","ncontrolCode","SelectedInstitutionCategory","urlArray","InstitutionCategory","Institution","selectedInstitution","all","selectedRecord","institutioncategoryMap","get","ninstitutioncatcode","sinstitutioncatname","institutionCategory","label","value","push","isOpen","openModal","formatMessage","id","getInstitutionSiteData","methodParam","url","institutionSiteService","inputParam","classUrl","institutionSiteById","instItem","primaryKeyField","primaryKeyValue","cityService","editRow","ndistrictcode","districtService","nregioncode","cityMap","districtMap","cityList","districtList","siteMap","Site","regionMap","Region","countryMap","Country","ssitename","nregionalsitecode","openChildModal","selectedId","info","addInstitutionFile","institutionfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sfiledesc","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","length","ninstitutionfilecode","AttachmentType","FTP","linkMaster","showSaveContinue","editFiles","changeInstitutionCategoryFilter","FilterInstitutionCategory","defaultInstitutionCategory","methodUrl","inputData","getDistComboServices","URL","primarykey","dataState","getCitComboServices"],"mappings":"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","sourcesContent":["import { initRequest } from \"./LoginAction\";\r\nimport rsapi from \"../rsapi\";\r\nimport { sortData,getComboLabelValue } from \"../components/CommonScript\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { toast } from 'react-toastify';\r\nimport Axios from \"axios\";\r\nimport { constructOptionList } from \"../components/CommonScript\";\r\nimport { intl} from '../components/App';\r\nimport { attachmentType,transactionStatus } from \"../components/Enumeration\";\r\n\r\nexport function getInstitutionDetail (institution, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"institution/getSelectedInstitutionDetail\", {ninstitutioncode:institution.ninstitutioncode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\nexport function getInstitutionCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (masterData.SelectedInstitutionCategory!==null) {\r\n        let urlArray = [];\r\n        const InstitutionCategory = rsapi.post(\"/institution/getInstitutionCategory\", {\"userinfo\": userInfo});\r\n        if (operation === \"create\") {\r\n            urlArray = [InstitutionCategory];\r\n\r\n        } else {\r\n            const Institution = rsapi.post(\"/institution/getActiveInstitutionById\", {\r\n                [primaryKeyName]: masterData.selectedInstitution[primaryKeyName],\r\n                \"userinfo\": userInfo\r\n            });\r\n            urlArray = [InstitutionCategory,Institution];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord ={};\r\n                const institutioncategoryMap = constructOptionList(response[0].data || [], \"ninstitutioncatcode\",\r\n                    \"sinstitutioncatname\", undefined, undefined, false);        \r\n\r\n                const InstitutionCategory = institutioncategoryMap.get(\"OptionList\");              \r\n\r\n                 selectedRecord = {\"ninstitutioncatcode\": {\r\n                            \"value\": masterData.SelectedInstitutionCategory.ninstitutioncatcode,\r\n                             \"label\": masterData.SelectedInstitutionCategory.sinstitutioncatname\r\n                         }};                \r\n                let institutionCategory = [];\r\n                if (operation === \"update\") {\r\n                    selectedRecord = response[1].data;\r\n                    selectedRecord[\"ninstitutioncatcode\"] ={label:selectedRecord.sinstitutioncatname,value:selectedRecord.ninstitutioncatcode}\r\n                    institutionCategory.push({\r\n                        \"value\": response[0].data[\"ninstitutioncatcode\"],\r\n                        \"label\": response[0].data[\"sinstitutioncatname\"]\r\n                    });\r\n                    //selectedRecord[\"ninstitutioncatcode\"] = institutionCategory[0];\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        InstitutionCategory,                       \r\n                        isOpen: true,\r\n                        selectedRecord: selectedRecord,\r\n                        operation: operation,\r\n                        screenName: screenName,\r\n                        openModal: true,\r\n                        ncontrolCode: ncontrolCode,\r\n                        loading: false\r\n                       \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONCATAGORY\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getInstitutionSiteData = (methodParam) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let url = ''\r\n        let urlArray = [];\r\n        let selectedRecord = {};\r\n        const institutionSiteService = rsapi.post(\"institution/getInstitutionSiteCombo\",{userinfo:methodParam.userInfo});\r\n\r\n        // url = \"/institution/getInstitutionSiteCombo\";\r\n\r\n        // return rsapi.post(url, {\"userinfo\": methodParam.userInfo})\r\n        if(methodParam.operation === \"create\"){\r\n            urlArray=[institutionSiteService];\r\n        }else{\r\n            const url = methodParam.inputParam.classUrl+ \"/getActiveInstitutionSiteById\";       \r\n            const institutionSiteById =  rsapi.post(url, {\"ninstitutioncode\":methodParam.instItem.ninstitutioncode, [methodParam.primaryKeyField] :methodParam.primaryKeyValue, \"userinfo\": methodParam.userInfo} );\r\n            const cityService =  rsapi.post(\"institution/getCity\", {\"ndistrictcode\":methodParam.editRow.ndistrictcode,  \"userinfo\": methodParam.userInfo} );\r\n            const districtService =  rsapi.post(\"institution/getDistrict\", {\"nregioncode\":methodParam.editRow.nregioncode,  \"userinfo\": methodParam.userInfo} );\r\n            urlArray = [institutionSiteService, institutionSiteById,cityService,districtService];\r\n            //selectedId = methodParam.primaryKeyValue;\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n              let cityMap=[];\r\n              let districtMap=[];\r\n              let cityList=[];\r\n              let districtList=[];\r\n                const siteMap = constructOptionList(response[0].data.Site || [], \"nsitecode\",\r\n                    \"ssitename\", undefined, undefined, false);                \r\n\r\n                const regionMap =    constructOptionList(response[0].data.Region || [], \"nregioncode\",\r\n                \"sregionname\", undefined, undefined, false);\r\n\r\n                const countryMap = constructOptionList(response[0].data.Country || [], \"ncountrycode\",\r\n                    \"scountryname\", undefined, undefined, false);\r\n                    if(methodParam.operation === \"update\"){\r\n               cityMap = constructOptionList(response[2].data.cityList || [], \"ncitycode\",\r\n                    \"scityname\", undefined, undefined, false);\r\n              districtMap = constructOptionList(response[3].data.districtList || [], \"ndistrictcode\",\r\n                    \"sdistrictname\", undefined, undefined, false);\r\n                    cityList = cityMap.get(\"OptionList\");\r\n                    districtList = districtMap.get(\"OptionList\");\r\n                    }\r\n                const Site = siteMap.get(\"OptionList\");\r\n                const Region = regionMap.get(\"OptionList\");               \r\n                const Country = countryMap.get(\"OptionList\");\r\n                \r\n\r\n                if(methodParam.operation === \"update\"){\r\n                    selectedRecord =response[1].data;\r\n                    selectedRecord[\"ncountrycode\"] = getComboLabelValue(selectedRecord, response[0].data.Country, \r\n                        \"ncountrycode\", \"scountryname\");  \r\n                        selectedRecord[\"ndistrictcode\"] = getComboLabelValue(selectedRecord, response[3].data.districtList, \r\n                            \"ndistrictcode\", \"sdistrictname\");\r\n                         selectedRecord[\"ncitycode\"] = getComboLabelValue(selectedRecord, response[2].data.cityList, \r\n                                \"ncitycode\", \"scityname\");\r\n                    selectedRecord[\"nsitecode\"] = {\"label\":selectedRecord.ssitename,\"value\":selectedRecord.nregionalsitecode}\r\n                    selectedRecord[\"nregioncode\"] = getComboLabelValue(selectedRecord, response[0].data.Region, \r\n                        \"nregioncode\", \"sregionname\");    \r\n                }else{\r\n                    selectedRecord =methodParam.selectedRecord;\r\n                    selectedRecord[\"nsitecode\"] = siteMap.get(\"DefaultValue\"); \r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        cityList,\r\n                        districtList,\r\n                        Site,\r\n                        Region,\r\n                        Country,\r\n                        isOpen: true,\r\n                        selectedRecord,\r\n                        operation: methodParam.operation,\r\n                        screenName: methodParam.screenName,\r\n                        //openModal: true,\r\n                        ncontrolCode: methodParam.ncontrolCode,\r\n                        instItem: methodParam.instItem,\r\n                        loading: false,openChildModal:true,\r\n                        selectedId:methodParam.primaryKeyValue,\r\n                       // displayName: methodParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 417) {\r\n                    toast.info(error.response.data)\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const addInstitutionFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/institution/getInstitutionFileById\", {\r\n                userinfo: inputParam.userInfo,\r\n                institutionfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename:editObject.sfilename,\r\n                            slinkdescription:editObject.sfiledesc,\r\n                            nlinkdefaultstatus:editObject.ndefaultstatus,\r\n                            sfilesize:'',\r\n                            nfilesize:0,\r\n                            ndefaultstatus:4,\r\n                            sfilename:'',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename:'',\r\n                            slinkdescription:'',\r\n                            nlinkdefaultstatus:4,\r\n                            sfilesize:editObject.sfilesize,\r\n                            nfilesize:editObject.nfilesize,\r\n                            ndefaultstatus:editObject.ndefaultstatus,\r\n                            sfilename:editObject.sfilename,\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        ninstitutionfilecode:editObject.ninstitutionfilecode,\r\n                        nattachmenttypecode:editObject.nattachmenttypecode,\r\n                        sfiledesc:editObject.sfiledesc,\r\n                        //...editObject,\r\n                        nlinkcode,\r\n                       // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode:response[0].data.AttachmentType.length>0?\r\n                        response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                       // openModal: true\r\n                        openChildModal:true,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const changeInstitutionCategoryFilter = (inputParam,FilterInstitutionCategory,defaultInstitutionCategory) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/institution/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            FilterInstitutionCategory,\r\n                            defaultInstitutionCategory,\r\n                            SelectedInstitutionCategory:defaultInstitutionCategory\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\nexport function getDistComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = []; \r\n            URL=rsapi.post(\"/institution/getDistrict\", { \"userinfo\": methodParam.inputData.userinfo, \"nregioncode\":  methodParam.inputData.primarykey  })\r\n         dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let districtList; \r\n                const districtMap = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\",\r\n                \"sdistrictname\", undefined, undefined, false);               \r\n                  districtList = districtMap.get(\"OptionList\"); \r\n                  const cityList =undefined;\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n                     { districtList, loading: false, data: undefined, dataState: undefined ,cityList} })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCitComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL=[];\r\n            URL = rsapi.post(\"/institution/getCity\", { \"userinfo\": methodParam.inputData.userinfo, \"ndistrictcode\":  methodParam.inputData.primarykey  })\r\n         dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                 const cityMap = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\",\r\n                 \"scityname\", undefined, undefined, false);               \r\n                 const  cityList = cityMap.get(\"OptionList\"); \r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n                     { cityList,loading: false, data: undefined, dataState: undefined } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}