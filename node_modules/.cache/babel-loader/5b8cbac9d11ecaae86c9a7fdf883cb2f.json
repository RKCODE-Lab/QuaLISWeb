{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{transactionStatus,attachmentType}from'../components/Enumeration';import{intl}from\"../components/App\";export var changeProjectTypeFilter=function changeProjectTypeFilter(inputParam,filterProjectType){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/projectmaster/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,dataState:undefined,masterData:_objectSpread(_objectSpread({},masterData),{},{filterProjectType:filterProjectType,nfilterProjectType:inputParam.inputData.nfilterProjectType})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getuserComboServices(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getUsers\",{\"userinfo\":methodParam.inputData.userinfo,\"nuserrolecode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var userList;var districtMap=constructOptionList(response[0].data||[],\"nusercode\",\"susername\",undefined,undefined,false);userList=districtMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{userList:userList,selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}//Add Project Master\nexport var addProjectMaster=function addProjectMaster(operation,nfilterProjectMaster,userInfo,ncontrolCode,selectedRecordvalue,SelectedProjectType){return function(dispatch){// if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\nif(selectedRecordvalue.nprojecttypecodevalue!==undefined){if(Object.values(selectedRecordvalue.nprojecttypecodevalue).length>0&&selectedRecordvalue.nprojecttypecodevalue!==undefined&&operation==='create'||nfilterProjectMaster&&nfilterProjectMaster.nprojecttypecode>0&&operation==='update'&&nfilterProjectMaster.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));var urlArray=[];var selectedRecord={};// selectedRecord = selectedRecordvalue ;\nif(operation===\"create\"||operation===\"update\"){urlArray.push(rsapi.post(\"projecttype/getProjectType\",{\"userinfo\":userInfo}));/*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                    \"userinfo\": userInfo\r\n                })); */urlArray.push(rsapi.post(\"projectmaster/getUserrole\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projectmaster/getUsers\",{\"userinfo\":userInfo//,\n// \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\n}));urlArray.push(rsapi.post(\"projectmaster/getTeammembers\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\",{\"userinfo\":userInfo,\"ncontrolcode\":ncontrolCode}));}if(operation===\"update\"){urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\",{\"userinfo\":userInfo,\"nprojectmastercode\":nfilterProjectMaster.nprojectmastercode}));}Axios.all(urlArray).then(function(response){var testData={};var _ref=[],ProjectType=_ref.ProjectType,Userrole=_ref.Userrole,Users=_ref.Users,TeamMembers=_ref.TeamMembers,PeriodByControl=_ref.PeriodByControl;if(operation===\"create\"){ProjectType=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");Userrole=constructOptionList(response[1].data||[],\"nuserrolecode\",\"suserrolename\",false,false,true).get(\"OptionList\");//                Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\nTeamMembers=constructOptionList(response[3].data||[],\"nusercode\",\"steammembername\",false,false,true).get(\"OptionList\");PeriodByControl=constructOptionList(response[4].data||[],\"nperiodcode\",\"speriodname\",false,false,true).get(\"OptionList\");selectedRecord={\"nprojecttypecode\":{\"value\":SelectedProjectType.nprojecttypecode,\"label\":SelectedProjectType.sprojecttypename}};}else if(operation===\"update\"){var editData=response[5].data.SelectedProjectMaster;selectedRecord[\"sprojectcode\"]=editData.sprojectcode;selectedRecord[\"sprojecttitle\"]=editData.sprojecttitle;selectedRecord[\"sprojectdescription\"]=editData.sprojectdescription;selectedRecord[\"nprojectduration\"]=editData.nprojectduration;selectedRecord=_objectSpread({},selectedRecord);ProjectType=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");Userrole=constructOptionList(response[1].data||[],\"nuserrolecode\",\"suserrolename\",false,false,true).get(\"OptionList\");Users=constructOptionList(response[2].data||[],\"nusercode\",\"susername\",false,false,true).get(\"OptionList\");TeamMembers=constructOptionList(response[3].data||[],\"nusercode\",\"steammembername\",false,false,true).get(\"OptionList\");PeriodByControl=constructOptionList(response[4].data||[],\"nperiodcode\",\"speriodname\",false,false,true).get(\"OptionList\");selectedRecord[\"nprojecttypecode\"]={\"value\":editData[\"nprojecttypecode\"],\"label\":editData[\"sprojecttypename\"]};selectedRecord[\"nuserrolecode\"]={\"value\":editData[\"nuserrolecode\"],\"label\":editData[\"suserrolename\"]};selectedRecord[\"nusercode\"]={\"value\":editData[\"nusercode\"],\"label\":editData[\"susername\"]};selectedRecord[\"nteammembercode\"]={\"value\":editData[\"nteammembercode\"],\"label\":editData[\"steammembername\"]};selectedRecord[\"nperiodcode\"]={\"value\":editData[\"nperiodcode\"],\"label\":editData[\"speriodname\"]};// selectedRecord[\"nstudydirectorcode\"] = response[1].data;\n// selectedRecord[\"nteammembercode\"] = response[2].data;\n//  selectedRecord[\"nperiodcode\"] = response[3].data;\n// selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\n// selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\nselectedRecord[\"drfwdate\"]=rearrangeDateFormat(userInfo,editData.srfwdate);selectedRecord[\"dprojectstartdate\"]=rearrangeDateFormat(userInfo,editData.sprojectstartdate);}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,ProjectType:ProjectType,Userrole:Userrole,Users:Users,TeamMembers:TeamMembers,PeriodByControl:PeriodByControl,operation:operation,screenName:\"IDS_PROJECTMASTER\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,testData:testData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}}else{//  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\nif(nfilterProjectMaster!==null&&operation===\"update\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_PROJECTTYPENOTAVAILABLE\"}));}}};};export var addProjectMasterFile=function addProjectMasterFile(inputParam){return function(dispatch){if(inputParam.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo})];if(inputParam.operation===\"update\"){urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\",{userinfo:inputParam.userInfo,projectmasterfile:inputParam.selectedRecord}));}Axios.all(urlArray).then(function(response){var _payload;var linkMap=constructOptionList(response[0].data.LinkMaster,\"nlinkcode\",\"slinkname\",false,false,true);var linkmaster=linkMap.get(\"OptionList\");var selectedRecord={};var defaultLink=linkmaster.filter(function(items){return items.item.ndefaultlink===transactionStatus.YES;});var disabled=false;var editObject={};if(inputParam.operation===\"update\"){editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?defaultLink[0]:\"\";//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\nlink={slinkfilename:'',slinkdescription:'',nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}selectedRecord=_objectSpread(_objectSpread(_objectSpread({},link),{},{nprojectmasterfilecode:editObject.nprojectmasterfilecode,nattachmenttypecode:editObject.nattachmenttypecode},editObject),{},{nlinkcode:nlinkcode// disabled: true\n});}else{selectedRecord={nattachmenttypecode:response[0].data.AttachmentType.length>0?response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,nlinkcode:defaultLink.length>0?defaultLink[0]:\"\",//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\ndisabled:disabled};}dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"operation\",inputParam.operation),_defineProperty(_payload,\"screenName\",inputParam.screenName),_defineProperty(_payload,\"ncontrolCode\",inputParam.ncontrolCode),_defineProperty(_payload,\"selectedRecord\",selectedRecord),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"linkMaster\",linkmaster),_defineProperty(_payload,\"showSaveContinue\",false),_defineProperty(_payload,\"editFiles\",editObject.nattachmenttypecode===attachmentType.FTP?editObject:{}),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};};//ProjectMaster Click\nexport var getProjectMaster=function getProjectMaster(projectmasterItem,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/projectmaster/getActiveProjectMasterById\",{nprojectmastercode:projectmasterItem.nprojectmastercode,userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);// ...masterData,\n// ...response.data\nmasterData=masterData1;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,dataState:undefined,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getProjectmasterAddMemberService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedProjectMaster.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"projectmaster/getProjectUnmappedTeammember\",{\"nprojectmastercode\":masterData.SelectedProjectMaster[\"nprojectmastercode\"],userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);masterData=masterData1;dispatch({type:DEFAULT_RETURN,payload:{MembersList:response.data,masterData:masterData,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ProjectMasterAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","sortData","constructOptionList","rearrangeDateFormat","transactionStatus","attachmentType","intl","changeProjectTypeFilter","inputParam","filterProjectType","dispatch","post","methodUrl","inputData","then","response","masterData","data","type","payload","loading","dataState","undefined","nfilterProjectType","catch","error","message","getuserComboServices","methodParam","selectedRecord","URL","userinfo","primarykey","all","userList","districtMap","get","status","warn","addProjectMaster","operation","nfilterProjectMaster","userInfo","ncontrolCode","selectedRecordvalue","SelectedProjectType","nprojecttypecodevalue","Object","values","length","nprojecttypecode","ntransactionstatus","DRAFT","urlArray","push","nprojectmastercode","testData","ProjectType","Userrole","Users","TeamMembers","PeriodByControl","sprojecttypename","editData","SelectedProjectMaster","sprojectcode","sprojecttitle","sprojectdescription","nprojectduration","srfwdate","sprojectstartdate","openModal","screenName","formatMessage","id","addProjectMasterFile","projectmasterfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","nprojectmasterfilecode","AttachmentType","FTP","modalName","getProjectMaster","projectmasterItem","masterData1","getProjectmasterAddMemberService","MembersList","openChildModal"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport { DEFAULT_RETURN} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData ,constructOptionList,rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus,attachmentType } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\"; \r\n\r\nexport const changeProjectTypeFilter = (inputParam, filterProjectType) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                    \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterProjectType,\r\n                            nfilterProjectType: inputParam.inputData.nfilterProjectType\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getuserComboServices(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getUsers\", { \"userinfo\": methodParam.inputData.userinfo, \"nuserrolecode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let userList;\r\n\r\n                const districtMap = constructOptionList(response[0].data || [], \"nusercode\",\r\n\r\n                \"susername\", undefined, undefined, false);              \r\n\r\n                userList = districtMap.get(\"OptionList\");\r\n\r\n                 \r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { userList,selectedRecord, loading: false, data: undefined, dataState: undefined } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n//Add Project Master\r\nexport const addProjectMaster = (operation, nfilterProjectMaster, userInfo, ncontrolCode,selectedRecordvalue,SelectedProjectType ) => {\r\n    return function (dispatch) {\r\n        // if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\r\n        if (selectedRecordvalue.nprojecttypecodevalue !== undefined) {\r\n         if ((Object.values(selectedRecordvalue.nprojecttypecodevalue).length > 0 && selectedRecordvalue.nprojecttypecodevalue !== undefined && operation === 'create') || (nfilterProjectMaster && nfilterProjectMaster.nprojecttypecode>0 && operation === 'update' && nfilterProjectMaster.ntransactionstatus === transactionStatus.DRAFT )) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n            // selectedRecord = selectedRecordvalue ;\r\n             if (operation === \"create\" || operation === \"update\") {\r\n\r\n                urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n         /*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                    \"userinfo\": userInfo\r\n                })); */\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getUserrole\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\r\n                    \"userinfo\": userInfo //,\r\n                    // \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getTeammembers\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"ncontrolcode\":ncontrolCode\r\n                }));\r\n               \r\n            } \r\n             if (operation === \"update\"){\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"nprojectmastercode\": nfilterProjectMaster.nprojectmastercode\r\n                }));\r\n\r\n            }\r\n\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n               \r\n                let testData = {};\r\n\r\n                let {ProjectType,Userrole,Users,TeamMembers,PeriodByControl}=[]\r\n                \r\n\r\n              if (operation === \"create\") {\r\n                   \r\n                     ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                   \r\n\r\n                     Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n                   \r\n\r\n   //                Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                     TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n                  \r\n\r\n                     PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n\r\n                      selectedRecord = {\"nprojecttypecode\": {\r\n                        \"value\": SelectedProjectType.nprojecttypecode,\r\n                         \"label\": SelectedProjectType.sprojecttypename\r\n                     }};\r\n\r\n                }else if (operation === \"update\") {\r\n\r\n                  \r\n\r\n                        const editData = response[5].data.SelectedProjectMaster;\r\n                    \r\n                        selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n                        selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                        selectedRecord[\"sprojectdescription\"] = editData.sprojectdescription;\r\n                        selectedRecord[\"nprojectduration\"] = editData.nprojectduration;\r\n                    \r\n\r\n                        selectedRecord = {...selectedRecord}\r\n\r\n                        ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                        Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n                        Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n                        TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n                        PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                        selectedRecord[\"nprojecttypecode\"] = {\r\n                            \"value\": editData[\"nprojecttypecode\"],\r\n                            \"label\":  editData[\"sprojecttypename\"]\r\n                        };\r\n\r\n                        selectedRecord[\"nuserrolecode\"] = {\r\n                            \"value\": editData[\"nuserrolecode\"],\r\n                            \"label\": editData[\"suserrolename\"]\r\n                        };\r\n\r\n                        selectedRecord[\"nusercode\"] = {\r\n                            \"value\": editData[\"nusercode\"],\r\n                            \"label\": editData[\"susername\"]\r\n                        };\r\n                        \r\n                    \r\n                        selectedRecord[\"nteammembercode\"] = {\r\n                            \"value\": editData[\"nteammembercode\"],\r\n                            \"label\": editData[\"steammembername\"]\r\n                        };\r\n                        \r\n                        selectedRecord[\"nperiodcode\"] = {\r\n                            \"value\": editData[\"nperiodcode\"],\r\n                            \"label\": editData[\"speriodname\"]\r\n                        };\r\n\r\n                // selectedRecord[\"nstudydirectorcode\"] = response[1].data;\r\n                // selectedRecord[\"nteammembercode\"] = response[2].data;\r\n                //  selectedRecord[\"nperiodcode\"] = response[3].data;\r\n                // selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                // selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n\r\n                    selectedRecord[\"drfwdate\"] = rearrangeDateFormat(userInfo,editData.srfwdate);\r\n                    selectedRecord[\"dprojectstartdate\"] = rearrangeDateFormat(userInfo,editData.sprojectstartdate);\r\n\r\n                }\r\n                   \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openModal: true,\r\n                            ProjectType,Userrole,Users,TeamMembers,PeriodByControl,\r\n                            operation: operation,\r\n                            screenName: \"IDS_PROJECTMASTER\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            testData,\r\n                           \r\n                           \r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n            }else{\r\n                toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n            } \r\n         } else {\r\n            //  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\r\n                if(nfilterProjectMaster !== null && operation === \"update\" ){ \r\n                    \r\n                toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n             }else{\r\n                toast.warn(intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\"}))\r\n             }\r\n              \r\n         }\r\n    }\r\n}\r\n\r\nexport const addProjectMasterFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        if (inputParam.ntransactionstatus === transactionStatus.DRAFT){ \r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                projectmasterfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                        }\r\n                    }\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        nprojectmasterfilecode: editObject.nprojectmasterfilecode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        ...editObject,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        \r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n           \r\n    }else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }}\r\n}\r\n\r\n//ProjectMaster Click\r\nexport const getProjectMaster = (projectmasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/getActiveProjectMasterById\", {\r\n            nprojectmastercode: projectmasterItem.nprojectmastercode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                \r\n\r\n                    let masterData1  = {...masterData,\r\n\r\n                        ...response.data }\r\n\r\n                    // ...masterData,\r\n                    // ...response.data\r\n                    masterData=masterData1\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                       // masterData,\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getProjectmasterAddMemberService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"projectmaster/getProjectUnmappedTeammember\",{\r\n            \"nprojectmastercode\":masterData.SelectedProjectMaster[\"nprojectmastercode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n            let masterData1  = {...masterData,\r\n\r\n                ...response.data }\r\n                masterData=masterData1                       \r\n                dispatch({type: DEFAULT_RETURN, payload:{ \r\n                                                        MembersList:response.data,\r\n                                                        masterData,\r\n                                                        openChildModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }\r\n}}"]},"metadata":{},"sourceType":"module"}