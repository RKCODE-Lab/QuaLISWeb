{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN,UPDATE_LANGUAGE,REQUEST_INIT}from'./LoginTypes';import rsapi from\"../rsapi\";import{intl,createIntlReinitilize}from'../components/App';import Axios from'axios';import{toast}from'react-toastify';import{constructjsonOptionList,constructOptionList,formatInputDate,rearrangeDateFormat}from'../components/CommonScript';import{getHomeDashBoard}from'./DashBoardTypeAction';import{getListStaticDashBoard}from'./StaticDashBoardAction';import{getListAlert}from'./AlertViewAction';import{getRandomColor}from'../components/header/headerutils';import{loadMessages}from'@progress/kendo-react-intl';import messages_ru from'../assets/translations/ru.json';import messages_tg from'../assets/translations/tg.json';import messages_en from'../assets/translations/en.json';import messages_ko from'../assets/translations/ko.json';import messages_fr from'../assets/translations/fr.json';import{PostgreSQLMaintenance,transactionStatus}from'../components/Enumeration';import{callService}from'./ServiceAction';import ConfirmMessage from'../components/confirm-alert/confirm-message.component';var messages={'en-US':messages_en,'ru-RU':messages_ru,'tg-TG':messages_tg,//ALPD-5196 ADDed by Neeraj -All masters screens > Filter is in multi Language\n'ko-KR':messages_ko,'fr-FR':messages_fr};export var initRequest=function initRequest(loading){return{type:REQUEST_INIT,payload:loading};};export var navPage=function navPage(data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{navigation:data,nusermultirolecode:undefined,nusersitecode:undefined,selectedRecord:undefined,loginFlag:false//  ALPD-5704   Added loginFlag to handle url login issue by Vishakh (09-04-2025)\n}});};};export var changeLanguage=function changeLanguage(language,selectedRecord,loginType){return function(dispatch){var loginTypeMap=constructjsonOptionList(loginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,language);createIntlReinitilize(language);//ALPD-715 Fix\ndispatch({type:UPDATE_LANGUAGE,payload:{language:language,// selectedRecord,\nloginTypeList:loginTypeMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{// ALPD-3839\nnlogintypecode:loginTypeMap.get(\"OptionList\").find(function(item){return item.value===selectedRecord.nlogintypecode.value;})||\"\"// nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\n})}});};};export var clickOnLoginButton=function clickOnLoginButton(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputData.url,inputData).then(function(response){var returnStr=response.data[\"rtn\"];if(returnStr.toUpperCase()===\"SUCCESS\"){var responseData=response.data;var PassFlag=responseData.PassFlag;//ALPD-4789 L.Subashini cleared warnings\nlanguageList&&languageList.map(function(x){return loadMessages(messages[inputData.slanguagetypecode],inputData.slanguagetypecode);});createIntlReinitilize(inputData.slanguagetypecode);dispatch({type:DEFAULT_RETURN,payload:{openCPModal:response.data.PassFlag===transactionStatus.UNLOCK||PassFlag===transactionStatus.EXPIRED?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:PassFlag===transactionStatus.UNLOCK?\"IDS_CREATEPASSWORD\":PassFlag===transactionStatus.EXPIRED?\"IDS_CHANGEPASSWORD\":\"\",PassFlag:PassFlag,userInfo:response.data.UserInfo,// userInfo: {\n//     nlogintypecode: inputData.nlogintypecode\n// }\nloginFlag:true//  ALPD-5704   Added loginFlag to handle url login issue by Vishakh (09-04-2025)\n}});if(responseData.PassFlag!==transactionStatus.UNLOCK&&responseData.PassFlag!==transactionStatus.EXPIRED){var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,HomeDesign:responseData.HomeDesign,navigation:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,defaultMenuHome:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0],userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].sdisplayname,userMultiRole:responseData.UserMultiRole,settings:responseData.Settings,reportSettings:responseData.ReportSettings,integrationSettings:responseData.IntegrationSettings,elnUserInfo:responseData.ELNUserInfo,elnSite:responseData.ELNSite,genericLabel:responseData.GenericLabel,genericLabelIDS:responseData.GenericLabelIDS,sdmselnsettings:responseData.SDMSELNSettings,hideQualisForms:responseData.HideQualisForms,filterOperator:responseData.FilterOperator,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,isDeputyLogin:false,loading:false,userImagePath:responseData.UserImagePath,//profileColor: \"#002699\",\nprofileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true,colortheme:responseData.colortheme,selectedUserUiConfig:responseData.selectedUserUiConfig};dispatch({type:DEFAULT_RETURN,payload:inputParam});if(inputParam.navigation==='dashboard'){dispatch(getListStaticDashBoard(responseData.UserInfo));}else if(inputParam.navigation==='apiservice'){var inputParam1={inputData:{currentdate:formatInputDate(new Date(),true),\"userinfo\":inputParam.userInfo},serviceNeed:true,classUrl:inputParam.navigation,methodUrl:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].smethodurl};dispatch(callService(inputParam1));}dispatch(getListAlert(responseData.UserInfo,true));if(responseData.PasswordAlertDay){toast.info(intl.formatMessage({id:\"IDS_PASSWORDEXPIRY\"})+\" \"+responseData.PasswordAlertDay+\" \"+intl.formatMessage({id:\"IDS_DAYS\"}));}}}else{toast.warn(intl.formatMessage({id:returnStr}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitChangeRole=function submitChangeRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getuserscreenrightsmenu\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{userInfo:response.data.UserInfo,menuDesign:response.data.MenuDesign,navigation:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,defaultMenuHome:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0],userRoleControlRights:response.data.UserRoleControlRights,userMultiRole:response.data.UserMultiRole,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,loading:false,masterData:[],displayName:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].sdisplayname,// navigation: \"home\",\ninputParam:{},openRoleBox:false}});if(response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename==='dashboard'){dispatch(getListStaticDashBoard(response.data.UserInfo,1));}else if(inputParam.navigation==='apiservice'){var inputParam1={inputData:{currentdate:formatInputDate(new Date(),true),\"userinfo\":response.data.UserInfo},serviceNeed:true,classUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,methodUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].smethodurl};dispatch(callService(inputParam1));}// dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\ndispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var updateStore=function updateStore(updateInfo){return function(dispatch){//ALPD-3511 added loadEsignStateHandle key to handle EsignStateHandle component\nif(updateInfo.data.loadEsign===true||updateInfo.data.loadEsignStateHandle){var currentTimeUrl=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});var reasonUrl=rsapi.post(\"/reason/getReason\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});dispatch(initRequest(true));Axios.all([currentTimeUrl,reasonUrl]).then(function(response){var reasonMap=constructOptionList(response[1].data||[],\"nreasoncode\",\"sreason\",undefined,undefined,false);var reasonList=reasonMap.get(\"OptionList\");dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({serverTime:rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo,response[0].data),esignReasonList:reasonList},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined})});}};};export var getChangeUserRole=function getChangeUserRole(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getchangerole\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};//commend by gowtham \n// export const getLoginDetails = () => {\n//     return (dispatch) => {\n//         dispatch(initRequest(true));\n//         rsapi.post(\"/login/getloginInfo\", {})\n//             .then(response => {\n//                 // let loginType = [];\n//                 // response.data.LoginType.map(type => {\n//                 //     loginType\n//                 // })\n//                 const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\n//                 let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\n//                 let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\n//                 const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\n//                 dispatch({\n//                     type: DEFAULT_RETURN,\n//                     payload: {\n//                         loginTypes: response.data.LoginType,\n//                         loginTypeList: loginTypeMap.get(\"OptionList\"),\n//                         languageList: languageMap.get(\"OptionList\"),\n//                         nlanguagecode: defaultLanguage || \"\",\n//                         selectedRecord: {\n//                             nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\n//                             nlanguagecode: defaultLanguage || \"\"\n//                         },\n//                         language: defaultLanguage.value,\n//                         loading: false\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 dispatch({\n//                     type: DEFAULT_RETURN,\n//                     payload: {\n//                         loading: false\n//                     }\n//                 });\n//                 if (error.response && error.response.status === 500) {\n//                     toast.error(intl.formatMessage({\n//                         id: error.message\n//                     }));\n//                 } else if (error.response === undefined) {\n//                     toast.warn(\"Service not available\");\n//                 } else {\n//                     toast.warn(intl.formatMessage({\n//                         id: error.response.data\n//                     }));\n//                 }\n//             });\n//     }\n// }\nexport var getLoginDetails=function getLoginDetails(){return function(dispatch){dispatch(initRequest(true));// Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\nrsapi.post(\"/login/getJavaTime\").then(function(response){var maintenanceBreakPopUp=function maintenanceBreakPopUp(breakTime){var confirmMessage=new ConfirmMessage();confirmMessage.confirm(\"MaintainceBreakMessage\",intl.formatMessage({id:\"IDS_MAINTAINCEBREAK\"}),intl.formatMessage({id:\"IDS_MAINTAINCEBREAKMESSAGE\"}),undefined,undefined,undefined,false,undefined,breakTime);};var MaintenanceBreak=0;if(PostgreSQLMaintenance.STARTHOUR>PostgreSQLMaintenance.ENDHOUR){var minutesLeftToday=60-PostgreSQLMaintenance.STARTMINUTE+(23-PostgreSQLMaintenance.STARTHOUR)*60;var minutesNextDay=PostgreSQLMaintenance.ENDHOUR*60+PostgreSQLMaintenance.ENDMINUTE;MaintenanceBreak=minutesLeftToday+minutesNextDay;}else if(PostgreSQLMaintenance.STARTHOUR<PostgreSQLMaintenance.ENDHOUR){var minutesThisDay=(PostgreSQLMaintenance.ENDHOUR-PostgreSQLMaintenance.STARTHOUR)*60-PostgreSQLMaintenance.STARTMINUTE+PostgreSQLMaintenance.ENDMINUTE;MaintenanceBreak=minutesThisDay;}else{MaintenanceBreak=PostgreSQLMaintenance.ENDMINUTE-PostgreSQLMaintenance.STARTMINUTE;}var date=new Date();date.setHours(response.data.Hours);date.setMinutes(response.data.Minutes);date.setSeconds(response.data.Seconds);var isMaintenanceTime=function isMaintenanceTime(){if((date.getHours()>PostgreSQLMaintenance.STARTHOUR||date.getHours()===PostgreSQLMaintenance.STARTHOUR&&date.getMinutes()>=PostgreSQLMaintenance.STARTMINUTE)&&(date.getHours()<PostgreSQLMaintenance.ENDHOUR||date.getHours()===PostgreSQLMaintenance.ENDHOUR&&date.getMinutes()<PostgreSQLMaintenance.ENDMINUTE)){MaintenanceBreak=PostgreSQLMaintenance.ENDMINUTE-date.getMinutes();return true;}else{return false;}};var incrementTimeByMinute=function incrementTimeByMinute(){date.setMinutes(date.getMinutes()+1);if(date.getMinutes()===60){date.setMinutes(0);date.setHours(date.getHours()+1);}if(date.getHours()===24){date.setHours(0);}};var maintenanceCheck=function maintenanceCheck(){if(isMaintenanceTime()){maintenanceBreakPopUp(60000*MaintenanceBreak);}};setTimeout(function(){incrementTimeByMinute();maintenanceCheck();setInterval(function(){incrementTimeByMinute();maintenanceCheck();},60000);},(60-(date.getSeconds()+1))*1000);if(isMaintenanceTime()){maintenanceBreakPopUp(60000*MaintenanceBreak);}else{// for Vacuum End\nrsapi.post(\"/login/getloginInfo\",{}).then(function(response){var languageMap=constructOptionList(response.data.Language||[],\"slanguagetypecode\",\"slanguagename\",false,false,true);var defaultLanguage=languageMap.get(\"DefaultValue\")?languageMap.get(\"DefaultValue\"):undefined;var languageCode=defaultLanguage?defaultLanguage.value:\"en-US\";var loginTypeMap=constructjsonOptionList(response.data.LoginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,languageCode);dispatch({type:DEFAULT_RETURN,payload:{loginTypes:response.data.LoginType,loginTypeList:loginTypeMap.get(\"OptionList\"),languageList:languageMap.get(\"OptionList\"),nlanguagecode:defaultLanguage||\"\",selectedRecord:{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\",nlanguagecode:defaultLanguage||\"\"},language:defaultLanguage.value,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}});};};export var getUserSiteAndRole=function getUserSiteAndRole(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginvalidation\",_objectSpread({},inputParam)).then(function(response){if(inputParam.Language!==undefined&&inputParam.logintype!==undefined){//Start\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\nif(response.data&&response.data.NewAdsUser&&response.data.NewAdsUser===\"true\"){dispatch({type:DEFAULT_RETURN,payload:{openADSModal:true,userInfo:{nlogintypecode:inputParam.nlogintypecode||selectedRecord.nlogintypecode&&selectedRecord.nlogintypecode.value},screenName:\"IDS_NEWADSUSERVALIDATION\",loading:false,createPwdRecord:{}}});}//End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\nelse{var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");var loggeInLoginTypeCode=response.data.Users.nlogintypecode;var logintypecode=inputParam.logintype.filter(function(x){return x.value===loggeInLoginTypeCode;});if(inputParam.logintype.length>0&&logintypecode.length===0){logintypecode=inputParam.logintype;loggeInLoginTypeCode=logintypecode[0].value;}dispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\",selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\"}),openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{},userInfo:{nlogintypecode:loggeInLoginTypeCode}}});}}else{toast.warn(inputParam.Language===undefined?\"Language not available\":\"Login type not available\");}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var createPassword=function createPassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/createnewpassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{}}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCREATEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};//Start ALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\nexport var validateADSPassword=function validateADSPassword(inputParam){var selectedRecord=inputParam.selectedRecord||{};return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/validateadspassword\",_objectSpread({},inputParam)).then(function(response){if(inputParam.slanguagefilename!==undefined){var roleMap=constructOptionList(response.data&&response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data&&response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");// let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\n// let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\n// if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\n//     logintypecode = inputParam.logintype;\n//     loggeInLoginTypeCode = logintypecode[0].value;\n// }\ndispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:inputParam.nlogintypecode,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode//nlogintypecode: ...inputParam.nlogintypecode || \"\"\n}),openADSModal:false,passwordPolicy:response.data.PasswordPolicy,// screenName: \"IDS_CREATEPASSWORD\",\nloading:false,// PassFlag: response.data.PassFlag,\ncreatePwdRecord:{},userInfo:{nlogintypecode:inputParam.nlogintypecode}}});}else{toast.warn(\"Language not available\");}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};//End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\nexport var changepassword=function changepassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changepassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{},navigation:\"login\"}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCHANGEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function validateEsignforDigitalSignature(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(saveDigitalSign(inputParam[\"screenData\"][\"inputParam\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var saveDigitalSign=function saveDigitalSign(inputParam){return function(dispatch){dispatch(initRequest(true));var formData=inputParam.formData;formData.append(\"userinfo\",JSON.stringify(inputParam.inputData.userinfo));rsapi.post(\"/digitalsignature/updateDigitalSignature\",formData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,loadEsign:false}});toast.success(intl.formatMessage({id:\"IDS_DIGITALSIGNATURESAVEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getPassWordPolicy=function getPassWordPolicy(nuserrolecode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getPassWordPolicy\",{nuserrolecode:nuserrolecode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,createPwdRecord:{},screenName:\"IDS_CHANGEPASSWORD\",passwordPolicy:response.data.PasswordPolicy}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getDigitalSign=function getDigitalSign(nusercode,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/digitalsignature/getDigitalSignature\",{nusercode:nusercode,userInfo:userInfo}).then(function(response){var responseData=response.data;var selectedDigiSign=responseData!==\"\"?responseData:{};dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,screenName:\"IDS_DIGITALSIGNATURE\",operation:\"update\",selectedDigiSign:selectedDigiSign,isInitialRender:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changeOwner=function changeOwner(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changeOwner\",_objectSpread({},inputData)).then(function(response){var responseData=response.data;var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,//displayName: \"\",\nuserMultiRole:responseData.UserMultiRole,isDeputyLogin:true,// settings: responseData.Settings,\n//deputyUser: responseData.DeputyUser,\n// deputyUserRole: responseData.DeputyUserRole,\nloading:false,masterData:[],//navigation: \"home\",\nnavigation:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,defaultMenuHome:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0],inputParam:{},displayName:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].sdisplayname,openRoleBox:false,userImagePath:responseData.UserImagePath,profileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});if(response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename==='dashboard'){dispatch(getListStaticDashBoard(response.data.UserInfo,1));}else if(inputParam.navigation==='apiservice'){var inputParam1={inputData:{currentdate:formatInputDate(new Date(),true),\"userinfo\":response.data.UserInfo},serviceNeed:true,classUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,methodUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].smethodurl};dispatch(callService(inputParam1));}//dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\ndispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var logOutAuditAction=function logOutAuditAction(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/insertAuditAction',_objectSpread(_objectSpread({},inputData),{},{nFlag:2})).then(function(response){languageList&&languageList.map(function(x){loadMessages({},x.slanguagetypecode);});dispatch(navPage(\"login\"));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var elnLoginAction=function elnLoginAction(inputParam,serverUrl,uiUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.objResponse!==null){if(response.data.objResponse.status){if(uiUrl){var user=response;var elnURL=uiUrl+\"#\"+user.data.username+\"$\"+user.data.password;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}}else{toast.info(response.data.objResponse.information);}// if(!$(\"#appsdetails\").is(\":hidden\")){\n//     $('#appsdetails').addClass(\"dp-none\");\n// }\n};}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var sdmsLoginAction=function sdmsLoginAction(inputParam,serverUrl,sdmsUIUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.status){if(response.data.status){var sdmsURL=sdmsUIUrl+\"?un=\"+response.data.username+\"&pd=\"+response.data.password+\"&sc=\"+inputParam.sSiteCode;window.open(sdmsURL,'_blank');}else{toast.info(response.Message);}}else{toast.info(intl.FormattedMessage({id:\"IDS_CHECKSYNCSERVICE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var getUsersiteRole=function getUsersiteRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/changeSite',{\"usersSite\":inputParam.selectedRecord.nusersitecode.item}).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:roleMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var checkPassword=function checkPassword(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getlogintypevalidation\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusercode:response.data.Users.nusercode}),userInfo:{nlogintypecode:inputParam.nlogintypecode},openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getDashBoardForHome(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/staticdashboard/getListStaticDashBoard\",{'userinfo':inputParam.data.userInfo}).then(function(response){var respObject={masterDataStatic:response.data,loading:false,userInfo:inputParam.data.userInfo};if(response.data!==null&&Object.keys(response.data).length>0){respObject=_objectSpread(_objectSpread(_objectSpread({},inputParam.data),respObject),{},{currentPageNo:-1});}dispatch(getHomeDashBoard(inputParam.data.userInfo,0,false,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getcolorMaster=function getcolorMaster(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/useruiconfig/getcolormastertheme\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitUserTheme=function submitUserTheme(useruiconfig,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/useruiconfig/createUserUiConfig\",{\"useruiconfig\":useruiconfig,\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};//ALPD-4102\nexport var getAboutInfo=function getAboutInfo(userinfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getAboutInfo\",{userinfo:userinfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openAboutModal:true,loading:false,screenName:\"IDS_ABOUT\",aboutInfo:response.data.jsondata}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/LoginAction.js"],"names":["DEFAULT_RETURN","UPDATE_LANGUAGE","REQUEST_INIT","rsapi","intl","createIntlReinitilize","Axios","toast","constructjsonOptionList","constructOptionList","formatInputDate","rearrangeDateFormat","getHomeDashBoard","getListStaticDashBoard","getListAlert","getRandomColor","loadMessages","messages_ru","messages_tg","messages_en","messages_ko","messages_fr","PostgreSQLMaintenance","transactionStatus","callService","ConfirmMessage","messages","initRequest","loading","type","payload","navPage","data","dispatch","navigation","nusermultirolecode","undefined","nusersitecode","selectedRecord","loginFlag","changeLanguage","language","loginType","loginTypeMap","loginTypeList","get","nlogintypecode","find","item","value","clickOnLoginButton","inputData","languageList","post","url","then","response","returnStr","toUpperCase","responseData","PassFlag","map","x","slanguagetypecode","openCPModal","UNLOCK","EXPIRED","passwordPolicy","PasswordPolicy","screenName","userInfo","UserInfo","inputParam","menuDesign","MenuDesign","HomeDesign","filter","ndefaultstatus","shomename","defaultMenuHome","userRoleControlRights","UserRoleControlRights","userFormControlProperties","UserFormControlproperties","transactionValidation","TransactionValidation","displayName","sdisplayname","userMultiRole","UserMultiRole","settings","Settings","reportSettings","ReportSettings","integrationSettings","IntegrationSettings","elnUserInfo","ELNUserInfo","elnSite","ELNSite","genericLabel","GenericLabel","genericLabelIDS","GenericLabelIDS","sdmselnsettings","SDMSELNSettings","hideQualisForms","HideQualisForms","filterOperator","FilterOperator","deputyUser","DeputyUser","deputyUserRole","DeputyUserRole","isDeputyLogin","userImagePath","UserImagePath","profileColor","idleneed","colortheme","selectedUserUiConfig","inputParam1","currentdate","Date","serviceNeed","classUrl","methodUrl","smethodurl","PasswordAlertDay","info","formatMessage","id","warn","catch","error","status","message","submitChangeRole","masterData","openRoleBox","updateStore","updateInfo","loadEsign","loadEsignStateHandle","currentTimeUrl","screenData","userinfo","reasonUrl","all","reasonMap","reasonList","typeName","serverTime","esignReasonList","masterStatus","errorCode","getChangeUserRole","getLoginDetails","maintenanceBreakPopUp","breakTime","confirmMessage","confirm","MaintenanceBreak","STARTHOUR","ENDHOUR","minutesLeftToday","STARTMINUTE","minutesNextDay","ENDMINUTE","minutesThisDay","date","setHours","Hours","setMinutes","Minutes","setSeconds","Seconds","isMaintenanceTime","getHours","getMinutes","incrementTimeByMinute","maintenanceCheck","setTimeout","setInterval","getSeconds","languageMap","Language","defaultLanguage","languageCode","LoginType","loginTypes","nlanguagecode","getUserSiteAndRole","logintype","NewAdsUser","openADSModal","createPwdRecord","roleMap","siteMap","Site","loggeInLoginTypeCode","Users","logintypecode","length","loginUserRole","loginUserSite","nusercode","createPassword","success","validateADSPassword","slanguagefilename","changepassword","validateEsignforDigitalSignature","toLowerCase","saveDigitalSign","formData","append","JSON","stringify","getPassWordPolicy","nuserrolecode","getDigitalSign","selectedDigiSign","operation","isInitialRender","changeOwner","logOutAuditAction","nFlag","elnLoginAction","serverUrl","uiUrl","objResponse","user","elnURL","username","password","window","open","FormattedMessage","information","sdmsLoginAction","sdmsUIUrl","sdmsURL","sSiteCode","Message","getUsersiteRole","checkPassword","getDashBoardForHome","respObject","masterDataStatic","Object","keys","currentPageNo","getcolorMaster","submitUserTheme","useruiconfig","getAboutInfo","openAboutModal","aboutInfo","jsondata"],"mappings":"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","sourcesContent":["import { DEFAULT_RETURN, UPDATE_LANGUAGE, REQUEST_INIT } from './LoginTypes';\r\nimport rsapi from \"../rsapi\";\r\nimport { intl, createIntlReinitilize } from '../components/App';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { constructjsonOptionList, constructOptionList, formatInputDate, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { getHomeDashBoard } from './DashBoardTypeAction';\r\nimport { getListStaticDashBoard } from './StaticDashBoardAction';\r\nimport { getListAlert } from './AlertViewAction'\r\nimport { getRandomColor } from '../components/header/headerutils';\r\nimport { loadMessages } from '@progress/kendo-react-intl';\r\nimport messages_ru from '../assets/translations/ru.json';\r\nimport messages_tg from '../assets/translations/tg.json';\r\nimport messages_en from '../assets/translations/en.json';\r\nimport messages_ko from '../assets/translations/ko.json';\r\nimport messages_fr from '../assets/translations/fr.json';\r\nimport { PostgreSQLMaintenance, transactionStatus } from '../components/Enumeration';\r\nimport { callService } from './ServiceAction';\r\nimport ConfirmMessage from '../components/confirm-alert/confirm-message.component';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg,\r\n    //ALPD-5196 ADDed by Neeraj -All masters screens > Filter is in multi Language\r\n    'ko-KR': messages_ko,\r\n    'fr-FR': messages_fr\r\n}\r\n\r\n\r\nexport const initRequest = (loading) => {\r\n    return {\r\n        type: REQUEST_INIT,\r\n        payload: loading\r\n    }\r\n}\r\n\r\nexport const navPage = (data) => dispatch => {\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: {\r\n            navigation: data,\r\n            nusermultirolecode: undefined,\r\n            nusersitecode: undefined,\r\n            selectedRecord: undefined,\r\n            loginFlag: false    //  ALPD-5704   Added loginFlag to handle url login issue by Vishakh (09-04-2025)\r\n        }\r\n    });\r\n}\r\n\r\nexport const changeLanguage = (language, selectedRecord, loginType) => (dispatch) => {\r\n    const loginTypeMap = constructjsonOptionList(loginType || [], \"nlogintypecode\",\r\n        \"sdisplayname\", false, false, true, undefined, 'jsondata', true, language);\r\n    createIntlReinitilize(language);  //ALPD-715 Fix\r\n    dispatch({\r\n        type: UPDATE_LANGUAGE,\r\n        payload: {\r\n            language,\r\n            // selectedRecord,\r\n            loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n            selectedRecord: {\r\n                ...selectedRecord,\r\n                // ALPD-3839\r\n                nlogintypecode: loginTypeMap.get(\"OptionList\").find(item => item.value === selectedRecord.nlogintypecode.value) || \"\"\r\n                // nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const clickOnLoginButton = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputData.url, inputData)\r\n            .then(response => {\r\n                const returnStr = response.data[\"rtn\"];\r\n                if (returnStr.toUpperCase() === \"SUCCESS\") {\r\n                    const responseData = response.data;\r\n                    const PassFlag = responseData.PassFlag;\r\n                    //ALPD-4789 L.Subashini cleared warnings\r\n                    languageList &&\r\n                        languageList.map(x => {\r\n                            return loadMessages(messages[inputData.slanguagetypecode], inputData.slanguagetypecode);\r\n                        })\r\n                    createIntlReinitilize(inputData.slanguagetypecode);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openCPModal: response.data.PassFlag === transactionStatus.UNLOCK || PassFlag === transactionStatus.EXPIRED ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: PassFlag === transactionStatus.UNLOCK ? \"IDS_CREATEPASSWORD\" : PassFlag === transactionStatus.EXPIRED ? \"IDS_CHANGEPASSWORD\" : \"\",\r\n                            PassFlag,\r\n                            userInfo: response.data.UserInfo,\r\n                            // userInfo: {\r\n                            //     nlogintypecode: inputData.nlogintypecode\r\n                            // }\r\n                            loginFlag: true //  ALPD-5704   Added loginFlag to handle url login issue by Vishakh (09-04-2025)\r\n                        }\r\n                    });\r\n                    if (responseData.PassFlag !== transactionStatus.UNLOCK && responseData.PassFlag !== transactionStatus.EXPIRED) {\r\n                        const inputParam = {\r\n                            userInfo: responseData.UserInfo,\r\n                            menuDesign: responseData.MenuDesign,\r\n                            HomeDesign: responseData.HomeDesign,\r\n                            navigation: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename,\r\n                            defaultMenuHome: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0],\r\n                            userRoleControlRights: responseData.UserRoleControlRights,\r\n                            userFormControlProperties: responseData.UserFormControlproperties,\r\n                            transactionValidation: responseData.TransactionValidation,\r\n                            displayName: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].sdisplayname,\r\n                            userMultiRole: responseData.UserMultiRole,\r\n                            settings: responseData.Settings,\r\n                            reportSettings: responseData.ReportSettings,\r\n                            integrationSettings: responseData.IntegrationSettings,\r\n                            elnUserInfo: responseData.ELNUserInfo,\r\n                            elnSite: responseData.ELNSite,\r\n                            genericLabel: responseData.GenericLabel,\r\n                            genericLabelIDS: responseData.GenericLabelIDS,\r\n                            sdmselnsettings: responseData.SDMSELNSettings,\r\n                            hideQualisForms: responseData.HideQualisForms,\r\n                            filterOperator: responseData.FilterOperator,\r\n                            deputyUser: response.data.DeputyUser,\r\n                            deputyUserRole: response.data.DeputyUserRole,\r\n                            isDeputyLogin: false,\r\n                            loading: false,\r\n                            userImagePath: responseData.UserImagePath,\r\n                            //profileColor: \"#002699\",\r\n                            profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                            idleneed: true,\r\n                            colortheme: responseData.colortheme,\r\n                            selectedUserUiConfig: responseData.selectedUserUiConfig\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: inputParam\r\n                        });\r\n\r\n                        if (inputParam.navigation === 'dashboard') {\r\n                            dispatch(getListStaticDashBoard(responseData.UserInfo));\r\n                        } else if (inputParam.navigation === 'apiservice') {\r\n                            const inputParam1 = {\r\n                                inputData: { currentdate: formatInputDate(new Date(), true), \"userinfo\": inputParam.userInfo },\r\n                                serviceNeed: true, classUrl: inputParam.navigation, methodUrl: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].smethodurl\r\n                            };\r\n                            dispatch(callService(inputParam1));\r\n                        }\r\n\r\n                        dispatch(getListAlert(responseData.UserInfo, true));\r\n                        if (responseData.PasswordAlertDay) {\r\n                            toast.info(intl.formatMessage({\r\n                                id: \"IDS_PASSWORDEXPIRY\"\r\n                            }) + \" \" + responseData.PasswordAlertDay + \" \" + intl.formatMessage({\r\n                                id: \"IDS_DAYS\"\r\n                            }))\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: returnStr\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitChangeRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getuserscreenrightsmenu\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userInfo: response.data.UserInfo,\r\n                        menuDesign: response.data.MenuDesign,\r\n                        navigation: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename,\r\n                        defaultMenuHome: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0],\r\n                        userRoleControlRights: response.data.UserRoleControlRights,\r\n                        userMultiRole: response.data.UserMultiRole,\r\n                        deputyUser: response.data.DeputyUser,\r\n                        deputyUserRole: response.data.DeputyUserRole,\r\n                        loading: false,\r\n                        masterData: [],\r\n                        displayName: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].sdisplayname,\r\n                        // navigation: \"home\",\r\n                        inputParam: {},\r\n                        openRoleBox: false\r\n                    }\r\n                });\r\n                if ((response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename === 'dashboard') {\r\n                    dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                } else if (inputParam.navigation === 'apiservice') {\r\n                    const inputParam1 = {\r\n                        inputData: { currentdate: formatInputDate(new Date(), true), \"userinfo\": response.data.UserInfo },\r\n                        serviceNeed: true, classUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename, methodUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].smethodurl\r\n                    };\r\n                    dispatch(callService(inputParam1));\r\n                }\r\n\r\n                // dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStore = (updateInfo) => dispatch => {\r\n    //ALPD-3511 added loadEsignStateHandle key to handle EsignStateHandle component\r\n    if (updateInfo.data.loadEsign === true || updateInfo.data.loadEsignStateHandle) {\r\n\r\n        const currentTimeUrl = rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        });\r\n        const reasonUrl = rsapi.post(\"/reason/getReason\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        });\r\n        dispatch(initRequest(true));\r\n        Axios.all([currentTimeUrl, reasonUrl])\r\n            .then(response => {\r\n\r\n                const reasonMap = constructOptionList(response[1].data || [], \"nreasoncode\",\r\n                    \"sreason\", undefined, undefined, false);\r\n                const reasonList = reasonMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: updateInfo.typeName,\r\n                    payload: {\r\n                        serverTime: rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo, response[0].data),\r\n                        esignReasonList: reasonList,\r\n                        ...updateInfo.data,\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: updateInfo.typeName,\r\n            payload: {\r\n                ...updateInfo.data,\r\n                masterStatus: \"\",\r\n                errorCode: undefined\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getChangeUserRole = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getchangerole\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//commend by gowtham \r\n// export const getLoginDetails = () => {\r\n//     return (dispatch) => {\r\n//         dispatch(initRequest(true));\r\n//         rsapi.post(\"/login/getloginInfo\", {})\r\n//             .then(response => {\r\n//                 // let loginType = [];\r\n//                 // response.data.LoginType.map(type => {\r\n//                 //     loginType\r\n//                 // })\r\n//                 const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n//                 let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n//                 let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n//                 const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN,\r\n//                     payload: {\r\n//                         loginTypes: response.data.LoginType,\r\n//                         loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n//                         languageList: languageMap.get(\"OptionList\"),\r\n//                         nlanguagecode: defaultLanguage || \"\",\r\n//                         selectedRecord: {\r\n//                             nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n//                             nlanguagecode: defaultLanguage || \"\"\r\n//                         },\r\n//                         language: defaultLanguage.value,\r\n//                         loading: false\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN,\r\n//                     payload: {\r\n//                         loading: false\r\n//                     }\r\n//                 });\r\n//                 if (error.response && error.response.status === 500) {\r\n//                     toast.error(intl.formatMessage({\r\n//                         id: error.message\r\n//                     }));\r\n//                 } else if (error.response === undefined) {\r\n//                     toast.warn(\"Service not available\");\r\n//                 } else {\r\n//                     toast.warn(intl.formatMessage({\r\n//                         id: error.response.data\r\n//                     }));\r\n//                 }\r\n//             });\r\n//     }\r\n// }\r\n\r\nexport const getLoginDetails = () => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n\r\n        // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\r\n        rsapi.post(\"/login/getJavaTime\")\r\n        .then(response => {\r\n            const maintenanceBreakPopUp = (breakTime) => {\r\n                const confirmMessage = new ConfirmMessage();\r\n                confirmMessage.confirm(\r\n                    \"MaintainceBreakMessage\",\r\n                        intl.formatMessage({\r\n                            id: \"IDS_MAINTAINCEBREAK\"\r\n                        }),\r\n                        intl.formatMessage({\r\n                            id: \"IDS_MAINTAINCEBREAKMESSAGE\"\r\n                        }),\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        false,\r\n                        undefined,\r\n                        breakTime\r\n                    );\r\n                }\r\n                let MaintenanceBreak = 0;\r\n                if (PostgreSQLMaintenance.STARTHOUR > PostgreSQLMaintenance.ENDHOUR) {\r\n                    const minutesLeftToday = (60 - PostgreSQLMaintenance.STARTMINUTE) + ((23 - PostgreSQLMaintenance.STARTHOUR) * 60);\r\n                    const minutesNextDay = (PostgreSQLMaintenance.ENDHOUR * 60) + PostgreSQLMaintenance.ENDMINUTE;\r\n                    MaintenanceBreak = minutesLeftToday + minutesNextDay;\r\n                } else if (PostgreSQLMaintenance.STARTHOUR < PostgreSQLMaintenance.ENDHOUR) {\r\n                    const minutesThisDay = ((PostgreSQLMaintenance.ENDHOUR - PostgreSQLMaintenance.STARTHOUR) * 60)\r\n                        - PostgreSQLMaintenance.STARTMINUTE + PostgreSQLMaintenance.ENDMINUTE;\r\n                        MaintenanceBreak = minutesThisDay;\r\n                } else {\r\n                    MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - PostgreSQLMaintenance.STARTMINUTE;\r\n                }                \r\n                const date = new Date();\r\n                date.setHours(response.data.Hours);\r\n                date.setMinutes(response.data.Minutes);\r\n                date.setSeconds(response.data.Seconds);\r\n                \r\n                const isMaintenanceTime = () => {\r\n                    if (\r\n                        (date.getHours() > PostgreSQLMaintenance.STARTHOUR || \r\n                        (date.getHours() === PostgreSQLMaintenance.STARTHOUR && date.getMinutes() >= PostgreSQLMaintenance.STARTMINUTE)) &&\r\n                        (date.getHours() < PostgreSQLMaintenance.ENDHOUR || \r\n                        (date.getHours() === PostgreSQLMaintenance.ENDHOUR && date.getMinutes() < PostgreSQLMaintenance.ENDMINUTE))\r\n                    ) {\r\n                        MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - date.getMinutes();\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                };\r\n                \r\n                const incrementTimeByMinute = () => {\r\n                    date.setMinutes(date.getMinutes() + 1);\r\n                    if (date.getMinutes() === 60) {\r\n                        date.setMinutes(0);\r\n                        date.setHours(date.getHours() + 1);\r\n                    }\r\n                    if (date.getHours() === 24) {\r\n                        date.setHours(0);\r\n                    }\r\n                };\r\n                \r\n                const maintenanceCheck = () => {\r\n                    if (isMaintenanceTime()) {\r\n                        maintenanceBreakPopUp(60000 * MaintenanceBreak);\r\n                    }\r\n                };\r\n                \r\n                setTimeout(() => {\r\n                    incrementTimeByMinute();\r\n                    maintenanceCheck();\r\n                    \r\n                    setInterval(() => {\r\n                        incrementTimeByMinute();\r\n                        maintenanceCheck();\r\n                    }, 60000);\r\n                    \r\n                }, (60 - (date.getSeconds() + 1)) * 1000);\r\n                \r\n                if (isMaintenanceTime()) {\r\n                    maintenanceBreakPopUp(60000 * MaintenanceBreak);\r\n                }else{\r\n                    // for Vacuum End\r\n                    \r\n                    rsapi.post(\"/login/getloginInfo\", {})\r\n                        .then(response => {\r\n            \r\n                            const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n                            let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n                            let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n                            const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n            \r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    loginTypes: response.data.LoginType,\r\n                                    loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n                                    languageList: languageMap.get(\"OptionList\"),\r\n                                    nlanguagecode: defaultLanguage || \"\",\r\n                                    selectedRecord: {\r\n                                        nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n                                        nlanguagecode: defaultLanguage || \"\"\r\n                                    },\r\n                                    language: defaultLanguage.value,\r\n                                    loading: false\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    loading: false\r\n                                }\r\n                            });\r\n                            if (error.response && error.response.status === 500) {\r\n                                toast.error(intl.formatMessage({\r\n                                    id: error.message\r\n                                }));\r\n                            } else if (error.response === undefined) {\r\n                                toast.warn(\"Service not available\");\r\n                            } else {\r\n                                toast.warn(intl.formatMessage({\r\n                                    id: error.response.data\r\n                                }));\r\n                            }\r\n                        });\r\n                }\r\n                \r\n            });\r\n        }\r\n}\r\n\r\nexport const getUserSiteAndRole = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginvalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                if (inputParam.Language !== undefined && inputParam.logintype !== undefined) {\r\n                    //Start\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n                    if (response.data && response.data.NewAdsUser && response.data.NewAdsUser === \"true\") {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openADSModal: true,\r\n                                userInfo: {\r\n                                    nlogintypecode: inputParam.nlogintypecode || selectedRecord.nlogintypecode && selectedRecord.nlogintypecode.value,\r\n                                },\r\n                                screenName: \"IDS_NEWADSUSERVALIDATION\",\r\n                                loading: false,\r\n                                createPwdRecord: {},\r\n                            }\r\n                        });\r\n                    }\r\n                    //End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n                    else {\r\n                        const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                        const siteMap = constructOptionList(response.data.Site || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                        let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                        let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                        if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                            logintypecode = inputParam.logintype;\r\n                            loggeInLoginTypeCode = logintypecode[0].value;\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loginUserRole: roleMap.get(\"OptionList\"),\r\n                                loginUserSite: siteMap.get(\"OptionList\"),\r\n                                nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                    roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                                nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                    siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                                nusercode: response.data.Users.nusercode,\r\n                                nlogintypecode: logintypecode ? logintypecode[0] : \"\",\r\n\r\n                                selectedRecord: {\r\n                                    ...selectedRecord,\r\n                                    nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                        roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                                    nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                        siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                                    nusercode: response.data.Users.nusercode,\r\n                                    nlogintypecode: logintypecode ? logintypecode[0] : \"\"\r\n                                },\r\n\r\n                                openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                                passwordPolicy: response.data.PasswordPolicy,\r\n                                screenName: \"IDS_CREATEPASSWORD\",\r\n                                loading: false,\r\n                                PassFlag: response.data.PassFlag,\r\n                                createPwdRecord: {},\r\n                                userInfo: {\r\n                                    nlogintypecode: loggeInLoginTypeCode\r\n                                }\r\n                            }\r\n\r\n\r\n                        });\r\n                    }\r\n                } else {\r\n                    toast.warn(inputParam.Language === undefined ? \"Language not available\" : \"Login type not available\");\r\n                }\r\n            }\r\n            )\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const createPassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/createnewpassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCREATEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//Start ALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\nexport const validateADSPassword = (inputParam) => {\r\n    let selectedRecord = inputParam.selectedRecord || {};\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/validateadspassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n\r\n                if (inputParam.slanguagefilename !== undefined) {\r\n\r\n                    const roleMap = constructOptionList((response.data && response.data.UserMultiRole) || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                    const siteMap = constructOptionList((response.data && response.data.Site) || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                    // let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                    // let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                    // if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                    //     logintypecode = inputParam.logintype;\r\n                    //     loggeInLoginTypeCode = logintypecode[0].value;\r\n                    // }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loginUserRole: roleMap.get(\"OptionList\"),\r\n                            loginUserSite: siteMap.get(\"OptionList\"),\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                            nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                            nusercode: response.data.Users.nusercode,\r\n                            nlogintypecode: inputParam.nlogintypecode,\r\n\r\n                            selectedRecord: {\r\n                                ...selectedRecord,\r\n                                nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                    roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                                nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                    siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                                nusercode: response.data.Users.nusercode,\r\n                                //nlogintypecode: ...inputParam.nlogintypecode || \"\"\r\n                            },\r\n\r\n                            openADSModal: false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            // screenName: \"IDS_CREATEPASSWORD\",\r\n                            loading: false,\r\n                            // PassFlag: response.data.PassFlag,\r\n                            createPwdRecord: {},\r\n                            userInfo: {\r\n                                nlogintypecode: inputParam.nlogintypecode\r\n                            }\r\n                        }\r\n\r\n\r\n                    });\r\n\r\n                } else {\r\n                    toast.warn(\"Language not available\");\r\n                }\r\n            }\r\n            )\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n\r\n\r\n            });\r\n    }\r\n}\r\n//End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n\r\nexport const changepassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changepassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        navigation: \"login\"\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCHANGEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function validateEsignforDigitalSignature(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"performaction\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    dispatch(saveDigitalSign(inputParam[\"screenData\"][\"inputParam\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport const saveDigitalSign = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        const formData = inputParam.formData;\r\n        formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));\r\n        rsapi.post(\"/digitalsignature/updateDigitalSignature\", formData)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        loadEsign: false\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_DIGITALSIGNATURESAVEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getPassWordPolicy = (nuserrolecode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getPassWordPolicy\", {\r\n            nuserrolecode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        screenName: \"IDS_CHANGEPASSWORD\",\r\n                        passwordPolicy: response.data.PasswordPolicy\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getDigitalSign = (nusercode, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/digitalsignature/getDigitalSignature\", {\r\n            nusercode: nusercode, userInfo: userInfo\r\n        })\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let selectedDigiSign = responseData !== \"\" ? responseData : {}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        screenName: \"IDS_DIGITALSIGNATURE\",\r\n                        operation: \"update\",\r\n                        selectedDigiSign,\r\n                        isInitialRender: true\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeOwner = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changeOwner\", {\r\n            ...inputData\r\n        })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const inputParam = {\r\n                    userInfo: responseData.UserInfo,\r\n                    menuDesign: responseData.MenuDesign,\r\n                    userRoleControlRights: responseData.UserRoleControlRights,\r\n                    userFormControlProperties: responseData.UserFormControlproperties,\r\n                    transactionValidation: responseData.TransactionValidation,\r\n                    //displayName: \"\",\r\n                    userMultiRole: responseData.UserMultiRole,\r\n                    isDeputyLogin: true,\r\n                    // settings: responseData.Settings,\r\n                    //deputyUser: responseData.DeputyUser,\r\n                    // deputyUserRole: responseData.DeputyUserRole,\r\n                    loading: false,\r\n                    masterData: [],\r\n                    //navigation: \"home\",\r\n                    navigation: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename,\r\n                    defaultMenuHome: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0],\r\n                    inputParam: {},\r\n                    displayName: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].sdisplayname,\r\n                    openRoleBox: false,\r\n                    userImagePath: responseData.UserImagePath,\r\n                    profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                    idleneed: true\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: inputParam\r\n                });\r\n                if ((response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename === 'dashboard') {\r\n                    dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                } else if (inputParam.navigation === 'apiservice') {\r\n                    const inputParam1 = {\r\n                        inputData: { currentdate: formatInputDate(new Date(), true), \"userinfo\": response.data.UserInfo },\r\n                        serviceNeed: true, classUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename, methodUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].smethodurl\r\n                    };\r\n                    dispatch(callService(inputParam1));\r\n                }\r\n                //dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOutAuditAction = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/insertAuditAction', {\r\n            ...inputData,\r\n            nFlag: 2\r\n        })\r\n            .then(response => {\r\n                languageList &&\r\n                    languageList.map(x => {\r\n                        loadMessages({}, x.slanguagetypecode);\r\n                    })\r\n                dispatch(navPage(\"login\"))\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const elnLoginAction = (inputParam, serverUrl, uiUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.objResponse !== null) {\r\n                    if (response.data.objResponse.status) {\r\n                        if (uiUrl) {\r\n                            let user = response;\r\n                            let elnURL = uiUrl + \"#\" + user.data.username + \"$\" + user.data.password;\r\n                            window.open(elnURL, '_blank');\r\n                        } else {\r\n                            toast.info(intl.FormattedMessage({\r\n                                id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                            }))\r\n                        }\r\n                    } else {\r\n                        toast.info(response.data.objResponse.information);\r\n                    }\r\n                    // if(!$(\"#appsdetails\").is(\":hidden\")){\r\n                    //     $('#appsdetails').addClass(\"dp-none\");\r\n                    // }\r\n                };\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const sdmsLoginAction = (inputParam, serverUrl, sdmsUIUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.status) {\r\n                    if (response.data.status) {\r\n                        const sdmsURL = sdmsUIUrl + \"?un=\" + response.data.username + \"&pd=\" + response.data.password + \"&sc=\" + inputParam.sSiteCode;\r\n                        window.open(sdmsURL, '_blank');\r\n                    } else {\r\n                        toast.info(response.Message);\r\n                    }\r\n                } else {\r\n                    toast.info(intl.FormattedMessage({\r\n                        id: \"IDS_CHECKSYNCSERVICE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersiteRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/changeSite', {\r\n            \"usersSite\": inputParam.selectedRecord.nusersitecode.item\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\"\r\n\r\n\r\n                        },\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkPassword = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getlogintypevalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusercode: response.data.Users.nusercode\r\n                        },\r\n                        userInfo: {\r\n                            nlogintypecode: inputParam.nlogintypecode\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getDashBoardForHome(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/staticdashboard/getListStaticDashBoard\", { 'userinfo': inputParam.data.userInfo })\r\n\r\n            .then(response => {\r\n\r\n                let respObject = { masterDataStatic: response.data, loading: false, userInfo: inputParam.data.userInfo };\r\n                if (response.data !== null && Object.keys(response.data).length > 0) {\r\n                    respObject = { ...inputParam.data, ...respObject, currentPageNo: -1 };\r\n                }\r\n                dispatch(getHomeDashBoard(inputParam.data.userInfo, 0, false, respObject));\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getcolorMaster = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/useruiconfig/getcolormastertheme\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitUserTheme = (useruiconfig, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/useruiconfig/createUserUiConfig\", {\r\n            \"useruiconfig\": useruiconfig, \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n//ALPD-4102\r\nexport const getAboutInfo = (userinfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getAboutInfo\", {\r\n            userinfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openAboutModal: true,\r\n                        loading: false,\r\n                        screenName: \"IDS_ABOUT\",\r\n                        aboutInfo: response.data.jsondata\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}