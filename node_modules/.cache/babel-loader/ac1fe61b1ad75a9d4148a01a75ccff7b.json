{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\attachmentscomments\\\\attachments\\\\Attachments.jsx\";\nimport React, { Component } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ListAttachment from '../../../components/ListAttachment';\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport AddAttachment from './AddAttachment';\nimport { updateStore, getAttachmentCombo, validateEsignCredential, crudMaster, viewAttachment, deleteAttachment } from '../../../actions';\nimport { connect } from 'react-redux';\nimport { attachmentType, designProperties, transactionStatus } from '../../../components/Enumeration';\nimport Esign from '../../audittrail/Esign';\nimport { QUALISFORMS } from '../../../components/Enumeration';\nimport { deleteAttachmentDropZone, onDropAttachFileList, Lims_JSON_stringify } from '../../../components/CommonScript';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Attachments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.onDropFiles = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onAttachmentInputChange = (event, caseNo, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (caseNo) {\n        case 1:\n          if (event.target.type === 'radio') {\n            selectedRecord[event.target.name] = event.target.checked === true && optional; // selectedRecord[\"sfilename\"] = \"\";\n          } else if (event.target.type === 'checkbox') {\n            selectedRecord[event.target.name] = event.target.checked == true ? transactionStatus.YES : transactionStatus.NO;\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n\n          this.setState({\n            selectedRecord\n          });\n          break;\n\n        default:\n          selectedRecord[event.target.name] = event.target.value;\n          this.setState({\n            selectedRecord\n          });\n          break;\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, comboName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[comboName] = [];\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      // const masterData = this.props.Login.masterData;\n      // let inputData = {}\n      // let inputParam = {}\n      // inputData[\"userinfo\"] = this.props.Login.userInfo;\n      // if(this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n      //     let saveParam={userInfo:this.props.Login.userInfo,\n      //         selectedRecord:this.state.selectedRecord,\n      //         masterData:this.props.Login.masterData,\n      //         saveType, formRef,\n      //         operation:this.props.Login.operation,\n      //         selectedMaster:this.props.selectedMaster\n      //     }\n      //     inputParam = onSaveSampleAttachment(saveParam,this.props.selectedMaster);\n      // }else if(this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n      //     let saveParam={userInfo:this.props.Login.userInfo,\n      //         selectedRecord:this.state.selectedRecord,\n      //         masterData:this.props.Login.masterData,\n      //         saveType, formRef,\n      //         operation:this.props.Login.operation,\n      //         selectedMaster:this.props.selectedMaster\n      //     }\n      //     inputParam = onSaveTestAttachment(saveParam,this.props.selectedMaster);\n      this.props.onSaveClick(saveType, formRef, this.state.selectedRecord); // }\n      // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: {\n      //             loadEsign: true,\n      //             screenData: { inputParam, masterData },\n      //             operation: this.props.Login.operation,\n      //             screenName: this.props.Login.screenName,\n      //         }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n      // }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openAttachmentModal = this.props.Login.openAttachmentModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let operation = this.props.Login.operation;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openAttachmentModal = false;\n          selectedRecord = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        openAttachmentModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openAttachmentModal,\n          loadEsign,\n          selectedRecord,\n          selectedParamId: null,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename),\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.operation === 'dynamic') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openAttachmentModal\");\n      }\n    };\n\n    this.viewFile = filedata => {\n      const inputParam = {\n        inputData: {\n          file: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"attachment\",\n        operation: \"view\",\n        methodUrl: this.props.methodUrl,\n        screenName: this.props.Login.screenName\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.state = {\n      showMore: {},\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let subFields = this.props.subFields ? this.props.subFields : [{\n      [designProperties.LABEL]: `${this.props.Login.screenName === 'IDS_TESTATTACHMENTS' ? 'IDS_TESTNAME' : this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS' ? this.props.Login.genericLabel ? this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\" : this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_ARNO\"}`\n    }, {\n      [designProperties.VALUE]: `${this.props.screenName === 'IDS_SAMPLEATTACHMENTS' ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ? \"groupingField\" : \"sarno\" : this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS' ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ? \"groupingField2\" : \"ssamplearno\" : \"stestsynonym\"}`\n    }, {\n      [designProperties.VALUE]: \"screateddate\"\n    } // { [designProperties.VALUE]: \"nfilesize\", \"fieldType\": \"size\" }\n    ];\n    let moreField = this.props.moreField ? this.props.moreField : [{\n      [designProperties.LABEL]: \"IDS_SCREENNAME\",\n      [designProperties.VALUE]: \"sdisplayname\"\n    }, {\n      [designProperties.LABEL]: \"IDS_USERNAME\",\n      [designProperties.VALUE]: \"susername\"\n    }, {\n      [designProperties.LABEL]: \"IDS_USERROLE\",\n      [designProperties.VALUE]: \"suserrolename\"\n    }, this.props.isneedHeader ? this.props.isneedHeader && {\n      [designProperties.LABEL]: \"IDS_HEADER\",\n      [designProperties.VALUE]: \"sheader\"\n    } : \"\", {\n      [designProperties.LABEL]: \"IDS_DESCRIPTION\",\n      [designProperties.VALUE]: \"sdescription\"\n    }, this.props.isneedReport ? this.props.isneedReport && {\n      [designProperties.LABEL]: \"IDS_INCULDEINREPORT\",\n      [designProperties.VALUE]: \"sneedreport\"\n    } : \"\"];\n\n    if (this.props.screenName === 'IDS_TESTATTACHMENTS') {\n      if (this.props.nsubsampleneed === true) {\n        if (this.props.moreField === undefined) {\n          moreField.unshift({\n            [designProperties.LABEL]: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n            [designProperties.VALUE]: \"groupingField2\"\n          });\n        }\n\n        ;\n      }\n\n      if (this.props.moreField === undefined) {\n        moreField.unshift({\n          //  [designProperties.LABEL]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`, \n          //  [designProperties.VALUE]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"ssamplearno\" : \"sarno\"}`\n          [designProperties.LABEL]: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_ARNO\",\n          [designProperties.VALUE]: \"groupingField1\"\n        });\n      }\n\n      ;\n    }\n\n    let addFileId = this.props.controlMap.has(this.props.addName) && this.props.controlMap.get(this.props.addName).ncontrolcode;\n    let editFileId = this.props.controlMap.has(this.props.editName) && this.props.controlMap.get(this.props.editName).ncontrolcode;\n    let deleteFileId = this.props.controlMap.has(this.props.deleteName) && this.props.controlMap.get(this.props.deleteName).ncontrolcode;\n    let viewFileId = this.props.controlMap.has(this.props.viewName) && this.props.controlMap.get(this.props.viewName).ncontrolcode;\n    let mandatoryFields = [];\n\n    if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_FILENAME\",\n        \"dataField\": \"slinkfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_LINKNAME\",\n        \"dataField\": \"nlinkcode\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      });\n    } else {\n      // if (this.props.Login.operation !== 'update') {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": \"sfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }); // if(this.props.isneedHeader){\n      //     mandatoryFields.push(\n      //         { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" })       \n      // }\n      // }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: `add_${this.props.Login.screenName}_file`,\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addFileId) === -1,\n      onClick: () => this.props.getAttachmentCombo({\n        userInfo: this.props.Login.userInfo,\n        operation: \"create\",\n        ncontrolCode: addFileId,\n        screenName: this.props.screenName,\n        modalName: \"openAttachmentModal\",\n        masterList: this.props.masterList,\n        masterAlertStatus: this.props.masterAlertStatus\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ATTACHMENT\",\n      defaultMessage: \"Attachment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ListAttachment, {\n      attachmentList: this.props.attachments,\n      fileName: \"sfilename\",\n      filesize: \"nfilesize\",\n      linkname: \"slinkname\",\n      isjsonfield: true,\n      jsonfield: \"jsondata\",\n      deleteRecord: this.props.deleteAttachment,\n      deleteParam: this.props.deleteParam,\n      editParam: { ...this.props.editParam,\n        operation: \"update\",\n        ncontrolCode: editFileId,\n        screenName: this.props.screenName,\n        modalName: \"openAttachmentModal\",\n        masterList: this.props.masterList,\n        masterAlertStatus: this.props.masterAlertStatus\n      },\n      fetchRecord: this.props.fetchRecord,\n      deleteId: deleteFileId,\n      editId: editFileId,\n      viewId: viewFileId,\n      userRoleControlRights: this.props.userRoleControlRights,\n      viewFile: this.viewFile,\n      mainField: this.props.mainField,\n      subFields: subFields,\n      moreField: moreField,\n      hidePaging: false,\n      userInfo: this.props.Login.userInfo // skip={this.props.skip}\n      // take={this.props.take}\n      ,\n      settings: this.props.Login.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), this.props.Login.openAttachmentModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openAttachmentModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddAttachment, {\n        selectedRecord: this.state.selectedRecord || {},\n        onDrop: this.onDropFiles,\n        deleteAttachment: this.deleteAttachment,\n        jsonField: 'jsondata',\n        actionType: this.state.actionType,\n        linkMaster: this.props.Login.linkMaster,\n        onInputOnChange: this.onAttachmentInputChange,\n        editFiles: this.props.Login.editFiles,\n        onComboChange: this.onComboChange,\n        maxSize: 20,\n        fileNameLength: this.props.screenName === 'IDS_TESTATTACHMENTS' ? 255 : 150,\n        maxFiles: this.props.Login.operation === \"update\" ? 1 : 3,\n        operation: this.props.Login.operation,\n        selectedListName: this.props.selectedListName,\n        displayName: this.props.displayName,\n        masterList: this.props.masterList,\n        multiple: this.props.Login.operation === \"update\" ? false : true,\n        isneedReport: this.props.isneedReport || false,\n        isneedHeader: this.props.isneedHeader || false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  viewAttachment,\n  validateEsignCredential,\n  crudMaster,\n  getAttachmentCombo,\n  deleteAttachment\n})(injectIntl(Attachments));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/attachmentscomments/attachments/Attachments.jsx"],"names":["React","Component","Nav","FontAwesomeIcon","FormattedMessage","injectIntl","faPlus","ListAttachment","SlideOutModal","DEFAULT_RETURN","AddAttachment","updateStore","getAttachmentCombo","validateEsignCredential","crudMaster","viewAttachment","deleteAttachment","connect","attachmentType","designProperties","transactionStatus","Esign","QUALISFORMS","deleteAttachmentDropZone","onDropAttachFileList","Lims_JSON_stringify","mapStateToProps","state","Login","Attachments","constructor","props","event","file","fieldName","selectedRecord","setState","actionType","onDropFiles","attachedFiles","maxSize","onAttachmentInputChange","caseNo","optional","target","type","name","checked","YES","NO","value","onInputOnChange","onComboChange","comboData","comboName","onSaveClick","saveType","formRef","handleClose","loadEsign","openAttachmentModal","operation","undefined","updateInfo","typeName","data","selectedParamId","validateEsign","inputParam","inputData","userInfo","sformname","smodulename","slanguagename","sreason","nreasoncode","spredefinedreason","label","password","screenData","validateEsignforApproval","viewFile","filedata","userinfo","classUrl","methodUrl","screenName","showMore","render","subFields","LABEL","genericLabel","slanguagetypecode","VALUE","nformcode","SAMPLEREGISTRATION","moreField","isneedHeader","isneedReport","nsubsampleneed","unshift","addFileId","controlMap","has","addName","get","ncontrolcode","editFileId","editName","deleteFileId","deleteName","viewFileId","viewName","mandatoryFields","nattachmenttypecode","LINK","push","userRoleControlRights","indexOf","ncontrolCode","modalName","masterList","masterAlertStatus","attachments","deleteParam","editParam","fetchRecord","mainField","settings","masterStatus","linkMaster","editFiles","selectedListName","displayName","componentDidUpdate","previousProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport ListAttachment from '../../../components/ListAttachment';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport AddAttachment from './AddAttachment';\r\nimport {\r\n    updateStore, getAttachmentCombo, validateEsignCredential, crudMaster, viewAttachment, deleteAttachment\r\n} from '../../../actions'\r\nimport { connect } from 'react-redux';\r\nimport { attachmentType, designProperties, transactionStatus } from '../../../components/Enumeration';\r\nimport Esign from '../../audittrail/Esign';\r\nimport { QUALISFORMS } from '../../../components/Enumeration';\r\nimport { deleteAttachmentDropZone, onDropAttachFileList,  Lims_JSON_stringify } from '../../../components/CommonScript';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Attachments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            selectedRecord: {}\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let subFields = this.props.subFields ? this.props.subFields : [\r\n            ({\r\n                [designProperties.LABEL]: `${this.props.Login.screenName === 'IDS_TESTATTACHMENTS' ? 'IDS_TESTNAME' :\r\n                    this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS'\r\n                        ? this.props.Login.genericLabel ? this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\" \r\n                        : this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:\"IDS_ARNO\"}`\r\n            }),\r\n            {\r\n                [designProperties.VALUE]: `${this.props.screenName === 'IDS_SAMPLEATTACHMENTS'\r\n                    ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION\r\n                        ? \"groupingField\" : \"sarno\"\r\n                    : this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS'\r\n                        ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ?\r\n                            \"groupingField2\" : \"ssamplearno\" :\r\n                        \"stestsynonym\"}`\r\n            },\r\n            { [designProperties.VALUE]: \"screateddate\" },\r\n            // { [designProperties.VALUE]: \"nfilesize\", \"fieldType\": \"size\" }\r\n        ];\r\n        let moreField = this.props.moreField ? this.props.moreField : [\r\n            { [designProperties.LABEL]: \"IDS_SCREENNAME\", [designProperties.VALUE]: \"sdisplayname\" },\r\n            { [designProperties.LABEL]: \"IDS_USERNAME\", [designProperties.VALUE]: \"susername\" },\r\n            { [designProperties.LABEL]: \"IDS_USERROLE\", [designProperties.VALUE]: \"suserrolename\" },\r\n            this.props.isneedHeader  ? this.props.isneedHeader &&\r\n            { [designProperties.LABEL]: \"IDS_HEADER\", [designProperties.VALUE]: \"sheader\" } :\"\",\r\n            { [designProperties.LABEL]: \"IDS_DESCRIPTION\", [designProperties.VALUE]: \"sdescription\" },\r\n            this.props.isneedReport  ? this.props.isneedReport &&\r\n            { [designProperties.LABEL]: \"IDS_INCULDEINREPORT\", [designProperties.VALUE]: \"sneedreport\" } :\"\"\r\n        ];\r\n        if (this.props.screenName === 'IDS_TESTATTACHMENTS') {\r\n            if (this.props.nsubsampleneed === true) {\r\n                if (this.props.moreField === undefined  ) {\r\n                    moreField.unshift({\r\n                        [designProperties.LABEL]: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\",\r\n                        [designProperties.VALUE]: \"groupingField2\"\r\n                    })\r\n                };\r\n            }\r\n\r\n            if (this.props.moreField === undefined ) {\r\n                moreField.unshift({\r\n                    //  [designProperties.LABEL]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`, \r\n                    //  [designProperties.VALUE]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"ssamplearno\" : \"sarno\"}`\r\n                    [designProperties.LABEL]: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:\"IDS_ARNO\",\r\n                    [designProperties.VALUE]: \"groupingField1\"\r\n                })\r\n            };\r\n        }\r\n        let addFileId = this.props.controlMap.has(this.props.addName) && this.props.controlMap.get(this.props.addName).ncontrolcode;\r\n        let editFileId = this.props.controlMap.has(this.props.editName) && this.props.controlMap.get(this.props.editName).ncontrolcode;\r\n        let deleteFileId = this.props.controlMap.has(this.props.deleteName) && this.props.controlMap.get(this.props.deleteName).ncontrolcode;\r\n        let viewFileId = this.props.controlMap.has(this.props.viewName) && this.props.controlMap.get(this.props.viewName).ncontrolcode;\r\n        let mandatoryFields = [];\r\n        if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n            mandatoryFields.push(\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" })\r\n        } else {\r\n            // if (this.props.Login.operation !== 'update') {\r\n            mandatoryFields.push(\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            );\r\n            // if(this.props.isneedHeader){\r\n            //     mandatoryFields.push(\r\n            //         { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" })       \r\n            // }\r\n            // }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"actions-stripe border-bottom\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Nav.Link name={`add_${this.props.Login.screenName}_file`} className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addFileId) === -1}\r\n                            onClick={() => this.props.getAttachmentCombo({ userInfo: this.props.Login.userInfo, operation: \"create\", ncontrolCode: addFileId, screenName: this.props.screenName, modalName: \"openAttachmentModal\", masterList: this.props.masterList, masterAlertStatus: this.props.masterAlertStatus })}>\r\n                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                            <FormattedMessage id=\"IDS_ATTACHMENT\" defaultMessage=\"Attachment\" />\r\n                        </Nav.Link>\r\n                    </div>\r\n                </div>\r\n                <ListAttachment\r\n                    attachmentList={this.props.attachments}\r\n                    fileName=\"sfilename\"\r\n                    filesize=\"nfilesize\"\r\n                    linkname=\"slinkname\"\r\n                    isjsonfield={true}\r\n                    jsonfield=\"jsondata\"\r\n                    deleteRecord={this.props.deleteAttachment}\r\n                    deleteParam={this.props.deleteParam}\r\n                    editParam={{ ...this.props.editParam, operation: \"update\", ncontrolCode: editFileId, screenName: this.props.screenName, modalName: \"openAttachmentModal\", masterList: this.props.masterList, masterAlertStatus: this.props.masterAlertStatus }}\r\n                    fetchRecord={this.props.fetchRecord}\r\n                    deleteId={deleteFileId}\r\n                    editId={editFileId}\r\n                    viewId={viewFileId}\r\n                    userRoleControlRights={this.props.userRoleControlRights}\r\n                    viewFile={this.viewFile}\r\n                    mainField={this.props.mainField}\r\n                    subFields={subFields}\r\n                    moreField={moreField}\r\n                    hidePaging={false}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    // skip={this.props.skip}\r\n                    // take={this.props.take}\r\n                    settings={this.props.Login.settings}\r\n                />\r\n                {\r\n                    this.props.Login.openAttachmentModal ?\r\n                        <SlideOutModal\r\n                            onSaveClick={this.onSaveClick}\r\n                            operation={this.props.Login.operation}\r\n                            screenName={this.props.Login.screenName}\r\n                            closeModal={this.handleClose}\r\n                            show={this.props.Login.openAttachmentModal}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            mandatoryFields={mandatoryFields}\r\n                            addComponent={this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                <AddAttachment\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onDrop={this.onDropFiles}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    jsonField={'jsondata'}\r\n                                    actionType={this.state.actionType}\r\n                                    linkMaster={this.props.Login.linkMaster}\r\n                                    onInputOnChange={this.onAttachmentInputChange}\r\n                                    editFiles={this.props.Login.editFiles}\r\n                                    onComboChange={this.onComboChange}\r\n                                    maxSize={20}\r\n                                    fileNameLength={this.props.screenName === 'IDS_TESTATTACHMENTS' ? 255 : 150}\r\n                                    maxFiles={this.props.Login.operation === \"update\" ? 1 : 3}\r\n                                    operation={this.props.Login.operation}\r\n                                    selectedListName={this.props.selectedListName}\r\n                                    displayName={this.props.displayName}\r\n                                    masterList={this.props.masterList}\r\n                                    multiple={this.props.Login.operation === \"update\" ? false : true}\r\n                                    isneedReport={this.props.isneedReport || false}\r\n                                    isneedHeader={this.props.isneedHeader||false}\r\n                                />\r\n                            }\r\n                        />\r\n                        : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n\r\n    onDropFiles = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n\r\n    onAttachmentInputChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true && optional;\r\n                    // selectedRecord[\"sfilename\"] = \"\";\r\n                } \r\n                else if(event.target.type === 'checkbox')\r\n                {\r\n                    selectedRecord[event.target.name] = event.target.checked == true ? transactionStatus.YES : transactionStatus.NO;\r\n                }\r\n                else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        // const masterData = this.props.Login.masterData;\r\n        // let inputData = {}\r\n        // let inputParam = {}\r\n        // inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // if(this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n        //     let saveParam={userInfo:this.props.Login.userInfo,\r\n        //         selectedRecord:this.state.selectedRecord,\r\n        //         masterData:this.props.Login.masterData,\r\n        //         saveType, formRef,\r\n        //         operation:this.props.Login.operation,\r\n        //         selectedMaster:this.props.selectedMaster\r\n        //     }\r\n        //     inputParam = onSaveSampleAttachment(saveParam,this.props.selectedMaster);\r\n        // }else if(this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n        //     let saveParam={userInfo:this.props.Login.userInfo,\r\n        //         selectedRecord:this.state.selectedRecord,\r\n        //         masterData:this.props.Login.masterData,\r\n        //         saveType, formRef,\r\n        //         operation:this.props.Login.operation,\r\n        //         selectedMaster:this.props.selectedMaster\r\n        //     }\r\n        //     inputParam = onSaveTestAttachment(saveParam,this.props.selectedMaster);\r\n        this.props.onSaveClick(saveType, formRef, this.state.selectedRecord)\r\n        // }\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true,\r\n        //             screenData: { inputParam, masterData },\r\n        //             operation: this.props.Login.operation,\r\n        //             screenName: this.props.Login.screenName,\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        // }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openAttachmentModal = this.props.Login.openAttachmentModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let operation = this.props.Login.operation;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openAttachmentModal = false;\r\n                selectedRecord = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n                selectedRecord['esignreason'] = '';\r\n\r\n            }\r\n        }\r\n        else {\r\n            openAttachmentModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openAttachmentModal, loadEsign, selectedRecord, selectedParamId: null, operation }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo, \r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename),\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'dynamic') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openAttachmentModal\");\r\n        }\r\n    }\r\n    viewFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                file: filedata,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"attachment\",\r\n            operation: \"view\",\r\n            methodUrl: this.props.methodUrl,\r\n            screenName: this.props.Login.screenName\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateStore, viewAttachment, validateEsignCredential, crudMaster, getAttachmentCombo, deleteAttachment\r\n})(injectIntl(Attachments));"]},"metadata":{},"sourceType":"module"}