{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from\"../rsapi\";import{toast}from\"react-toastify\";import{constructOptionList,sortData}from\"../components/CommonScript\";import{DEFAULT_RETURN}from\"./LoginTypes\";import Axios from\"axios\";import{initRequest}from\"./LoginAction\";import{transactionStatus,attachmentType}from\"../components/Enumeration\";import{intl}from\"../components/App\";//Test click\nexport var getTestMaster=function getTestMaster(testItem,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testmaster/getTestById\",{ntestcode:testItem.ntestcode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};//tab click\nexport var getTestDetails=function getTestDetails(inputParam){return function(dispatch){var testParameter=inputParam.testParameter;dispatch(initRequest(true));rsapi.post(\"/testmaster/getothertestdetails\",{ntestcode:testParameter.ntestcode,\"nFlag\":inputParam.nFlag,ntestparametercode:testParameter.ntestparametercode,userinfo:inputParam.userInfo}).then(function(response){var masterData=inputParam.masterData;masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};//Add Test\nexport var addTest=function addTest(operation,testmaster,userInfo,ncontrolCode,nfilterTestCategory){return function(dispatch){if(nfilterTestCategory&&Object.values(nfilterTestCategory).length>0){dispatch(initRequest(true));var urlArray=[rsapi.post(\"testcategory/getTestCategory\",{\"userinfo\":userInfo}),rsapi.post(\"checklist/getApprovedChecklist\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testmaster/getActiveTestById\",{\"userinfo\":userInfo,ntestcode:testmaster.ntestcode}));urlArray.push(rsapi.post(\"period/getPeriodByControl\",{\"ncontrolcode\":ncontrolCode,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testmaster/getInterfaceType\",{\"userinfo\":userInfo}));}else if(operation===\"create\"){urlArray.push(rsapi.post(\"parametertype/getParameterType\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"section/getSection\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testmaster/getAvailableMethod\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"unit/getUnit\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"instrumentcategory/fetchinstrumentcategory\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testmaster/getAddTest\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"containertype/getContainerType\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testpackage/getTestPackage\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"period/getPeriodByControl\",{\"ncontrolcode\":ncontrolCode,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testmaster/getInterfaceType\",{\"userinfo\":userInfo}));}else if(operation===\"copy\"){urlArray.push(rsapi.post(\"testmaster/validateCopyTest\",{\"userinfo\":userInfo,ntestcode:testmaster.ntestcode}));urlArray.push(rsapi.post(\"period/getPeriodByControl\",{\"ncontrolcode\":ncontrolCode,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"testmaster/getInterfaceType\",{\"userinfo\":userInfo}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var testCategoryMap=constructOptionList(response[0].data||[],\"ntestcategorycode\",\"stestcategoryname\",false,false,true);var testCategory=testCategoryMap.get(\"OptionList\");var checklistMap=constructOptionList(response[0].data||[],\"nchecklistversioncode\",\"schecklistname\",false,false,true);var ChecklistVersion=checklistMap.get(\"OptionList\");//const periodMap=[];\nvar testData={testCategory:testCategory,ChecklistVersion:ChecklistVersion};var parameterData={};var otherTestData={};var needOtherTest=false;if(operation===\"update\"){var editData=response[2].data;selectedRecord=editData;var periodMap=constructOptionList(response[3].data||[],\"nperiodcode\",\"speriodname\",false,false,true);var interfacetypeMap=constructOptionList(response[4].data||[],\"ninterfacetypecode\",\"sinterfacetypename\",false,false,true);parameterData={period:periodMap.get(\"OptionList\"),interfacetype:interfacetypeMap.get(\"OptionList\")};selectedRecord[\"ntestcategorycode\"]={\"value\":editData[\"ntestcategorycode\"],\"label\":editData[\"stestcategoryname\"]};selectedRecord[\"nchecklistversioncode\"]={\"value\":editData[\"nchecklistversioncode\"],\"label\":editData[\"schecklistname\"]};if(selectedRecord[\"ntatperiodcode\"]!==-1){selectedRecord[\"ntatperiodcode\"]={\"value\":editData[\"ntatperiodcode\"],\"label\":editData[\"statperiodname\"]};}selectedRecord[\"ninterfacetypecode\"]={\"value\":editData[\"ninterfacetypecode\"],\"label\":editData[\"sinterfacetypename\"]};}else if(operation===\"copy\"){var _periodMap=constructOptionList(response[3].data||[],\"nperiodcode\",\"speriodname\",false,false,true);var _interfacetypeMap=constructOptionList(response[4].data||[],\"ninterfacetypecode\",\"sinterfacetypename\",false,false,true);//period:periodMap.get(\"OptionList\")\nparameterData={period:_periodMap.get(\"OptionList\"),interfacetype:_interfacetypeMap.get(\"OptionList\")};selectedRecord={ntestcategorycode:nfilterTestCategory.value===-2?testCategory.length>0?// {\"label\": testCategory[0].stestcategoryname, \"value\": testCategory[0].ntestcategorycode}\ntestCategory[0]:\"\":nfilterTestCategory,ntransactionstatus:transactionStatus.ACTIVE,naccredited:transactionStatus.NOTACCREDITED,ntrainingneed:transactionStatus.NO,stestsynonym:\"\",stestname:\"\",sdescription:\"\",ncost:\"\"//period:periodMap.get(\"OptionList\"),\n};}else{// const { Grade } = response[7].data; //ParameterType\nvar parameterMap=constructOptionList(response[2].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true);// const parameterType = parameterMap.get(\"OptionList\");//response[2].data;\nvar gradeMap=constructOptionList(response[3].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);// const grade = gradeMap.get(\"OptionList\");// response[3].data;\nvar parameterItem=parameterMap.get(\"DefaultValue\")?parameterMap.get(\"DefaultValue\"):\"\";//parameterType.filter(item=>{ return item.nparametertypecode === 3 });//ParameterType[0];\nselectedRecord={// nsectioncode: {\"value\": response[2].data[0].nsectioncode, \"label\": response[2].data[0].ssectionname},\nnunitcode:-1,nparametertypecode:parameterItem,//{\"value\": parameterItem[0].nparametertypecode, \"label\": parameterItem[0].sdisplaystatus},\nntestcategorycode:nfilterTestCategory.value===-2?testCategory.length>0?// {\"label\": testCategory[0].stestcategoryname, \"value\": testCategory[0].ntestcategorycode}: \"\")\ntestCategory[0]:\"\":nfilterTestCategory,ntransactionstatus:transactionStatus.ACTIVE,naccredited:transactionStatus.NOTACCREDITED,ntrainingneed:transactionStatus.NO,stestsynonym:\"\",stestname:\"\",sdescription:\"\",ncost:\"\"};var needUnit=true;var needRoundingDigit=true;var needCodedResult=true;var needActualResult=true;var npredefinedcode=transactionStatus.NO;var unitMap=constructOptionList(response[6].data||[],\"nunitcode\",\"sunitname\",false,false,true);var _periodMap2=constructOptionList(response[11].data||[],\"nperiodcode\",\"speriodname\",false,false,true);var deltaperiodMap=constructOptionList(response[11].data||[],\"nperiodcode\",\"speriodname\",false,false,true);var _interfacetypeMap2=constructOptionList(response[12].data||[],\"ninterfacetypecode\",\"sinterfacetypename\",false,false,true);if(parameterItem&&parameterItem.item){if(parameterItem.item[\"nunit\"]===transactionStatus.YES){needUnit=false;selectedRecord[\"nunitcode\"]=unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\";//{\"value\": response[4].data[0][\"nunitcode\"], \"label\": response[4].data[0][\"sunitname\"]};\n}if(parameterItem.item[\"nroundingdigit\"]===transactionStatus.YES){needRoundingDigit=false;}if(parameterItem.item[\"npredefinedcode\"]===transactionStatus.YES){needCodedResult=false;npredefinedcode=parameterItem.item[\"npredefinedcode\"];}if(parameterItem.item[\"ngrade\"]===transactionStatus.YES){needActualResult=false;selectedRecord[\"ngradecode\"]=gradeMap.get(\"DefaultValue\")?gradeMap.get(\"DefaultValue\"):\"\";//{\"value\": Grade.ngradecode, \"label\": Grade[\"sdisplaystatus\"]};\n}}// const testParameterMap = constructOptionList(response[8].data[\"TestParameter\"] || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true);\nparameterData={grade:gradeMap.get(\"OptionList\"),parameterType:parameterMap.get(\"OptionList\"),unit:unitMap.get(\"OptionList\"),period:_periodMap2.get(\"OptionList\"),interfacetype:_interfacetypeMap2.get(\"OptionList\"),deltaperiod:deltaperiodMap.get(\"OptionList\"),needRoundingDigit:needRoundingDigit,needUnit:needUnit,needCodedResult:needCodedResult,needActualResult:needActualResult,npredefinedcode:npredefinedcode,testParameter:constructOptionList(response[8].data[\"TestParameter\"]||[],'sparametername','sparametername',false,false,true).get(\"OptionList\"),defaultUnit:unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\",defaultGrade:gradeMap.get(\"DefaultValue\")?gradeMap.get(\"DefaultValue\"):\"\"//testParameterMap.get(\"OptionList\")\n};var sectionMap=constructOptionList(response[4].data||[],\"nsectioncode\",\"ssectionname\",false,false,true);// const methodMap = constructOptionList(response[5].data.Method.length>0?response[5].data.Method:[] || [], \"nmethodcode\", \"smethodname\", false, false, true);\nvar methodMap=constructOptionList(response[5].data||[],\"nmethodcode\",\"smethodname\",false,false,true);var instCatMap=constructOptionList(response[7].data||[],\"ninstrumentcatcode\",\"sinstrumentcatname\",false,false,true);var continerType=constructOptionList(response[9].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true);var packageMap=constructOptionList(response[10].data||[],\"ntestpackagecode\",\"stestpackagename\",false,false,true);otherTestData={package:packageMap.get(\"OptionList\"),section:sectionMap.get(\"OptionList\"),method:methodMap.get(\"OptionList\"),instrumentcategory:instCatMap.get(\"OptionList\"),containertype:continerType.get(\"OptionList\")};needOtherTest=true;}dispatch({type:DEFAULT_RETURN,payload:{// parameterData: {\n//     period: periodMap.get(\"OptionList\")\n// },   \nopenModal:true,needOtherTest:needOtherTest,operation:operation,screenName:\"IDS_TEST\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,testData:testData,parameterData:parameterData,otherTestData:otherTestData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}};};//Add Test Parameter\nexport var addParameter=function addParameter(operation,ntestparametercode,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));var urlArray=[rsapi.post(\"unit/getUnit\",{\"userinfo\":userInfo}),rsapi.post(\"parametertype/getParameterType\",{\"userinfo\":userInfo}),rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo}),rsapi.post(\"testmaster/getAddTest\",{\"userinfo\":userInfo}),rsapi.post(\"period/getPeriodByControl\",{\"ncontrolcode\":ncontrolCode,\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testmaster/getActiveParameterById\",{ntestparametercode:ntestparametercode,\"userinfo\":userInfo}));}Axios.all(urlArray).then(function(response){// const { Grade, ParameterType } = response[1].data;\nvar parameterMap=constructOptionList(response[1].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true);var gradeMap=constructOptionList(response[2].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var unitMap=constructOptionList(response[0].data||[],\"nunitcode\",\"sunitname\",false,false,true);var deltaperiodMap=constructOptionList(response[4].data||[],\"nperiodcode\",\"speriodname\",false,false,true);//response[2].data;\n// const grade = response[2].data;\n// const parameterType = response[1].data;\nvar selectedRecord={};var needUnit=true;var needRoundingDigit=true;var needCodedResult=true;var needActualResult=true;var npredefinedcode=transactionStatus.No;if(operation===\"update\"){var editTestParameter=response[5].data.TestParameter[0];selectedRecord=editTestParameter;var nparametertypecode=editTestParameter[\"nparametertypecode\"];var parameterItem=parameterMap.get(\"OptionList\").filter(function(item){return item.value===nparametertypecode;});selectedRecord[\"sparametername\"]={value:editTestParameter[\"sparametername\"],label:editTestParameter[\"sparametername\"]};if(editTestParameter[\"ndeltaunitcode\"]!==-1){selectedRecord[\"ndeltaunitcode\"]={\"value\":editTestParameter[\"ndeltaunitcode\"],\"label\":editTestParameter[\"sdeltaunitname\"]};}selectedRecord[\"nparametertypecode\"]={value:nparametertypecode,label:editTestParameter[\"sdisplaystatus\"]};if(parameterItem&&parameterItem[0].item){var selectedParameterItem=parameterItem[0].item;if(selectedParameterItem[\"nunitrequired\"]===transactionStatus.YES){needUnit=false;selectedRecord[\"nunitcode\"]={value:editTestParameter[\"nunitcode\"],label:editTestParameter[\"sunitname\"]};}if(selectedParameterItem[\"nroundingrequired\"]===transactionStatus.YES){needRoundingDigit=false;}if(selectedParameterItem[\"npredefinedrequired\"]===transactionStatus.YES||selectedParameterItem[\"ngraderequired\"]===transactionStatus.YES){var editCodedResult=response[5].data.TestPredefinedParameter;if(editCodedResult.length>0){var defaultCodedResult=editCodedResult.filter(function(item){return item.ndefaultstatus===transactionStatus.YES;});if(defaultCodedResult.length>0){selectedRecord[\"spredefinedname\"]=defaultCodedResult[0].spredefinedname;selectedRecord[\"ntestpredefinedcode\"]=defaultCodedResult[0].ntestpredefinedcode;;selectedRecord[\"ngradecode\"]={value:defaultCodedResult[0].ngradecode,label:defaultCodedResult[0][\"sdisplaystatus\"]};selectedRecord[\"sresultparacomment\"]=defaultCodedResult[0].sresultparacomment;}else{selectedRecord[\"spredefinedname\"]=editCodedResult[0].spredefinedname;selectedRecord[\"ntestpredefinedcode\"]=editCodedResult[0].ntestpredefinedcode;selectedRecord[\"ngradecode\"]={value:editCodedResult[0].ngradecode,label:editCodedResult[0][\"sdisplaystatus\"]};selectedRecord[\"sresultparacomment\"]=defaultCodedResult[0].sresultparacomment;}}}else{selectedRecord[\"spredefinedname\"]=\"\";selectedRecord[\"ngradecode\"]=-1;}if(selectedParameterItem[\"npredefinedrequired\"]===transactionStatus.YES){needCodedResult=false;npredefinedcode=selectedParameterItem[\"npredefinedrequired\"];}if(selectedParameterItem[\"ngraderequired\"]===transactionStatus.YES){needActualResult=false;}}}else{var _parameterItem=parameterMap.get(\"DefaultValue\")?parameterMap.get(\"DefaultValue\").item:{};// parameterType.filter(item=>{ return item.nparametertypecode === transactionStatus.YES });\nif(_parameterItem[\"nunitrequired\"]===transactionStatus.YES){needUnit=false;selectedRecord[\"nunitcode\"]=unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\";//{\"value\": response[0].data[0][\"nunitcode\"], \"label\": response[0].data[0][\"sunitname\"]};\n}if(_parameterItem[\"nroundingrequired\"]===transactionStatus.YES){needRoundingDigit=false;}if(_parameterItem[\"npredefinedcrequired\"]===transactionStatus.YES){needCodedResult=false;npredefinedcode=_parameterItem[\"npredefinedcode\"];}if(_parameterItem[\"ngraderequired\"]===transactionStatus.YES){needActualResult=false;// selectedRecord[\"ngradecode\"] = {\"value\": Grade.ngradecode, \"label\": Grade[\"sdisplaystatus\"]};\n}selectedRecord[\"nparametertypecode\"]=parameterMap.get(\"DefaultValue\");//{value: parameterItem[0].nparametertypecode, label: parameterItem[0].sdisplaystatus};\nselectedRecord[\"nroundingdigits\"]=\"\";selectedRecord[\"nunitcode\"]=\"\";}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:true,operation:operation,screenName:\"IDS_PARAMETER\",selectedRecord:selectedRecord,parameterData:{unit:unitMap.get(\"OptionList\"),grade:gradeMap.get(\"OptionList\"),deltaperiod:deltaperiodMap.get(\"OptionList\"),parameterType:parameterMap.get(\"OptionList\"),needUnit:needUnit,needRoundingDigit:needRoundingDigit,needCodedResult:needCodedResult,needActualResult:needActualResult,npredefinedcode:npredefinedcode,testParameter:constructOptionList(response[3].data[\"TestParameter\"]||[],'sparametername','sparametername',false,false,true).get(\"OptionList\"),defaultUnit:unitMap.get(\"DefaultValue\")?unitMap.get(\"DefaultValue\"):\"\",defaultGrade:gradeMap.get(\"DefaultValue\")?gradeMap.get(\"DefaultValue\"):\"\"},ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};//Add Coded result\nexport var addCodedResult=function addCodedResult(operation,paramdata,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));var urlArray=[rsapi.post(\"testmaster/getAddTest\",{\"userinfo\":userInfo}),rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testmaster/getActivePredefinedParameterById\",{ntestpredefinedcode:paramdata[\"ntestpredefinedcode\"],\"userinfo\":userInfo}));}Axios.all(urlArray).then(function(response){var selectedRecord={};// const grade = response[1].data;\nvar gradeMap=constructOptionList(response[1].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);if(operation===\"update\"){var editCodedResult=response[2].data;selectedRecord={ntestpredefinedcode:paramdata[\"ntestpredefinedcode\"],ntestparametercode:paramdata[\"ntestparametercode\"],ngradecode:{\"label\":editCodedResult[\"sdisplaystatus\"],\"value\":editCodedResult[\"ngradecode\"]},spredefinedname:editCodedResult[\"spredefinedname\"],ndefaultstatus:editCodedResult[\"ndefaultstatus\"]};}else{selectedRecord={ntestparametercode:paramdata[\"ntestparametercode\"],ngradecode:gradeMap.get(\"DefaultValue\")?gradeMap.get(\"DefaultValue\"):\"\"//{\"value\": grade[0].ngradecode, \"label\": grade[0][\"sdisplaystatus\"]}\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CODEDRESULT\",parameterData:{grade:gradeMap.get(\"OptionList\"),defaultGrade:gradeMap.get(\"DefaultValue\")?gradeMap.get(\"DefaultValue\"):\"\"},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};//Add parameter specification\nexport var addParameterSpecification=function addParameterSpecification(operation,paramdata,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));var inputparam=[];var surl=\"\";if(operation===\"update\"){surl=\"getParameterSpecificationById\";inputparam={userinfo:userInfo,ntestparamnumericcode:paramdata[\"ntestparamnumericcode\"]};}else{surl=\"getParameterSpecificationByCount\";inputparam={userinfo:userInfo,ntestparametercode:paramdata[\"ntestparametercode\"]};}rsapi.post(\"testmaster/\"+surl,inputparam).then(function(response){var selectedRecord={};if(operation===\"update\"){selectedRecord=_objectSpread({},response.data);}else{selectedRecord={ntestparametercode:paramdata[\"ntestparametercode\"]};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_SPECIFICATION\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getAvailableData=function getAvailableData(testItem,url,key,screenName,userInfo,ncontrolCode){return function(dispatch){var inputParam={TestMaster:testItem,\"userinfo\":userInfo};dispatch(initRequest(true));rsapi.post(\"testmaster/\"+url,inputParam).then(function(response){var availableDataMap=constructOptionList(response.data,key===\"section\"?\"nsectioncode\":key===\"method\"?\"nmethodcode\":key==\"instrumentcategory\"?\"ninstrumentcatcode\":key==\"package\"?\"ntestpackagecode\":key==\"technique\"?\"ntechniquecode\":\"ncontainertypecode\",key===\"section\"?\"ssectionname\":key===\"method\"?\"smethodname\":key==\"instrumentcategory\"?\"sinstrumentcatname\":key==\"package\"?\"stestpackagename\":key==\"technique\"?\"stechniquename\":\"scontainertype\",false,false,true);dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,otherTestData:_defineProperty({},key,availableDataMap.get(\"OptionList\")),screenName:screenName,selectedRecord:{availableData:\"\"},operation:\"create\",ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===417){toast.info(error.response.data);}else{toast.error(error.message);}});};};//Add formula\nexport var addFormula=function addFormula(paramdata,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testmaster/addTestFormula\",{userinfo:userInfo,nFlag:1}).then(function(response){var responseData=response.data;var testMasterMap=constructOptionList(responseData[\"TestMaster\"],\"ntestcode\",\"stestname\",false,false,false);var testCategoryMap=constructOptionList(responseData[\"TestCategory\"],\"ntestcategorycode\",\"stestcategoryname\",'descending',false,true);dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:\"create\",screenName:\"IDS_FORMULA\",formulaData:{operators:responseData[\"Operators\"],functions:responseData[\"Functions\"],testCategory:testCategoryMap.get(\"OptionList\"),testMaster:testMasterMap.get(\"OptionList\"),dynamicFormulaFields:responseData[\"DynamicFormulaFields\"]},isFormulaOpen:true,selectedRecord:{ntestcategorycode:testCategoryMap.get(\"OptionList\")&&testCategoryMap.get(\"OptionList\").length>0?testCategoryMap.get(\"OptionList\")[0]:\"\",//responseData[\"TestCategory\"].length>0? {\"label\": responseData[\"TestCategory\"][0][\"stestcategoryname\"], \"value\": responseData[\"TestCategory\"][0][\"ntestcategorycode\"]}: \"\",\nntestcode:testMasterMap.get(\"OptionList\")&&testMasterMap.get(\"OptionList\").length>0?testMasterMap.get(\"OptionList\")[0]:\"\",//responseData[\"TestMaster\"].length>0? {\"label\": responseData[\"TestMaster\"][0][\"stestname\"], \"value\": responseData[\"TestMaster\"][0][\"ntestcode\"]}: \"\",\nntestparametercode:paramdata[\"ntestparametercode\"]},ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};//Formula test category and test change event function\nexport var formulaChangeFunction=function formulaChangeFunction(inputParam,formulaData,caseNo,selectedRecordData,methodUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testmaster\"+methodUrl,inputParam).then(function(response){var masterData=response.data;var testMasterMap=constructOptionList(masterData[\"TestMaster\"]||[],\"ntestcode\",\"stestname\",'descending','ntestcode',false);dispatch({type:DEFAULT_RETURN,payload:caseNo===1?{formulaData:_objectSpread(_objectSpread({},formulaData),{},{testMaster:testMasterMap.get(\"OptionList\"),dynamicFormulaFields:masterData[\"DynamicFormulaFields\"]||[]}),selectedRecord:_objectSpread(_objectSpread({},selectedRecordData),{},{ntestcode:testMasterMap.get(\"OptionList\")&&testMasterMap.get(\"OptionList\").length>0?testMasterMap.get(\"OptionList\")[0]:\"\"// masterData[\"TestMaster\"].length>0? {\"label\": masterData[\"TestMaster\"][0][\"stestname\"], \"value\": masterData[\"TestMaster\"][0][\"ntestcode\"]}: \"\"\n}),loading:false}:{formulaData:_objectSpread(_objectSpread({},formulaData),{},{dynamicFormulaFields:masterData[\"DynamicFormulaFields\"]}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var changeTestCategoryFilter=function changeTestCategoryFilter(inputParam,filterTestCategory){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testmaster/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{filterTestCategory:filterTestCategory,nfilterTestCategory:inputParam.inputData.nfilterTestCategory})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var addTestFile=function addTestFile(inputParam){return function(dispatch){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo})];if(inputParam.operation===\"update\"){urlArray.push(rsapi.post(\"/testmaster/editTestFile\",{userinfo:inputParam.userInfo,testfile:inputParam.selectedRecord}));}Axios.all(urlArray).then(function(response){var _payload;var linkMap=constructOptionList(response[0].data.LinkMaster,\"nlinkcode\",\"slinkname\",false,false,true);var linkmaster=linkMap.get(\"OptionList\");var selectedRecord={};var defaultLink=linkmaster.filter(function(items){return items.item.ndefaultlink===transactionStatus.YES;});var disabled=false;var editObject={};if(inputParam.operation===\"update\"){editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?defaultLink[0]:\"\";//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\nlink={slinkfilename:'',slinkdescription:'',nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}selectedRecord=_objectSpread(_objectSpread(_objectSpread({},link),{},{ntestfilecode:editObject.ntestfilecode,nattachmenttypecode:editObject.nattachmenttypecode},editObject),{},{nlinkcode:nlinkcode// disabled: true\n});}else{selectedRecord={nattachmenttypecode:response[0].data.AttachmentType.length>0?response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,nlinkcode:defaultLink.length>0?defaultLink[0]:\"\",//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\ndisabled:disabled};}dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"operation\",inputParam.operation),_defineProperty(_payload,\"screenName\",inputParam.screenName),_defineProperty(_payload,\"ncontrolCode\",inputParam.ncontrolCode),_defineProperty(_payload,\"selectedRecord\",selectedRecord),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"linkMaster\",linkmaster),_defineProperty(_payload,\"showSaveContinue\",false),_defineProperty(_payload,\"editFiles\",editObject.nattachmenttypecode===attachmentType.FTP?editObject:{}),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getActiveTestContainerTypeById=function getActiveTestContainerTypeById(containerParam){return function(dispatch){var _rsapi$post;var urlArray=[];var containerTypeById=rsapi.post(\"containertype/getContainerType\",{\"userinfo\":containerParam.userInfo});var containerById=rsapi.post(\"testmaster/getActiveTestContainerTypeById\",(_rsapi$post={},_defineProperty(_rsapi$post,containerParam.primaryKeyField,containerParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",containerParam.userInfo),_rsapi$post));var units=rsapi.post(\"unit/getUnit\",{\"userinfo\":containerParam.userInfo});urlArray=[containerTypeById,containerById,units];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var continerType=constructOptionList(response[0].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true);var unitMap=constructOptionList(response[2].data||[],\"nunitcode\",\"sunitname\",false,false,true);var otherTestData={containertype:continerType.get(\"OptionList\"),unit:unitMap.get(\"OptionList\")};var ContainerType=[];var unit=[];ContainerType.push({\"value\":response[1].data[\"ncontainertypecode\"],\"label\":response[1].data[\"scontainertype\"]});selectedRecord=response[1].data;selectedRecord[\"ncontainertypecode\"]=ContainerType[0];if(response[1].data[\"nunitcode\"]!==-1){unit.push({\"value\":response[1].data[\"nunitcode\"],\"label\":response[1].data[\"sunitname\"]});selectedRecord=response[1].data;selectedRecord[\"nunitcode\"]=unit[0];}dispatch({type:DEFAULT_RETURN,payload:{otherTestData:otherTestData,selectedRecord:selectedRecord,isOpen:true,operation:containerParam.operation,screenName:\"IDS_CONTAINERTYPE\",openChildModal:true,ncontrolCode:containerParam.ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var addContainerType=function addContainerType(operation,testparametercode,userInfo,ncontrolCode){return function(dispatch){var urlArray=[];var containerTypeById=rsapi.post(\"unit/getUnit\",{\"userinfo\":userInfo});var containerById=rsapi.post(\"testmaster/getAvailableContainerType\",{\"TestMaster\":testparametercode,\"userinfo\":userInfo});urlArray=[containerTypeById,containerById];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var unitMap=constructOptionList(response[0].data||[],\"nunitcode\",\"sunitname\",false,false,true);var continerType=constructOptionList(response[1].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true);var otherTestData={containertype:continerType.get(\"OptionList\"),unit:unitMap.get(\"OptionList\")};dispatch({type:DEFAULT_RETURN,payload:{otherTestData:otherTestData,selectedRecord:selectedRecord,isOpen:true,operation:operation,screenName:\"IDS_CONTAINERTYPE\",openChildModal:true,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TestMasterAction.js"],"names":["rsapi","toast","constructOptionList","sortData","DEFAULT_RETURN","Axios","initRequest","transactionStatus","attachmentType","intl","getTestMaster","testItem","userInfo","masterData","dispatch","post","ntestcode","userinfo","then","response","data","type","payload","loading","dataState","undefined","catch","error","message","getTestDetails","inputParam","testParameter","nFlag","ntestparametercode","status","warn","addTest","operation","testmaster","ncontrolCode","nfilterTestCategory","Object","values","length","urlArray","push","all","selectedRecord","testCategoryMap","testCategory","get","checklistMap","ChecklistVersion","testData","parameterData","otherTestData","needOtherTest","editData","periodMap","interfacetypeMap","period","interfacetype","ntestcategorycode","value","ntransactionstatus","ACTIVE","naccredited","NOTACCREDITED","ntrainingneed","NO","stestsynonym","stestname","sdescription","ncost","parameterMap","gradeMap","parameterItem","nunitcode","nparametertypecode","needUnit","needRoundingDigit","needCodedResult","needActualResult","npredefinedcode","unitMap","deltaperiodMap","item","YES","grade","parameterType","unit","deltaperiod","defaultUnit","defaultGrade","sectionMap","methodMap","instCatMap","continerType","packageMap","package","section","method","instrumentcategory","containertype","openModal","screenName","formatMessage","id","addParameter","No","editTestParameter","TestParameter","filter","label","selectedParameterItem","editCodedResult","TestPredefinedParameter","defaultCodedResult","ndefaultstatus","spredefinedname","ntestpredefinedcode","ngradecode","sresultparacomment","openChildModal","showSaveContinue","addCodedResult","paramdata","addParameterSpecification","inputparam","surl","ntestparamnumericcode","getAvailableData","url","key","TestMaster","availableDataMap","availableData","info","addFormula","responseData","testMasterMap","formulaData","operators","functions","testMaster","dynamicFormulaFields","isFormulaOpen","formulaChangeFunction","caseNo","selectedRecordData","methodUrl","changeTestCategoryFilter","filterTestCategory","inputData","addTestFile","testfile","linkMap","LinkMaster","linkmaster","defaultLink","items","ndefaultlink","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","nlinkdefaultstatus","sfilesize","nfilesize","ntestfilecode","AttachmentType","FTP","modalName","getActiveTestContainerTypeById","containerParam","containerTypeById","containerById","primaryKeyField","primaryKeyValue","units","ContainerType","isOpen","addContainerType","testparametercode"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OACIC,KADJ,KAEO,gBAFP,CAGA,OACIC,mBADJ,CAEIC,QAFJ,KAGO,4BAHP,CAIA,OACIC,cADJ,KAEO,cAFP,CAGA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,WADJ,KAEO,eAFP,CAGA,OACIC,iBADJ,CAEIC,cAFJ,KAGO,2BAHP,CAIA,OACIC,IADJ,KAEO,mBAFP,CAIA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAWC,QAAX,CAAqBC,UAArB,CAAoC,CAC7D,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,yBAAX,CAAsC,CAC9BC,SAAS,CAAEL,QAAQ,CAACK,SADU,CAE9BC,QAAQ,CAAEL,QAFoB,CAAtC,EAIKM,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACdN,UAAU,gCACHA,UADG,EAEHM,QAAQ,CAACC,IAFN,CAAV,CAIAjB,QAAQ,CAACU,UAAD,CAAR,CACAC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLT,UAAU,CAAVA,UADK,CAELU,OAAO,CAAE,KAFJ,CAGLC,SAAS,CAAEC,SAHN,CAFJ,CAAD,CAAR,CAQH,CAlBL,EAmBKC,KAnBL,CAmBW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAtB,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CA3BL,EA4BH,CA9BD,CA+BH,CAhCM,CAkCP;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CAC1C,MAAO,UAAUhB,QAAV,CAAoB,CACvB,GAAMiB,CAAAA,aAAa,CAAGD,UAAU,CAACC,aAAjC,CACAjB,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,iCAAX,CAA8C,CACtCC,SAAS,CAAEe,aAAa,CAACf,SADa,CAEtC,QAASc,UAAU,CAACE,KAFkB,CAGtCC,kBAAkB,CAAEF,aAAa,CAACE,kBAHI,CAItChB,QAAQ,CAAEa,UAAU,CAAClB,QAJiB,CAA9C,EAMKM,IANL,CAMU,SAAAC,QAAQ,CAAI,CACd,GAAIN,CAAAA,UAAU,CAAGiB,UAAU,CAACjB,UAA5B,CACAA,UAAU,gCACHA,UADG,EAEHM,QAAQ,CAACC,IAFN,CAAV,CAIAjB,QAAQ,CAACU,UAAD,CAAR,CACAC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLT,UAAU,CAAVA,UADK,CAELU,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAOH,CApBL,EAqBKG,KArBL,CAqBW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CAjCL,EAkCH,CArCD,CAsCH,CAvCM,CA2CP;AACA,MAAO,IAAMgB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,UAAZ,CAAwB1B,QAAxB,CAAkC2B,YAAlC,CAAgDC,mBAAhD,CAAwE,CAC3F,MAAO,UAAU1B,QAAV,CAAoB,CACvB,GAAI0B,mBAAmB,EAAIC,MAAM,CAACC,MAAP,CAAcF,mBAAd,EAAmCG,MAAnC,CAA4C,CAAvE,CAA0E,CACtE7B,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAMsC,CAAAA,QAAQ,CAAG,CACb5C,KAAK,CAACe,IAAN,CAAW,8BAAX,CAA2C,CACvC,WAAYH,QAD2B,CAA3C,CADa,CAIbZ,KAAK,CAACe,IAAN,CAAW,gCAAX,CAA6C,CACzC,WAAYH,QAD6B,CAA7C,CAJa,CAAjB,CAQA,GAAIyB,SAAS,GAAK,QAAlB,CAA4B,CACxBO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,8BAAX,CAA2C,CACrD,WAAYH,QADyC,CAErDI,SAAS,CAAEsB,UAAU,CAACtB,SAF+B,CAA3C,CAAd,EAKA4B,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CAClD,eAAgBwB,YADkC,CAElD,WAAY3B,QAFsC,CAAxC,CAAd,EAIAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,6BAAX,CAA0C,CACpD,WAAYH,QADwC,CAA1C,CAAd,EAGH,CAbD,IAaO,IAAIyB,SAAS,GAAK,QAAlB,CAA4B,CAC/BO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,gCAAX,CAA6C,CACvD,WAAYH,QAD2C,CAA7C,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,gBAAX,CAA6B,CACvC,WAAYH,QAD2B,CAA7B,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,oBAAX,CAAiC,CAC3C,WAAYH,QAD+B,CAAjC,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,+BAAX,CAA4C,CACtD,WAAYH,QAD0C,CAA5C,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,cAAX,CAA2B,CACrC,WAAYH,QADyB,CAA3B,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,4CAAX,CAAyD,CACnE,WAAYH,QADuD,CAAzD,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,uBAAX,CAAoC,CAC9C,WAAYH,QADkC,CAApC,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,gCAAX,CAA6C,CACvD,WAAYH,QAD2C,CAA7C,CAAd,EAGAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,4BAAX,CAAyC,CACnD,WAAYH,QADuC,CAAzC,CAAd,EAIAgC,QAAQ,CAACC,IAAT,CAAgB7C,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CACpD,eAAgBwB,YADoC,CAEpD,WAAY3B,QAFwC,CAAxC,CAAhB,EAIAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,6BAAX,CAA0C,CACpD,WAAYH,QADwC,CAA1C,CAAd,EAGH,CApCM,IAoCA,IAAIyB,SAAS,GAAK,MAAlB,CAA0B,CAC7BO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,6BAAX,CAA0C,CACpD,WAAYH,QADwC,CAEpDI,SAAS,CAAEsB,UAAU,CAACtB,SAF8B,CAA1C,CAAd,EAKA4B,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CAClD,eAAgBwB,YADkC,CAElD,WAAY3B,QAFsC,CAAxC,CAAd,EAIAgC,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,6BAAX,CAA0C,CACpD,WAAYH,QADwC,CAA1C,CAAd,EAGH,CACDP,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CAEd,GAAI4B,CAAAA,cAAc,CAAG,EAArB,CACA,GAAMC,CAAAA,eAAe,CAAG9C,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,mBAAzB,CAA8C,mBAA9C,CAAmE,KAAnE,CAA0E,KAA1E,CAAiF,IAAjF,CAA3C,CACA,GAAM6B,CAAAA,YAAY,CAAGD,eAAe,CAACE,GAAhB,CAAoB,YAApB,CAArB,CACA,GAAMC,CAAAA,YAAY,CAAGjD,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,uBAAzB,CAAkD,gBAAlD,CAAoE,KAApE,CAA2E,KAA3E,CAAkF,IAAlF,CAAxC,CACA,GAAMgC,CAAAA,gBAAgB,CAAGD,YAAY,CAACD,GAAb,CAAiB,YAAjB,CAAzB,CACA;AACA,GAAMG,CAAAA,QAAQ,CAAG,CACbJ,YAAY,CAAZA,YADa,CAEbG,gBAAgB,CAAhBA,gBAFa,CAAjB,CAIA,GAAIE,CAAAA,aAAa,CAAG,EAApB,CACA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACA,GAAInB,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAMoB,CAAAA,QAAQ,CAAGtC,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CACA2B,cAAc,CAAGU,QAAjB,CACA,GAAMC,CAAAA,SAAS,CAAGxD,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,aAAzB,CAAwC,aAAxC,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,IAArE,CAArC,CACA,GAAMuC,CAAAA,gBAAgB,CAAGzD,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,oBAA/C,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAA5C,CAEAkC,aAAa,CAAG,CACZM,MAAM,CAACF,SAAS,CAACR,GAAV,CAAc,YAAd,CADK,CAEZW,aAAa,CAACF,gBAAgB,CAACT,GAAjB,CAAqB,YAArB,CAFF,CAAhB,CAIAH,cAAc,CAAC,mBAAD,CAAd,CAAsC,CAClC,QAASU,QAAQ,CAAC,mBAAD,CADiB,CAElC,QAASA,QAAQ,CAAC,mBAAD,CAFiB,CAAtC,CAIAV,cAAc,CAAC,uBAAD,CAAd,CAA0C,CACtC,QAASU,QAAQ,CAAC,uBAAD,CADqB,CAEtC,QAASA,QAAQ,CAAC,gBAAD,CAFqB,CAA1C,CAKA,GAAGV,cAAc,CAAC,gBAAD,CAAd,GAAoC,CAAC,CAAxC,CAA0C,CACtCA,cAAc,CAAC,gBAAD,CAAd,CAAmC,CAC/B,QAASU,QAAQ,CAAC,gBAAD,CADc,CAE/B,QAASA,QAAQ,CAAC,gBAAD,CAFc,CAAnC,CAIH,CACDV,cAAc,CAAC,oBAAD,CAAd,CAAuC,CACnC,QAASU,QAAQ,CAAC,oBAAD,CADkB,CAEnC,QAASA,QAAQ,CAAC,oBAAD,CAFkB,CAAvC,CAIH,CA7BD,IA6BO,IAAIpB,SAAS,GAAK,MAAlB,CAA0B,CAC7B,GAAMqB,CAAAA,UAAS,CAAGxD,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,aAAzB,CAAwC,aAAxC,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,IAArE,CAArC,CACA,GAAMuC,CAAAA,iBAAgB,CAAGzD,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,oBAA/C,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAA5C,CAEA;AACAkC,aAAa,CAAC,CACVM,MAAM,CAAEF,UAAS,CAACR,GAAV,CAAc,YAAd,CADE,CAEVW,aAAa,CAACF,iBAAgB,CAACT,GAAjB,CAAqB,YAArB,CAFJ,CAAd,CAIAH,cAAc,CAAG,CACbe,iBAAiB,CAAEtB,mBAAmB,CAACuB,KAApB,GAA8B,CAAC,CAA/B,CAAoCd,YAAY,CAACN,MAAb,CAAsB,CAAtB,CACnD;AACAM,YAAY,CAAC,CAAD,CAFuC,CAEjC,EAFH,CAEST,mBAHf,CAIbwB,kBAAkB,CAAEzD,iBAAiB,CAAC0D,MAJzB,CAKbC,WAAW,CAAE3D,iBAAiB,CAAC4D,aALlB,CAMbC,aAAa,CAAE7D,iBAAiB,CAAC8D,EANpB,CAObC,YAAY,CAAE,EAPD,CAQbC,SAAS,CAAE,EARE,CASbC,YAAY,CAAE,EATD,CAUbC,KAAK,CAAE,EACP;AAXa,CAAjB,CAeH,CAxBM,IAwBA,CACH;AACA,GAAMC,CAAAA,YAAY,CAAGxE,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAxC,CACA;AACA,GAAMuD,CAAAA,QAAQ,CAAGzE,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,YAAzB,CAAuC,gBAAvC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAApC,CACA;AACA,GAAMwD,CAAAA,aAAa,CAAGF,YAAY,CAACxB,GAAb,CAAiB,cAAjB,EAAmCwB,YAAY,CAACxB,GAAb,CAAiB,cAAjB,CAAnC,CAAsE,EAA5F,CAAgG;AAChGH,cAAc,CAAG,CACb;AACA8B,SAAS,CAAE,CAAC,CAFC,CAGbC,kBAAkB,CAAEF,aAHP,CAGsB;AACnCd,iBAAiB,CAAEtB,mBAAmB,CAACuB,KAApB,GAA8B,CAAC,CAA/B,CAAoCd,YAAY,CAACN,MAAb,CAAsB,CAAtB,CACnD;AACAM,YAAY,CAAC,CAAD,CAFuC,CAEjC,EAFH,CAEST,mBANf,CAObwB,kBAAkB,CAAEzD,iBAAiB,CAAC0D,MAPzB,CAQbC,WAAW,CAAE3D,iBAAiB,CAAC4D,aARlB,CASbC,aAAa,CAAE7D,iBAAiB,CAAC8D,EATpB,CAUbC,YAAY,CAAE,EAVD,CAWbC,SAAS,CAAE,EAXE,CAYbC,YAAY,CAAE,EAZD,CAabC,KAAK,CAAE,EAbM,CAAjB,CAeA,GAAIM,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,iBAAiB,CAAG,IAAxB,CACA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,IAAvB,CACA,GAAIC,CAAAA,eAAe,CAAG5E,iBAAiB,CAAC8D,EAAxC,CACA,GAAMe,CAAAA,OAAO,CAAGlF,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,WAAzB,CAAsC,WAAtC,CAAmD,KAAnD,CAA0D,KAA1D,CAAiE,IAAjE,CAAnC,CACA,GAAMsC,CAAAA,WAAS,CAAGxD,mBAAmB,CAACiB,QAAQ,CAAC,EAAD,CAAR,CAAaC,IAAb,EAAqB,EAAtB,CAA0B,aAA1B,CAAyC,aAAzC,CAAwD,KAAxD,CAA+D,KAA/D,CAAsE,IAAtE,CAArC,CACA,GAAMiE,CAAAA,cAAc,CAAGnF,mBAAmB,CAACiB,QAAQ,CAAC,EAAD,CAAR,CAAaC,IAAb,EAAqB,EAAtB,CAA0B,aAA1B,CAAyC,aAAzC,CAAwD,KAAxD,CAA+D,KAA/D,CAAsE,IAAtE,CAA1C,CACA,GAAMuC,CAAAA,kBAAgB,CAAGzD,mBAAmB,CAACiB,QAAQ,CAAC,EAAD,CAAR,CAAaC,IAAb,EAAqB,EAAtB,CAA0B,oBAA1B,CAAgD,oBAAhD,CAAsE,KAAtE,CAA6E,KAA7E,CAAoF,IAApF,CAA5C,CAEA,GAAIwD,aAAa,EAAIA,aAAa,CAACU,IAAnC,CAAyC,CACrC,GAAIV,aAAa,CAACU,IAAd,CAAmB,OAAnB,IAAgC/E,iBAAiB,CAACgF,GAAtD,CAA2D,CACvDR,QAAQ,CAAG,KAAX,CACAhC,cAAc,CAAC,WAAD,CAAd,CAA8BqC,OAAO,CAAClC,GAAR,CAAY,cAAZ,EAA8BkC,OAAO,CAAClC,GAAR,CAAY,cAAZ,CAA9B,CAA4D,EAA1F,CACA;AACH,CACD,GAAI0B,aAAa,CAACU,IAAd,CAAmB,gBAAnB,IAAyC/E,iBAAiB,CAACgF,GAA/D,CAAoE,CAChEP,iBAAiB,CAAG,KAApB,CACH,CACD,GAAIJ,aAAa,CAACU,IAAd,CAAmB,iBAAnB,IAA0C/E,iBAAiB,CAACgF,GAAhE,CAAqE,CACjEN,eAAe,CAAG,KAAlB,CACAE,eAAe,CAAGP,aAAa,CAACU,IAAd,CAAmB,iBAAnB,CAAlB,CACH,CACD,GAAIV,aAAa,CAACU,IAAd,CAAmB,QAAnB,IAAiC/E,iBAAiB,CAACgF,GAAvD,CAA4D,CACxDL,gBAAgB,CAAG,KAAnB,CACAnC,cAAc,CAAC,YAAD,CAAd,CAA+B4B,QAAQ,CAACzB,GAAT,CAAa,cAAb,EAA+ByB,QAAQ,CAACzB,GAAT,CAAa,cAAb,CAA/B,CAA8D,EAA7F,CACA;AACH,CACJ,CACD;AACAI,aAAa,CAAG,CACZkC,KAAK,CAAEb,QAAQ,CAACzB,GAAT,CAAa,YAAb,CADK,CAEZuC,aAAa,CAAEf,YAAY,CAACxB,GAAb,CAAiB,YAAjB,CAFH,CAGZwC,IAAI,CAAEN,OAAO,CAAClC,GAAR,CAAY,YAAZ,CAHM,CAIZU,MAAM,CAACF,WAAS,CAACR,GAAV,CAAc,YAAd,CAJK,CAKZW,aAAa,CAACF,kBAAgB,CAACT,GAAjB,CAAqB,YAArB,CALF,CAMZyC,WAAW,CAACN,cAAc,CAACnC,GAAf,CAAmB,YAAnB,CANA,CAOZ8B,iBAAiB,CAAjBA,iBAPY,CAQZD,QAAQ,CAARA,QARY,CASZE,eAAe,CAAfA,eATY,CAUZC,gBAAgB,CAAhBA,gBAVY,CAWZC,eAAe,CAAfA,eAXY,CAYZpD,aAAa,CAAE7B,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,eAAjB,GAAqC,EAAtC,CAA0C,gBAA1C,CAA4D,gBAA5D,CAA8E,KAA9E,CAAqF,KAArF,CAA4F,IAA5F,CAAnB,CAAqH8B,GAArH,CAAyH,YAAzH,CAZH,CAaZ0C,WAAW,CAAER,OAAO,CAAClC,GAAR,CAAY,cAAZ,EAA8BkC,OAAO,CAAClC,GAAR,CAAY,cAAZ,CAA9B,CAA4D,EAb7D,CAcZ2C,YAAY,CAAElB,QAAQ,CAACzB,GAAT,CAAa,cAAb,EAA+ByB,QAAQ,CAACzB,GAAT,CAAa,cAAb,CAA/B,CAA8D,EAC5E;AAfY,CAAhB,CAiBA,GAAM4C,CAAAA,UAAU,CAAG5F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,cAAzB,CAAyC,cAAzC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAAtC,CACD;AACA,GAAM2E,CAAAA,SAAS,CAAG7F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAkB,EAAnB,CAAuB,aAAvB,CAAsC,aAAtC,CAAqD,KAArD,CAA4D,KAA5D,CAAmE,IAAnE,CAArC,CAEA,GAAM4E,CAAAA,UAAU,CAAG9F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,oBAA/C,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAAtC,CACC,GAAM6E,CAAAA,YAAY,CAAG/F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAxC,CACA,GAAM8E,CAAAA,UAAU,CAAGhG,mBAAmB,CAACiB,QAAQ,CAAC,EAAD,CAAR,CAAaC,IAAb,EAAqB,EAAtB,CAA0B,kBAA1B,CAA8C,kBAA9C,CAAkE,KAAlE,CAAyE,KAAzE,CAAgF,IAAhF,CAAtC,CACAmC,aAAa,CAAG,CACZ4C,OAAO,CAAED,UAAU,CAAChD,GAAX,CAAe,YAAf,CADG,CAEZkD,OAAO,CAAEN,UAAU,CAAC5C,GAAX,CAAe,YAAf,CAFG,CAGZmD,MAAM,CAAEN,SAAS,CAAC7C,GAAV,CAAc,YAAd,CAHI,CAIZoD,kBAAkB,CAAEN,UAAU,CAAC9C,GAAX,CAAe,YAAf,CAJR,CAKZqD,aAAa,CAAEN,YAAY,CAAC/C,GAAb,CAAiB,YAAjB,CALH,CAAhB,CAQAM,aAAa,CAAG,IAAhB,CACH,CACD1C,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACL;AACA;AACA;AACAkF,SAAS,CAAE,IAJN,CAKLhD,aAAa,CAAbA,aALK,CAMLnB,SAAS,CAAEA,SANN,CAOLoE,UAAU,CAAE,UAPP,CAQL1D,cAAc,CAAdA,cARK,CASLR,YAAY,CAAZA,YATK,CAULc,QAAQ,CAARA,QAVK,CAWLC,aAAa,CAAbA,aAXK,CAYLC,aAAa,CAAbA,aAZK,CAaLhC,OAAO,CAAE,KAbJ,CAFJ,CAAD,CAAR,CAkBH,CA7KL,EA8KKG,KA9KL,CA8KW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CA1LL,EA2LH,CApQD,IAoQO,CACHnB,KAAK,CAACkC,IAAN,CAAW1B,IAAI,CAACiG,aAAL,CAAmB,CAC1BC,EAAE,CAAE,8BADsB,CAAnB,CAAX,EAGH,CACJ,CA1QD,CA2QH,CA5QM,CA8QP;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACvE,SAAD,CAAYJ,kBAAZ,CAAgCrB,QAAhC,CAA0C2B,YAA1C,CAA2D,CACnF,MAAO,UAACzB,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAMsC,CAAAA,QAAQ,CAAG,CACb5C,KAAK,CAACe,IAAN,CAAW,cAAX,CAA2B,CACvB,WAAYH,QADW,CAA3B,CADa,CAIbZ,KAAK,CAACe,IAAN,CAAW,gCAAX,CAA6C,CACzC,WAAYH,QAD6B,CAA7C,CAJa,CAObZ,KAAK,CAACe,IAAN,CAAW,gBAAX,CAA6B,CACzB,WAAYH,QADa,CAA7B,CAPa,CAUbZ,KAAK,CAACe,IAAN,CAAW,uBAAX,CAAoC,CAChC,WAAYH,QADoB,CAApC,CAVa,CAabZ,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CACpC,eAAgBwB,YADoB,CAEpC,WAAY3B,QAFwB,CAAxC,CAba,CAAjB,CAmBA,GAAIyB,SAAS,GAAK,QAAlB,CAA4B,CACxBO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,mCAAX,CAAgD,CAC1DkB,kBAAkB,CAAEA,kBADsC,CAE1D,WAAYrB,QAF8C,CAAhD,CAAd,EAIH,CACDP,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACd;AACA,GAAMuD,CAAAA,YAAY,CAAGxE,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAxC,CACA,GAAMuD,CAAAA,QAAQ,CAAGzE,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,YAAzB,CAAuC,gBAAvC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAApC,CACA,GAAMgE,CAAAA,OAAO,CAAGlF,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,WAAzB,CAAsC,WAAtC,CAAmD,KAAnD,CAA0D,KAA1D,CAAiE,IAAjE,CAAnC,CACA,GAAMiE,CAAAA,cAAc,CAAGnF,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,aAAzB,CAAwC,aAAxC,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,IAArE,CAA1C,CAEA;AACA;AACA;AACA,GAAI2B,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIgC,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,iBAAiB,CAAG,IAAxB,CACA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,IAAvB,CACA,GAAIC,CAAAA,eAAe,CAAG5E,iBAAiB,CAACsG,EAAxC,CACA,GAAIxE,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAMyE,CAAAA,iBAAiB,CAAG3F,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB2F,aAAjB,CAA+B,CAA/B,CAA1B,CACAhE,cAAc,CAAG+D,iBAAjB,CACA,GAAMhC,CAAAA,kBAAkB,CAAGgC,iBAAiB,CAAC,oBAAD,CAA5C,CACA,GAAMlC,CAAAA,aAAa,CAAGF,YAAY,CAACxB,GAAb,CAAiB,YAAjB,EAA+B8D,MAA/B,CAAsC,SAAU1B,IAAV,CAAgB,CACxE,MAAOA,CAAAA,IAAI,CAACvB,KAAL,GAAee,kBAAtB,CACH,CAFqB,CAAtB,CAGA/B,cAAc,CAAC,gBAAD,CAAd,CAAmC,CAC/BgB,KAAK,CAAE+C,iBAAiB,CAAC,gBAAD,CADO,CAE/BG,KAAK,CAAEH,iBAAiB,CAAC,gBAAD,CAFO,CAAnC,CAKA,GAAGA,iBAAiB,CAAC,gBAAD,CAAjB,GAAuC,CAAC,CAA3C,CAA6C,CACzC/D,cAAc,CAAC,gBAAD,CAAd,CAAmC,CAC/B,QAAS+D,iBAAiB,CAAC,gBAAD,CADK,CAE/B,QAASA,iBAAiB,CAAC,gBAAD,CAFK,CAAnC,CAIH,CACD/D,cAAc,CAAC,oBAAD,CAAd,CAAuC,CACnCgB,KAAK,CAAEe,kBAD4B,CAEnCmC,KAAK,CAAEH,iBAAiB,CAAC,gBAAD,CAFW,CAAvC,CAIA,GAAIlC,aAAa,EAAIA,aAAa,CAAC,CAAD,CAAb,CAAiBU,IAAtC,CAA4C,CACxC,GAAM4B,CAAAA,qBAAqB,CAAGtC,aAAa,CAAC,CAAD,CAAb,CAAiBU,IAA/C,CACA,GAAI4B,qBAAqB,CAAC,eAAD,CAArB,GAA2C3G,iBAAiB,CAACgF,GAAjE,CAAsE,CAClER,QAAQ,CAAG,KAAX,CACAhC,cAAc,CAAC,WAAD,CAAd,CAA8B,CAC1BgB,KAAK,CAAE+C,iBAAiB,CAAC,WAAD,CADE,CAE1BG,KAAK,CAAEH,iBAAiB,CAAC,WAAD,CAFE,CAA9B,CAIH,CACD,GAAII,qBAAqB,CAAC,mBAAD,CAArB,GAA+C3G,iBAAiB,CAACgF,GAArE,CAA0E,CACtEP,iBAAiB,CAAG,KAApB,CACH,CAED,GAAIkC,qBAAqB,CAAC,qBAAD,CAArB,GAAiD3G,iBAAiB,CAACgF,GAAnE,EAA0E2B,qBAAqB,CAAC,gBAAD,CAArB,GAA4C3G,iBAAiB,CAACgF,GAA5I,CAAiJ,CAC7I,GAAM4B,CAAAA,eAAe,CAAGhG,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiBgG,uBAAzC,CACA,GAAID,eAAe,CAACxE,MAAhB,CAAyB,CAA7B,CAAgC,CAC5B,GAAM0E,CAAAA,kBAAkB,CAAGF,eAAe,CAACH,MAAhB,CAAuB,SAAU1B,IAAV,CAAgB,CAC9D,MAAOA,CAAAA,IAAI,CAACgC,cAAL,GAAwB/G,iBAAiB,CAACgF,GAAjD,CACH,CAF0B,CAA3B,CAGA,GAAI8B,kBAAkB,CAAC1E,MAAnB,CAA4B,CAAhC,CAAmC,CAC/BI,cAAc,CAAC,iBAAD,CAAd,CAAoCsE,kBAAkB,CAAC,CAAD,CAAlB,CAAsBE,eAA1D,CACAxE,cAAc,CAAC,qBAAD,CAAd,CAAwCsE,kBAAkB,CAAC,CAAD,CAAlB,CAAsBG,mBAA9D,CAAkF,CAClFzE,cAAc,CAAC,YAAD,CAAd,CAA+B,CAC3BgB,KAAK,CAAEsD,kBAAkB,CAAC,CAAD,CAAlB,CAAsBI,UADF,CAE3BR,KAAK,CAAEI,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,gBAAtB,CAFoB,CAA/B,CAIAtE,cAAc,CAAC,oBAAD,CAAd,CAAuCsE,kBAAkB,CAAC,CAAD,CAAlB,CAAsBK,kBAA7D,CACH,CARD,IAQO,CACH3E,cAAc,CAAC,iBAAD,CAAd,CAAoCoE,eAAe,CAAC,CAAD,CAAf,CAAmBI,eAAvD,CACAxE,cAAc,CAAC,qBAAD,CAAd,CAAwCoE,eAAe,CAAC,CAAD,CAAf,CAAmBK,mBAA3D,CACAzE,cAAc,CAAC,YAAD,CAAd,CAA+B,CAC3BgB,KAAK,CAAEoD,eAAe,CAAC,CAAD,CAAf,CAAmBM,UADC,CAE3BR,KAAK,CAAEE,eAAe,CAAC,CAAD,CAAf,CAAmB,gBAAnB,CAFoB,CAA/B,CAIApE,cAAc,CAAC,oBAAD,CAAd,CAAuCsE,kBAAkB,CAAC,CAAD,CAAlB,CAAsBK,kBAA7D,CACH,CACJ,CACJ,CAxBD,IAwBO,CACH3E,cAAc,CAAC,iBAAD,CAAd,CAAoC,EAApC,CACAA,cAAc,CAAC,YAAD,CAAd,CAA+B,CAAC,CAAhC,CACH,CACD,GAAImE,qBAAqB,CAAC,qBAAD,CAArB,GAAiD3G,iBAAiB,CAACgF,GAAvE,CAA4E,CACxEN,eAAe,CAAG,KAAlB,CACAE,eAAe,CAAG+B,qBAAqB,CAAC,qBAAD,CAAvC,CACH,CACD,GAAIA,qBAAqB,CAAC,gBAAD,CAArB,GAA4C3G,iBAAiB,CAACgF,GAAlE,CAAuE,CACnEL,gBAAgB,CAAG,KAAnB,CACH,CACJ,CACJ,CAvED,IAuEO,CACH,GAAMN,CAAAA,cAAa,CAAGF,YAAY,CAACxB,GAAb,CAAiB,cAAjB,EAAmCwB,YAAY,CAACxB,GAAb,CAAiB,cAAjB,EAAiCoC,IAApE,CAA2E,EAAjG,CACA;AACA,GAAIV,cAAa,CAAC,eAAD,CAAb,GAAmCrE,iBAAiB,CAACgF,GAAzD,CAA8D,CAC1DR,QAAQ,CAAG,KAAX,CACAhC,cAAc,CAAC,WAAD,CAAd,CAA8BqC,OAAO,CAAClC,GAAR,CAAY,cAAZ,EAA8BkC,OAAO,CAAClC,GAAR,CAAY,cAAZ,CAA9B,CAA4D,EAA1F,CAA8F;AACjG,CACD,GAAI0B,cAAa,CAAC,mBAAD,CAAb,GAAuCrE,iBAAiB,CAACgF,GAA7D,CAAkE,CAC9DP,iBAAiB,CAAG,KAApB,CACH,CACD,GAAIJ,cAAa,CAAC,sBAAD,CAAb,GAA0CrE,iBAAiB,CAACgF,GAAhE,CAAqE,CACjEN,eAAe,CAAG,KAAlB,CACAE,eAAe,CAAGP,cAAa,CAAC,iBAAD,CAA/B,CACH,CACD,GAAIA,cAAa,CAAC,gBAAD,CAAb,GAAoCrE,iBAAiB,CAACgF,GAA1D,CAA+D,CAC3DL,gBAAgB,CAAG,KAAnB,CACA;AACH,CACDnC,cAAc,CAAC,oBAAD,CAAd,CAAuC2B,YAAY,CAACxB,GAAb,CAAiB,cAAjB,CAAvC,CAAyE;AACzEH,cAAc,CAAC,iBAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,WAAD,CAAd,CAA4B,EAA5B,CACH,CACDjC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLqG,cAAc,CAAE,IADX,CAELC,gBAAgB,CAAE,IAFb,CAGLvF,SAAS,CAAEA,SAHN,CAILoE,UAAU,CAAE,eAJP,CAKL1D,cAAc,CAAdA,cALK,CAMLO,aAAa,CAAE,CACXoC,IAAI,CAAEN,OAAO,CAAClC,GAAR,CAAY,YAAZ,CADK,CAEXsC,KAAK,CAAEb,QAAQ,CAACzB,GAAT,CAAa,YAAb,CAFI,CAGXyC,WAAW,CAACN,cAAc,CAACnC,GAAf,CAAmB,YAAnB,CAHD,CAIXuC,aAAa,CAAEf,YAAY,CAACxB,GAAb,CAAiB,YAAjB,CAJJ,CAKX6B,QAAQ,CAARA,QALW,CAMXC,iBAAiB,CAAjBA,iBANW,CAOXC,eAAe,CAAfA,eAPW,CAQXC,gBAAgB,CAAhBA,gBARW,CASXC,eAAe,CAAfA,eATW,CAUXpD,aAAa,CAAE7B,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,eAAjB,GAAqC,EAAtC,CAA0C,gBAA1C,CAA4D,gBAA5D,CAA8E,KAA9E,CAAqF,KAArF,CAA4F,IAA5F,CAAnB,CAAqH8B,GAArH,CAAyH,YAAzH,CAVJ,CAWX0C,WAAW,CAAER,OAAO,CAAClC,GAAR,CAAY,cAAZ,EAA8BkC,OAAO,CAAClC,GAAR,CAAY,cAAZ,CAA9B,CAA4D,EAX9D,CAYX2C,YAAY,CAAElB,QAAQ,CAACzB,GAAT,CAAa,cAAb,EAA+ByB,QAAQ,CAACzB,GAAT,CAAa,cAAb,CAA/B,CAA8D,EAZjE,CANV,CAoBLX,YAAY,CAAZA,YApBK,CAqBLhB,OAAO,CAAE,KArBJ,CAFJ,CAAD,CAAR,CA0BH,CAxIL,EAyIKG,KAzIL,CAyIW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CArJL,EAsJH,CAjLD,CAkLH,CAnLM,CAqLP;AACA,MAAO,IAAMyG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACxF,SAAD,CAAYyF,SAAZ,CAAuBlH,QAAvB,CAAiC2B,YAAjC,CAAkD,CAC5E,MAAO,UAACzB,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAMsC,CAAAA,QAAQ,CAAG,CACb5C,KAAK,CAACe,IAAN,CAAW,uBAAX,CAAoC,CAChC,WAAYH,QADoB,CAApC,CADa,CAIbZ,KAAK,CAACe,IAAN,CAAW,gBAAX,CAA6B,CACzB,WAAYH,QADa,CAA7B,CAJa,CAAjB,CAQA,GAAIyB,SAAS,GAAK,QAAlB,CAA4B,CACxBO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,6CAAX,CAA0D,CACpEyG,mBAAmB,CAAEM,SAAS,CAAC,qBAAD,CADsC,CAEpE,WAAYlH,QAFwD,CAA1D,CAAd,EAIH,CACDP,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAI4B,CAAAA,cAAc,CAAG,EAArB,CACA;AACA,GAAM4B,CAAAA,QAAQ,CAAGzE,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,YAAzB,CAAuC,gBAAvC,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAApC,CACA,GAAIiB,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAM8E,CAAAA,eAAe,CAAGhG,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAApC,CACA2B,cAAc,CAAG,CACbyE,mBAAmB,CAAEM,SAAS,CAAC,qBAAD,CADjB,CAEb7F,kBAAkB,CAAE6F,SAAS,CAAC,oBAAD,CAFhB,CAGbL,UAAU,CAAE,CACR,QAASN,eAAe,CAAC,gBAAD,CADhB,CAER,QAASA,eAAe,CAAC,YAAD,CAFhB,CAHC,CAObI,eAAe,CAAEJ,eAAe,CAAC,iBAAD,CAPnB,CAQbG,cAAc,CAAEH,eAAe,CAAC,gBAAD,CARlB,CAAjB,CAUH,CAZD,IAYO,CACHpE,cAAc,CAAG,CACbd,kBAAkB,CAAE6F,SAAS,CAAC,oBAAD,CADhB,CAEbL,UAAU,CAAE9C,QAAQ,CAACzB,GAAT,CAAa,cAAb,EAA+ByB,QAAQ,CAACzB,GAAT,CAAa,cAAb,CAA/B,CAA8D,EAAG;AAFhE,CAAjB,CAIH,CAEDpC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLqG,cAAc,CAAE,IADX,CAELC,gBAAgB,CAAE,KAFb,CAGLvF,SAAS,CAAEA,SAHN,CAILoE,UAAU,CAAE,iBAJP,CAKLnD,aAAa,CAAE,CACXkC,KAAK,CAAEb,QAAQ,CAACzB,GAAT,CAAa,YAAb,CADI,CAEX2C,YAAY,CAAElB,QAAQ,CAACzB,GAAT,CAAa,cAAb,EAA+ByB,QAAQ,CAACzB,GAAT,CAAa,cAAb,CAA/B,CAA8D,EAFjE,CALV,CASLH,cAAc,CAAdA,cATK,CAULR,YAAY,CAAZA,YAVK,CAWLhB,OAAO,CAAE,KAXJ,CAFJ,CAAD,CAAR,CAgBH,CAxCL,EAyCKG,KAzCL,CAyCW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CArDL,EAsDH,CAtED,CAuEH,CAxEM,CA0EP;AACA,MAAO,IAAM2G,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAAC1F,SAAD,CAAYyF,SAAZ,CAAuBlH,QAAvB,CAAiC2B,YAAjC,CAAkD,CACvF,MAAO,UAACzB,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAI0H,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAI5F,SAAS,GAAK,QAAlB,CAA4B,CACxB4F,IAAI,CAAG,+BAAP,CACAD,UAAU,CAAG,CACT/G,QAAQ,CAAEL,QADD,CAETsH,qBAAqB,CAAEJ,SAAS,CAAC,uBAAD,CAFvB,CAAb,CAIH,CAND,IAMO,CACHG,IAAI,CAAG,kCAAP,CACAD,UAAU,CAAG,CACT/G,QAAQ,CAAEL,QADD,CAETqB,kBAAkB,CAAE6F,SAAS,CAAC,oBAAD,CAFpB,CAAb,CAIH,CACD9H,KAAK,CAACe,IAAN,CAAW,cAAgBkH,IAA3B,CAAiCD,UAAjC,EACK9G,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAI4B,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIV,SAAS,GAAK,QAAlB,CAA4B,CACxBU,cAAc,kBACP5B,QAAQ,CAACC,IADF,CAAd,CAGH,CAJD,IAIO,CACH2B,cAAc,CAAG,CACbd,kBAAkB,CAAE6F,SAAS,CAAC,oBAAD,CADhB,CAAjB,CAGH,CACDhH,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLqG,cAAc,CAAE,IADX,CAELC,gBAAgB,CAAE,KAFb,CAGLvF,SAAS,CAAEA,SAHN,CAILoE,UAAU,CAAE,mBAJP,CAKL1D,cAAc,CAAdA,cALK,CAMLR,YAAY,CAAZA,YANK,CAOLhB,OAAO,CAAE,KAPJ,CAFJ,CAAD,CAAR,CAYH,CAxBL,EAyBKG,KAzBL,CAyBW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CArCL,EAsCH,CAvDD,CAwDH,CAzDM,CA2DP,MAAO,IAAM+G,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxH,QAAD,CAAWyH,GAAX,CAAgBC,GAAhB,CAAqB5B,UAArB,CAAiC7F,QAAjC,CAA2C2B,YAA3C,CAA4D,CACxF,MAAO,UAACzB,QAAD,CAAc,CACjB,GAAMgB,CAAAA,UAAU,CAAG,CACfwG,UAAU,CAAE3H,QADG,CAEf,WAAYC,QAFG,CAAnB,CAIAE,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,cAAgBqH,GAA3B,CAAgCtG,UAAhC,EACKZ,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMoH,CAAAA,gBAAgB,CAAGrI,mBAAmB,CAACiB,QAAQ,CAACC,IAAV,CAAgBiH,GAAG,GAAK,SAAR,CAAoB,cAApB,CAAqCA,GAAG,GAAK,QAAR,CAAmB,aAAnB,CAAmCA,GAAG,EAAI,oBAAP,CAA6B,oBAA7B,CAAoDA,GAAG,EAAI,SAAP,CAAkB,kBAAlB,CAAuCA,GAAG,EAAI,WAAP,CAAoB,gBAApB,CAAuC,oBAA1N,CACxCA,GAAG,GAAK,SAAR,CAAoB,cAApB,CAAqCA,GAAG,GAAK,QAAR,CAAmB,aAAnB,CAAoCA,GAAG,EAAI,oBAAP,CAA8B,oBAA9B,CAAuDA,GAAG,EAAI,SAAP,CAAmB,kBAAnB,CAAuCA,GAAG,EAAI,WAAP,CAAqB,gBAArB,CAAwC,gBADvK,CACyL,KADzL,CACgM,KADhM,CACuM,IADvM,CAA5C,CAEAvH,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLqG,cAAc,CAAE,IADX,CAELC,gBAAgB,CAAE,KAFb,CAGLrE,aAAa,oBACR8E,GADQ,CACFE,gBAAgB,CAACrF,GAAjB,CAAqB,YAArB,CADE,CAHR,CAMLuD,UAAU,CAAEA,UANP,CAOL1D,cAAc,CAAE,CACZyF,aAAa,CAAE,EADH,CAPX,CAULnG,SAAS,CAAE,QAVN,CAWLE,YAAY,CAAZA,YAXK,CAYLhB,OAAO,CAAE,KAZJ,CAFJ,CAAD,CAAR,CAiBH,CArBL,EAsBKG,KAtBL,CAsBW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAACwI,IAAN,CAAW9G,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CAFD,IAEO,CACHnB,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CACJ,CAlCL,EAmCH,CAzCD,CA0CH,CA3CM,CA6CP;AACA,MAAO,IAAM8G,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACZ,SAAD,CAAYlH,QAAZ,CAAsB2B,YAAtB,CAAuC,CAC7D,MAAO,UAACzB,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CAChCE,QAAQ,CAAEL,QADsB,CAEhCoB,KAAK,CAAE,CAFyB,CAAxC,EAIKd,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACd,GAAMwH,CAAAA,YAAY,CAAGxH,QAAQ,CAACC,IAA9B,CACA,GAAMwH,CAAAA,aAAa,CAAG1I,mBAAmB,CAACyI,YAAY,CAAC,YAAD,CAAb,CAA6B,WAA7B,CAA0C,WAA1C,CAAuD,KAAvD,CAA8D,KAA9D,CAAqE,KAArE,CAAzC,CACA,GAAM3F,CAAAA,eAAe,CAAG9C,mBAAmB,CAACyI,YAAY,CAAC,cAAD,CAAb,CAC3C,mBAD2C,CACtB,mBADsB,CACD,YADC,CACa,KADb,CACoB,IADpB,CAA3C,CAGA7H,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLqG,cAAc,CAAE,IADX,CAELC,gBAAgB,CAAE,KAFb,CAGLvF,SAAS,CAAE,QAHN,CAILoE,UAAU,CAAE,aAJP,CAKLoC,WAAW,CAAE,CACTC,SAAS,CAAEH,YAAY,CAAC,WAAD,CADd,CAETI,SAAS,CAAEJ,YAAY,CAAC,WAAD,CAFd,CAGT1F,YAAY,CAAED,eAAe,CAACE,GAAhB,CAAoB,YAApB,CAHL,CAIT8F,UAAU,CAAEJ,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,CAJH,CAKT+F,oBAAoB,CAAEN,YAAY,CAAC,sBAAD,CALzB,CALR,CAYLO,aAAa,CAAE,IAZV,CAaLnG,cAAc,CAAE,CACZe,iBAAiB,CAAEd,eAAe,CAACE,GAAhB,CAAoB,YAApB,GAAqCF,eAAe,CAACE,GAAhB,CAAoB,YAApB,EAAkCP,MAAlC,CAA2C,CAAhF,CAAoFK,eAAe,CAACE,GAAhB,CAAoB,YAApB,EAAkC,CAAlC,CAApF,CAA2H,EADlI,CACsI;AAClJlC,SAAS,CAAE4H,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,GAAmC0F,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,EAAgCP,MAAhC,CAAyC,CAA5E,CAAgFiG,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,EAAgC,CAAhC,CAAhF,CAAqH,EAFpH,CAEwH;AACpIjB,kBAAkB,CAAE6F,SAAS,CAAC,oBAAD,CAHjB,CAbX,CAkBLvF,YAAY,CAAZA,YAlBK,CAmBLhB,OAAO,CAAE,KAnBJ,CAFJ,CAAD,CAAR,CAwBH,CAlCL,EAmCKG,KAnCL,CAmCW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CA/CL,EAgDH,CAlDD,CAmDH,CApDM,CAsDP;AACA,MAAO,IAAM+H,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACrH,UAAD,CAAa+G,WAAb,CAA0BO,MAA1B,CAAkCC,kBAAlC,CAAsDC,SAAtD,CAAoE,CACrG,MAAO,UAAUxI,QAAV,CAAoB,CACvBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,cAAgBuI,SAA3B,CAAsCxH,UAAtC,EACKZ,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMN,CAAAA,UAAU,CAAGM,QAAQ,CAACC,IAA5B,CACA,GAAMwH,CAAAA,aAAa,CAAG1I,mBAAmB,CAACW,UAAU,CAAC,YAAD,CAAV,EAA4B,EAA7B,CAAiC,WAAjC,CAA8C,WAA9C,CAA2D,YAA3D,CAAyE,WAAzE,CAAsF,KAAtF,CAAzC,CACAC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAGLkB,OAAO,CAAE8H,MAAM,GAAK,CAAX,CAAe,CACpBP,WAAW,gCACJA,WADI,MAEPG,UAAU,CAAEJ,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,CAFL,CAGP+F,oBAAoB,CAAEpI,UAAU,CAAC,sBAAD,CAAV,EAAsC,EAHrD,EADS,CAMpBkC,cAAc,gCACPsG,kBADO,MAEVrI,SAAS,CAAE4H,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,GAAmC0F,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,EAAgCP,MAAhC,CAAyC,CAA5E,CAAgFiG,aAAa,CAAC1F,GAAd,CAAkB,YAAlB,EAAgC,CAAhC,CAAhF,CAAqH,EAChI;AAHU,EANM,CAWpB3B,OAAO,CAAE,KAXW,CAAf,CAYL,CACAsH,WAAW,gCACJA,WADI,MAEPI,oBAAoB,CAAEpI,UAAU,CAAC,sBAAD,CAFzB,EADX,CAKAU,OAAO,CAAE,KALT,CAfC,CAAD,CAAR,CAuBH,CA3BL,EA4BKG,KA5BL,CA4BW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAtB,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CApCL,EAqCH,CAvCD,CAwCH,CAzCM,CA2CP,MAAO,IAAM2H,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACzH,UAAD,CAAa0H,kBAAb,CAAoC,CACxE,MAAO,UAAC1I,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAN,KAAK,CAACe,IAAN,CAAW,kBAAoBe,UAAU,CAACwH,SAA1C,CAAqDxH,UAAU,CAAC2H,SAAhE,EACKvI,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMN,CAAAA,UAAU,CAAGM,QAAQ,CAACC,IAA5B,CACAjB,QAAQ,CAACU,UAAD,CAAR,CACAC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAELV,UAAU,gCACHA,UADG,MAEN2I,kBAAkB,CAAlBA,kBAFM,CAGNhH,mBAAmB,CAAEV,UAAU,CAAC2H,SAAX,CAAqBjH,mBAHpC,EAFL,CAFJ,CAAD,CAAR,CAWH,CAfL,EAgBKd,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAtB,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAxBL,EAyBH,CA3BD,CA4BH,CA7BM,CA+BP,MAAO,IAAM8H,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAC5H,UAAD,CAAgB,CACvC,MAAO,UAAChB,QAAD,CAAc,CACjBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,GAAIsC,CAAAA,QAAQ,CAAG,CAAC5C,KAAK,CAACe,IAAN,CAAW,2BAAX,CAAwC,CACpDE,QAAQ,CAAEa,UAAU,CAAClB,QAD+B,CAAxC,CAAD,CAAf,CAGA,GAAIkB,UAAU,CAACO,SAAX,GAAyB,QAA7B,CAAuC,CACnCO,QAAQ,CAACC,IAAT,CAAc7C,KAAK,CAACe,IAAN,CAAW,0BAAX,CAAuC,CACjDE,QAAQ,CAAEa,UAAU,CAAClB,QAD4B,CAEjD+I,QAAQ,CAAE7H,UAAU,CAACiB,cAF4B,CAAvC,CAAd,EAIH,CACD1C,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,cACd,GAAMyI,CAAAA,OAAO,CAAG1J,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiByI,UAAlB,CAA8B,WAA9B,CAA2C,WAA3C,CAAwD,KAAxD,CAA+D,KAA/D,CAAsE,IAAtE,CAAnC,CACA,GAAMC,CAAAA,UAAU,CAAGF,OAAO,CAAC1G,GAAR,CAAY,YAAZ,CAAnB,CACA,GAAIH,CAAAA,cAAc,CAAG,EAArB,CACA,GAAMgH,CAAAA,WAAW,CAAGD,UAAU,CAAC9C,MAAX,CAAkB,SAAAgD,KAAK,QAAIA,CAAAA,KAAK,CAAC1E,IAAN,CAAW2E,YAAX,GAA4B1J,iBAAiB,CAACgF,GAAlD,EAAvB,CAApB,CACA,GAAI2E,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIrI,UAAU,CAACO,SAAX,GAAyB,QAA7B,CAAuC,CACnC8H,UAAU,CAAGhJ,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAzB,CACA,GAAIgJ,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIF,UAAU,CAACG,mBAAX,GAAmC9J,cAAc,CAAC+J,IAAtD,CAA4D,CACxDH,SAAS,CAAG,CACR,QAASD,UAAU,CAACK,SADZ,CAER,QAASL,UAAU,CAACC,SAFZ,CAAZ,CAKAC,IAAI,CAAG,CACHI,aAAa,CAACN,UAAU,CAACO,SADtB,CAEHC,gBAAgB,CAACR,UAAU,CAAC3F,YAFzB,CAGHoG,kBAAkB,CAACT,UAAU,CAAC7C,cAH3B,CAIHuD,SAAS,CAAC,EAJP,CAKHC,SAAS,CAAC,CALP,CAMHxD,cAAc,CAAC,CANZ,CAOHoD,SAAS,CAAC,EAPP,CAAP,CAUH,CAhBD,IAgBO,CACHN,SAAS,CAAGL,WAAW,CAACpH,MAAZ,CAAqB,CAArB,CAAyBoH,WAAW,CAAC,CAAD,CAApC,CAA0C,EAAtD,CAAyD;AACzDM,IAAI,CAAG,CACHI,aAAa,CAAC,EADX,CAEHE,gBAAgB,CAAC,EAFd,CAGHC,kBAAkB,CAAC,CAHhB,CAIHC,SAAS,CAACV,UAAU,CAACU,SAJlB,CAKHC,SAAS,CAACX,UAAU,CAACW,SALlB,CAMHxD,cAAc,CAAC6C,UAAU,CAAC7C,cANvB,CAOHoD,SAAS,CAACP,UAAU,CAACO,SAPlB,CAAP,CASH,CAID3H,cAAc,8CACPsH,IADO,MAEVU,aAAa,CAACZ,UAAU,CAACY,aAFf,CAGVT,mBAAmB,CAACH,UAAU,CAACG,mBAHrB,EAIPH,UAJO,MAKVC,SAAS,CAATA,SAED;AAPW,EAAd,CASH,CA5CD,IA4CO,CACHrH,cAAc,CAAG,CACbuH,mBAAmB,CAACnJ,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB4J,cAAjB,CAAgCrI,MAAhC,CAAuC,CAAvC,CACpBxB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB4J,cAAjB,CAAgC,CAAhC,EAAmCV,mBADf,CACmC9J,cAAc,CAACyK,GAFzD,CAGbb,SAAS,CAAEL,WAAW,CAACpH,MAAZ,CAAqB,CAArB,CAAyBoH,WAAW,CAAC,CAAD,CAApC,CAA0C,EAHxC,CAG4C;AACzDG,QAAQ,CAARA,QAJa,CAAjB,CAMH,CACDpJ,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,uCACFQ,UAAU,CAACoJ,SADT,CACqB,IADrB,uCAEQpJ,UAAU,CAACO,SAFnB,wCAGSP,UAAU,CAAC2E,UAHpB,0CAIW3E,UAAU,CAACS,YAJtB,4CAKHQ,cALG,qCAMM,KANN,wCAOS+G,UAPT,8CAQe,KARf,uCASQK,UAAU,CAACG,mBAAX,GAAmC9J,cAAc,CAACyK,GAAlD,CAAwDd,UAAxD,CAAqE,EAT7E,WAFF,CAAD,CAAR,CAcH,CA1EL,EA2EKzI,KA3EL,CA2EW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACC,OAAlB,EACH,CAFD,IAEO,CACH3B,KAAK,CAACkC,IAAN,CAAWR,KAAK,CAACR,QAAN,CAAeC,IAA1B,EACH,CACJ,CAvFL,EAwFH,CAnGD,CAoGH,CArGM,CAwGP,MAAO,IAAM+J,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACC,cAAD,CAAoB,CAC9D,MAAO,UAAUtK,QAAV,CAAoB,iBACvB,GAAI8B,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMyI,CAAAA,iBAAiB,CAAErL,KAAK,CAACe,IAAN,CAAW,gCAAX,CAA6C,CAClE,WAAYqK,cAAc,CAACxK,QADuC,CAA7C,CAAzB,CAII,GAAM0K,CAAAA,aAAa,CAACtL,KAAK,CAACe,IAAN,CAAW,2CAAX,6CACfqK,cAAc,CAACG,eADA,CACkBH,cAAc,CAACI,eADjC,8BAEhB,UAFgB,CAEJJ,cAAc,CAACxK,QAFX,eAApB,CAII,GAAM6K,CAAAA,KAAK,CAAEzL,KAAK,CAACe,IAAN,CAAW,cAAX,CAA2B,CACpC,WAAYqK,cAAc,CAACxK,QADS,CAA3B,CAAb,CAEJgC,QAAQ,CAAG,CAACyI,iBAAD,CAAoBC,aAApB,CAAkCG,KAAlC,CAAX,CAGJ3K,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAI4B,CAAAA,cAAc,CAAG,EAArB,CAEA,GAAMkD,CAAAA,YAAY,CAAG/F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAxC,CACA,GAAMgE,CAAAA,OAAO,CAAGlF,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,WAAzB,CAAsC,WAAtC,CAAmD,KAAnD,CAA0D,KAA1D,CAAiE,IAAjE,CAAnC,CAEA,GAAImC,CAAAA,aAAa,CAAG,CAChBgD,aAAa,CAAEN,YAAY,CAAC/C,GAAb,CAAiB,YAAjB,CADC,CAEhBwC,IAAI,CAAEN,OAAO,CAAClC,GAAR,CAAY,YAAZ,CAFU,CAApB,CAIA,GAAIwI,CAAAA,aAAa,CAAG,EAApB,CACA,GAAIhG,CAAAA,IAAI,CAAC,EAAT,CAEAgG,aAAa,CAAC7I,IAAd,CAAmB,CACf,QAAS1B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,oBAAjB,CADM,CAEf,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,gBAAjB,CAFM,CAAnB,EAIA2B,cAAc,CAAG5B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CAEA2B,cAAc,CAAC,oBAAD,CAAd,CAAuC2I,aAAa,CAAC,CAAD,CAApD,CAEA,GAAIvK,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,WAAjB,IAAgC,CAAC,CAArC,CAAuC,CACnCsE,IAAI,CAAC7C,IAAL,CAAU,CACN,QAAS1B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,WAAjB,CADH,CAEN,QAASD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,CAAiB,WAAjB,CAFH,CAAV,EAIA2B,cAAc,CAAG5B,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA7B,CACA2B,cAAc,CAAC,WAAD,CAAd,CAA8B2C,IAAI,CAAC,CAAD,CAAlC,CACH,CAED5E,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLiC,aAAa,CAACA,aADT,CAENR,cAAc,CAAEA,cAFV,CAGL4I,MAAM,CAAE,IAHH,CAILtJ,SAAS,CAAE+I,cAAc,CAAC/I,SAJrB,CAKLoE,UAAU,CAAE,mBALP,CAMLkB,cAAc,CAAE,IANX,CAOLpF,YAAY,CAAC6I,cAAc,CAAC7I,YAPvB,CAQLhB,OAAO,CAAE,KARJ,CAFJ,CAAD,CAAR,CAaH,CA5CL,EA6CKG,KA7CL,CA6CW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYlB,IAAI,CAACiG,aAAL,CAAmB,CAC3BC,EAAE,CAAEhF,KAAK,CAACC,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH3B,KAAK,CAACkC,IAAN,CAAW1B,IAAI,CAACiG,aAAL,CAAmB,CAC1BC,EAAE,CAAEhF,KAAK,CAACR,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CA7DL,EA8DH,CA9ED,CA+EH,CAhFM,CAqFP,MAAO,IAAMwK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACvJ,SAAD,CAAYwJ,iBAAZ,CAA+BjL,QAA/B,CAAyC2B,YAAzC,CAA0D,CACtF,MAAO,UAAUzB,QAAV,CAAoB,CACvB,GAAI8B,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMyI,CAAAA,iBAAiB,CAAErL,KAAK,CAACe,IAAN,CAAW,cAAX,CAA2B,CAChD,WAAYH,QADoC,CAA3B,CAAzB,CAIK,GAAM0K,CAAAA,aAAa,CAACtL,KAAK,CAACe,IAAN,CAAW,sCAAX,CAAmD,CACpE,aAAc8K,iBADsD,CAEnE,WAAYjL,QAFuD,CAAnD,CAApB,CAIAgC,QAAQ,CAAG,CAACyI,iBAAD,CAAmBC,aAAnB,CAAX,CAGLxK,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACyC,GAAN,CAAUF,QAAV,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAI4B,CAAAA,cAAc,CAAG,EAArB,CACA,GAAMqC,CAAAA,OAAO,CAAGlF,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,WAAzB,CAAsC,WAAtC,CAAmD,KAAnD,CAA0D,KAA1D,CAAiE,IAAjE,CAAnC,CAEA,GAAM6E,CAAAA,YAAY,CAAG/F,mBAAmB,CAACiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAoB,EAArB,CAAyB,oBAAzB,CAA+C,gBAA/C,CAAiE,KAAjE,CAAwE,KAAxE,CAA+E,IAA/E,CAAxC,CAEA,GAAImC,CAAAA,aAAa,CAAG,CAChBgD,aAAa,CAAEN,YAAY,CAAC/C,GAAb,CAAiB,YAAjB,CADC,CAEhBwC,IAAI,CAAEN,OAAO,CAAClC,GAAR,CAAY,YAAZ,CAFU,CAApB,CAMApC,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLiC,aAAa,CAACA,aADT,CAENR,cAAc,CAAEA,cAFV,CAGL4I,MAAM,CAAE,IAHH,CAILtJ,SAAS,CAAEA,SAJN,CAKLoE,UAAU,CAAE,mBALP,CAMLkB,cAAc,CAAE,IANX,CAOLpG,OAAO,CAAE,KAPJ,CAFJ,CAAD,CAAR,CAYH,CAzBL,EA0BKG,KA1BL,CA0BW,SAAAC,KAAK,CAAI,CACZb,QAAQ,CAAC,CACLO,IAAI,CAAEjB,cADD,CAELkB,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAII,KAAK,CAACR,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjC,KAAK,CAAC0B,KAAN,CAAYlB,IAAI,CAACiG,aAAL,CAAmB,CAC3BC,EAAE,CAAEhF,KAAK,CAACC,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH3B,KAAK,CAACkC,IAAN,CAAW1B,IAAI,CAACiG,aAAL,CAAmB,CAC1BC,EAAE,CAAEhF,KAAK,CAACR,QAAN,CAAeC,IADO,CAAnB,CAAX,EAGH,CACJ,CA1CL,EA2CH,CAzDD,CA0DH,CA3DM","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    constructOptionList,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\nimport {\r\n    transactionStatus,\r\n    attachmentType\r\n} from \"../components/Enumeration\";\r\nimport {\r\n    intl\r\n} from \"../components/App\";\r\n\r\n//Test click\r\nexport const getTestMaster = (testItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testmaster/getTestById\", {\r\n                ntestcode: testItem.ntestcode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        dataState: undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n//tab click\r\nexport const getTestDetails = (inputParam) => {\r\n    return function (dispatch) {\r\n        const testParameter = inputParam.testParameter;\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testmaster/getothertestdetails\", {\r\n                ntestcode: testParameter.ntestcode,\r\n                \"nFlag\": inputParam.nFlag,\r\n                ntestparametercode: testParameter.ntestparametercode,\r\n                userinfo: inputParam.userInfo\r\n            })\r\n            .then(response => {\r\n                let masterData = inputParam.masterData\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n//Add Test\r\nexport const addTest = (operation, testmaster, userInfo, ncontrolCode, nfilterTestCategory) => {\r\n    return function (dispatch) {\r\n        if (nfilterTestCategory && Object.values(nfilterTestCategory).length > 0) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = [\r\n                rsapi.post(\"testcategory/getTestCategory\", {\r\n                    \"userinfo\": userInfo\r\n                }),\r\n                rsapi.post(\"checklist/getApprovedChecklist\", {\r\n                    \"userinfo\": userInfo\r\n                })\r\n            ];\r\n            if (operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"testmaster/getActiveTestById\", {\r\n                    \"userinfo\": userInfo,\r\n                    ntestcode: testmaster.ntestcode\r\n                }))\r\n\r\n                urlArray.push(rsapi.post(\"period/getPeriodByControl\", {\r\n                    \"ncontrolcode\": ncontrolCode,\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testmaster/getInterfaceType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n            } else if (operation === \"create\") {\r\n                urlArray.push(rsapi.post(\"parametertype/getParameterType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"grade/getGrade\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"section/getSection\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testmaster/getAvailableMethod\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"unit/getUnit\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"instrumentcategory/fetchinstrumentcategory\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testmaster/getAddTest\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"containertype/getContainerType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testpackage/getTestPackage\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(  rsapi.post(\"period/getPeriodByControl\", {\r\n                    \"ncontrolcode\": ncontrolCode,\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testmaster/getInterfaceType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n            } else if (operation === \"copy\") {\r\n                urlArray.push(rsapi.post(\"testmaster/validateCopyTest\", {\r\n                    \"userinfo\": userInfo,\r\n                    ntestcode: testmaster.ntestcode\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"period/getPeriodByControl\", {\r\n                    \"ncontrolcode\": ncontrolCode,\r\n                    \"userinfo\": userInfo\r\n                }));\r\n                urlArray.push(rsapi.post(\"testmaster/getInterfaceType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                  \r\n                    let selectedRecord = {};\r\n                    const testCategoryMap = constructOptionList(response[0].data || [], \"ntestcategorycode\", \"stestcategoryname\", false, false, true);\r\n                    const testCategory = testCategoryMap.get(\"OptionList\");\r\n                    const checklistMap = constructOptionList(response[0].data || [], \"nchecklistversioncode\", \"schecklistname\", false, false, true);\r\n                    const ChecklistVersion = checklistMap.get(\"OptionList\");\r\n                    //const periodMap=[];\r\n                    const testData = {\r\n                        testCategory,\r\n                        ChecklistVersion\r\n                    };\r\n                    let parameterData = {};\r\n                    let otherTestData = {}\r\n                    let needOtherTest = false;\r\n                    if (operation === \"update\") {\r\n                        const editData = response[2].data;\r\n                        selectedRecord = editData;\r\n                        const periodMap = constructOptionList(response[3].data || [], \"nperiodcode\", \"speriodname\", false, false, true);\r\n                        const interfacetypeMap = constructOptionList(response[4].data || [], \"ninterfacetypecode\", \"sinterfacetypename\", false, false, true);\r\n\r\n                        parameterData = {\r\n                            period:periodMap.get(\"OptionList\"),\r\n                            interfacetype:interfacetypeMap.get(\"OptionList\")\r\n                        }\r\n                        selectedRecord[\"ntestcategorycode\"] = {\r\n                            \"value\": editData[\"ntestcategorycode\"],\r\n                            \"label\": editData[\"stestcategoryname\"]\r\n                        };\r\n                        selectedRecord[\"nchecklistversioncode\"] = {\r\n                            \"value\": editData[\"nchecklistversioncode\"],\r\n                            \"label\": editData[\"schecklistname\"]\r\n                        };\r\n                        \r\n                        if(selectedRecord[\"ntatperiodcode\"] !==-1){\r\n                            selectedRecord[\"ntatperiodcode\"] = {\r\n                                \"value\": editData[\"ntatperiodcode\"],\r\n                                \"label\": editData[\"statperiodname\"]\r\n                            };\r\n                        }\r\n                        selectedRecord[\"ninterfacetypecode\"] = {\r\n                            \"value\": editData[\"ninterfacetypecode\"],\r\n                            \"label\": editData[\"sinterfacetypename\"]\r\n                        };\r\n                    } else if (operation === \"copy\") {\r\n                        const periodMap = constructOptionList(response[3].data || [], \"nperiodcode\", \"speriodname\", false, false, true);\r\n                        const interfacetypeMap = constructOptionList(response[4].data || [], \"ninterfacetypecode\", \"sinterfacetypename\", false, false, true);\r\n\r\n                        //period:periodMap.get(\"OptionList\")\r\n                        parameterData={\r\n                            period: periodMap.get(\"OptionList\"),\r\n                            interfacetype:interfacetypeMap.get(\"OptionList\")\r\n                        } ;\r\n                        selectedRecord = {\r\n                            ntestcategorycode: nfilterTestCategory.value === -2 ? (testCategory.length > 0 ?\r\n                                // {\"label\": testCategory[0].stestcategoryname, \"value\": testCategory[0].ntestcategorycode}\r\n                                testCategory[0] : \"\") : nfilterTestCategory,\r\n                            ntransactionstatus: transactionStatus.ACTIVE,\r\n                            naccredited: transactionStatus.NOTACCREDITED,\r\n                            ntrainingneed: transactionStatus.NO,\r\n                            stestsynonym: \"\",\r\n                            stestname: \"\",\r\n                            sdescription: \"\",\r\n                            ncost: \"\",\r\n                            //period:periodMap.get(\"OptionList\"),\r\n                           \r\n                        }\r\n                        \r\n                    } else {\r\n                        // const { Grade } = response[7].data; //ParameterType\r\n                        const parameterMap = constructOptionList(response[2].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true);\r\n                        // const parameterType = parameterMap.get(\"OptionList\");//response[2].data;\r\n                        const gradeMap = constructOptionList(response[3].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        // const grade = gradeMap.get(\"OptionList\");// response[3].data;\r\n                        const parameterItem = parameterMap.get(\"DefaultValue\") ? parameterMap.get(\"DefaultValue\") : \"\"; //parameterType.filter(item=>{ return item.nparametertypecode === 3 });//ParameterType[0];\r\n                        selectedRecord = {\r\n                            // nsectioncode: {\"value\": response[2].data[0].nsectioncode, \"label\": response[2].data[0].ssectionname},\r\n                            nunitcode: -1,\r\n                            nparametertypecode: parameterItem, //{\"value\": parameterItem[0].nparametertypecode, \"label\": parameterItem[0].sdisplaystatus},\r\n                            ntestcategorycode: nfilterTestCategory.value === -2 ? (testCategory.length > 0 ?\r\n                                // {\"label\": testCategory[0].stestcategoryname, \"value\": testCategory[0].ntestcategorycode}: \"\")\r\n                                testCategory[0] : \"\") : nfilterTestCategory,\r\n                            ntransactionstatus: transactionStatus.ACTIVE,\r\n                            naccredited: transactionStatus.NOTACCREDITED,\r\n                            ntrainingneed: transactionStatus.NO,\r\n                            stestsynonym: \"\",\r\n                            stestname: \"\",\r\n                            sdescription: \"\",\r\n                            ncost: \"\"\r\n                        }\r\n                        let needUnit = true;\r\n                        let needRoundingDigit = true;\r\n                        let needCodedResult = true;\r\n                        let needActualResult = true;\r\n                        let npredefinedcode = transactionStatus.NO;\r\n                        const unitMap = constructOptionList(response[6].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                        const periodMap = constructOptionList(response[11].data || [], \"nperiodcode\", \"speriodname\", false, false, true);\r\n                        const deltaperiodMap = constructOptionList(response[11].data || [], \"nperiodcode\", \"speriodname\", false, false, true);\r\n                        const interfacetypeMap = constructOptionList(response[12].data || [], \"ninterfacetypecode\", \"sinterfacetypename\", false, false, true);\r\n\r\n                        if (parameterItem && parameterItem.item) {\r\n                            if (parameterItem.item[\"nunit\"] === transactionStatus.YES) {\r\n                                needUnit = false;\r\n                                selectedRecord[\"nunitcode\"] = unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\";\r\n                                //{\"value\": response[4].data[0][\"nunitcode\"], \"label\": response[4].data[0][\"sunitname\"]};\r\n                            }\r\n                            if (parameterItem.item[\"nroundingdigit\"] === transactionStatus.YES) {\r\n                                needRoundingDigit = false;\r\n                            }\r\n                            if (parameterItem.item[\"npredefinedcode\"] === transactionStatus.YES) {\r\n                                needCodedResult = false;\r\n                                npredefinedcode = parameterItem.item[\"npredefinedcode\"];\r\n                            }\r\n                            if (parameterItem.item[\"ngrade\"] === transactionStatus.YES) {\r\n                                needActualResult = false;\r\n                                selectedRecord[\"ngradecode\"] = gradeMap.get(\"DefaultValue\") ? gradeMap.get(\"DefaultValue\") : \"\";\r\n                                //{\"value\": Grade.ngradecode, \"label\": Grade[\"sdisplaystatus\"]};\r\n                            }\r\n                        }\r\n                        // const testParameterMap = constructOptionList(response[8].data[\"TestParameter\"] || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true);\r\n                        parameterData = {\r\n                            grade: gradeMap.get(\"OptionList\"),\r\n                            parameterType: parameterMap.get(\"OptionList\"),\r\n                            unit: unitMap.get(\"OptionList\"),\r\n                            period:periodMap.get(\"OptionList\"),\r\n                            interfacetype:interfacetypeMap.get(\"OptionList\"),\r\n                            deltaperiod:deltaperiodMap.get(\"OptionList\"),\r\n                            needRoundingDigit,\r\n                            needUnit,\r\n                            needCodedResult,\r\n                            needActualResult,\r\n                            npredefinedcode,\r\n                            testParameter: constructOptionList(response[8].data[\"TestParameter\"] || [], 'sparametername', 'sparametername', false, false, true).get(\"OptionList\"),\r\n                            defaultUnit: unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\",\r\n                            defaultGrade: gradeMap.get(\"DefaultValue\") ? gradeMap.get(\"DefaultValue\") : \"\"\r\n                            //testParameterMap.get(\"OptionList\")\r\n                        };\r\n                        const sectionMap = constructOptionList(response[4].data || [], \"nsectioncode\", \"ssectionname\", false, false, true);\r\n                       // const methodMap = constructOptionList(response[5].data.Method.length>0?response[5].data.Method:[] || [], \"nmethodcode\", \"smethodname\", false, false, true);\r\n                       const methodMap = constructOptionList(response[5].data||[], \"nmethodcode\", \"smethodname\", false, false, true);\r\n\r\n                       const instCatMap = constructOptionList(response[7].data || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", false, false, true);\r\n                        const continerType = constructOptionList(response[9].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true);\r\n                        const packageMap = constructOptionList(response[10].data || [], \"ntestpackagecode\", \"stestpackagename\", false, false, true);\r\n                        otherTestData = {\r\n                            package: packageMap.get(\"OptionList\"),\r\n                            section: sectionMap.get(\"OptionList\"),\r\n                            method: methodMap.get(\"OptionList\"),\r\n                            instrumentcategory: instCatMap.get(\"OptionList\"),\r\n                            containertype: continerType.get(\"OptionList\")\r\n\r\n                        }\r\n                        needOtherTest = true;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            // parameterData: {\r\n                            //     period: periodMap.get(\"OptionList\")\r\n                            // },   \r\n                            openModal: true,\r\n                            needOtherTest,\r\n                            operation: operation,\r\n                            screenName: \"IDS_TEST\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            testData,\r\n                            parameterData,\r\n                            otherTestData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_TESTCATEGORYNOTAVAILABLE\"\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n//Add Test Parameter\r\nexport const addParameter = (operation, ntestparametercode, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        const urlArray = [\r\n            rsapi.post(\"unit/getUnit\", {\r\n                \"userinfo\": userInfo\r\n            }),\r\n            rsapi.post(\"parametertype/getParameterType\", {\r\n                \"userinfo\": userInfo\r\n            }),\r\n            rsapi.post(\"grade/getGrade\", {\r\n                \"userinfo\": userInfo\r\n            }),\r\n            rsapi.post(\"testmaster/getAddTest\", {\r\n                \"userinfo\": userInfo\r\n            }),\r\n            rsapi.post(\"period/getPeriodByControl\", {\r\n                \"ncontrolcode\": ncontrolCode,\r\n                \"userinfo\": userInfo\r\n            })\r\n            \r\n        ];\r\n        if (operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"testmaster/getActiveParameterById\", {\r\n                ntestparametercode: ntestparametercode,\r\n                \"userinfo\": userInfo\r\n            }));\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                // const { Grade, ParameterType } = response[1].data;\r\n                const parameterMap = constructOptionList(response[1].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true);\r\n                const gradeMap = constructOptionList(response[2].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                const unitMap = constructOptionList(response[0].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                const deltaperiodMap = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true);\r\n\r\n                //response[2].data;\r\n                // const grade = response[2].data;\r\n                // const parameterType = response[1].data;\r\n                let selectedRecord = {};\r\n                let needUnit = true;\r\n                let needRoundingDigit = true;\r\n                let needCodedResult = true;\r\n                let needActualResult = true;\r\n                let npredefinedcode = transactionStatus.No;\r\n                if (operation === \"update\") {\r\n                    const editTestParameter = response[5].data.TestParameter[0];\r\n                    selectedRecord = editTestParameter;\r\n                    const nparametertypecode = editTestParameter[\"nparametertypecode\"];\r\n                    const parameterItem = parameterMap.get(\"OptionList\").filter(function (item) {\r\n                        return item.value === nparametertypecode;\r\n                    });\r\n                    selectedRecord[\"sparametername\"] = {\r\n                        value: editTestParameter[\"sparametername\"],\r\n                        label: editTestParameter[\"sparametername\"]\r\n                    };\r\n\r\n                    if(editTestParameter[\"ndeltaunitcode\"] !==-1){\r\n                        selectedRecord[\"ndeltaunitcode\"] = {\r\n                            \"value\": editTestParameter[\"ndeltaunitcode\"],\r\n                            \"label\": editTestParameter[\"sdeltaunitname\"]\r\n                        };\r\n                    }\r\n                    selectedRecord[\"nparametertypecode\"] = {\r\n                        value: nparametertypecode,\r\n                        label: editTestParameter[\"sdisplaystatus\"]\r\n                    };\r\n                    if (parameterItem && parameterItem[0].item) {\r\n                        const selectedParameterItem = parameterItem[0].item;\r\n                        if (selectedParameterItem[\"nunitrequired\"] === transactionStatus.YES) {\r\n                            needUnit = false;\r\n                            selectedRecord[\"nunitcode\"] = {\r\n                                value: editTestParameter[\"nunitcode\"],\r\n                                label: editTestParameter[\"sunitname\"]\r\n                            };\r\n                        }\r\n                        if (selectedParameterItem[\"nroundingrequired\"] === transactionStatus.YES) {\r\n                            needRoundingDigit = false;\r\n                        }\r\n\r\n                        if (selectedParameterItem[\"npredefinedrequired\"] === transactionStatus.YES || selectedParameterItem[\"ngraderequired\"] === transactionStatus.YES) {\r\n                            const editCodedResult = response[5].data.TestPredefinedParameter;\r\n                            if (editCodedResult.length > 0) {\r\n                                const defaultCodedResult = editCodedResult.filter(function (item) {\r\n                                    return item.ndefaultstatus === transactionStatus.YES;\r\n                                });\r\n                                if (defaultCodedResult.length > 0) {\r\n                                    selectedRecord[\"spredefinedname\"] = defaultCodedResult[0].spredefinedname;\r\n                                    selectedRecord[\"ntestpredefinedcode\"] = defaultCodedResult[0].ntestpredefinedcode;;\r\n                                    selectedRecord[\"ngradecode\"] = {\r\n                                        value: defaultCodedResult[0].ngradecode,\r\n                                        label: defaultCodedResult[0][\"sdisplaystatus\"]\r\n                                    };\r\n                                    selectedRecord[\"sresultparacomment\"] = defaultCodedResult[0].sresultparacomment;\r\n                                } else {\r\n                                    selectedRecord[\"spredefinedname\"] = editCodedResult[0].spredefinedname;\r\n                                    selectedRecord[\"ntestpredefinedcode\"] = editCodedResult[0].ntestpredefinedcode;\r\n                                    selectedRecord[\"ngradecode\"] = {\r\n                                        value: editCodedResult[0].ngradecode,\r\n                                        label: editCodedResult[0][\"sdisplaystatus\"]\r\n                                    };\r\n                                    selectedRecord[\"sresultparacomment\"] = defaultCodedResult[0].sresultparacomment;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"spredefinedname\"] = \"\";\r\n                            selectedRecord[\"ngradecode\"] = -1;\r\n                        }\r\n                        if (selectedParameterItem[\"npredefinedrequired\"] === transactionStatus.YES) {\r\n                            needCodedResult = false;\r\n                            npredefinedcode = selectedParameterItem[\"npredefinedrequired\"];\r\n                        }\r\n                        if (selectedParameterItem[\"ngraderequired\"] === transactionStatus.YES) {\r\n                            needActualResult = false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const parameterItem = parameterMap.get(\"DefaultValue\") ? parameterMap.get(\"DefaultValue\").item : {};\r\n                    // parameterType.filter(item=>{ return item.nparametertypecode === transactionStatus.YES });\r\n                    if (parameterItem[\"nunitrequired\"] === transactionStatus.YES) {\r\n                        needUnit = false;\r\n                        selectedRecord[\"nunitcode\"] = unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\"; //{\"value\": response[0].data[0][\"nunitcode\"], \"label\": response[0].data[0][\"sunitname\"]};\r\n                    }\r\n                    if (parameterItem[\"nroundingrequired\"] === transactionStatus.YES) {\r\n                        needRoundingDigit = false;\r\n                    }\r\n                    if (parameterItem[\"npredefinedcrequired\"] === transactionStatus.YES) {\r\n                        needCodedResult = false;\r\n                        npredefinedcode = parameterItem[\"npredefinedcode\"];\r\n                    }\r\n                    if (parameterItem[\"ngraderequired\"] === transactionStatus.YES) {\r\n                        needActualResult = false;\r\n                        // selectedRecord[\"ngradecode\"] = {\"value\": Grade.ngradecode, \"label\": Grade[\"sdisplaystatus\"]};\r\n                    }\r\n                    selectedRecord[\"nparametertypecode\"] = parameterMap.get(\"DefaultValue\"); //{value: parameterItem[0].nparametertypecode, label: parameterItem[0].sdisplaystatus};\r\n                    selectedRecord[\"nroundingdigits\"]=\"\";\r\n                    selectedRecord[\"nunitcode\"]=\"\";\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: true,\r\n                        operation: operation,\r\n                        screenName: \"IDS_PARAMETER\",\r\n                        selectedRecord,\r\n                        parameterData: {\r\n                            unit: unitMap.get(\"OptionList\"),\r\n                            grade: gradeMap.get(\"OptionList\"),\r\n                            deltaperiod:deltaperiodMap.get(\"OptionList\"),\r\n                            parameterType: parameterMap.get(\"OptionList\"),\r\n                            needUnit,\r\n                            needRoundingDigit,\r\n                            needCodedResult,\r\n                            needActualResult,\r\n                            npredefinedcode,\r\n                            testParameter: constructOptionList(response[3].data[\"TestParameter\"] || [], 'sparametername', 'sparametername', false, false, true).get(\"OptionList\"),\r\n                            defaultUnit: unitMap.get(\"DefaultValue\") ? unitMap.get(\"DefaultValue\") : \"\",\r\n                            defaultGrade: gradeMap.get(\"DefaultValue\") ? gradeMap.get(\"DefaultValue\") : \"\"\r\n                        },\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//Add Coded result\r\nexport const addCodedResult = (operation, paramdata, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        const urlArray = [\r\n            rsapi.post(\"testmaster/getAddTest\", {\r\n                \"userinfo\": userInfo\r\n            }),\r\n            rsapi.post(\"grade/getGrade\", {\r\n                \"userinfo\": userInfo\r\n            })\r\n        ];\r\n        if (operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"testmaster/getActivePredefinedParameterById\", {\r\n                ntestpredefinedcode: paramdata[\"ntestpredefinedcode\"],\r\n                \"userinfo\": userInfo\r\n            }));\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n                // const grade = response[1].data;\r\n                const gradeMap = constructOptionList(response[1].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                if (operation === \"update\") {\r\n                    const editCodedResult = response[2].data;\r\n                    selectedRecord = {\r\n                        ntestpredefinedcode: paramdata[\"ntestpredefinedcode\"],\r\n                        ntestparametercode: paramdata[\"ntestparametercode\"],\r\n                        ngradecode: {\r\n                            \"label\": editCodedResult[\"sdisplaystatus\"],\r\n                            \"value\": editCodedResult[\"ngradecode\"]\r\n                        },\r\n                        spredefinedname: editCodedResult[\"spredefinedname\"],\r\n                        ndefaultstatus: editCodedResult[\"ndefaultstatus\"],\r\n                    }\r\n                } else {\r\n                    selectedRecord = {\r\n                        ntestparametercode: paramdata[\"ntestparametercode\"],\r\n                        ngradecode: gradeMap.get(\"DefaultValue\") ? gradeMap.get(\"DefaultValue\") : \"\" //{\"value\": grade[0].ngradecode, \"label\": grade[0][\"sdisplaystatus\"]}\r\n                    }\r\n                }\r\n              \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: false,\r\n                        operation: operation,\r\n                        screenName: \"IDS_CODEDRESULT\",\r\n                        parameterData: {\r\n                            grade: gradeMap.get(\"OptionList\"),\r\n                            defaultGrade: gradeMap.get(\"DefaultValue\") ? gradeMap.get(\"DefaultValue\") : \"\"\r\n                        },\r\n                        selectedRecord,\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//Add parameter specification\r\nexport const addParameterSpecification = (operation, paramdata, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let inputparam = [];\r\n        let surl = \"\";\r\n        if (operation === \"update\") {\r\n            surl = \"getParameterSpecificationById\";\r\n            inputparam = {\r\n                userinfo: userInfo,\r\n                ntestparamnumericcode: paramdata[\"ntestparamnumericcode\"]\r\n            };\r\n        } else {\r\n            surl = \"getParameterSpecificationByCount\";\r\n            inputparam = {\r\n                userinfo: userInfo,\r\n                ntestparametercode: paramdata[\"ntestparametercode\"]\r\n            };\r\n        }\r\n        rsapi.post(\"testmaster/\" + surl, inputparam)\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n                if (operation === \"update\") {\r\n                    selectedRecord = {\r\n                        ...response.data\r\n                    }\r\n                } else {\r\n                    selectedRecord = {\r\n                        ntestparametercode: paramdata[\"ntestparametercode\"]\r\n                    }\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: false,\r\n                        operation: operation,\r\n                        screenName: \"IDS_SPECIFICATION\",\r\n                        selectedRecord,\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getAvailableData = (testItem, url, key, screenName, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        const inputParam = {\r\n            TestMaster: testItem,\r\n            \"userinfo\": userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testmaster/\" + url, inputParam)\r\n            .then(response => {\r\n                const availableDataMap = constructOptionList(response.data, key === \"section\" ? \"nsectioncode\" : key === \"method\" ? \"nmethodcode\" : key == \"instrumentcategory\" ?\"ninstrumentcatcode\" : key == \"package\" ?\"ntestpackagecode\" : key == \"technique\" ?\"ntechniquecode\" : \"ncontainertypecode\",\r\n                    key === \"section\" ? \"ssectionname\" : key === \"method\" ? \"smethodname\" :  key == \"instrumentcategory\" ? \"sinstrumentcatname\"  :  key == \"package\" ? \"stestpackagename\" :key == \"technique\" ? \"stechniquename\" : \"scontainertype\", false, false, true);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: false,\r\n                        otherTestData: {\r\n                            [key]: availableDataMap.get(\"OptionList\")\r\n                        },\r\n                        screenName: screenName,\r\n                        selectedRecord: {\r\n                            availableData: \"\"\r\n                        },\r\n                        operation: \"create\",\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 417) {\r\n                    toast.info(error.response.data)\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//Add formula\r\nexport const addFormula = (paramdata, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testmaster/addTestFormula\", {\r\n                userinfo: userInfo,\r\n                nFlag: 1\r\n            })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const testMasterMap = constructOptionList(responseData[\"TestMaster\"], \"ntestcode\", \"stestname\", false, false, false);\r\n                const testCategoryMap = constructOptionList(responseData[\"TestCategory\"], \r\n                \"ntestcategorycode\", \"stestcategoryname\", 'descending', false, true);\r\n            \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: false,\r\n                        operation: \"create\",\r\n                        screenName: \"IDS_FORMULA\",\r\n                        formulaData: {\r\n                            operators: responseData[\"Operators\"],\r\n                            functions: responseData[\"Functions\"],\r\n                            testCategory: testCategoryMap.get(\"OptionList\"),\r\n                            testMaster: testMasterMap.get(\"OptionList\"),\r\n                            dynamicFormulaFields: responseData[\"DynamicFormulaFields\"]\r\n                        },\r\n                        isFormulaOpen: true,\r\n                        selectedRecord: {\r\n                            ntestcategorycode: testCategoryMap.get(\"OptionList\") && testCategoryMap.get(\"OptionList\").length > 0 ? testCategoryMap.get(\"OptionList\")[0] : \"\", //responseData[\"TestCategory\"].length>0? {\"label\": responseData[\"TestCategory\"][0][\"stestcategoryname\"], \"value\": responseData[\"TestCategory\"][0][\"ntestcategorycode\"]}: \"\",\r\n                            ntestcode: testMasterMap.get(\"OptionList\") && testMasterMap.get(\"OptionList\").length > 0 ? testMasterMap.get(\"OptionList\")[0] : \"\", //responseData[\"TestMaster\"].length>0? {\"label\": responseData[\"TestMaster\"][0][\"stestname\"], \"value\": responseData[\"TestMaster\"][0][\"ntestcode\"]}: \"\",\r\n                            ntestparametercode: paramdata[\"ntestparametercode\"]\r\n                        },\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//Formula test category and test change event function\r\nexport const formulaChangeFunction = (inputParam, formulaData, caseNo, selectedRecordData, methodUrl) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testmaster\" + methodUrl, inputParam)\r\n            .then(response => {\r\n                const masterData = response.data;\r\n                const testMasterMap = constructOptionList(masterData[\"TestMaster\"] || [], \"ntestcode\", \"stestname\", 'descending', 'ntestcode', false);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n\r\n                    payload: caseNo === 1 ? {\r\n                        formulaData: {\r\n                            ...formulaData,\r\n                            testMaster: testMasterMap.get(\"OptionList\"),\r\n                            dynamicFormulaFields: masterData[\"DynamicFormulaFields\"] || []\r\n                        },\r\n                        selectedRecord: {\r\n                            ...selectedRecordData,\r\n                            ntestcode: testMasterMap.get(\"OptionList\") && testMasterMap.get(\"OptionList\").length > 0 ? testMasterMap.get(\"OptionList\")[0] : \"\"\r\n                            // masterData[\"TestMaster\"].length>0? {\"label\": masterData[\"TestMaster\"][0][\"stestname\"], \"value\": masterData[\"TestMaster\"][0][\"ntestcode\"]}: \"\"\r\n                        },\r\n                        loading: false\r\n                    } : {\r\n                        formulaData: {\r\n                            ...formulaData,\r\n                            dynamicFormulaFields: masterData[\"DynamicFormulaFields\"]\r\n                        },\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeTestCategoryFilter = (inputParam, filterTestCategory) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testmaster/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterTestCategory,\r\n                            nfilterTestCategory: inputParam.inputData.nfilterTestCategory\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const addTestFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/testmaster/editTestFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                testfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename:editObject.sfilename,\r\n                            slinkdescription:editObject.sdescription,\r\n                            nlinkdefaultstatus:editObject.ndefaultstatus,\r\n                            sfilesize:'',\r\n                            nfilesize:0,\r\n                            ndefaultstatus:4,\r\n                            sfilename:'',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename:'',\r\n                            slinkdescription:'',\r\n                            nlinkdefaultstatus:4,\r\n                            sfilesize:editObject.sfilesize,\r\n                            nfilesize:editObject.nfilesize,\r\n                            ndefaultstatus:editObject.ndefaultstatus,\r\n                            sfilename:editObject.sfilename,\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        ntestfilecode:editObject.ntestfilecode,\r\n                        nattachmenttypecode:editObject.nattachmenttypecode,\r\n                        ...editObject,\r\n                        nlinkcode,\r\n        \r\n                       // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode:response[0].data.AttachmentType.length>0?\r\n                        response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n \r\n\r\nexport const getActiveTestContainerTypeById = (containerParam) => {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        const containerTypeById =rsapi.post(\"containertype/getContainerType\", {\r\n            \"userinfo\": containerParam.userInfo});\r\n        \r\n          \r\n            const containerById=rsapi.post(\"testmaster/getActiveTestContainerTypeById\", {\r\n                [containerParam.primaryKeyField] :containerParam.primaryKeyValue,\r\n                \"userinfo\": containerParam.userInfo\r\n                });\r\n                const units =rsapi.post(\"unit/getUnit\", {\r\n                    \"userinfo\": containerParam.userInfo});\r\n            urlArray = [containerTypeById, containerById,units];\r\n\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n               \r\n                const continerType = constructOptionList(response[0].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true);\r\n                const unitMap = constructOptionList(response[2].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n\r\n                let otherTestData = {\r\n                    containertype: continerType.get(\"OptionList\"),\r\n                    unit: unitMap.get(\"OptionList\")\r\n                }\r\n                let ContainerType = [];\r\n                let unit=[];\r\n\r\n                ContainerType.push({\r\n                    \"value\": response[1].data[\"ncontainertypecode\"],\r\n                    \"label\": response[1].data[\"scontainertype\"]\r\n                });\r\n                selectedRecord = response[1].data;\r\n\r\n                selectedRecord[\"ncontainertypecode\"] = ContainerType[0];\r\n               \r\n                if( response[1].data[\"nunitcode\"]!==-1){\r\n                    unit.push({\r\n                        \"value\": response[1].data[\"nunitcode\"],\r\n                        \"label\": response[1].data[\"sunitname\"]\r\n                    });\r\n                    selectedRecord = response[1].data;\r\n                    selectedRecord[\"nunitcode\"] = unit[0];\r\n                }\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        otherTestData:otherTestData,\r\n                       selectedRecord: selectedRecord,\r\n                        isOpen: true,\r\n                        operation: containerParam.operation,\r\n                        screenName: \"IDS_CONTAINERTYPE\",\r\n                        openChildModal: true,\r\n                        ncontrolCode:containerParam.ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const addContainerType = (operation, testparametercode, userInfo, ncontrolCode) => {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        const containerTypeById =rsapi.post(\"unit/getUnit\", {\r\n            \"userinfo\": userInfo});\r\n        \r\n          \r\n             const containerById=rsapi.post(\"testmaster/getAvailableContainerType\", {\r\n                \"TestMaster\": testparametercode,\r\n                 \"userinfo\": userInfo\r\n                 });\r\n             urlArray = [containerTypeById,containerById];\r\n\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n                const unitMap = constructOptionList(response[0].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n \r\n                const continerType = constructOptionList(response[1].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true);\r\n\r\n                let otherTestData = {\r\n                    containertype: continerType.get(\"OptionList\"),\r\n                    unit: unitMap.get(\"OptionList\")\r\n\r\n                }\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        otherTestData:otherTestData,\r\n                       selectedRecord: selectedRecord,\r\n                        isOpen: true,\r\n                        operation: operation,\r\n                        screenName: \"IDS_CONTAINERTYPE\",\r\n                        openChildModal: true,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}