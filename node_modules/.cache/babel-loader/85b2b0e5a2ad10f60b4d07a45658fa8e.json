{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\Client.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, FormGroup, FormLabel, Nav, Card } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { MediaLabel } from '../../components/add-client.styles';\nimport { callService, crudMaster, updateStore, validateEsignCredential, getClientComboService, getClientDetail, getClientSiteForAddEdit, getClientSiteContactDetails, getClientContactForAddEdit, filterColumnData, changeClientCategoryFilter } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport AddClient from './AddClient';\nimport { ContentPanel } from '../product/product.styled';\nimport ListMaster from '../../components/list-master/list-master.component'; // import ReactTooltip from 'react-tooltip';\n\nimport { ReadOnlyText } from '../../components/App.styles';\nimport ClientSiteAddressTab from '../../pages/contactmaster/ClientSiteAddressTab';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport ClientCategoryFilter from './ClientCategoryFilter';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Client extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.state.nfilterClientCategory.value) {\n        let inputParam = {\n          inputData: {\n            nclientcatcode: this.state.nfilterClientCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterClientCategory: this.state.nfilterClientCategory\n          },\n          classUrl: \"client\",\n          methodUrl: \"ClientByCategory\"\n        };\n        this.props.changeClientCategoryFilter(inputParam, this.props.Login.masterData.filterClientCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CLIENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChangeFilter = (comboData, fieldName) => {\n      let nfilterClientCategory = this.state.nfilterClientCategory || {};\n      nfilterClientCategory = comboData;\n      this.searchRef.current.value = \"\";\n      this.setState({\n        nfilterClientCategory\n      });\n    };\n\n    this.getNestedFieldData = (nestedColumnArray, data) => nestedColumnArray.reduce((xs, x) => xs && xs[x] ? xs[x] : null, data);\n\n    this.expandChange = event => {\n      const isExpanded = event.dataItem.expanded === undefined ? event.dataItem.aggregates : event.dataItem.expanded;\n      event.dataItem.expanded = !isExpanded;\n      this.setState({ ...this.props\n      });\n    };\n\n    this.detailBand = props => {\n      const Dataitem = props.dataItem;\n      const OptionalFieldList = [{\n        datafield: \"saddress1\",\n        Column: \"Address1\"\n      }, {\n        datafield: \"saddress2\",\n        Column: \"Address2\"\n      }, {\n        datafield: \"saddress3\",\n        Column: \"Address3\"\n      }, {\n        datafield: \"sphoneno\",\n        Column: \"Phone No\"\n      }, {\n        datafield: \"smobileno\",\n        Column: \"Mobile No\"\n      }, {\n        datafield: \"sfaxno\",\n        Column: \"Fax No\"\n      }, {\n        datafield: \"stransdisplaystatus\",\n        Column: \"DisplayStatus\"\n      }];\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }\n      }, OptionalFieldList.map(fields => {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: fields.Column,\n          message: fields.Column,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 40\n          }\n        })), /*#__PURE__*/React.createElement(MediaLabel, {\n          className: \"readonly-text font-weight-normal\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }\n        }, Dataitem[fields.datafield])));\n      }));\n    };\n\n    this.detailedFieldList = [{\n      dataField: \"saddress1\",\n      idsName: \"IDS_ADDRESS1\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"saddress2\",\n      idsName: \"IDS_ADDRESS2\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"saddress3\",\n      idsName: \"IDS_ADDRESS3\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"sphoneno\",\n      idsName: \"IDS_PHONENO\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"smobileno\",\n      idsName: \"IDS_MOBILENO\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"sfaxno\",\n      idsName: \"IDS_FAXNO\",\n      columnSize: \"4\"\n    }];\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"agree\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n        } else {\n          selectedRecord[event.target.name] = event.target.checked === true ? 1 : 2;\n        }\n      } else if (event.target.type === 'select-one') {\n        selectedRecord[event.target.name] = event.target.value;\n      } else {\n        if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.deleteRecord = clientDeleteParam => {\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: clientDeleteParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: {\n          [\"client\"]: clientDeleteParam.selectedRecord,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: clientDeleteParam.operation\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, clientDeleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: clientDeleteParam.screenName,\n            operation: clientDeleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.DeleteClient = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"client\"] = this.props.Login.masterData.selectedClient;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"Client\",\n        selectedObject: \"selectedClient\",\n        primaryKeyField: \"nclientcode\",\n        primaryKeyValue: this.props.Login.masterData.selectedClient.nclientcode,\n        fetchUrl: \"client/getClient\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Client\",\n        //postParam,\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Client\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        //methodUrl: this.props.Login.inputParam.methodUrl,\n        methodUrl: \"Client\",\n        displayName: this.props.intl.formatMessage({\n          id: \"IDS_CLIENT\"\n        }),\n        // displayName: this.props.Login.inputParam.displayName,\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteClient(\"delete\", deleteId));\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n      let postParam = undefined;\n\n      if (isValidateEmail) {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let dataState = undefined;\n\n        if (this.props.Login.operation === \"update\") {\n          const selectedRecord = this.state.selectedRecord; // edit\n\n          postParam = {\n            inputListName: \"Client\",\n            selectedObject: \"selectedClient\",\n            primaryKeyField: \"nclientcode\"\n          };\n          inputData[\"client\"] = {};\n          this.fieldList.map(item => {\n            return inputData[\"client\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n          });\n          inputData[\"client\"][\"nclientcode\"] = selectedRecord[\"nclientcode\"] ? selectedRecord[\"nclientcode\"] : -1;\n          inputData[\"client\"][\"ncountrycode\"] = selectedRecord[\"ncountrycode\"] ? selectedRecord[\"ncountrycode\"].value : -1;\n          inputData[\"client\"][\"nclientcatcode\"] = selectedRecord[\"nclientcatcode\"] ? selectedRecord[\"nclientcatcode\"].value : -1;\n          dataState = this.state.dataState;\n        } else {\n          //add               \n          inputData[\"client\"] = {\n            \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n          };\n          this.fieldList.map(item => {\n            return inputData[\"client\"][item] = this.state.selectedRecord[item];\n          });\n          inputData[\"client\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n          inputData[\"client\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : -1;\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Client\",\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          selectedId: this.state.selectedRecord[\"nclientcode\"],\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          dataState,\n          searchRef: this.searchRef,\n          postParam: postParam\n        };\n        this.setState({\n          nfilterClientCategory: {\n            \"label\": this.state.selectedRecord.nclientcatcode.label,\n            \"value\": this.state.selectedRecord.nclientcatcode.value\n          }\n        });\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.inputParam.displayName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef();\n    this.extractedColumnList = [];\n    this.fieldList = [];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      addScreen: false,\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      operation: \"create\",\n      dataResult: [],\n      dataState: _dataState,\n      clientData: [],\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {},\n      countryList: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.mandatoryFields = [{\n      \"idsName\": \"IDS_CLIENTNAME\",\n      \"dataField\": \"sclientname\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_ADDRESS1\",\n      \"dataField\": \"saddress1\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_COUNTRY\",\n      \"dataField\": \"ncountrycode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedClient && this.props.Login.masterData.selectedClient.ntransactionstatus === transactionStatus.DEACTIVE) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedClient && this.props.Login.masterData.selectedClient.ntransactionstatus === transactionStatus.ACTIVE) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_CLIENTNAME\",\n      \"dataField\": \"sclientname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_COUNTRYNAME\",\n      \"dataField\": \"scountryname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_EMAIL\",\n      \"dataField\": \"semail\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\"\n    }];\n    this.fieldList = [\"sclientname\", \"saddress1\", \"saddress2\", \"saddress3\", \"sphoneno\", \"smobileno\", \"sfaxno\", \"semail\", \"ntransactionstatus\", \"ncountrycode\"];\n    const addId = this.state.controlMap.has(\"AddClient\") && this.state.controlMap.get(\"AddClient\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditClient\") && this.state.controlMap.get(\"EditClient\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteClient\") && this.state.controlMap.get(\"DeleteClient\").ncontrolcode;\n    const clientAddParam = {\n      screenName: \"Client\",\n      operation: \"create\",\n      primaryKeyField: \"nclientcode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId,\n      nfilterClientCategory: this.state.nfilterClientCategory\n    };\n    const clientEditParam = {\n      screenName: \"Client\",\n      operation: \"update\",\n      primaryKeyField: \"nclientcode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId,\n      masterData: this.props.Login.masterData,\n      nfilterClientCategory: this.state.nfilterClientCategory\n    };\n    const clientDeleteParam = {\n      screenName: \"Client\",\n      methodUrl: \"Client\",\n      operation: \"delete\",\n      ncontrolCode: deleteId\n    };\n    const filterParam = {\n      inputListName: \"Client\",\n      selectedObject: \"selectedClient\",\n      primaryKeyField: \"nclientcode\",\n      fetchUrl: \"client/getSelectedClientDetail\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sclientname\", \"address1\", \"saddress2\", \"saddress3\", \"sphoneno\", \"smobileno\", \"sfaxno\", \"semail\", \"stransdisplaystatus\"]\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Client\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Client,\n      getMasterDetail: Client => this.props.getClientDetail(Client, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedClient,\n      primaryKeyField: \"nclientcode\",\n      mainField: \"sclientname\",\n      firstField: \"sclientcatname\",\n      secondField: \"stransdisplaystatus\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getClientComboService(clientAddParam),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_CLIENTCATEGORYFILTER\": /*#__PURE__*/React.createElement(ClientCategoryFilter, {\n          filterClientCategory: this.state.filterClientCategory || [],\n          nfilterClientCategory: this.state.nfilterClientCategory || {},\n          onComboChange: this.onComboChangeFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 41\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.selectedClient && this.props.Login.masterData.Client.length > 0 && this.props.Login.masterData.selectedClient ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedClient.sclientname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 61\n      }\n    }), this.props.Login.masterData.selectedClient.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.getClientComboService(clientEditParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_ADDRESS1',\n      message: \"Address1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.saddress1 === null || this.props.Login.masterData.selectedClient.saddress1.length === 0 ? '-' : this.props.Login.masterData.selectedClient.saddress1))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_ADDRESS2',\n      message: \"Address2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.saddress2 === null || this.props.Login.masterData.selectedClient.saddress2.length === 0 ? '-' : this.props.Login.masterData.selectedClient.saddress2))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_ADDRESS3',\n      message: \"Address3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.saddress3 === null || this.props.Login.masterData.selectedClient.saddress3.length === 0 ? '-' : this.props.Login.masterData.selectedClient.saddress3))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_PHONENO',\n      message: \"Phone No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.sphoneno === null || this.props.Login.masterData.selectedClient.sphoneno.length === 0 ? '-' : this.props.Login.masterData.selectedClient.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_MOBILENO',\n      message: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.smobileno === null || this.props.Login.masterData.selectedClient.smobileno.length === 0 ? '-' : this.props.Login.masterData.selectedClient.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_FAXNO',\n      message: \"Fax No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.sfaxno === null || this.props.Login.masterData.selectedClient.sfaxno.length === 0 ? '-' : this.props.Login.masterData.selectedClient.sfaxno))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_EMAIL',\n      message: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.semail === null || this.props.Login.masterData.selectedClient.semail.length === 0 ? '-' : this.props.Login.masterData.selectedClient.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_COUNTRY',\n      message: \"Country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 57\n      }\n    }, \" \", this.props.Login.masterData.selectedClient.scountryname === null || this.props.Login.masterData.selectedClient.scountryname.length === 0 ? '-' : this.props.Login.masterData.selectedClient.scountryname)))), /*#__PURE__*/React.createElement(ClientSiteAddressTab, {\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      userInfo: this.props.Login.userInfo,\n      masterData: this.props.Login.masterData,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      masterStatus: this.props.Login.masterStatus,\n      openChildModal: this.props.Login.openChildModal,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.selectedRecord,\n      getClientSiteContactDetails: this.props.getClientSiteContactDetails,\n      getClientSiteForAddEdit: this.props.getClientSiteForAddEdit,\n      getClientContactForAddEdit: this.props.getClientContactForAddEdit,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      userRoleControlRights: this.state.userRoleControlRights,\n      esignRights: this.props.Login.userRoleControlRights,\n      screenData: this.props.Login.screenData,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      controlMap: this.state.controlMap,\n      Country: this.props.Login.Country,\n      countryCode: this.props.Login.countryCode,\n      SiteCode: this.props.Login.SiteCode,\n      selectedId: this.props.Login.selectedId,\n      dataState: this.props.Login.dataState,\n      settings: this.props.Login.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 45\n      }\n    }))) : \"\")))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.mandatoryFields || [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 22\n        }\n      }) : /*#__PURE__*/React.createElement(AddClient, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        countryList: this.state.countryList || [],\n        clientCategoryList: this.props.Login.clientCategoryList || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 18\n      }\n    }));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.filterClientCategory) {\n      breadCrumbData.push({\n        \"label\": \"IDS_CLIENTCATEGORY\",\n        \"value\": this.props.Login.masterData.SelectedClientCat ? this.props.Login.masterData.SelectedClientCat.sclientcatname : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          dataState\n        });\n      }\n\n      let nfilterClientCategory = this.state.nfilterClientCategory || {};\n      let filterClientCategory = this.state.filterClientCategory || {};\n\n      if (this.props.Login.masterData.filterClientCategory !== previousProps.Login.masterData.filterClientCategory) {\n        const clientCategoryMap = constructOptionList(this.props.Login.masterData.filterClientCategory || [], \"nclientcatcode\", \"sclientcatname\", 'nclientcatcode', 'ascending', false);\n        filterClientCategory = clientCategoryMap.get(\"OptionList\");\n\n        if (clientCategoryMap.get(\"DefaultValue\")) {\n          nfilterClientCategory = clientCategoryMap.get(\"DefaultValue\");\n        } else if (filterClientCategory && filterClientCategory.length > 0) {\n          nfilterClientCategory = filterClientCategory[0];\n        }\n      } else if (this.props.Login.masterData.nfilterClientCategory !== previousProps.Login.masterData.nfilterClientCategory) {\n        nfilterClientCategory = this.props.Login.masterData.nfilterClientCategory;\n      }\n\n      this.setState({\n        nfilterClientCategory,\n        filterClientCategory\n      });\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.countryList !== previousProps.Login.countryList) {\n      const countryList = constructOptionList(this.props.Login.countryList || [], \"ncountrycode\", \"scountryname\", undefined, undefined, undefined);\n      const countryListClient = countryList.get(\"OptionList\");\n      this.setState({\n        countryList: countryListClient\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  getClientComboService,\n  getClientDetail,\n  getClientSiteForAddEdit,\n  getClientSiteContactDetails,\n  getClientContactForAddEdit,\n  filterColumnData,\n  changeClientCategoryFilter\n})(injectIntl(Client));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/Client.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Row","Col","FormGroup","FormLabel","Nav","Card","toast","process","SlideOutModal","Esign","MediaLabel","callService","crudMaster","updateStore","validateEsignCredential","getClientComboService","getClientDetail","getClientSiteForAddEdit","getClientSiteContactDetails","getClientContactForAddEdit","filterColumnData","changeClientCategoryFilter","DEFAULT_RETURN","constructOptionList","getControlMap","showEsign","validateEmail","validatePhoneNumber","FontAwesomeIcon","faPencilAlt","faTrashAlt","AddClient","ContentPanel","ListMaster","ReadOnlyText","ClientSiteAddressTab","ConfirmMessage","transactionStatus","ClientCategoryFilter","BreadcrumbComponent","Affix","mapStateToProps","state","Login","Client","Component","constructor","props","dataStateChange","event","setState","dataResult","data","dataState","openFilter","showFilter","updateInfo","typeName","closeFilter","onFilterSubmit","nfilterClientCategory","value","inputParam","inputData","nclientcatcode","userinfo","userInfo","classUrl","methodUrl","masterData","filterClientCategory","warn","intl","formatMessage","id","closeModal","loadEsign","openModal","selectedRecord","operation","selectedId","onComboChangeFilter","comboData","fieldName","searchRef","current","getNestedFieldData","nestedColumnArray","reduce","xs","x","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","detailBand","Dataitem","OptionalFieldList","datafield","Column","map","fields","detailedFieldList","dataField","idsName","columnSize","onComboChange","onInputOnChange","target","type","name","checked","deleteRecord","clientDeleteParam","displayName","userRoleControlRights","nformcode","ncontrolCode","screenData","screenName","DeleteClient","selectedClient","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","nclientcode","fetchUrl","fecthInputObject","reloadData","ConfirmDelete","deleteId","confirmMessage","confirm","onSaveClick","saveType","formRef","isValidateEmail","fieldList","item","nmastersitecode","label","info","validateEsign","sreason","password","createRef","extractedColumnList","skip","take","settings","parseInt","addScreen","masterStatus","error","clientData","controlMap","Map","countryList","mandatoryFields","getDerivedStateFromProps","render","userStatusCSS","activeIconCSS","ntransactionstatus","DEACTIVE","ACTIVE","addId","has","get","ncontrolcode","editId","clientAddParam","clientEditParam","filterParam","searchFieldList","breadCrumbData","filterData","length","searchedData","sclientname","stransdisplaystatus","indexOf","e","saddress1","saddress2","saddress3","sphoneno","smobileno","sfaxno","semail","scountryname","errorCode","openChildModal","Country","countryCode","SiteCode","clientCategoryList","generateBreadCrumData","push","SelectedClientCat","sclientcatname","componentDidUpdate","previousProps","Object","values","clientCategoryMap","countryListClient"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, FormGroup, FormLabel, Nav, Card } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { MediaLabel } from '../../components/add-client.styles';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential, \r\n    getClientComboService ,getClientDetail,getClientSiteForAddEdit,\r\n    getClientSiteContactDetails,getClientContactForAddEdit,\r\n    filterColumnData,changeClientCategoryFilter} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport AddClient from './AddClient';\r\nimport { ContentPanel } from '../product/product.styled';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport ClientSiteAddressTab from '../../pages/contactmaster/ClientSiteAddressTab';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport ClientCategoryFilter from './ClientCategoryFilter';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Client extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: [], masterStatus: \"\", error: \"\", operation: \"create\",\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            clientData: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {}, \r\n            countryList: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.mandatoryFields = [\r\n            { \"idsName\": \"IDS_CLIENTNAME\", \"dataField\": \"sclientname\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_ADDRESS1\", \"dataField\": \"saddress1\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_COUNTRY\", \"dataField\": \"ncountrycode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ]\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.state.nfilterClientCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nclientcatcode: this.state.nfilterClientCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterClientCategory: this.state.nfilterClientCategory\r\n                },\r\n                classUrl: \"client\",\r\n                methodUrl: \"ClientByCategory\"\r\n            }\r\n            this.props.changeClientCategoryFilter(inputParam, this.props.Login.masterData.filterClientCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CLIENTCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    onComboChangeFilter = (comboData, fieldName) => {\r\n                let nfilterClientCategory = this.state.nfilterClientCategory || {}\r\n                nfilterClientCategory = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.setState({ nfilterClientCategory })\r\n    }\r\n\r\n    getNestedFieldData = (nestedColumnArray, data) =>\r\n        nestedColumnArray.reduce((xs, x) => (xs && xs[x]) ? xs[x] : null, data);\r\n\r\n    render() {\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedClient && this.props.Login.masterData.selectedClient.ntransactionstatus === transactionStatus.DEACTIVE) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedClient && this.props.Login.masterData.selectedClient.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_CLIENTNAME\", \"dataField\": \"sclientname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COUNTRYNAME\", \"dataField\": \"scountryname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\"},\r\n        ]\r\n\r\n        this.fieldList = [\"sclientname\", \"saddress1\", \"saddress2\", \"saddress3\", \"sphoneno\", \"smobileno\", \"sfaxno\", \"semail\", \"ntransactionstatus\", \"ncountrycode\"];\r\n\r\n        const addId = this.state.controlMap.has(\"AddClient\") && this.state.controlMap.get(\"AddClient\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditClient\") && this.state.controlMap.get(\"EditClient\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteClient\") && this.state.controlMap.get(\"DeleteClient\").ncontrolcode;\r\n\r\n        const clientAddParam = {\r\n            screenName: \"Client\", operation: \"create\", primaryKeyField: \"nclientcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId,nfilterClientCategory:this.state.nfilterClientCategory\r\n        };\r\n\r\n        const clientEditParam = {\r\n            screenName: \"Client\", operation: \"update\", primaryKeyField: \"nclientcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editId,masterData:this.props.Login.masterData,nfilterClientCategory:this.state.nfilterClientCategory\r\n        };\r\n\r\n        const clientDeleteParam = { screenName: \"Client\", methodUrl: \"Client\", operation: \"delete\", ncontrolCode: deleteId };\r\n\r\n        const filterParam = {\r\n            inputListName: \"Client\", selectedObject: \"selectedClient\", primaryKeyField: \"nclientcode\",\r\n            fetchUrl: \"client/getSelectedClientDetail\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sclientname\", \"address1\",\"saddress2\",\"saddress3\",\"sphoneno\",\"smobileno\",\"sfaxno\",\"semail\" ,\"stransdisplaystatus\"]\r\n        };\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n            <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n            {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                <Row noGutters={true}>\r\n                    <Col md={4}>\r\n                        <ListMaster\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            screenName={\"Client\"}\r\n                            masterData={this.props.Login.masterData}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Client}\r\n                            getMasterDetail={(Client) => this.props.getClientDetail(Client, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                            selectedMaster={this.props.Login.masterData.selectedClient}\r\n                            primaryKeyField=\"nclientcode\"\r\n                            mainField=\"sclientname\"\r\n                            firstField=\"sclientcatname\"\r\n                            secondField=\"stransdisplaystatus\"\r\n                            isIDSField=\"Yes\"\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            filterParam={filterParam}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            addId={addId}\r\n                            searchRef={this.searchRef}\r\n                            reloadData={this.reloadData}\r\n                            hidePaging={false}\r\n                            openModal={() => this.props.getClientComboService(clientAddParam)}\r\n                            openFilter={this.openFilter}\r\n                            closeFilter={this.closeFilter}\r\n                            onFilterSubmit={this.onFilterSubmit}\r\n                            showFilterIcon={true}\r\n                            showFilter={this.props.Login.showFilter}\r\n                            filterComponent={[\r\n                                {\r\n                                    \"IDS_CLIENTCATEGORYFILTER\":\r\n                                        <ClientCategoryFilter\r\n                                            filterClientCategory={this.state.filterClientCategory || []}\r\n                                            nfilterClientCategory={this.state.nfilterClientCategory || {}}\r\n                                            onComboChange={this.onComboChangeFilter}\r\n                                        />\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                    <Col md='8'>\r\n                        <Row><Col md={12}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                {this.props.Login.masterData.selectedClient && this.props.Login.masterData.Client.length > 0 && this.props.Login.masterData.selectedClient ?\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedClient.sclientname}</Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            <i className={activeIconCSS}></i>\r\n                                                            {this.props.Login.masterData.selectedClient.stransdisplaystatus}\r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline \">\r\n\r\n                                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />  */}\r\n                                                         {/* <ProductList className=\"d-inline dropdown badget_menu\"> */}\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                           // data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={(e) => this.props.getClientComboService(clientEditParam)} >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            \r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <Row>\r\n                                                \r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_ADDRESS1'} message=\"Address1\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.saddress1 === null || this.props.Login.masterData.selectedClient.saddress1.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.saddress1}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_ADDRESS2'} message=\"Address2\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.saddress2 === null || this.props.Login.masterData.selectedClient.saddress2.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.saddress2}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_ADDRESS3'} message=\"Address3\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.saddress3 === null || this.props.Login.masterData.selectedClient.saddress3.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.saddress3}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_PHONENO'} message=\"Phone No\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.sphoneno === null || this.props.Login.masterData.selectedClient.sphoneno.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.sphoneno}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_MOBILENO'} message=\"Mobile No\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.smobileno === null || this.props.Login.masterData.selectedClient.smobileno.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.smobileno}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_FAXNO'} message=\"Fax No\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.sfaxno === null || this.props.Login.masterData.selectedClient.sfaxno.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.sfaxno}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_EMAIL'} message=\"Email\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.semail === null || this.props.Login.masterData.selectedClient.semail.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.semail}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md='4'>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={'IDS_COUNTRY'} message=\"Country\" /></FormLabel>\r\n                                                        <ReadOnlyText> {this.props.Login.masterData.selectedClient.scountryname === null || this.props.Login.masterData.selectedClient.scountryname.length === 0 ? '-' :\r\n                                                           this.props.Login.masterData.selectedClient.scountryname}</ReadOnlyText>\r\n                                                       \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row>\r\n                                            <ClientSiteAddressTab\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getClientSiteContactDetails={this.props.getClientSiteContactDetails}\r\n                                                    getClientSiteForAddEdit={this.props.getClientSiteForAddEdit}\r\n                                                    getClientContactForAddEdit={this.props.getClientContactForAddEdit}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    Country={this.props.Login.Country}\r\n                                                    countryCode={this.props.Login.countryCode}\r\n                                                    SiteCode={this.props.Login.SiteCode}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    settings = {this.props.Login.settings}\r\n                                        \r\n\r\n                                                />\r\n                                       \r\n                                        </Card.Body>\r\n                                    </Card> : \"\"}\r\n                            </ContentPanel>\r\n                        </Col></Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            {this.props.Login.openModal &&\r\n                 <SlideOutModal show={this.props.Login.openModal}\r\n                 closeModal={this.closeModal}\r\n                 operation={this.props.Login.operation}\r\n                 inputParam={this.props.Login.inputParam}\r\n                 screenName={this.props.Login.screenName}\r\n                 onSaveClick={this.onSaveClick}\r\n                 esign={this.props.Login.loadEsign}\r\n                 validateEsign={this.validateEsign}\r\n                 masterStatus={this.props.Login.masterStatus}\r\n                 updateStore={this.props.updateStore}\r\n                 selectedRecord={this.state.selectedRecord || {}}\r\n                 mandatoryFields={this.mandatoryFields || []}\r\n                 addComponent={this.props.Login.loadEsign ?\r\n                     <Esign operation={this.props.Login.operation}\r\n                         formatMessage={this.props.intl.formatMessage}\r\n                         onInputOnChange={this.onInputOnChange}\r\n                         inputParam={this.props.Login.inputParam}\r\n                         selectedRecord={this.state.selectedRecord || {}}\r\n                     />\r\n                     : <AddClient\r\n                         selectedRecord={this.state.selectedRecord || {}}\r\n                         onInputOnChange={this.onInputOnChange}\r\n                         onComboChange={this.onComboChange}\r\n                         formatMessage={this.props.intl.formatMessage}\r\n                         countryList={this.state.countryList || []}\r\n                         clientCategoryList={this.props.Login.clientCategoryList || []}\r\n                         operation={this.props.Login.operation}\r\n                         inputParam={this.props.Login.inputParam}\r\n\r\n                     />}\r\n             />\r\n            }\r\n        </>\r\n    );\r\n        \r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.props });\r\n    }\r\n    detailBand = (props) => {\r\n\r\n        const Dataitem = props.dataItem\r\n        const OptionalFieldList = [\r\n            { datafield: \"saddress1\", Column: \"Address1\" },\r\n            { datafield: \"saddress2\", Column: \"Address2\" },\r\n            { datafield: \"saddress3\", Column: \"Address3\" },\r\n            { datafield: \"sphoneno\", Column: \"Phone No\" },\r\n            { datafield: \"smobileno\", Column: \"Mobile No\" },\r\n            { datafield: \"sfaxno\", Column: \"Fax No\" },\r\n            { datafield: \"stransdisplaystatus\", Column: \"DisplayStatus\" },\r\n\r\n        ];\r\n        return (<Row>\r\n            {OptionalFieldList.map((fields) => {\r\n                return (\r\n                    <Col md='6'>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id={fields.Column} message={fields.Column} /></FormLabel>\r\n                            <MediaLabel className=\"readonly-text font-weight-normal\">{Dataitem[fields.datafield]}</MediaLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            })\r\n            }\r\n        </Row>)\r\n    }\r\n    detailedFieldList = [\r\n        { dataField: \"saddress1\", idsName: \"IDS_ADDRESS1\" , columnSize:\"4\"},\r\n        { dataField: \"saddress2\", idsName: \"IDS_ADDRESS2\" , columnSize:\"4\"},\r\n        { dataField: \"saddress3\", idsName: \"IDS_ADDRESS3\", columnSize:\"4\" },\r\n        { dataField: \"sphoneno\", idsName: \"IDS_PHONENO\" , columnSize:\"4\"},\r\n        { dataField: \"smobileno\", idsName: \"IDS_MOBILENO\" , columnSize:\"4\"},\r\n        { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\" , columnSize:\"4\"},\r\n    ];\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.filterClientCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_CLIENTCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.SelectedClientCat ? this.props.Login.masterData.SelectedClientCat.sclientcatname : \"NA\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                });\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataState\r\n                });\r\n            }\r\n\r\n            let nfilterClientCategory = this.state.nfilterClientCategory || {};\r\n            let filterClientCategory = this.state.filterClientCategory || {};\r\n    \r\n            if (this.props.Login.masterData.filterClientCategory !== previousProps.Login.masterData.filterClientCategory) {\r\n                const clientCategoryMap = constructOptionList(this.props.Login.masterData.filterClientCategory || [], \"nclientcatcode\",\r\n                    \"sclientcatname\", 'nclientcatcode', 'ascending', false);\r\n                    filterClientCategory = clientCategoryMap.get(\"OptionList\");\r\n                if (clientCategoryMap.get(\"DefaultValue\")) {\r\n                    nfilterClientCategory = clientCategoryMap.get(\"DefaultValue\");\r\n                } else if (filterClientCategory && filterClientCategory.length > 0) {\r\n                    nfilterClientCategory = filterClientCategory[0];\r\n                }\r\n            } else if (this.props.Login.masterData.nfilterClientCategory !== previousProps.Login.masterData.nfilterClientCategory) {\r\n                nfilterClientCategory = this.props.Login.masterData.nfilterClientCategory;\r\n            }\r\n                this.setState({ nfilterClientCategory, filterClientCategory });\r\n            \r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.countryList !== previousProps.Login.countryList) {\r\n\r\n            const countryList = constructOptionList(this.props.Login.countryList || [], \"ncountrycode\",\r\n                \"scountryname\", undefined, undefined, undefined);\r\n            const countryListClient = countryList.get(\"OptionList\");\r\n\r\n            this.setState({ countryList: countryListClient });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 1 : 2;\r\n            }\r\n        } else if (event.target.type === 'select-one') {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        } else {\r\n            if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    deleteRecord = (clientDeleteParam) => {\r\n       \r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: clientDeleteParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [\"client\"]: clientDeleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: clientDeleteParam.operation,\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, clientDeleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: clientDeleteParam.screenName, operation: clientDeleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    DeleteClient= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"client\"] = this.props.Login.masterData.selectedClient;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"Client\", selectedObject: \"selectedClient\",\r\n            primaryKeyField: \"nclientcode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedClient.nclientcode,\r\n            fetchUrl: \"client/getClient\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Client\", \r\n            //postParam,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Client\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            //methodUrl: this.props.Login.inputParam.methodUrl,\r\n            methodUrl:\"Client\",\r\n            displayName:this.props.intl.formatMessage({ id: \"IDS_CLIENT\" }),\r\n           // displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteClient(\"delete\",deleteId));\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        const isValidateEmail = this.state.selectedRecord[\"semail\"]? validateEmail(this.state.selectedRecord[\"semail\"]): true;\r\n        let postParam = undefined;\r\n\r\n        if (isValidateEmail) {\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let dataState = undefined;\r\n            if (this.props.Login.operation === \"update\") {\r\n                const selectedRecord=this.state.selectedRecord;\r\n                // edit\r\n                postParam = {\r\n                    inputListName: \"Client\",\r\n                    selectedObject: \"selectedClient\",\r\n                    primaryKeyField: \"nclientcode\",\r\n                  };\r\n                inputData[\"client\"] = {};\r\n\r\n                this.fieldList.map(item => {\r\n                    return inputData[\"client\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n               })\r\n               inputData[\"client\"][\"nclientcode\"] =selectedRecord[\"nclientcode\"] ? selectedRecord[\"nclientcode\"] : -1;\r\n               inputData[\"client\"][\"ncountrycode\"] = selectedRecord[\"ncountrycode\"] ? selectedRecord[\"ncountrycode\"].value : -1;\r\n               inputData[\"client\"][\"nclientcatcode\"] = selectedRecord[\"nclientcatcode\"] ? selectedRecord[\"nclientcatcode\"].value : -1;\r\n                dataState = this.state.dataState;\r\n            }\r\n            else {\r\n                //add               \r\n                inputData[\"client\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n                this.fieldList.map(item => {\r\n                    return inputData[\"client\"][item] = this.state.selectedRecord[item]\r\n                })\r\n                inputData[\"client\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n                inputData[\"client\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : -1;\r\n            }\r\n     \r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Client\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"nclientcode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                searchRef: this.searchRef,\r\n                postParam:postParam\r\n            }\r\n            this.setState({ nfilterClientCategory: { \"label\":  this.state.selectedRecord.nclientcatcode.label, \"value\":  this.state.selectedRecord.nclientcatcode.value } });\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n        }\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getClientComboService,getClientDetail,getClientSiteForAddEdit,\r\n    getClientSiteContactDetails,getClientContactForAddEdit,\r\n    filterColumnData,changeClientCategoryFilter\r\n})(injectIntl(Client));"]},"metadata":{},"sourceType":"module"}