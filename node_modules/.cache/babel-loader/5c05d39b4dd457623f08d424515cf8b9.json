{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{FormattedMessage,injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{TagLine}from\"../../components/login/login.styles\";import{transactionStatus}from'../../components/Enumeration';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{updateStore}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Esign=/*#__PURE__*/function(_React$Component){_inherits(Esign,_React$Component);var _super=_createSuper(Esign);function Esign(props){var _this;_classCallCheck(this,Esign);_this=_super.call(this,props);_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.props.selectedRecord||{};selectedRecord[fieldName]=comboData;// this.setState({ selectedRecord });  \nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.toggleChange=function(event){var agree=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;_this.setState({agree:agree});_this.props.onInputOnChange(event);};_this.state={agree:transactionStatus.YES};return _this;}_createClass(Esign,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sloginid\",type:\"text\",label:this.props.intl.formatMessage({id:\"IDS_LOGINID\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_LOGINID\"}),defaultValue:this.props.inputParam&&this.props.inputParam.inputData&&(this.props.inputParam.inputData.userinfo[\"sdeputyid\"]||\"\"),isMandatory:false,required:false,maxLength:20,readOnly:true,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"esignpassword\",type:\"password\",label:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"esignreason\",formLabel:this.props.intl.formatMessage({id:\"IDS_REASON\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.Login.esignReasonList||[]// value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\n,isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,\"esignreason\");}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"esigncomments\",label:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),rows:\"2\",isMandatory:true,required:true,maxLength:255,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(DateTimePicker,{name:\"esigndate\",label:this.props.intl.formatMessage({id:\"IDS_ESIGNDATE\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.props.Login.serverTime,dateFormat:this.props.Login.userInfo.ssitedatetime,isClearable:false,readOnly:true}),/*#__PURE__*/React.createElement(TagLine,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ELECTRONICSIGN\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ESIGNTEXT\"})),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"agree\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_AGREE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_AGREE\"})// defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\n,isMandatory:true,required:true,checked:this.state.agree,onChange:function onChange(event){return _this2.toggleChange(event);}})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){state.agree=props.selectedRecord.agree===transactionStatus.NO?false:true;}}]);return Esign;}(React.Component);//export default injectIntl(Esign);\nexport default connect(mapStateToProps,{updateStore:updateStore})(injectIntl(Esign));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/audittrail/Esign.js"],"names":["React","connect","Row","Col","FormInput","FormTextarea","CustomSwitch","FormattedMessage","injectIntl","DateTimePicker","TagLine","transactionStatus","FormSelectSearch","updateStore","DEFAULT_RETURN","mapStateToProps","state","Login","Esign","props","onComboChange","comboData","fieldName","selectedRecord","updateInfo","typeName","data","toggleChange","event","agree","target","checked","YES","NO","setState","onInputOnChange","intl","formatMessage","id","inputParam","inputData","userinfo","esignReasonList","serverTime","userInfo","ssitedatetime","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { TagLine} from \"../../components/login/login.styles\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { updateStore } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Esign extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            agree : transactionStatus.YES\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        state.agree = props.selectedRecord.agree === transactionStatus.NO ? false : true\r\n    }\r\n       render (){\r\n      \r\n           return(\r\n           <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                  \r\n                        placeholder={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}\r\n                        defaultValue ={this.props.inputParam && this.props.inputParam.inputData \r\n                                        && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\")}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly = {true}\r\n                        onChange={(event)=> this.props.onInputOnChange(event)}\r\n                    />     \r\n\r\n                    <FormInput\r\n                            name={\"esignpassword\"}\r\n                            type=\"password\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}                            \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}                            \r\n                    />\r\n\r\n                    <FormSelectSearch\r\n                            name={\"esignreason\"}\r\n                            formLabel={ this.props.intl.formatMessage({ id:\"IDS_REASON\"})}                              \r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                           \r\n                            options={this.props.Login.esignReasonList || []}\r\n                           // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isClearable={false}\r\n                            isSearchable={true}                                \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {(event)=> this.onComboChange(event, \"esignreason\")}                               \r\n                        />  \r\n                       \r\n                    <FormTextarea\r\n                            name={\"esigncomments\"}\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}                    \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}\r\n                            rows=\"2\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={255}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}\r\n                    />\r\n                                     \r\n                    <DateTimePicker\r\n                                    name={\"esigndate\"} \r\n                                    label={ this.props.intl.formatMessage({ id:\"IDS_ESIGNDATE\"})}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={this.props.Login.serverTime}\r\n                                    dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                                    isClearable={false}\r\n                                    readOnly={true}                                                                                                  \r\n                            />\r\n                   \r\n                    <TagLine>\r\n                            <FormattedMessage id=\"IDS_ELECTRONICSIGN\"></FormattedMessage><br/>                    \r\n                            <FormattedMessage id=\"IDS_ESIGNTEXT\"></FormattedMessage>\r\n                    </TagLine>\r\n                   \r\n                    <CustomSwitch\r\n                            name={\"agree\"}\r\n                            type=\"switch\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}\r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}                            \r\n                            // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            checked={ this.state.agree}\r\n                            onChange={(event)=> this.toggleChange(event)}\r\n                         />\r\n                   </Col>                          \r\n               </Row>   \r\n            )\r\n        }\r\n\r\n        onComboChange = (comboData, fieldName) => {\r\n            const selectedRecord = this.props.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n           // this.setState({ selectedRecord });  \r\n           const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n        toggleChange =(event)=>{\r\n            let agree = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            this.setState({agree})\r\n            this.props.onInputOnChange(event);\r\n        }\r\n   }\r\n   //export default injectIntl(Esign);\r\n   export default connect(mapStateToProps, {updateStore})(injectIntl(Esign));"]},"metadata":{},"sourceType":"module"}