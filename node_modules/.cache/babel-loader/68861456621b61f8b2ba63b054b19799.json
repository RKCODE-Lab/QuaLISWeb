{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,getComboLabelValue,constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus,reportTypeEnum}from'../components/Enumeration';export function getReportMasterComboService(inputParam){return function(dispatch){// if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus !== transactionStatus.APPROVED))\n// {      \ndispatch(initRequest(true));var nreportcode=null;if(inputParam.operation===\"update\"){nreportcode=inputParam.mastertoedit[inputParam.primaryKeyName];}return rsapi.post(\"reportconfig/getReportMasterComboData\",{nreportcode:nreportcode,userinfo:inputParam.userInfo,filterreporttype:inputParam.filterReportType}).then(function(response){var reportTypeMap=constructOptionList(response.data[\"ReportType\"]||[],\"nreporttypecode\",\"sdisplayname\",undefined,undefined,true);var reportModuleMap=constructOptionList(response.data[\"ReportModule\"]||[],\"nreportmodulecode\",\"sdisplayname\",undefined,undefined,true);var reportSubTypeMap=constructOptionList(response.data[\"COAReportType\"]||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var regTypeMap=constructOptionList(response.data[\"RegistrationType\"]||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var regSubTypeMap=constructOptionList(response.data[\"RegistrationSubType\"]||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,true);var sectionMap=constructOptionList(response.data[\"SectionList\"]||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);var decisionTypeMap=constructOptionList(response.data[\"ReportDecisionType\"]||[],\"nreportdecisiontypecode\",\"sdecisiontypename\",undefined,undefined,true);var certificateTypeMap=constructOptionList(response.data[\"CertificateType\"]||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var controlScreenTypeMap=constructOptionList(response.data[\"ControlScreen\"]||[],\"nformcode\",\"sdisplaynames\",undefined,undefined,true);var reportTypeList=reportTypeMap.get(\"OptionList\");var reportModuleList=reportModuleMap.get(\"OptionList\");var reportSubTypeList=reportSubTypeMap.get(\"OptionList\");var regTypeList=regTypeMap.get(\"OptionList\");var regSubTypeList=regSubTypeMap.get(\"OptionList\");var sectionList=sectionMap.get(\"OptionList\");var decisionTypeList=decisionTypeMap.get(\"OptionList\");var certificateTypeList=certificateTypeMap.get(\"OptionList\");var controlScreenTypeList=controlScreenTypeMap.get(\"OptionList\");var selectedRecord={ntransactionstatus:transactionStatus.ACTIVE};var respObject={\"reportVersionStatus\":transactionStatus.DRAFT};if(inputParam.operation===\"update\"){if(response.status===202){respObject[\"reportVersionStatus\"]=transactionStatus.APPROVED;respObject[\"ApprovedReportMaster\"]=response.data[\"SelectedReportDesigner\"];}selectedRecord=JSON.parse(JSON.stringify(response.data[\"SelectedReportDesigner\"]));if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE||selectedRecord.nreporttypecode===reportTypeEnum.COA){selectedRecord[\"nregtypecode\"]={value:response.data[\"SelectedReportDesigner\"].nregtypecode,label:response.data[\"SelectedReportDesigner\"].sregtypename};if(response.data[\"SelectedReportDesigner\"].nregsubtypecode!==-1){selectedRecord[\"nregsubtypecode\"]={value:response.data[\"SelectedReportDesigner\"].nregsubtypecode,label:response.data[\"SelectedReportDesigner\"].sregsubtypename};}else{selectedRecord[\"nregsubtypecode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].nsectioncode!==-1){selectedRecord[\"nsectioncode\"]={value:response.data[\"SelectedReportDesigner\"].nsectioncode,label:response.data[\"SelectedReportDesigner\"].ssectionname};}else{selectedRecord[\"nsectioncode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].ncoareporttypecode!==-1){selectedRecord[\"ncoareporttypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncoareporttypecode,label:response.data[\"SelectedReportDesigner\"].scoareporttypename};}else{selectedRecord[\"ncoareporttypecode\"]=undefined;}if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE){selectedRecord[\"nreportdecisiontypecode\"]={value:response.data[\"SelectedReportDesigner\"].nreportdecisiontypecode,label:response.data[\"SelectedReportDesigner\"].sdecisiontypename};}}else if(selectedRecord.nreporttypecode===reportTypeEnum.MIS){selectedRecord[\"nreportmodulecode\"]={value:response.data[\"SelectedReportDesigner\"].nreportmodulecode,label:response.data[\"SelectedReportDesigner\"].smoduledisplayname};selectedRecord[\"nreportmodule\"]={value:response.data[\"SelectedReportDesigner\"].smoduledisplayname,label:response.data[\"SelectedReportDesigner\"].smoduledisplayname};}else if(selectedRecord.nreporttypecode===reportTypeEnum.SCREENWISE){selectedRecord[\"ncontrolcode\"]={value:response.data[\"SelectedReportDesigner\"].ncontrolcode,label:response.data[\"SelectedReportDesigner\"].scontrolids};selectedRecord[\"nformcode\"]={value:response.data[\"SelectedReportDesigner\"].nformcode,label:response.data[\"SelectedReportDesigner\"].sdisplayname};}if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE||selectedRecord.nreporttypecode===reportTypeEnum.BATCH){if(response.data[\"SelectedReportDesigner\"].ncoareporttypecode!==-1){selectedRecord[\"ncoareporttypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncoareporttypecode,label:response.data[\"SelectedReportDesigner\"].scoareporttypename};}else{selectedRecord[\"ncoareporttypecode\"]=undefined;}selectedRecord[\"ncertificatetypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncertificatetypecode,label:response.data[\"SelectedReportDesigner\"].scertificatetype};selectedRecord[\"sbatchtypename\"]=response.data[\"SelectedReportDesigner\"].sbatchtypename;}selectedRecord[\"ntransactionstatus\"]=response.data[\"SelectedReportDesigner\"].ntransactionstatus;selectedRecord[\"nreporttypecode\"]={item:response.data[\"SelectedReportDesigner\"],value:response.data[\"SelectedReportDesigner\"].nreporttypecode,label:response.data[\"SelectedReportDesigner\"].sreportdisplayname};}respObject=_objectSpread(_objectSpread({},respObject),{},{reportSubTypeList:reportSubTypeList,//:response.data[\"COAReportType\"]  || [], \nregTypeList:regTypeList,//:response.data[\"RegistrationType\"]  || [],                                                               \nregSubTypeList:regSubTypeList,//:response.data[\"RegistrationSubType\"]  || [],  \nsectionList:sectionList,//:response.data[\"SectionList\"] || [],   \ncertificateTypeList:certificateTypeList,reportDecisionTypeList:decisionTypeList,controlScreen:controlScreenTypeList//masterData:{...inputParam.masterData, SelectedFilterReportType:response.data[\"SelectedReportType\"] }                                                             \n});if(inputParam.operation===\"create\"){selectedRecord[\"nreporttypecode\"]={item:response.data[\"SelectedReportType\"],label:response.data[\"SelectedReportType\"].sdisplayname,value:response.data[\"SelectedReportType\"].nreporttypecode};if(selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SAMPLE&&selectedRecord[\"nreporttypecode\"]['item'].isneedregtype===transactionStatus.YES){selectedRecord[\"nregtypecode\"]=getComboLabelValue(response.data[\"SelectedRegType\"],response.data[\"RegistrationType\"],\"nregtypecode\",\"sregtypename\");if(selectedRecord[\"nreporttypecode\"]['item'].isneedsection===transactionStatus.YES){selectedRecord[\"nsectioncode\"]=sectionMap.get(\"DefaultValue\");}}}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({reportTypeList:reportTypeList,//:response.data[\"ReportType\"] || [], \nreportModuleList:reportModuleList},respObject),{},{operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});// }\n// else{       \n//     toast.warn(intl.formatMessage({id: \"IDS_CANNOTUPDATEAPPROVEDREPORT\"}));\n// }\n};}export function getReportDetailComboService(inputParam){return function(dispatch){if(inputParam.operation===\"create\"||inputParam.operation===\"update\"&&inputParam.detailtoedit.ntransactionstatus===transactionStatus.DRAFT){if(inputParam.masterData.SelectedReportMaster!==null){dispatch(initRequest(true));var nreportdetailcode=null;if(inputParam.operation===\"update\"){nreportdetailcode=inputParam.detailtoedit[inputParam.primaryKeyName];}return rsapi.post(\"reportconfig/getReportDetailComboData\",{nreportdetailcode:nreportdetailcode,reportmaster:inputParam.masterData.SelectedReportMaster,userinfo:inputParam.userInfo}).then(function(response){// const reportType = response.data[\"SelectedReportType\"];\n// const reportSubTypeMap  = constructOptionList(response.data[\"COAReportType\"] ||[], \"ncoareporttypecode\",\n//                             \"scoareporttypename\" , undefined, undefined, true);    \n// const sectionMap  = constructOptionList(response.data[\"SectionList\"] ||[], \"nsectioncode\",\n//                             \"ssectionname\", undefined, undefined, true);\n// const decisionTypeMap  = constructOptionList(response.data[\"ReportDecisionType\"] ||[], \"nreportdecisiontypecode\",\n//                             \"sdecisiontypename\" , undefined, undefined, true);   \n// const certificateTypeMap  = constructOptionList(response.data[\"CertificateType\"] ||[], \"ncertificatetypecode\",\n//                             \"scertificatetype\" , undefined, undefined, true);\n// const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\n// const  sectionList = sectionMap.get(\"OptionList\"); \n// const  decisionTypeList = decisionTypeMap.get(\"OptionList\");\n// const  certificateTypeList = certificateTypeMap.get(\"OptionList\");  \nvar selectedRecord={};var respObject={};if(inputParam.operation===\"update\"){selectedRecord=response.data[\"SelectedReportDetail\"];}selectedRecord[\"ntransactionstatus\"]=transactionStatus.DRAFT;//    console.log(\"selected in action:\", selectedRecord);\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},respObject),{},{operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_REPORTNOTFOUND\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITAPPROVEDREPORT\"}));}};}export function getSelectedReportMasterDetail(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportDesigner\",{nreportcode:parseInt(inputParam.nreportcode),userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSelectedReportDetail(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportDetail\",{nreportdetailcode:parseInt(inputParam.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getConfigReportComboService(inputParam){return function(dispatch){if(inputParam.reportMaster.nreporttypecode===reportTypeEnum.MIS){if(inputParam.reportDetail.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportAddDesignComboData\",{nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){var parameterMap=constructOptionList(response.data[\"ReportParameter\"]||[],\"nreportparametercode\",\"sreportparametername\",undefined,undefined,true);var reportParameterList=parameterMap.get(\"OptionList\");var designComponentMap=constructOptionList(response.data[\"DesignComponents\"]||[],\"ndesigncomponentcode\",\"sdesigncomponentname\",undefined,undefined,true);var designComponentList=designComponentMap.get(\"OptionList\");var sqlQueryMap=constructOptionList(response.data[\"SQLQuery\"]||[],\"nsqlquerycode\",\"ssqlqueryname\",undefined,undefined,true);var sqlQueryList=sqlQueryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{reportParameterList:reportParameterList,//:response.data[\"ReportParameter\"] || [], \ndesignComponentList:designComponentList,//:response.data[\"DesignComponents\"] || [],\nsqlQueryList:sqlQueryList,//:response.data[\"SQLQuery\"] || [], \noperation:inputParam.operation,screenName:inputParam.screenName,//selectedRecord:{nmandatory:transactionStatus.YES}, \nselectedRecord:{},openModal:true,ncontrolCode:inputParam.ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTCONFIGUREAPPROVEDREPORT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_CANCONFIGUREMISREPORT\"}));}};}export function getParameterMappingComboService(inputParam){return function(dispatch){if(inputParam.reportMaster.nreporttypecode===reportTypeEnum.MIS){if(inputParam.reportDetail.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportParameterMappingComboData\",{nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){if(response.data[\"ChildComponentList\"].length>0){var parentComponentMap=constructOptionList(response.data[\"ParentComponentList\"]||[],\"nreportdesigncode\",\"sdisplayname\",undefined,undefined,true);var parentComponentList=parentComponentMap.get(\"OptionList\");var childComponentMap=constructOptionList(response.data[\"ChildComponentList\"]||[],\"nreportdesigncode\",\"sdisplayname\",undefined,undefined,true);var childComponentList=childComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{parentComponentList:parentComponentList,//:response.data[\"ParentComponenList\"] || [],\nchildComponentList:childComponentList,//:response.data[\"ChildComponentList\"] || [], \noperation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:{},openModal:true,ncontrolCode:inputParam.ncontrolCode,loading:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.warn(intl.formatMessage({id:\"IDS_NOPARAMETERSTOMAP\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTMAPAPPROVEDREPORT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_CANMAPMISREPORT\"}));}};}export function viewReportDetail(reportmaster,userInfo,masterData){return function(dispatch){if(reportmaster!==undefined){dispatch(initRequest(true));return rsapi.post(\"reportview/viewReport\",{reportmaster:reportmaster,userinfo:userInfo}).then(function(response){// console.log(\"report action:\", response);\nmasterData=_objectSpread(_objectSpread({},masterData),response.data);if(response.data[\"ViewReportDesignConfig\"]!==undefined){masterData[\"ReportPDFFile\"]=undefined;}else{document.getElementById(\"download_data\").setAttribute(\"href\",masterData[\"ReportPDFFile\"]);document.getElementById(\"download_data\").click();}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_REPORTNOTFOUND\"}));}};}// export function getActionMappingComboService(inputParam) {\n//     return function (dispatch) {   \n//     if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\n//             dispatch(initRequest(true));\n//             return rsapi.post(\"reportconfig/getActionMappingComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\n//                                         userinfo:inputParam.userInfo})\n//         .then(response=>{ \n//             if (response.data[\"ActionMappingChild\"].length > 0)\n//             {     \n//                     dispatch({type: DEFAULT_RETURN, payload:{actionMappingParentList:response.data[\"ActionMappingParent\"] || [],\n//                                                             actionMappingChildList:response.data[\"ActionMappingChild\"] || [], \n//                                                             operation:inputParam.operation, \n//                                                             screenName:inputParam.screenName,   \n//                                                             selectedRecord:{}, \n//                                                             openModal : true,\n//                                                             ncontrolCode:inputParam.ncontrolCode,\n//                                                             loading:false\n//                                                             }}); \n//             }\n//             else{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//                 toast.warn(intl.formatMessage({id:\"IDS_NOACTIONSTOMAP\"}))\n//             }\n//         })\n//         .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//             if (error.response.status === 500){\n//                 toast.error(error.message);\n//             } \n//             else{               \n//                 toast.warn(error.response.data);\n//             }  \n//         })\n//     }\n//     else{\n//         toast.warn(intl.formatMessage({id:\"IDS_CANNOTACTIONMAPAPPROVEDREPORT\"}))\n//     }\n// }}\nexport function getReportViewChildDataList(inputParam){return function(dispatch){// dispatch(initRequest(true));\nreturn rsapi.post(\"reportview/getChildDataList\",_objectSpread({},inputParam[\"inputData\"])).then(function(response){var controlList=inputParam.viewReportDesignConfigList;var selectedRecord=inputParam.selectedRecord;Object.keys(response.data).map(function(displayName){var index=controlList.findIndex(function(item){return displayName===item.sdisplayname;});var comboMap=constructOptionList(response.data[displayName]||[],controlList[index].svaluemember,controlList[index].sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");selectedRecord[controlList[index].svaluemember]=undefined;return controlList[index][\"dataList\"]=comboList;//response.data[displayName]\n});dispatch({type:DEFAULT_RETURN,payload:{viewReportDesignConfigList:controlList,loading:false,inputFieldData:inputParam.inputData.inputfielddata,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function viewReportDetailWithParameters(viewReportParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportview/viewReportWithParameters\",_objectSpread({},viewReportParam)).then(function(response){var masterData=_objectSpread(_objectSpread({},viewReportParam.masterData),{},{ReportPDFFile:response.data[\"ReportPDFFile\"],SelectedReportDetails:response.data[\"SelectedReportDetails\"],ReportPDFPath:response.data[\"ReportPDFPath\"],ViewReportDesignConfig:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false//openModal:false\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportsByModule(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportview/getReportView\",{nreportmodulecode:inputParam.nreportmodulecode,userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);// const  reportModuleMap  = constructOptionList(masterData.ViewReportModuleList ||[], \"nreportmodulecode\",\n//                          \"smoduledisplayname\" , undefined, undefined, true);\n// const  reportModuleList  = reportModuleMap.get(\"OptionList\");\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,//viewReportModuleList:reportModuleList,\noperation:null,modalName:undefined,loading:false,selectedRecord:inputParam.selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getControlButton(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getControlButton\",{nformcode:inputParam.ControlScreen.nformcode,userinfo:inputParam.userInfo}).then(function(response){var controlButtonMap=constructOptionList(response.data||[],\"ncontrolcode\",\"scontrolids\",undefined,undefined,true);var controlButtonList=controlButtonMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{controlButton:controlButtonList,//: response.data,                                            \nloading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregsubtypecode:undefined//nregsubtypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportRegSubType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportRegistrationSubType\",{nregtypecode:inputParam.registrationType.nregtypecode,userinfo:inputParam.userInfo}).then(function(response){var regSubTypeMap=constructOptionList(response.data||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,true);var regSubTypeList=regSubTypeMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{regSubTypeList:regSubTypeList,//: response.data,                                            \nloading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregsubtypecode:undefined//nregsubtypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportSubType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportSubType\",{nreporttypecode:inputParam.reportType.nreporttypecode,userinfo:inputParam.userInfo}).then(function(response){var reportSubTypeMap=constructOptionList(response.data.CoaReportType||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var reportSubTypeList=reportSubTypeMap.get(\"OptionList\");var certificateTypeMap=constructOptionList(response.data.CertificateType||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var certificateTypeList=certificateTypeMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{reportSubTypeList:reportSubTypeList,certificateTypeList:certificateTypeList,loading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{ncoareporttypecode:undefined,ncertificatetypecode:\"\"// ncoareporttypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getregtype(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getRegistrationtypeForSample\",{nregtypecode:inputParam.nregtypecode,nreporttypecode:inputParam.reportType.nreporttypecode,userinfo:inputParam.userInfo}).then(function(response){// const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\n//                          \"sregtypename\" , undefined, undefined, true);   \n// const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\n// // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\n// // \"sregsubtypename\" , undefined, undefined, true);   \n// //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\nvar regTypeMap=constructOptionList(response.data[\"RegistrationType\"]||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var regTypeList=regTypeMap.get(\"OptionList\");var regSubTypeMap=constructOptionList(response.data[\"RegistrationSubType\"]||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,true);var regSubTypeList=regSubTypeMap.get(\"OptionList\");var coaReportTypeMap=constructOptionList(response.data.COAReportType||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var reportSubTypeList=coaReportTypeMap.get(\"OptionList\");var certificateType=constructOptionList(response.data.CertificateType||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var certificateTypeList=certificateType.get(\"OptionList\");var nregtypecode=getComboLabelValue(response.data[\"SelectedRegType\"],response.data[\"RegistrationType\"],\"nregtypecode\",\"sregtypename\");dispatch({type:DEFAULT_RETURN,payload:{regTypeList:regTypeList,regSubTypeList:regSubTypeList,reportSubTypeList:reportSubTypeList,loading:false,certificateTypeList:certificateTypeList,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregtypecode:nregtypecode,nregsubtypecode:undefined,ncoareporttypecode:undefined,ncertificatetypecode:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ReportDesignerAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","getComboLabelValue","constructOptionList","toast","initRequest","intl","transactionStatus","reportTypeEnum","getReportMasterComboService","inputParam","dispatch","nreportcode","operation","mastertoedit","primaryKeyName","post","userinfo","userInfo","filterreporttype","filterReportType","then","response","reportTypeMap","data","undefined","reportModuleMap","reportSubTypeMap","regTypeMap","regSubTypeMap","sectionMap","decisionTypeMap","certificateTypeMap","controlScreenTypeMap","reportTypeList","get","reportModuleList","reportSubTypeList","regTypeList","regSubTypeList","sectionList","decisionTypeList","certificateTypeList","controlScreenTypeList","selectedRecord","ntransactionstatus","ACTIVE","respObject","DRAFT","status","APPROVED","JSON","parse","stringify","nreporttypecode","SAMPLE","COA","value","nregtypecode","label","sregtypename","nregsubtypecode","sregsubtypename","nsectioncode","ssectionname","ncoareporttypecode","scoareporttypename","nreportdecisiontypecode","sdecisiontypename","MIS","nreportmodulecode","smoduledisplayname","SCREENWISE","ncontrolcode","scontrolids","nformcode","sdisplayname","BATCH","ncertificatetypecode","scertificatetype","sbatchtypename","item","sreportdisplayname","reportDecisionTypeList","controlScreen","isneedregtype","YES","isneedsection","type","payload","screenName","openModal","ncontrolCode","loading","catch","error","message","warn","getReportDetailComboService","detailtoedit","masterData","SelectedReportMaster","nreportdetailcode","reportmaster","formatMessage","id","getSelectedReportMasterDetail","parseInt","modalName","getSelectedReportDetail","getConfigReportComboService","reportMaster","reportDetail","parameterMap","reportParameterList","designComponentMap","designComponentList","sqlQueryMap","sqlQueryList","getParameterMappingComboService","length","parentComponentMap","parentComponentList","childComponentMap","childComponentList","viewReportDetail","document","getElementById","setAttribute","click","getReportViewChildDataList","controlList","viewReportDesignConfigList","Object","keys","map","displayName","index","findIndex","comboMap","svaluemember","sdisplaymember","comboList","inputFieldData","inputData","inputfielddata","viewReportDetailWithParameters","viewReportParam","ReportPDFFile","SelectedReportDetails","ReportPDFPath","ViewReportDesignConfig","getReportsByModule","getControlButton","ControlScreen","controlButtonMap","controlButtonList","controlButton","getReportRegSubType","registrationType","getReportSubType","reportType","CoaReportType","CertificateType","getregtype","coaReportTypeMap","COAReportType","certificateType"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {sortData, getComboLabelValue, constructOptionList} from '../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport {transactionStatus, reportTypeEnum} from '../components/Enumeration';\r\n\r\nexport function getReportMasterComboService(inputParam){ \r\n    return function (dispatch) {    \r\n        // if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus !== transactionStatus.APPROVED))\r\n        // {      \r\n            dispatch(initRequest(true));\r\n            let nreportcode = null;\r\n            if (inputParam.operation === \"update\"){\r\n                nreportcode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n            }\r\n            return  rsapi.post(\"reportconfig/getReportMasterComboData\",{nreportcode, \r\n                                                                        userinfo:inputParam.userInfo,\r\n                                                                        filterreporttype : inputParam.filterReportType})\r\n            .then(response=>{ \r\n\r\n                const reportTypeMap = constructOptionList(response.data[\"ReportType\"] || [], \"nreporttypecode\",\r\n                                    \"sdisplayname\", undefined, undefined, true);\r\n                const reportModuleMap  = constructOptionList(response.data[\"ReportModule\"] ||[], \"nreportmodulecode\",\r\n                                    \"sdisplayname\" , undefined, undefined, true);\r\n                const reportSubTypeMap  = constructOptionList(response.data[\"COAReportType\"] ||[], \"ncoareporttypecode\",\r\n                                    \"scoareporttypename\" , undefined, undefined, true);               \r\n                const regTypeMap  = constructOptionList(response.data[\"RegistrationType\"] ||[], \"nregtypecode\",\r\n                                    \"sregtypename\" , undefined, undefined, true);\r\n                const regSubTypeMap  = constructOptionList(response.data[\"RegistrationSubType\"] ||[], \"nregsubtypecode\",\r\n                                    \"sregsubtypename\" , undefined, undefined, true);\r\n                const sectionMap  = constructOptionList(response.data[\"SectionList\"] ||[], \"nsectioncode\",\r\n                                    \"ssectionname\", undefined, undefined, true);\r\n                const decisionTypeMap  = constructOptionList(response.data[\"ReportDecisionType\"] ||[], \"nreportdecisiontypecode\",\r\n                                    \"sdecisiontypename\" , undefined, undefined, true);                             \r\n                const certificateTypeMap  = constructOptionList(response.data[\"CertificateType\"] ||[], \"ncertificatetypecode\",\r\n                                    \"scertificatetype\" , undefined, undefined, true);\r\n                const controlScreenTypeMap  = constructOptionList(response.data[\"ControlScreen\"] ||[], \"nformcode\",\r\n                                    \"sdisplaynames\" , undefined, undefined, true);\r\n\r\n                const  reportTypeList  = reportTypeMap.get(\"OptionList\");\r\n                const  reportModuleList = reportModuleMap.get(\"OptionList\");\r\n                const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n                const  regTypeList = regTypeMap.get(\"OptionList\");                                                       \r\n                const  regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n                const  sectionList = sectionMap.get(\"OptionList\"); \r\n                const  decisionTypeList = decisionTypeMap.get(\"OptionList\"); \r\n                const  certificateTypeList = certificateTypeMap.get(\"OptionList\");     \r\n                const  controlScreenTypeList = controlScreenTypeMap.get(\"OptionList\");                              \r\n                             \r\n                let selectedRecord =  {ntransactionstatus:transactionStatus.ACTIVE};\r\n                let respObject = {\"reportVersionStatus\" :transactionStatus.DRAFT};\r\n                    \r\n                if (inputParam.operation === \"update\"){\r\n                    if (response.status === 202){\r\n                        respObject[\"reportVersionStatus\"] = transactionStatus.APPROVED;\r\n                        respObject[\"ApprovedReportMaster\"] = response.data[\"SelectedReportDesigner\"];\r\n                    }     \r\n                    selectedRecord = JSON.parse(JSON.stringify(response.data[\"SelectedReportDesigner\"]));\r\n                    if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE\r\n                         || selectedRecord.nreporttypecode === reportTypeEnum.COA) \r\n                    {\r\n                        selectedRecord[\"nregtypecode\"] ={value:response.data[\"SelectedReportDesigner\"].nregtypecode,\r\n                                                            label:response.data[\"SelectedReportDesigner\"].sregtypename};\r\n                        if (response.data[\"SelectedReportDesigner\"].nregsubtypecode !== -1)\r\n                        {\r\n                            selectedRecord[\"nregsubtypecode\"] = {value : response.data[\"SelectedReportDesigner\"].nregsubtypecode,\r\n                                                                label: response.data[\"SelectedReportDesigner\"].sregsubtypename}; \r\n                        }\r\n                        else{\r\n                            selectedRecord[\"nregsubtypecode\"] = undefined;\r\n                        }\r\n\r\n                        if (response.data[\"SelectedReportDesigner\"].nsectioncode !== -1)\r\n                        {\r\n                            selectedRecord[\"nsectioncode\"] = {value : response.data[\"SelectedReportDesigner\"].nsectioncode,\r\n                                                                label: response.data[\"SelectedReportDesigner\"].ssectionname}; \r\n                        }\r\n                        else{\r\n                            selectedRecord[\"nsectioncode\"] = undefined;\r\n                         }\r\n\r\n                        if (response.data[\"SelectedReportDesigner\"].ncoareporttypecode !== -1)\r\n                        {\r\n                             selectedRecord[\"ncoareporttypecode\"] = {value : response.data[\"SelectedReportDesigner\"].ncoareporttypecode,\r\n                                                                 label: response.data[\"SelectedReportDesigner\"].scoareporttypename}; \r\n                        }\r\n                        else{\r\n                             selectedRecord[\"ncoareporttypecode\"] = undefined;\r\n                        }\r\n\r\n                        if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE){\r\n                            selectedRecord[\"nreportdecisiontypecode\"] = {value : response.data[\"SelectedReportDesigner\"].nreportdecisiontypecode,\r\n                                                                        label: response.data[\"SelectedReportDesigner\"].sdecisiontypename};  \r\n                        }\r\n                      \r\n                    }   \r\n                    else  if (selectedRecord.nreporttypecode === reportTypeEnum.MIS) \r\n                    {\r\n                        selectedRecord[\"nreportmodulecode\"] = {value : response.data[\"SelectedReportDesigner\"].nreportmodulecode,\r\n                                                               label: response.data[\"SelectedReportDesigner\"].smoduledisplayname,\r\n                                                           \r\n                                                            } ;\r\n\r\n                        selectedRecord[\"nreportmodule\"] = {value : response.data[\"SelectedReportDesigner\"].smoduledisplayname,\r\n                                                            label: response.data[\"SelectedReportDesigner\"].smoduledisplayname}\r\n                     \r\n                    } \r\n                       \r\n                    else  if (selectedRecord.nreporttypecode === reportTypeEnum.SCREENWISE) \r\n                    {\r\n                        selectedRecord[\"ncontrolcode\"] = {value : response.data[\"SelectedReportDesigner\"].ncontrolcode,\r\n                                                                  label: response.data[\"SelectedReportDesigner\"].scontrolids};  \r\n\r\n                        selectedRecord[\"nformcode\"] = {value : response.data[\"SelectedReportDesigner\"].nformcode,\r\n                                                                  label: response.data[\"SelectedReportDesigner\"].sdisplayname};  \r\n                    }\r\n\r\n                   if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE\r\n                        || selectedRecord.nreporttypecode === reportTypeEnum.BATCH) \r\n                    {\r\n                        if (response.data[\"SelectedReportDesigner\"].ncoareporttypecode !== -1)\r\n                        {\r\n                             selectedRecord[\"ncoareporttypecode\"] = {value : response.data[\"SelectedReportDesigner\"].ncoareporttypecode,\r\n                                                                 label: response.data[\"SelectedReportDesigner\"].scoareporttypename}; \r\n                        }\r\n                        else{\r\n                             selectedRecord[\"ncoareporttypecode\"] = undefined;\r\n                        }\r\n                        selectedRecord[\"ncertificatetypecode\"] = {value : response.data[\"SelectedReportDesigner\"].ncertificatetypecode,\r\n                                                                    label: response.data[\"SelectedReportDesigner\"].scertificatetype};  \r\n\r\n                        selectedRecord[\"sbatchtypename\"] = response.data[\"SelectedReportDesigner\"].sbatchtypename\r\n                    }\r\n\r\n                    selectedRecord[\"ntransactionstatus\"] = response.data[\"SelectedReportDesigner\"].ntransactionstatus;\r\n\r\n                    selectedRecord[\"nreporttypecode\"] ={item:response.data[\"SelectedReportDesigner\"],\r\n                                                        value:response.data[\"SelectedReportDesigner\"].nreporttypecode,\r\n                                                        label:response.data[\"SelectedReportDesigner\"].sreportdisplayname};\r\n                             \r\n                }\r\n                                   \r\n                respObject = { ...respObject, reportSubTypeList,//:response.data[\"COAReportType\"]  || [], \r\n                                    regTypeList,//:response.data[\"RegistrationType\"]  || [],                                                               \r\n                                    regSubTypeList,//:response.data[\"RegistrationSubType\"]  || [],  \r\n                                    sectionList,//:response.data[\"SectionList\"] || [],   \r\n                                    certificateTypeList,  \r\n                                    reportDecisionTypeList:decisionTypeList,\r\n                                    controlScreen:controlScreenTypeList  ,\r\n                                    //masterData:{...inputParam.masterData, SelectedFilterReportType:response.data[\"SelectedReportType\"] }                                                             \r\n                                };                  \r\n\r\n                if (inputParam.operation === \"create\")\r\n                {\r\n                    selectedRecord[\"nreporttypecode\"] = {item:response.data[\"SelectedReportType\"],label:response.data[\"SelectedReportType\"].sdisplayname,\r\n                                                         value: response.data[\"SelectedReportType\"].nreporttypecode}\r\n                   \r\n                    if (selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE\r\n                        &&  selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES){\r\n                        selectedRecord[\"nregtypecode\"] =  getComboLabelValue (response.data[\"SelectedRegType\"], \r\n                                                                response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")                 \r\n                        \r\n                        if (selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES){\r\n                            selectedRecord[\"nsectioncode\"] = sectionMap.get(\"DefaultValue\");\r\n                        }\r\n                    }\r\n                }\r\n                dispatch({type: DEFAULT_RETURN, payload:{reportTypeList,//:response.data[\"ReportType\"] || [], \r\n                                                        reportModuleList,//:response.data[\"ReportModule\"] || [] ,\r\n                                                        ...respObject,\r\n                                                        operation:inputParam.operation, \r\n                                                        screenName:inputParam.screenName,   \r\n                                                        selectedRecord, \r\n                                                        openModal : true,\r\n                                                        ncontrolCode:inputParam.ncontrolcode,\r\n                                                        loading:false\r\n                                                        }});\r\n                \r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }  \r\n            }) \r\n            // }\r\n            // else{       \r\n            //     toast.warn(intl.formatMessage({id: \"IDS_CANNOTUPDATEAPPROVEDREPORT\"}));\r\n            // }\r\n   \r\n}}\r\n\r\nexport function getReportDetailComboService(inputParam){ \r\n    return function (dispatch) {    \r\n    if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus === transactionStatus.DRAFT))\r\n    {       \r\n        if (inputParam.masterData.SelectedReportMaster !== null){  \r\n                dispatch(initRequest(true));\r\n                let nreportdetailcode = null;\r\n                if (inputParam.operation === \"update\"){\r\n                    nreportdetailcode = inputParam.detailtoedit[inputParam.primaryKeyName];\r\n                }\r\n                return  rsapi.post(\"reportconfig/getReportDetailComboData\",{nreportdetailcode, \r\n                                                        reportmaster:inputParam.masterData.SelectedReportMaster, \r\n                                                        userinfo:inputParam.userInfo})\r\n                .then(response=>{                                  \r\n                    \r\n                    // const reportType = response.data[\"SelectedReportType\"];\r\n                    // const reportSubTypeMap  = constructOptionList(response.data[\"COAReportType\"] ||[], \"ncoareporttypecode\",\r\n                    //                             \"scoareporttypename\" , undefined, undefined, true);    \r\n                    // const sectionMap  = constructOptionList(response.data[\"SectionList\"] ||[], \"nsectioncode\",\r\n                    //                             \"ssectionname\", undefined, undefined, true);\r\n\r\n                    // const decisionTypeMap  = constructOptionList(response.data[\"ReportDecisionType\"] ||[], \"nreportdecisiontypecode\",\r\n                    //                             \"sdecisiontypename\" , undefined, undefined, true);   \r\n                                                \r\n                    // const certificateTypeMap  = constructOptionList(response.data[\"CertificateType\"] ||[], \"ncertificatetypecode\",\r\n                    //                             \"scertificatetype\" , undefined, undefined, true);\r\n                    \r\n                    // const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n                    // const  sectionList = sectionMap.get(\"OptionList\"); \r\n                    // const  decisionTypeList = decisionTypeMap.get(\"OptionList\");\r\n                    // const  certificateTypeList = certificateTypeMap.get(\"OptionList\");  \r\n                        \r\n                    let selectedRecord =  {};\r\n                    let respObject = {};\r\n                    if (inputParam.operation === \"update\"){\r\n                        selectedRecord = response.data[\"SelectedReportDetail\"];\r\n                \r\n                    }                        \r\n                    selectedRecord[\"ntransactionstatus\"]  = transactionStatus.DRAFT; \r\n                        \r\n                    //    console.log(\"selected in action:\", selectedRecord);\r\n                    dispatch({type: DEFAULT_RETURN, payload:{...respObject,\r\n                                                                operation:inputParam.operation, \r\n                                                                screenName:inputParam.screenName,   \r\n                                                                selectedRecord, \r\n                                                                openModal : true,\r\n                                                                ncontrolCode:inputParam.ncontrolcode,\r\n                                                                loading:false\r\n                                                                }});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }  \r\n                }) \r\n            }\r\n            else{\r\n                toast.warn(intl.formatMessage({id: \"IDS_REPORTNOTFOUND\"}));\r\n            }\r\n    }\r\n    else{       \r\n        toast.warn(intl.formatMessage({id: \"IDS_CANNOTEDITAPPROVEDREPORT\"}));\r\n    }\r\n}}\r\n\r\nexport function getSelectedReportMasterDetail (inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getReportDesigner\", {nreportcode:parseInt(inputParam.nreportcode), \r\n            userinfo:inputParam.userInfo})\r\n   .then(response=>{      \r\n\r\n        const masterData = {...inputParam.masterData, ...response.data}; \r\n     \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getSelectedReportDetail (inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getReportDetail\", {nreportdetailcode:parseInt(inputParam.nreportdetailcode), \r\n            userinfo:inputParam.userInfo})\r\n   .then(response=>{      \r\n\r\n        const masterData = {...inputParam.masterData, ...response.data}; \r\n     \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getConfigReportComboService (inputParam) {\r\n    return function (dispatch) {   \r\n        \r\n    if (inputParam.reportMaster.nreporttypecode ===  reportTypeEnum.MIS)\r\n    {\r\n        if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\r\n                dispatch(initRequest(true));\r\n                return rsapi.post(\"reportconfig/getReportAddDesignComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\r\n                                            userinfo:inputParam.userInfo})\r\n                .then(response=>{     \r\n                    \r\n                    const parameterMap  = constructOptionList(response.data[\"ReportParameter\"] ||[], \"nreportparametercode\",\r\n                                        \"sreportparametername\", undefined, undefined, true);     \r\n\r\n                    const  reportParameterList  = parameterMap.get(\"OptionList\");\r\n\r\n                    const designComponentMap  = constructOptionList(response.data[\"DesignComponents\"] ||[], \"ndesigncomponentcode\",\r\n                                        \"sdesigncomponentname\", undefined, undefined, true);     \r\n\r\n                    const  designComponentList  = designComponentMap.get(\"OptionList\");\r\n\r\n                    const sqlQueryMap  = constructOptionList(response.data[\"SQLQuery\"] ||[], \"nsqlquerycode\",\r\n                                        \"ssqlqueryname\", undefined, undefined, true);     \r\n\r\n                    const  sqlQueryList  = sqlQueryMap.get(\"OptionList\");\r\n\r\n                    dispatch({type: DEFAULT_RETURN, payload:{reportParameterList,//:response.data[\"ReportParameter\"] || [], \r\n                                                            designComponentList,//:response.data[\"DesignComponents\"] || [],\r\n                                                            sqlQueryList,//:response.data[\"SQLQuery\"] || [], \r\n                                                            operation:inputParam.operation, \r\n                                                            screenName:inputParam.screenName,   \r\n                                                            //selectedRecord:{nmandatory:transactionStatus.YES}, \r\n                                                            selectedRecord:{},\r\n                                                            openModal : true,\r\n                                                            ncontrolCode:inputParam.ncontrolCode,\r\n                                                            loading:false\r\n                                                            }}); \r\n                })\r\n                .catch(error=>{\r\n                        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }  \r\n                \r\n                })\r\n        }\r\n        else{\r\n            toast.warn(intl.formatMessage({id:\"IDS_CANNOTCONFIGUREAPPROVEDREPORT\"}))\r\n        }\r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id:\"IDS_CANCONFIGUREMISREPORT\"}))\r\n    }\r\n}}\r\n\r\nexport function getParameterMappingComboService (inputParam) {\r\n    return function (dispatch) {   \r\n        \r\n        if (inputParam.reportMaster.nreporttypecode ===  reportTypeEnum.MIS)\r\n        {\r\n            if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\r\n                    dispatch(initRequest(true));\r\n                    return rsapi.post(\"reportconfig/getReportParameterMappingComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\r\n                                                userinfo:inputParam.userInfo})\r\n                .then(response=>{  \r\n                    if (response.data[\"ChildComponentList\"].length > 0){    \r\n\r\n                            const parentComponentMap  = constructOptionList(response.data[\"ParentComponentList\"] ||[], \"nreportdesigncode\",\r\n                                                \"sdisplayname\", undefined, undefined, true);    \r\n                            const parentComponentList  = parentComponentMap.get(\"OptionList\");\r\n\r\n                            const childComponentMap  = constructOptionList(response.data[\"ChildComponentList\"] ||[], \"nreportdesigncode\",\r\n                                                        \"sdisplayname\", undefined, undefined, true);    \r\n                            const childComponentList  = childComponentMap.get(\"OptionList\");\r\n\r\n                            dispatch({type: DEFAULT_RETURN, payload:{parentComponentList,//:response.data[\"ParentComponenList\"] || [],\r\n                                                                    childComponentList,//:response.data[\"ChildComponentList\"] || [], \r\n                                                                    operation:inputParam.operation, \r\n                                                                    screenName:inputParam.screenName,   \r\n                                                                    selectedRecord:{}, \r\n                                                                    openModal : true,\r\n                                                                    ncontrolCode:inputParam.ncontrolCode,\r\n                                                                    loading:false\r\n                                                                    }}); \r\n                    }\r\n                    else{\r\n                        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                        toast.warn(intl.formatMessage({id:\"IDS_NOPARAMETERSTOMAP\"}))\r\n                    }\r\n                })\r\n                .catch(error=>{\r\n                        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }  \r\n                \r\n                })\r\n            }\r\n            else{\r\n                toast.warn(intl.formatMessage({id:\"IDS_CANNOTMAPAPPROVEDREPORT\"}))\r\n            }\r\n        }\r\n        else{\r\n            toast.warn(intl.formatMessage({id:\"IDS_CANMAPMISREPORT\"}))\r\n        }\r\n}}\r\n\r\nexport function viewReportDetail(reportmaster, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n        if (reportmaster !== undefined)\r\n        {\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"reportview/viewReport\", {reportmaster, userinfo:userInfo})\r\n            .then(response=>{ \r\n               // console.log(\"report action:\", response);\r\n                masterData = {...masterData, ...response.data};\r\n\r\n                if (response.data[\"ViewReportDesignConfig\"] !== undefined ){\r\n                    masterData[\"ReportPDFFile\"] = undefined;\r\n                }\r\n                else{\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", masterData[\"ReportPDFFile\"]);\r\n                    document.getElementById(\"download_data\").click();\r\n                }\r\n            \r\n                dispatch({type: DEFAULT_RETURN, payload:{masterData, loading:false}});   \r\n            })\r\n            .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }             \r\n            })\r\n        }\r\n        else{\r\n            toast.warn(intl.formatMessage({id:\"IDS_REPORTNOTFOUND\"}))\r\n        }\r\n}}\r\n\r\n// export function getActionMappingComboService(inputParam) {\r\n//     return function (dispatch) {   \r\n        \r\n//     if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\r\n//             dispatch(initRequest(true));\r\n//             return rsapi.post(\"reportconfig/getActionMappingComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\r\n//                                         userinfo:inputParam.userInfo})\r\n//         .then(response=>{ \r\n//             if (response.data[\"ActionMappingChild\"].length > 0)\r\n//             {     \r\n//                     dispatch({type: DEFAULT_RETURN, payload:{actionMappingParentList:response.data[\"ActionMappingParent\"] || [],\r\n//                                                             actionMappingChildList:response.data[\"ActionMappingChild\"] || [], \r\n//                                                             operation:inputParam.operation, \r\n//                                                             screenName:inputParam.screenName,   \r\n//                                                             selectedRecord:{}, \r\n//                                                             openModal : true,\r\n//                                                             ncontrolCode:inputParam.ncontrolCode,\r\n//                                                             loading:false\r\n//                                                             }}); \r\n//             }\r\n//             else{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//                 toast.warn(intl.formatMessage({id:\"IDS_NOACTIONSTOMAP\"}))\r\n//             }\r\n//         })\r\n//         .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//             if (error.response.status === 500){\r\n//                 toast.error(error.message);\r\n//             } \r\n//             else{               \r\n//                 toast.warn(error.response.data);\r\n//             }  \r\n        \r\n//         })\r\n//     }\r\n//     else{\r\n//         toast.warn(intl.formatMessage({id:\"IDS_CANNOTACTIONMAPAPPROVEDREPORT\"}))\r\n//     }\r\n// }}\r\n\r\nexport function getReportViewChildDataList(inputParam) {\r\n    return function (dispatch) {   \r\n       // dispatch(initRequest(true));\r\n        return rsapi.post(\"reportview/getChildDataList\", {...inputParam[\"inputData\"]})\r\n       .then(response=>{     \r\n            const controlList = inputParam.viewReportDesignConfigList;\r\n\r\n            const selectedRecord = inputParam.selectedRecord;\r\n          \r\n            Object.keys(response.data).map(displayName=>{\r\n                const index = controlList.findIndex(item=> displayName === item.sdisplayname);   \r\n           \r\n                    const comboMap = constructOptionList(response.data[displayName] || [], controlList[index].svaluemember,\r\n                                    controlList[index].sdisplaymember, undefined, undefined, true);\r\n\r\n                    const comboList = comboMap.get(\"OptionList\");\r\n                    selectedRecord[controlList[index].svaluemember] = undefined;\r\n                        \r\n                return controlList[index][\"dataList\"] = comboList;//response.data[displayName]\r\n            })\r\n            dispatch({type: DEFAULT_RETURN, payload:{viewReportDesignConfigList:controlList, \r\n                                                     loading:false,\r\n                                                     inputFieldData : inputParam.inputData.inputfielddata, \r\n                                                     selectedRecord}});   \r\n       })\r\n       .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n           if (error.response.status === 500){\r\n               toast.error(error.message);\r\n           } \r\n           else{               \r\n               toast.warn(error.response.data);\r\n           }  \r\n      \r\n       })\r\n}}\r\n\r\nexport function viewReportDetailWithParameters(viewReportParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportview/viewReportWithParameters\", {...viewReportParam})\r\n   .then(response=>{     \r\n        const masterData = {...viewReportParam.masterData,  \r\n                            ReportPDFFile:response.data[\"ReportPDFFile\"],\r\n                            SelectedReportDetails:response.data[\"SelectedReportDetails\"],\r\n                            ReportPDFPath:response.data[\"ReportPDFPath\"],\r\n                            ViewReportDesignConfig :undefined} ;\r\n              \r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, loading:false, //openModal:false\r\n                }});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getReportsByModule(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportview/getReportView\", {nreportmodulecode:inputParam.nreportmodulecode, \r\n            userinfo:inputParam.userInfo})\r\n   .then(response=>{      \r\n\r\n        const masterData = {...inputParam.masterData, ...response.data}; \r\n\r\n        // const  reportModuleMap  = constructOptionList(masterData.ViewReportModuleList ||[], \"nreportmodulecode\",\r\n        //                          \"smoduledisplayname\" , undefined, undefined, true);\r\n        // const  reportModuleList  = reportModuleMap.get(\"OptionList\");\r\n     \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, //viewReportModuleList:reportModuleList,\r\n                                                operation:null, modalName:undefined, \r\n                                                loading:false, selectedRecord: inputParam.selectedRecord}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\n\r\nexport function getControlButton(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getControlButton\", {nformcode:inputParam.ControlScreen.nformcode, \r\n            userinfo:inputParam.userInfo})\r\n   .then(response=>{     \r\n       \r\n        const controlButtonMap  = constructOptionList(response.data ||[], \"ncontrolcode\",\r\n                                \"scontrolids\" , undefined, undefined, true);\r\n        const  controlButtonList = controlButtonMap.get(\"OptionList\");\r\n        dispatch({type: DEFAULT_RETURN, payload:{controlButton:controlButtonList,//: response.data,                                            \r\n                                                loading:false, \r\n                                                selectedRecord: {...inputParam.selectedRecord, \r\n                                                                 nregsubtypecode :undefined\r\n                                                                    //nregsubtypecode:{label:\"Please Select...\", value:-4}\r\n                                                                }\r\n                                                }\r\n                                            });   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getReportRegSubType(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getReportRegistrationSubType\", {nregtypecode:inputParam.registrationType.nregtypecode, \r\n            userinfo:inputParam.userInfo})\r\n   .then(response=>{     \r\n       \r\n        const regSubTypeMap  = constructOptionList(response.data ||[], \"nregsubtypecode\",\r\n                                \"sregsubtypename\" , undefined, undefined, true);\r\n        const  regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n        dispatch({type: DEFAULT_RETURN, payload:{regSubTypeList,//: response.data,                                            \r\n                                                loading:false, \r\n                                                selectedRecord: {...inputParam.selectedRecord, \r\n                                                                 nregsubtypecode :undefined\r\n                                                                    //nregsubtypecode:{label:\"Please Select...\", value:-4}\r\n                                                                }\r\n                                                }\r\n                                            });   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getReportSubType(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getReportSubType\", {nreporttypecode:inputParam.reportType.nreporttypecode, \r\n            userinfo:inputParam.userInfo\r\n        })\r\n   .then(response=>{     \r\n       \r\n        const reportSubTypeMap  = constructOptionList(response.data.CoaReportType ||[], \"ncoareporttypecode\",\r\n                                 \"scoareporttypename\" , undefined, undefined, true);   \r\n        const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n\r\n        const certificateTypeMap  = constructOptionList(response.data.CertificateType ||[], \"ncertificatetypecode\",\r\n        \"scertificatetype\" , undefined, undefined, true);   \r\n        const  certificateTypeList = certificateTypeMap.get(\"OptionList\");\r\n        dispatch({type: DEFAULT_RETURN, payload:{reportSubTypeList,  \r\n                                                 certificateTypeList,                                         \r\n                                                loading:false, \r\n                                                selectedRecord: {...inputParam.selectedRecord, \r\n                                                    ncoareporttypecode:undefined,\r\n                                                    ncertificatetypecode:\"\"\r\n                                                   // ncoareporttypecode:{label:\"Please Select...\", value:-4}\r\n                                                                }\r\n                                                }\r\n                                            });   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getregtype(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"reportconfig/getRegistrationtypeForSample\", {nregtypecode:inputParam.nregtypecode,nreporttypecode:inputParam.reportType.nreporttypecode,\r\n            userinfo:inputParam.userInfo\r\n        })\r\n   .then(response=>{    \r\n        \r\n        // const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\r\n        //                          \"sregtypename\" , undefined, undefined, true);   \r\n        // const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\r\n\r\n        // // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\r\n        // // \"sregsubtypename\" , undefined, undefined, true);   \r\n        // //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\r\n\r\n        const regTypeMap  = constructOptionList(response.data[\"RegistrationType\"] ||[], \"nregtypecode\",\r\n                             \"sregtypename\" , undefined, undefined, true);\r\n        const  regTypeList = regTypeMap.get(\"OptionList\");  \r\n\r\n        const regSubTypeMap  = constructOptionList(response.data[\"RegistrationSubType\"] ||[], \"nregsubtypecode\",\r\n                                \"sregsubtypename\" , undefined, undefined, true);\r\n        const  regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n\r\n        const coaReportTypeMap  = constructOptionList(response.data.COAReportType ||[], \"ncoareporttypecode\",\r\n                                  \"scoareporttypename\" , undefined, undefined, true);   \r\n        const  reportSubTypeList = coaReportTypeMap.get(\"OptionList\");\r\n\r\n        const certificateType  = constructOptionList(response.data.CertificateType ||[], \"ncertificatetypecode\",\r\n                                    \"scertificatetype\" , undefined, undefined, true);   \r\n        const  certificateTypeList = certificateType.get(\"OptionList\");                   \r\n        \r\n\r\n        const nregtypecode =  getComboLabelValue (response.data[\"SelectedRegType\"], \r\n                                            response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")                 \r\n\r\n\r\n        dispatch({type: DEFAULT_RETURN, payload:{ \r\n                                                regTypeList,\r\n                                                regSubTypeList,\r\n                                                reportSubTypeList,\r\n                                                loading:false, \r\n                                                certificateTypeList,\r\n                                                selectedRecord: {...inputParam.selectedRecord, \r\n                                                                nregtypecode:nregtypecode, nregsubtypecode:undefined,\r\n                                                                ncoareporttypecode:undefined,\r\n                                                                ncertificatetypecode:\"\"\r\n                                                                }\r\n                                                }\r\n                                            });   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}"]},"metadata":{},"sourceType":"module"}