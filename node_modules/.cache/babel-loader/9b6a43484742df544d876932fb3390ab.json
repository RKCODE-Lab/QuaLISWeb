{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\Site.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, InputGroup, FormControl } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { callService, crudMaster, updateStore, getSiteDetail, getSiteCombo, validateEsignCredential, filterColumnData } from '../../actions';\nimport { injectIntl } from 'react-intl';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { showEsign, validatePhoneNumber, getControlMap, validateEmail } from '../../components/CommonScript';\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport ReactTooltip from 'react-tooltip';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport AddSite from '../../pages/basemaster/AddSite';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Site extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit\n      const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n\n      if (isValidateEmail) {\n        let dataState = undefined;\n        let operation = \"\";\n        let inputData = [];\n        let selectedId = null;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = {\n          selectedObject: \"selectedSite\",\n          primaryKeyField: \"nsitecode\",\n          inputListName: \"Site\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam['primaryKeyValue'] = this.props.Login.masterData.selectedSite.nsitecode;\n          inputData[\"site\"] = {\n            \"nsitecode\": this.props.Login.masterData.selectedSite.nsitecode,\n            \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\n            \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\n            \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\n            \"sphoneno\": this.state.selectedRecord.sphoneno,\n            \"ssitename\": this.state.selectedRecord.ssitename,\n            \"sfaxno\": this.state.selectedRecord.sfaxno,\n            \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\n            \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus\n          };\n          operation = \"update\";\n          dataState = this.state.dataState;\n          selectedId = this.props.Login.selectedId;\n        } else {\n          inputData[\"site\"] = {\n            \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\n            \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\n            \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\n            \"sphoneno\": this.state.selectedRecord.sphoneno,\n            \"ssitename\": this.state.selectedRecord.ssitename,\n            \"sfaxno\": this.state.selectedRecord.sfaxno,\n            \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\n            \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus\n          };\n          operation = \"create\";\n        }\n\n        inputData[\"site\"][\"ntimezonecode\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : \"-1\";\n        const inputParam = {\n          classUrl: \"site\",\n          methodUrl: \"SiteScreen\",\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          postParam,\n          searchRef: this.searchRef,\n          operation: operation,\n          saveType,\n          formRef,\n          dataState,\n          selectedId\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (event.target.name === \"sphoneno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.DeleteSite = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"site\"] = this.props.Login.masterData.selectedSite;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"Site\",\n        selectedObject: \"selectedSite\",\n        primaryKeyField: \"nsitecode\",\n        primaryKeyValue: this.props.Login.masterData.selectedSite.nsitecode,\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        },\n        fetchUrl: \"site/getSiteScreen\"\n      };\n      const inputParam = {\n        methodUrl: \"SiteScreen\",\n        postParam,\n        classUrl: \"site\",\n        inputData: inputData,\n        operation: \"delete\"\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Site\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteSite(\"delete\", deleteId, \"IDS_SITE\"));\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"site\",\n        methodUrl: \"SiteScreen\",\n        displayName: \"IDS_SITE\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedSite: undefined,\n      controlMap: new Map(),\n      Site: [],\n      sectionDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"ssitename\", \"ssiteaddress\", \"scontactperson\", \"sphoneno\", \"semail\", \"sfaxno\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      controlMap,\n      selectedRecord,\n      userRoleControlRights,\n      dataState\n    } = this.state;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      }\n\n      dataState = {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      };\n      updateState = true;\n    } else if (this.props.Login.selectedRecord !== this.state.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        dataState\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let mandatoryFields = [];\n    mandatoryFields.push({\n      \"mandatory\": true,\n      \"idsName\": \"IDS_SITENAME\",\n      \"dataField\": \"ssitename\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"mandatory\": true,\n      \"idsName\": \"IDS_SITEADDRESS\",\n      \"dataField\": \"ssiteaddress\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"mandatory\": true,\n      \"idsName\": \"IDS_PHONENO\",\n      \"dataField\": \"sphoneno\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"mandatory\": true,\n      \"idsName\": \"IDS_FAXNO\",\n      \"dataField\": \"sfaxno\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    });\n    const addId = this.state.controlMap.has(\"AddSite\") && this.state.controlMap.get(\"AddSite\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditSite\") && this.state.controlMap.get(\"EditSite\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteSite\") && this.state.controlMap.get(\"DeleteSite\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Site\",\n      selectedObject: \"selectedSite\",\n      primaryKeyField: \"nsitecode\",\n      fetchUrl: \"site/getSiteScreen\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const {\n      selectedSite\n    } = this.props.Login.masterData;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Site\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Site,\n      getMasterDetail: Site => this.props.getSiteDetail(Site, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedSite,\n      primaryKeyField: \"nsitecode\",\n      mainField: \"ssitename\",\n      firstField: \"scontactperson\",\n      secondField: \"stransdisplaystatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      addId: addId,\n      hidePaging: false,\n      openModal: () => this.props.getSiteCombo(\"IDS_SITE\", \"create\", \"nsitecode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      reloadData: this.reloadData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedSite ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedSite.ssitename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editSite\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getSiteCombo(\"IDS_SITE\", \"update\", \"nsitecode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteSite\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 73\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SITENAME\",\n      message: \"Sitename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.ssitename))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SITEADDRESS\",\n      message: \"Site Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.ssiteaddress))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CONTACTPERSON\",\n      message: \"Contact Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.scontactperson === null || this.props.Login.masterData.selectedSite.scontactperson.length === 0 ? '-' : this.props.Login.masterData.selectedSite.scontactperson))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PHONENO\",\n      message: \"Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FAXNO\",\n      message: \"Fax No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.sfaxno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAIL\",\n      message: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.semail === null || this.props.Login.masterData.selectedSite.semail.length === 0 ? '-' : this.props.Login.masterData.selectedSite.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TIMEZONE\",\n      message: \"Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSite.ntimezonecode === null || this.props.Login.masterData.selectedSite.ntimezonecode.length === 0 ? '-' : this.props.Login.masterData.selectedSite.stimezoneid)))))) : \"\"))))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: true,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: 'IDS_SITE',\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      mandatoryFields: mandatoryFields,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      onSaveClick: this.onSaveClick,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddSite, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  filterColumnData,\n  callService,\n  updateStore,\n  getSiteDetail,\n  crudMaster,\n  getSiteCombo,\n  validateEsignCredential\n})(injectIntl(Site));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/basemaster/Site.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","InputGroup","FormControl","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","callService","crudMaster","updateStore","getSiteDetail","getSiteCombo","validateEsignCredential","filterColumnData","injectIntl","ListMaster","transactionStatus","showEsign","validatePhoneNumber","getControlMap","validateEmail","ReadOnlyText","ContentPanel","ReactTooltip","SlideOutModal","AddSite","Esign","DEFAULT_RETURN","ConfirmMessage","mapStateToProps","state","Login","Site","constructor","props","validateEsign","inputParam","inputData","userInfo","sreason","selectedRecord","password","screenData","closeModal","loadEsign","openModal","operation","updateInfo","typeName","data","selectedId","onSaveClick","saveType","formRef","isValidateEmail","dataState","undefined","postParam","selectedObject","primaryKeyField","inputListName","fecthInputObject","userinfo","masterData","selectedSite","nsitecode","nmastersitecode","scontactperson","ssiteaddress","sphoneno","ssitename","sfaxno","semail","ndefaultstatus","value","classUrl","methodUrl","displayName","searchRef","userRoleControlRights","nformcode","ncontrolCode","info","intl","formatMessage","id","onInputOnChange","event","target","type","name","checked","YES","NO","setState","DeleteSite","primaryKeyValue","fetchUrl","screenName","ConfirmDelete","deleteId","confirmMessage","confirm","reloadData","current","onComboChange","comboData","fieldName","sectionDataState","skip","take","error","controlMap","Map","createRef","searchFieldList","componentDidUpdate","previousProps","updateState","Object","values","map","item","push","ncontrolcode","settings","parseInt","getDerivedStateFromProps","masterStatus","warn","render","mandatoryFields","addId","has","get","editId","filterParam","searchedData","indexOf","e","length","ntimezonecode","stimezoneid","TimeZoneList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport {callService, crudMaster, updateStore, getSiteDetail,getSiteCombo,\r\n        validateEsignCredential,filterColumnData} from '../../actions';\r\n\r\nimport { injectIntl } from 'react-intl';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { showEsign,validatePhoneNumber, getControlMap ,validateEmail} from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddSite from '../../pages/basemaster/AddSite';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass Site extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const sectionDataState = { skip: 0, take: 10 };\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            selectedSite: undefined,\r\n            controlMap: new Map(),\r\n            Site: [],\r\n            sectionDataState\r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"ssitename\", \"ssiteaddress\",\"scontactperson\", \"sphoneno\", \"semail\", \"sfaxno\"]\r\n        this.confirmMessage = new ConfirmMessage();\r\n      \r\n    }\r\n \r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { controlMap, selectedRecord, userRoleControlRights,dataState } = this.state;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                \r\n            }\r\n            dataState = {skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            updateState = true;\r\n        }\r\n        else if (this.props.Login.selectedRecord !== this.state.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            updateState = true;\r\n\r\n        }\r\n\r\n      if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord,dataState\r\n            });\r\n        }\r\n    }   \r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n   closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n        if (this.props.Login.operation === \"delete\") {\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        else {\r\n            loadEsign = false;\r\n        }\r\n    }\r\n    else {\r\n        openModal = false;\r\n        selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n\r\n}\r\nstatic getDerivedStateFromProps(props, state) {\r\n\r\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n    }\r\n\r\n    if (props.Login.error !== state.error) {\r\n        toast.error(props.Login.error)\r\n        props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n        return { selectedRecord: {} }\r\n    }\r\n    return null;\r\n}\r\nonSaveClick = (saveType, formRef) => {\r\n    //add / edit\r\n    const isValidateEmail = this.state.selectedRecord[\"semail\"]? validateEmail(this.state.selectedRecord[\"semail\"]): true;\r\n if (isValidateEmail) {  \r\n    let dataState = undefined;\r\n    let operation = \"\";\r\n    let inputData = [];\r\n    let selectedId = null;\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    let postParam = {\r\n        selectedObject: \"selectedSite\",\r\n        primaryKeyField: \"nsitecode\",\r\n        inputListName: \"Site\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n    }\r\n    if (this.props.Login.operation === \"update\") {\r\n        postParam['primaryKeyValue'] = this.props.Login.masterData.selectedSite.nsitecode;\r\n        inputData[\"site\"] = { \"nsitecode\": this.props.Login.masterData.selectedSite.nsitecode,\r\n                           \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\r\n                           \"scontactperson\": this.state.selectedRecord.scontactperson!==null?this.state.selectedRecord.scontactperson:\"\",\r\n                           \"ssiteaddress\": this.state.selectedRecord.ssiteaddress ,\r\n                           \"sphoneno\": this.state.selectedRecord.sphoneno, \r\n                           \"ssitename\": this.state.selectedRecord.ssitename,\r\n                           \"sfaxno\": this.state.selectedRecord.sfaxno ,\r\n                           \"semail\":this.state.selectedRecord.semail!==null?this.state.selectedRecord.semail:\"\" ,\r\n                           \"ndefaultstatus\":this.state.selectedRecord.ndefaultstatus}\r\n\r\n\r\n        operation = \"update\";\r\n        dataState = this.state.dataState;\r\n        selectedId = this.props.Login.selectedId;\r\n    }\r\n    else {\r\n\r\n        inputData[\"site\"] = { \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\r\n                            \"scontactperson\": this.state.selectedRecord.scontactperson!==null?this.state.selectedRecord.scontactperson:\"\",\r\n                            \"ssiteaddress\": this.state.selectedRecord.ssiteaddress ,\r\n                            \"sphoneno\": this.state.selectedRecord.sphoneno,\r\n                            \"ssitename\": this.state.selectedRecord.ssitename,\r\n                            \"sfaxno\": this.state.selectedRecord.sfaxno ,\r\n                            \"semail\": this.state.selectedRecord.semail!==null?this.state.selectedRecord.semail:\"\" ,\r\n                            \"ndefaultstatus\":this.state.selectedRecord.ndefaultstatus};\r\n\r\n\r\n        operation = \"create\";\r\n    }\r\n    inputData[\"site\"][\"ntimezonecode\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : \"-1\";\r\n\r\n\r\n    const inputParam = {\r\n        classUrl: \"site\",\r\n        methodUrl: \"SiteScreen\",\r\n        displayName: this.props.Login.inputParam.displayName,\r\n        inputData: inputData,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        operation: operation, saveType, formRef, dataState, selectedId\r\n    }\r\n\r\n       const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n      else {\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n}\r\nelse {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n    }\r\n}\r\n\r\n\r\nonInputOnChange = (event) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n  if (event.target.type === 'checkbox') {\r\n       selectedRecord[event.target.name] = event.target.checked === true ?transactionStatus.YES : transactionStatus.NO;\r\n  }\r\n  else {\r\n    if (event.target.name === \"sphoneno\") {\r\n        if (event.target.value !== \"\") {\r\n            event.target.value = validatePhoneNumber(event.target.value);\r\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value\r\n        }\r\n    }\r\n\r\n    else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n  }\r\n    this.setState({ selectedRecord });\r\n}\r\n\r\nDeleteSite = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n\r\n        inputData[\"site\"] = this.props.Login.masterData.selectedSite;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        const postParam = {\r\n            inputListName: \"Site\", selectedObject: \"selectedSite\",\r\n            primaryKeyField: \"nsitecode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedSite.nsitecode,\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            fetchUrl:\"site/getSiteScreen\"\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: \"SiteScreen\", postParam,\r\n            classUrl: \"site\",\r\n            inputData: inputData,\r\n            operation: \"delete\"\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Site\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n\r\n}\r\n\r\n\r\nConfirmDelete = (deleteId) => {\r\n    this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n        this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n        () => this.DeleteSite(\"delete\", deleteId, \"IDS_SITE\"));\r\n}\r\n\r\nreloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    const inputParam = {\r\n        inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        classUrl: \"site\",\r\n        methodUrl: \"SiteScreen\",\r\n        displayName: \"IDS_SITE\",\r\n        userInfo: this.props.Login.userInfo\r\n    };\r\n\r\n    this.props.callService(inputParam);\r\n}\r\n\r\nonComboChange = (comboData, fieldName) => {\r\n    if (comboData !== null) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n}\r\nrender(){\r\n    let mandatoryFields = [];\r\n            mandatoryFields.push(\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SITENAME\", \"dataField\": \"ssitename\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SITEADDRESS\", \"dataField\": \"ssiteaddress\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PHONENO\", \"dataField\": \"sphoneno\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_FAXNO\", \"dataField\": \"sfaxno\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n               \r\n            )\r\n    const addId = this.state.controlMap.has(\"AddSite\") && this.state.controlMap.get(\"AddSite\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditSite\") && this.state.controlMap.get(\"EditSite\").ncontrolcode;\r\n    const deleteId = this.state.controlMap.has(\"DeleteSite\") && this.state.controlMap.get(\"DeleteSite\").ncontrolcode;\r\n    \r\n    const filterParam = {\r\n        inputListName: \"Site\", selectedObject: \"selectedSite\", primaryKeyField: \"nsitecode\",\r\n        fetchUrl: \"site/getSiteScreen\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n        searchFieldList: this.searchFieldList\r\n    };\r\n    const { selectedSite } = this.props.Login.masterData;\r\n    return(\r\n        \r\n         <>\r\n                         <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                         <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n        <Row noGutters={true}>\r\n        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Site\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Site}\r\n                                getMasterDetail={(Site) => this.props.getSiteDetail(Site, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedSite}\r\n                                primaryKeyField=\"nsitecode\"\r\n                                mainField=\"ssitename\"\r\n                                firstField=\"scontactperson\"\r\n                                secondField=\"stransdisplaystatus\"\r\n\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                searchRef={this.searchRef}\r\n                                addId={addId}\r\n                                hidePaging={false}\r\n\r\n                                openModal={() => this.props.getSiteCombo(\"IDS_SITE\", \"create\", \"nsitecode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                reloadData={this.reloadData}\r\n\r\n                            />\r\n\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedSite ?\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                       \r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.selectedSite.ssitename}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                    \r\n                                                                </h2>\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link name=\"editSite\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        onClick={(e) => this.props.getSiteCombo(\"IDS_SITE\", \"update\", \"nsitecode\", this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link name=\"deleteSite\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                        \r\n                                                                    </Nav.Link>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_SITENAME\" message=\"Sitename\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedSite.ssitename}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_SITEADDRESS\" message=\"Site Address\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedSite.ssiteaddress}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_CONTACTPERSON\" message=\"Contact Person\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedSite.scontactperson === null || this.props.Login.masterData.selectedSite.scontactperson.length === 0 ? '-' :\r\n                                                                    this.props.Login.masterData.selectedSite.scontactperson}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_PHONENO\" message=\"Phone Number\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedSite.sphoneno}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_FAXNO\" message=\"Fax No\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedSite.sfaxno}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_EMAIL\" message=\"Email\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSite.semail === null || this.props.Login.masterData.selectedSite.semail.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedSite.semail}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_TIMEZONE\" message=\"Time\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSite.ntimezonecode === null || this.props.Login.masterData.selectedSite.ntimezonecode.length === 0 ? '-' :\r\n                                                                            this.props.Login.masterData.selectedSite.stimezoneid}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col> \r\n                                                                                    \r\n                                                                                                                      \r\n                                                        </Row>\r\n                                                    \r\n                                                    </Card.Body>\r\n\r\n                                                </>\r\n                                                : \"\"\r\n                                            }\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col></Row>\r\n                        </Col>\r\n                    </Row>\r\n                        </div>\r\n                        {this.props.Login.openModal ? \r\n                    <SlideOutModal show={true}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={'IDS_SITE'}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        mandatoryFields={mandatoryFields}\r\n\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        onSaveClick={this.onSaveClick}\r\n\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddSite\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                TimeZoneList={this.props.Login.TimeZoneList}\r\n                                onComboChange={this.onComboChange}\r\n\r\n                            />}\r\n                    />\r\n                    \r\n               :\"\"} \r\n         </>\r\n    )\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, {filterColumnData, callService,updateStore,\r\n                       getSiteDetail,crudMaster,getSiteCombo, validateEsignCredential \r\n}\r\n)(injectIntl(Site));\r\n\r\n"]},"metadata":{},"sourceType":"module"}