{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';//import { Col, Row } from 'react-bootstrap';\nimport FormInput from'../../components/form-input/form-input.component';import{injectIntl,FormattedMessage}from'react-intl';import{Col}from'react-bootstrap';var AddSubCodedResult=function AddSubCodedResult(props){var _props$parameterData=props.parameterData,needCodedResult=_props$parameterData.needCodedResult,needActualResult=_props$parameterData.needActualResult,grade=_props$parameterData.grade;var testMethodColumnList=[{\"idsName\":\"IDS_METHOD\",\"dataField\":\"smethodname\",\"width\":\"200px\"}];return/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormInput,{name:\"ssubcodedresult\",label:props.intl.formatMessage({id:\"IDS_SUBCODEDRESULT\"}),type:\"text\",required:!needCodedResult,isMandatory:needCodedResult?\"\":\"*\",isDisabled:needCodedResult,value:props.selectedRecord&&props.selectedRecord[\"ssubcodedresult\"]?props.selectedRecord[\"ssubcodedresult\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_SUBCODEDRESULT\"})//onChange = { (event) => props.onInputOnChange(event, 1) }\n,onChange:function onChange(event){return props.onInputOnChange(event,1);},maxLength:100}));};export default injectIntl(AddSubCodedResult);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddSubCodedResult.jsx"],"names":["React","FormSelectSearch","FormInput","injectIntl","FormattedMessage","Col","AddSubCodedResult","props","parameterData","needCodedResult","needActualResult","grade","testMethodColumnList","intl","formatMessage","id","selectedRecord","event","onInputOnChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,OAASC,UAAT,CAAoBC,gBAApB,KAA4C,YAA5C,CACA,OAASC,GAAT,KAAmB,iBAAnB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjC,yBAAqDA,KAAK,CAACC,aAA3D,CAAQC,eAAR,sBAAQA,eAAR,CAAyBC,gBAAzB,sBAAyBA,gBAAzB,CAA2CC,KAA3C,sBAA2CA,KAA3C,CACA,GAAMC,CAAAA,oBAAoB,CAAG,CACzB,CAAC,UAAU,YAAX,CAAwB,YAAY,aAApC,CAAkD,QAAQ,OAA1D,CADyB,CAA7B,CAEA,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,SAAD,EACI,IAAI,CAAC,iBADT,CAEI,KAAK,CAAEL,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,oBAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,CAACN,eAJf,CAKI,WAAW,CAAEA,eAAe,CAAG,EAAH,CAAQ,GALxC,CAMI,UAAU,CAAEA,eANhB,CAOI,KAAK,CAAEF,KAAK,CAACS,cAAN,EAAwBT,KAAK,CAACS,cAAN,CAAqB,iBAArB,CAAxB,CAAkET,KAAK,CAACS,cAAN,CAAqB,iBAArB,CAAlE,CAA4G,EAPvH,CAQI,WAAW,CAAET,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,oBAAN,CAAzB,CACb;AATJ,CAUI,QAAQ,CAAE,kBAACE,KAAD,QAAWV,CAAAA,KAAK,CAACW,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAX,EAVd,CAWI,SAAS,CAAE,GAXf,EADJ,CADJ,CAqBH,CAzBD,CA2BA,cAAed,CAAAA,UAAU,CAACG,iBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n//import { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport { Col} from 'react-bootstrap';\r\nconst AddSubCodedResult = (props) => {\r\n    const { needCodedResult, needActualResult, grade } = props.parameterData;\r\n    const testMethodColumnList = [\r\n        {\"idsName\":\"IDS_METHOD\",\"dataField\":\"smethodname\",\"width\":\"200px\"}    ];\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormInput\r\n                name=\"ssubcodedresult\"\r\n                label={props.intl.formatMessage({ id: \"IDS_SUBCODEDRESULT\" })}\r\n                type=\"text\"\r\n                required={!needCodedResult}\r\n                isMandatory={needCodedResult ? \"\" : \"*\"}\r\n                isDisabled={needCodedResult}\r\n                value={props.selectedRecord && props.selectedRecord[\"ssubcodedresult\"] ? props.selectedRecord[\"ssubcodedresult\"] : \"\"}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SUBCODEDRESULT\" })}\r\n                //onChange = { (event) => props.onInputOnChange(event, 1) }\r\n                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                maxLength={100}\r\n            />\r\n        </Col>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddSubCodedResult);"]},"metadata":{},"sourceType":"module"}