{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\designtemplatemapping\\\\DesignTemplateMapping.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserLock, faClock } from '@fortawesome/free-solid-svg-icons'; //,faUserTimes, faTrash\n\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getDesignTemplateMappingDetail, getDesignTemplateMappingComboService, filterColumnData, reloadDesignTemplateMapping, getTMPFilterRegType, getTMPFilterRegSubType, getTMPFilterSubmit } from '../../actions';\nimport TemplateFilter from './TemplateFilter';\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport { getControlMap, showEsign, convertDateValuetoString, constructOptionList } from '../../components/CommonScript'; //searchData, sortData,\n\nimport ListMaster from '../../components/list-master/list-master.component'; // import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport AddDesignTemplateMapping from './AddDesignTemplateMapping';\nimport Esign from '../../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { designProperties, formCode, transactionStatus } from '../../components/Enumeration';\nimport { Affix } from 'rsuite';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DesignTemplateMapping extends React.Component {\n  constructor(props) {\n    super(props); // const dataState = {\n    //     skip: 0,\n    //     take: 10,\n    // };\n\n    this.filterComboChange = (event, fieldname) => {\n      if (event !== null) {\n        // let uRL = \"\";\n        let inputData = [];\n\n        if (fieldname === \"sampleType\") {\n          inputData = {\n            userinfo: this.props.Login.userInfo,\n            nflag: 1,\n            nsampletypecode: parseInt(event.value)\n          };\n          let masterData = { ...this.props.Login.masterData,\n            defaultsampletype: event\n          };\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getTMPFilterRegType(inputParam);\n        } else if (fieldname === \"registrationType\") {\n          inputData = {\n            userinfo: this.props.Login.userInfo,\n            nregtypecode: parseInt(event.value),\n            nsampletypecode: this.props.Login.masterData.defaultsampletype.value\n          };\n          let masterData = { ...this.props.Login.masterData,\n            defaultregtype: event\n          };\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getTMPFilterRegSubType(inputParam);\n        } else {\n          let masterData = { ...this.props.Login.masterData,\n            defaultregsubtype: event\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = {\n        userinfo: this.props.Login.userInfo // nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value || -1 : -1),\n        // nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value || -1 : -1),\n        // nsampletypecode: this.props.Login.masterData.realSampleValue.value,\n\n      };\n      let inputParam = {\n        masterData: this.props.Login.masterData,\n        inputData\n      };\n      this.props.reloadDesignTemplateMapping(inputParam);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      let inputData = {\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: parseInt(this.props.Login.masterData.defaultregtype ? this.props.Login.masterData.defaultregtype.value || -1 : -1),\n        nregsubtypecode: parseInt(this.props.Login.masterData.defaultregsubtype ? this.props.Login.masterData.defaultregsubtype.value || -1 : -1),\n        nsampletypecode: this.props.Login.masterData.defaultsampletype.value\n      };\n      let masterData = { ...this.props.Login.masterData,\n        realSampleValue: this.props.Login.masterData.defaultsampletype,\n        realRegTypeValue: this.props.Login.masterData.defaultregtype,\n        realRegSubTypeValue: this.props.Login.masterData.defaultregsubtype\n      };\n      let inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getTMPFilterSubmit(inputParam);\n    };\n\n    this.onApproveClick = () => {\n      if (this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus !== transactionStatus.RETIRED) {\n        const ncontrolCode = this.state.controlMap.has(\"ApproveDesignTemplateMapping\") && this.state.controlMap.get(\"ApproveDesignTemplateMapping\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = undefined;\n        inputData[\"designtemplatemapping\"] = {\n          \"ndesigntemplatemappingcode\": this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"] ? this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"].Value : \"\"\n        };\n        inputData[\"designtemplatemapping\"] = this.props.Login.masterData.selectedDesignTemplateMapping;\n        postParam = {\n          inputListName: \"DesignTemplateMapping\",\n          selectedObject: \"selectedDesignTemplateMapping\",\n          primaryKeyField: \"ndesigntemplatemappingcode\"\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo\n          },\n          classUrl: 'designtemplatemapping',\n          methodUrl: \"DesignTemplateMapping\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"approve\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATERETIRED\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = () => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteTemplate());\n    };\n\n    this.deleteTemplate = () => {\n      if (this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.DRAFT) {\n        const ncontrolCode = this.state.controlMap.has(\"DeleteDesignTemplateMapping\") && this.state.controlMap.get(\"DeleteDesignTemplateMapping\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = undefined;\n        inputData[\"designtemplatemapping\"] = {\n          \"ndesigntemplatemappingcode\": this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"] ? this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"].Value : \"\"\n        };\n        inputData[\"designtemplatemapping\"] = this.props.Login.masterData.selectedDesignTemplateMapping;\n        postParam = {\n          inputListName: \"DesignTemplateMapping\",\n          selectedObject: \"selectedDesignTemplateMapping\",\n          primaryKeyField: \"ndesigntemplatemappingcode\"\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo\n          },\n          classUrl: 'designtemplatemapping',\n          methodUrl: \"DesignTemplateMapping\",\n          inputData: inputData,\n          operation: \"delete\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"delete\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"approve\" || this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.getJsondata = templatedata => {\n      let displayFields = [{\n        [designProperties.LABEL]: '{\"en-US\":\"Reg Date\"}',\n        [designProperties.VALUE]: 'dregdate'\n      }];\n      let listItem = [];\n      let gridItem = [];\n      let gridMoreItem = [];\n      let editable = [];\n      let subsamplelistitem = [];\n      let sampledatefields = [{\n        [designProperties.VALUE]: 'dregdate'\n      }];\n      let subsampledatefields = [];\n      let testdatefields = [{\n        [designProperties.VALUE]: 'dtransactiondate'\n      }];\n      this.props.Login.subSampleTemplate && this.props.Login.subSampleTemplate.jsondata.map(row => row.children && row.children.map(column => {\n        column.children && column.children.map(component => {\n          if (component.hasOwnProperty('children')) {\n            component.children.map(componentRow => {\n              componentRow.inputtype === 'date' && subsampledatefields.push(componentRow.label);\n              subsamplelistitem.push({\n                [designProperties.LABEL]: componentRow.displayname,\n                [designProperties.VALUE]: componentRow.label\n              });\n            });\n          } else {\n            component.inputtype === 'date' && subsampledatefields.push(component.label);\n            subsamplelistitem.push({\n              [designProperties.LABEL]: component.displayname,\n              [designProperties.VALUE]: component.label\n            });\n          }\n        });\n      }));\n      templatedata && templatedata.map(row => row.children && row.children.map(column => {\n        column.children && column.children.map(component => {\n          if (component.hasOwnProperty('children')) {\n            // let combinedField = [];\n            component.children.map(componentRow => {\n              // combinedField.push(componentRow.label)\n              componentRow.inputtype === 'date' && sampledatefields.push(componentRow.label);\n              displayFields.push({\n                [designProperties.LABEL]: componentRow.displayname,\n                [designProperties.VALUE]: componentRow.label\n              });\n              componentRow.templatemandatory && listItem.push({\n                [designProperties.LABEL]: componentRow.displayname,\n                [designProperties.VALUE]: componentRow.label\n              });\n\n              if (componentRow.mandatory || componentRow.templatemandatory) {\n                gridItem.push({\n                  [designProperties.LABEL]: componentRow.displayname,\n                  [designProperties.VALUE]: componentRow.label\n                });\n              } else {\n                gridMoreItem.push({\n                  [designProperties.LABEL]: componentRow.displayname,\n                  [designProperties.VALUE]: componentRow.label\n                });\n              }\n\n              if (!componentRow.templatemandatory) {\n                editable.push({\n                  label: componentRow.label,\n                  editableuntill: [17]\n                });\n              }\n\n              return null;\n            }); // let fieldSet = combinedField.join(\"&\")\n            // displayFields.push(fieldSet);\n            // componentRow.templatemandatory && listItem.push(fieldSet)\n            // gridMoreItem.push(fieldSet);\n          } else {\n            component.inputtype === 'date' && sampledatefields.push(component.label);\n            displayFields.push({\n              [designProperties.LABEL]: component.displayname,\n              [designProperties.VALUE]: component.label\n            });\n            component.templatemandatory && listItem.push({\n              [designProperties.LABEL]: component.displayname,\n              [designProperties.VALUE]: component.label\n            });\n\n            if (component.mandatory || component.templatemandatory) {\n              gridItem.push({\n                [designProperties.LABEL]: component.displayname,\n                [designProperties.VALUE]: component.label\n              });\n            } else {\n              gridMoreItem.push({\n                [designProperties.LABEL]: component.displayname,\n                [designProperties.VALUE]: component.label\n              });\n            }\n\n            if (!component.templatemandatory) {\n              editable.push({\n                label: component.label,\n                editableuntill: [17]\n              });\n            }\n\n            return null;\n          }\n        });\n      }));\n      let obj = {\n        sampledisplayfields: displayFields,\n        samplelistitem: listItem,\n        samplegriditem: gridItem,\n        samplegridmoreitem: gridMoreItem,\n        subsamplelistitem,\n        sampledatefields,\n        subsampledatefields,\n        testdatefields,\n        ...this.props.Login.testListFields\n      };\n      let jsondata = {\n        [formCode.SAMPLEREGISTRATION]: { ...obj,\n          editable\n        },\n        [formCode.RESULTENTRY]: { ...obj\n        },\n        [formCode.APPROVAL]: { ...obj\n        }\n      };\n      return jsondata;\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      inputData = {\n        \"userinfo\": this.props.Login.userInfo,\n        \"ncontrolcode\": this.props.Login.ncontrolCode,\n        \"nreactregtemplatecode\": this.state.selectedRecord.nreactregtemplatecode.value,\n        \"nsampletypecode\": this.props.Login.masterData.realSampleValue.value,\n        \"nregtypecode\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1,\n        \"nregsubtypecode\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1,\n        \"jsondataobj\": this.getJsondata(this.state.selectedRecord.nreactregtemplatecode.item.jsondata)\n      }; // this.state.selectedRecord.nreactregtemplatecode.item.jsondata\n\n      let postParam = undefined;\n      inputData[\"designtemplatemapping\"] = {\n        \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n      };\n      this.designtemplatemappingFieldList.map(item => {\n        return inputData[\"designtemplatemapping\"][item] = this.state.selectedRecord[item];\n      });\n      const inputParam = {\n        classUrl: \"designtemplatemapping\",\n        methodUrl: \"DesignTemplateMapping\",\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.state = {\n      isOpen: false,\n      designtemplatemappingData: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      userLogged: true,\n      selectedDesignTemplateMapping: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showAccordian: true,\n      selectedInput: \"\"\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchFieldList = [\"sregtemplatename\", \"sversionno\", \"stransdisplaystatus\"];\n    this.designtemplatemappingFieldList = ['ndesigntemplatemappingcode', 'nsampletypecode', 'nformcode', 'nregtypecode', 'nregsubtypecode', 'nformwisetypecode', 'nreactregtemplatecode', 'ntransactionstatus', 'nversionno']; //'nmahcode',\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const Layout = this.props.Login.masterData.selectedDesignTemplateMapping && this.props.Login.masterData.selectedDesignTemplateMapping.jsondata;\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.selectedDesignTemplateMapping ? this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.ACTIVE || this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.APPROVED : false) {\n      userStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.selectedDesignTemplateMapping && this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.RETIRED) {\n      userStatusCSS = \"outline-danger\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddDesignTemplateMapping\") && this.state.controlMap.get(\"AddDesignTemplateMapping\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteDesignTemplateMapping\") && this.state.controlMap.get(\"DeleteDesignTemplateMapping\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveDesignTemplateMapping\") && this.state.controlMap.get(\"ApproveDesignTemplateMapping\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"DesignTemplateMapping\",\n      selectedObject: \"selectedDesignTemplateMapping\",\n      primaryKeyField: \"ndesigntemplatemappingcode\",\n      fetchUrl: \"designtemplatemapping/getDesignTemplateMapping\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      // unchangeList: [\"FromDate\", \"ToDate\"],\n      searchFieldList: this.searchFieldList\n    };\n    this.validationColumnList = [{\n      \"idsName\": \"IDS_TEMPLATENAME\",\n      \"dataField\": \"nreactregtemplatecode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFields = [];\n    this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\"); // let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate,\n    //     this.props.Login.masterData && this.props.Login.masterData.ToDate,\n    //     this.props.Login.userInfo)\n    // const breadCrumbData = [\n\n    let breadCrumbData = [{\n      \"label\": \"IDS_SAMPLETYPE\",\n      \"value\": this.props.Login.masterData.realSampleValue ? this.props.Login.masterData.realSampleValue.label : \"-\"\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.label : \"-\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.label : \"-\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }), breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"DesignTemplateMapping\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.DesignTemplateMapping,\n      getMasterDetail: designtemplatemapping => this.props.getDesignTemplateMappingDetail(designtemplatemapping, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedDesignTemplateMapping,\n      primaryKeyField: \"ndesigntemplatemappingcode\",\n      mainField: \"sregtemplatename\",\n      firstField: \"sversionno\",\n      secondField: \"stransdisplaystatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getDesignTemplateMappingComboService(\"DesignTemplateMapping\", \"create\", this.props.Login.userInfo, this.props.Login.masterData.realSampleValue ? this.props.Login.masterData.realSampleValue.value : -1, this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1, this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1, addId),\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_TEMPLATEFILTER\": /*#__PURE__*/React.createElement(TemplateFilter, {\n          formatMessage: this.props.intl.formatMessage,\n          filterSampletype: this.state.listSampletype || [],\n          filterRegistrationType: this.state.listRegistrationType || [],\n          filterRegistrationSubType: this.state.listRegistrationSubType || [],\n          defaultsampletype: this.props.Login.masterData[\"defaultsampletype\"] || {},\n          defaultregsubtype: this.props.Login.masterData[\"defaultregsubtype\"] || [],\n          defaultregtype: this.props.Login.masterData[\"defaultregtype\"] || [],\n          filterComboChange: this.filterComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping.length > 0 && this.props.Login.masterData.selectedDesignTemplateMapping ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.selectedDesignTemplateMapping.sregtemplatename)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 61\n      }\n    }, `${this.props.intl.formatMessage({\n      id: \"IDS_VERSION\"\n    })} : ${this.props.Login.masterData.selectedDesignTemplateMapping.sversionno}`, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedDesignTemplateMapping.stransdisplaystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.onApproveClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1 // onClick={() => this.ConfirmDelete(this.state.approveId)}>\n      ,\n      onClick: () => this.ConfirmDelete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 69\n      }\n    }))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 45\n      }\n    }, Layout ? Layout.map(item => /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 61\n      }\n    }, item.children.length > 0 ? item.children.map(column => /*#__PURE__*/React.createElement(Col, {\n      md: 12 / item.children.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 73\n      }\n    }, column.children.map(component => {\n      return component.hasOwnProperty(\"children\") ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 93\n        }\n      }, component.children.map(componentrow => /*#__PURE__*/React.createElement(Col, {\n        md: 12 / componentrow.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 105\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 109\n        }\n      }, componentrow.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 109\n        }\n      }, \"-\"))))) : /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 97\n        }\n      }, component.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 97\n        }\n      }, \" \", \"-\"));\n    }))) : \"\")) : \"\")) : \"\"))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddDesignTemplateMapping, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        formatMessage: this.props.intl.formatMessage,\n        designtemplatemappingList: this.props.Login.designtemplatemappingList,\n        selectedDesignTemplateMapping: this.props.Login.masterData.selectedDesignTemplateMapping || {},\n        operation: this.props.Login.operation,\n        userLogged: this.props.Login.userLogged,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }));\n  } // onFilterSubmit = () => {\n  //     this.reloadData()\n  // }\n\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      listSampletype,\n      listRegistrationType,\n      listRegistrationSubType\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        updateState = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      updateState = true;\n      const selectedInput = {};\n      let Taglstsampletype;\n      let TaglistRegistrationType;\n      let TaglistRegistrationSubType;\n\n      if (this.props.Login.masterData.SampleTypes) {\n        Taglstsampletype = constructOptionList(this.props.Login.masterData.SampleTypes || [], \"nsampletypecode\", \"ssampletypename\", \"nsorter\", \"undefined\", undefined);\n        listSampletype = Taglstsampletype.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.registrationTypes) {\n        TaglistRegistrationType = constructOptionList(this.props.Login.masterData.registrationTypes || [], \"nregtypecode\", \"sregtypename\", undefined, undefined, undefined);\n        listRegistrationType = TaglistRegistrationType.get(\"OptionList\");\n      }\n\n      if (this.props.Login.masterData.registrationSubTypes) {\n        TaglistRegistrationSubType = constructOptionList(this.props.Login.masterData.registrationSubTypes || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", \"ascending\", undefined);\n        listRegistrationSubType = TaglistRegistrationSubType.get(\"OptionList\");\n      }\n\n      if (updateState) {\n        this.setState({\n          selectedRecord,\n          controlMap,\n          userRoleControlRights,\n          listSampletype,\n          listRegistrationType,\n          listRegistrationSubType,\n          selectedInput\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getDesignTemplateMappingDetail,\n  getDesignTemplateMappingComboService,\n  filterColumnData,\n  reloadDesignTemplateMapping,\n  getTMPFilterRegType,\n  getTMPFilterRegSubType,\n  getTMPFilterSubmit\n})(injectIntl(DesignTemplateMapping));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/designtemplatemapping/DesignTemplateMapping.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faUserLock","faClock","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getDesignTemplateMappingDetail","getDesignTemplateMappingComboService","filterColumnData","reloadDesignTemplateMapping","getTMPFilterRegType","getTMPFilterRegSubType","getTMPFilterSubmit","TemplateFilter","ContentPanel","ReadOnlyText","getControlMap","showEsign","convertDateValuetoString","constructOptionList","ListMaster","SlideOutModal","AddDesignTemplateMapping","Esign","DEFAULT_RETURN","BreadcrumbComponent","ListWrapper","designProperties","formCode","transactionStatus","Affix","ConfirmMessage","ReactTooltip","mapStateToProps","state","Login","DesignTemplateMapping","Component","constructor","props","filterComboChange","event","fieldname","inputData","userinfo","userInfo","nflag","nsampletypecode","parseInt","value","masterData","defaultsampletype","inputParam","nregtypecode","defaultregtype","defaultregsubtype","updateInfo","typeName","data","reloadData","searchRef","current","openFilter","showFilter","closeFilter","onFilterSubmit","nregsubtypecode","realSampleValue","realRegTypeValue","realRegSubTypeValue","onApproveClick","selectedDesignTemplateMapping","ntransactionstatus","RETIRED","ncontrolCode","controlMap","has","get","ncontrolcode","postParam","undefined","Value","inputListName","selectedObject","primaryKeyField","classUrl","methodUrl","operation","saveType","esignNeeded","userRoleControlRights","nformcode","loadEsign","screenData","openModal","warn","intl","formatMessage","id","ConfirmDelete","confirmMessage","confirm","deleteTemplate","DRAFT","validateEsign","sreason","selectedRecord","password","closeModal","selectedId","onComboChange","comboData","fieldName","setState","onInputOnChange","target","type","name","checked","YES","NO","handleDateChange","dateName","dateValue","getJsondata","templatedata","displayFields","LABEL","VALUE","listItem","gridItem","gridMoreItem","editable","subsamplelistitem","sampledatefields","subsampledatefields","testdatefields","subSampleTemplate","jsondata","map","row","children","column","component","hasOwnProperty","componentRow","inputtype","push","label","displayname","templatemandatory","mandatory","editableuntill","obj","sampledisplayfields","samplelistitem","samplegriditem","samplegridmoreitem","testListFields","SAMPLEREGISTRATION","RESULTENTRY","APPROVAL","onSaveClick","formRef","nreactregtemplatecode","item","nmastersitecode","designtemplatemappingFieldList","onTabChange","tabProps","screenName","isOpen","designtemplatemappingData","masterStatus","error","userLogged","Map","showAccordian","selectedInput","createRef","searchFieldList","getDerivedStateFromProps","render","Layout","userStatusCSS","ACTIVE","APPROVED","addId","deleteId","approveId","filterParam","fetchUrl","fecthInputObject","validationColumnList","mandatoryFields","forEach","breadCrumbData","length","searchedData","designtemplatemapping","listSampletype","listRegistrationType","listRegistrationSubType","sregtemplatename","sversionno","stransdisplaystatus","indexOf","componentrow","designtemplatemappingList","componentDidUpdate","previousProps","updateState","Object","values","Taglstsampletype","TaglistRegistrationType","TaglistRegistrationSubType","SampleTypes","registrationTypes","registrationSubTypes","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserLock, faClock } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getDesignTemplateMappingDetail,\r\n    getDesignTemplateMappingComboService, filterColumnData, reloadDesignTemplateMapping, getTMPFilterRegType, getTMPFilterRegSubType, getTMPFilterSubmit\r\n} from '../../actions';\r\nimport TemplateFilter from './TemplateFilter';\r\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\r\nimport { getControlMap, showEsign, convertDateValuetoString, constructOptionList } from '../../components/CommonScript';//searchData, sortData,\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\n// import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddDesignTemplateMapping from './AddDesignTemplateMapping'\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { designProperties, formCode, transactionStatus } from '../../components/Enumeration';\r\n\r\nimport { Affix } from 'rsuite';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass DesignTemplateMapping extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // const dataState = {\r\n        //     skip: 0,\r\n        //     take: 10,\r\n        // };\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            designtemplatemappingData: [],\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedDesignTemplateMapping: undefined,\r\n\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            selectedInput: \"\",\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"sregtemplatename\", \"sversionno\", \"stransdisplaystatus\"];\r\n\r\n        this.designtemplatemappingFieldList = ['ndesigntemplatemappingcode', 'nsampletypecode', 'nformcode',\r\n            'nregtypecode', 'nregsubtypecode', 'nformwisetypecode', 'nreactregtemplatecode', 'ntransactionstatus', 'nversionno'];//'nmahcode',\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    filterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            // let uRL = \"\";\r\n            let inputData = [];\r\n            if (fieldname === \"sampleType\") {\r\n\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nflag: 1,\r\n                    nsampletypecode: parseInt(event.value),\r\n\r\n                }\r\n                let masterData = { ...this.props.Login.masterData, defaultsampletype: event }\r\n                let inputParam = { masterData, inputData }\r\n                this.props.getTMPFilterRegType(inputParam)\r\n            }\r\n            else if (fieldname === \"registrationType\") {\r\n\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n\r\n                    nregtypecode: parseInt(event.value),\r\n                    nsampletypecode: this.props.Login.masterData.defaultsampletype.value,\r\n\r\n                }\r\n                let masterData = { ...this.props.Login.masterData, defaultregtype: event }\r\n                let inputParam = { masterData, inputData }\r\n                this.props.getTMPFilterRegSubType(inputParam)\r\n            } else {\r\n\r\n                let masterData = { ...this.props.Login.masterData, defaultregsubtype: event }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.props.Login.masterData.selectedDesignTemplateMapping &&\r\n            this.props.Login.masterData.selectedDesignTemplateMapping.jsondata\r\n\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.selectedDesignTemplateMapping ? this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.ACTIVE\r\n            || this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.APPROVED : false) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedDesignTemplateMapping && this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.RETIRED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddDesignTemplateMapping\") && this.state.controlMap.get(\"AddDesignTemplateMapping\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteDesignTemplateMapping\") && this.state.controlMap.get(\"DeleteDesignTemplateMapping\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveDesignTemplateMapping\") && this.state.controlMap.get(\"ApproveDesignTemplateMapping\").ncontrolcode\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"DesignTemplateMapping\",\r\n            selectedObject: \"selectedDesignTemplateMapping\",\r\n            primaryKeyField: \"ndesigntemplatemappingcode\",\r\n            fetchUrl: \"designtemplatemapping/getDesignTemplateMapping\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            // unchangeList: [\"FromDate\", \"ToDate\"],\r\n            searchFieldList: this.searchFieldList\r\n\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"nreactregtemplatecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        // let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate,\r\n        //     this.props.Login.masterData && this.props.Login.masterData.ToDate,\r\n        //     this.props.Login.userInfo)\r\n\r\n        // const breadCrumbData = [\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.realSampleValue ? this.props.Login.masterData.realSampleValue.label : \"-\"\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.label : \"-\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.label : \"-\"\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* Start of get display*/}\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"DesignTemplateMapping\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.DesignTemplateMapping}\r\n                                getMasterDetail={(designtemplatemapping) => this.props.getDesignTemplateMappingDetail(designtemplatemapping, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedDesignTemplateMapping}\r\n                                primaryKeyField=\"ndesigntemplatemappingcode\"\r\n                                mainField=\"sregtemplatename\"\r\n                                firstField=\"sversionno\"\r\n                                secondField=\"stransdisplaystatus\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() => this.props.getDesignTemplateMappingComboService(\"DesignTemplateMapping\", \"create\", this.props.Login.userInfo, this.props.Login.masterData.realSampleValue ? this.props.Login.masterData.realSampleValue.value : -1,\r\n                                    this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1, this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1, addId)}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_TEMPLATEFILTER\":\r\n                                            <TemplateFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterSampletype={this.state.listSampletype || []}\r\n                                                filterRegistrationType={this.state.listRegistrationType || []}\r\n                                                filterRegistrationSubType={this.state.listRegistrationSubType || []}\r\n                                                defaultsampletype={this.props.Login.masterData[\"defaultsampletype\"] || {}}\r\n                                                defaultregsubtype={this.props.Login.masterData[\"defaultregsubtype\"] || []}\r\n                                                defaultregtype={this.props.Login.masterData[\"defaultregtype\"] || []}\r\n\r\n\r\n                                                filterComboChange={this.filterComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n\r\n\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping.length > 0 && this.props.Login.masterData.selectedDesignTemplateMapping ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.selectedDesignTemplateMapping.sregtemplatename}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={10} className=\"d-flex\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                {`${this.props.intl.formatMessage({ id: \"IDS_VERSION\" })} : ${this.props.Login.masterData.selectedDesignTemplateMapping.sversionno}`}\r\n                                                                <span className={`btn btn-outlined ${this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`}>\r\n                                                                    {this.props.Login.masterData.selectedDesignTemplateMapping.stransdisplaystatus}\r\n                                                                </span>\r\n\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={2}>\r\n                                                            <div className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.onApproveClick()}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faThumbsUp} title={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    // onClick={() => this.ConfirmDelete(this.state.approveId)}>\r\n                                                                    onClick={() => this.ConfirmDelete()}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n\r\n                                                {\r\n                                                    Layout ?\r\n                                                        Layout.map((item) =>\r\n                                                            <Row>\r\n                                                                {item.children.length > 0 ?\r\n                                                                    item.children.map((column) =>\r\n                                                                        <Col md={12 / item.children.length}>\r\n                                                                            {\r\n                                                                                column.children.map((component) => {\r\n                                                                                    return (\r\n                                                                                        component.hasOwnProperty(\"children\") ?\r\n                                                                                            <Row>\r\n                                                                                                {component.children.map(componentrow =>\r\n                                                                                                    <Col md={12 / componentrow.length}>\r\n                                                                                                        <FormGroup>\r\n                                                                                                            <FormLabel>{componentrow.label}</FormLabel>\r\n                                                                                                            <ReadOnlyText>{\"-\"}</ReadOnlyText>\r\n                                                                                                        </FormGroup>\r\n                                                                                                    </Col>\r\n                                                                                                )\r\n                                                                                                }\r\n                                                                                            </Row>\r\n                                                                                            :\r\n                                                                                            <FormGroup>\r\n                                                                                                <FormLabel>{component.label}</FormLabel>\r\n                                                                                                <ReadOnlyText> {\"-\"}</ReadOnlyText>\r\n                                                                                            </FormGroup>\r\n                                                                                    )\r\n                                                                                })\r\n                                                                            }\r\n\r\n                                                                        </Col>\r\n                                                                    )\r\n                                                                    : \"\"}\r\n                                                            </Row>\r\n                                                        )\r\n                                                        :\r\n                                                        \"\"\r\n                                                }\r\n                                            </Card.Body>\r\n\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddDesignTemplateMapping\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                designtemplatemappingList={this.props.Login.designtemplatemappingList}\r\n                                selectedDesignTemplateMapping={this.props.Login.masterData.selectedDesignTemplateMapping || {}}\r\n                                operation={this.props.Login.operation}\r\n                                userLogged={this.props.Login.userLogged}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                            />}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n    // onFilterSubmit = () => {\r\n    //     this.reloadData()\r\n    // }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n            // nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value || -1 : -1),\r\n            // nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value || -1 : -1),\r\n            // nsampletypecode: this.props.Login.masterData.realSampleValue.value,\r\n\r\n        };\r\n\r\n        let inputParam = { masterData: this.props.Login.masterData, inputData };\r\n        this.props.reloadDesignTemplateMapping(inputParam);\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false\r\n\r\n        let { selectedRecord, userRoleControlRights, controlMap,\r\n            listSampletype, listRegistrationType, listRegistrationSubType } = this.state;\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]\r\n                    && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                updateState = true;\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            updateState = true;\r\n\r\n            const selectedInput = {}\r\n            let Taglstsampletype;\r\n            let TaglistRegistrationType;\r\n            let TaglistRegistrationSubType;\r\n\r\n\r\n\r\n            if (this.props.Login.masterData.SampleTypes) {\r\n                Taglstsampletype = constructOptionList(this.props.Login.masterData.SampleTypes || [], \"nsampletypecode\", \"ssampletypename\", \"nsorter\", \"undefined\", undefined);\r\n                listSampletype = Taglstsampletype.get(\"OptionList\");\r\n            }\r\n            if (this.props.Login.masterData.registrationTypes) {\r\n                TaglistRegistrationType = constructOptionList(this.props.Login.masterData.registrationTypes || [], \"nregtypecode\", \"sregtypename\", undefined, undefined, undefined);\r\n                listRegistrationType = TaglistRegistrationType.get(\"OptionList\");\r\n            }\r\n            if (this.props.Login.masterData.registrationSubTypes) {\r\n                TaglistRegistrationSubType = constructOptionList(this.props.Login.masterData.registrationSubTypes || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", \"ascending\", undefined);\r\n                listRegistrationSubType = TaglistRegistrationSubType.get(\"OptionList\");\r\n            }\r\n\r\n\r\n            if (updateState) {\r\n                this.setState({\r\n                    selectedRecord, controlMap, userRoleControlRights,\r\n                    listSampletype, listRegistrationType, listRegistrationSubType,\r\n                    selectedInput\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            nregtypecode: parseInt(this.props.Login.masterData.defaultregtype ? this.props.Login.masterData.defaultregtype.value || -1 : -1),\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.defaultregsubtype ? this.props.Login.masterData.defaultregsubtype.value || -1 : -1),\r\n            nsampletypecode: this.props.Login.masterData.defaultsampletype.value,\r\n\r\n        };\r\n        let masterData = {\r\n            ...this.props.Login.masterData,\r\n            realSampleValue: this.props.Login.masterData.defaultsampletype,\r\n            realRegTypeValue: this.props.Login.masterData.defaultregtype,\r\n            realRegSubTypeValue: this.props.Login.masterData.defaultregsubtype\r\n        }\r\n        let inputParam = { masterData, inputData };\r\n        this.props.getTMPFilterSubmit(inputParam);\r\n    }\r\n\r\n    onApproveClick = () => {\r\n        if (this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n            const ncontrolCode = this.state.controlMap.has(\"ApproveDesignTemplateMapping\") && this.state.controlMap.get(\"ApproveDesignTemplateMapping\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            let postParam = undefined;\r\n            inputData[\"designtemplatemapping\"] = { \"ndesigntemplatemappingcode\": this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"] ? this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"].Value : \"\" };\r\n            inputData[\"designtemplatemapping\"] = this.props.Login.masterData.selectedDesignTemplateMapping;\r\n            postParam = { inputListName: \"DesignTemplateMapping\", selectedObject: \"selectedDesignTemplateMapping\", primaryKeyField: \"ndesigntemplatemappingcode\" };\r\n\r\n\r\n\r\n            const inputParam = {\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n\r\n                },\r\n                classUrl: 'designtemplatemapping',\r\n                methodUrl: \"DesignTemplateMapping\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"approve\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_TEMPLATERETIRED\" }));\r\n        }\r\n    }\r\n    ConfirmDelete = () => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteTemplate());\r\n    }\r\n    deleteTemplate = () => {\r\n        if ((this.props.Login.masterData.selectedDesignTemplateMapping.ntransactionstatus === transactionStatus.DRAFT)) {\r\n            const ncontrolCode = this.state.controlMap.has(\"DeleteDesignTemplateMapping\") && this.state.controlMap.get(\"DeleteDesignTemplateMapping\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            let postParam = undefined;\r\n            inputData[\"designtemplatemapping\"] = { \"ndesigntemplatemappingcode\": this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"] ? this.props.Login.masterData.selectedDesignTemplateMapping[\"ndesigntemplatemappingcode\"].Value : \"\" };\r\n            inputData[\"designtemplatemapping\"] = this.props.Login.masterData.selectedDesignTemplateMapping;\r\n            postParam = { inputListName: \"DesignTemplateMapping\", selectedObject: \"selectedDesignTemplateMapping\", primaryKeyField: \"ndesigntemplatemappingcode\" };\r\n\r\n\r\n            const inputParam = {\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n\r\n                },\r\n                classUrl: 'designtemplatemapping',\r\n                methodUrl: \"DesignTemplateMapping\",\r\n                inputData: inputData,\r\n                operation: \"delete\", postParam\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"delete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"approve\"\r\n                || this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    getJsondata = (templatedata) => {\r\n        let displayFields = [{ [designProperties.LABEL]:'{\"en-US\":\"Reg Date\"}',[designProperties.VALUE]:'dregdate'}]\r\n        let listItem = []\r\n        let gridItem = []\r\n        let gridMoreItem = []\r\n        let editable = []\r\n        let subsamplelistitem = [];\r\n        let sampledatefields = [{ [designProperties.VALUE]:'dregdate'}];\r\n        let subsampledatefields = [];\r\n        let testdatefields = [{ [designProperties.VALUE]:'dtransactiondate'}];\r\n        this.props.Login.subSampleTemplate && this.props.Login.subSampleTemplate.jsondata.map(row =>\r\n            row.children && row.children.map(column => {\r\n                column.children && column.children.map(component => {\r\n                    if (component.hasOwnProperty('children')) {\r\n\r\n                        component.children.map(componentRow => {\r\n                            componentRow.inputtype === 'date' && subsampledatefields.push(componentRow.label);\r\n                            subsamplelistitem.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label })\r\n                        }\r\n                        )\r\n                    } else {\r\n                        component.inputtype === 'date' && subsampledatefields.push(component.label);\r\n                        subsamplelistitem.push({ [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label });\r\n                    } \r\n                })\r\n            })\r\n        )\r\n        templatedata && templatedata.map(row =>\r\n            row.children && row.children.map(column => {\r\n                column.children && column.children.map(component => {\r\n                    if (component.hasOwnProperty('children')) {\r\n                        // let combinedField = [];\r\n                        component.children.map(componentRow => {\r\n                            // combinedField.push(componentRow.label)\r\n                            componentRow.inputtype === 'date' && sampledatefields.push(componentRow.label);\r\n                            displayFields.push({ [designProperties.LABEL]:componentRow.displayname,[designProperties.VALUE]:componentRow.label });\r\n                            componentRow.templatemandatory && listItem.push({ [designProperties.LABEL]:componentRow.displayname,[designProperties.VALUE]:componentRow.label })\r\n                            if (componentRow.mandatory || componentRow.templatemandatory) {\r\n                                gridItem.push({ [designProperties.LABEL]:componentRow.displayname,[designProperties.VALUE]:componentRow.label })\r\n                            }\r\n                            else {\r\n                                gridMoreItem.push({ [designProperties.LABEL]:componentRow.displayname,[designProperties.VALUE]:componentRow.label });\r\n                            }\r\n                            if (!componentRow.templatemandatory) {\r\n                                editable.push({ label: componentRow.label, editableuntill: [17] })\r\n                            }\r\n                            return null;\r\n                        })\r\n                        // let fieldSet = combinedField.join(\"&\")\r\n                        // displayFields.push(fieldSet);\r\n                        // componentRow.templatemandatory && listItem.push(fieldSet)\r\n                        // gridMoreItem.push(fieldSet);\r\n                    } else {\r\n                        component.inputtype === 'date' && sampledatefields.push(component.label);\r\n                        displayFields.push({ [designProperties.LABEL]:component.displayname,[designProperties.VALUE]:component.label })\r\n                        component.templatemandatory && listItem.push({ [designProperties.LABEL]:component.displayname,[designProperties.VALUE]:component.label })\r\n                        if (component.mandatory || component.templatemandatory) {\r\n                            gridItem.push({ [designProperties.LABEL]:component.displayname,[designProperties.VALUE]:component.label })\r\n                        } else {\r\n                            gridMoreItem.push({ [designProperties.LABEL]:component.displayname,[designProperties.VALUE]:component.label });\r\n                        }\r\n                        if (!component.templatemandatory) {\r\n                            editable.push({ label: component.label, editableuntill: [17] })\r\n                        }\r\n                        return null;\r\n                    }\r\n\r\n                })\r\n            }\r\n            )\r\n        )\r\n        let obj = {\r\n            sampledisplayfields: displayFields,\r\n            samplelistitem: listItem,\r\n            samplegriditem: gridItem,\r\n            samplegridmoreitem: gridMoreItem,\r\n            subsamplelistitem,\r\n            sampledatefields,\r\n            subsampledatefields,\r\n            testdatefields,\r\n            ...this.props.Login.testListFields\r\n        }\r\n\r\n\r\n        let jsondata = {\r\n            [formCode.SAMPLEREGISTRATION]: {\r\n                ...obj,\r\n                editable\r\n            },\r\n            [formCode.RESULTENTRY]: {\r\n                ...obj,\r\n            },\r\n            [formCode.APPROVAL]: {\r\n                ...obj,\r\n            }\r\n\r\n        }\r\n        return jsondata;\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n\r\n        let inputData = [];\r\n\r\n\r\n\r\n        inputData = {\r\n            \"userinfo\": this.props.Login.userInfo,\r\n            \"ncontrolcode\": this.props.Login.ncontrolCode,\r\n            \"nreactregtemplatecode\": this.state.selectedRecord.nreactregtemplatecode.value,\r\n            \"nsampletypecode\": this.props.Login.masterData.realSampleValue.value,\r\n            \"nregtypecode\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1,\r\n            \"nregsubtypecode\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1,\r\n            \"jsondataobj\": this.getJsondata(this.state.selectedRecord.nreactregtemplatecode.item.jsondata),\r\n        }\r\n        // this.state.selectedRecord.nreactregtemplatecode.item.jsondata\r\n\r\n\r\n        let postParam = undefined;\r\n\r\n        inputData[\"designtemplatemapping\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n        this.designtemplatemappingFieldList.map(item => {\r\n            return inputData[\"designtemplatemapping\"][item] = this.state.selectedRecord[item]\r\n        });\r\n\r\n\r\n        const inputParam = {\r\n            classUrl: \"designtemplatemapping\",\r\n            methodUrl: \"DesignTemplateMapping\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getDesignTemplateMappingDetail,\r\n    getDesignTemplateMappingComboService, filterColumnData, reloadDesignTemplateMapping, getTMPFilterRegType, getTMPFilterRegSubType, getTMPFilterSubmit\r\n})(injectIntl(DesignTemplateMapping));\r\n\r\n"]},"metadata":{},"sourceType":"module"}