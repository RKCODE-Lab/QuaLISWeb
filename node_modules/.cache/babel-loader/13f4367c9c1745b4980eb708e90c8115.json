{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel,Form,Button,FormControl}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PerfectScrollbar from'react-perfect-scrollbar';import{faTrashAlt,faCopy,faPencilAlt,faSync,faPlus,faThumbsUp,faBoxOpen,faBox,faLocationArrow,faFolderMinus,faFolder,faFolderOpen,faArrowRight,faSearch,faTimes,faArrowDown,faHandPointLeft,faArrowUp,faClone,faPuzzlePiece,faCalculator}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import{Lims_JSON_stringify,constructOptionList,getControlMap,onSaveMandatoryValidation,searchData,searchJsonData,showEsign,sortData}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel,SearchIcon}from'../../components/App.styles';//import SortableTree from 'react-sortable-tree'; \nimport DataGrid from'../../components/data-grid/data-grid.component';import{BasicConfig,BasicFuncs,Utils as QbUtils}from\"@react-awesome-query-builder/ui\";import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService,crudMaster,validateEsignCredential,updateStore,getSelectedSampleStorageLocation,filterColumnData,changeStorageCategoryFilter,openPropertyModal,editSampleStorageLocation,approveSampleStorageLocation,getSelectedSampleStorageVersion,fetchStorageCategory,copySampleStorageVersion,crudSampleStorageLocation,validateEsignCredentialStorage,crudMasterstorage}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';import{MediaLabel,ProductList}from'../product/product.styled';// import ReactTooltip from 'react-tooltip';\nimport{uuid}from\"uuidv4\";import TreeEditable from\"../../components/form-tree-editable/TreeEditable\";import TreeViewEditable from\"../../components/form-tree-editable/form-tree-editable.component\";import{getItemPath,mapTree,removeItems}from\"@progress/kendo-react-treelist\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';// import AddTreeview from './AddTreeview';\n// import AddTreeProperties from './AddTreeProperties';\nimport{Splitter}from'@progress/kendo-react-layout';import TransactionListMaster from'../../components/TransactionListMaster';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import SplitterLayout from'react-splitter-layout';//import StorageCategoryFilter from './StorageCategoryFilter';\nimport{transactionStatus}from'../../components/Enumeration';import Esign from'../audittrail/Esign';import{TreeViewDragAnalyzer,moveTreeViewItem}from'@progress/kendo-react-treeview';import ModalShow from'../../components/ModalShow';import rsapi from'../../rsapi';//import AddSampleStorageMapping from './AddSampleStorageMapping';\nimport Axios from'axios';//import StorageMappingFilter from './StorageMappingFilter';\nimport Preloader from'../../components/preloader/preloader.component';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';import{groupBy,process}from'@progress/kendo-data-query';import MatrixComponent from'../../components/MatrixComponent';import FilterQueryBuilder from'../../components/FilterQueryBuilder';import{Grid,GridColumn}from'@progress/kendo-react-grid';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import MoveSample from'../storagemanagement/MoveSample';import DataGridForStorage from'./DataGridForStorage';import{initRequest}from'../../actions/LoginAction';import{bindActionCreators}from'redux';var SampleStorageMove=/*#__PURE__*/function(_Component){_inherits(SampleStorageMove,_Component);var _super=_createSuper(SampleStorageMove);function SampleStorageMove(props){var _this$state;var _this;_classCallCheck(this,SampleStorageMove);_this=_super.call(this,props);_this.dragOverCnt=0;_this.isDragDrop=false;_this.SEPARATOR='_';_this.uniqueIDArr=[];_this.countforTree=0;_this.pointedItem=undefined;_this.getitemPath={};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.state.loadEsign;var openModal=_this.state.openModal;var selectedRecord=_this.state.selectedRecord;if(loadEsign){//  loadEsign = false;\nopenModal=true;loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);}else{openModal=false;selectedRecord={};}_this.setState({selectedRecord:selectedRecord,// ismoveSample: false,\nopenModal:openModal,isInitialRender:true,isFilterPopup:false,loadEsign:false});};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties(saveType,formRef);}else if(_this.state.openSpreadSheet&&!_this.state.ismoveSample){_this.CRUDSampleStorageTransaction(_objectSpread(_objectSpread({},_this.state.editedsheetData),{},{nsamplestoragemappingcode:_this.state.isMultiSampleAdd?Object.keys(_this.state.sheetData).map(function(nsamplestoragemappingcode){return nsamplestoragemappingcode;}).join(\",\"):_this.state.editedsheetData.nsamplestoragemappingcode.toString(),nsamplestoragelocationcode:_this.state.editedsheetData.nsamplestoragelocationcode,sheetData:JSON.stringify(_this.state.sheetData?_this.state.sheetData:{}),sheetUpdate:true,userinfo:_this.props.Login.userInfo,isMultiSampleAdd:_this.state.isMultiSampleAdd}),'create');}else if(_this.state.ismoveSample){var destinationPathlst=[];var dataResult=_this.state.dataResult;dataResult.data.map(function(item){item.items.map(function(item){if(item.hasOwnProperty('selected')&&item.selected){destinationPathlst.push(item);}});});if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.state.ncontrolcode)){var masterData=_this.state.masterData;var inputParam={methodUrl:\"SampleStorageTransaction\",operation:\"update\",classUrl:\"samplestoragemove\",inputData:_this.state.isMultiContainermove?_objectSpread(_objectSpread({selectedContainers:JSON.stringify(destinationPathlst),nsourcemappingcode:JSON.stringify(destinationPathlst.map(function(y){return y.nsamplestoragemappingcode;})),destinationPathCount:destinationPathlst.length,isMultiContainermove:true,nsamplestoragelocationcode:_this.state.selectedRecord.nsamplestoragelocationcode.value},_this.state.masterData),{},{userinfo:_this.props.Login.userInfo}):_objectSpread(_objectSpread({nsourcemappingcode:_this.state.editedsheetData.nsamplestoragemappingcode,nsamplestoragelocationcode:_this.state.selectedRecord.nsamplestoragelocationcode.value,nsamplestoragemappingcode:_this.state.selectedRecord.nsamplestoragemappingcode.value,nprojecttypecode:_this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,filterprojecttypecode:_this.state.selectedProjectType.value,ssamplestoragelocationname:_this.state.editedsheetData.ssamplestoragelocationname,ssamplestoragepathname:_this.state.editedsheetData.scontainerpath,stosamplestoragelocationname:_this.state.selectedRecord.nsamplestoragelocationcode.label,stosamplestoragepathname:_this.state.selectedRecord.nsamplestoragemappingcode.label,sboxid:_this.state.editedsheetData.sboxid,stoboxid:_this.state.selectedRecord.nsamplestoragemappingcode.item.sboxid},_this.state.masterData),{},{userinfo:_this.props.Login.userInfo})};var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData}}};_this.props.updateStore(updateInfo);}else{if(_this.state.isMultiContainermove){_this.CRUDSampleStorageTransaction({selectedContainers:JSON.stringify(destinationPathlst),nsourcemappingcode:JSON.stringify(destinationPathlst.map(function(y){return y.nsamplestoragemappingcode;})),destinationPathCount:destinationPathlst.length,isMultiContainermove:true,nsamplestoragelocationcode:_this.state.selectedRecord.nsamplestoragelocationcode.value,// nsamplestoragemappingcode: this.state.selectedRecord.nsamplestoragemappingcode.value,\n// nprojecttypecode: this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,\nfilterquery:_this.state.submittedselectedRecord.filterquery+\" and nprojecttypecode=\"+_this.state.selectedProjectType.value,userinfo:_this.props.Login.userInfo},'update');}else{_this.CRUDSampleStorageTransaction({nsourcemappingcode:_this.state.editedsheetData.nsamplestoragemappingcode,nsamplestoragelocationcode:_this.state.selectedRecord.nsamplestoragelocationcode.value,nsamplestoragemappingcode:_this.state.selectedRecord.nsamplestoragemappingcode.value,nprojecttypecode:_this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,filterprojecttypecode:_this.state.selectedProjectType.value,ssamplestoragelocationname:_this.state.editedsheetData.ssamplestoragelocationname,ssamplestoragepathname:_this.state.editedsheetData.scontainerpath,stosamplestoragelocationname:_this.state.selectedRecord.nsamplestoragelocationcode.label,stosamplestoragepathname:_this.state.selectedRecord.nsamplestoragemappingcode.label,sboxid:_this.state.editedsheetData.sboxid,stoboxid:_this.state.selectedRecord.nsamplestoragemappingcode.item.sboxid,filterquery:_this.state.submittedselectedRecord.filterquery+\" and nprojecttypecode=\"+_this.state.selectedProjectType.value,userinfo:_this.props.Login.userInfo},'update');}}}else{_this.onSaveSampleStorageTransaction(saveType,formRef);}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){_this.onFilterSubmit();};_this.onEditSampleStorageLocation=function(selectedSampleStorageVersion,userInfo,editId){_this.handleSearch();_this.setState({searchedTreeData:undefined});if(_this.searchRef.current){_this.searchRef.current.value=\"\";}var isOnlyDraft=false;if(_this.props.Login.masterData.sampleStorageVersion&&_this.props.Login.masterData.sampleStorageVersion.length>1){isOnlyDraft=true;}_this.props.editSampleStorageLocation(selectedSampleStorageVersion,userInfo,isOnlyDraft,editId);};_this.openStorageMapping=function(addId){_this.addSampleStorageMapping({userInfo:_this.props.Login.userInfo,addId:addId});};_this.deletesamplestoragemapping=function(param){_this.CRUDSampleStorageTransaction({'nsamplestoragelocationcode':_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,'nsamplestoragemappingcode':param.nsamplestoragemappingcode,userinfo:_this.props.Login.userInfo},'delete');};_this.addMultipleSample=function(param){_this.setState({//sheetData: JSON.parse(response[0].data.sheetData),\nopenModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});};_this.opensearch=function(){_this.setState({openModal:true,isFilterPopup:true,openSpreadSheet:false,ismoveSample:false,selectedRecord:_objectSpread({},_this.state.submittedselectedRecord)||_objectSpread({},_this.state.selectedRecord)});};_this.addSample=function(param,nflag){_this.setState({loading:true});var urlArray=[];var groupedArray=_this.processWithGroups(_this.state.masterData.sampleStoragetransaction||[],_this.state.dataStateChange?_this.state.dataStateChange:{take:10,skip:0}).data;var url1=rsapi.post(\"samplestoragetransaction/getsamplestoragemappingSheetData\",{isMultiSampleAdd:nflag===2?true:false,nsamplestoragemappingcode:nflag===2?groupedArray.map(function(groupedItem){return groupedItem.items.map(function(item){return item.nsamplestoragemappingcode;});}).join(\",\"):param.nsamplestoragemappingcode.toString()});urlArray=[url1];Axios.all(urlArray).then(function(response){if(nflag===2){_this.setState({sheetData:JSON.parse(response[0].data.sheetData),AdditionalFieldsComponentData:JSON.parse(response[0].data.AdditionalFieldsComponentData),openModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false,loadEsign:false,ismoveSample:false});}else{_this.setState({sheetData:JSON.parse(response[0].data.sheetData),AdditionalFieldsComponentData:JSON.parse(response[0].data.AdditionalFieldsComponentData),openModal:true,isMultiSampleAdd:false,openSpreadSheet:true,editedsheetData:param,Rows:param.nrow,columns:param.ncolumn,loading:false,loadEsign:false,ismoveSample:false});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var selectedRecordFilter=_this.state.selectedRecordFilter||{};var selectedProjectType=_this.state.selectedProjectType;var masterData=_this.state.masterData;if(fieldName==='nstoragecategorycode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainertypecode'){return _this.getContainerStructure({userinfo:_this.props.Login.userInfo,ncontainertypecode:comboData.value},fieldName,comboData);}else if(fieldName==='nprojecttypecode'){if(selectedProjectType.value!==comboData.value){masterData=_objectSpread(_objectSpread({},masterData),{},{sampleStoragetransaction:[]});}_this.setState({masterData:masterData,selectedProjectType:{label:comboData.label,value:comboData.value}});}else if(fieldName==='ncontainerstructurecode'){selectedRecord['nrow']=comboData.item.nrow?comboData.item.nrow:1;selectedRecord['ncolumn']=comboData.item.ncolumn?comboData.item.ncolumn:1;}else if(fieldName==='nsamplestoragelocationcode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:_this.state.selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value},fieldName,comboData);}if(fieldName==='nsamplestorageversioncode'){selectedRecordFilter[fieldName]=comboData;_this.setState({selectedRecordFilter:selectedRecordFilter});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,selectedRecordFilter:selectedRecordFilter});}};_this.onSaveSampleStorageTransaction=function(saveType){var selectedRecord=_this.state.selectedRecord;var containerpathCodeArray=[];if(_this.state.operation==='create'){containerpathCodeArray=selectedRecord['nsamplestoragecontainerpathcode'].map(function(item){return item.value;});}var inputParam={nsamplestoragetransactioncode:selectedRecord['nsamplestoragetransactioncode']?parseInt(selectedRecord['nsamplestoragetransactioncode']):0,nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,nsamplestoragemappingcode:selectedRecord['nsamplestoragemappingcode']?parseInt(selectedRecord['nsamplestoragemappingcode']):0,ncontainertypecode:-1,nproductcode:selectedRecord['nproductcode'].value,ndirectionmastercode:-1,ssamplestoragemappingname:\"-\",nsamplestoragecontainerpathcode:_this.state.operation==='create'?JSON.stringify(containerpathCodeArray):parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),containerpathsize:containerpathCodeArray.length,nneedposition:4,ncontainerstructurecode:-1,nquantity:selectedRecord['nquantity']?parseInt(selectedRecord['nquantity']):1,userinfo:_this.props.Login.userInfo};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.CRUDSampleStorageTransaction(inputParam,_this.state.operation);}};_this.getsamplestoragetransaction=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/getsamplestoragetransaction\",{userinfo:_this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.childDataChange=function(selectedRecord,availableContainersdata){_this.setState({availableContainers:availableContainersdata,selectedRecord:_objectSpread({},selectedRecord),isInitialRender:false});};_this.childSheetDataChange=function(sheetData){_this.setState({// selectedRecord: {\n//     ...this.state.selectedRecord,\n//     sheetData: {\n//         ...this.state.selectedRecord.sheetData,\n//         ...sheetData\n//     }\n// },\nsheetData:_objectSpread({},sheetData),isInitialRender:false});};_this.getActiveSampleStorageMappingById=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/getActiveSampleStorageMappingById\",{nsamplestoragelocationcode:inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,userinfo:userinfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data)//,\n// selectedRecord: {\n//     ...this.state.selectedRecord\n//    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\n// }\n,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.filterColumnData=function(filterValue,filterParam){var masterData=filterParam.masterData;var primaryKeyValue=0;var searchedData=undefined;if(filterValue===\"\"){if(masterData[filterParam.inputListName]&&masterData[filterParam.inputListName].length>0){primaryKeyValue=masterData[filterParam.inputListName][0][filterParam.primaryKeyField];}}else{if(filterParam.isjsondata){searchedData=searchJsonData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}else{searchedData=searchData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}if(searchedData.length>0){primaryKeyValue=searchedData[0][filterParam.primaryKeyField];}}if(primaryKeyValue!==0){_this.setState({loading:true});return rsapi.post(filterParam.fetchUrl,_objectSpread(_objectSpread({},filterParam.fecthInputObject),{},_defineProperty({},filterParam.primaryKeyField,primaryKeyValue))).then(function(response){masterData[\"searchedData\"]=searchedData;masterData=_objectSpread(_objectSpread({},masterData),response.data);if(filterParam.sortField){sortData(masterData,filterParam.sortOrder,filterParam.sortField);}else{sortData(masterData);}_this.setState({masterData:masterData,loading:false,skip:0,take:10,selectedId:null});}).catch(function(error){_this.setState({loading:false});if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});}else{masterData[filterParam.selectedObject]=undefined;masterData[\"searchedData\"]=[];Object.keys(masterData).forEach(function(item){if(item!==filterParam.inputListName&&item!==filterParam.selectedObject&&filterParam.unchangeList&&filterParam.unchangeList.indexOf(item)===-1)masterData[item]=[];});_this.setState({masterData:masterData,operation:null,modalName:undefined,loading:false});}};_this.ConfirmMove=function(){var destinationPathlst=[];var dataResult=_this.state.dataResult;dataResult.data.map(function(item){item.items.map(function(item){if(item.hasOwnProperty('selected')&&item.selected){destinationPathlst.push(item);}});});var inputData={isok:true,filterprojecttypecode:_this.state.selectedProjectType.value,selectedContainers:JSON.stringify(destinationPathlst),nsourcemappingcode:JSON.stringify(destinationPathlst.map(function(y){return y.nsamplestoragemappingcode;})),destinationPathCount:destinationPathlst.length,isMultiContainermove:true,nsamplestoragelocationcode:_this.state.selectedRecord.nsamplestoragelocationcode.value,userinfo:_this.props.Login.userInfo};var inputParam={methodUrl:\"SampleStorageTransaction\",classUrl:'samplestoragemove',inputData:inputData,operation:\"update\",dataState:_this.state.dataStateChange};_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_WARNING\"}),_this.props.intl.formatMessage({id:\"IDS_MISMATCHCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),_this.state.loadEsign?function(){return _this.props.crudMasterstorage(inputParam,_this.state.masterData,\"openModal\");}:function(){return _this.CRUDSampleStorageTransaction(_objectSpread({},inputData),'update');});};_this.CRUDSampleStorageTransaction=function(inputParam,operation){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragemove/\"+operation+\"SampleStorageTransaction\",inputParam);urlArray=[url1];Axios.all(urlArray).then(function(response){// if(this.state.isMultiContainermove){\n//     this.ConfirmMove()\n// }else{\n_this.setState({isInitialRender:true,selectedRecord:{},masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),openModal:false,loading:false,ismoveSample:false});//} \n}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{if(error.response.data==='IDS_SOURCEANDDESTINATIONMISMATCH'){_this.ConfirmMove();}else{toast.warn(error.response.data);}}_this.setState({loading:false});});};_this.onFilterSubmit=function(){_this.setState({loading:true});var inputParamData={nstoragecategorycode:_this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,// nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\n// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var object={selectedStorageCategoryName:_this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname// ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\n// selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\n};var filterData=_this.generateBreadCrumData(object);_this.setState({filterData:filterData,masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onSampleMappingSaveClick=function(){var mandatoryFields=_this.state.isMultiContainermove?[{\"idsName\":\"IDS_TOSTORAGESTRUCTURENAME\",\"dataField\":\"nsamplestoragelocationcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}]:[{\"idsName\":\"IDS_TOSTORAGESTRUCTURENAME\",\"dataField\":\"nsamplestoragelocationcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TOSAMPLESTORAGEPATH\",\"dataField\":\"nsamplestoragemappingcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];// :\n// this.state.openSpreadSheet ? [] : this.state.selectedRecord[\"nneedposition\"] === undefined ||\n//     this.state.selectedRecord[\"nneedposition\"] === false ? [\n//     {\n//         \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\n//         \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_PRODUCT\",\n//         \"dataField\": \"nproductcode\", \"mandatoryLabel\":\n//             \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_AVAILABLESPACE\",\n//         \"dataField\": \"nquantity\", \"mandatoryLabel\":\n//             \"IDS_ENTER\", \"controlType\": \"selectbox\"\n//     }\n// ] : [\n//     {\n//         \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\n//         \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_PRODUCT\",\n//         \"dataField\": \"nproductcode\", \"mandatoryLabel\":\n//             \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     }\n//     ,\n//     {\n//         \"idsName\": \"IDS_CONTAINERTYPE\",\n//         \"dataField\": \"ncontainertypecode\", \"mandatoryLabel\":\n//             \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_CONTAINERSTRUCTURENAME\",\n//         \"dataField\": \"ncontainerstructurecode\", \"mandatoryLabel\":\n//             \"IDS_SELECT\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_DIRECTION\",\n//         \"dataField\": \"ndirectionmastercode\", \"mandatoryLabel\":\n//             \"IDS_ENTER\", \"controlType\": \"selectbox\"\n//     },\n//     {\n//         \"idsName\": \"IDS_AVAILABLESPACE\",\n//         \"dataField\": \"nquantity\", \"mandatoryLabel\":\n//             \"IDS_ENTER\", \"controlType\": \"selectbox\"\n//     }\n// ]\nonSaveMandatoryValidation(_this.state.selectedRecord,mandatoryFields,_this.onSaveClick);};_this.dataStateChange=function(event){var dataResult=_this.state.dataResult;if(_this.state.masterData.sampleStoragetransaction){dataResult=_this.state.masterData.sampleStoragetransaction?_this.processWithGroups(_this.state.masterData.sampleStoragetransaction||[],event.dataState?event.dataState:{take:10,skip:0}):[];dataResult.data.map(function(x){return x.items.map(function(item){item.selected=false;return item;});});}_this.setState({dataResult:dataResult,dataStateChange:event.dataState});};_this.approveSampleStorageMapping=function(event){var inputParamData={};_this.setState({loading:true});inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/approveSampleStorageMapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.movemultipleContainer=function(){var destinationPathlst=[];var dataResult=_this.state.dataResult;dataResult.data.map(function(item){item.items.map(function(item){if(item.hasOwnProperty('selected')&&item.selected){destinationPathlst.push(item);}});});if(destinationPathlst.length>0){var _rsapi$post;_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragemove/getsamplemovedata\",(_rsapi$post={isMultiContainermove:true},_defineProperty(_rsapi$post,\"isMultiContainermove\",true),_defineProperty(_rsapi$post,\"userinfo\",_this.props.Login.userInfo),_rsapi$post));urlArray=[url1];Axios.all(urlArray).then(function(response){var storagemoverecords={};var selectedRecord=_this.state.selectedRecord;var samplestoragecontainerpathMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var samplestoragecontainerpathList=samplestoragecontainerpathMap.get(\"OptionList\");var storageStructureMap=constructOptionList(response[0].data['sampleStorageLocation']||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",\"descending\",undefined,true);var storageStructureList=storageStructureMap.get(\"OptionList\");storagemoverecords=_this.state.masterData.sampleStoragetransaction.filter(function(item){return item.hasOwnProperty('selected')&&item.selected;});selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nsamplestoragelocationcode:{label:storageStructureList[0].label,value:storageStructureList[0].value,item:storageStructureList[0]},storageStructureOptions:storageStructureList});_this.state.masterData.sampleStoragetransaction.map(function(item){return selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{mappingcodeOptions:_objectSpread(_objectSpread({},selectedRecord.mappingcodeOptions),{},_defineProperty({},item.nsamplestoragemappingcode,samplestoragecontainerpathList))});});_this.setState({availableContainers:response[0].data['availableContainers'],totalContainers:response[0].data['totalContainers'],selectedRecord:selectedRecord,isMultiContainermove:true,storagemoverecords:storagemoverecords,ismoveSample:true,openModal:true,loadEsign:false,loading:false,ncontrolcode:_this.state.controlMap.has(\"Move Multiple Container\")&&_this.state.controlMap.get(\"Move Multiple Container\").ncontrolcode});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTACONTAINERTOMOVE\"}));}};_this.moveSample=function(param,nflag){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragemove/getsamplemovedata\",{nsamplestoragemappingcode:param.nsamplestoragemappingcode,ncontainertypecode:param.ncontainertypecode,ncontainerstructurecode:param.ncontainerstructurecode,userinfo:_this.props.Login.userInfo});var getProjectType=rsapi.post(\"projecttype/getProjectType\",{\"userinfo\":_this.props.Login.userInfo});var getProduct=rsapi.post(\"/samplestoragelocation/getProduct\",{'userinfo':_this.props.Login.userInfo});urlArray=[url1,getProduct,getProjectType];Axios.all(urlArray).then(function(response){var storageStructureMap=constructOptionList(response[0].data['sampleStorageLocation']||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",\"descending\",undefined,true);var storageStructureList=storageStructureMap.get(\"OptionList\");// const samplestoragecontainerpathMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\n//     \"nsamplestoragecontainerpathcode\",\n//     \"scontainerpath\", undefined, undefined, true);\n// const samplestoragecontainerpathList = samplestoragecontainerpathMap.get(\"OptionList\");\n// ALPD-3757\nvar sampleStorageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragemappingcode\",\"scontainerpath\",undefined,undefined,true);var sampleStorageMappingList=sampleStorageMappingMap.get(\"OptionList\");var sampleTypeMap=constructOptionList(response[1].data||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var sampleTypeList=sampleTypeMap.get(\"OptionList\");var ProjectTypelst=constructOptionList(response[2].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");_this.setState({sampleTypeList:sampleTypeList,ProjectTypeOptions:ProjectTypelst,sourcencontainertypecode:param.ncontainertypecode,sourcencontainerstructurecode:param.ncontainerstructurecode,isMultiContainermove:false,selectedRecord:{// nprojecttypecode:{\n//     label: this.state.selectedProjectType.label,\n//     value:  this.state.selectedProjectType.value \n// },\nnfromsamplestoragelocationcode:{label:param.ssamplestoragelocationname,value:param.nsamplestoragelocationcode,item:param},nfromsamplestoragemappingcode:{label:param.scontainerpath,value:param.nsamplestoragemappingcode,item:param},nsamplestoragelocationcode:storageStructureList.length>0?{label:storageStructureList[0].label,value:storageStructureList[0].value,item:storageStructureList[0].item}:\"\",nsamplestoragemappingcode:sampleStorageMappingList.length>0?{label:sampleStorageMappingList[0].label,value:sampleStorageMappingList[0].value,item:sampleStorageMappingList[0].item}:\"\",storageStructureOptions:storageStructureList,samplestoragecontainerpathOptions:sampleStorageMappingList},editedsheetData:param,ismoveSample:true,openModal:true,loadEsign:false,loading:false,ncontrolcode:_this.state.controlMap.has(\"Move Container\")&&_this.state.controlMap.get(\"Move Container\").ncontrolcode});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.fetchRecord=function(data){_this.setState({loading:true});var selectedRecord=_this.state.selectedRecord;var inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':_this.props.Login.userInfo});var url3=rsapi.post(\"samplestoragetransaction/getEditSampleStorageMapping\",{'nsamplestoragemappingcode':data.nsamplestoragemappingcode,'userinfo':_this.props.Login.userInfo});urlArray=[url1,url2,url3];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[2].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var editedObject=response[2].data.editsampleStorageMapping;storageMappingMapList.unshift({label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode});selectedRecord={ndirectionmastercode:{label:editedObject.sdirection,value:editedObject.ndirectionmastercode},nsamplestoragecontainerpathcode:{label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode},nproductcode:{label:editedObject.sproductname,value:editedObject.nproductcode},ncontainertypecode:{label:editedObject.scontainertype,value:editedObject.ncontainertypecode},ncontainerstructurecode:{label:editedObject.scontainerstructurename,value:editedObject.ncontainerstructurecode},nneedposition:editedObject.nneedposition===3?true:false,directionmasterOptions:directionmasterList,nquantity:editedObject.nquantity,nrow:editedObject.nrow,ncolumn:editedObject.ncolumn,nsamplestoragemappingcode:editedObject.nsamplestoragemappingcode};_this.setState({openSpreadSheet:false,openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,containerStructureOptions:containerstructureList,isInitialRender:true}),operation:'update',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handlePageChangeFilter=function(event){_this.setState({kendoSkip:event.skip,kendoTake:event.take});};_this.onChange=function(immutableTree,config){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"tree\"]=immutableTree;selectedRecord[\"config\"]=config;var tree=QbUtils.getTree(immutableTree);tree=QbUtils.queryString(immutableTree,config,true);selectedRecord['filterquery']=QbUtils.sqlFormat(immutableTree,config);_this.setState({tree:immutableTree,config:config,selectedRecord:_objectSpread({},selectedRecord)});};_this.headerSelectionChange=function(event){var checkboxElement=event.target;var checked=event.syntheticEvent.target.checked;var dataResult=_this.state.dataResult;dataResult.data.map(function(item){return item.items.map(function(item){if(item.selected===undefined){item.selected=false;}item.selected=checked;return item;});});_this.setState({dataResult:dataResult});};_this.selectionChange=function(event){var dataResult=_this.state.dataResult;dataResult.data.map(function(x){return x.items.map(function(item){if(item['nsamplestoragemappingcode']===event.dataItem['nsamplestoragemappingcode']){item.selected=!event.dataItem.selected;}return item;});});_this.setState({dataResult:dataResult});};_this.processWithGroups=function(data,dataState){var aggregates=[{field:\"navailablespace\",aggregate:\"sum\"}];var groups=dataState.group;if(groups){groups.map(function(group){return group.aggregates=aggregates;});}dataState.group=groups;var newDataState=process(data,dataState);// setGroupIds({\n//     data: newDataState.data,\n//     group: dataState.group,\n// });\nreturn newDataState;};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};//this.props.validateEsignCredential(inputParam, \"openModal\");\n// let destinationPathlst = [];\n// let dataResult = this.state.dataResult;\n// dataResult.data.map(item => {\n//       item.items.map(item => {\n//         if (item.hasOwnProperty('selected') && item.selected) {\n//             destinationPathlst.push(item);\n//         } \n//     });\n// });\n_this.props.validateEsignCredentialStorage(inputParam,\"openModal\",function(){return _this.ConfirmMove();});};_this.state=(_this$state={extractedColumnList:[{\"idsName\":\"IDS_STORAGESTRUCTURE\",\"dataField\":\"ssamplestoragelocationname\",\"width\":\"200px\"},{\"idsName\":\"IDS_SAMPLESTORAGEPATH\",\"dataField\":\"scontainerpath\",\"width\":\"450px\"},{\"idsName\":\"IDS_AVAILABLESPACE\",\"dataField\":\"navailablespace\",\"width\":\"200px\",\"filterType\":\"numeric\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"sproductname\",\"width\":\"200px\"},{\"idsName\":\"IDS_PROJECTTYPE\",\"dataField\":\"sprojecttypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_NEEDPREDEFINEDSTRUCURE\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\"},{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"200px\"},{\"idsName\":\"IDS_CONTAINERSTRUCTURENAME\",\"dataField\":\"scontainerstructurename\",\"width\":\"200px\"}],sheetData:{},selectedRecordFilter:{},treeData:[{title:'Chicken',children:[{title:'Egg'}]}],toggleAction:false,treeDataView:undefined,toggleActionView:false},_defineProperty(_this$state,\"treeData\",[{//  text: \"root\",\ntext:_this.props.intl.formatMessage({id:\"IDS_ROOT\"}),expanded:true,editable:true,root:true,id:uuid()}]),_defineProperty(_this$state,\"panes\",[{size:'50%',scrollable:false}]),_defineProperty(_this$state,\"selectedRecord\",{}),_defineProperty(_this$state,\"userRoleControlRights\",[]),_defineProperty(_this$state,\"controlMap\",new Map()),_defineProperty(_this$state,\"skip\",0),_defineProperty(_this$state,\"detailSkip\",0),_defineProperty(_this$state,\"detailTake\",10),_defineProperty(_this$state,\"take\",_this.props.Login.settings?_this.props.Login.settings[3]:25),_defineProperty(_this$state,\"splitChangeWidthPercentage\",22),_defineProperty(_this$state,\"selectedItem\",undefined),_defineProperty(_this$state,\"loading\",false),_defineProperty(_this$state,\"dataStateChange\",{take:10,skip:0,group:[{field:\"ssamplestoragelocationname\"}]}),_this$state);var fields={};if(_this.state.extractedColumnList){_this.state.extractedColumnList.map(function(field){if(field.dataField!=='ssamplestoragelocationname'&&field.dataField!=='sproductname'&&field.dataField!=='sprojecttypename'&&field.dataField!=='scontainertype'&&field.dataField!=='scontainerstructurename'){fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},field.dataField,{\"label\":_this.props.intl.formatMessage({id:field.idsName}),\"type\":field.dataField==='navailablespace'?\"number\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":_this.props.intl.formatMessage({id:field.idsName})}}));}});}_this.state=_objectSpread(_objectSpread({},_this.state),{},{'fields':fields});_this.searchRef=React.createRef();_this.dragClue=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageMove,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var _this2=this;var _this$state2=this.state,filterData=_this$state2.filterData,storageCategoryOptions=_this$state2.storageCategoryOptions,selectedRecord=_this$state2.selectedRecord,controlMap=_this$state2.controlMap,userRoleControlRights=_this$state2.userRoleControlRights,storageLocationOptions=_this$state2.storageLocationOptions,sampleStorageVersionOptions=_this$state2.sampleStorageVersionOptions,masterData=_this$state2.masterData,dataResult=_this$state2.dataResult,selectedRecordFilter=_this$state2.selectedRecordFilter,fields=_this$state2.fields,selectedProjectType=_this$state2.selectedProjectType,openModal=_this$state2.openModal,loadEsign=_this$state2.loadEsign;var bool=false;///////////////////////////////\nif(this.props.Login.openModal!==previousProps.Login.openModal){bool=true;openModal=this.props.Login.openModal;}if(this.props.Login.loadEsign!==previousProps.Login.loadEsign){bool=true;loadEsign=this.props.Login.loadEsign;}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){var queryBuilderFreezer=[];bool=true;this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.map(function(item){return queryBuilderFreezer.push({\"value\":item.nsamplestoragelocationcode,\"title\":item.ssamplestoragelocationname});});fields=_objectSpread(_objectSpread({},fields),{},{'nsamplestoragelocationcode':{\"label\":this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":queryBuilderFreezer}}});}if(this.props.Login.masterData.sampleType!==previousProps.Login.masterData.sampleType){var _queryBuilderFreezer=[];bool=true;this.props.Login.masterData.sampleType&&this.props.Login.masterData.sampleType.map(function(item){return _queryBuilderFreezer.push({\"value\":item.nproductcode,\"title\":item.sproductname});});fields=_objectSpread(_objectSpread({},fields),{},{'nproductcode':{\"label\":this.props.intl.formatMessage({id:\"IDS_PRODUCT\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":_queryBuilderFreezer}}});}if(this.props.Login.masterData.projectType!==previousProps.Login.masterData.projectType){var _queryBuilderFreezer2=[];bool=true;masterData=this.props.Login.masterData;this.props.Login.masterData.projectType&&this.props.Login.masterData.projectType.map(function(item){return _queryBuilderFreezer2.push({\"value\":item.nprojecttypecode,\"title\":item.sprojecttypename});});// fields = {\n//     ...fields,\n//     'nprojecttypecode': {\n//         \"label\": this.props.intl.formatMessage({\n//             id: \"IDS_PROJECTTYPE\",\n//         }),\n//         \"type\": \"select\",\n//         \"valueSources\": [\"value\"],\n//         \"fieldSettings\": {\n//             \"listValues\": queryBuilderFreezer\n//         }\n//     }\n// }\nselectedProjectType={label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename,value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode};var filterStorageCategorylist=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);masterData['projectTypeOptions']=filterStorageCategorylist.get(\"OptionList\");}if(this.props.Login.masterData.containerType!==previousProps.Login.masterData.containerType){var _queryBuilderFreezer3=[];bool=true;this.props.Login.masterData.containerType&&this.props.Login.masterData.containerType.map(function(item){return _queryBuilderFreezer3.push({\"value\":item.ncontainertypecode,\"title\":item.scontainertype});});fields=_objectSpread(_objectSpread({},fields),{},{'ncontainertypecode':{\"label\":this.props.intl.formatMessage({id:\"IDS_CONTAINERTYPE\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":_queryBuilderFreezer3}}});}if(this.props.Login.masterData.containerStructure!==previousProps.Login.masterData.containerStructure){var _queryBuilderFreezer4=[];bool=true;this.props.Login.masterData.containerStructure&&this.props.Login.masterData.containerStructure.map(function(item){return _queryBuilderFreezer4.push({\"value\":item.ncontainerstructurecode,\"title\":item.scontainerstructurename});});fields=_objectSpread(_objectSpread({},fields),{},{'ncontainerstructurecode':{\"label\":this.props.intl.formatMessage({id:\"IDS_CONTAINERSTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":_queryBuilderFreezer4}}});}///////////////////////////////\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){bool=true;userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.filterStorageCategory!==previousProps.Login.masterData.filterStorageCategory){bool=true;var _filterStorageCategorylist=constructOptionList(this.props.Login.masterData.filterStorageCategory||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,undefined);storageCategoryOptions=_filterStorageCategorylist.get(\"OptionList\");if(this.props.Login.masterData.selectedStorageCategory){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nstoragecategorycode:storageCategoryOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedStorageCategory.nstoragecategorycode;})[0]});}}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){bool=true;var sampleStorageLocationList=constructOptionList(this.props.Login.masterData.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageLocation){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode;})[0]});}}if(this.props.Login.masterData.sampleStorageVersion!==previousProps.Login.masterData.sampleStorageVersion){bool=true;var sampleStorageVersionList=constructOptionList(this.props.Login.masterData.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageVersion){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestorageversioncode:sampleStorageVersionOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode;})[0]});}}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;masterData=this.props.Login.masterData;filterData=this.generateBreadCrumData(this.props.Login.masterData);}if(this.state.masterData!==previousState.masterData){bool=true;if(this.state.masterData.sampleStoragetransaction){if(this.state.masterData.sampleStoragetransaction!==previousState.masterData.sampleStoragetransaction){masterData=this.state.masterData;console.log('masterData.sampleStoragetransaction',dataResult);dataResult=masterData.sampleStoragetransaction?this.processWithGroups(masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{take:10,skip:0}):[];console.log('dataResultn',dataResult);}}filterData=this.generateBreadCrumData(this.state.masterData);}if(bool){this.setState({storageCategoryOptions:storageCategoryOptions,filterData:filterData,selectedRecord:selectedRecord,controlMap:controlMap,userRoleControlRights:userRoleControlRights,storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,masterData:masterData,selectedRecordFilter:selectedRecordFilter,fields:fields,selectedProjectType:selectedProjectType,openModal:openModal,loadEsign:loadEsign,dataResult:dataResult});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(obj){var breadCrumbData=[];if(this.state.masterData&&this.state.masterData.filterStorageCategory){breadCrumbData.push({\"label\":\"IDS_STORAGECATEGORY\",\"value\":obj.selectedStorageCategoryName&&obj.selectedStorageCategoryName!==null?obj.selectedStorageCategoryName:\"NA\"}// ,\n// {\n//     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\n//     \"value\": obj.selectedSampleStorageLocation &&\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\n// },\n// {\n//     \"label\": \"IDS_STORAGECATEGORYVERSION\",\n//     \"value\": obj.selectedSampleStorageVersion &&\n//         obj.selectedSampleStorageVersion.nversionno !== null ?\n//         obj.selectedSampleStorageVersion.nversionno : \"NA\"\n// }\n);}return breadCrumbData;}},{key:\"getSampleStorageLocation\",value:function getSampleStorageLocation(inputData,fieldName,comboData){var _this3=this;var selectedRecordFilter=this.state.selectedRecordFilter||{};var inputParamData={};this.setState({loading:true});if(fieldName==='nsamplestoragelocationcode'){inputParamData={nstoragecategorycode:selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value,userinfo:inputData.userinfo};}else{inputParamData={nstoragecategorycode:comboData.value,userinfo:inputData.userinfo};}var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this3$state=_this3.state,storageLocationOptions=_this3$state.storageLocationOptions,sampleStorageVersionOptions=_this3$state.sampleStorageVersionOptions;var sampleStorageLocationList=constructOptionList(response[0].data.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");var sampleStorageVersionList=constructOptionList(response[0].data.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.length>0?storageLocationOptions[0]:[],nsamplestorageversioncode:sampleStorageVersionOptions.length>0?sampleStorageVersionOptions[0]:[]});_this3.setState({storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,selectedRecordFilter:_objectSpread(_objectSpread({},selectedRecordFilter),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this3.setState({loading:false});});}},{key:\"addSampleStorageMapping\",value:function addSampleStorageMapping(){var _this4=this;this.setState({loading:true});var selectedRecord=this.state.selectedRecord;var inputParamData={// nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\nnsamplestoragelocationcode:this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':this.props.Login.userInfo});var url3=rsapi.post(\"containertype/getContainerType\",{'userinfo':this.props.Login.userInfo});urlArray=[url1,url2];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[0].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");_this4.setState({openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,directionmasterOptions:directionmasterList,// ncontainertypecode: containerTypeList[0],\n// containerStructureOptions: containerstructureList,\n// ncontainerstructurecode: containerstructureList[0],\nnrow:containerStructure.length>0?containerStructure[0].nrow:1,ncolumn:containerStructure.length>0?containerStructure[0].ncolumn:1,isInitialRender:true}),openSpreadSheet:false,operation:'create',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this4.setState({loading:false});});}},{key:\"getContainerStructure\",value:function getContainerStructure(inputData,fieldName,comboData){var _this5=this;var inputParamData={};this.setState({loading:true});inputParamData={ncontainertypecode:comboData.value,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestoragetransaction/getContainerStructure\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this5$state=_this5.state,containerStructureOptions=_this5$state.containerStructureOptions,selectedRecord=_this5$state.selectedRecord;var containerStructureList=constructOptionList(response[0].data.containerStructure||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,undefined);containerStructureOptions=containerStructureList.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nrow:containerStructureOptions.length>0?containerStructureOptions[0].item.nrow:1,ncolumn:containerStructureOptions.length>0?containerStructureOptions[0].item.ncolumn:1,ncontainerstructurecode:containerStructureOptions.length>0?containerStructureOptions[0]:[],containerStructureOptions:containerStructureOptions.length>0?_toConsumableArray(containerStructureOptions):[]});_this5.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this5.setState({loading:false});});}},{key:\"getDynamicFilterExecuteData\",value:function getDynamicFilterExecuteData(nflag){var _this6=this;var selectedRecord=this.state.selectedRecord||{};if(nflag===2?true:selectedRecord.filterquery&&selectedRecord.filterquery!==\"\"){this.setState({loading:true});var obj={// ...inputParam.component, \nlabel:'sampleStoragetransaction',valuemember:'nsamplestoragemappingcode',filterquery:nflag===2?this.state.submittedselectedRecord.filterquery+\" and nprojecttypecode=\"+this.state.selectedProjectType.value:selectedRecord.filterquery+\" and nprojecttypecode=\"+this.state.selectedProjectType.value,source:'view_samplestoragelocation',userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"/samplestoragemove/getdynamicfilterexecutedata\",obj);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this6.state.masterData;masterData=_objectSpread(_objectSpread({},masterData),response[0].data);_this6.setState({masterData:_objectSpread({},masterData),loading:false,openModal:false,isFilterPopup:false,submittedselectedRecord:nflag===2?_objectSpread({},_this6.state.submittedselectedRecord):_objectSpread({},selectedRecord),selectedRecord:{},displayQuery:_this6.state.tree?QbUtils.queryString(_this6.state.tree,_this6.state.config,true):\"\"});}).catch(function(error){_this6.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAFILTER\"}));}}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.openModal&&nextState.isInitialRender===false&&nextState.selectedRecord!==this.state.selectedRecord){return false;}else if(this.state.openModal&&nextState.isInitialRender===false&&nextState.sheetData!==this.state.sheetData){return false;}else{return true;}}},{key:\"render\",value:function render(){var _this7=this;var addId=this.state.controlMap.has(\"Add SampleStorageTransaction\")&&this.state.controlMap.get(\"Add SampleStorageTransaction\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit SampleStorageLocation\")&&this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete SampleStorageLocation\")&&this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;var copyId=this.state.controlMap.has(\"Copy SampleStorageLocation\")&&this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;var approveId=this.state.controlMap.has(\"Approve SampleStorageLocation\")&&this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;var moveSampleId=this.state.controlMap.has(\"Move Container\")&&this.state.controlMap.get(\"Move Container\").ncontrolcode;var moveMultipleSampleId=this.state.controlMap.has(\"Move Multiple Container\")&&this.state.controlMap.get(\"Move Multiple Container\").ncontrolcode;var addMultipleSampleId=this.state.controlMap.has(\"AddMultipleSample\")&&this.state.controlMap.get(\"AddMultipleSample\").ncontrolcode;var addSampleId=this.state.controlMap.has(\"AddSample\")&&this.state.controlMap.get(\"AddSample\").ncontrolcode;var filterParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\",fetchUrl:\"sampleStoragetransaction/getActiveSampleStorageMappingById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"ssamplestoragelocationname\"]};var breadCrumbData=this.state.filterData||[];var confirmMessage=new ConfirmMessage();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nprojecttypecode\",as:\"select\",onChange:function onChange(event){return _this7.onComboChange(event,'nprojecttypecode');},formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isMandatory:false,value:this.state.selectedProjectType?this.state.selectedProjectType||[]:[],options:this.state.masterData&&this.state.masterData.projectTypeOptions||[],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:false,isClearable:false}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGridForStorage,{isDownloadPDFRequired:this.state.masterData&&this.state.masterData.sampleStoragetransaction&&this.processWithGroups(this.state.masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{take:10,skip:0}).data.length>0?true:false,isDownloadExcelRequired:this.state.masterData&&this.state.masterData.sampleStoragetransaction&&this.processWithGroups(this.state.masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{take:10,skip:0}).data.length>0?true:false,isRefreshRequired:this.state.masterData&&this.state.masterData.sampleStoragetransaction&&this.processWithGroups(this.state.masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{take:10,skip:0}).data.length>0?true:false,reloadData:function reloadData(e){return _this7.getDynamicFilterExecuteData(2);},isCustomButton:true,customButtonlist:this.state.masterData&&this.state.masterData.sampleStoragetransaction&&this.processWithGroups(this.state.masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{take:10,skip:0}).data.length>0?[{label:'IDS_VIEWMULTIPLEBOX',id:{},hidden:false//this.state.userRoleControlRights.indexOf(addMultipleSampleId) === -1\n,onClick:function onClick(){return _this7.addSample({},2);},controlname:'faBoxes'},{label:'IDS_MOVEMULTIPLECONTAINER',id:{},hidden:this.state.userRoleControlRights.indexOf(moveMultipleSampleId)===-1,onClick:function onClick(){return _this7.movemultipleContainer();},controlname:'faDollyFlatbed'},{label:'IDS_SEARCH',id:{},onClick:function onClick(){return _this7.opensearch();},controlname:'faSearch'}]:[{label:'IDS_SEARCH',id:{},onClick:function onClick(){return _this7.opensearch();},controlname:'faSearch'}],cellRender:this.cellRender,group:this.state.group||[],primaryKeyField:'nsamplestoragemappingcode'// groupable={true}\n// groupfooter={true}\n// aggregateLabel={'IDS_AVAILABLESPACE'}\n// aggregatedColumn={'navailablespace'}\n,selectionChange:this.selectionChange,headerSelectionChange:this.headerSelectionChange,data:this.state.masterData&&this.state.masterData.sampleStoragetransaction,dataResult:// this.state.masterData && this.state.masterData.sampleStoragetransaction ? this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\n//     this.state.dataStateChange ? this.state.dataStateChange : {\n//         take: 10,\n//         skip: 0\n//     }) : []\nthis.state.dataResult?this.state.dataResult:[],dataState:this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10},dataStateChange:this.dataStateChange,extractedColumnList:this.state.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,deleteRecord:this.deleteRecord,pageable:true,scrollable:'scrollable',gridHeight:'900px',isActionRequired:true,isToolBarRequired:true,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_MOVECONTAINER\"}),controlname:\"faDolly\",hidden:this.state.userRoleControlRights.indexOf(moveSampleId)===-1,objectName:\"edit\",onClick:this.moveSample},{title:this.props.intl.formatMessage({id:\"IDS_VIEWBOX\"}),controlname:\"faBox\",hidden:false// this.state.userRoleControlRights.indexOf(addSampleId) === -1\n,objectName:\"add\",onClick:function onClick(param){return _this7.addSample(param,1);}}]}))))),this.state.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.state.openModal,closeModal:this.closeModal,hideSave:this.state.ismoveSample?false:true,needClose:this.state.ismoveSample?true:this.state.isFilterPopup?false:true,showSubmit:this.state.ismoveSample?false:this.state.openSpreadSheet?false:true,size:this.state.ismoveSample?\"\":this.state.openSpreadSheet||this.state.isFilterPopup?'xl':\"\",operation:\"\",inputParam:this.props.Login.inputParam,screenName:this.state.ismoveSample?this.props.intl.formatMessage({id:\"IDS_MOVECONTAINER\"}):this.state.isFilterPopup?\"\":this.state.isMultiSampleAdd?this.props.intl.formatMessage({id:\"IDS_SAMPLESTORAGE\"}):this.state.editedsheetData.scontainerpath,onSaveClick:this.state.isFilterPopup?this.getDynamicFilterExecuteData.bind(this):this.onSampleMappingSaveClick,esign:this.state.loadEsign// className={\"wide-popup\"}\n,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},addComponent:this.state.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.state.ismoveSample?/*#__PURE__*/React.createElement(MoveSample,{ProjectTypeOptions:this.state.ProjectTypeOptions,sampleTypeList:this.state.sampleTypeList,availableContainers:this.state.availableContainers,totalContainers:this.state.totalContainers,storagemoverecords:this.state.storagemoverecords,isMultiContainermove:this.state.isMultiContainermove,sourcencontainertypecode:this.state.sourcencontainertypecode,sourcencontainerstructurecode:this.state.sourcencontainerstructurecode,operation:this.state.operation,selectedRecordFilter:this.state.selectedRecordFilter,onInputChange:function onInputChange(e){return _this7.onInputChange(e);},onComboChange:this.onComboChange,selectedRecord:this.state.selectedRecord||{},childDataChange:this.childDataChange,userInfo:this.props.Login.userInfo,dataState:this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10},controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights}):this.state.isFilterPopup?/*#__PURE__*/React.createElement(FilterQueryBuilder,{fields:this.state.fields,isSampleStorage:true,queryArray:this.state.queryArray,skip:this.state.kendoSkip,take:this.state.kendoTake,onChange:this.onChange,tree:this.props.Login.tree!==undefined?this.props.Login.tree:this.state.selectedRecord.tree,gridColumns:this.slideList,filterData:this.props.Login.slideResult||[],handlePageChange:this.handlePageChangeFilter,static:true,userInfo:this.props.Login.userInfo,updateStore:this.props.updateStore}):this.state.openSpreadSheet?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MatrixComponent,{isMoveScreen:true,updateStore:this.props.updateStore,intl:this.props.intl,Rows:this.state.Rows||1,AdditionalFieldsComponentData:this.state.AdditionalFieldsComponentData,userInfo:this.props.Login.userInfo,columns:this.state.columns||1,selectedRecord:this.state.selectedRecord.sheetData||{},sheetData:this.state.sheetData||{},isMultiSampleAdd:this.state.isMultiSampleAdd,childSheetDataChange:this.childSheetDataChange,editedsheetData:this.state.editedsheetData,nbarcodedescription:this.props.Login.settings&&parseInt(this.props.Login.settings[36]),nbarcodeLength:this.props.Login.settings&&parseInt(this.props.Login.settings[37]),sbarcodeboxWidth:this.props.Login.settings&&this.props.Login.settings[38],multipleSheetData:this.state.masterData&&this.state.masterData.sampleStoragetransaction&&process(this.state.masterData.sampleStoragetransaction||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}).data}))):/*#__PURE__*/React.createElement(React.Fragment,null)// <AddSampleStorageMapping\n//     operation={this.state.operation}\n//     selectedRecordFilter={this.state.selectedRecordFilter}\n//     onInputChange={(e) => this.onInputChange(e)}\n//     onComboChange={this.onComboChange}\n//     selectedRecord={this.state.selectedRecord || {}}\n//     childDataChange={this.childDataChange}\n//     userInfo={this.props.Login.userInfo}\n// />\n}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleStorageMove;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,updateStore:updateStore,validateEsignCredential:validateEsignCredential,validateEsignCredentialStorage:validateEsignCredentialStorage,crudMasterstorage:crudMasterstorage})(injectIntl(SampleStorageMove));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/storagemanagement/SampleStorageMove.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Form","Button","FormControl","FontAwesomeIcon","PerfectScrollbar","faTrashAlt","faCopy","faPencilAlt","faSync","faPlus","faThumbsUp","faBoxOpen","faBox","faLocationArrow","faFolderMinus","faFolder","faFolderOpen","faArrowRight","faSearch","faTimes","faArrowDown","faHandPointLeft","faArrowUp","faClone","faPuzzlePiece","faCalculator","toast","ListMaster","Lims_JSON_stringify","constructOptionList","getControlMap","onSaveMandatoryValidation","searchData","searchJsonData","showEsign","sortData","ReadOnlyText","ContentPanel","SearchIcon","DataGrid","BasicConfig","BasicFuncs","Utils","QbUtils","SlideOutModal","callService","crudMaster","validateEsignCredential","updateStore","getSelectedSampleStorageLocation","filterColumnData","changeStorageCategoryFilter","openPropertyModal","editSampleStorageLocation","approveSampleStorageLocation","getSelectedSampleStorageVersion","fetchStorageCategory","copySampleStorageVersion","crudSampleStorageLocation","validateEsignCredentialStorage","crudMasterstorage","DEFAULT_RETURN","ListWrapper","MediaLabel","ProductList","uuid","TreeEditable","TreeViewEditable","getItemPath","mapTree","removeItems","ConfirmMessage","Splitter","TransactionListMaster","BreadcrumbComponent","SplitterLayout","transactionStatus","Esign","TreeViewDragAnalyzer","moveTreeViewItem","ModalShow","rsapi","Axios","Preloader","TransactionListMasterJsonView","groupBy","process","MatrixComponent","FilterQueryBuilder","Grid","GridColumn","FormSelectSearch","MoveSample","DataGridForStorage","initRequest","bindActionCreators","SampleStorageMove","props","dragOverCnt","isDragDrop","SEPARATOR","uniqueIDArr","countforTree","pointedItem","undefined","getitemPath","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","treeData","text","expanded","editable","root","id","operation","closeModal","loadEsign","state","selectedId","setState","isInitialRender","isFilterPopup","onInputChange","event","target","type","name","checked","value","onSaveClick","saveType","formRef","Login","onSaveProperties","openSpreadSheet","ismoveSample","CRUDSampleStorageTransaction","editedsheetData","nsamplestoragemappingcode","isMultiSampleAdd","Object","keys","sheetData","map","join","toString","nsamplestoragelocationcode","JSON","stringify","sheetUpdate","userinfo","userInfo","destinationPathlst","dataResult","item","items","hasOwnProperty","selected","push","userRoleControlRights","nformcode","ncontrolcode","masterData","inputParam","methodUrl","classUrl","inputData","isMultiContainermove","selectedContainers","nsourcemappingcode","y","destinationPathCount","length","nprojecttypecode","filterprojecttypecode","selectedProjectType","ssamplestoragelocationname","ssamplestoragepathname","scontainerpath","stosamplestoragelocationname","label","stosamplestoragepathname","sboxid","stoboxid","screenData","filterquery","submittedselectedRecord","onSaveSampleStorageTransaction","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","e","skip","take","handleDetailPageChange","openFilter","showFilter","closeFilter","reloadData","onFilterSubmit","onEditSampleStorageLocation","selectedSampleStorageVersion","editId","handleSearch","searchedTreeData","searchRef","current","isOnlyDraft","sampleStorageVersion","openStorageMapping","addId","addSampleStorageMapping","deletesamplestoragemapping","param","selectedSampleStorageLocation","addMultipleSample","loading","opensearch","addSample","nflag","urlArray","groupedArray","processWithGroups","sampleStoragetransaction","dataStateChange","url1","post","groupedItem","all","then","response","parse","AdditionalFieldsComponentData","Rows","nrow","columns","ncolumn","catch","error","status","message","warn","onComboChange","comboData","fieldName","selectedRecordFilter","getSampleStorageLocation","nstoragecategorycode","getContainerStructure","ncontainertypecode","containerpathCodeArray","nsamplestoragetransactioncode","parseInt","nproductcode","ndirectionmastercode","ssamplestoragemappingname","nsamplestoragecontainerpathcode","containerpathsize","nneedposition","ncontainerstructurecode","nquantity","getsamplestoragetransaction","childDataChange","availableContainersdata","availableContainers","childSheetDataChange","getActiveSampleStorageMappingById","filterValue","filterParam","primaryKeyValue","searchedData","inputListName","primaryKeyField","isjsondata","searchFieldList","fetchUrl","fecthInputObject","sortField","sortOrder","intl","formatMessage","selectedObject","forEach","unchangeList","indexOf","modalName","ConfirmMove","isok","dataState","confirmMessage","confirm","inputParamData","object","selectedStorageCategoryName","sstoragecategoryname","filterData","generateBreadCrumData","onSampleMappingSaveClick","mandatoryFields","x","approveSampleStorageMapping","movemultipleContainer","storagemoverecords","samplestoragecontainerpathMap","samplestoragecontainerpathList","get","storageStructureMap","storageStructureList","filter","storageStructureOptions","mappingcodeOptions","totalContainers","controlMap","has","moveSample","getProjectType","getProduct","sampleStorageMappingMap","sampleStorageMappingList","sampleTypeMap","sampleTypeList","ProjectTypelst","ProjectTypeOptions","sourcencontainertypecode","sourcencontainerstructurecode","nfromsamplestoragelocationcode","nfromsamplestoragemappingcode","samplestoragecontainerpathOptions","fetchRecord","url2","url3","storageMappingMap","storageMappingMapList","containerStructure","containerTypeMap","containerTypeList","directionmasterMap","directionmasterList","containerstructureMap","containerstructureList","productMap","productList","editedObject","editsampleStorageMapping","unshift","sdirection","sproductname","scontainertype","scontainerstructurename","directionmasterOptions","storageMappingMapOptions","productOptions","containerTypeOptions","containerStructureOptions","onInputOnChange","handlePageChangeFilter","kendoSkip","kendoTake","onChange","immutableTree","config","tree","getTree","queryString","sqlFormat","headerSelectionChange","checkboxElement","syntheticEvent","selectionChange","dataItem","aggregates","field","aggregate","groups","group","newDataState","validateEsign","sreason","nreasoncode","spredefinedreason","password","extractedColumnList","title","children","toggleAction","treeDataView","toggleActionView","size","scrollable","Map","settings","fields","dataField","idsName","createRef","dragClue","previousProps","previousState","storageCategoryOptions","storageLocationOptions","sampleStorageVersionOptions","bool","sampleStorageLocation","queryBuilderFreezer","sampleType","projectType","sprojecttypename","filterStorageCategorylist","containerType","values","filterStorageCategory","selectedStorageCategory","sampleStorageLocationList","sampleStorageVersionList","nsamplestorageversioncode","console","log","parentHeight","height","clientHeight","firstPane","obj","breadCrumbData","containerStructureList","valuemember","source","displayQuery","info","rtn","nextProps","nextState","deleteId","copyId","approveId","moveSampleId","moveMultipleSampleId","addMultipleSampleId","addSampleId","projectTypeOptions","getDynamicFilterExecuteData","hidden","onClick","controlname","cellRender","deleteRecord","objectName","bind","masterStatus","queryArray","slideList","slideResult","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Form, Button, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { faTrashAlt, faCopy, faPencilAlt, faSync, faPlus, faThumbsUp, faBoxOpen, faBox, faLocationArrow, faFolderMinus, faFolder, faFolderOpen, faArrowRight, faSearch, faTimes, faArrowDown, faHandPointLeft, faArrowUp, faClone, faPuzzlePiece, faCalculator } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { Lims_JSON_stringify, constructOptionList, getControlMap, onSaveMandatoryValidation, searchData, searchJsonData, showEsign, sortData } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel, SearchIcon } from '../../components/App.styles';\r\n//import SortableTree from 'react-sortable-tree'; \r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport {\r\n    BasicConfig, BasicFuncs,\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\n\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSelectedSampleStorageLocation, filterColumnData, changeStorageCategoryFilter,\r\n    openPropertyModal, editSampleStorageLocation, approveSampleStorageLocation, getSelectedSampleStorageVersion, fetchStorageCategory, copySampleStorageVersion,\r\n    crudSampleStorageLocation,validateEsignCredentialStorage,crudMasterstorage\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { MediaLabel, ProductList } from '../product/product.styled';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport TreeEditable from \"../../components/form-tree-editable/TreeEditable\";\r\nimport TreeViewEditable from \"../../components/form-tree-editable/form-tree-editable.component\";\r\nimport { getItemPath, mapTree, removeItems } from \"@progress/kendo-react-treelist\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import AddTreeview from './AddTreeview';\r\n// import AddTreeProperties from './AddTreeProperties';\r\nimport { Splitter } from '@progress/kendo-react-layout';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\n//import StorageCategoryFilter from './StorageCategoryFilter';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport Esign from '../audittrail/Esign';\r\nimport { TreeViewDragAnalyzer, moveTreeViewItem } from '@progress/kendo-react-treeview';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport rsapi from '../../rsapi';\r\n//import AddSampleStorageMapping from './AddSampleStorageMapping';\r\nimport Axios from 'axios';\r\n//import StorageMappingFilter from './StorageMappingFilter';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\n\r\nimport { groupBy, process } from '@progress/kendo-data-query';\r\nimport MatrixComponent from '../../components/MatrixComponent';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport MoveSample from '../storagemanagement/MoveSample';\r\nimport DataGridForStorage from './DataGridForStorage';\r\nimport { initRequest } from '../../actions/LoginAction';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n\r\nclass SampleStorageMove extends Component {\r\n    dragOverCnt = 0;\r\n    isDragDrop = false;\r\n    SEPARATOR = '_';\r\n    uniqueIDArr = [];\r\n    countforTree = 0;\r\n    pointedItem = undefined\r\n    getitemPath = {};\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            extractedColumnList: [\r\n                { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\r\n                { \"idsName\": \"IDS_AVAILABLESPACE\", \"dataField\": \"navailablespace\", \"width\": \"200px\", \"filterType\": \"numeric\" },\r\n                { \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_NEEDPREDEFINEDSTRUCURE\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"scontainertype\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_CONTAINERSTRUCTURENAME\", \"dataField\": \"scontainerstructurename\", \"width\": \"200px\" },\r\n\r\n            ],\r\n            sheetData: {},\r\n            selectedRecordFilter: {},\r\n            treeData: [{ title: 'Chicken', children: [{ title: 'Egg' }] }],\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    //  text: \"root\",\r\n                    text: this.props.intl.formatMessage({ id: \"IDS_ROOT\" }),\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n            selectedItem: undefined,\r\n            loading: false,\r\n            dataStateChange: {\r\n                take: 10,\r\n                skip: 0,\r\n                group: [\r\n                    {\r\n                        field: \"ssamplestoragelocationname\",\r\n                    },\r\n                ],\r\n            }\r\n        };\r\n        let fields = {};\r\n        if (this.state.extractedColumnList) {\r\n            this.state.extractedColumnList.map(field => {\r\n                if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\r\n                    && field.dataField !== 'sprojecttypename' && field.dataField !== 'scontainertype'\r\n                    && field.dataField !== 'scontainerstructurename') {\r\n                    fields = {\r\n                        ...fields,\r\n                        [field.dataField]: {\r\n                            \"label\":\r\n                                this.props.intl.formatMessage({\r\n                                    id: field.idsName,\r\n                                })\r\n                            ,\r\n                            \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": this.props.intl.formatMessage({\r\n                                    id: field.idsName\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this.state = { ... this.state, 'fields': fields }\r\n        this.searchRef = React.createRef();\r\n        this.dragClue = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let { filterData, storageCategoryOptions,\r\n            selectedRecord, controlMap,\r\n            userRoleControlRights, storageLocationOptions,\r\n            sampleStorageVersionOptions, masterData, dataResult, selectedRecordFilter, fields, selectedProjectType, openModal, loadEsign } = this.state\r\n        let bool = false;\r\n        ///////////////////////////////\r\n        if (this.props.Login.openModal !== previousProps.Login.openModal) {\r\n            bool = true;\r\n            openModal = this.props.Login.openModal;\r\n        }\r\n        if (this.props.Login.loadEsign !== previousProps.Login.loadEsign) {\r\n            bool = true;\r\n            loadEsign = this.props.Login.loadEsign;\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nsamplestoragelocationcode, \"title\": item.ssamplestoragelocationname })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'nsamplestoragelocationcode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_STORAGESTRUCTURENAME\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'nproductcode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_PRODUCT\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.projectType !== previousProps.Login.masterData.projectType) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            masterData = this.props.Login.masterData;\r\n            this.props.Login.masterData.projectType && this.props.Login.masterData.projectType.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\r\n            )\r\n            // fields = {\r\n            //     ...fields,\r\n            //     'nprojecttypecode': {\r\n            //         \"label\": this.props.intl.formatMessage({\r\n            //             id: \"IDS_PROJECTTYPE\",\r\n            //         }),\r\n            //         \"type\": \"select\",\r\n            //         \"valueSources\": [\"value\"],\r\n            //         \"fieldSettings\": {\r\n            //             \"listValues\": queryBuilderFreezer\r\n            //         }\r\n            //     }\r\n            // }\r\n            selectedProjectType = {\r\n                label: this.props.Login.masterData.selectedProjectType &&\r\n                    this.props.Login.masterData.selectedProjectType.sprojecttypename, value:\r\n                    this.props.Login.masterData.selectedProjectType &&\r\n                    this.props.Login.masterData.selectedProjectType.nprojecttypecode\r\n            };\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            masterData['projectTypeOptions'] = filterStorageCategorylist.get(\"OptionList\");\r\n        }\r\n        if (this.props.Login.masterData.containerType !== previousProps.Login.masterData.containerType) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.containerType && this.props.Login.masterData.containerType.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.ncontainertypecode, \"title\": item.scontainertype })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'ncontainertypecode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_CONTAINERTYPE\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        } if (this.props.Login.masterData.containerStructure !== previousProps.Login.masterData.containerStructure) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.containerStructure && this.props.Login.masterData.containerStructure.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.ncontainerstructurecode, \"title\": item.scontainerstructurename })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'ncontainerstructurecode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_CONTAINERSTRUCTURENAME\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        ///////////////////////////////\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            bool = true;\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.filterStorageCategory !== previousProps.Login.masterData.filterStorageCategory) {\r\n            bool = true;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.filterStorageCategory || [], \"nstoragecategorycode\",\r\n                \"sstoragecategoryname\", undefined, undefined, undefined);\r\n            storageCategoryOptions = filterStorageCategorylist.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedStorageCategory) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nstoragecategorycode: storageCategoryOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedStorageCategory.nstoragecategorycode)[0]\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            bool = true;\r\n            const sampleStorageLocationList = constructOptionList(this.props.Login.masterData.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n            storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageLocation) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode)[0]\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.sampleStorageVersion !== previousProps.Login.masterData.sampleStorageVersion) {\r\n            bool = true;\r\n            const sampleStorageVersionList = constructOptionList(this.props.Login.masterData.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                \"nversionno\", undefined, undefined, undefined);\r\n            sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageVersion) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode)[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            masterData = this.props.Login.masterData;\r\n            filterData = this.generateBreadCrumData(this.props.Login.masterData);\r\n\r\n        }\r\n        if (this.state.masterData !== previousState.masterData) {\r\n            bool = true;\r\n            if (this.state.masterData.sampleStoragetransaction) {\r\n                if (this.state.masterData.sampleStoragetransaction !== previousState.masterData.sampleStoragetransaction) {\r\n                    masterData = this.state.masterData;\r\n                    console.log('masterData.sampleStoragetransaction', dataResult)\r\n                    dataResult = masterData.sampleStoragetransaction ?\r\n                        this.processWithGroups(masterData.sampleStoragetransaction || [],\r\n                            this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                take: 10,\r\n                                skip: 0\r\n                            }) : []\r\n                    console.log('dataResultn', dataResult)\r\n                }\r\n            }\r\n\r\n            filterData = this.generateBreadCrumData(this.state.masterData);\r\n\r\n        }\r\n        if (bool) {\r\n            this.setState({\r\n                storageCategoryOptions, filterData,\r\n                selectedRecord, controlMap,\r\n                userRoleControlRights, storageLocationOptions,\r\n                sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, openModal, loadEsign, dataResult\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.state.loadEsign;\r\n        let openModal = this.state.openModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (loadEsign) {\r\n          //  loadEsign = false;\r\n            openModal = true;\r\n            loadEsign = false;\r\n            selectedRecord['esignpassword'] = \"\"\r\n            selectedRecord['esigncomments'] = \"\"\r\n            selectedRecord['esignreason'] = \"\"\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        this.setState({\r\n            selectedRecord,\r\n           // ismoveSample: false,\r\n            openModal, isInitialRender: true\r\n            , isFilterPopup: false,\r\n            loadEsign: false\r\n        })\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n \r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties(saveType, formRef);\r\n        } else if (this.state.openSpreadSheet && !this.state.ismoveSample) {\r\n            this.CRUDSampleStorageTransaction({\r\n                ...this.state.editedsheetData,\r\n                nsamplestoragemappingcode: this.state.isMultiSampleAdd ?\r\n                    Object.keys(this.state.sheetData).map(nsamplestoragemappingcode => nsamplestoragemappingcode).join(\",\")\r\n                    : this.state.editedsheetData.nsamplestoragemappingcode.toString(),\r\n                nsamplestoragelocationcode: this.state.editedsheetData.nsamplestoragelocationcode,\r\n                sheetData: JSON.stringify(this.state.sheetData ? this.state.sheetData : {}),\r\n                sheetUpdate: true,\r\n                userinfo: this.props.Login.userInfo,\r\n                isMultiSampleAdd: this.state.isMultiSampleAdd\r\n            }, 'create');\r\n        } else if (this.state.ismoveSample) {\r\n            let destinationPathlst = [];\r\n            let dataResult = this.state.dataResult;\r\n            dataResult.data.map(item => {\r\n                  item.items.map(item => {\r\n                    if (item.hasOwnProperty('selected') && item.selected) {\r\n                        destinationPathlst.push(item);\r\n                    } \r\n                });\r\n            });\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.state.ncontrolcode)) {\r\n                const masterData = this.state.masterData;\r\n                let inputParam = {\r\n                    methodUrl: \"SampleStorageTransaction\",\r\n                    operation: \"update\",\r\n                    classUrl: \"samplestoragemove\",\r\n\r\n                    inputData: this.state.isMultiContainermove? {\r\n                        selectedContainers: JSON.stringify(destinationPathlst),\r\n                        nsourcemappingcode: JSON.stringify(destinationPathlst.map(y => y.nsamplestoragemappingcode)),\r\n                        destinationPathCount: destinationPathlst.length,\r\n                        isMultiContainermove: true,\r\n                        nsamplestoragelocationcode: this.state.selectedRecord.nsamplestoragelocationcode.value, \r\n                        ...this.state.masterData,\r\n                        userinfo: this.props.Login.userInfo\r\n                    } : {\r\n                        nsourcemappingcode: this.state.editedsheetData.nsamplestoragemappingcode,\r\n                        nsamplestoragelocationcode: this.state.selectedRecord.nsamplestoragelocationcode.value,\r\n                        nsamplestoragemappingcode: this.state.selectedRecord.nsamplestoragemappingcode.value,\r\n                        nprojecttypecode: this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,\r\n                        filterprojecttypecode:this.state.selectedProjectType.value,\r\n\r\n                        ssamplestoragelocationname:this.state.editedsheetData.ssamplestoragelocationname,\r\n                        ssamplestoragepathname:this.state.editedsheetData.scontainerpath,\r\n                        stosamplestoragelocationname:this.state.selectedRecord.nsamplestoragelocationcode.label,\r\n                        stosamplestoragepathname:this.state.selectedRecord.nsamplestoragemappingcode.label,\r\n                        sboxid:this.state.editedsheetData.sboxid,\r\n                        stoboxid:this.state.selectedRecord.nsamplestoragemappingcode.item.sboxid,\r\n                        ...this.state.masterData,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, openModal: true,  screenData: { inputParam, masterData }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                if (this.state.isMultiContainermove) { \r\n                    this.CRUDSampleStorageTransaction({\r\n                        selectedContainers: JSON.stringify(destinationPathlst),\r\n                        nsourcemappingcode: JSON.stringify(destinationPathlst.map(y => y.nsamplestoragemappingcode)),\r\n                        destinationPathCount: destinationPathlst.length,\r\n                        isMultiContainermove: true,\r\n                        nsamplestoragelocationcode: this.state.selectedRecord.nsamplestoragelocationcode.value,\r\n                        // nsamplestoragemappingcode: this.state.selectedRecord.nsamplestoragemappingcode.value,\r\n                        // nprojecttypecode: this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,\r\n                        filterquery: this.state.submittedselectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }, 'update');\r\n                } else {\r\n                    this.CRUDSampleStorageTransaction({\r\n                        nsourcemappingcode: this.state.editedsheetData.nsamplestoragemappingcode,\r\n                        nsamplestoragelocationcode: this.state.selectedRecord.nsamplestoragelocationcode.value,\r\n                        nsamplestoragemappingcode: this.state.selectedRecord.nsamplestoragemappingcode.value,\r\n                        nprojecttypecode: this.state.selectedRecord.nsamplestoragemappingcode.item.nprojecttypecode,\r\n                        filterprojecttypecode:this.state.selectedProjectType.value,\r\n                        ssamplestoragelocationname:this.state.editedsheetData.ssamplestoragelocationname,\r\n                        ssamplestoragepathname:this.state.editedsheetData.scontainerpath,\r\n                        stosamplestoragelocationname:this.state.selectedRecord.nsamplestoragelocationcode.label,\r\n                        stosamplestoragepathname:this.state.selectedRecord.nsamplestoragemappingcode.label,\r\n                        sboxid:this.state.editedsheetData.sboxid,\r\n                        stoboxid:this.state.selectedRecord.nsamplestoragemappingcode.item.sboxid,\r\n                        filterquery: this.state.submittedselectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }, 'update');\r\n                }\r\n            }\r\n        } else {\r\n            this.onSaveSampleStorageTransaction(saveType, formRef);\r\n        }\r\n    };\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    generateBreadCrumData(obj) {\r\n        const breadCrumbData = [];\r\n        if (this.state.masterData && this.state.masterData.filterStorageCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_STORAGECATEGORY\",\r\n                    \"value\": obj.selectedStorageCategoryName &&\r\n                        obj.selectedStorageCategoryName !== null ?\r\n                        obj.selectedStorageCategoryName : \"NA\"\r\n\r\n                }\r\n                // ,\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\r\n                //     \"value\": obj.selectedSampleStorageLocation &&\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\r\n                // },\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYVERSION\",\r\n                //     \"value\": obj.selectedSampleStorageVersion &&\r\n                //         obj.selectedSampleStorageVersion.nversionno !== null ?\r\n                //         obj.selectedSampleStorageVersion.nversionno : \"NA\"\r\n                // }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        this.onFilterSubmit();\r\n    }\r\n    onEditSampleStorageLocation = (selectedSampleStorageVersion, userInfo, editId) => {\r\n        this.handleSearch();\r\n        this.setState({ searchedTreeData: undefined })\r\n        if (this.searchRef.current) {\r\n            this.searchRef.current.value = \"\";\r\n        }\r\n\r\n        let isOnlyDraft = false;\r\n        if (this.props.Login.masterData.sampleStorageVersion && this.props.Login.masterData.sampleStorageVersion.length > 1) {\r\n            isOnlyDraft = true;\r\n        }\r\n        this.props.editSampleStorageLocation(selectedSampleStorageVersion, userInfo, isOnlyDraft, editId);\r\n    }\r\n    openStorageMapping = (addId) => {\r\n        this.addSampleStorageMapping({ userInfo: this.props.Login.userInfo, addId });\r\n    }\r\n    deletesamplestoragemapping = (param) => {\r\n        this.CRUDSampleStorageTransaction({\r\n            'nsamplestoragelocationcode': this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            'nsamplestoragemappingcode': param.nsamplestoragemappingcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }, 'delete');\r\n    }\r\n    addMultipleSample = (param) => {\r\n        this.setState({\r\n            //sheetData: JSON.parse(response[0].data.sheetData),\r\n            openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n            loading: false\r\n        })\r\n    }\r\n    // opensearch=()={\r\n\r\n    // }\r\n\r\n    opensearch = () => {\r\n        this.setState({\r\n            openModal: true, isFilterPopup: true, openSpreadSheet: false,ismoveSample:false, selectedRecord: { ...this.state.submittedselectedRecord } ||\r\n                { ...this.state.selectedRecord }\r\n        })\r\n    }\r\n    addSample = (param, nflag) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        let groupedArray = this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n            this.state.dataStateChange ? this.state.dataStateChange : {\r\n                take: 10,\r\n                skip: 0\r\n            }).data;\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getsamplestoragemappingSheetData\",\r\n            {\r\n                isMultiSampleAdd: (nflag === 2) ? true : false,\r\n                nsamplestoragemappingcode:\r\n                    (nflag === 2) ? groupedArray.map(groupedItem => groupedItem.items.map(item => item.nsamplestoragemappingcode)).join(\",\")\r\n                        : param.nsamplestoragemappingcode.toString()\r\n            });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (nflag === 2) {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        AdditionalFieldsComponentData: JSON.parse(response[0].data.AdditionalFieldsComponentData),\r\n                        openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false,\r\n                        loadEsign: false,ismoveSample:false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        AdditionalFieldsComponentData: JSON.parse(response[0].data.AdditionalFieldsComponentData),\r\n                        openModal: true, isMultiSampleAdd: false, openSpreadSheet: true,\r\n                        editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false, loadEsign: false,ismoveSample:false\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n        let selectedProjectType = this.state.selectedProjectType;\r\n        let masterData = this.state.masterData;\r\n        if (fieldName === 'nstoragecategorycode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: comboData.value\r\n            }, fieldName, comboData);\r\n        } else if (fieldName === 'ncontainertypecode') {\r\n            return this.getContainerStructure({\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontainertypecode: comboData.value\r\n            }, fieldName, comboData);\r\n\r\n        } else if (fieldName === 'nprojecttypecode') {\r\n            if (selectedProjectType.value !== comboData.value) {\r\n                masterData = {\r\n                    ...masterData,\r\n                    sampleStoragetransaction: []\r\n                }\r\n            }\r\n            this.setState({ masterData, selectedProjectType: { label: comboData.label, value: comboData.value } })\r\n\r\n        } else if (fieldName === 'ncontainerstructurecode') {\r\n            selectedRecord['nrow'] = comboData.item.nrow ? comboData.item.nrow : 1;\r\n            selectedRecord['ncolumn'] = comboData.item.ncolumn ? comboData.item.ncolumn : 1;\r\n        } else if (fieldName === 'nsamplestoragelocationcode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: this.state.selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value\r\n\r\n            }, fieldName, comboData);\r\n        }\r\n        if (fieldName === 'nsamplestorageversioncode') {\r\n            selectedRecordFilter[fieldName] = comboData;\r\n            this.setState({ selectedRecordFilter });\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord, selectedRecordFilter });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveSampleStorageTransaction = (saveType) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let containerpathCodeArray = [];\r\n        if (this.state.operation === 'create') {\r\n            containerpathCodeArray = selectedRecord['nsamplestoragecontainerpathcode'].map(item => item.value);\r\n        }\r\n        const inputParam =\r\n        {\r\n            nsamplestoragetransactioncode: selectedRecord['nsamplestoragetransactioncode'] ?\r\n                parseInt(selectedRecord['nsamplestoragetransactioncode']) : 0,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            nsamplestoragemappingcode: selectedRecord['nsamplestoragemappingcode'] ?\r\n                parseInt(selectedRecord['nsamplestoragemappingcode']) : 0,\r\n            ncontainertypecode: -1,\r\n            nproductcode: selectedRecord['nproductcode'].value,\r\n            ndirectionmastercode: -1,\r\n            ssamplestoragemappingname: \"-\",\r\n            nsamplestoragecontainerpathcode: this.state.operation === 'create' ?\r\n                JSON.stringify(containerpathCodeArray) : parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),\r\n            containerpathsize: containerpathCodeArray.length,\r\n            nneedposition: 4,\r\n            ncontainerstructurecode: -1, nquantity: selectedRecord['nquantity'] ?\r\n                parseInt(selectedRecord['nquantity']) : 1,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.CRUDSampleStorageTransaction(inputParam, this.state.operation);\r\n        }\r\n    }\r\n    getsamplestoragetransaction = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getsamplestoragetransaction\", {\r\n            userinfo: this.props.Login.userInfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    childDataChange = (selectedRecord, availableContainersdata) => {\r\n        this.setState({\r\n            availableContainers: availableContainersdata,\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    childSheetDataChange = (sheetData) => {\r\n\r\n        this.setState({\r\n            // selectedRecord: {\r\n            //     ...this.state.selectedRecord,\r\n            //     sheetData: {\r\n            //         ...this.state.selectedRecord.sheetData,\r\n            //         ...sheetData\r\n            //     }\r\n            // },\r\n            sheetData: {\r\n                ...sheetData\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    // Actions start\r\n    getActiveSampleStorageMappingById = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getActiveSampleStorageMappingById\", {\r\n            nsamplestoragelocationcode: inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,\r\n            userinfo: userinfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    }//,\r\n                    // selectedRecord: {\r\n                    //     ...this.state.selectedRecord\r\n                    //    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\r\n                    // }\r\n                    ,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n    filterColumnData = (filterValue, filterParam) => {\r\n        let masterData = filterParam.masterData;\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData[filterParam.inputListName] && masterData[filterParam.inputListName].length > 0) {\r\n                primaryKeyValue = masterData[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = searchData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n\r\n            }\r\n            if (searchedData.length > 0) {\r\n                primaryKeyValue = searchedData[0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n\r\n        if (primaryKeyValue !== 0) {\r\n            this.setState({ loading: true });\r\n            return rsapi.post(filterParam.fetchUrl, { ...filterParam.fecthInputObject, [filterParam.primaryKeyField]: primaryKeyValue })\r\n                .then(response => {\r\n                    masterData[\"searchedData\"] = searchedData;\r\n                    masterData = { ...masterData, ...response.data };\r\n\r\n                    if (filterParam.sortField) {\r\n                        sortData(masterData, filterParam.sortOrder, filterParam.sortField);\r\n                    }\r\n                    else {\r\n                        sortData(masterData);\r\n                    }\r\n                    this.setState({ masterData, loading: false, skip: 0, take: 10, selectedId: null });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ loading: false });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            masterData[filterParam.selectedObject] = undefined;\r\n            masterData[\"searchedData\"] = [];\r\n            Object.keys(masterData).forEach(item => {\r\n                if (item !== filterParam.inputListName && item !== filterParam.selectedObject\r\n                    && filterParam.unchangeList && filterParam.unchangeList.indexOf(item) === -1)\r\n                    masterData[item] = [];\r\n            })\r\n            this.setState({\r\n                masterData, operation: null, modalName: undefined,\r\n                loading: false\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    ConfirmMove = () => { \r\n        let destinationPathlst = [];\r\n        let dataResult = this.state.dataResult;\r\n        dataResult.data.map(item => {\r\n              item.items.map(item => {\r\n                if (item.hasOwnProperty('selected') && item.selected) {\r\n                    destinationPathlst.push(item);\r\n                } \r\n            });\r\n        });\r\n        const inputData={\r\n            isok:true,\r\n            filterprojecttypecode:this.state.selectedProjectType.value,\r\n            selectedContainers: JSON.stringify(destinationPathlst),\r\n            nsourcemappingcode: JSON.stringify(destinationPathlst.map(y => y.nsamplestoragemappingcode)),\r\n            destinationPathCount: destinationPathlst.length,\r\n            isMultiContainermove: true,\r\n            nsamplestoragelocationcode: this.state.selectedRecord.nsamplestoragelocationcode.value, \r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"SampleStorageTransaction\",\r\n            classUrl: 'samplestoragemove',\r\n            inputData: inputData,\r\n            operation: \"update\",\r\n            dataState: this.state.dataStateChange,\r\n          };\r\n\r\n        this.confirmMessage.confirm(\"deleteMessage\", \r\n        this.props.intl.formatMessage({ id: \"IDS_WARNING\" }),\r\n         this.props.intl.formatMessage({ id: \"IDS_MISMATCHCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n             this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n             this.state.loadEsign?\r\n             ()=>this.props.crudMasterstorage(inputParam, this.state.masterData, \"openModal\" )\r\n             :\r\n             ()=>this.CRUDSampleStorageTransaction({...inputData}, 'update'));\r\n    }\r\n    CRUDSampleStorageTransaction = (inputParam, operation) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragemove/\" + operation + \"SampleStorageTransaction\", inputParam);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                // if(this.state.isMultiContainermove){\r\n                //     this.ConfirmMove()\r\n                // }else{\r\n                    this.setState({\r\n                        isInitialRender: true,\r\n                        selectedRecord: {},\r\n                        masterData: {\r\n                            ...this.state.masterData, ...response[0].data\r\n                        },\r\n                        openModal: false,\r\n                        loading: false,\r\n                        ismoveSample: false\r\n                    });\r\n                //} \r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else { \r\n                    if(error.response.data==='IDS_SOURCEANDDESTINATIONMISMATCH'){\r\n                        this.ConfirmMove()\r\n                    }else{\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    getSampleStorageLocation(inputData, fieldName, comboData) {\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        if (fieldName === 'nsamplestoragelocationcode') {\r\n            inputParamData = {\r\n                nstoragecategorycode: selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        } else {\r\n            inputParamData = {\r\n                nstoragecategorycode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getsamplestoragemapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { storageLocationOptions,\r\n                    sampleStorageVersionOptions } = this.state\r\n\r\n                let sampleStorageLocationList = constructOptionList(response[0].data.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n                storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n                let sampleStorageVersionList = constructOptionList(response[0].data.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                    \"nversionno\", undefined, undefined, undefined);\r\n                sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.length > 0 ?\r\n                        storageLocationOptions[0] : [],\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.length > 0 ?\r\n                        sampleStorageVersionOptions[0] : [],\r\n\r\n                }\r\n                this.setState({\r\n                    storageLocationOptions, sampleStorageVersionOptions,\r\n                    selectedRecordFilter: {\r\n                        ...selectedRecordFilter,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.setState({ loading: true })\r\n        let inputParamData = {\r\n            nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getsamplestoragemapping\", inputParamData);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let object = {\r\n                    selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\r\n                    // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\r\n                    // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\r\n                }\r\n                let filterData = this.generateBreadCrumData(object);\r\n\r\n                this.setState({\r\n                    filterData,\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data,\r\n                        //   sampleStoragetransaction: response[0].data['sampleStoragetransaction'],\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    addSampleStorageMapping() {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            // nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"containertype/getContainerType\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n                const containerstructureMap = constructOptionList(response[0].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        directionmasterOptions: directionmasterList,\r\n                        // ncontainertypecode: containerTypeList[0],\r\n                        // containerStructureOptions: containerstructureList,\r\n                        // ncontainerstructurecode: containerstructureList[0],\r\n                        nrow: containerStructure.length > 0 ? containerStructure[0].nrow : 1,\r\n                        ncolumn: containerStructure.length > 0 ? containerStructure[0].ncolumn : 1,\r\n                        isInitialRender: true\r\n\r\n                    },\r\n                    openSpreadSheet: false,\r\n                    operation: 'create',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    getContainerStructure(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            ncontainertypecode: comboData.value,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/getContainerStructure\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { containerStructureOptions, selectedRecord } = this.state\r\n\r\n                let containerStructureList = constructOptionList(response[0].data.containerStructure || [], \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, undefined);\r\n                containerStructureOptions = containerStructureList.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nrow: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.nrow : 1,\r\n                    ncolumn: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.ncolumn : 1,\r\n                    ncontainerstructurecode: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0] : [],\r\n                    containerStructureOptions: containerStructureOptions.length > 0 ?\r\n                        [...containerStructureOptions] : [],\r\n                }\r\n\r\n                this.setState({\r\n\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    onSampleMappingSaveClick = () => {\r\n        const mandatoryFields =\r\n             this.state.isMultiContainermove ? \r\n             [{\r\n                \"idsName\": \"IDS_TOSTORAGESTRUCTURENAME\", \"dataField\": \"nsamplestoragelocationcode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            } ] :\r\n                [{\r\n                    \"idsName\": \"IDS_TOSTORAGESTRUCTURENAME\", \"dataField\": \"nsamplestoragelocationcode\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                },\r\n                {\r\n                    \"idsName\": \"IDS_TOSAMPLESTORAGEPATH\",\r\n                    \"dataField\": \"nsamplestoragemappingcode\", \"mandatoryLabel\":\r\n                        \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                }] \r\n                // :\r\n                // this.state.openSpreadSheet ? [] : this.state.selectedRecord[\"nneedposition\"] === undefined ||\r\n                //     this.state.selectedRecord[\"nneedposition\"] === false ? [\r\n                //     {\r\n                //         \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                //         \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_PRODUCT\",\r\n                //         \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                //             \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                //         \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                //             \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                //     }\r\n                // ] : [\r\n                //     {\r\n                //         \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                //         \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_PRODUCT\",\r\n                //         \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                //             \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     }\r\n                //     ,\r\n                //     {\r\n                //         \"idsName\": \"IDS_CONTAINERTYPE\",\r\n                //         \"dataField\": \"ncontainertypecode\", \"mandatoryLabel\":\r\n                //             \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_CONTAINERSTRUCTURENAME\",\r\n                //         \"dataField\": \"ncontainerstructurecode\", \"mandatoryLabel\":\r\n                //             \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_DIRECTION\",\r\n                //         \"dataField\": \"ndirectionmastercode\", \"mandatoryLabel\":\r\n                //             \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                //     },\r\n                //     {\r\n                //         \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                //         \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                //             \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                //     }\r\n                // ]\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n            this.onSaveClick)\r\n    }\r\n    dataStateChange = (event) => {\r\n        let dataResult = this.state.dataResult;\r\n        if (this.state.masterData.sampleStoragetransaction) {\r\n            dataResult = this.state.masterData.sampleStoragetransaction ?\r\n                this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                    event.dataState ? event.dataState : {\r\n                        take: 10,\r\n                        skip: 0\r\n                    }) : []\r\n            dataResult.data.map(x => {\r\n                return x.items.map(item => {\r\n                    item.selected = false;\r\n                    return item;\r\n                });\r\n            });\r\n        }\r\n        this.setState({\r\n            dataResult: dataResult,\r\n            dataStateChange: event.dataState\r\n        });\r\n    }\r\n\r\n    approveSampleStorageMapping = (event) => {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/approveSampleStorageMapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    getDynamicFilterExecuteData(nflag) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (nflag === 2 ? true : (selectedRecord.filterquery && selectedRecord.filterquery !== \"\")) {\r\n            this.setState({ loading: true })\r\n            let obj = {// ...inputParam.component, \r\n                label: 'sampleStoragetransaction', valuemember: 'nsamplestoragemappingcode',\r\n                filterquery: nflag === 2 ?\r\n                    this.state.submittedselectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value\r\n                    :\r\n                    selectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value\r\n                , source: 'view_samplestoragelocation', userinfo: this.props.Login.userInfo\r\n            }\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestoragemove/getdynamicfilterexecutedata\", obj);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let masterData = this.state.masterData\r\n                    masterData = { ...masterData, ...response[0].data }\r\n                    this.setState({\r\n                        masterData: { ...masterData },\r\n                        loading: false,\r\n                        openModal: false,\r\n                        isFilterPopup: false,\r\n                        submittedselectedRecord: nflag === 2 ?\r\n                            { ...this.state.submittedselectedRecord }\r\n                            :\r\n                            { ...selectedRecord }\r\n                        ,\r\n                        selectedRecord: {},\r\n                        displayQuery: this.state.tree ? QbUtils.queryString(this.state.tree, this.state.config, true) : \"\"\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAFILTER\" }));\r\n\r\n        }\r\n    }\r\n    movemultipleContainer = () => {\r\n        let destinationPathlst = [];\r\n        let dataResult = this.state.dataResult;\r\n        dataResult.data.map(item => {\r\n              item.items.map(item => {\r\n                if (item.hasOwnProperty('selected') && item.selected) {\r\n                    destinationPathlst.push(item);\r\n                } \r\n            });\r\n        }); \r\n        if(destinationPathlst.length>0){\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragemove/getsamplemovedata\",\r\n            {\r\n                isMultiContainermove: true,\r\n                // ncontainertypecode: 1,\r\n                // ncontainerstructurecode: 1,\r\n                isMultiContainermove: true,\r\n                userinfo: this.props.Login.userInfo\r\n            });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let storagemoverecords = {};\r\n                let selectedRecord = this.state.selectedRecord;\r\n                const samplestoragecontainerpathMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const samplestoragecontainerpathList = samplestoragecontainerpathMap.get(\"OptionList\");\r\n                const storageStructureMap = constructOptionList(response[0].data['sampleStorageLocation'] || [],\r\n                    \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", \"descending\", undefined, true);\r\n                const storageStructureList = storageStructureMap.get(\"OptionList\");\r\n\r\n                storagemoverecords = this.state.masterData.sampleStoragetransaction.filter(item =>\r\n                    item.hasOwnProperty('selected') && item.selected\r\n                )\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nsamplestoragelocationcode: {\r\n                        label: storageStructureList[0].label,\r\n                        value: storageStructureList[0].value,\r\n                        item: storageStructureList[0]\r\n                    },\r\n                    storageStructureOptions: storageStructureList,\r\n                };\r\n                this.state.masterData.sampleStoragetransaction.map(item =>\r\n                    selectedRecord = {\r\n                        ...selectedRecord,\r\n                        mappingcodeOptions: {\r\n                            ...selectedRecord.mappingcodeOptions,\r\n                            [item.nsamplestoragemappingcode]: samplestoragecontainerpathList\r\n                        }\r\n                    }\r\n                )\r\n                this.setState({\r\n                    availableContainers: response[0].data['availableContainers'],\r\n                    totalContainers: response[0].data['totalContainers'],\r\n                    selectedRecord,\r\n                    isMultiContainermove: true,\r\n                    storagemoverecords: storagemoverecords,\r\n                    ismoveSample: true,\r\n                    openModal: true,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    ncontrolcode: this.state.controlMap.has(\"Move Multiple Container\") && this.state.controlMap.get(\"Move Multiple Container\").ncontrolcode\r\n                })\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTACONTAINERTOMOVE\" }));\r\n\r\n        }\r\n    }\r\n    moveSample = (param, nflag) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragemove/getsamplemovedata\",\r\n            {\r\n                nsamplestoragemappingcode: param.nsamplestoragemappingcode,\r\n                ncontainertypecode: param.ncontainertypecode,\r\n                ncontainerstructurecode: param.ncontainerstructurecode,\r\n                userinfo: this.props.Login.userInfo\r\n            });\r\n       const getProjectType = rsapi.post(\"projecttype/getProjectType\", {\r\n        \"userinfo\": this.props.Login.userInfo\r\n       }) ;\r\n        const getProduct = rsapi.post(\"/samplestoragelocation/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n        urlArray = [url1,getProduct,getProjectType];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageStructureMap = constructOptionList(response[0].data['sampleStorageLocation'] || [],\r\n                    \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", \"descending\", undefined, true);\r\n                const storageStructureList = storageStructureMap.get(\"OptionList\");\r\n\r\n                // const samplestoragecontainerpathMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                //     \"nsamplestoragecontainerpathcode\",\r\n                //     \"scontainerpath\", undefined, undefined, true);\r\n                // const samplestoragecontainerpathList = samplestoragecontainerpathMap.get(\"OptionList\");\r\n               // ALPD-3757\r\n                const sampleStorageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragemappingcode\",\"scontainerpath\",undefined,undefined, true\r\n                    );\r\n                const sampleStorageMappingList = sampleStorageMappingMap.get(\"OptionList\");\r\n\r\n                const sampleTypeMap = constructOptionList(response[1].data  || [], \"nproductcode\",\"sproductname\", undefined, undefined, true);\r\n\r\n                const sampleTypeList = sampleTypeMap.get(\"OptionList\");\r\n                let ProjectTypelst = constructOptionList(response[2].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    sampleTypeList:sampleTypeList,\r\n                    ProjectTypeOptions:ProjectTypelst,\r\n                    sourcencontainertypecode: param.ncontainertypecode,\r\n                    sourcencontainerstructurecode: param.ncontainerstructurecode,\r\n                    isMultiContainermove: false,\r\n                    selectedRecord: {\r\n                        // nprojecttypecode:{\r\n                        //     label: this.state.selectedProjectType.label,\r\n                        //     value:  this.state.selectedProjectType.value \r\n                        // },\r\n                        nfromsamplestoragelocationcode: {\r\n                            label: param.ssamplestoragelocationname,\r\n                            value: param.nsamplestoragelocationcode,\r\n                            item: param\r\n                        },\r\n                        nfromsamplestoragemappingcode: {\r\n                            label: param.scontainerpath,\r\n                            value: param.nsamplestoragemappingcode,\r\n                            item: param\r\n                        },\r\n                        nsamplestoragelocationcode: storageStructureList.length > 0 ? {\r\n                            label: storageStructureList[0].label,\r\n                            value: storageStructureList[0].value,\r\n                            item: storageStructureList[0].item\r\n                        } : \"\",\r\n                        nsamplestoragemappingcode: sampleStorageMappingList.length > 0 ? {\r\n                            label: sampleStorageMappingList[0].label,\r\n                            value: sampleStorageMappingList[0].value,\r\n                            item: sampleStorageMappingList[0].item\r\n                        }  : \"\"\r\n                        ,\r\n                        storageStructureOptions: storageStructureList,\r\n                        samplestoragecontainerpathOptions: sampleStorageMappingList,\r\n                    },\r\n                    editedsheetData: param,\r\n                    ismoveSample: true,\r\n                    openModal: true,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    ncontrolcode: this.state.controlMap.has(\"Move Container\") && this.state.controlMap.get(\"Move Container\").ncontrolcode\r\n                })\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    fetchRecord = (data) => {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"samplestoragetransaction/getEditSampleStorageMapping\",\r\n            { 'nsamplestoragemappingcode': data.nsamplestoragemappingcode, 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2, url3];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n\r\n                const containerstructureMap = constructOptionList(response[2].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                const editedObject = response[2].data.editsampleStorageMapping;\r\n\r\n                storageMappingMapList.unshift({ label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode })\r\n                selectedRecord = {\r\n                    ndirectionmastercode: { label: editedObject.sdirection, value: editedObject.ndirectionmastercode },\r\n                    nsamplestoragecontainerpathcode: { label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode },\r\n                    nproductcode: { label: editedObject.sproductname, value: editedObject.nproductcode },\r\n                    ncontainertypecode: { label: editedObject.scontainertype, value: editedObject.ncontainertypecode },\r\n                    ncontainerstructurecode: { label: editedObject.scontainerstructurename, value: editedObject.ncontainerstructurecode },\r\n                    nneedposition: editedObject.nneedposition === 3 ? true : false,\r\n                    directionmasterOptions: directionmasterList,\r\n                    nquantity: editedObject.nquantity,\r\n                    nrow: editedObject.nrow,\r\n                    ncolumn: editedObject.ncolumn,\r\n                    nsamplestoragemappingcode: editedObject.nsamplestoragemappingcode\r\n                }\r\n                this.setState({\r\n                    openSpreadSheet: false,\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        containerStructureOptions: containerstructureList,\r\n                        isInitialRender: true\r\n                    },\r\n                    operation: 'update',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    // Actions End\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        }\r\n        else if (event.target.type === 'select-one') {\r\n\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.sheetData !== this.state.sheetData)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    handlePageChangeFilter = (event) => {\r\n        this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    onChange = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"tree\"] = immutableTree;\r\n        selectedRecord[\"config\"] = config;\r\n        let tree = QbUtils.getTree(immutableTree);\r\n        tree = QbUtils.queryString(immutableTree, config, true);\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        this.setState({ tree: immutableTree, config: config, selectedRecord: { ...selectedRecord } });\r\n\r\n    };\r\n    // cellRender(tdElement, cellProps) {\r\n\r\n    //     if (cellProps.rowType === \"groupFooter\") {\r\n    //         console.log('cellProps.field', cellProps)\r\n    //         if (cellProps.dataItem.field === \"ssamplestoragelocationname\") {\r\n    //             console.log('tdElement', tdElement, 'cellProps', cellProps)\r\n    //             return (\r\n    //                 <td aria-colindex={cellProps.columnIndex} role={\"gridcell\"}>\r\n    //                     Sum: {cellProps.dataItem.aggregates.navailablespace.sum}\r\n    //                 </td>\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     return tdElement;\r\n    // }\r\n    // handleGroupChange = (event) => {\r\n    //     const newDataState = this.processWithGroups(this.state.masterData.sampleStoragetransaction || [], this.state.dataStateChange, event.group);\r\n    //     this.setState({\r\n    //         masterData: { ...this.state.masterData, sampleStoragetransaction: newDataState },\r\n    //         group: event.group,\r\n    //     });\r\n    // };\r\n    // processWithGroups = (data, group) => {\r\n    //     const newDataState = groupBy(data, group);\r\n    //     return newDataState;\r\n    // };\r\n    // headerSelectionChange = (event) => {\r\n    //     const checkboxElement = event.target;\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let sampleStoragetransaction=this.state.masterData.sampleStoragetransaction;\r\n    //     let masterData=this.state.masterData\r\n    //     sampleStoragetransaction.map(item => { \r\n    //             if (item.selected === undefined) {\r\n    //                 item.selected = false;\r\n    //             }\r\n    //             item.selected = checked;\r\n    //             return item; \r\n    //     });\r\n    //     masterData[sampleStoragetransaction]=sampleStoragetransaction\r\n    //     this.setState({ masterData })\r\n    // }\r\n    headerSelectionChange = (event) => {\r\n        const checkboxElement = event.target;\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let dataResult = this.state.dataResult;\r\n        dataResult.data.map(item => {\r\n            return item.items.map(item => {\r\n                if (item.selected === undefined) {\r\n                    item.selected = false;\r\n                }\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n        });\r\n        this.setState({ dataResult })\r\n    }\r\n    selectionChange = (event) => {\r\n        let dataResult = this.state.dataResult;\r\n        dataResult.data.map(x => {\r\n            return x.items.map(item => {\r\n                if (item['nsamplestoragemappingcode'] === event.dataItem['nsamplestoragemappingcode']) {\r\n                    item.selected = !event.dataItem.selected;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n        this.setState({ dataResult })\r\n    }\r\n    // selectionChange = (event) => {\r\n    //     let sampleStoragetransaction=this.state.masterData.sampleStoragetransaction;\r\n    //     let masterData=this.state.masterData\r\n    //     sampleStoragetransaction.map(item => {\r\n    //             if (item['nsamplestoragemappingcode'] === event.dataItem['nsamplestoragemappingcode']) {\r\n    //                 item.selected = !event.dataItem.selected;\r\n    //             }\r\n    //             return item; \r\n    //     });\r\n    //     masterData[sampleStoragetransaction]=sampleStoragetransaction\r\n    //     this.setState({ masterData })\r\n    // }\r\n    processWithGroups = (data, dataState) => {\r\n        const aggregates = [\r\n            {\r\n                field: \"navailablespace\",\r\n                aggregate: \"sum\",\r\n            }\r\n        ];\r\n        const groups = dataState.group;\r\n        if (groups) {\r\n            groups.map((group) => (group.aggregates = aggregates));\r\n        }\r\n        dataState.group = groups;\r\n        const newDataState = process(data, dataState);\r\n        // setGroupIds({\r\n        //     data: newDataState.data,\r\n        //     group: dataState.group,\r\n        // });\r\n        return newDataState;\r\n    };\r\n    render() {\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"Add SampleStorageTransaction\") && this.state.controlMap.get(\"Add SampleStorageTransaction\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\r\n        const moveSampleId = this.state.controlMap.has(\"Move Container\") && this.state.controlMap.get(\"Move Container\").ncontrolcode;\r\n        const moveMultipleSampleId  = this.state.controlMap.has(\"Move Multiple Container\") && this.state.controlMap.get(\"Move Multiple Container\").ncontrolcode;\r\n\r\n        const addMultipleSampleId = this.state.controlMap.has(\"AddMultipleSample\") && this.state.controlMap.get(\"AddMultipleSample\").ncontrolcode;\r\n        const addSampleId = this.state.controlMap.has(\"AddSample\") && this.state.controlMap.get(\"AddSample\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\r\n            fetchUrl: \"sampleStoragetransaction/getActiveSampleStorageMappingById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssamplestoragelocationname\"]\r\n        };\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n\r\n        const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n                <Preloader loading={this.state.loading} />\r\n                <ListWrapper className=\"client-list-content\">\r\n                    {\r\n\r\n\r\n                        <Col md={12}>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nprojecttypecode\"}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.onComboChange(event, 'nprojecttypecode')}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                        isMandatory={false}\r\n                                        value={this.state.selectedProjectType ? this.state.selectedProjectType || [] : []}\r\n                                        options={this.state.masterData && this.state.masterData.projectTypeOptions || []}\r\n                                        optionId={\"value\"}\r\n                                        optionValue={\"label\"}\r\n                                        isMulti={false}\r\n                                        isDisabled={false}\r\n                                        isSearchable={false}\r\n                                        isClearable={false}\r\n                                    />\r\n                                </Col>\r\n                            </Row><Row>\r\n                                <Col md={12}>\r\n                                    <DataGridForStorage\r\n                                        isDownloadPDFRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        isDownloadExcelRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        isRefreshRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        reloadData={(e) => this.getDynamicFilterExecuteData(2)}\r\n                                        isCustomButton={true}\r\n                                        customButtonlist={\r\n                                            this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                                this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                    this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                        take: 10,\r\n                                                        skip: 0\r\n                                                    }).data.length > 0 ?\r\n                                                [{\r\n                                                    label: 'IDS_VIEWMULTIPLEBOX',\r\n                                                    id: {},\r\n                                                    hidden: false//this.state.userRoleControlRights.indexOf(addMultipleSampleId) === -1\r\n                                                    ,\r\n                                                    onClick: () => this.addSample({}, 2),\r\n                                                    controlname: 'faBoxes'\r\n                                                },\r\n                                                {\r\n                                                    label: 'IDS_MOVEMULTIPLECONTAINER',\r\n                                                    id: {},\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(moveMultipleSampleId) === -1,\r\n                                                    onClick: () => this.movemultipleContainer(),\r\n                                                    controlname: 'faDollyFlatbed'\r\n                                                },\r\n                                                {\r\n                                                    label: 'IDS_SEARCH',\r\n                                                    id: {},\r\n                                                    onClick: () => this.opensearch(),\r\n                                                    controlname: 'faSearch'\r\n                                                }] : [{\r\n                                                    label: 'IDS_SEARCH',\r\n                                                    id: {},\r\n                                                    onClick: () => this.opensearch(),\r\n                                                    controlname: 'faSearch'\r\n                                                }]}\r\n                                        cellRender={this.cellRender}\r\n                                        group={this.state.group || []}\r\n                                        primaryKeyField={'nsamplestoragemappingcode'}\r\n                                        // groupable={true}\r\n                                        // groupfooter={true}\r\n                                        // aggregateLabel={'IDS_AVAILABLESPACE'}\r\n                                        // aggregatedColumn={'navailablespace'}\r\n                                        selectionChange={this.selectionChange}\r\n                                        headerSelectionChange={this.headerSelectionChange}\r\n                                        data={this.state.masterData &&\r\n                                            this.state.masterData.sampleStoragetransaction}\r\n                                        dataResult={\r\n                                            // this.state.masterData && this.state.masterData.sampleStoragetransaction ? this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                            //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                            //         take: 10,\r\n                                            //         skip: 0\r\n                                            //     }) : []\r\n                                            this.state.dataResult ? this.state.dataResult : []\r\n                                        }\r\n                                        dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                        dataStateChange={this.dataStateChange}\r\n                                        extractedColumnList={this.state.extractedColumnList}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        deleteRecord={this.deleteRecord}\r\n                                        pageable={true}\r\n                                        scrollable={'scrollable'}\r\n                                        gridHeight={'900px'}\r\n                                        isActionRequired={true}\r\n                                        isToolBarRequired={true}\r\n                                        actionIcons={\r\n                                            [\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_MOVECONTAINER\" }),\r\n                                                    controlname: \"faDolly\",\r\n                                                    hidden:  this.state.userRoleControlRights.indexOf(moveSampleId) === -1,\r\n                                                    objectName: \"edit\",\r\n                                                    onClick: this.moveSample\r\n                                                },\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_VIEWBOX\" }),\r\n                                                    controlname: \"faBox\",\r\n                                                    hidden: false// this.state.userRoleControlRights.indexOf(addSampleId) === -1\r\n                                                    ,\r\n                                                    objectName: \"add\",\r\n                                                    onClick: (param) => this.addSample(param, 1)\r\n                                                }]}\r\n                                    />\r\n                                    {/* <DataGrid\r\n                                        isDownloadPDFRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        isDownloadExcelRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        isRefreshRequired={this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                            this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }).data.length > 0 ?\r\n                                            true : false}\r\n                                        reloadData={(e) => this.getDynamicFilterExecuteData(2)}\r\n                                        isCustomButton={true}\r\n                                        customButtonlist={\r\n                                            this.state.masterData && this.state.masterData.sampleStoragetransaction &&\r\n                                                this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                    this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                        take: 10,\r\n                                                        skip: 0\r\n                                                    }).data.length > 0 ?\r\n                                                [{\r\n                                                    label: 'IDS_ADDSAMPLETOMULTIPLEBOX',\r\n                                                    id: {},\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(addMultipleSampleId) === -1,\r\n                                                    onClick: () => this.addSample({}, 2),\r\n                                                    controlname: 'faBoxes'\r\n                                                },\r\n                                                {\r\n                                                    label: 'IDS_SEARCH',\r\n                                                    id: {},\r\n                                                    onClick: () => this.opensearch(),\r\n                                                    controlname: 'faSearch'\r\n                                                }] : [{\r\n                                                    label: 'IDS_SEARCH',\r\n                                                    id: {},\r\n                                                    onClick: () => this.opensearch(),\r\n                                                    controlname: 'faSearch'\r\n                                                }]}\r\n                                        cellRender={this.cellRender}\r\n                                        group={this.state.group || []} \r\n                                        primaryKeyField={'nsamplestoragemappingcode'}\r\n                                        groupable={true}\r\n                                        groupfooter={true}\r\n                                        aggregateLabel={'IDS_AVAILABLESPACE'}\r\n                                        aggregatedColumn={'navailablespace'}\r\n                                        data={this.state.masterData &&\r\n                                            this.state.masterData.sampleStoragetransaction}\r\n                                        dataResult={ \r\n                                               this.state.masterData && this.state.masterData.sampleStoragetransaction ? this.processWithGroups(this.state.masterData.sampleStoragetransaction || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    take: 10,\r\n                                                    skip: 0\r\n                                                }) : []\r\n                                        }\r\n                                        dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                        dataStateChange={this.dataStateChange}\r\n                                        extractedColumnList={this.state.extractedColumnList}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        deleteRecord={this.deleteRecord} \r\n                                        pageable={true}\r\n                                        scrollable={'scrollable'} \r\n                                        gridHeight={'600px'}\r\n                                        isActionRequired={true}\r\n                                        isToolBarRequired={true}\r\n                                        actionIcons={\r\n                                            [\r\n                                                 {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_MOVECONTAINER\" }),\r\n                                                    controlname: \"faPencilAlt\",\r\n                                                    hidden: false, //this.state.userRoleControlRights.indexOf(moveSampleId) === -1,\r\n                                                    objectName: \"edit\",\r\n                                                    onClick: this.moveSample\r\n                                                },\r\n                                                {\r\n                                                title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLETOABOX\" }),\r\n                                                controlname: \"faBox\",\r\n                                                hidden: this.state.userRoleControlRights.indexOf(addSampleId) === -1,\r\n                                                objectName: \"add\",\r\n                                                onClick: (param) => this.addSample(param, 1)\r\n                                            }]}\r\n                                    /> */}\r\n                                </Col></Row>\r\n                        </Col>\r\n\r\n                    }\r\n\r\n                </ListWrapper>\r\n\r\n                {\r\n                    this.state.openModal &&\r\n                    <SlideOutModal show={this.state.openModal}\r\n                        closeModal={this.closeModal}\r\n                        hideSave={this.state.ismoveSample ? false : true}\r\n                        needClose={this.state.ismoveSample ? true : this.state.isFilterPopup ? false : true}\r\n                        showSubmit={this.state.ismoveSample ? false : this.state.openSpreadSheet ? false : true}\r\n                        size={this.state.ismoveSample ? \"\" : (this.state.openSpreadSheet || this.state.isFilterPopup) ? 'xl' : \"\"}\r\n                        operation={\"\"}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.state.ismoveSample ? this.props.intl.formatMessage({ id: \"IDS_MOVECONTAINER\" }) : this.state.isFilterPopup ? \"\" :\r\n                            this.state.isMultiSampleAdd ? this.props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGE\" })\r\n                                : this.state.editedsheetData.scontainerpath}\r\n                        onSaveClick={this.state.isFilterPopup ? this.getDynamicFilterExecuteData.bind(this) : this.onSampleMappingSaveClick}\r\n                        esign={this.state.loadEsign}\r\n                        // className={\"wide-popup\"}\r\n\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={this.state.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.state.ismoveSample ?\r\n                                <MoveSample\r\n                                    ProjectTypeOptions={this.state.ProjectTypeOptions}\r\n                                    sampleTypeList={this.state.sampleTypeList}\r\n                                    availableContainers={this.state.availableContainers}\r\n                                    totalContainers={this.state.totalContainers}\r\n                                    storagemoverecords={this.state.storagemoverecords}\r\n                                    isMultiContainermove={this.state.isMultiContainermove}\r\n                                    sourcencontainertypecode={this.state.sourcencontainertypecode}\r\n                                    sourcencontainerstructurecode={this.state.sourcencontainerstructurecode}\r\n                                    operation={this.state.operation}\r\n                                    selectedRecordFilter={this.state.selectedRecordFilter}\r\n                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                    onComboChange={this.onComboChange}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    childDataChange={this.childDataChange}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                />\r\n                                :\r\n                                this.state.isFilterPopup ?\r\n                                    <FilterQueryBuilder\r\n                                        fields={this.state.fields}\r\n                                        isSampleStorage={true}\r\n                                        queryArray={this.state.queryArray}\r\n                                        skip={this.state.kendoSkip}\r\n                                        take={this.state.kendoTake}\r\n                                        onChange={this.onChange}\r\n                                        tree={this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree}\r\n                                        gridColumns={this.slideList}\r\n                                        filterData={this.props.Login.slideResult || []}\r\n                                        handlePageChange={this.handlePageChangeFilter}\r\n                                        static={true}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        updateStore={this.props.updateStore}\r\n                                    />\r\n                                    :\r\n                                    this.state.openSpreadSheet ? <>\r\n                                        <>\r\n                                            <MatrixComponent\r\n                                                isMoveScreen={true}\r\n                                                updateStore={this.props.updateStore}\r\n                                                intl={this.props.intl}\r\n                                                Rows={this.state.Rows || 1}\r\n                                                AdditionalFieldsComponentData={this.state.AdditionalFieldsComponentData}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                columns={this.state.columns || 1}\r\n                                                selectedRecord={this.state.selectedRecord.sheetData || {}}\r\n                                                sheetData={this.state.sheetData || {}}\r\n                                                isMultiSampleAdd={this.state.isMultiSampleAdd}\r\n                                                childSheetDataChange={this.childSheetDataChange}\r\n                                                editedsheetData={this.state.editedsheetData}\r\n                                                nbarcodedescription={this.props.Login.settings && parseInt(this.props.Login.settings[36])}\r\n                                                nbarcodeLength={this.props.Login.settings && parseInt(this.props.Login.settings[37])}\r\n                                                sbarcodeboxWidth={this.props.Login.settings && this.props.Login.settings[38]}\r\n                                                multipleSheetData={this.state.masterData &&\r\n                                                    this.state.masterData.sampleStoragetransaction &&\r\n                                                    process(this.state.masterData.sampleStoragetransaction || [],\r\n                                                        this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }).data} /></>\r\n\r\n                                    </>\r\n                                        :\r\n                                        <></>\r\n                            // <AddSampleStorageMapping\r\n                            //     operation={this.state.operation}\r\n                            //     selectedRecordFilter={this.state.selectedRecordFilter}\r\n                            //     onInputChange={(e) => this.onInputChange(e)}\r\n                            //     onComboChange={this.onComboChange}\r\n                            //     selectedRecord={this.state.selectedRecord || {}}\r\n                            //     childDataChange={this.childDataChange}\r\n                            //     userInfo={this.props.Login.userInfo}\r\n                            // />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    } \r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        //this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        // let destinationPathlst = [];\r\n        // let dataResult = this.state.dataResult;\r\n        // dataResult.data.map(item => {\r\n        //       item.items.map(item => {\r\n        //         if (item.hasOwnProperty('selected') && item.selected) {\r\n        //             destinationPathlst.push(item);\r\n        //         } \r\n        //     });\r\n        // });\r\n \r\n        this.props.validateEsignCredentialStorage(inputParam, \"openModal\",() => this.ConfirmMove())\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n \r\n \r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, validateEsignCredential, validateEsignCredentialStorage,crudMasterstorage,\r\n})(injectIntl(SampleStorageMove));"]},"metadata":{},"sourceType":"module"}