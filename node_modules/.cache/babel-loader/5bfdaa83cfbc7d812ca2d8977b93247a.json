{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\project\\\\ProjectMaster.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faPencilAlt, faThumbsUp, faUserTimes, faCloudDownloadAlt, faCheckCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport { ReactComponent as ReportEdit } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-edit.svg\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, changeProjectTypeFilter, filterColumnData, viewAttachment, addProjectMaster, ReportInfo, getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices, getClientByCategory, getQuotationByClient, closureProjectMaster, modalSave, projectMasterModal, validateEsignforModal } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport AddProjectMaster from \"../../pages/project/AddProjectMaster\";\nimport ReportInfoProject from \"../../pages/project/ReportInfoProject\";\nimport ProjectMasterTab from \"../../pages/project/ProjectMasterTab\";\nimport ProjectMasterClosure from \"../../pages/project/ProjectMasterClosure\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormatDateOnly, Lims_JSON_stringify, replaceBackSlash } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\";\nimport ProjectMasterFilter from './ProjectMasterFilter';\nimport { ReactComponent as Closure } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/cancel-close-svgrepo-com.svg\";\nimport { intl } from \"../../components/App\";\nimport ModalShow from \"../../components/ModalShow\";\nimport AddCompletionDate from \"../../pages/project/AddCompletionDate\";\nimport ProjectMasterRetire from \"../../pages/project/ProjectMasterRetire\";\nimport AddProjectInfoPreview from \"../../pages/project/AddProjectInfoPreview\";\nimport ViewInfoDetails from \"../../components/ViewInfoDetails\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass ProjectMaster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveModalClick = () => {\n      if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\n        const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\n        const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\n        let inputData = [];\n        let inputParam = [];\n        let projectMasterData = [];\n        const postParam = {\n          inputListName: \"ProjectMaster\",\n          selectedObject: \"SelectedProjectMaster\",\n          primaryKeyField: \"nprojectmastercode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\n          fetchUrl: \"projectmaster/getProjectMaster\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n\n        if (this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\") {\n          if (this.state.selectedRecord[\"dprojectcompletiondate\"]) {\n            projectMasterData[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectcompletiondate\"], false);\n          }\n\n          projectMasterData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\n          inputParam = {\n            methodUrl: \"ProjectMaster\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: {\n              \"userinfo\": this.props.Login.userInfo,\n              \"projectmaster\": { ...this.props.Login.masterData.SelectedProjectMaster,\n                \"dtransactiondate\": projectMasterData[\"dtransactiondate\"],\n                \"scompletionremarks\": this.state.selectedRecord.scompletionremarks === undefined ? \"\" : this.state.selectedRecord.scompletionremarks,\n                \"ntransdatetimezonecode\": projectMasterData[\"ntransdatetimezonecode\"]\n              }\n            },\n            operation: this.props.Login.operation,\n            modalShow: false,\n            postParam,\n            selectedRecord: { ...this.state.selectedRecord\n            }\n          };\n        } // console.log(\"inputData\",inputData[\"projectmaster\"]);\n\n\n        if (this.props.Login.screenName === \"IDS_RETIREDPROJECT\") {\n          if (this.state.selectedRecord[\"dprojectretiredate\"]) {\n            projectMasterData[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectretiredate\"], false);\n          }\n\n          projectMasterData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\n          inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"ProjectMaster\",\n            inputData: {\n              \"userinfo\": this.props.Login.userInfo,\n              \"projectmaster\": { ...this.props.Login.masterData.SelectedProjectMaster,\n                \"dtransactiondate\": projectMasterData[\"dtransactiondate\"],\n                \"sretiredremarks\": this.state.selectedRecord.sretiredremarks === undefined ? \"\" : this.state.selectedRecord.sretiredremarks,\n                \"ntransdatetimezonecode\": projectMasterData[\"ntransdatetimezonecode\"]\n              }\n            },\n            operation: this.props.Login.operation,\n            postParam,\n            isClearSearch: this.props.Login.isClearSearch,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            modalShow: false\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              // loadEsign: true, screenData: { inputParam, masterData },\n              modalShow: false,\n              openModal: true,\n              screenName: this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" ? \"IDS_PROJECTCOMPLETION\" : \"IDS_RETIREDPROJECT\",\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.modalSave(inputParam, masterData);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      }\n    };\n\n    this.handleProjectMasterModal = (selectedProjectMaster, modalShowdata, controId) => {\n      //const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\n      //  const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\n      if (selectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\n        if (modalShowdata === \"ProjectCompletion\") {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              screenName: \"IDS_PROJECTCOMPLETION\",\n              modalShow: true,\n              operation: \"complete\",\n              ncontrolCode: controId,\n              selectedRecord: {\n                \"dprojectcompletiondate\": new Date()\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              screenName: \"IDS_RETIREDPROJECT\",\n              modalShow: true,\n              operation: \"retire\",\n              ncontrolCode: controId,\n              selectedRecord: {\n                \"dprojectretiredate\": new Date()\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_SELECTAPPROVEVERSION\"\n        }));\n      }\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let projectMasterData = [];\n      let inputParam = {};\n      projectMasterData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = {\n        inputListName: \"ProjectMaster\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\"\n      };\n\n      if (this.props.Login.operation === \"update\" && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n        projectMasterData[\"projectMaster\"] = {\n          nprojectmastercode: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\n          //     nprojecttypecode:this.state.selectedRecord.nprojecttypecode.value,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle,\n          sprojectcode: this.state.selectedRecord.sprojectcode,\n          sprojectname: this.state.selectedRecord.sprojectname,\n          sprojectdescription: this.state.selectedRecord.sprojectdescription,\n          srfwid: this.state.selectedRecord.srfwid,\n          // drfwdate: formatInputDate(this.state.selectedRecord[\"drfwdate\"],false),\n          // dprojectstartdate: formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false),\n          //     nstudydirectorcode:this.state.selectedRecord.nstudydirectorcode.value,\n          //     nteammembercode: this.state.selectedRecord.nteammembercode.value,\n          //     nperiodcode: this.state.selectedRecord.nperiodcode.value,\n          nprojectduration: this.state.selectedRecord.nprojectduration,\n          ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\n        };\n      } else if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        projectMasterData[\"projectMaster\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle,\n          sprojectname: this.state.selectedRecord.sprojectname,\n          sprojectcode: this.state.selectedRecord.sprojectcode === undefined ? \"-\" : this.state.selectedRecord.sprojectcode,\n          sprojectdescription: this.state.selectedRecord.sprojectdescription === undefined ? \"\" : this.state.selectedRecord.sprojectdescription,\n          nprojectduration: parseInt(this.state.selectedRecord.nprojectduration),\n          //  ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\n          ntransactionstatus: transactionStatus.DRAFT,\n          sfilename: this.state.selectedRecord.sfilename === undefined ? \"\" : this.state.selectedRecord.sfilename,\n          sclosureremarks: this.state.selectedRecord.sclosureremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks,\n          sretiredremarks: this.state.selectedRecord.sretiredremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks,\n          scompletionremarks: this.state.selectedRecord.scompletionremarks === undefined ? \"\" : this.state.selectedRecord.scompletionremarks,\n          srfwid: this.state.selectedRecord.srfwid === undefined ? \"\" : this.state.selectedRecord.srfwid\n        };\n        /*     this.projectMasterFieldList.map((item) => {\r\n               return (projectMasterData[\"projectMaster\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n               undefined :this.state.selectedRecord[item]);\r\n             }); */\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        projectMasterData[\"projectMaster\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"] ? this.state.selectedRecord[\"nuserrolecode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA; // projectMasterData[\"projectMaster\"][\"nteammembercode\"] = this.state.selectedRecord[\"nteammembercode\"] ? this.state.selectedRecord[\"nteammembercode\"].value\n        //   : transactionStatus.NA;\n\n        projectMasterData[\"projectMaster\"][\"nperiodcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nperiodcode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"] ? this.state.selectedRecord[\"nclientcode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nquotationcode\"] = this.state.selectedRecord[\"nquotationcode\"] ? this.state.selectedRecord[\"nquotationcode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nautoprojectcode\"] = parseInt(this.props.Login.settings[31]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO; // projectMasterData[\"projectMaster\"][\"needjsontemplate\"] = parseInt(this.props.Login.settings[29]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO;\n        // if (this.state.selectedRecord[\"drfwdate\"] || this.state.selectedRecord[\"dprojectstartdate\"]) {\n        //   if (this.props.Login.operation === \"create\") {\n\n        if (this.state.selectedRecord[\"drfwdate\"]) {\n          projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpectcompletiondate\"]) {\n          projectMasterData[\"projectMaster\"][\"dexpectcompletiondate\"] = formatInputDate(this.state.selectedRecord[\"dexpectcompletiondate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dprojectcompletiondate\"]) {\n          projectMasterData[\"projectMaster\"][\"dprojectcompletiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectcompletiondate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dretiredate\"]) {\n          projectMasterData[\"projectMaster\"][\"dprojectretiredate\"] = formatInputDate(this.state.selectedRecord[\"dprojectretiredate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dprojectclosuredate\"]) {\n          projectMasterData[\"projectMaster\"][\"dprojectclosuredate\"] = formatInputDate(this.state.selectedRecord[\"dprojectclosuredate\"], false);\n        } //projectMasterData[\"projectMaster\"][\"drfwdate\"] = this.state.selectedRecord[\"drfwdate\"]? formatInputDate(this.state.selectedRecord[\"drfwdate\"], false):\"\";\n\n\n        projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"], false);\n        projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzprojectstartdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzexpectcompletiondate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzprojectcompletiondate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzprojectretiredate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzprojectclosuredate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\"; //   }\n        //   else {\n        //     projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"],false);\n        //     projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false);\n        //   }\n        // }\n      }\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_ADDMEMBERS\") {\n        projectMasterData[\"ProjectMember\"] = {};\n        projectMasterData[\"ProjectMember\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"][0] ? this.state.selectedRecord[\"nusercode\"][0].value : transactionStatus.NA;\n        projectMasterData[\"ProjectMember\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        inputParam = {\n          classUrl: \"projectmaster\",\n          methodUrl: \"ProjectMaster\",\n          inputData: projectMasterData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n      }\n      /* else if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n         inputParam = {\r\n         classUrl: \"projectmaster\",\r\n         methodUrl: \"ProjectMember\",\r\n         inputData: projectMasterData,\r\n         operation: this.props.Login.operation,\r\n         saveType,\r\n         formRef,\r\n         postParam,\r\n         searchRef: this.searchRef,\r\n         isClearSearch: this.props.Login.isClearSearch,\r\n       }\r\n      } */\n      // if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_PROJECTCLOSURE\")) {\n      //   inputParam = this.onSaveProjectMasterClosureFile(saveType, formRef);\n      // }\n\n\n      if (this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\") {\n        inputParam = this.onSaveReportInfoProject(saveType, formRef);\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      let modalName;\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" || this.props.Login.screenName === \"IDS_RETIREDPROJECT\") {\n        this.props.validateEsignforModal(inputParam);\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      }\n    };\n\n    this.onSaveProjectMasterClosureFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      let projectmasterclosureFile = {};\n      let projectmasterclosureFileArray = [];\n      const formData = new FormData();\n      const dtransactiondate = [];\n      const tempData = Object.assign({}, projectmasterclosureFile);\n      let postParam = {\n        inputListName: \"ProjectMaster\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\"\n      };\n      postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const splittedFileName = file.name.split('.');\n          const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n          const uniquefilename = create_UUID() + '.' + fileExtension;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"sfilename\"] = Lims_JSON_stringify(file.name ? file.name : \"\", false); // tempData[\"sclosureremarks\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"),false)  ;\n\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n        });\n      }\n\n      tempData[\"sclosureremarks\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"), false);\n      tempData[\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n      tempData[\"ntransactionstatus\"] = this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus;\n      tempData[\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojecttypecode;\n      tempData[\"sprojecttitle\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojecttitle, false);\n      tempData[\"sprojectcode\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojectcode, false);\n      tempData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\n      projectmasterclosureFileArray.push(tempData);\n      dtransactiondate[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectclosuredate\"], false); // dtransactiondate[\"ntransdatetimezonecode\"] =  this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\n\n      formData.append(\"dtransactiondate\", dtransactiondate[\"dtransactiondate\"]);\n      formData.append(\"ntransdatetimezonecode\", dtransactiondate[\"ntransdatetimezonecode\"]);\n      formData.append(\"projectmaster\", JSON.stringify(projectmasterclosureFileArray[0]));\n      formData.append(\"filecount\", acceptedFiles && acceptedFiles.length);\n      const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode;\n      let selectedId = null; // if (this.props.Login.operation === \"create\") {\n      //   // edit\n      //   postParam = { inputListName: \"ProjectMaster\", selectedObject: \"SelectedProjectMaster\", primaryKeyField: \"nprojectmastercode\",isSingleGet:true};\n      //   selectedId = selectedRecord[\"nprojectmastercode\"];\n      // }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            //ALPD-1826(while saving the file and link,audit trail is not captured the respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: \"closure\",\n        classUrl: \"projectmaster\",\n        saveType,\n        formRef,\n        methodUrl: \"ProjectMasterFile\",\n        postParam,\n        searchRef: this.searchRef,\n        // openClosureModal:false,\n        ncontrolcode: closureId\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            screenName: \"IDS_PROJECTCLOSURE\",\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.closureProjectMaster(inputParam, masterData);\n      } // return inputParam;\n\n    };\n\n    this.DeleteProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\n      const postParam = {\n        inputListName: \"ProjectMasterList\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\",\n        primaryKeyValue: selectedProjectMaster.nprojectmastercode,\n        fetchUrl: \"projectmaster/getActiveProjectMasterById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          projectmaster: selectedProjectMaster\n        },\n        operation,\n        isClearSearch: this.props.Login.isClearSearch,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PROJECTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveReportInfoProject = (saveType, formRef) => {\n      let postParam = undefined;\n      let inputData = [];\n      const selectedRecord = this.state.selectedRecord;\n      postParam = {\n        inputListName: \"ProjectMaster\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\"\n      };\n      inputData[\"reportinfoproject\"] = {};\n      inputData[\"reportinfoproject\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n      inputData[\"reportinfoproject\"][\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectType.nprojecttypecode;\n      inputData[\"reportinfoproject\"][\"sreporttemplateversion\"] = selectedRecord.sreporttemplateversion;\n      inputData[\"reportinfoproject\"][\"srevision\"] = selectedRecord.srevision;\n      inputData[\"reportinfoproject\"][\"srevisionauthor\"] = selectedRecord.srevisionauthor;\n      inputData[\"reportinfoproject\"][\"sintroduction\"] = selectedRecord.sintroduction;\n      inputData[\"reportinfoproject\"][\"stestproductheadercomments\"] = selectedRecord.stestproductheadercomments;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments1\"] = selectedRecord.stestproductfootercomments1;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments2\"] = selectedRecord.stestproductfootercomments2;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments3\"] = selectedRecord.stestproductfootercomments3;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments4\"] = selectedRecord.stestproductfootercomments4;\n      inputData[\"reportinfoproject\"][\"ssamplingdetails\"] = selectedRecord.ssamplingdetails;\n      inputData[\"reportinfoproject\"][\"suncertainitymeasurement\"] = selectedRecord.suncertainitymeasurement;\n      inputData[\"reportinfoproject\"][\"nreporttemplatecode\"] = this.state.selectedRecord[\"nreporttemplatecode\"] ? this.state.selectedRecord[\"nreporttemplatecode\"].value : transactionStatus.NA;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let dataState = this.state.dataState;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"ReportInfoProject\",\n        displayName: this.props.Login.screenName,\n        inputData: inputData,\n        selectedId: this.state.selectedRecord[\"nprojectmastercode\"],\n        operation: \"update\",\n        saveType,\n        formRef,\n        dataState,\n        searchRef: this.searchRef,\n        postParam: postParam\n      };\n      return inputParam; // this.fieldprojectreportinfoList.map(item => {\n      //     return inputData[\"projectreportinfo\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n      // })\n    };\n\n    this.viewProjectMasterClosureFile = (selectedProjectMaster, userInfo) => {\n      const inputParam = {\n        inputData: {\n          projectmasterclosurefile: selectedProjectMaster,\n          userinfo: userInfo\n        },\n        classUrl: \"projectmaster\",\n        operation: \"view\",\n        methodUrl: \"AttachedProjectMasterClosureFile\",\n        screenName: \"ProjectMaster Closure File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (caseNo) {\n        case 1:\n          // const selectedRecord = this.state.selectedRecord || {};\n          if (selectedRecord.nuserrolecode) {\n            if (parseInt(comboData.value) !== parseInt(selectedRecord.nuserrolecode.value)) {\n              // selectedRecord.nusercode={};\n              delete selectedRecord.nusercode;\n            }\n          }\n\n          selectedRecord[fieldName] = comboData;\n          selectedRecord[\"suserrolename\"] = comboData.item[\"suserrolename\"];\n          this.props.getuserComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nuserrolecode.label,\n              primarykey: selectedRecord.nuserrolecode.value\n            }\n          }, selectedRecord); // this.setState({ selectedRecord });\n\n          break;\n\n        case 2:\n          // let nfilterProjectType = this.state.nfilterProjectType || {}\n          // nfilterProjectType = comboData;\n          const selectedRecordfilter = this.state.selectedRecordfilter || {};\n          selectedRecordfilter[fieldName] = comboData;\n          this.setState({\n            selectedRecordfilter\n          });\n          break;\n\n        case 3:\n          selectedRecord[fieldName] = comboData;\n          this.setState({\n            selectedRecord\n          });\n          break;\n\n        case 4:\n          if (selectedRecord.nclientcatcode) {\n            if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcatcode.value)) {\n              delete selectedRecord.nclientcode;\n              if (selectedRecord.nquotationcode) delete selectedRecord.nquotationcode;\n            }\n          }\n\n          selectedRecord[fieldName] = comboData;\n          selectedRecord[\"sclientcatname\"] = comboData.item[\"sclientcatname\"];\n          this.props.getClientByCategory({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nclientcatcode.label,\n              primarykey: selectedRecord.nclientcatcode.value\n            }\n          }, selectedRecord);\n\n        case 5:\n          // if (selectedRecord.nclientcatcode) {\n          //   if (this.props.Login.selec !== parseInt(selectedRecord.nclientcatcode.value)) {\n          //   delete (selectedRecord.nclientcode);\n          //     delete (selectedRecord.nquotationcode);\n          //   }}\n          if (selectedRecord.nclientcode) {\n            if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcode.value)) {\n              delete selectedRecord.nquotationcode;\n            }\n          }\n\n          selectedRecord[fieldName] = comboData;\n          selectedRecord[\"squotationno\"] = comboData.item[\"squotationno\"];\n          this.props.getQuotationByClient({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nclientcatcode.label,\n              nclientcatcode: selectedRecord.nclientcatcode.value,\n              nclientcode: parseInt(comboData.value)\n            }\n          }, selectedRecord);\n\n        default:\n          break;\n      }\n    };\n\n    this.onDropProjectMasterFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.deleteProjectMember = deleteParam => {\n      const inputParam = {\n        classUrl: \"projectmaster\",\n        methodUrl: \"ProjectMember\",\n        //displayName: ,\n        inputData: {\n          \"projectmember\": deleteParam.selectedRecord,\n          //.dataItem,\n          \"nprojectmembercode\": deleteParam.selectedRecord.nprojectmembercode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: \"delete\",\n        selectedRecord: { ...this.state.selectedRecord\n        } // priceDataState:this.state.priceDataState\n\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openChildModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_MEMBERS\"\n            }),\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.onDropProjectMasterclosureFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      console.log(\"value:\", value, name);\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (name === \"nprojectduration\") {\n        if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\n          selectedRecord[name] = value.target.value;\n        } else {\n          selectedRecord[name] = \"\";\n        }\n      } else {\n        selectedRecord[name] = value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.approveProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\n      if (selectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n        const postParam = {\n          inputListName: \"ProjectMaster\",\n          selectedObject: \"SelectedProjectMaster\",\n          primaryKeyField: \"nprojectmastercode\",\n          primaryKeyValue: selectedProjectMaster.nprojectmastercode,\n          fetchUrl: \"projectmaster/getProjectMaster\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"projectmaster\": { ...selectedProjectMaster\n            },\n            \"nautoprojectcode\": parseInt(this.props.Login.settings[31]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROJECTMASTER\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.historydataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.historydataState),\n        historydataState: event.historydataState\n      });\n    };\n\n    this.ConfirmDelete = (selectedProjectMaster, operation, deleteId, screenName) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteProjectMaster(screenName, selectedProjectMaster, operation, deleteId));\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\"; // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n\n      if (this.props.Login.masterData.SelectedProjectType !== undefined) {\n        if (Object.values(this.props.Login.masterData.SelectedProjectType).length && this.props.Login.masterData.SelectedProjectType !== undefined) {\n          let inputParam = {\n            inputData: {\n              // nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\n              nprojecttypecode: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n              userinfo: this.props.Login.userInfo,\n              // nfilterProjectType: this.state.selectedRecord.nprojecttypecode,\n              nfilterProjectType: this.props.Login.masterData.SelectedProjectType\n            },\n            classUrl: \"projectmaster\",\n            methodUrl: \"ProjectMasterByProjectType\"\n          };\n          this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal; //let openClosureModal=this.props.Login.openClosureModal;\n\n      let selectedRecord = this.state.selectedRecord;\n      let modalShow = this.props.Login.modalShow;\n      ; //    let selectedRecord = this.state.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false; // if (this.props.Login.modalTitle === \"IDS_RETIREDPROJECT\" ||\n          // this.props.Login.modalTitle === \"IDS_PROJECTCOMPLETION\") {\n          // modalShow = true;\n          // openModal = false;\n          // openClosureModal = false}\n          // openClosureModal=false;\n\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n\n          if (this.props.Login.screenName === \"IDS_RETIREDPROJECT\" || this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\") {\n            modalShow = true;\n            openModal = false; //openClosureModal = false\n          }\n\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        this.props.Login.Client = [];\n        this.props.Login.QuotationNo = [];\n        openModal = false; // openClosureModal=false;\n\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow; //let popUp = this.props.Login.popUp;\n\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {}; //popUp = undefined;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.ProjectMasterInfoPreview = viewId => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName: \"IDS_PROJECTINFO\",\n          openModal: true,\n          operation: \"view\",\n          modalScreenSize: false,\n          ncontrolcode: viewId\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\"; // if (this.state.nfilterProjectType.value) {\n      // if (this.state.selectedRecord.nprojecttypecodevalue.value) {\n      //if ((this.state.selectedRecord).length>0) {\n      // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n\n      if (this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n        if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n          let inputParam = {\n            inputData: {\n              nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\n              userinfo: this.props.Login.userInfo,\n              // nfilterProjectType: this.state.nfilterProjectType,\n              nfilterProjectType: this.state.selectedRecordfilter.nprojecttypecodevalue\n            },\n            classUrl: \"projectmaster\",\n            methodUrl: \"ProjectMasterByProjectType\"\n          };\n          this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedProjectMaster: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      dataState: _dataState,\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sprojectcode\", \"sprojectname\", \"sprojecttitle\", \"suserrolename\", \"susername\", \"srfwdate\", \"sprojectstartdate\", \"sprojectdescription\", \"sversionstatus\", \"sfilename\", \"sclosureremarks\", \"sprojectduration\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let versionStatusCSS = \"outline-secondary\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\n      versionStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedProjectMaster && (this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.RETIRED || this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED)) {\n      versionStatusCSS = \"outline-danger\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n      activeIconCSS = \"\";\n    }\n\n    if (this.props.Login.openModal) {\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation);\n    } //console.log(\"master main\", this.props.Login.masterData);\n    // let mandatoryFields = [];\n\n\n    const {\n      userInfo\n    } = this.props.Login;\n    const addId = this.state.controlMap.has(\"AddProjectMaster\") && this.state.controlMap.get(\"AddProjectMaster\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteProjectMaster\") && this.state.controlMap.get(\"DeleteProjectMaster\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveProjectMaster\") && this.state.controlMap.get(\"ApproveProjectMaster\").ncontrolcode;\n    const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\n    const viewId = this.state.controlMap.has(\"ViewProjectMaster\") && this.state.controlMap.get(\"ViewProjectMaster\").ncontrolcode; // const addteammembersId = this.state.controlMap.has(\"AddTeamMembers\") && this.state.controlMap.get(\"AddTeamMembers\").ncontrolcode;\n\n    const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode; // const deleteteammembersId = this.state.controlMap.has(\"DeleteTeammembers\") && this.state.controlMap.get(\"DeleteTeammembers\").ncontrolcode;\n\n    const viewClosureFileId = this.state.controlMap.has(\"ViewProjectMasterClosureFile\") && this.state.controlMap.get(\"ViewProjectMasterClosureFile\").ncontrolcode;\n    const reportdetailId = this.state.controlMap.has(\"ReportInfoProject\") && this.state.controlMap.get(\"ReportInfoProject\").ncontrolcode;\n    const fieldsForGrid = [{\n      \"idsName\": \"IDS_LOGINID\",\n      \"dataField\": \"sloginid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USER\",\n      \"dataField\": \"steammembername\",\n      \"width\": \"200px\"\n    }];\n    const {\n      SelectedProjectMaster\n    } = this.props.Login.masterData;\n    const selectedMaster = this.props.Login.masterData.SelectedProjectMaster;\n    const selectedProjectMaster = this.props.Login.masterData.SelectedProjectMaster;\n    const filterParam = {\n      inputListName: \"ProjectMaster\",\n      selectedObject: \"SelectedProjectMaster\",\n      primaryKeyField: \"nprojectmastercode\",\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 15\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PROJECTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ProjectMaster,\n      getMasterDetail: ProjectMasterdata => this.props.getProjectMaster(ProjectMasterdata, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: selectedProjectMaster,\n      primaryKeyField: \"nprojectmastercode\",\n      mainField: \"sprojecttitle\",\n      firstField: \"sprojectcode\",\n      secondField: \"sversionstatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData //     openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.ProjectMasterList)}\n      ,\n      openModal: () => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.selectedRecordfilter, this.props.Login.masterData.SelectedProjectType),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_PROJECTMASTERFILTER\": /*#__PURE__*/React.createElement(ProjectMasterFilter, {\n          filterProjectType: this.state.ProjectMasterList || [],\n          nfilterProjectType: this.props.Login.masterData.SelectedProjectType || {},\n          onComboChange: this.onComboChange,\n          selectedRecord: this.state.selectedRecordfilter || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 13\n      }\n    }, selectedProjectMaster ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 23\n      }\n    }, selectedProjectMaster.sprojecttitle), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${versionStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 31\n      }\n    }), selectedProjectMaster.sversionstatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ViewInfoDetails, {\n      userInfo: this.props.Login.userInfo,\n      selectedObject: this.props.Login.masterData.SelectedProjectMaster,\n      screenHiddenDetails: this.state.userRoleControlRights.indexOf(editId) === -1,\n      screenName: this.props.Login.screenName,\n      dataTip: this.props.intl.formatMessage({\n        id: \"IDS_VIEW\"\n      }) // hidden={(this.state.userRoleControlRights.indexOf(viewClosureFileId) === -1) ? true : this.props.Login.masterData.SelectedProjectMaster&& this.props.Login.masterData.SelectedProjectMaster.sfilename&&this.props.Login.masterData.SelectedProjectMaster.sfilename==='-'? true : false}\n      // downLoadIcon={this.props.Login.masterData.SelectedProjectMaster&& this.props.Login.masterData.SelectedProjectMaster.sfilename&&this.props.Login.masterData.SelectedProjectMaster.sfilename!='-'? true : false}\n      ,\n      rowList: [[{\n        dataField: \"sprojecttitle\",\n        idsName: \"IDS_PROJECTTITLE\"\n      }, {\n        dataField: \"sprojectcode\",\n        idsName: \"IDS_PROJECTCODE\"\n      }], [{\n        dataField: \"sprojectname\",\n        idsName: \"IDS_CLIENT\"\n      }, {\n        dataField: \"suserrolename\",\n        idsName: \"IDS_ROLE\"\n      }], [{\n        dataField: \"susername\",\n        idsName: \"IDS_INCHARGE\"\n      }, {\n        dataField: \"srfwdate\",\n        idsName: \"IDS_RFWDATE\"\n      }], [{\n        dataField: \"sprojectstartdate\",\n        idsName: \"IDS_STARTDATE\"\n      }, {\n        dataField: \"sexpectcompletiondate\",\n        idsName: \"IDS_EXPECTEDPROJECTCOMPLETIONDATE\"\n      }], [{\n        dataField: \"sclientcatname\",\n        idsName: \"IDS_CLIENTCATEGORY\"\n      }, {\n        dataField: \"sclientname\",\n        idsName: \"IDS_CLIENT\"\n      }], [{\n        dataField: \"squotationno\",\n        idsName: \"IDS_QUOTATIONNO\"\n      }, {\n        dataField: \"srfwid\",\n        idsName: \"IDS_RFWID\"\n      }], [{\n        dataField: \"sprojectduration\",\n        idsName: \"IDS_PROJECTDURATION\"\n      }, {\n        dataField: \"sprojectdescription\",\n        idsName: \"IDS_PROJECTDESCRIPTION\"\n      }], [{\n        dataField: \"sfilename\",\n        idsName: \"IDS_CLOSUREFILENAME\"\n      }, {\n        hidden: this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.sfilename && this.props.Login.masterData.SelectedProjectMaster.sfilename != '-' && this.state.userRoleControlRights.indexOf(viewClosureFileId) !== -1 ? false : true,\n        onClick: this.viewProjectMasterClosureFile\n      }]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 29\n      }\n    }), parseInt(this.props.Login.settings[34]) === transactionStatus.YES ? /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"reportdetailstestname\",\n      hidden: this.state.userRoleControlRights.indexOf(reportdetailId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTINFOPROJECT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.ReportInfo(\"IDS_REPORTINFOPROJECT\", \"\", \"nprojectmastercode\", this.props.Login.masterData, this.props.Login.userInfo, reportdetailId, this.props.Login.settings[34]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ReportEdit, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 31\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"edittestname\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.addProjectMaster(\"update\", selectedProjectMaster, userInfo, editId, this.state.selectedRecordfilter, addProjectMaster),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      name: \"deletetestname\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(selectedProjectMaster, \"delete\", deleteId, \"ProjectMaster\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approveProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.approveProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"approve\", approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"completeProjectMaster\",\n      hidden: this.state.userRoleControlRights.indexOf(completeId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COMPLETE\"\n      }),\n      onClick: () => this.props.projectMasterModal(selectedProjectMaster, \"complete\", \"IDS_PROJECTCOMPLETION\", completeId, \"dprojectcompletiondate\", this.props.Login.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"retireProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(retireId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.projectMasterModal(selectedProjectMaster, \"retire\", \"IDS_RETIREDPROJECT\", retireId, \"dprojectretiredate\", this.props.Login.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"ClosureProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(closureId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CLOSE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.projectMasterModal(selectedProjectMaster, \"closure\", \"IDS_PROJECTCLOSURE\", closureId, \"dprojectclosuredate\", this.props.Login.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Closure, {\n      className: \"custom_icons\",\n      width: \"17\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 31\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ProjectMasterTab, {\n      primaryKeyField: \"nprojectmembercode\" // data={this.props.Login.masterData.ProjectMember}\n      ,\n      data: this.state.data // dataResult={this.props.Login.masterData.ProjectMember}\n      ,\n      projectMasterHistorydata: this.props.Login.masterData.ProjectMasterHistory,\n      projectMasterdataResult: this.props.Login.masterData.ProjectMasterHistory,\n      dataResult: this.state.dataResult,\n      masterData: this.props.Login.masterData,\n      screenName: this.props.Login.screenName,\n      operation: this.props.Login.operation,\n      openChildModal: this.props.Login.openChildModal,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      showAccordian: this.state.showAccordian,\n      selectedRecord: this.state.selectedRecord || {} // dataState={{skip: 0, take: 10}}\n      //dataState={this.props.Login.dataState}\n      ,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: fieldsForGrid,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\n      ,\n      getProjectmasterAddMemberService: this.props.getProjectmasterAddMemberService // --   fetchRecord={this.props.getPricingEditService}\n      //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\n      ,\n      deleteRecord: this.deleteProjectMember //  deleteParam={{operation:\"delete\"}}\n      ,\n      methodUrl: \"Teammembers\" // reloadData={this.reloadData}\n      // --      addRecord = {() => this.openModal(addId)}\n      ,\n      pageable: true,\n      onTabChange: this.onTabChange,\n      updateStore: this.props.updateStore,\n      scrollable: 'scrollable' // gridHeight = {'600px'}\n      ,\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: this.props.Login.selectedId,\n      viewAttachment: this.props.viewAttachment,\n      MembersList: this.props.Login.MembersList,\n      onComboChange: this.onComboChange // File\n      ,\n      addProjectMasterFile: this.props.addProjectMasterFile,\n      esignRights: this.props.Login.userRoleControlRights,\n      ntransactionstatus: selectedProjectMaster.ntransactionstatus //  selectedRecord={this.props.Login.selectedRecord}\n      ,\n      onDropProjectMasterFile: this.onDropProjectMasterFile,\n      onInputOnChange: this.onInputOnChange,\n      screenData: this.props.Login.screenData,\n      deleteAttachment: this.deleteAttachment,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      linkMaster: this.props.Login.linkMaster,\n      historydataStateChange: this.historydataStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 29\n      }\n    }))))))) : \"\"))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal //size={this.props.Login.operation===\"create\" ? \"xl\" : \"lg\" }\n      ,\n      closeModal: this.closeModal,\n      hideSave: this.props.Login.screenName === \"IDS_PROJECTINFO\" ? true : false,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === \"IDS_PROJECTCLOSURE\" ? this.onSaveProjectMasterClosureFile : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.mandatoryFields || [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 15\n        }\n      }) : this.props.Login.screenName === \"IDS_PROJECTMASTER\" ? /*#__PURE__*/React.createElement(AddProjectMaster, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {},\n        ProjectType: this.props.Login.ProjectType,\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange // onNumericInputOnChange={this.onNumericInputOnChange}\n        ,\n        onNumericInputChange: this.onNumericInputChange,\n        handleDateChange: this.handleDateChange,\n        Userrole: this.props.Login.Userrole,\n        Users: this.props.Login.userList,\n        TeamMembers: this.props.Login.TeamMembers,\n        PeriodByControl: this.props.Login.PeriodByControl,\n        settings: this.props.Login.settings,\n        ClientCategory: this.props.Login.ClientCategory,\n        Client: this.props.Login.Client,\n        QuotationNo: this.props.Login.QuotationNo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\" ? /*#__PURE__*/React.createElement(ReportInfoProject, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputChange: this.onNumericInputChange,\n        reportTemplateList: this.props.Login.reportTemplateList,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 19\n        }\n      }) : this.props.Login.screenName === \"IDS_PROJECTCLOSURE\" ? /*#__PURE__*/React.createElement(ProjectMasterClosure, {\n        handleDateChange: this.handleDateChange,\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropProjectMasterclosureFile,\n        onDropAccepted: this.onDropAccepted,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.linkMaster,\n        editFiles: this.props.editFiles,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        name: \"projectmasterclosurefilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 21\n        }\n      }) : this.props.Login.screenName === \"IDS_PROJECTINFO\" ? /*#__PURE__*/React.createElement(AddProjectInfoPreview, {\n        selectedProjectMaster: this.props.Login.masterData.SelectedProjectMaster,\n        userInfo: this.props.Login.userInfo,\n        viewProjectMasterClosureFile: this.viewProjectMasterClosureFile,\n        userRoleControlRights: this.state.userRoleControlRights,\n        viewClosureFileId: viewClosureFileId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 23\n        }\n      }) : \"Parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 11\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.screenName,\n      modalBody: this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" ? /*#__PURE__*/React.createElement(AddCompletionDate, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign,\n        currentTime: this.props.Login.currentTime,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(ProjectMasterRetire, {\n        selectedRecord: this.state.selectedRecord || {},\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        userInfo: this.props.Login.userInfo //onComboChange={this.onComboChange}\n        //currentTime={this.props.Login.currentTime}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  findMandatoryFields(screenName, selectedRecord, operation) {\n    let mandatoryFields = [];\n\n    if (screenName === \"IDS_PROJECTMASTER\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_PROJECTTYPE\",\n        \"dataField\": \"nprojecttypecode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTTITLE\",\n        \"dataField\": \"sprojecttitle\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTNAME\",\n        \"dataField\": \"sprojectname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ROLE\",\n        \"dataField\": \"nuserrolecode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_INCHARGE\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, //{ \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"drfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\n      {\n        \"idsName\": \"IDS_STARTDATE\",\n        \"dataField\": \"dprojectstartdate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTDURATION\",\n        \"dataField\": \"nprojectduration\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_DURATIONPERIOD\",\n        \"dataField\": \"nperiodcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_CLIENTCATEGORY\",\n        \"dataField\": \"nclientcatcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_CLIENT\",\n        \"dataField\": \"nclientcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n      if (parseInt(this.props.Login.settings[31]) != 3) mandatoryFields.push({\n        \"idsName\": \"IDS_PROJECTCODE\",\n        \"dataField\": \"sprojectcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      });\n      return mandatoryFields;\n    } else if (screenName === \"IDS_PROJECTCLOSURE\") {\n      mandatoryFields = [//{ \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n      // { \"idsName\": \"IDS_REASONFORCLOSURE\", \"dataField\": \"sclosureremarks\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\n      {\n        \"idsName\": \"IDS_CLOSUREDATE\",\n        \"dataField\": \"dprojectclosuredate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }];\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n      return mandatoryFields;\n    } else if (screenName === \"IDS_REPORTINFOPROJECT\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_REPORTTEMPLATEVERSION\",\n        \"dataField\": \"sreporttemplateversion\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REVISION\",\n        \"dataField\": \"srevision\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REVISIONAUTHOR\",\n        \"dataField\": \"srevisionauthor\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_INTRODUCTION\",\n        \"dataField\": \"sintroduction\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTHEADERCOMMENTS\",\n        \"dataField\": \"stestproductheadercomments\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS1\",\n        \"dataField\": \"stestproductfootercomments1\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS2\",\n        \"dataField\": \"stestproductfootercomments2\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS3\",\n        \"dataField\": \"stestproductfootercomments3\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS4\",\n        \"dataField\": \"stestproductfootercomments4\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLINGDETAILS\",\n        \"dataField\": \"ssamplingdetails\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_UNCERTAINITYOFMEASUREMENT\",\n        \"dataField\": \"suncertainitymeasurement\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      } // {\"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n      ];\n      return mandatoryFields;\n    } else if (screenName === \"IDS_RETIREDPROJECT\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_RETIREDATE\",\n        \"dataField\": \"dprojectretiredate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }];\n    } else if (screenName === \"IDS_PROJECTCOMPLETION\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_PROJECTCOMPLETEDDATE\",\n        \"dataField\": \"dprojectcompletiondate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }];\n    } else {\n      return [];\n    }\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      selectedRecordfilter,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterProjectType,\n      filterProjectType\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n      this.setState({\n        selectedRecord,\n        selectedRecordfilter\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        controlMap,\n        userRoleControlRights,\n        data: this.props.Login.masterData.ProjectMember,\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], this.state.dataState)\n      }); //   updateState = true;\n    }\n\n    let nprojecttypecode = this.state.nfilterProjectType || {};\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterProjectType = this.state.nfilterProjectType || {};\n      const filterProjectType = constructOptionList(this.props.Login.masterData.filterProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", undefined, undefined, undefined);\n      let ProjectMasterList = filterProjectType.get(\"OptionList\");\n      nprojecttypecode = ProjectMasterList[0];\n      selectedRecordfilter = {\n        nprojecttypecodevalue: nprojecttypecode\n      };\n      selectedRecord = {\n        nprojecttypecodevalue: nprojecttypecode\n      }; // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\n\n      this.setState({\n        ProjectMasterList,\n        selectedRecordfilter,\n        selectedRecord,\n        data: this.props.Login.masterData.ProjectMember,\n        dataState: {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n        },\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n        })\n      });\n\n      if (this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\n        nfilterProjectType = {\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n          item: this.props.Login.masterData.SelectedProjectType\n        };\n      } //  selectedRecordfilter = {nprojecttypecodevalue:nfilterProjectType}\n\n\n      filterData = this.generateBreadCrumData();\n      updateState = true;\n      this.setState({\n        filterData,\n        selectedRecordfilter\n      });\n    }\n\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\n      let nprojecttypecodevalue = this.props.Login.masterData.SelectedProjectType ? {\n        label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\n        value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n        item: this.props.Login.masterData.SelectedProjectType\n      } : \"\"; //  nprojecttypecode=ProjectMasterList[ProjectMasterList.length-1];\n\n      selectedRecordfilter = {\n        nprojecttypecodevalue\n      };\n      selectedRecord = {\n        nprojecttypecodevalue: nprojecttypecode\n      }; // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\n\n      this.setState({\n        selectedRecordfilter,\n        selectedRecord\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType) {\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.SelectedProjectType ? this.props.Login.masterData.SelectedProjectType.sprojecttypename : \"NA\"\n      });\n    } else if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectMaster) {\n      /*    breadCrumbData.push({\r\n            label: \"IDS_PROJECTTYPE\",\r\n            value: this.state.selectedRecord.nprojecttypecode\r\n              ? this.state.selectedRecord.nprojecttypecode.label\r\n              : \"NA\",\r\n          }); */\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.SelectedProjectMaster ? this.props.Login.masterData.SelectedProjectMaster.sprojecttypename : \"NA\"\n      });\n    } else {\n      /*       breadCrumbData.push({\r\n             label: \"IDS_PROJECTTYPE\",\r\n             value:  this.state.selectedRecord.nprojecttypecodevalue\r\n               ? this.state.selectedRecord.nprojecttypecodevalue.label\r\n               : \"NA\",\r\n           }); */\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.nfilterProjectType ? this.props.Login.masterData.nfilterProjectType.label : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  filterColumnData,\n  updateStore,\n  validateEsignCredential,\n  changeProjectTypeFilter,\n  viewAttachment,\n  addProjectMaster,\n  ReportInfo,\n  getProjectMaster,\n  getProjectmasterAddMemberService,\n  addProjectMasterFile,\n  getuserComboServices,\n  getClientByCategory,\n  getQuotationByClient,\n  closureProjectMaster,\n  modalSave,\n  validateEsignforModal,\n  projectMasterModal\n})(injectIntl(ProjectMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/project/ProjectMaster.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","faThumbsUp","faUserTimes","faCloudDownloadAlt","faCheckCircle","faEye","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","changeProjectTypeFilter","filterColumnData","viewAttachment","addProjectMaster","ReportInfo","getProjectMaster","getProjectmasterAddMemberService","addProjectMasterFile","getuserComboServices","getClientByCategory","getQuotationByClient","closureProjectMaster","modalSave","projectMasterModal","validateEsignforModal","ListMaster","transactionStatus","AddProjectMaster","ReportInfoProject","ProjectMasterTab","ProjectMasterClosure","DEFAULT_RETURN","SlideOutModal","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","rearrangeDateFormatDateOnly","Lims_JSON_stringify","replaceBackSlash","ReadOnlyText","ContentPanel","process","ConfirmMessage","BreadcrumbComponent","Affix","ProjectMasterFilter","intl","ModalShow","AddCompletionDate","ProjectMasterRetire","AddProjectInfoPreview","ViewInfoDetails","mapStateToProps","state","Login","ProjectMaster","constructor","props","sidebarExpandCollapse","setState","sidebarview","handleDateChange","dateName","dateValue","selectedRecord","onSaveModalClick","masterData","SelectedProjectMaster","ntransactionstatus","APPROVED","completeId","controlMap","has","get","ncontrolcode","retireId","inputData","inputParam","projectMasterData","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","nprojectmastercode","fetchUrl","fecthInputObject","userinfo","userInfo","screenName","ntimezonecode","methodUrl","classUrl","scompletionremarks","undefined","operation","modalShow","sretiredremarks","isClearSearch","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","warn","formatMessage","id","handleProjectMasterModal","selectedProjectMaster","modalShowdata","controId","Date","onInputOnChange","event","optional","target","type","name","checked","value","onSaveClick","saveType","formRef","sprojecttitle","sprojectcode","sprojectname","sprojectdescription","srfwid","nprojectduration","nsitecode","nmastersitecode","parseInt","DRAFT","sfilename","sclosureremarks","NA","settings","YES","NO","searchRef","onSaveReportInfoProject","onNumericInputOnChange","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","label","password","onSaveProjectMasterClosureFile","acceptedFiles","projectmasterclosureFile","projectmasterclosureFileArray","formData","FormData","dtransactiondate","tempData","Object","assign","Array","isArray","length","forEach","file","index","splittedFileName","split","fileExtension","uniquefilename","append","trim","nprojecttypecode","push","JSON","stringify","closureId","selectedId","sformname","smodulename","slanguagename","isFileupload","DeleteProjectMaster","projectmaster","deleteAttachment","fieldName","actionType","SelectedProjectType","sreporttemplateversion","srevision","srevisionauthor","sintroduction","stestproductheadercomments","stestproductfootercomments1","stestproductfootercomments2","stestproductfootercomments3","stestproductfootercomments4","ssamplingdetails","suncertainitymeasurement","dataState","displayName","viewProjectMasterClosureFile","projectmasterclosurefile","onComboChange","comboData","caseNo","nuserrolecode","nusercode","item","sdisplayname","primarykey","selectedRecordfilter","nclientcatcode","nclientcode","nquotationcode","onDropProjectMasterFile","attachedFiles","maxSize","ACTIVE","DEACTIVE","deleteProjectMember","deleteParam","nprojectmembercode","openChildModal","onDropProjectMasterclosureFile","onNumericInputChange","console","log","test","approveProjectMaster","onTabChange","tabProps","onDropTestFile","dataStateChange","dataResult","historydataStateChange","historydataState","ConfirmDelete","deleteId","confirmMessage","confirm","reloadData","current","values","nfilterProjectType","filterProjectType","closeModal","Client","QuotationNo","closeModalShow","openFilter","showFilter","closeFilter","ProjectMasterInfoPreview","viewId","modalScreenSize","onFilterSubmit","nprojecttypecodevalue","skip","take","error","Map","Instrument","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","versionStatusCSS","activeIconCSS","RETIRED","CLOSED","mandatoryFields","findMandatoryFields","addId","editId","approveId","viewClosureFileId","reportdetailId","fieldsForGrid","selectedMaster","filterParam","breadCrumbData","filterData","searchedData","ProjectMasterdata","ProjectMasterList","sversionstatus","indexOf","dataField","idsName","hidden","onClick","e","ProjectMasterHistory","showAccordian","MembersList","linkMaster","ProjectType","Userrole","userList","TeamMembers","PeriodByControl","ClientCategory","reportTemplateList","onDropAccepted","editFiles","currentTime","TimeZoneList","mandatory","componentDidUpdate","previousProps","updateState","map","ProjectMember","sprojecttypename","generateBreadCrumData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPencilAlt, faThumbsUp, faUserTimes, faCloudDownloadAlt, faCheckCircle, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReactComponent as ReportEdit } from '../../assets/image/report-edit.svg';\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService, crudMaster, validateEsignCredential, updateStore, changeProjectTypeFilter, filterColumnData,\r\n  viewAttachment, addProjectMaster, ReportInfo, getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices, getClientByCategory, getQuotationByClient, closureProjectMaster, modalSave, projectMasterModal,\r\n  validateEsignforModal\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport AddProjectMaster from \"../../pages/project/AddProjectMaster\";\r\nimport ReportInfoProject from \"../../pages/project/ReportInfoProject\";\r\nimport ProjectMasterTab from \"../../pages/project/ProjectMasterTab\";\r\nimport ProjectMasterClosure from \"../../pages/project/ProjectMasterClosure\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\n\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormatDateOnly, Lims_JSON_stringify, replaceBackSlash }\r\n  from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\nimport ProjectMasterFilter from './ProjectMasterFilter';\r\nimport { ReactComponent as Closure } from '../../assets/image/cancel-close-svgrepo-com.svg';\r\nimport { intl } from \"../../components/App\";\r\nimport ModalShow from \"../../components/ModalShow\";\r\nimport AddCompletionDate from \"../../pages/project/AddCompletionDate\";\r\nimport ProjectMasterRetire from \"../../pages/project/ProjectMasterRetire\";\r\nimport AddProjectInfoPreview from \"../../pages/project/AddProjectInfoPreview\";\r\nimport ViewInfoDetails from \"../../components/ViewInfoDetails\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass ProjectMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const dataState = {\r\n      skip: 0,\r\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n    };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedProjectMaster: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      dataState,\r\n      sidebarview: false\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sprojectcode\", \"sprojectname\", \"sprojecttitle\", \"suserrolename\", \"susername\", \"srfwdate\", \"sprojectstartdate\", \"sprojectdescription\", \"sversionstatus\", \"sfilename\", \"sclosureremarks\", \"sprojectduration\"]\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n  sidebarExpandCollapse = () => {\r\n    this.setState({\r\n      sidebarview: true\r\n    })\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveModalClick = () => {\r\n    if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\r\n      const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\r\n      const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\r\n\r\n      let inputData = [];\r\n      let inputParam = [];\r\n      let projectMasterData = [];\r\n\r\n      const postParam = {\r\n        inputListName: \"ProjectMaster\",\r\n        selectedObject: \"SelectedProjectMaster\",\r\n        primaryKeyField: \"nprojectmastercode\",\r\n        primaryKeyValue: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\r\n        fetchUrl: \"projectmaster/getProjectMaster\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      if (this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\") {\r\n        if (this.state.selectedRecord[\"dprojectcompletiondate\"]) {\r\n          projectMasterData[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectcompletiondate\"], false);\r\n        }\r\n        projectMasterData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\r\n\r\n        inputParam = {\r\n          methodUrl: \"ProjectMaster\",\r\n          classUrl: this.props.Login.inputParam.classUrl,\r\n          inputData: {\r\n            \"userinfo\": this.props.Login.userInfo,\r\n            \"projectmaster\": { ...this.props.Login.masterData.SelectedProjectMaster, \"dtransactiondate\": projectMasterData[\"dtransactiondate\"], \"scompletionremarks\": this.state.selectedRecord.scompletionremarks === undefined ? \"\" : this.state.selectedRecord.scompletionremarks, \"ntransdatetimezonecode\": projectMasterData[\"ntransdatetimezonecode\"] }\r\n          },\r\n          operation: this.props.Login.operation,\r\n          modalShow: false, postParam,\r\n          selectedRecord: { ...this.state.selectedRecord }\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n      // console.log(\"inputData\",inputData[\"projectmaster\"]);\r\n\r\n\r\n      if (this.props.Login.screenName === \"IDS_RETIREDPROJECT\") {\r\n        if (this.state.selectedRecord[\"dprojectretiredate\"]) {\r\n          projectMasterData[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectretiredate\"], false);\r\n        }\r\n        projectMasterData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\r\n\r\n        inputParam = {\r\n          classUrl: this.props.Login.inputParam.classUrl,\r\n          methodUrl: \"ProjectMaster\",\r\n          inputData: {\r\n            \"userinfo\": this.props.Login.userInfo,\r\n            \"projectmaster\": { ...this.props.Login.masterData.SelectedProjectMaster, \"dtransactiondate\": projectMasterData[\"dtransactiondate\"], \"sretiredremarks\": this.state.selectedRecord.sretiredremarks === undefined ? \"\" : this.state.selectedRecord.sretiredremarks, \"ntransdatetimezonecode\": projectMasterData[\"ntransdatetimezonecode\"] }\r\n          },\r\n          operation: this.props.Login.operation, postParam,\r\n          isClearSearch: this.props.Login.isClearSearch,\r\n          selectedRecord: { ...this.state.selectedRecord },\r\n          modalShow: false\r\n        }\r\n      }\r\n\r\n\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            operation: this.props.Login.operation,\r\n            // loadEsign: true, screenData: { inputParam, masterData },\r\n            modalShow: false,\r\n            openModal: true, screenName: this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" ? \"IDS_PROJECTCOMPLETION\" : \"IDS_RETIREDPROJECT\", operation: this.props.Login.operation,\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.modalSave(inputParam, masterData);\r\n      }\r\n    }\r\n    else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  handleProjectMasterModal = (selectedProjectMaster, modalShowdata, controId) => {\r\n\r\n    //const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\r\n    //  const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\r\n\r\n\r\n    if (selectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\r\n\r\n      if (modalShowdata === \"ProjectCompletion\") {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            screenName: \"IDS_PROJECTCOMPLETION\",\r\n            modalShow: true,\r\n            operation: \"complete\",\r\n            ncontrolCode: controId,\r\n            selectedRecord: {\r\n              \"dprojectcompletiondate\": new Date()\r\n            }\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n\r\n      }\r\n      else {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            screenName: \"IDS_RETIREDPROJECT\",\r\n            modalShow: true,\r\n            operation: \"retire\",\r\n            ncontrolCode: controId,\r\n            selectedRecord: {\r\n              \"dprojectretiredate\": new Date()\r\n            }\r\n          },\r\n\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n\r\n\r\n      }\r\n    } else {\r\n\r\n      toast.warn(intl.formatMessage({ id: \"IDS_SELECTAPPROVEVERSION\" }));\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n\r\n    let projectMasterData = [];\r\n    let inputParam = {};\r\n    projectMasterData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n    let postParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n\r\n    };\r\n\r\n    if ((this.props.Login.operation === \"update\") && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n\r\n      projectMasterData[\"projectMaster\"] = {\r\n        nprojectmastercode: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\r\n        //     nprojecttypecode:this.state.selectedRecord.nprojecttypecode.value,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle,\r\n        sprojectcode: this.state.selectedRecord.sprojectcode,\r\n        sprojectname: this.state.selectedRecord.sprojectname,\r\n        sprojectdescription: this.state.selectedRecord.sprojectdescription,\r\n        srfwid: this.state.selectedRecord.srfwid,\r\n\r\n        // drfwdate: formatInputDate(this.state.selectedRecord[\"drfwdate\"],false),\r\n        // dprojectstartdate: formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false),\r\n        //     nstudydirectorcode:this.state.selectedRecord.nstudydirectorcode.value,\r\n        //     nteammembercode: this.state.selectedRecord.nteammembercode.value,\r\n        //     nperiodcode: this.state.selectedRecord.nperiodcode.value,\r\n        nprojectduration: this.state.selectedRecord.nprojectduration,\r\n        ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus,\r\n\r\n\r\n      };\r\n\r\n    } else if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      projectMasterData[\"projectMaster\"] = {\r\n\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle,\r\n        sprojectname: this.state.selectedRecord.sprojectname,\r\n        sprojectcode: this.state.selectedRecord.sprojectcode === undefined ? \"-\" : this.state.selectedRecord.sprojectcode,\r\n        sprojectdescription: this.state.selectedRecord.sprojectdescription === undefined ? \"\" : this.state.selectedRecord.sprojectdescription,\r\n        nprojectduration: parseInt(this.state.selectedRecord.nprojectduration),\r\n        //  ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sfilename: this.state.selectedRecord.sfilename === undefined ? \"\" : this.state.selectedRecord.sfilename,\r\n        sclosureremarks: this.state.selectedRecord.sclosureremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks,\r\n        sretiredremarks: this.state.selectedRecord.sretiredremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks,\r\n        scompletionremarks: this.state.selectedRecord.scompletionremarks === undefined ? \"\" : this.state.selectedRecord.scompletionremarks,\r\n        srfwid: this.state.selectedRecord.srfwid === undefined ? \"\" : this.state.selectedRecord.srfwid,\r\n\r\n      };\r\n\r\n      /*     this.projectMasterFieldList.map((item) => {\r\n             return (projectMasterData[\"projectMaster\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n             undefined :this.state.selectedRecord[item]);\r\n           }); */\r\n    }\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      projectMasterData[\"projectMaster\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"] ? this.state.selectedRecord[\"nuserrolecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      // projectMasterData[\"projectMaster\"][\"nteammembercode\"] = this.state.selectedRecord[\"nteammembercode\"] ? this.state.selectedRecord[\"nteammembercode\"].value\r\n      //   : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nperiodcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nperiodcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"] ? this.state.selectedRecord[\"nclientcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nquotationcode\"] = this.state.selectedRecord[\"nquotationcode\"] ? this.state.selectedRecord[\"nquotationcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nautoprojectcode\"] = parseInt(this.props.Login.settings[31]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO;\r\n     // projectMasterData[\"projectMaster\"][\"needjsontemplate\"] = parseInt(this.props.Login.settings[29]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n\r\n      // if (this.state.selectedRecord[\"drfwdate\"] || this.state.selectedRecord[\"dprojectstartdate\"]) {\r\n      //   if (this.props.Login.operation === \"create\") {\r\n\r\n      if (this.state.selectedRecord[\"drfwdate\"]) {\r\n        projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"], false);\r\n\r\n      }\r\n\r\n      if (this.state.selectedRecord[\"dexpectcompletiondate\"]) {\r\n        projectMasterData[\"projectMaster\"][\"dexpectcompletiondate\"] = formatInputDate(this.state.selectedRecord[\"dexpectcompletiondate\"], false);\r\n      }\r\n      if (this.state.selectedRecord[\"dprojectcompletiondate\"]) {\r\n        projectMasterData[\"projectMaster\"][\"dprojectcompletiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectcompletiondate\"], false);\r\n      }\r\n      if (this.state.selectedRecord[\"dretiredate\"]) {\r\n        projectMasterData[\"projectMaster\"][\"dprojectretiredate\"] = formatInputDate(this.state.selectedRecord[\"dprojectretiredate\"], false);\r\n      }\r\n      if (this.state.selectedRecord[\"dprojectclosuredate\"]) {\r\n        projectMasterData[\"projectMaster\"][\"dprojectclosuredate\"] = formatInputDate(this.state.selectedRecord[\"dprojectclosuredate\"], false);\r\n      }\r\n\r\n      //projectMasterData[\"projectMaster\"][\"drfwdate\"] = this.state.selectedRecord[\"drfwdate\"]? formatInputDate(this.state.selectedRecord[\"drfwdate\"], false):\"\";\r\n      projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"], false);\r\n      projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzprojectstartdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n\r\n      projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzexpectcompletiondate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzprojectcompletiondate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzprojectretiredate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzprojectclosuredate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n\r\n      //   }\r\n      //   else {\r\n\r\n      //     projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"],false);\r\n      //     projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false);\r\n\r\n      //   }\r\n      // }\r\n    }\r\n\r\n    if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_ADDMEMBERS\")) {\r\n      projectMasterData[\"ProjectMember\"] = {};\r\n      projectMasterData[\"ProjectMember\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"][0] ? this.state.selectedRecord[\"nusercode\"][0].value\r\n        : transactionStatus.NA;\r\n      projectMasterData[\"ProjectMember\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n    }\r\n\r\n\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMaster\",\r\n        inputData: projectMasterData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n        selectedRecord: { ...this.state.selectedRecord }\r\n\r\n      };\r\n    }/* else if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMember\",\r\n        inputData: projectMasterData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n      }\r\n    } */\r\n\r\n    // if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_PROJECTCLOSURE\")) {\r\n\r\n    //   inputParam = this.onSaveProjectMasterClosureFile(saveType, formRef);\r\n\r\n    // }\r\n\r\n    if (\r\n      //(this.props.Login.operation === \"update\") &&\r\n      (this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\")) {\r\n      inputParam = this.onSaveReportInfoProject(saveType, formRef);\r\n\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    let modalName;\r\n    const inputParam = {\r\n      inputData: {\r\n        \"userinfo\": {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"]\r\n      },\r\n      screenData: this.props.Login.screenData\r\n    }\r\n    if ((this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" || this.props.Login.screenName === \"IDS_RETIREDPROJECT\")) {\r\n      this.props.validateEsignforModal(inputParam);\r\n\r\n    } else {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n\r\n    }\r\n  }\r\n\r\n\r\n  onSaveProjectMasterClosureFile = (saveType, formRef) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n\r\n    let projectmasterclosureFile = {};\r\n    let projectmasterclosureFileArray = [];\r\n\r\n    const formData = new FormData();\r\n    const dtransactiondate = [];\r\n    const tempData = Object.assign({}, projectmasterclosureFile);\r\n    let postParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n\r\n    };\r\n    postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n\r\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n      acceptedFiles.forEach((file, index) => {\r\n\r\n        const splittedFileName = file.name.split('.');\r\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n        const uniquefilename = create_UUID() + '.' + fileExtension;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"sfilename\"] = Lims_JSON_stringify(file.name ? file.name : \"\", false);\r\n        // tempData[\"sclosureremarks\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"),false)  ;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n\r\n\r\n      });\r\n    }\r\n    tempData[\"sclosureremarks\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"), false);\r\n\r\n    tempData[\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n    tempData[\"ntransactionstatus\"] = this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus;\r\n    tempData[\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojecttypecode;\r\n    tempData[\"sprojecttitle\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojecttitle, false);\r\n    tempData[\"sprojectcode\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojectcode, false);\r\n    tempData[\"ntransdatetimezonecode\"] = this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\r\n\r\n    projectmasterclosureFileArray.push(tempData);\r\n\r\n\r\n\r\n    dtransactiondate[\"dtransactiondate\"] = formatInputDate(this.state.selectedRecord[\"dprojectclosuredate\"], false);\r\n\r\n    // dtransactiondate[\"ntransdatetimezonecode\"] =  this.props.Login.userInfo.ntimezonecode ? this.props.Login.userInfo.ntimezonecode : \"-1\";\r\n\r\n    formData.append(\"dtransactiondate\", dtransactiondate[\"dtransactiondate\"]);\r\n\r\n    formData.append(\"ntransdatetimezonecode\", dtransactiondate[\"ntransdatetimezonecode\"]);\r\n\r\n    formData.append(\"projectmaster\", JSON.stringify(projectmasterclosureFileArray[0]));\r\n    formData.append(\"filecount\", acceptedFiles && acceptedFiles.length);\r\n\r\n\r\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode;\r\n\r\n    let selectedId = null;\r\n\r\n\r\n    // if (this.props.Login.operation === \"create\") {\r\n    //   // edit\r\n    //   postParam = { inputListName: \"ProjectMaster\", selectedObject: \"SelectedProjectMaster\", primaryKeyField: \"nprojectmastercode\",isSingleGet:true};\r\n    //   selectedId = selectedRecord[\"nprojectmastercode\"];\r\n    // }\r\n    const inputParam = {\r\n      inputData: {\r\n        \"userinfo\": {\r\n          ...this.props.Login.userInfo,\r\n          sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n          smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n          //ALPD-1826(while saving the file and link,audit trail is not captured the respective language)\r\n          slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n        }\r\n      },\r\n      formData: formData,\r\n\r\n      isFileupload: true,\r\n      operation: \"closure\",\r\n      classUrl: \"projectmaster\",\r\n      saveType, formRef, methodUrl: \"ProjectMasterFile\", postParam,\r\n      searchRef: this.searchRef,\r\n      // openClosureModal:false,\r\n      ncontrolcode: closureId\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true, screenData: { inputParam, masterData },\r\n          screenName: \"IDS_PROJECTCLOSURE\", operation: this.props.Login.operation\r\n        }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n\r\n    } else {\r\n      this.props.closureProjectMaster(inputParam, masterData);\r\n    }\r\n\r\n    // return inputParam;\r\n  }\r\n\r\n  DeleteProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"ProjectMasterList\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        projectmaster: selectedProjectMaster,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n      selectedRecord: { ...this.state.selectedRecord }\r\n\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PROJECTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\",\r\n    });\r\n  };\r\n\r\n  onSaveReportInfoProject = (saveType, formRef) => {\r\n    let postParam = undefined;\r\n    let inputData = [];\r\n    const selectedRecord = this.state.selectedRecord;\r\n    postParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n    };\r\n    inputData[\"reportinfoproject\"] = {};\r\n    inputData[\"reportinfoproject\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n    inputData[\"reportinfoproject\"][\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectType.nprojecttypecode;\r\n    inputData[\"reportinfoproject\"][\"sreporttemplateversion\"] = selectedRecord.sreporttemplateversion;\r\n    inputData[\"reportinfoproject\"][\"srevision\"] = selectedRecord.srevision;\r\n    inputData[\"reportinfoproject\"][\"srevisionauthor\"] = selectedRecord.srevisionauthor;\r\n    inputData[\"reportinfoproject\"][\"sintroduction\"] = selectedRecord.sintroduction;\r\n    inputData[\"reportinfoproject\"][\"stestproductheadercomments\"] = selectedRecord.stestproductheadercomments;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments1\"] = selectedRecord.stestproductfootercomments1;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments2\"] = selectedRecord.stestproductfootercomments2;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments3\"] = selectedRecord.stestproductfootercomments3;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments4\"] = selectedRecord.stestproductfootercomments4;\r\n    inputData[\"reportinfoproject\"][\"ssamplingdetails\"] = selectedRecord.ssamplingdetails;\r\n    inputData[\"reportinfoproject\"][\"suncertainitymeasurement\"] = selectedRecord.suncertainitymeasurement;\r\n    inputData[\"reportinfoproject\"][\"nreporttemplatecode\"] = this.state.selectedRecord[\"nreporttemplatecode\"] ? this.state.selectedRecord[\"nreporttemplatecode\"].value\r\n      : transactionStatus.NA;\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    let dataState = this.state.dataState;\r\n\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl: \"ReportInfoProject\",\r\n      displayName: this.props.Login.screenName,\r\n      inputData: inputData,\r\n      selectedId: this.state.selectedRecord[\"nprojectmastercode\"],\r\n      operation: \"update\", saveType, formRef, dataState,\r\n      searchRef: this.searchRef,\r\n      postParam: postParam\r\n    }\r\n    return inputParam;\r\n\r\n\r\n    // this.fieldprojectreportinfoList.map(item => {\r\n    //     return inputData[\"projectreportinfo\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n    // })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let versionStatusCSS = \"outline-secondary\";\r\n    let activeIconCSS = \"fa fa-check\"\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\r\n      versionStatusCSS = \"outline-success\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedProjectMaster && ((this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.RETIRED) || (this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED))) {\r\n      versionStatusCSS = \"outline-danger\";\r\n      activeIconCSS = \"\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n      activeIconCSS = \"\";\r\n\r\n    }\r\n\r\n    if (this.props.Login.openModal) {\r\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n    }\r\n\r\n    //console.log(\"master main\", this.props.Login.masterData);\r\n    // let mandatoryFields = [];\r\n    const { userInfo } = this.props.Login;\r\n    const addId = this.state.controlMap.has(\"AddProjectMaster\") && this.state.controlMap.get(\"AddProjectMaster\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\r\n    const deleteId = this.state.controlMap.has(\"DeleteProjectMaster\") && this.state.controlMap.get(\"DeleteProjectMaster\").ncontrolcode;\r\n    const approveId = this.state.controlMap.has(\"ApproveProjectMaster\") && this.state.controlMap.get(\"ApproveProjectMaster\").ncontrolcode;\r\n    const completeId = this.state.controlMap.has(\"CompleteProjectMaster\") && this.state.controlMap.get(\"CompleteProjectMaster\").ncontrolcode;\r\n    const viewId = this.state.controlMap.has(\"ViewProjectMaster\") && this.state.controlMap.get(\"ViewProjectMaster\").ncontrolcode;\r\n    // const addteammembersId = this.state.controlMap.has(\"AddTeamMembers\") && this.state.controlMap.get(\"AddTeamMembers\").ncontrolcode;\r\n    const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\r\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode;\r\n    // const deleteteammembersId = this.state.controlMap.has(\"DeleteTeammembers\") && this.state.controlMap.get(\"DeleteTeammembers\").ncontrolcode;\r\n\r\n    const viewClosureFileId = this.state.controlMap.has(\"ViewProjectMasterClosureFile\") && this.state.controlMap.get(\"ViewProjectMasterClosureFile\").ncontrolcode;\r\n    const reportdetailId = this.state.controlMap.has(\"ReportInfoProject\") && this.state.controlMap.get(\"ReportInfoProject\").ncontrolcode;\r\n    const fieldsForGrid = [\r\n\r\n      { \"idsName\": \"IDS_LOGINID\", \"dataField\": \"sloginid\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_USER\", \"dataField\": \"steammembername\", \"width\": \"200px\" }\r\n\r\n    ]\r\n\r\n\r\n    const { SelectedProjectMaster } = this.props.Login.masterData;\r\n    const selectedMaster = this.props.Login.masterData.SelectedProjectMaster;\r\n    const selectedProjectMaster = this.props.Login.masterData.SelectedProjectMaster;\r\n\r\n    const filterParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n              <span onClick={() => this.setState({ sidebarview: !this.state.sidebarview })} className='sidebar-view-btn'>\r\n                {!this.state.sidebarview ?\r\n                  <i class=\"fa fa-less-than\"></i> :\r\n                  <i class=\"fa fa-greater-than\"></i>\r\n                }\r\n              </span>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({ id: \"IDS_PROJECTMASTER\" })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ProjectMaster}\r\n                getMasterDetail={(ProjectMasterdata) => this.props.getProjectMaster(ProjectMasterdata, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                selectedMaster={selectedProjectMaster}\r\n                primaryKeyField=\"nprojectmastercode\"\r\n                mainField=\"sprojecttitle\"\r\n                firstField=\"sprojectcode\"\r\n                secondField=\"sversionstatus\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                //     openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.ProjectMasterList)}\r\n                openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.selectedRecordfilter, this.props.Login.masterData.SelectedProjectType)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTMASTERFILTER\":\r\n                      <ProjectMasterFilter\r\n                        filterProjectType={this.state.ProjectMasterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      />\r\n                  }\r\n                ]}\r\n\r\n              />\r\n            </Col>\r\n            <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n              {selectedProjectMaster ?\r\n                <ContentPanel className=\"panel-main-content\">\r\n                  <Card className=\"border-0\">\r\n                    <Card.Header>\r\n                      {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                      <Card.Title className=\"product-title-main\">\r\n                        {selectedProjectMaster.sprojecttitle}\r\n                      </Card.Title>\r\n                      <Card.Subtitle>\r\n                        <div className=\"d-flex product-category\">\r\n                          <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                            <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                              <i class={activeIconCSS}></i>\r\n                              {selectedProjectMaster.sversionstatus}\r\n\r\n                            </span>\r\n                          </h2>\r\n                          {/* </Col>\r\n                                                <Col md=\"4\"> */}\r\n                          {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                          <div className=\"d-inline\">\r\n                            {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                            {/* Start Here */}\r\n                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\" >  \r\n                                                            <FontAwesomeIcon icon={faEye} className=\"ActionIconColor\" onClick={(e)=>this.viewAdditionalInfo(e)} />\r\n                                                        </Nav.Link> */}\r\n                            {/* End Here */}\r\n                            <ViewInfoDetails \r\n                                userInfo={this.props.Login.userInfo}\r\n                                selectedObject ={this.props.Login.masterData.SelectedProjectMaster}\r\n                                screenHiddenDetails={this.state.userRoleControlRights.indexOf(editId) === -1}   \r\n                                screenName={this.props.Login.screenName}\r\n                                dataTip={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                               // hidden={(this.state.userRoleControlRights.indexOf(viewClosureFileId) === -1) ? true : this.props.Login.masterData.SelectedProjectMaster&& this.props.Login.masterData.SelectedProjectMaster.sfilename&&this.props.Login.masterData.SelectedProjectMaster.sfilename==='-'? true : false}\r\n                               // downLoadIcon={this.props.Login.masterData.SelectedProjectMaster&& this.props.Login.masterData.SelectedProjectMaster.sfilename&&this.props.Login.masterData.SelectedProjectMaster.sfilename!='-'? true : false}\r\n                                rowList={[\r\n                                  [\r\n                                    {dataField:\"sprojecttitle\", idsName:\"IDS_PROJECTTITLE\"},                                    \r\n                                    {dataField:\"sprojectcode\", idsName:\"IDS_PROJECTCODE\"}                      \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sprojectname\", idsName:\"IDS_CLIENT\"},\r\n                                    {dataField: \"suserrolename\", idsName: \"IDS_ROLE\"}                  \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"susername\", idsName:\"IDS_INCHARGE\"},\r\n                                    {dataField: \"srfwdate\", idsName:\"IDS_RFWDATE\"},            \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sprojectstartdate\", idsName:\"IDS_STARTDATE\"},\r\n                                    {dataField:\"sexpectcompletiondate\", idsName:\"IDS_EXPECTEDPROJECTCOMPLETIONDATE\"}                \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sclientcatname\", idsName:\"IDS_CLIENTCATEGORY\"},\r\n                                    {dataField:\"sclientname\", idsName:\"IDS_CLIENT\"}                        \r\n                        \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"squotationno\", idsName:\"IDS_QUOTATIONNO\"},\r\n                                    {dataField:\"srfwid\", idsName:\"IDS_RFWID\"}\r\n\r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sprojectduration\", idsName:\"IDS_PROJECTDURATION\"},\r\n                                    {dataField:\"sprojectdescription\", idsName:\"IDS_PROJECTDESCRIPTION\"}\r\n\r\n                                  ],\r\n                                      [{dataField:\"sfilename\", idsName:\"IDS_CLOSUREFILENAME\"},\r\n                                      {                              \r\n                                       hidden:this.props.Login.masterData.SelectedProjectMaster&& this.props.Login.masterData.SelectedProjectMaster.sfilename&&this.props.Login.masterData.SelectedProjectMaster.sfilename!='-'&&  this.state.userRoleControlRights.indexOf(viewClosureFileId) !== -1 ? false : true,\r\n                                      onClick:this.viewProjectMasterClosureFile}]\r\n\r\n\r\n\r\n\r\n                                  \r\n                                ]}\r\n                            />\r\n                            {parseInt(this.props.Login.settings[34]) === transactionStatus.YES ?\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"reportdetailstestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(reportdetailId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTINFOPROJECT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={(e) => this.props.ReportInfo(\"IDS_REPORTINFOPROJECT\", \"\", \"nprojectmastercode\", this.props.Login.masterData, this.props.Login.userInfo, reportdetailId, this.props.Login.settings[34])}>\r\n                              <ReportEdit className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                            </Nav.Link>\r\n                            : \"\" }\r\n\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.addProjectMaster(\"update\", selectedProjectMaster, userInfo, editId, this.state.selectedRecordfilter, addProjectMaster)}>\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletetestname\"\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                              //   data-for=\"tooltip_list_wrap\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                              onClick={() => this.ConfirmDelete(selectedProjectMaster, \"delete\", deleteId, \"ProjectMaster\")}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                            </Nav.Link>\r\n                            <Nav.Link name=\"approveProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.approveProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"approve\", approveId)}>\r\n                              <FontAwesomeIcon icon={faThumbsUp} />\r\n                            </Nav.Link>\r\n                            <Nav.Link name=\"completeProjectMaster\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                              className=\"btn btn-circle outline-grey mr-2\"\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                              onClick={() => this.props.projectMasterModal(selectedProjectMaster, \"complete\", \"IDS_PROJECTCOMPLETION\", completeId, \"dprojectcompletiondate\", this.props.Login.userInfo)}\r\n\r\n                            >\r\n                              <FontAwesomeIcon icon={faCheckCircle}\r\n                              />\r\n                            </Nav.Link>\r\n\r\n\r\n                            <Nav.Link name=\"retireProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(retireId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.projectMasterModal(selectedProjectMaster, \"retire\", \"IDS_RETIREDPROJECT\", retireId, \"dprojectretiredate\", this.props.Login.userInfo)}\r\n\r\n                            >\r\n                              <FontAwesomeIcon icon={faUserTimes} />\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link name=\"ClosureProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(closureId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_CLOSE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.projectMasterModal(selectedProjectMaster, \"closure\", \"IDS_PROJECTCLOSURE\", closureId, \"dprojectclosuredate\", this.props.Login.userInfo)}>\r\n                              {/* <FontAwesomeIcon icon={faWindowClose} /> */}\r\n                              <Closure className=\"custom_icons\" width=\"17\" height=\"20\" />\r\n                            </Nav.Link>\r\n\r\n\r\n\r\n                          </div>\r\n                          {/* </Tooltip> */}\r\n                        </div>\r\n                        {/* </Col>\r\n                                            </Row> */}\r\n                      </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"form-static-wrap\">\r\n                      {/* <Row>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectcode}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTNAME\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_ROLE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.suserrolename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_USER\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.susername}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        {/* <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TEAMMEMBERS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.steammembername}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col> \r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.srfwdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_STARTDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sprojectstartdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_EXPECTEDPROJECTCOMPLETIONDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sexpectcompletiondate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTDURATION\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectduration}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        {/* <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DURATIONPERIOD\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.speriodname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>  \r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTDESCRIPTION\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectdescription}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                      </Row> */}\r\n                      {/* <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col> */}\r\n\r\n                      {/* <Row>\r\n\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTCLOSURENAME\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sfilename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"3\"> \r\n                          <Nav.Link name=\"ClosureProjectMasterFile\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={(this.state.userRoleControlRights.indexOf(viewClosureFileId) === -1) ? true : selectedProjectMaster.sfilename === '-' ? true : false }\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                              onClick={() => this.viewProjectMasterClosureFile(selectedProjectMaster, userInfo)}>\r\n                              <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                            </Nav.Link> \r\n                       </Col> \r\n\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sclosureremarks}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_CLOSUREDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sprojectclosuredate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                      </Row>\r\n\r\n                      <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col>\r\n                      <Row>\r\n\r\n                      <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_RETIREDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sprojectretiredate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sretiredremarks}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        </Row>\r\n\r\n                        <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col>\r\n                      <Row>\r\n\r\n                      <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTCOMPLETIONDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sprojectcompletiondate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.scompletionremarks}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        </Row> */}\r\n\r\n                      <Card className=\"at-tabs border-0\">\r\n                        <Row noGutters>\r\n                          <Col md={12}>\r\n                            <ProjectMasterTab\r\n                              primaryKeyField={\"nprojectmembercode\"}\r\n                              // data={this.props.Login.masterData.ProjectMember}\r\n                              data={this.state.data}\r\n                              // dataResult={this.props.Login.masterData.ProjectMember}\r\n\r\n                              projectMasterHistorydata={this.props.Login.masterData.ProjectMasterHistory}\r\n                              projectMasterdataResult={this.props.Login.masterData.ProjectMasterHistory}\r\n                              dataResult={this.state.dataResult}\r\n                              masterData={this.props.Login.masterData}\r\n                              screenName={this.props.Login.screenName}\r\n                              operation={this.props.Login.operation}\r\n                              openChildModal={this.props.Login.openChildModal}\r\n                              crudMaster={this.props.crudMaster}\r\n                              errorCode={this.props.Login.errorCode}\r\n                              validateEsignCredential={this.props.validateEsignCredential}\r\n                              loadEsign={this.props.Login.loadEsign}\r\n                              showAccordian={this.state.showAccordian}\r\n                              selectedRecord={this.state.selectedRecord || {}}\r\n                              // dataState={{skip: 0, take: 10}}\r\n                              //dataState={this.props.Login.dataState}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={fieldsForGrid}\r\n                              controlMap={this.state.controlMap}\r\n                              userRoleControlRights={this.state.userRoleControlRights}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\r\n                              getProjectmasterAddMemberService={this.props.getProjectmasterAddMemberService}\r\n                              // --   fetchRecord={this.props.getPricingEditService}\r\n                              //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\r\n                              deleteRecord={this.deleteProjectMember}\r\n                              //  deleteParam={{operation:\"delete\"}}\r\n                              methodUrl={\"Teammembers\"}\r\n                              // reloadData={this.reloadData}\r\n                              // --      addRecord = {() => this.openModal(addId)}\r\n                              pageable={true}\r\n                              onTabChange={this.onTabChange}\r\n                              updateStore={this.props.updateStore}\r\n                              scrollable={'scrollable'}\r\n                              // gridHeight = {'600px'}\r\n                              isActionRequired={true}\r\n                              isToolBarRequired={false}\r\n                              selectedId={this.props.Login.selectedId}\r\n                              viewAttachment={this.props.viewAttachment}\r\n                              MembersList={this.props.Login.MembersList}\r\n                              onComboChange={this.onComboChange}\r\n                              // File\r\n                              addProjectMasterFile={this.props.addProjectMasterFile}\r\n                              esignRights={this.props.Login.userRoleControlRights}\r\n                              ntransactionstatus={selectedProjectMaster.ntransactionstatus}\r\n                              //  selectedRecord={this.props.Login.selectedRecord}\r\n                              onDropProjectMasterFile={this.onDropProjectMasterFile}\r\n                              onInputOnChange={this.onInputOnChange}\r\n                              screenData={this.props.Login.screenData}\r\n                              deleteAttachment={this.deleteAttachment}\r\n                              ncontrolCode={this.props.Login.ncontrolCode}\r\n                              linkMaster={this.props.Login.linkMaster}\r\n                              historydataStateChange={this.historydataStateChange}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </ContentPanel>\r\n                : \"\"\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n        {/* End of get display */}\r\n\r\n        {/* Start of Modal Sideout for Test Creation */}\r\n        {(this.props.Login.openModal) &&\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            //size={this.props.Login.operation===\"create\" ? \"xl\" : \"lg\" }\r\n            closeModal={this.closeModal}\r\n            hideSave={this.props.Login.screenName === \"IDS_PROJECTINFO\" ? true : false}\r\n            operation={this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.screenName === \"IDS_PROJECTCLOSURE\" ? this.onSaveProjectMasterClosureFile : this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.mandatoryFields || []}\r\n            addComponent={this.props.Login.loadEsign ?\r\n              <Esign\r\n                operation={this.props.Login.operation}\r\n                onInputOnChange={this.onInputOnChange}\r\n                inputParam={this.props.Login.inputParam}\r\n                selectedRecord={this.state.selectedRecord || {}}\r\n              />\r\n              : (this.props.Login.screenName === \"IDS_PROJECTMASTER\") ?\r\n\r\n                <AddProjectMaster\r\n\r\n                  userInfo={this.props.Login.userInfo}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ProjectType={this.props.Login.ProjectType}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  // onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  onNumericInputChange={this.onNumericInputChange}\r\n\r\n                  handleDateChange={this.handleDateChange}\r\n                  Userrole={this.props.Login.Userrole}\r\n                  Users={this.props.Login.userList}\r\n                  TeamMembers={this.props.Login.TeamMembers}\r\n                  PeriodByControl={this.props.Login.PeriodByControl}\r\n                  settings={this.props.Login.settings}\r\n                  ClientCategory={this.props.Login.ClientCategory}\r\n                  Client={this.props.Login.Client}\r\n                  QuotationNo={this.props.Login.QuotationNo}\r\n                />\r\n                : (this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\") ?\r\n                  <ReportInfoProject\r\n                    userInfo={this.props.Login.userInfo}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onComboChange={this.onComboChange}\r\n                    onNumericInputChange={this.onNumericInputChange}\r\n                    reportTemplateList={this.props.Login.reportTemplateList}\r\n                    settings={this.props.Login.settings}\r\n\r\n                  /> :\r\n\r\n\r\n                  (this.props.Login.screenName === \"IDS_PROJECTCLOSURE\") ?\r\n\r\n                    <ProjectMasterClosure\r\n                      handleDateChange={this.handleDateChange}\r\n                      userInfo={this.props.Login.userInfo}\r\n\r\n                      selectedRecord={this.state.selectedRecord || {}}\r\n                      onInputOnChange={this.onInputOnChange}\r\n                      onDrop={this.onDropProjectMasterclosureFile}\r\n                      onDropAccepted={this.onDropAccepted}\r\n                      deleteAttachment={this.deleteAttachment}\r\n                      actionType={this.state.actionType}\r\n                      onComboChange={this.onComboChange}\r\n                      linkMaster={this.props.linkMaster}\r\n                      editFiles={this.props.editFiles}\r\n                      maxSize={20}\r\n                      maxFiles={1}\r\n                      multiple={false}\r\n                      label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                      name=\"projectmasterclosurefilename\"\r\n\r\n                    ></ProjectMasterClosure>\r\n                    : (this.props.Login.screenName === \"IDS_PROJECTINFO\") ?\r\n                      <AddProjectInfoPreview\r\n                        selectedProjectMaster={this.props.Login.masterData.SelectedProjectMaster}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        viewProjectMasterClosureFile={this.viewProjectMasterClosureFile}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        viewClosureFileId={viewClosureFileId}\r\n                      >\r\n                      </AddProjectInfoPreview>\r\n\r\n                      : \"Parent\"\r\n\r\n            }\r\n          />\r\n        }\r\n\r\n        {this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            modalTitle={this.props.Login.screenName}\r\n            modalBody={\r\n              this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\" ? (\r\n                <AddCompletionDate\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n\r\n                />\r\n              ) : (\r\n                <ProjectMasterRetire\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n\r\n                //onComboChange={this.onComboChange}\r\n                //currentTime={this.props.Login.currentTime}\r\n                />\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n\r\n        {/* End of Modal Sideout for Test Creation */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  viewProjectMasterClosureFile = (selectedProjectMaster, userInfo) => {\r\n    const inputParam = {\r\n      inputData: {\r\n        projectmasterclosurefile: selectedProjectMaster,\r\n        userinfo: userInfo\r\n      },\r\n      classUrl: \"projectmaster\",\r\n      operation: \"view\",\r\n      methodUrl: \"AttachedProjectMasterClosureFile\",\r\n      screenName: \"ProjectMaster Closure File\"\r\n    }\r\n    this.props.viewAttachment(inputParam);\r\n  }\r\n\r\n  findMandatoryFields(screenName, selectedRecord, operation) {\r\n    let mandatoryFields = [];\r\n    if (screenName === \"IDS_PROJECTMASTER\") {\r\n\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"nprojecttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTTITLE\", \"dataField\": \"sprojecttitle\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PROJECTNAME\", \"dataField\": \"sprojectname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_ROLE\", \"dataField\": \"nuserrolecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"drfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STARTDATE\", \"dataField\": \"dprojectstartdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTDURATION\", \"dataField\": \"nprojectduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_DURATIONPERIOD\", \"dataField\": \"nperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_CLIENTCATEGORY\", \"dataField\": \"nclientcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_CLIENT\", \"dataField\": \"nclientcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n      ]\r\n\r\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      if (parseInt(this.props.Login.settings[31]) != 3)\r\n        mandatoryFields.push({ \"idsName\": \"IDS_PROJECTCODE\", \"dataField\": \"sprojectcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" });\r\n      return mandatoryFields;\r\n\r\n    }\r\n    else if (screenName === \"IDS_PROJECTCLOSURE\") {\r\n\r\n      mandatoryFields = [\r\n        //{ \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n        // { \"idsName\": \"IDS_REASONFORCLOSURE\", \"dataField\": \"sclosureremarks\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\r\n        { \"idsName\": \"IDS_CLOSUREDATE\", \"dataField\": \"dprojectclosuredate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n\r\n      ]\r\n\r\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields;\r\n    }\r\n    else if (screenName === \"IDS_REPORTINFOPROJECT\") {\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_REPORTTEMPLATEVERSION\", \"dataField\": \"sreporttemplateversion\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_REVISION\", \"dataField\": \"srevision\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_REVISIONAUTHOR\", \"dataField\": \"srevisionauthor\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_INTRODUCTION\", \"dataField\": \"sintroduction\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTHEADERCOMMENTS\", \"dataField\": \"stestproductheadercomments\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS1\", \"dataField\": \"stestproductfootercomments1\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS2\", \"dataField\": \"stestproductfootercomments2\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS3\", \"dataField\": \"stestproductfootercomments3\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS4\", \"dataField\": \"stestproductfootercomments4\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_SAMPLINGDETAILS\", \"dataField\": \"ssamplingdetails\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_UNCERTAINITYOFMEASUREMENT\", \"dataField\": \"suncertainitymeasurement\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        // {\"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n\r\n      ]\r\n;\r\n     \r\n      return mandatoryFields;\r\n    }\r\n\r\n    else if (screenName === \"IDS_RETIREDPROJECT\") {\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_RETIREDATE\", \"dataField\": \"dprojectretiredate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n      ]\r\n    }\r\n    else if (screenName === \"IDS_PROJECTCOMPLETION\") {\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_PROJECTCOMPLETEDDATE\", \"dataField\": \"dprojectcompletiondate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n      ]\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n      case 1:\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nuserrolecode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nuserrolecode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.nusercode);\r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"suserrolename\"] = comboData.item[\"suserrolename\"];\r\n        this.props.getuserComboServices({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nuserrolecode.label,\r\n            primarykey: selectedRecord.nuserrolecode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n\r\n\r\n        // this.setState({ selectedRecord });\r\n\r\n        break;\r\n\r\n      case 2:\r\n        // let nfilterProjectType = this.state.nfilterProjectType || {}\r\n        // nfilterProjectType = comboData;\r\n        const selectedRecordfilter = this.state.selectedRecordfilter || {};\r\n        selectedRecordfilter[fieldName] = comboData;\r\n        this.setState({ selectedRecordfilter });\r\n        break;\r\n\r\n      case 3:\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n      case 4:\r\n        if (selectedRecord.nclientcatcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcatcode.value)) {\r\n            delete (selectedRecord.nclientcode);\r\n            if (selectedRecord.nquotationcode)\r\n              delete (selectedRecord.nquotationcode);\r\n          }\r\n        }\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sclientcatname\"] = comboData.item[\"sclientcatname\"];\r\n\r\n        this.props.getClientByCategory({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcatcode.label,\r\n            primarykey: selectedRecord.nclientcatcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n\r\n      case 5:\r\n        // if (selectedRecord.nclientcatcode) {\r\n        //   if (this.props.Login.selec !== parseInt(selectedRecord.nclientcatcode.value)) {\r\n        //   delete (selectedRecord.nclientcode);\r\n        //     delete (selectedRecord.nquotationcode);\r\n        //   }}\r\n        if (selectedRecord.nclientcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcode.value)) {\r\n            delete (selectedRecord.nquotationcode);\r\n          }\r\n        }\r\n\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"squotationno\"] = comboData.item[\"squotationno\"];\r\n        this.props.getQuotationByClient({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcatcode.label,\r\n            nclientcatcode: selectedRecord.nclientcatcode.value,\r\n            nclientcode: parseInt(comboData.value)\r\n          }\r\n\r\n        }, selectedRecord);\r\n\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onDropProjectMasterFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  }\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === 'checkbox') {\r\n      if (event.target.name === \"ntransactionstatus\")\r\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n      // else if (event.target.name === \"nlockmode\")\r\n      //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n      else\r\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n    }\r\n    else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    }\r\n    else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  }\r\n\r\n  deleteProjectMember = (deleteParam) => {\r\n    const inputParam = {\r\n      classUrl: \"projectmaster\",\r\n      methodUrl: \"ProjectMember\",\r\n      //displayName: ,\r\n      inputData: {\r\n        \"projectmember\": deleteParam.selectedRecord,//.dataItem,\r\n        \"nprojectmembercode\": deleteParam.selectedRecord.nprojectmembercode,\r\n        \"userinfo\": this.props.Login.userInfo\r\n      },\r\n      operation: \"delete\",\r\n      selectedRecord: { ...this.state.selectedRecord }\r\n\r\n      // priceDataState:this.state.priceDataState\r\n    }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n          openChildModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_MEMBERS\" }),\r\n          operation: deleteParam.operation\r\n        }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n      this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n  }\r\n\r\n  onDropProjectMasterclosureFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  }\r\n\r\n  /* onNumericInputChange = (value, name) => {\r\n    console.log(\"value:\", value, name);\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (name === \"nroundingdigits\") {\r\n        \r\n        if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n            console.log(\"val:\", value.target.value);\r\n            selectedRecord[name] = value.target.value;\r\n        }\r\n    }\r\n    else {\r\n        selectedRecord[name] = value;\r\n    }\r\n  \r\n    this.setState({ selectedRecord });\r\n  } */\r\n\r\n  onNumericInputChange = (value, name) => {\r\n\r\n    console.log(\"value:\", value, name);\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (name === \"nprojectduration\") {\r\n\r\n      if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\r\n\r\n        selectedRecord[name] = value.target.value;\r\n      } else {\r\n\r\n        selectedRecord[name] = \"\";\r\n      }\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      selectedRecord[name] = value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n\r\n  }\r\n\r\n  approveProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n    if (selectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n\r\n      const postParam = {\r\n        inputListName: \"ProjectMaster\",\r\n        selectedObject: \"SelectedProjectMaster\",\r\n        primaryKeyField: \"nprojectmastercode\",\r\n        primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n        fetchUrl: \"projectmaster/getProjectMaster\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl, postParam,\r\n        inputData: {\r\n          \"userinfo\": this.props.Login.userInfo,\r\n          \"projectmaster\": { ...selectedProjectMaster, },\r\n          \"nautoprojectcode\": parseInt(this.props.Login.settings[31]) === transactionStatus.YES ? transactionStatus.YES : transactionStatus.NO\r\n        },\r\n        operation,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n        selectedRecord: { ...this.state.selectedRecord }\r\n\r\n      }\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            openModal: true, screenName: \"IDS_PROJECTMASTER\", operation\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n    else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n    }\r\n\r\n  }\r\n\r\n  // RetireProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n  //   if (selectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED) {\r\n\r\n  //     const postParam = {\r\n  //       inputListName: \"ProjectMaster\",\r\n  //       selectedObject: \"SelectedProjectMaster\",\r\n  //       primaryKeyField: \"nprojectmastercode\",\r\n  //       primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n  //       fetchUrl: \"projectmaster/getProjectMaster\",\r\n  //       fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n  //     };\r\n\r\n  //     const inputParam = {\r\n  //       classUrl: this.props.Login.inputParam.classUrl,\r\n  //       methodUrl, postParam,\r\n  //       inputData: {\r\n  //         \"userinfo\": this.props.Login.userInfo,\r\n  //         \"projectmaster\": selectedProjectMaster\r\n  //       },\r\n  //       operation,\r\n  //       isClearSearch: this.props.Login.isClearSearch\r\n  //     }\r\n\r\n  //     const masterData = this.props.Login.masterData;\r\n\r\n  //     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n  //       const updateInfo = {\r\n  //         typeName: DEFAULT_RETURN,\r\n  //         data: {\r\n  //           loadEsign: true, screenData: { inputParam, masterData },\r\n  //           openModal: true, screenName: \"IDS_PROJECTMASTER\", operation\r\n  //         }\r\n  //       }\r\n  //       this.props.updateStore(updateInfo);\r\n  //     }\r\n  //     else {\r\n  //       this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCLOSEDVERSION\" }));\r\n  //   }\r\n\r\n  // }\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  /*\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n*/\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.dataState),\r\n      dataState: event.dataState\r\n    });\r\n  }\r\n  historydataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.historydataState),\r\n      historydataState: event.historydataState\r\n    });\r\n  }\r\n\r\n  /*\r\n    tabDetail = () => {\r\n      const tabMap = new Map();\r\n      const deleteSecId =\r\n        this.state.controlMap.has(\"DeleteSection\") &&\r\n        this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n      const defaultSecId =\r\n        this.state.controlMap.has(\"DefaultSection\") &&\r\n        this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n      tabMap.set(\r\n        \"IDS_SECTION\",\r\n        <InstrumentSectionTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          dataState={this.props.Login.dataState}\r\n          masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          userInfo={this.props.Login.userInfo}\r\n          inputParam={this.props.Login.inputParam}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteSecId={deleteSecId}\r\n          defaultSecId={defaultSecId}\r\n          defaultRecord={this.defaultRecord}\r\n          getAvailableInstData={this.props.getAvailableInstData}\r\n          InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n          screenName=\"IDS_SECTION\"\r\n          selectedRecord={this.state.selectedRecord}\r\n          settings={this.props.Login.settings}\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTVALIDATION\",\r\n        <InstrumentValidationTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.ValidationFileData}\r\n          InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          getDataForEdit={this.props.getDataForEdit}\r\n          addfilecllick={this.addInstrumentFile}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTCALIBRATION\",\r\n        <InstrumentCalibrationTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.CalibrationFileData}\r\n          InstrumentCalibration={\r\n            this.props.Login.masterData.InstrumentCalibration\r\n          }\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          addfilecllick={this.addInstrumentCalibrationFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          addOpenDate={this.props.addOpenDate}\r\n          OpenDate={this.props.OpenDate}\r\n          CloseDate={this.props.CloseDate}\r\n          screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTMAINTENANCE\",\r\n        <InstrumentMaintenanceTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.MaintenanceFileData}\r\n          InstrumentMaintenance={\r\n            this.props.Login.masterData.InstrumentMaintenance\r\n          }\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          addfilecllick={this.addInstrumentMaintenanceFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          addOpenDate={this.props.addOpenDate}\r\n          OpenDate={this.props.OpenDate}\r\n          CloseDate={this.props.CloseDate}\r\n          screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n        />\r\n      );\r\n  \r\n      return tabMap;\r\n    }; */\r\n\r\n  ConfirmDelete = (selectedProjectMaster, operation, deleteId, screenName) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteProjectMaster(\r\n          screenName,\r\n          selectedProjectMaster,\r\n          operation,\r\n          deleteId\r\n\r\n        )\r\n    );\r\n  };\r\n\r\n\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n    if (this.props.Login.masterData.SelectedProjectType !== undefined) {\r\n      if (Object.values(this.props.Login.masterData.SelectedProjectType).length && this.props.Login.masterData.SelectedProjectType !== undefined) {\r\n        let inputParam = {\r\n          inputData: {\r\n            // nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\r\n            nprojecttypecode: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            // nfilterProjectType: this.state.selectedRecord.nprojecttypecode,\r\n            nfilterProjectType: this.props.Login.masterData.SelectedProjectType,\r\n          },\r\n          classUrl: \"projectmaster\",\r\n          methodUrl: \"ProjectMasterByProjectType\",\r\n        };\r\n\r\n        this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\r\n      }\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    //let openClosureModal=this.props.Login.openClosureModal;\r\n    let selectedRecord = this.state.selectedRecord;\r\n    let modalShow = this.props.Login.modalShow;;\r\n    //    let selectedRecord = this.state.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        // if (this.props.Login.modalTitle === \"IDS_RETIREDPROJECT\" ||\r\n        // this.props.Login.modalTitle === \"IDS_PROJECTCOMPLETION\") {\r\n        // modalShow = true;\r\n        // openModal = false;\r\n        // openClosureModal = false}\r\n        // openClosureModal=false;\r\n        selectedRecord = {};\r\n      }\r\n      else {\r\n        loadEsign = false;\r\n        if (this.props.Login.screenName === \"IDS_RETIREDPROJECT\" ||\r\n          this.props.Login.screenName === \"IDS_PROJECTCOMPLETION\") {\r\n          modalShow = true;\r\n          openModal = false;\r\n          //openClosureModal = false\r\n\r\n        }\r\n        selectedRecord['esignpassword'] = '';\r\n        selectedRecord['esigncomments'] = '';\r\n        selectedRecord['esignreason'] = '';\r\n      }\r\n    }\r\n    else {\r\n      this.props.Login.Client = [];\r\n      this.props.Login.QuotationNo = [];\r\n      openModal = false;\r\n      // openClosureModal=false;\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, modalShow, loadEsign, selectedRecord }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n\r\n  }\r\n\r\n\r\n\r\n  closeModalShow = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let modalShow = this.props.Login.modalShow;\r\n    //let popUp = this.props.Login.popUp;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n    } else {\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n      //popUp = undefined;\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { modalShow, selectedRecord, selectedId: null, loadEsign, },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      selectedRecordfilter,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterProjectType,\r\n      filterProjectType,\r\n\r\n    } = this.state;\r\n\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n      this.setState({ selectedRecord, selectedRecordfilter });\r\n    }\r\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({\r\n        controlMap, userRoleControlRights, data: this.props.Login.masterData.ProjectMember,\r\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], this.state.dataState)\r\n      });\r\n      //   updateState = true;\r\n    }\r\n\r\n    let nprojecttypecode = this.state.nfilterProjectType || {};\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterProjectType = this.state.nfilterProjectType || {};\r\n\r\n      const filterProjectType = constructOptionList(this.props.Login.masterData.filterProjectType || [], \"nprojecttypecode\",\r\n        \"sprojecttypename\", undefined, undefined, undefined);\r\n\r\n      let ProjectMasterList = filterProjectType.get(\"OptionList\");\r\n      nprojecttypecode = ProjectMasterList[0];\r\n      selectedRecordfilter = { nprojecttypecodevalue: nprojecttypecode }\r\n      selectedRecord = { nprojecttypecodevalue: nprojecttypecode }\r\n      // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\r\n      this.setState({\r\n        ProjectMasterList,\r\n        selectedRecordfilter, selectedRecord, data: this.props.Login.masterData.ProjectMember, dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 })\r\n      });\r\n\r\n      if (this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n        nfilterProjectType = {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType,\r\n        };\r\n      }\r\n      //  selectedRecordfilter = {nprojecttypecodevalue:nfilterProjectType}\r\n      filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n      this.setState({ filterData, selectedRecordfilter });\r\n    }\r\n\r\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n\r\n      let nprojecttypecodevalue = this.props.Login.masterData.SelectedProjectType ?\r\n        {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType\r\n        } : \"\"\r\n      //  nprojecttypecode=ProjectMasterList[ProjectMasterList.length-1];\r\n      selectedRecordfilter = { nprojecttypecodevalue }\r\n      selectedRecord = { nprojecttypecodevalue: nprojecttypecode }\r\n      // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\r\n      this.setState({\r\n        selectedRecordfilter, selectedRecord\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType) {\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.SelectedProjectType\r\n          ? this.props.Login.masterData.SelectedProjectType.sprojecttypename\r\n          : \"NA\",\r\n      });\r\n\r\n    } else if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectMaster) {\r\n\r\n      /*    breadCrumbData.push({\r\n            label: \"IDS_PROJECTTYPE\",\r\n            value: this.state.selectedRecord.nprojecttypecode\r\n              ? this.state.selectedRecord.nprojecttypecode.label\r\n              : \"NA\",\r\n          }); */\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.SelectedProjectMaster\r\n          ? this.props.Login.masterData.SelectedProjectMaster.sprojecttypename\r\n          : \"NA\",\r\n      });\r\n\r\n    } else {\r\n\r\n      /*       breadCrumbData.push({\r\n             label: \"IDS_PROJECTTYPE\",\r\n             value:  this.state.selectedRecord.nprojecttypecodevalue\r\n               ? this.state.selectedRecord.nprojecttypecodevalue.label\r\n               : \"NA\",\r\n           }); */\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.nfilterProjectType\r\n          ? this.props.Login.masterData.nfilterProjectType.label\r\n          : \"NA\",\r\n      });\r\n\r\n    }\r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  ProjectMasterInfoPreview = (viewId) => {\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: {\r\n        screenName: \"IDS_PROJECTINFO\",\r\n        openModal: true,\r\n        operation: \"view\",\r\n        modalScreenSize: false,\r\n        ncontrolcode: viewId\r\n\r\n      },\r\n    };\r\n\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    // if (this.state.nfilterProjectType.value) {\r\n    // if (this.state.selectedRecord.nprojecttypecodevalue.value) {\r\n    //if ((this.state.selectedRecord).length>0) {\r\n\r\n    // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n\r\n    if (this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n      if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n        let inputParam = {\r\n          inputData: {\r\n            nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\r\n            userinfo: this.props.Login.userInfo,\r\n            // nfilterProjectType: this.state.nfilterProjectType,\r\n            nfilterProjectType: this.state.selectedRecordfilter.nprojecttypecodevalue,\r\n          },\r\n          classUrl: \"projectmaster\",\r\n          methodUrl: \"ProjectMasterByProjectType\",\r\n        };\r\n        this.props.changeProjectTypeFilter(\r\n          inputParam,\r\n          this.props.Login.masterData.filterProjectType\r\n        );\r\n      }\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  changeProjectTypeFilter,\r\n  viewAttachment, addProjectMaster, ReportInfo, getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices, getClientByCategory, getQuotationByClient, closureProjectMaster, modalSave, validateEsignforModal, projectMasterModal\r\n})(injectIntl(ProjectMaster));\r\n"]},"metadata":{},"sourceType":"module"}