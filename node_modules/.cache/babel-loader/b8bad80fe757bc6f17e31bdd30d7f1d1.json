{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Col,Nav,Row}from\"react-bootstrap\";import{FormattedMessage,injectIntl}from\"react-intl\";import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faPlus}from\"@fortawesome/free-solid-svg-icons\";import{NavHeader}from'../../components/sidebar/sidebar.styles';import{ContentPanel,ListWrapper}from'./../userroletemplate/userroletemplate.styles';import FormInput from'../../components/form-input/form-input.component';var AddBarcodeTemplate=/*#__PURE__*/function(_React$Component){_inherits(AddBarcodeTemplate,_React$Component);var _super=_createSuper(AddBarcodeTemplate);function AddBarcodeTemplate(){_classCallCheck(this,AddBarcodeTemplate);return _super.call(this);}_createClass(AddBarcodeTemplate,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SELECTSCREEN\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.qualisList||[],value:this.props.selectedRecord?this.props.selectedRecord[\"nformcode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboChange(event,\"nformcode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncontrolcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SELECTSCREENCONTROL\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.controlList||[],value:this.props.selectedRecord[\"ncontrolcode\"]?this.props.selectedRecord[\"ncontrolcode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboChange(event,\"ncontrolcode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},\"   \",/*#__PURE__*/React.createElement(CustomSwitch,{label:this.props.intl.formatMessage({id:\"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\"}),type:\"switch\",name:\"nbarcodeprint\",onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nbarcodeprint\"]===3?true:false:false// isMandatory={this.props.extractedColumnList[2].mandatory}\n//  required={this.props.extractedColumnList[2].mandatory}\n,checked:this.props.selectedRecord?this.props.selectedRecord[\"nbarcodeprint\"]===3?true:false:false})),/*#__PURE__*/React.createElement(Col,{md:6},\"   \",/*#__PURE__*/React.createElement(CustomSwitch,{label:this.props.intl.formatMessage({id:\"IDS_QUERYBASEDPRINTBARCODE\"}),type:\"switch\",name:\"nsqlqueryneed\",onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nsqlqueryneed\"]===3?true:false:false// isMandatory={this.props.extractedColumnList[2].mandatory}\n//  required={this.props.extractedColumnList[2].mandatory}\n,checked:this.props.selectedRecord?this.props.selectedRecord[\"nsqlqueryneed\"]===3?true:false:false})))),this.props.selectedRecord[\"nsqlqueryneed\"]===3?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:this.props.intl.formatMessage({id:\"IDS_FILTERBASEDSQLQUERY\"}),type:\"switch\",name:\"nfiltersqlqueryneed\",onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nfiltersqlqueryneed\"]===3?true:false:false// isMandatory={this.props.extractedColumnList[2].mandatory}\n//  required={this.props.extractedColumnList[2].mandatory}\n,checked:this.props.selectedRecord?this.props.selectedRecord[\"nfiltersqlqueryneed\"]===3?true:false:false})),this.props.selectedRecord[\"nfiltersqlqueryneed\"]!==3&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsqlquerycode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SELECTQUERY\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.SqlQuery||[],value:this.props.selectedRecord?this.props.selectedRecord[\"nsqlquerycode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboChange(event,\"nsqlquerycode\");}}))):\"\",/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:this.props.intl.formatMessage({id:\"IDS_NEEDSCREENFILTER\"}),type:\"switch\",name:\"nneedconfiguration\",onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nneedconfiguration\"]===3?true:false:false// isMandatory={this.props.extractedColumnList[2].mandatory}\n//  required={this.props.extractedColumnList[2].mandatory}\n,checked:this.props.selectedRecord?this.props.selectedRecord[\"nneedconfiguration\"]===3?true:false:false})),this.props.selectedRecord&&this.props.selectedRecord[\"nneedconfiguration\"]===3?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addMaterial\",className:\"add-txt-btn\"//hidden={props.userRoleControlRights.indexOf(addMaterialId) === -1}\n,onClick:function onClick(){return _this.props.AddFilterDesign();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDSCREENFILTERDESIGN\",defaultMessage:this.props.intl.formatMessage({id:\"IDS_ADDSCREENFILTERDESIGN\"})}))))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(ListWrapper,{className:\"card-body\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"tree-view1 border-left tree-left \"},this.props.selectedRecord.lstFilterlevel?this.props.selectedRecord.lstFilterlevel.map(function(input,i){return/*#__PURE__*/React.createElement(ListWrapper,{key:i,className:\"form-label-group tree-level list_get\"},/*#__PURE__*/React.createElement(NavHeader,{className:\"line\",style:{width:(i+1)*10}},\" \"),/*#__PURE__*/React.createElement(NavHeader,{id:i,value:_this.props.selectedRecord.totalLevel,className:\"add_field_button\"},\"+\"),/*#__PURE__*/React.createElement(NavHeader,{className:\"levelcolour\",md:1},_this.props.intl.formatMessage({id:\"IDS_LEVEL\"}),\" \",i+1),/*#__PURE__*/React.createElement(ListWrapper,{style:{marginLeft:(i+8)*10}},/*#__PURE__*/React.createElement(FormInput,{className:\"input_custom\",value:input.slabelname,id:\"levelname\",type:\"text\"})));}):\"\"))))));}}]);return AddBarcodeTemplate;}(React.Component);export default injectIntl(AddBarcodeTemplate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/BarcodeTemplate/AddBarcodeTemplate.jsx"],"names":["React","Col","Nav","Row","FormattedMessage","injectIntl","FormSelectSearch","CustomSwitch","FontAwesomeIcon","faPlus","NavHeader","ContentPanel","ListWrapper","FormInput","AddBarcodeTemplate","props","intl","formatMessage","id","qualisList","selectedRecord","event","onComboChange","controlList","onInputOnChange","SqlQuery","AddFilterDesign","lstFilterlevel","map","input","i","width","totalLevel","marginLeft","slabelname","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,OAASC,SAAT,KAA0B,yCAA1B,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,+CAA1C,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,C,GAEMC,CAAAA,kB,oIACF,6BAAc,mEAEb,C,qDAED,iBAAS,gBACL,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,WADV,CAEI,SAAS,CAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFf,CAGI,WAAW,CAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAHjB,CAII,OAAO,CAAE,KAAKH,KAAL,CAAWI,UAAX,EAAyB,EAJtC,CAKI,KAAK,CAAE,KAAKJ,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,WAA1B,CAA5B,CAAqE,EALhF,CAMI,WAAW,CAAE,IANjB,CAOI,QAAQ,CAAE,IAPd,CAQI,OAAO,CAAE,KARb,CASI,YAAY,CAAE,IATlB,CAUI,UAAU,CAAE,KAVhB,CAWI,iBAAiB,CAAE,IAXvB,CAYI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWO,aAAX,CAAyBD,KAAzB,CAAgC,WAAhC,CAAX,EAZd,EADJ,CADJ,cAiBI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,cADV,CAEI,SAAS,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CAFf,CAGI,WAAW,CAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAHjB,CAII,OAAO,CAAE,KAAKH,KAAL,CAAWQ,WAAX,EAA0B,EAJvC,CAKI,KAAK,CAAE,KAAKR,KAAL,CAAWK,cAAX,CAA0B,cAA1B,EAA4C,KAAKL,KAAL,CAAWK,cAAX,CAA0B,cAA1B,CAA5C,CAAwF,EALnG,CAMI,WAAW,CAAE,IANjB,CAOI,QAAQ,CAAE,IAPd,CAQI,OAAO,CAAE,KARb,CASI,YAAY,CAAE,IATlB,CAUI,UAAU,CAAE,KAVhB,CAWI,iBAAiB,CAAE,IAXvB,CAYI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWO,aAAX,CAAyBD,KAAzB,CAAgC,cAAhC,CAAX,EAZd,EADJ,CAjBJ,cAiCI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,qBAAe,oBAAC,YAAD,EACX,KAAK,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mCAAN,CAA9B,CADI,CAEX,IAAI,CAAC,QAFM,CAGX,IAAI,CAAE,eAHK,CAIX,QAAQ,CAAE,kBAACG,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWS,eAAX,CAA2BH,KAA3B,CAAX,EAJC,CAKX,WAAW,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CALF,CAMX,YAAY,CAAE,KAAKH,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,IAA+C,CAA/C,CAAmD,IAAnD,CAA0D,KAAtF,CAA8F,KAC5G;AACA;AARW,CASX,OAAO,CAAE,KAAKL,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,IAA+C,CAA/C,CAAmD,IAAnD,CAA0D,KAAtF,CAA8F,KAT5F,EAAf,CADJ,cAYI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,qBAAe,oBAAC,YAAD,EACX,KAAK,CAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,4BAAN,CAA9B,CADI,CAEX,IAAI,CAAC,QAFM,CAGX,IAAI,CAAE,eAHK,CAIX,QAAQ,CAAE,kBAACG,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWS,eAAX,CAA2BH,KAA3B,CAAX,EAJC,CAKX,WAAW,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CALF,CAMX,YAAY,CAAE,KAAKH,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,IAA+C,CAA/C,CAAmD,IAAnD,CAA0D,KAAtF,CAA8F,KAC5G;AACA;AARW,CASX,OAAO,CAAE,KAAKL,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,IAA+C,CAA/C,CAAmD,IAAnD,CAA0D,KAAtF,CAA8F,KAT5F,EAAf,CAZJ,CADJ,CAjCJ,CAkEK,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,IAA+C,CAA/C,cACG,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,KAAK,CAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CADX,CAEI,IAAI,CAAC,QAFT,CAGI,IAAI,CAAE,qBAHV,CAII,QAAQ,CAAE,kBAACG,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWS,eAAX,CAA2BH,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CALjB,CAMI,YAAY,CAAE,KAAKH,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,qBAA1B,IAAqD,CAArD,CAAyD,IAAzD,CAAgE,KAA5F,CAAoG,KAClH;AACA;AARJ,CASI,OAAO,CAAE,KAAKL,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,qBAA1B,IAAqD,CAArD,CAAyD,IAAzD,CAAgE,KAA5F,CAAoG,KATjH,EADJ,CADJ,CAcK,KAAKL,KAAL,CAAWK,cAAX,CAA0B,qBAA1B,IAAqD,CAArD,eACG,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,eADV,CAEI,SAAS,CAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CAFf,CAGI,WAAW,CAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAHjB,CAII,OAAO,CAAE,KAAKH,KAAL,CAAWU,QAAX,EAAuB,EAJpC,CAKI,KAAK,CAAE,KAAKV,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,eAA1B,CAA5B,CAAyE,EALpF,CAMI,WAAW,CAAE,IANjB,CAOI,QAAQ,CAAE,IAPd,CAQI,OAAO,CAAE,KARb,CASI,YAAY,CAAE,IATlB,CAUI,UAAU,CAAE,KAVhB,CAWI,iBAAiB,CAAE,IAXvB,CAYI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWO,aAAX,CAAyBD,KAAzB,CAAgC,eAAhC,CAAX,EAZd,EADJ,CAfR,CADH,CAoCK,EAtGV,cAuGI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,KAAK,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CADX,CAEI,IAAI,CAAC,QAFT,CAGI,IAAI,CAAE,oBAHV,CAII,QAAQ,CAAE,kBAACG,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWS,eAAX,CAA2BH,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CALjB,CAMI,YAAY,CAAE,KAAKH,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,oBAA1B,IAAoD,CAApD,CAAwD,IAAxD,CAA+D,KAA3F,CAAmG,KACjH;AACA;AARJ,CASI,OAAO,CAAE,KAAKL,KAAL,CAAWK,cAAX,CAA4B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,oBAA1B,IAAoD,CAApD,CAAwD,IAAxD,CAA+D,KAA3F,CAAmG,KAThH,EADJ,CAvGJ,CAoHK,KAAKL,KAAL,CAAWK,cAAX,EAA6B,KAAKL,KAAL,CAAWK,cAAX,CAA0B,oBAA1B,IAAoD,CAAjF,cACG,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,2BAAK,SAAS,CAAC,gBAAf,eACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,aAAf,CAA6B,SAAS,CAAC,aAAc;AAArD,CACI,OAAO,CAAE,yBAAM,CAAA,KAAI,CAACL,KAAL,CAAWW,eAAX,EAAN,EADb,eAGI,oBAAC,eAAD,EAAiB,IAAI,CAAEjB,MAAvB,EAHJ,kBAII,oBAAC,gBAAD,EAAkB,EAAE,CAAC,2BAArB,CAAiD,cAAc,CAAE,KAAKM,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,2BAAN,CAA9B,CAAjE,EAJJ,CADJ,CADJ,CADJ,CADH,cAYY,wCAhIjB,cAiIK,oBAAC,YAAD,EAAc,SAAS,CAAC,oBAAxB,eACG,oBAAC,WAAD,EAAa,SAAS,CAAC,WAAvB,eACI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,mCAAvB,EACK,KAAKH,KAAL,CAAWK,cAAX,CAA0BO,cAA1B,CAA2C,KAAKZ,KAAL,CAAWK,cAAX,CAA0BO,cAA1B,CAAyCC,GAAzC,CAA6C,SAACC,KAAD,CAAQC,CAAR,qBACrF,oBAAC,WAAD,EAAa,GAAG,CAAEA,CAAlB,CAAqB,SAAS,CAAC,sCAA/B,eACI,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,CAA4B,KAAK,CAAE,CAAEC,KAAK,CAAE,CAACD,CAAC,CAAG,CAAL,EAAU,EAAnB,CAAnC,MADJ,cAEI,oBAAC,SAAD,EAAW,EAAE,CAAEA,CAAf,CAAkB,KAAK,CAAE,KAAI,CAACf,KAAL,CAAWK,cAAX,CAA0BY,UAAnD,CACI,SAAS,CAAC,kBADd,MAFJ,cAKI,oBAAC,SAAD,EAAW,SAAS,CAAC,aAArB,CAAmC,EAAE,CAAE,CAAvC,EAA2C,KAAI,CAACjB,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAA3C,KAAgGY,CAAC,CAAG,CAApG,CALJ,cAMI,oBAAC,WAAD,EAAa,KAAK,CAAE,CAAEG,UAAU,CAAE,CAACH,CAAC,CAAG,CAAL,EAAU,EAAxB,CAApB,eACI,oBAAC,SAAD,EAAW,SAAS,CAAC,cAArB,CAAoC,KAAK,CAAED,KAAK,CAACK,UAAjD,CAA6D,EAAE,CAAC,WAAhE,CAA4E,IAAI,CAAC,MAAjF,EADJ,CANJ,CADqF,EAA7C,CAA3C,CAWG,EAZR,CADJ,CADJ,CADH,CAjIL,CADJ,CADJ,CA4JH,C,gCAlK4BlC,KAAK,CAACmC,S,EAoKvC,cAAe9B,CAAAA,UAAU,CAACS,kBAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Col, Nav, Row } from \"react-bootstrap\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\r\nimport { ContentPanel, ListWrapper } from './../userroletemplate/userroletemplate.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nclass AddBarcodeTemplate extends React.Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"nformcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTSCREEN\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.qualisList || []}\r\n                            value={this.props.selectedRecord ? this.props.selectedRecord[\"nformcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboChange(event, \"nformcode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"ncontrolcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTSCREENCONTROL\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.controlList || []}\r\n                            value={this.props.selectedRecord[\"ncontrolcode\"] ? this.props.selectedRecord[\"ncontrolcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboChange(event, \"ncontrolcode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Row>\r\n                            <Col md={6}>   <CustomSwitch\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\" })}\r\n                                type=\"switch\"\r\n                                name={\"nbarcodeprint\"}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false}\r\n                                // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                //  required={this.props.extractedColumnList[2].mandatory}\r\n                                checked={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false}\r\n                            /></Col>\r\n                            <Col md={6}>   <CustomSwitch\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_QUERYBASEDPRINTBARCODE\" })}\r\n                                type=\"switch\"\r\n                                name={\"nsqlqueryneed\"}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false}\r\n                                // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                //  required={this.props.extractedColumnList[2].mandatory}\r\n                                checked={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false}\r\n                            /></Col>\r\n\r\n                        </Row>\r\n\r\n                    </Col>\r\n                    {/* <Col md={12}>\r\n                     \r\n                    </Col> */}\r\n\r\n\r\n                    {this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ?\r\n                        <>\r\n                            <Col md={12}>\r\n                                <CustomSwitch\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_FILTERBASEDSQLQUERY\" })}\r\n                                    type=\"switch\"\r\n                                    name={\"nfiltersqlqueryneed\"}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false}\r\n                                    // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                    //  required={this.props.extractedColumnList[2].mandatory}\r\n                                    checked={this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false}\r\n                                />\r\n                            </Col>\r\n                            {this.props.selectedRecord[\"nfiltersqlqueryneed\"] !== 3 &&\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsqlquerycode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTQUERY\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={this.props.SqlQuery || []}\r\n                                        value={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => this.props.onComboChange(event, \"nsqlquerycode\")}\r\n                                    />\r\n                                </Col>\r\n                            }\r\n\r\n\r\n                        </>\r\n                        : \"\"}\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_NEEDSCREENFILTER\" })}\r\n                            type=\"switch\"\r\n                            name={\"nneedconfiguration\"}\r\n                            onChange={(event) => this.props.onInputOnChange(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                            defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false}\r\n                            // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                            //  required={this.props.extractedColumnList[2].mandatory}\r\n                            checked={this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false}\r\n                        />\r\n                    </Col>\r\n                    {this.props.selectedRecord && this.props.selectedRecord[\"nneedconfiguration\"] === 3 ?\r\n                        <Col md={12}>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link name=\"addMaterial\" className=\"add-txt-btn\" //hidden={props.userRoleControlRights.indexOf(addMaterialId) === -1}\r\n                                        onClick={() => this.props.AddFilterDesign()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_ADDSCREENFILTERDESIGN\" defaultMessage={this.props.intl.formatMessage({ id: \"IDS_ADDSCREENFILTERDESIGN\" })} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                        </Col> : <></>}\r\n                    {<ContentPanel className=\"panel-main-content\">\r\n                        <ListWrapper className=\"card-body\">\r\n                            <React.Fragment>\r\n                                <ListWrapper className=\"tree-view1 border-left tree-left \">\r\n                                    {this.props.selectedRecord.lstFilterlevel ? this.props.selectedRecord.lstFilterlevel.map((input, i) =>\r\n                                        <ListWrapper key={i} className=\"form-label-group tree-level list_get\">\r\n                                            <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                            <NavHeader id={i} value={this.props.selectedRecord.totalLevel}\r\n                                                className=\"add_field_button\">+</NavHeader>\r\n                                            {/* <NavHeader className=\"levelcolour\" md={1}>Level {i + 1}</NavHeader>  */}\r\n                                            <NavHeader className=\"levelcolour\" md={1}>{this.props.intl.formatMessage({ id: \"IDS_LEVEL\" })} {i + 1}</NavHeader>\r\n                                            <ListWrapper style={{ marginLeft: (i + 8) * 10 }}>\r\n                                                <FormInput className=\"input_custom\" value={input.slabelname} id=\"levelname\" type=\"text\" />\r\n                                            </ListWrapper>\r\n                                        </ListWrapper>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </ListWrapper>\r\n                            </React.Fragment>\r\n                        </ListWrapper>\r\n                    </ContentPanel>}\r\n                </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(AddBarcodeTemplate);"]},"metadata":{},"sourceType":"module"}