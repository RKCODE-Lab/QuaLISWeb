{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\DynamicFieldProperties.jsx\";\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Row, Col, FormLabel, InputGroup, Form, Nav } from 'react-bootstrap'; //import FormInput from '../../components/form-input/form-input.component';\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\n\nimport { injectIntl } from 'react-intl';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { ReactComponents, FontSizeProperty } from '../../components/Enumeration';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormMultiSelect from '../form-multi-select/form-multi-select.component'; // import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\nimport TagInput from '../react-tag-input/react-tag-input.component';\n\nconst DynamicFieldProperties = props => {\n  const acceptOptions = [{\n    label: \"All Files\",\n    value: \"*.*\"\n  }, {\n    label: \"PDF\",\n    value: \".pdf\"\n  }, {\n    label: \"Images\",\n    value: \"image/*\"\n  }, {\n    label: \"Excel/CSV\",\n    value: \".xlsx, .xls, .csv\"\n  }]; //ALPD-4466 - Label Component - L.Subashini\n\n  let minFontSize = props.selectedFieldRecord && props.selectedFieldRecord.properties ? props.selectedFieldRecord.properties.minfontsize : FontSizeProperty.FONTSIZE_10;\n  let maxFontSize = props.selectedFieldRecord && props.selectedFieldRecord.properties ? props.selectedFieldRecord.properties.maxfontsize : FontSizeProperty.FONTSIZE_25; // Below code will be used if the label component uses FormSelectSearch component instead\n  // of NumericInputComponent for defining font size\n  // const fontSizeArray = [];\n  // for (let i = minFontSize; i <= maxFontSize; i++) {    \n  //     fontSizeArray.push({label:i, value:i});\n  // }\n\n  return Object.keys(props.selectedFieldRecord).length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    className: \"j-s-b--flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    className: \"floating-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_INPUTTYPE\"\n  }), \" : \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 103\n    }\n  }, props.selectedFieldRecord.componentname)), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_LABELID\"\n    }),\n    name: \"label\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LABELID\"\n    }),\n    value: props.selectedFieldRecord[\"label\"] ? props.selectedFieldRecord[\"label\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    className: \"p-0 icon-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addsynonym\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_ADDSYNONYMN\"\n    }) // data-for=\"tooltip_list_wrap\"\n    // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n    ,\n    className: \"btn btn-circle mg-t-1 outline-grey mr-2\",\n    onClick: e => props.addSynonym(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MANDATORY\"\n    }),\n    type: \"switch\",\n    name: \"mandatory\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"mandatory\"],\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"mandatory\"],\n    disabled: props.selectedFieldRecord[\"templatemandatory\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, !props.selectedFieldRecord.templatemandatory && props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_EXPORT\"\n    }),\n    type: \"switch\",\n    name: \"isExportField\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"isExportField\"],\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"isExportField\"],\n    disabled: props.selectedFieldRecord[\"templatemandatory\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_UNIQUE\"\n    }),\n    type: \"switch\",\n    name: \"unique\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) //defaultValue={props.selectedFieldRecord[\"unique\"]}\n    ,\n    defaultValue: props.selectedFieldRecord[\"mandatory\"] === false || props.selectedFieldRecord[\"mandatory\"] === undefined ? false : props.selectedFieldRecord[\"unique\"],\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"mandatory\"] === false || props.selectedFieldRecord[\"mandatory\"] === undefined ? false : props.selectedFieldRecord[\"unique\"] //   isMandatory={false}\n    //     required={true}\n    //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\n    //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT // ||props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA\n  && (!props.selectedFieldRecord[\"readonly\"] || props.selectedFieldRecord[\"readonly\"] && props.selectedFieldRecord[\"iseditablereadonly\"]) && !props.selectedFieldRecord['isnumeric'] ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_STARTNOSPLCHAR\"\n    }),\n    type: \"switch\",\n    name: \"startnospecialcharacter\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) //defaultValue={props.selectedFieldRecord[\"unique\"]}\n    ,\n    defaultValue: props.selectedFieldRecord[\"startnospecialcharacter\"] || false,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"startnospecialcharacter\"] || false //   isMandatory={false}\n    //     required={true}\n    //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\n    //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_READONLY\"\n    }),\n    type: \"switch\",\n    name: \"readonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) // defaultValue={props.selectedFieldRecord[\"readonly\"]}\n    ,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"readonly\"] === undefined ? false : props.selectedFieldRecord[\"readonly\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord[\"readonly\"] ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ISEDITABLE\"\n    }),\n    type: \"switch\",\n    name: \"iseditablereadonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) //defaultValue={props.selectedFieldRecord[\"unique\"]}\n    ,\n    defaultValue: props.selectedFieldRecord[\"iseditablereadonly\"] || false,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"iseditablereadonly\"] || false //   isMandatory={false}\n    //     required={true}\n    //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\n    //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_RECORDBASEDREADONLY\"\n    }),\n    type: \"switch\",\n    name: \"recordbasedreadonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event, \"recordbasedreadonly\"),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"recordbasedreadonly\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedreadonly\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_RECORDBASEDSHOWHIDE\"\n    }),\n    type: \"switch\",\n    name: \"recordbasedshowhide\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event, \"recordbasedshowhide\"),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"recordbasedshowhide\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedshowhide\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }) : \"\"), props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL && props.selectedFieldRecord.componentcode !== ReactComponents.FILE && props.selectedFieldRecord.table && props.selectedFieldRecord.table.item.masterAdd ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDMASTER\"\n    }),\n    type: \"switch\",\n    name: \"isAddMaster\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"isAddMaster\"] === undefined ? false : props.selectedFieldRecord[\"isAddMaster\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_EDITMASTER\"\n    }),\n    type: \"switch\",\n    name: \"isEditMaster\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"isEditMaster\"] === undefined ? false : props.selectedFieldRecord[\"isEditMaster\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }))) : \"\", (props.selectedFieldRecord.componentcode === ReactComponents.COMBO || props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT) && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AUTOFOCUS\"\n    }),\n    type: \"switch\",\n    name: \"autoFocus\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"autoFocus\"] === undefined ? false : props.selectedFieldRecord[\"autoFocus\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  })), props.selectedFieldRecord.componentcode === ReactComponents.COMBO && props.selectedFieldRecord.table && props.selectedFieldRecord.table.item.nquerybuildertablecode === 222 ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_VIEW\"\n    }),\n    type: \"switch\",\n    name: \"isView\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"isView\"] === undefined ? false : props.selectedFieldRecord[\"isView\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  })) : \"\", (props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT || props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA) && (!props.selectedFieldRecord[\"readonly\"] || props.selectedFieldRecord[\"readonly\"] && props.selectedFieldRecord[\"iseditablereadonly\"]) && !props.selectedFieldRecord['isnumeric'] ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXLENGTH\"\n    }),\n    name: \"sfieldlength\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXLENGTH\"\n    }),\n    value: props.selectedFieldRecord[\"sfieldlength\"] ? props.selectedFieldRecord[\"sfieldlength\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }), \" \") : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode === ReactComponents.COMBO || props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER || props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SOURCE\"\n    }),\n    isSearchable: true,\n    name: \"source\",\n    isDisabled: props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.tables,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"table\"] ? props.selectedFieldRecord[\"table\"] : \"\",\n    onChange: value => props.onComboChange(value, \"table\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }), props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER || props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FILTERFIELDS\"\n    }),\n    isSearchable: true,\n    name: \"filterfields\",\n    isDisabled: props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    optionId: \"value\",\n    optionValue: \"label\",\n    isMandatory: true,\n    isClearable: true,\n    disableSearch: false,\n    disabled: false,\n    closeMenuOnSelect: false,\n    options: props.tableColumn || [],\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"customsearchfilter\"] ? props.selectedFieldRecord[\"customsearchfilter\"] : [],\n    onChange: value => props.onComboChange(value, \"customsearchfilter\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 37\n    }\n  }), props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER || props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_RECORDBASEDREADONLY\"\n    }),\n    type: \"switch\",\n    name: \"recordbasedreadonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event, 'recordbasedreadonly'),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"recordbasedreadonly\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedreadonly\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_RECORDBASEDSHOWHIDE\"\n    }),\n    type: \"switch\",\n    name: \"recordbasedshowhide\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event, \"recordbasedshowhide\"),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"recordbasedshowhide\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedshowhide\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 49\n    }\n  })), props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER // &&\n  //  props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\n  && props.selectedFieldRecord.table && props.selectedFieldRecord.table.item.masterAdd ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDMASTER\"\n    }),\n    type: \"switch\",\n    name: \"isAddMaster\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event, \"isAddMaster\"),\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"isAddMaster\"] === undefined ? false : props.selectedFieldRecord[\"isAddMaster\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 53\n    }\n  })) : \"\") : \"\") : /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISPLAYMEMBER\"\n    }),\n    isSearchable: true,\n    name: \"displaymember\",\n    isDisabled: props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.tableColumn,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"column\"] ? props.selectedFieldRecord[\"column\"] : \"\",\n    onChange: value => props.onComboChange(value, \"column\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 35\n    }\n  })) : \"\", props.selectedFieldRecord.componentcode === ReactComponents.NUMERIC || props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT && props.selectedFieldRecord.isnumeric ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PRECISION\"\n    }),\n    name: \"precision\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PRECISION\"\n    }),\n    value: props.selectedFieldRecord[\"precision\"] ? props.selectedFieldRecord[\"precision\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MINVALUE\"\n    }),\n    name: \"min\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MINVALUE\"\n    }),\n    value: props.selectedFieldRecord[\"min\"] ? props.selectedFieldRecord[\"min\"] : \"\",\n    isMandatory: props.selectedFieldRecord.isnumeric ? true : false,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXVALUE\"\n    }),\n    name: \"max\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXVALUE\"\n    }),\n    value: props.selectedFieldRecord[\"max\"] ? props.selectedFieldRecord[\"max\"] : \"\",\n    isMandatory: props.selectedFieldRecord.isnumeric ? true : false,\n    required: true,\n    maxLength: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  })) : \"\", props.selectedFieldRecord.componentcode === ReactComponents.COMBO && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"child\",\n    as: \"select\",\n    onChange: event => props.onComboChange(event, 'childValue'),\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PARENTCOMPONENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    options: props.inputFields.filter(x => x.inputtype !== 'radio'),\n    value: props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : [],\n    isMulti: false,\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 29\n    }\n  }), props.selectedFieldRecord.childValue && props.valueMembers.length > 1 && /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_VALUEMEMBER\"\n    }),\n    isSearchable: true,\n    name: \"valuemember\" // isDisabled={props.selectedFieldRecord.templatemandatory}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.valueMembers,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"valuecolumn\"] ? props.selectedFieldRecord[\"valuecolumn\"] : \"\",\n    onChange: value => props.onComboChange(value, \"valuecolumn\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 33\n    }\n  })), props.selectedFieldRecord[\"recordbasedreadonly\"] || props.selectedFieldRecord[\"recordbasedshowhide\"] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"radioparent\",\n    as: \"select\",\n    onChange: event => props.onComboChange(event, 'radioparent'),\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PARENTMULTIPLECHOICECONTROL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.selectedFieldRecord[\"recordbasedreadonly\"] || props.selectedFieldRecord[\"recordbasedshowhide\"] ? props.inputFields.filter(x => x.inputtype === 'radio') : props.inputFields,\n    value: props.selectedFieldRecord.radioparent ? props.selectedFieldRecord.radioparent : [],\n    isMulti: false,\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MULTIPLECHOICEVALUE\"\n    }),\n    isSearchable: true,\n    name: \"displaymember\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.parentRadioValue,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"selectedrecordbasedhide\"] ? props.selectedFieldRecord[\"selectedrecordbasedhide\"] : \"\",\n    onChange: value => props.onComboChange(value, \"selectedrecordbasedhide\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 33\n    }\n  })) : props.selectedFieldRecord[\"recordbasedreadonly\"] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"child\",\n    as: \"select\",\n    onChange: event => props.onComboChange(event, 'childValue'),\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PARENTMULTIPLECHOICECONTROL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER && props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER ? props.inputFields : props.selectedFieldRecord[\"recordbasedreadonly\"] ? props.inputFields.filter(x => x.inputtype === 'radio') : props.inputFields,\n    value: props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : [],\n    isMulti: false,\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MULTIPLECHOICEVALUE\"\n    }),\n    isSearchable: true,\n    name: \"displaymember\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.parentRadioValue,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"selectedrecordbasedhide\"] ? props.selectedFieldRecord[\"selectedrecordbasedhide\"] : \"\",\n    onChange: value => props.onComboChange(value, \"selectedrecordbasedhide\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  })) : \"\"), (props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA || props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT || props.selectedFieldRecord.componentcode === ReactComponents.NUMERIC || props.selectedFieldRecord.componentcode === ReactComponents.EMAIL || props.selectedFieldRecord.componentcode === ReactComponents.DATE) && props.selectedFieldRecord[\"readonly\"] ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"child\",\n    as: \"select\",\n    onChange: event => props.onComboChange(event, 'childValue'),\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PARENTCOMPONENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.inputFields.filter(x => x.inputtype !== 'radio'),\n    value: props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : [],\n    isMulti: false,\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISPLAYMEMBER\"\n    }),\n    isSearchable: true,\n    name: \"displaymember\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.tableColumn,\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"column\"] ? props.selectedFieldRecord[\"column\"] : \"\",\n    onChange: value => props.onComboChange(value, \"column\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 29\n    }\n  })) : \"\", props.selectedFieldRecord.componentcode === ReactComponents.DATE && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEONLY\"\n    }),\n    type: \"switch\",\n    name: \"dateonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"dateonly\"],\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"dateonly\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TIMEONLY\"\n    }),\n    type: \"switch\",\n    name: \"timeonly\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) // defaultValue={props.selectedFieldRecord[\"readonly\"]}\n    ,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"timeonly\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NEEDTIMEZONE\"\n    }),\n    type: \"switch\",\n    name: \"timezone\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event) // defaultValue={props.selectedFieldRecord[\"readonly\"]}\n    ,\n    isMandatory: false,\n    required: true,\n    checked: props.selectedFieldRecord[\"timezone\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    type: \"checkbox\",\n    name: 'loadcurrentdate',\n    label: props.intl.formatMessage({\n      id: \"IDS_LOADCURRENTDATE\"\n    }),\n    onChange: event => props.onInputOnChange(event),\n    id: \"loadcurrentdate\",\n    checked: props.selectedFieldRecord[\"loadcurrentdate\"] // isMandatory={control.mandatory}\n    // required={control.mandatory}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode === ReactComponents.RADIO || props.selectedFieldRecord.componentcode === ReactComponents.CHECKBOX || props.selectedFieldRecord.componentcode === ReactComponents.PREDEFINEDDROPDOWN ? /*#__PURE__*/React.createElement(TagInput, {\n    tags: props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags : [] // tags={tags}\n    ,\n    addTag: props.addTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 25\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 17\n    }\n  }, props.selectedFieldRecord.componentcode === ReactComponents.RADIO || props.selectedFieldRecord.componentcode === ReactComponents.PREDEFINEDDROPDOWN ? /*#__PURE__*/React.createElement(FormSelectSearch //formLabel={props.intl.formatMessage({ id: \"IDS_SELECTDEFAULTVALUES\" })}\n  , {\n    isSearchable: true,\n    name: \"radiodefaultvalue\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTDEFAULTVALUES\"\n    }) // isMandatory={true}\n    ,\n    isClearable: false,\n    isMulti: false,\n    options: props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags.map(x => {\n      return {\n        label: x.text,\n        value: x.text\n      };\n    }) : [],\n    value: props.selectedFieldRecord && props.selectedFieldRecord[\"radiodefaultvalue\"] ? props.selectedFieldRecord[\"radiodefaultvalue\"] : \"\",\n    onChange: value => props.onComboChange(value, \"radiodefaultvalue\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 25\n    }\n  }) : props.selectedFieldRecord.componentcode === ReactComponents.CHECKBOX ? /*#__PURE__*/React.createElement(FormMultiSelect, {\n    name: \"radiodefaultvalue\",\n    optionId: \"label\",\n    optionValue: \"value\" // label={ props.intl.formatMessage({ id:\"IDS_SCREENRIGHTS\" })}                              \n    ,\n    options: props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags.map(x => {\n      return {\n        label: x.text,\n        value: x.text\n      };\n    }) : [],\n    value: props.selectedFieldRecord[\"radiodefaultvalue\"] ? props.selectedFieldRecord[\"radiodefaultvalue\"] : [] //isMandatory={true}\n    ,\n    isClearable: true,\n    disableSearch: false,\n    disabled: false,\n    closeMenuOnSelect: false,\n    alphabeticalSort: true,\n    allItemSelectedLabel: props.intl.formatMessage({\n      id: \"IDS_ALLITEMSAREMSELECTED\"\n    }),\n    noOptionsLabel: props.intl.formatMessage({\n      id: \"IDS_NOOPTION\"\n    }),\n    searchLabel: props.intl.formatMessage({\n      id: \"IDS_SEARCH\"\n    }),\n    selectAllLabel: props.intl.formatMessage({\n      id: \"IDS_SELECTALL\"\n    }),\n    onChange: event => props.onComboChange(event, \"radiodefaultvaluemulti\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTDEFAULTVALUES\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 29\n    }\n  }) : \"\"), props.selectedFieldRecord.componentcode === ReactComponents.FILE && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"accept\",\n    as: \"select\",\n    onChange: event => props.onComboChange(event, 'accept'),\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FILETYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: acceptOptions,\n    defaultValue: acceptOptions[0],\n    value: props.selectedFieldRecord.accept ? props.selectedFieldRecord.accept : [],\n    isMulti: false,\n    isDisabled: false,\n    isSearchable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 25\n    }\n  })), props.selectedFieldRecord.componentcode === ReactComponents.LABEL ?\n  /*#__PURE__*/\n\n  /**ALPD-4466 - Label Component Start - L.Subashini**/\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FONTSIZE\"\n    }),\n    name: \"sfontsize\",\n    type: \"number\",\n    onChange: event => props.onChangeNumericInput(event, 'sfontsize'),\n    precision: 0,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FONTSIZE\"\n    }),\n    value: props.selectedFieldRecord[\"sfontsize\"] ? props.selectedFieldRecord[\"sfontsize\"] : \"\",\n    isMandatory: true,\n    required: true,\n    strict: true,\n    min: minFontSize,\n    max: maxFontSize,\n    addPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_BOLD\"\n    }),\n    type: \"switch\",\n    name: \"bold\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"bold\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"bold\"],\n    disabled: props.selectedFieldRecord[\"templatemandatory\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ITALIC\"\n    }),\n    type: \"switch\",\n    name: \"italic\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"italic\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"italic\"],\n    disabled: props.selectedFieldRecord[\"templatemandatory\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_UNDERLINE\"\n    }),\n    type: \"switch\",\n    name: \"underline\",\n    parentClassName: \"d-flex align-items-center inline-custom-switch\",\n    onChange: event => props.onInputOnChange(event),\n    defaultValue: props.selectedFieldRecord[\"underline\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"underline\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 29\n    }\n  }))) : \"\"\n  /**ALPD-4466 - Label Component End - L.Subashini**/\n  ) : \"\";\n};\n\nexport default injectIntl(DynamicFieldProperties);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/components/droparea/DynamicFieldProperties.jsx"],"names":["faLanguage","FontAwesomeIcon","React","Row","Col","FormLabel","InputGroup","Form","Nav","injectIntl","CustomSwitch","ReactComponents","FontSizeProperty","FormInput","FormNumericInput","FormMultiSelect","FormSelectSearch","TagInput","DynamicFieldProperties","props","acceptOptions","label","value","minFontSize","selectedFieldRecord","properties","minfontsize","FONTSIZE_10","maxFontSize","maxfontsize","FONTSIZE_25","Object","keys","length","intl","formatMessage","id","componentname","event","onInputOnChange","e","addSynonym","componentcode","FRONTENDSEARCHFILTER","BACKENDSEARCHFILTER","LABEL","templatemandatory","FILE","undefined","TEXTINPUT","table","item","masterAdd","COMBO","nquerybuildertablecode","TEXTAREA","onNumericInputChange","predefined","tables","onComboChange","tableColumn","NUMERIC","isnumeric","inputFields","filter","x","inputtype","childValue","valueMembers","radioparent","parentRadioValue","EMAIL","DATE","RADIO","CHECKBOX","PREDEFINEDDROPDOWN","radioOptions","tags","addTag","map","text","accept","onChangeNumericInput"],"mappings":"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","sourcesContent":["import { faLanguage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport { Row, Col, FormLabel, InputGroup, Form, Nav } from 'react-bootstrap';\r\n//import FormInput from '../../components/form-input/form-input.component';\r\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ReactComponents, FontSizeProperty} from '../../components/Enumeration';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormMultiSelect from '../form-multi-select/form-multi-select.component';\r\n// import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport TagInput from '../react-tag-input/react-tag-input.component';\r\n\r\nconst DynamicFieldProperties = (props) => {\r\n    const acceptOptions = [{ label: \"All Files\", value: \"*.*\" }, { label: \"PDF\", value: \".pdf\" }, { label: \"Images\", value: \"image/*\" }, { label: \"Excel/CSV\", value: \".xlsx, .xls, .csv\" }]\r\n    \r\n  \r\n    //ALPD-4466 - Label Component - L.Subashini\r\n    let minFontSize = props.selectedFieldRecord && props.selectedFieldRecord.properties ?\r\n                       props.selectedFieldRecord.properties.minfontsize :FontSizeProperty.FONTSIZE_10;\r\n\r\n    let maxFontSize = props.selectedFieldRecord && props.selectedFieldRecord.properties ?\r\n                       props.selectedFieldRecord.properties.maxfontsize :FontSizeProperty.FONTSIZE_25;\r\n    \r\n    // Below code will be used if the label component uses FormSelectSearch component instead\r\n    // of NumericInputComponent for defining font size\r\n    // const fontSizeArray = [];\r\n    // for (let i = minFontSize; i <= maxFontSize; i++) {    \r\n    //     fontSizeArray.push({label:i, value:i});\r\n    // }\r\n\r\n    return (\r\n        Object.keys(props.selectedFieldRecord).length > 0 ?\r\n            <Row className='j-s-b--flex'>\r\n                <Col md={9} className=\"floating-margin\">\r\n\r\n                    <FormLabel className=\"mb-3\">{props.intl.formatMessage({ id: \"IDS_INPUTTYPE\" })} : <strong>{props.selectedFieldRecord.componentname}</strong></FormLabel>\r\n\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_LABELID\" })}\r\n                        name={\"label\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_LABELID\" })}\r\n                        value={props.selectedFieldRecord[\"label\"] ? props.selectedFieldRecord[\"label\"] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n                </Col>\r\n                <Col md={3} className=\"p-0 icon-wrap\">\r\n                    <Nav.Link name=\"addsynonym\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_ADDSYNONYMN\" })}\r\n                        // data-for=\"tooltip_list_wrap\"\r\n                        // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                        className=\"btn btn-circle mg-t-1 outline-grey mr-2\"\r\n                        onClick={(e) => props.addSynonym()}\r\n                    >\r\n                        <FontAwesomeIcon icon={faLanguage} />\r\n                    </Nav.Link>\r\n                </Col>\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_MANDATORY\" })}\r\n                            type=\"switch\"\r\n                            name={\"mandatory\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            defaultValue={props.selectedFieldRecord[\"mandatory\"]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"mandatory\"]}\r\n                            disabled={props.selectedFieldRecord[\"templatemandatory\"]}\r\n                        /> : \"\"}\r\n                </Col>\r\n                <Col md={12}>\r\n                    { !props.selectedFieldRecord.templatemandatory &&\r\n                     props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_EXPORT\" })}\r\n                            type=\"switch\"\r\n                            name={\"isExportField\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            defaultValue={props.selectedFieldRecord[\"isExportField\"]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"isExportField\"]}\r\n                            disabled={props.selectedFieldRecord[\"templatemandatory\"]}\r\n                        /> : \"\"}\r\n                </Col>\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.FILE\r\n                        ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_UNIQUE\" })}\r\n                            type=\"switch\"\r\n                            name={\"unique\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //defaultValue={props.selectedFieldRecord[\"unique\"]}\r\n                            defaultValue={(props.selectedFieldRecord[\"mandatory\"] === false||props.selectedFieldRecord[\"mandatory\"] === undefined ) ? false :props.selectedFieldRecord[\"unique\"]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={(props.selectedFieldRecord[\"mandatory\"] === false||props.selectedFieldRecord[\"mandatory\"] === undefined ) ? false : props.selectedFieldRecord[\"unique\"]}\r\n                         //   isMandatory={false}\r\n                       //     required={true}\r\n                        //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\r\n                        //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\r\n                        /> : \"\"}\r\n                </Col>\r\n                <Col md={12}>\r\n                    {((props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT \r\n                    // ||props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA\r\n                    )\r\n                    && (!props.selectedFieldRecord[\"readonly\"] \r\n                        || (props.selectedFieldRecord[\"readonly\"] && props.selectedFieldRecord[\"iseditablereadonly\"]))  \r\n                    && !props.selectedFieldRecord['isnumeric'])\r\n                    ?\r\n                    <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_STARTNOSPLCHAR\" })}\r\n                            type=\"switch\"\r\n                            name={\"startnospecialcharacter\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //defaultValue={props.selectedFieldRecord[\"unique\"]}\r\n                            defaultValue={ props.selectedFieldRecord[\"startnospecialcharacter\"] || false }\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={ props.selectedFieldRecord[\"startnospecialcharacter\"] || false}\r\n                         //   isMandatory={false}\r\n                       //     required={true}\r\n                        //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\r\n                        //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\r\n                        />: \"\"\r\n                    }\r\n                </Col>\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL \r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.FILE?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_READONLY\" })}\r\n                            type=\"switch\"\r\n                            name={\"readonly\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"readonly\"] === undefined ? false : props.selectedFieldRecord[\"readonly\"]}\r\n                        /> : \"\"}\r\n                </Col>\r\n                <Col md={12}>\r\n                    { props.selectedFieldRecord[\"readonly\"]  \r\n                    ?\r\n                    <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_ISEDITABLE\" })}\r\n                            type=\"switch\"\r\n                            name={\"iseditablereadonly\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //defaultValue={props.selectedFieldRecord[\"unique\"]}\r\n                            defaultValue={ props.selectedFieldRecord[\"iseditablereadonly\"] || false }\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={ props.selectedFieldRecord[\"iseditablereadonly\"] || false}\r\n                         //   isMandatory={false}\r\n                       //     required={true}\r\n                        //    checked={props.selectedFieldRecord[\"mandatory\"] === false ? false : props.selectedFieldRecord[\"unique\"]}\r\n                        //disabled={props.selectedFieldRecord[\"mandatory\"] === true ? false : true}\r\n                        />: \"\"\r\n                    }\r\n                </Col>\r\n                {/* <Col md={12}>\r\n                    {props.selectedFieldRecord.inputtype ===\"textinput\" &&\r\n                    props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_NUMERICONLY\" })}\r\n                            type=\"switch\"\r\n                            name={\"isnumeric\"}\r\n                            parentClassName= {\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                           // defaultValue={props.selectedFieldRecord[\"mandatory\"]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"isnumeric\"]}\r\n                           // disabled={props.selectedFieldRecord[\"templatemandatory\"]}\r\n                        /> : \"\"}\r\n                </Col> */}\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER \r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL \r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_RECORDBASEDREADONLY\" })}\r\n                            type=\"switch\"\r\n                            name={\"recordbasedreadonly\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event, \"recordbasedreadonly\")}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"recordbasedreadonly\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedreadonly\"]}\r\n                        />\r\n\r\n                        : \"\"}\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL \r\n                        && props.selectedFieldRecord.componentcode !== ReactComponents.FILE ?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_RECORDBASEDSHOWHIDE\" })}\r\n                            type=\"switch\"\r\n                            name={\"recordbasedshowhide\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event, \"recordbasedshowhide\")}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"recordbasedshowhide\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedshowhide\"]}\r\n                        />\r\n\r\n                        : \"\"}\r\n                </Col>\r\n\r\n                {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                    props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                    && props.selectedFieldRecord.componentcode !== ReactComponents.LABEL\r\n                    && props.selectedFieldRecord.componentcode !== ReactComponents.FILE\r\n                    && props.selectedFieldRecord.table &&\r\n                    props.selectedFieldRecord.table.item.masterAdd\r\n                    ? <>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_ADDMASTER\" })}\r\n                                type=\"switch\"\r\n                                name={\"isAddMaster\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                checked={props.selectedFieldRecord[\"isAddMaster\"] === undefined ? false : props.selectedFieldRecord[\"isAddMaster\"]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_EDITMASTER\" })}\r\n                                type=\"switch\"\r\n                                name={\"isEditMaster\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                checked={props.selectedFieldRecord[\"isEditMaster\"] === undefined ? false : props.selectedFieldRecord[\"isEditMaster\"]}\r\n                            />\r\n                        </Col>\r\n                    </>\r\n                    : \"\"}\r\n\r\n                {(props.selectedFieldRecord.componentcode === ReactComponents.COMBO || \r\n                props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT)\r\n                    &&\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_AUTOFOCUS\" })}\r\n                            type=\"switch\"\r\n                            name={\"autoFocus\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"autoFocus\"] === undefined ? false : props.selectedFieldRecord[\"autoFocus\"]}\r\n                        />\r\n                    </Col>\r\n                }\r\n                \r\n\r\n                {props.selectedFieldRecord.componentcode === ReactComponents.COMBO &&\r\n                    props.selectedFieldRecord.table &&\r\n                    props.selectedFieldRecord.table.item.nquerybuildertablecode === 222\r\n                    ?\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                            type=\"switch\"\r\n                            name={\"isView\"}\r\n                            parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedFieldRecord[\"isView\"] === undefined ? false : props.selectedFieldRecord[\"isView\"]}\r\n                        />\r\n                    </Col>\r\n                    : \"\"}\r\n\r\n                {(props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT ||\r\n                    props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA)\r\n                    && ((!props.selectedFieldRecord[\"readonly\"]) \r\n                        || (props.selectedFieldRecord[\"readonly\"] && props.selectedFieldRecord[\"iseditablereadonly\"])) \r\n                    && !props.selectedFieldRecord['isnumeric'] ?\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLENGTH\" })}\r\n                            name={\"sfieldlength\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLENGTH\" })}\r\n                            value={props.selectedFieldRecord[\"sfieldlength\"] ? props.selectedFieldRecord[\"sfieldlength\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        /> </Col> : \"\"}\r\n\r\n                    \r\n                {/* <Col md={12}> */}\r\n                {/* {props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER &&\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ?\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_FILTERCOMPONENT\" })}\r\n                            isSearchable={true}\r\n                            name={\"filtercomponent\"}\r\n                            isDisabled={props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={[{ label: \"Query Builder\", value: \"querybuilder\" }, { label: \"Data Tool\", value: \"datatool\" }]}\r\n                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtercomponent\"] ? props.selectedFieldRecord[\"filtercomponent\"] : \"\"}\r\n                            onChange={value => props.onComboChange(value, \"filtercomponent\")}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n\r\n                        : \"\"\r\n\r\n                    } */}\r\n                <Col md={12} className='mt-2'>\r\n                    {props.selectedFieldRecord.componentcode === ReactComponents.COMBO\r\n                        || props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ?\r\n                        <>\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_SOURCE\" })}\r\n                                isSearchable={true}\r\n                                name={\"source\"}\r\n                                isDisabled={props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                isClearable={false}\r\n                                options={props.tables}\r\n                                value={props.selectedFieldRecord && props.selectedFieldRecord[\"table\"] ? props.selectedFieldRecord[\"table\"] : \"\"}\r\n                                onChange={value => props.onComboChange(value, \"table\")}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                            />\r\n                            {props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER ||\r\n                                props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ?\r\n                                <>\r\n                                    <FormMultiSelect\r\n                                        label={props.intl.formatMessage({ id: \"IDS_FILTERFIELDS\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"filterfields\"}\r\n                                        isDisabled={props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        optionId=\"value\"\r\n                                        optionValue=\"label\"\r\n                                        isMandatory={true}\r\n                                        isClearable={true}\r\n                                        disableSearch={false}\r\n                                        disabled={false}\r\n                                        closeMenuOnSelect={false}\r\n                                        options={props.tableColumn || []}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"customsearchfilter\"] ? props.selectedFieldRecord[\"customsearchfilter\"] : []}\r\n                                        onChange={value => props.onComboChange(value, \"customsearchfilter\")}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n\r\n                                    {props.selectedFieldRecord.componentcode === ReactComponents.FRONTENDSEARCHFILTER ||\r\n                                        props.selectedFieldRecord.componentcode === ReactComponents.BACKENDSEARCHFILTER ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <CustomSwitch\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_RECORDBASEDREADONLY\" })}\r\n                                                    type=\"switch\"\r\n                                                    name={\"recordbasedreadonly\"}\r\n                                                    parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                                    onChange={(event) => props.onInputOnChange(event, 'recordbasedreadonly')}\r\n                                                    isMandatory={false}\r\n                                                    required={true}\r\n                                                    checked={props.selectedFieldRecord[\"recordbasedreadonly\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedreadonly\"]}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={12}>\r\n                                                <CustomSwitch\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_RECORDBASEDSHOWHIDE\" })}\r\n                                                    type=\"switch\"\r\n                                                    name={\"recordbasedshowhide\"}\r\n                                                    parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                                    onChange={(event) => props.onInputOnChange(event, \"recordbasedshowhide\")}\r\n                                                    isMandatory={false}\r\n                                                    required={true}\r\n                                                    checked={props.selectedFieldRecord[\"recordbasedshowhide\"] === undefined ? false : props.selectedFieldRecord[\"recordbasedshowhide\"]}\r\n                                                />\r\n                                            </Col>\r\n                                            {props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER// &&\r\n                                                //  props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER\r\n                                                && props.selectedFieldRecord.table &&\r\n                                                props.selectedFieldRecord.table.item.masterAdd\r\n                                                ?\r\n                                                <Col md={12}>\r\n                                                    <CustomSwitch\r\n                                                        label={props.intl.formatMessage({ id: \"IDS_ADDMASTER\" })}\r\n                                                        type=\"switch\"\r\n                                                        name={\"isAddMaster\"}\r\n                                                        parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                                        onChange={(event) => props.onInputOnChange(event, \"isAddMaster\")}\r\n                                                        isMandatory={false}\r\n                                                        required={true}\r\n                                                        checked={props.selectedFieldRecord[\"isAddMaster\"] === undefined ? false : props.selectedFieldRecord[\"isAddMaster\"]}\r\n                                                    />\r\n                                                </Col>\r\n                                                : \"\"}\r\n                                        </Row>\r\n                                        : \"\"}\r\n                                </>\r\n                                : <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_DISPLAYMEMBER\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"displaymember\"}\r\n                                    isDisabled={props.selectedFieldRecord.templatemandatory || props.selectedFieldRecord.predefined}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    options={props.tableColumn}\r\n                                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"column\"] ? props.selectedFieldRecord[\"column\"] : \"\"}\r\n                                    onChange={value => props.onComboChange(value, \"column\")}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                />}\r\n                        </>\r\n                        : \"\"}\r\n                    {props.selectedFieldRecord.componentcode === ReactComponents.NUMERIC||\r\n                    (props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT && \r\n                          props.selectedFieldRecord.isnumeric) ?\r\n                        <>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_PRECISION\" })}\r\n                                name={\"precision\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PRECISION\" })}\r\n                                value={props.selectedFieldRecord[\"precision\"] ? props.selectedFieldRecord[\"precision\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                maxLength={\"1\"}\r\n                            />\r\n                               <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                                name={\"min\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                                value={props.selectedFieldRecord[\"min\"] ? props.selectedFieldRecord[\"min\"] : \"\"}\r\n                                isMandatory={props.selectedFieldRecord.isnumeric?true:false}\r\n                                required={true}\r\n                                maxLength={\"7\"}\r\n                            />\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                                name={\"max\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                                value={props.selectedFieldRecord[\"max\"] ? props.selectedFieldRecord[\"max\"] : \"\"}\r\n                                isMandatory={props.selectedFieldRecord.isnumeric?true:false}\r\n                                required={true}\r\n                                maxLength={\"7\"}\r\n                            />\r\n                         \r\n                        </>\r\n                        : \"\"}\r\n                    {\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.COMBO &&\r\n                        <>\r\n                            <FormSelectSearch\r\n                                name={\"child\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => props.onComboChange(event, 'childValue')}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_PARENTCOMPONENT\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                options={props.inputFields.filter(x => x.inputtype !== 'radio')}\r\n                                value={props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : []}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={true}\r\n                                isClearable={true}\r\n                            />\r\n                            {props.selectedFieldRecord.childValue && props.valueMembers.length > 1 &&\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_VALUEMEMBER\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"valuemember\"}\r\n                                    // isDisabled={props.selectedFieldRecord.templatemandatory}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    options={props.valueMembers}\r\n                                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"valuecolumn\"] ? props.selectedFieldRecord[\"valuecolumn\"] : \"\"}\r\n                                    onChange={value => props.onComboChange(value, \"valuecolumn\")}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                />\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n                    {\r\n                        props.selectedFieldRecord[\"recordbasedreadonly\"]\r\n                            || props.selectedFieldRecord[\"recordbasedshowhide\"] ?\r\n                            <>\r\n                                <FormSelectSearch\r\n                                    name={\"radioparent\"}\r\n                                    as={\"select\"}\r\n                                    onChange={(event) => props.onComboChange(event, 'radioparent')}\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_PARENTMULTIPLECHOICECONTROL\" })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={props.selectedFieldRecord[\"recordbasedreadonly\"] || props.selectedFieldRecord[\"recordbasedshowhide\"] ? props.inputFields.filter(x => x.inputtype === 'radio') : props.inputFields}\r\n                                    value={props.selectedFieldRecord.radioparent ? props.selectedFieldRecord.radioparent : []}\r\n                                    isMulti={false}\r\n                                    isDisabled={false}\r\n                                    isSearchable={true}\r\n                                    isClearable={true}\r\n                                />\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_MULTIPLECHOICEVALUE\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"displaymember\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    options={props.parentRadioValue}\r\n                                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"selectedrecordbasedhide\"] ? props.selectedFieldRecord[\"selectedrecordbasedhide\"] : \"\"}\r\n                                    onChange={value => props.onComboChange(value, \"selectedrecordbasedhide\")}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                />\r\n                            </>\r\n                            : props.selectedFieldRecord[\"recordbasedreadonly\"] ?\r\n                                <>\r\n                                    <FormSelectSearch\r\n                                        name={\"child\"}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => props.onComboChange(event, 'childValue')}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_PARENTMULTIPLECHOICECONTROL\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        options={(props.selectedFieldRecord.componentcode !== ReactComponents.FRONTENDSEARCHFILTER &&\r\n                                            props.selectedFieldRecord.componentcode !== ReactComponents.BACKENDSEARCHFILTER) ? props.inputFields :\r\n                                            props.selectedFieldRecord[\"recordbasedreadonly\"] ?\r\n                                                props.inputFields.filter(x => x.inputtype === 'radio') : props.inputFields}\r\n                                        value={props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : []}\r\n                                        isMulti={false}\r\n                                        isDisabled={false}\r\n                                        isSearchable={true}\r\n                                        isClearable={true}\r\n                                    />\r\n                                    <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_MULTIPLECHOICEVALUE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"displaymember\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.parentRadioValue}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"selectedrecordbasedhide\"] ? props.selectedFieldRecord[\"selectedrecordbasedhide\"] : \"\"}\r\n                                        onChange={value => props.onComboChange(value, \"selectedrecordbasedhide\")}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </>\r\n                                : \"\"\r\n                    }\r\n\r\n                </Col>\r\n                {\r\n                    (props.selectedFieldRecord.componentcode === ReactComponents.TEXTAREA ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.TEXTINPUT ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.NUMERIC ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.EMAIL ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.DATE\r\n                    ) && props.selectedFieldRecord[\"readonly\"] ?\r\n\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"child\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => props.onComboChange(event, 'childValue')}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_PARENTCOMPONENT\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                options={props.inputFields.filter(x => x.inputtype !== 'radio')}\r\n                                value={props.selectedFieldRecord.childValue ? props.selectedFieldRecord.childValue : []}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={true}\r\n                                isClearable={true}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_DISPLAYMEMBER\" })}\r\n                                isSearchable={true}\r\n                                name={\"displaymember\"}\r\n                                isDisabled={false}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                isClearable={false}\r\n                                options={props.tableColumn}\r\n                                value={props.selectedFieldRecord && props.selectedFieldRecord[\"column\"] ? props.selectedFieldRecord[\"column\"] : \"\"}\r\n                                onChange={value => props.onComboChange(value, \"column\")}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                            />\r\n                        </Col>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    props.selectedFieldRecord.componentcode === ReactComponents.DATE &&\r\n                    <>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_DATEONLY\" })}\r\n                                type=\"switch\"\r\n                                name={\"dateonly\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                defaultValue={props.selectedFieldRecord[\"dateonly\"]}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                checked={props.selectedFieldRecord[\"dateonly\"]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_TIMEONLY\" })}\r\n                                type=\"switch\"\r\n                                name={\"timeonly\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                checked={props.selectedFieldRecord[\"timeonly\"]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_NEEDTIMEZONE\" })}\r\n                                type=\"switch\"\r\n                                name={\"timezone\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                checked={props.selectedFieldRecord[\"timezone\"]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <InputGroup>\r\n                                <Form.Group>\r\n                                    {/* <Form.Label as=\"legend\" htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label> */}\r\n                                    <Form.Check\r\n                                        inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={'loadcurrentdate'}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_LOADCURRENTDATE\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        id={\"loadcurrentdate\"}\r\n                                        checked={props.selectedFieldRecord[\"loadcurrentdate\"]}\r\n                                    // isMandatory={control.mandatory}\r\n                                    // required={control.mandatory}\r\n                                    />\r\n                                </Form.Group>\r\n                            </InputGroup >\r\n                        </Col>\r\n\r\n                    </>\r\n                }\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode === ReactComponents.RADIO ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.CHECKBOX ||\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.PREDEFINEDDROPDOWN ?\r\n                        <TagInput\r\n                            tags={props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags : []}\r\n                            // tags={tags}\r\n                            addTag={props.addTag}\r\n                        />\r\n                        : \"\"\r\n\r\n                    }\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n                    {props.selectedFieldRecord.componentcode === ReactComponents.RADIO ||\r\n\r\n                        props.selectedFieldRecord.componentcode === ReactComponents.PREDEFINEDDROPDOWN ?\r\n                        <FormSelectSearch\r\n                            //formLabel={props.intl.formatMessage({ id: \"IDS_SELECTDEFAULTVALUES\" })}\r\n                            isSearchable={true}\r\n                            name={\"radiodefaultvalue\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTDEFAULTVALUES\" })}\r\n                            // isMandatory={true}\r\n                            isClearable={false}\r\n                            isMulti={false}\r\n                            options={props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags.map(x => { return { label: x.text, value: x.text } }) : []}\r\n                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"radiodefaultvalue\"] ? props.selectedFieldRecord[\"radiodefaultvalue\"] : \"\"}\r\n                            onChange={value => props.onComboChange(value, \"radiodefaultvalue\")}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n                        : props.selectedFieldRecord.componentcode === ReactComponents.CHECKBOX ?\r\n\r\n                            <FormMultiSelect\r\n                                name={\"radiodefaultvalue\"}\r\n                                optionId=\"label\"\r\n                                optionValue=\"value\"\r\n                                // label={ props.intl.formatMessage({ id:\"IDS_SCREENRIGHTS\" })}                              \r\n                                options={props.selectedFieldRecord.radioOptions ? props.selectedFieldRecord.radioOptions.tags.map(x => { return { label: x.text, value: x.text } }) : []}\r\n                                value={props.selectedFieldRecord[\"radiodefaultvalue\"] ? props.selectedFieldRecord[\"radiodefaultvalue\"] : []}\r\n                                //isMandatory={true}\r\n                                isClearable={true}\r\n                                disableSearch={false}\r\n                                disabled={false}\r\n                                closeMenuOnSelect={false}\r\n                                alphabeticalSort={true}\r\n                                allItemSelectedLabel={props.intl.formatMessage({ id: \"IDS_ALLITEMSAREMSELECTED\" })}\r\n                                noOptionsLabel={props.intl.formatMessage({ id: \"IDS_NOOPTION\" })}\r\n                                searchLabel={props.intl.formatMessage({ id: \"IDS_SEARCH\" })}\r\n                                selectAllLabel={props.intl.formatMessage({ id: \"IDS_SELECTALL\" })}\r\n                                onChange={(event) => props.onComboChange(event, \"radiodefaultvaluemulti\")}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTDEFAULTVALUES\" })}\r\n                            />\r\n\r\n                            : \"\"\r\n\r\n                    }\r\n                </Col>\r\n                {\r\n                    props.selectedFieldRecord.componentcode === ReactComponents.FILE &&\r\n                    <Col md={12}>\r\n                        {/* <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXFILES\" })}\r\n                            name={\"maxFiles\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXFILES\" })}\r\n                            value={props.selectedFieldRecord[\"maxFiles\"] ? props.selectedFieldRecord[\"maxFiles\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"1\"}\r\n                        /> */}\r\n                        <FormSelectSearch\r\n                            name={\"accept\"}\r\n                            as={\"select\"}\r\n                            onChange={(event) => props.onComboChange(event, 'accept')}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_FILETYPE\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            options={acceptOptions}\r\n                            defaultValue={acceptOptions[0]}\r\n                            value={props.selectedFieldRecord.accept ? props.selectedFieldRecord.accept : []}\r\n                            isMulti={false}\r\n                            isDisabled={false}\r\n                            isSearchable={true}\r\n                        />\r\n                    </Col>                 \r\n\r\n                }               \r\n                 \r\n                    {props.selectedFieldRecord.componentcode === ReactComponents.LABEL ?\r\n                     /**ALPD-4466 - Label Component Start - L.Subashini**/\r\n                    <>\r\n                       \r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_FONTSIZE\" })}\r\n                                name={\"sfontsize\"}\r\n                                type=\"number\"\r\n                                onChange={(event) => props.onChangeNumericInput(event, 'sfontsize')}\r\n                                precision={0}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_FONTSIZE\" })}\r\n                                value={props.selectedFieldRecord[\"sfontsize\"] ? props.selectedFieldRecord[\"sfontsize\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                strict={true}\r\n                                min={minFontSize}\r\n                                max={maxFontSize}\r\n                                addPadding={true}\r\n                            /> \r\n                        </Col>                                            \r\n                        <Col md={12}>\r\n                       \r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_BOLD\" })}\r\n                                type=\"switch\"\r\n                                name={\"bold\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                defaultValue={props.selectedFieldRecord[\"bold\"]}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={props.selectedFieldRecord[\"bold\"]}\r\n                                disabled={props.selectedFieldRecord[\"templatemandatory\"]}\r\n                            /> \r\n                        </Col>\r\n                        <Col md={12}>\r\n                       \r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_ITALIC\" })}\r\n                                type=\"switch\"\r\n                                name={\"italic\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                defaultValue={props.selectedFieldRecord[\"italic\"]}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={props.selectedFieldRecord[\"italic\"]}\r\n                                disabled={props.selectedFieldRecord[\"templatemandatory\"]}\r\n                            /> \r\n                        </Col>\r\n                         <Col md={12}>\r\n                       \r\n                            <CustomSwitch\r\n                                label={props.intl.formatMessage({ id: \"IDS_UNDERLINE\" })}\r\n                                type=\"switch\"\r\n                                name={\"underline\"}\r\n                                parentClassName={\"d-flex align-items-center inline-custom-switch\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                defaultValue={props.selectedFieldRecord[\"underline\"]}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={props.selectedFieldRecord[\"underline\"]}\r\n                            /> \r\n                        </Col>\r\n                        </>\r\n                        \r\n                    : \"\"  /**ALPD-4466 - Label Component End - L.Subashini**/}\r\n                     \r\n                \r\n                    \r\n                    {/* ALPD-4466 - Label Component - L.Subashini\r\n                       <FormSelectSearch\r\n                        //     formLabel={props.intl.formatMessage({ id: \"IDS_FONTSIZE\" })}\r\n                        //     isSearchable={true}\r\n                        //     name={\"sfontsize\"}\r\n                        //     isDisabled={false}\r\n                        //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        //     isMandatory={true}\r\n                        //     isClearable={false}\r\n                        //     options={fontSizeArray}    \r\n                        //     value={props.selectedFieldRecord && props.selectedFieldRecord[\"sfontsize\"] ? props.selectedFieldRecord[\"sfontsize\"] : \"\"}\r\n                        //     onChange={value => props.onComboChange(value, \"sfontsize\")}\r\n                        //     closeMenuOnSelect={true}\r\n                        //     alphabeticalSort={true}\r\n                        // />\r\n                        // <FormInput\r\n                        //     label={props.intl.formatMessage({ id: \"IDS_FONTSIZE\" })}\r\n                        //     name={\"\"}\r\n                        //     type=\"number\"\r\n                        //     onBlur={(event) => props.onInputOnChange(event, \"sfontsize\", {label:'sfontsize',\r\n                        //                                                             min:8, max:20})}\r\n                        //     placeholder={props.intl.formatMessage({ id: \"IDS_FONTSIZE\" })}\r\n                        //     value={props.selectedFieldRecord[\"sfontsize\"] ? props.selectedFieldRecord[\"sfontsize\"] : \"\"}\r\n                        //     isMandatory={true}\r\n                        //     required={true}\r\n                        //     maxLength={2}\r\n                        //     minValue={8}\r\n                        //     maxValue={20}\r\n                        // /> \r\n                  \r\n                    Commented by L.Subashini as this formatting is not required. \r\n                        If needed, uncomment below lines\r\n                        <Col md={12}>\r\n                        {props.selectedFieldRecord.componentcode == ReactComponents.LABEL ?\r\n                            <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_TEXTCASEFORMAT\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"textcaseformat\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    options={[{label:\"Lowercase\", value:\"text-lowercase\"},\r\n                                                {label: \"Uppercase\", value:\"text-uppercase\"},\r\n                                                {label: \"Capitalize\", value:\"text-capitalize\"}]}\r\n                                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"textcaseformat\"] ? props.selectedFieldRecord[\"textcaseformat\"] : \"\"}\r\n                                    onChange={value => props.onComboChange(value, \"textcaseformat\")}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                />\r\n                                :\"\"}\r\n                    </Col> */}\r\n                  \r\n               \r\n            </Row >\r\n            : \"\"\r\n    )\r\n}\r\n\r\nexport default injectIntl(DynamicFieldProperties);"]},"metadata":{},"sourceType":"module"}