{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\DynamicPreRegDesign.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData, getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues, getDynamicFilter, getDynamicFilterExecuteData, rearrangeDateFormatforKendoDataTool } from '../../actions/index';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\nimport { constructOptionList, deleteAttachmentDropZone, getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PortalModal from '../../PortalModal';\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport DynamicSlideout from './DynamicSlideout.jsx';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormInput from '../../components/form-input/form-input.component';\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport { Utils as QbUtils } from \"react-awesome-query-builder\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DynamicPreRegDesign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.custombuttonclick = (event, component) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const inputparam = {\n        component,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getDynamicFilter(inputparam);\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          selectedRecord: selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.handlePageChange = event => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          kendoSkip: event.skip,\n          kendoTake: event.take\n        }\n      };\n      this.props.updateStore(updateInfo); //this.setState({ kendoSkip: event.skip, kendoTake: event.take });\n    };\n\n    this.handleFilterChange = event => {\n      // event.preventDefault();\n      //event.stopPropagation();\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          kendoFilter: event.filter // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ kendoFilter: event.filter });\n    };\n\n    this.handleExecuteClick = event => {\n      const selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord['filterquery'] !== \"\" && selectedRecord['filterquery'] !== undefined) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: selectedRecord['filterquery']\n        };\n        this.props.getDynamicFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let selecteddata = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n\n      if (component.hasOwnProperty(\"child\")) {\n        const selectedRecord = this.state.selectedRecord;\n        component.child.map(y => {\n          // component.filterfields.filter(x=>x.)\n          const withoutCombocomponent = this.state.withoutCombocomponent;\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n\n          if (readonlyfields !== -1) {\n            if (withoutCombocomponent[readonlyfields]['inputtype'] === \"date\") {\n              selectedRecord[y.label] = selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : \"\";\n            } else {\n              if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\n                selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] : \"\";\n              } else {\n                selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\";\n              }\n            }\n          }\n        });\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord,\n            loadCustomSearchFilter: false // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n\n          }\n        };\n        this.props.updateStore(updateInfo); // }\n      }\n    };\n\n    this.onExecuteClick = () => {};\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.filterComboChange = comboData => {\n      this.setState({\n        selectedSampleType: comboData\n      });\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData();\n    };\n\n    this.closeModal = () => {\n      let updateInfo = {};\n\n      if (!this.props.Login.loadCustomSearchFilter) {\n        let loadEsign = this.props.Login.loadEsign;\n        let openModal = this.props.Login.openModal;\n        let openPortal = this.props.Login.openPortal;\n        let selectedRecord = this.props.Login.selectedRecord;\n\n        if (this.props.Login.loadEsign) {\n          if (this.props.Login.operation === \"delete\") {\n            loadEsign = false;\n            openModal = false;\n            openPortal = false;\n            selectedRecord = {};\n          } else {\n            loadEsign = false;\n          }\n        } else {\n          openModal = false;\n          openPortal = false;\n          selectedRecord = {};\n        }\n\n        updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal,\n            openPortal,\n            loadEsign,\n            selectedRecord,\n            selectedId: null,\n            design: [],\n            selectedFieldRecord: {},\n            showConfirmAlert: false\n          } // data: {openModal, loadEsign, selectedRecord}\n\n        };\n      } else {\n        updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadCustomSearchFilter: false,\n            kendoSkip: 0,\n            kendoTake: 5,\n            kendoFilter: {\n              logic: \"and\",\n              filters: []\n            },\n            awesomeTree: undefined,\n            awesomeConfig: undefined\n          } // data: {openModal, loadEsign, selectedRecord}\n\n        };\n      }\n\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openModal = ncontrolCode => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedRecord: {},\n          operation: \"copy\",\n          ncontrolCode,\n          selectedId: null,\n          openModal: true,\n          screenName: this.props.Login.inputParam.displayName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let dataState = undefined;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let selectedId = null;\n      inputData['registrationtemplate'] = {\n        nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        sregtemplatename: this.state.selectedRecord['sregtemplatename']\n      };\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        searchRef: this.searchRef,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        selectedId,\n        dataState\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteApproveTemplate(\"delete\", deleteId));\n    };\n\n    this.deleteApproveTemplate = (operation, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n      const postParam = {\n        inputListName: \"RegistrationTemplate\",\n        selectedObject: \"selectedTemplate\",\n        primaryKeyField: \"nreactregtemplatecode\",\n        fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\n        primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n        },\n        masterData: this.props.Login.masterData\n      };\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        postParam,\n        searchRef: this.searchRef,\n        inputData: {\n          registrationtemplate: {\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        operation\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            operation: \"delete\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedSampleType) {\n        this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SAMPLETYPENOTAVALIABLE\"\n        }));\n      }\n    };\n\n    this.getPreviewTemplate = (masterData, userInfo, editId) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.selectedTemplate.jsondata;\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      let childColumnList = {};\n      data.map(columnList => {\n        const val = this.comboChild(data, columnList, childColumnList, true);\n        data = val.data;\n        childColumnList = val.childColumnList;\n      });\n      this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true);\n    };\n\n    this.comboChild = (data, columnList, childColumnList, slice) => {\n      let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n      if (!childColumnList.hasOwnProperty(columnList.label)) {\n        if (childColumnList[columnList.label] === undefined) {\n          if (columnList.hasOwnProperty(\"child\")) {\n            let childList = [];\n            columnList.child.map(childData => {\n              const index = data.findIndex(x => x.label === childData.label);\n\n              if (index !== -1) {\n                childList.push(data[index]);\n\n                if (slice) {\n                  data = [...data.slice(0, index), ...data.slice(index + 1)];\n                }\n              }\n            });\n            childColumnList[columnList.label] = childList;\n\n            if (childList.length > 0) {\n              childList.map(y => {\n                if (y.hasOwnProperty(\"child\")) {\n                  const val = this.comboChild(data, y, childColumnList, slice);\n                  retunObj[\"data\"] = val.data;\n                  retunObj[\"childColumnList\"] = val.childColumnList;\n                } else {\n                  retunObj[\"data\"] = data;\n                  retunObj[\"childColumnList\"] = childColumnList;\n                }\n              });\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          } else {\n            retunObj[\"data\"] = data;\n            retunObj[\"childColumnList\"] = childColumnList;\n          }\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n\n      return retunObj;\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\");\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData.value,\n          item: comboData.item\n        };\n        this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList]);\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = (event, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'toggle') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedRecord[event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        const value = selectedRecord[event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index === 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedRecord[event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = radiotext;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      }); // this.saveComponentProperties()\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (value, type, oldVlaue) => {\n      const design = this.state.design;\n      let columns = design[0].children;\n      let designData = this.props.Login.ReactInputFields;\n      value = JSON.parse(value.fields);\n      value = { ...value,\n        type: \"component\"\n      };\n      let designDataIndex = designData.findIndex(item => item.label === value.label);\n      let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\n      let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\n      if (designDataIndex >= 0) designData.splice(designDataIndex, 1);\n\n      if (firstIndex >= 0) {\n        if (type !== 1) {\n          columns[0].children.splice(firstIndex, 1); // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[0].children.findIndex(item => item.label === value.label);\n            let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\n            columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 1) {\n        if (columns[0]) {\n          columns[0].children.push(value);\n        } else {\n          columns[0] = {\n            id: \"1\",\n            type: \"column\",\n            children: []\n          };\n          columns[0].children.push(value);\n        }\n      }\n\n      if (secondIndex >= 0) {\n        if (type !== 2) {\n          columns[1].splice(secondIndex, 1);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[1].children.findIndex(item => item.label === value.label);\n            let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\n            columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 2) {\n        if (columns[1]) {\n          columns[1].children.push(value);\n        } else {\n          columns[1] = {\n            id: \"2\",\n            type: \"column\",\n            children: []\n          };\n          columns[1].children.push(value);\n        }\n      } // design.push(columns)\n\n\n      this.setState({\n        designData,\n        design\n      });\n    };\n\n    this.onDropFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      addTemplateId: -1,\n      editId: -1,\n      deleteId: -1,\n      approveID: -1,\n      previewId: -1,\n      copyID: -1,\n      selectedRecord: {},\n      sampleTypeOptions: [],\n      selectedSampleType: {},\n      breadCrumbData: [],\n      design: [],\n      comboComponents: [],\n      withoutCombocomponent: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.masterStatus\n      }));\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const Layout = this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata;\n    const filterParam = {\n      inputListName: \"RegistrationTemplate\",\n      selectedObject: \"selectedTemplate\",\n      primaryKeyField: \"nreactregtemplatecode\",\n      fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"realSampleType\", \"SampleTypes\"],\n      searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, this.state.breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.state.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      filterColumnData: this.props.filterColumnData,\n      screenName: \"Dynamic Pre-Reg Design\",\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || [],\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      getMasterDetail: template => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.selectedTemplate,\n      primaryKeyField: \"nreactregtemplatecode\",\n      mainField: \"sregtemplatename\",\n      firstField: \"stransdisplaystatus\" // secondField=\"stransdisplaystatus\"\n      ,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: this.state.addTemplateId,\n      filterParam: filterParam,\n      hidePaging: true,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getReactInputFields(this.props.Login.userInfo, 'create'),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_SAMPLETYPEFILTER\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nsampletypecode\",\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_SAMPLETYPE\"\n          }),\n          isSearchable: false,\n          placeholder: \"Please Select...\",\n          options: this.state.sampleTypeOptions,\n          value: this.state.selectedSampleType ? this.state.selectedSampleType : \"\",\n          onChange: value => this.filterComboChange(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 53\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.selectedTemplate ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedTemplate.sregtemplatename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-secondary\"} btn-sm mr-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedTemplate.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEW\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\" // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.previewId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"delete\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1,\n      onClick: () => this.ConfirmDelete(this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approve\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.approveID) === -1,\n      onClick: () => this.deleteApproveTemplate('approve', this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"copy\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\" // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.openModal(this.state.copyID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    }, Layout ? Layout.map(item => /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 57\n      }\n    }, item.children.length > 0 ? item.children.map(column => /*#__PURE__*/React.createElement(Col, {\n      md: 12 / item.children.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 69\n      }\n    }, column.children.map(component => {\n      return component.hasOwnProperty(\"children\") ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 89\n        }\n      }, component.children.map(componentrow => /*#__PURE__*/React.createElement(Col, {\n        md: 12 / componentrow.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 105\n        }\n      }, componentrow.displayname ? componentrow.displayname[this.props.Login.userInfo.slanguagetypecode] || componentrow.label : componentrow.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 105\n        }\n      }, \"-\"))))) : /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 93\n        }\n      }, component.displayname ? component.displayname[this.props.Login.userInfo.slanguagetypecode] || component.label : component.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 93\n        }\n      }, \" \", \"-\"));\n    }))) : \"\")) : \"\"))) : \"\"))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PreRegDesignPopUp, {\n      closeModal: this.closeModal,\n      nsampletypecode: this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1,\n      searchRef: this.searchRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      size: this.props.Login.operation === 'copy' ? 'lg' : \"xl\",\n      onSaveClick: this.props.Login.operation === 'copy' ? this.onSaveClick : this.props.Login.operation === \"preview\" ? this.onExecuteClick : this.closeModal,\n      hideSave: this.props.Login.operation === 'copy' ? false : true,\n      loginoperation: this.props.Login.operation === 'copy' ? false : true,\n      operation: this.props.Login.operation,\n      showValidate: this.props.Login.operation === \"preview\" ? true : false,\n      screenName: this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\",\n      closeModal: this.closeModal,\n      show: this.props.Login.openModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'copy' ? [{\n        \"idsName\": \"IDS_TEMPLATENAME\",\n        \"dataField\": \"sregtemplatename\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: event => this.onInputOnChange(event),\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'copy' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        name: \"sregtemplatename\",\n        type: \"text\",\n        onChange: event => this.setState({\n          selectedRecord: { ...this.state.selectedRecord,\n            sregtemplatename: event.target.value\n          }\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        value: this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.loadCustomSearchFilter ? this.props.Login.seletedFilterComponent && this.props.Login.seletedFilterComponent.inputtype === 'frontendsearchfilter' ? /*#__PURE__*/React.createElement(KendoDatatoolFilter, {\n        filter: this.props.Login.kendoFilter,\n        handleFilterChange: this.handleFilterChange,\n        filterData: this.props.Login.lstPatient || [],\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        fields: this.props.Login.fields || [],\n        gridColumns: this.props.Login.gridColumns || [],\n        onRowClick: this.handleKendoRowClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 46\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata,\n        handleChange: this.handleChange,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        Login: this.props.Login,\n        custombuttonclick: this.custombuttonclick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      userRoleControlRights,\n      controlMap,\n      addTemplateId,\n      sampleTypeOptions,\n      breadCrumbData,\n      selectedSampleType,\n      editId,\n      deleteId,\n      approveID,\n      copyID,\n      selectedRecord,\n      comboComponents,\n      previewId,\n      withoutCombocomponent,\n      kendoSkip,\n      kendoTake,\n      awesomeConfig,\n      awesomeTree,\n      kendoFilter\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n      addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\n      editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\n      deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\n      approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\n      copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\n      previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\n    }\n\n    if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\n      sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsorter', \"ascending\").get(\"OptionList\");\n      selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\n      breadCrumbData = sampleTypeOptions.length > 0 ? [{\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": sampleTypeOptions[0].label,\n        \"item\": sampleTypeOptions[0]\n      }] : [];\n      updateState = true;\n    }\n\n    if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\n      updateState = true;\n      breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\n      updateState = true;\n      comboComponents = this.props.Login.comboComponents;\n    }\n\n    if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\n      updateState = true;\n      withoutCombocomponent = this.props.Login.withoutCombocomponent;\n    } // if (this.props.Login.kendoTake !== previousProps.Login.kendoTake) {\n    //     updateState = true;\n    //     kendoTake = this.props.Login.kendoTake\n    // }\n\n\n    if (updateState) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        addTemplateId,\n        sampleTypeOptions,\n        breadCrumbData,\n        selectedSampleType,\n        editId,\n        deleteId,\n        approveID,\n        copyID,\n        selectedRecord,\n        comboComponents,\n        previewId,\n        withoutCombocomponent\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  crudMaster,\n  getReactInputFields,\n  selectRegistrationTemplate,\n  filterColumnData,\n  getRegistrationTemplate,\n  getEditRegTemplate,\n  getPreviewTemplate,\n  getChildValues,\n  getDynamicFilter,\n  getDynamicFilterExecuteData\n})(injectIntl(DynamicPreRegDesign));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dynamicpreregdesign/DynamicPreRegDesign.jsx"],"names":["React","connect","injectIntl","updateStore","getReactInputFields","selectRegistrationTemplate","filterColumnData","getRegistrationTemplate","getEditRegTemplate","crudMaster","getPreviewTemplate","getChildValues","getDynamicFilter","getDynamicFilterExecuteData","rearrangeDateFormatforKendoDataTool","DEFAULT_RETURN","Row","Col","FormGroup","FormLabel","Card","Nav","ListMaster","ContentPanel","MediaLabel","ReadOnlyText","constructOptionList","deleteAttachmentDropZone","getControlMap","getSameRecordFromTwoArrays","onDropAttachFileList","showEsign","toast","PreRegDesignPopUp","FormSelectSearch","BreadcrumbComponent","Affix","PortalModal","faCopy","faEye","faPencilAlt","faThumbsUp","faTrashAlt","FontAwesomeIcon","ConfirmMessage","DynamicSlideout","SlideOutModal","Esign","transactionStatus","FormInput","KendoDatatoolFilter","FilterQueryBuilder","Utils","QbUtils","mapStateToProps","state","Login","DynamicPreRegDesign","Component","constructor","props","custombuttonclick","event","component","preventDefault","stopPropagation","inputparam","userinfo","userInfo","onChangeAwesomeQueryBuilder","immutableTree","config","selectedRecord","sqlFormat","updateInfo","typeName","data","awesomeTree","awesomeConfig","handlePageChange","kendoSkip","skip","kendoTake","take","handleFilterChange","kendoFilter","filter","handleExecuteClick","undefined","seletedFilterComponent","filterquery","warn","intl","formatMessage","id","handleKendoRowClick","selecteddata","dataItem","hasOwnProperty","child","map","y","withoutCombocomponent","readonlyfields","findIndex","k","label","languagetypeCode","loadCustomSearchFilter","onExecuteClick","openFilter","showFilter","filterComboChange","comboData","setState","selectedSampleType","closeFilter","onFilterSubmit","reloadData","closeModal","loadEsign","openModal","openPortal","operation","selectedId","design","selectedFieldRecord","showConfirmAlert","logic","filters","ncontrolCode","screenName","inputParam","displayName","onSaveClick","saveType","formRef","inputData","dataState","nreactregtemplatecode","masterData","selectedTemplate","sregtemplatename","methodUrl","classUrl","searchRef","esignNeeded","userRoleControlRights","nformcode","screenData","ConfirmDelete","deleteId","confirmMessage","confirm","deleteApproveTemplate","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","primaryKeyValue","fecthInputObject","nsampletypecode","breadCrumbData","item","value","registrationtemplate","current","editId","Layout","jsondata","row","children","column","componentrow","inputtype","push","comboComponents","childColumnList","columnList","val","comboChild","Map","slice","retunObj","childList","childData","index","x","length","onComboChange","control","customName","comboName","childComboList","parentList","inputParem","source","primarykeyField","valuemember","onInputOnChange","radiotext","target","type","name","checked","YES","NO","test","includes","indexOf","indexcomma","onNumericInputChange","handleDateChange","dateValue","dateName","onDrop","oldVlaue","columns","designData","ReactInputFields","JSON","parse","fields","designDataIndex","firstIndex","secondIndex","splice","from","to","onDropFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","file","createRef","controlMap","addTemplateId","approveID","previewId","copyID","sampleTypeOptions","getDerivedStateFromProps","masterStatus","error","render","filterParam","unchangeList","searchFieldList","searchedData","RegistrationTemplate","template","ntransactionstatus","APPROVED","stransdisplaystatus","e","displayname","slanguagetypecode","validateEsign","lstPatient","gridColumns","handleChange","timeZoneList","defaultTimeZone","componentDidUpdate","previousProps","updateState","Object","values","ncontrolcode","has","get","SampleTypes","realSampleType","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, crudMaster,\r\n    getPreviewTemplate, getChildValues, getDynamicFilter, getDynamicFilterExecuteData, rearrangeDateFormatforKendoDataTool\r\n} from '../../actions/index'\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\r\nimport {\r\n    constructOptionList, deleteAttachmentDropZone,\r\n    getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign\r\n} from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PortalModal from '../../PortalModal';\r\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport DynamicSlideout from './DynamicSlideout.jsx'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass DynamicPreRegDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            addTemplateId: -1,\r\n            editId: -1, deleteId: -1, approveID: -1, previewId: -1, copyID: -1,\r\n            selectedRecord: {},\r\n            sampleTypeOptions: [],\r\n            selectedSampleType: {},\r\n            breadCrumbData: [],\r\n            design: [],\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.masterStatus }));\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    custombuttonclick = (event, component) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const inputparam = {\r\n            component, userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getDynamicFilter(inputparam)\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n       // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n\r\n    handlePageChange = (event) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoSkip: event.skip, kendoTake: event.take\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        //this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    handleFilterChange = (event) => {\r\n        // event.preventDefault();\r\n        //event.stopPropagation();\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoFilter: event.filter\r\n                // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n       // this.setState({ kendoFilter: event.filter });\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        const selectedRecord = this.state.selectedRecord\r\n        if(selectedRecord['filterquery']!==\"\"&&selectedRecord['filterquery']!==undefined){\r\n        const inputparam = {\r\n            component: this.props.Login.seletedFilterComponent,\r\n            userinfo: this.props.Login.userInfo,\r\n            filterquery: selectedRecord['filterquery']\r\n\r\n        }\r\n        this.props.getDynamicFilterExecuteData(inputparam)\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n    }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let selecteddata = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent\r\n        if (component.hasOwnProperty(\"child\")) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            component.child.map(y => {\r\n                // component.filterfields.filter(x=>x.)\r\n                const withoutCombocomponent = this.state.withoutCombocomponent;\r\n                const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n                if (readonlyfields !== -1) {\r\n\r\n                    if(withoutCombocomponent[readonlyfields]['inputtype']===\"date\"){\r\n                        selectedRecord[y.label] =  selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? \r\n                        rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo,selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : \"\"\r\n                    }else{\r\n                        if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ?\r\n                                selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] : \"\"\r\n                        } else {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\"\r\n                        }\r\n                    }\r\n\r\n                   \r\n                }\r\n\r\n            })\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectedRecord,\r\n                    loadCustomSearchFilter: false,\r\n                    // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo)\r\n            // }\r\n        }\r\n    };\r\n    render() {\r\n        const Layout = this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate.jsondata\r\n\r\n        const filterParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"realSampleType\", \"SampleTypes\"],\r\n            searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {this.state.breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={this.state.breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                screenName={\"Dynamic Pre-Reg Design\"}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || []}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(template) => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedTemplate}\r\n                                primaryKeyField=\"nreactregtemplatecode\"\r\n                                mainField=\"sregtemplatename\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={this.state.addTemplateId}\r\n                                filterParam={filterParam}\r\n                                hidePaging={true}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getReactInputFields(this.props.Login.userInfo, 'create')}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLETYPEFILTER\":\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsampletypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.sampleTypeOptions}\r\n                                                        value={this.state.selectedSampleType ? this.state.selectedSampleType : \"\"}\r\n                                                        onChange={value => this.filterComboChange(value)}\r\n                                                    >\r\n                                                    </FormSelectSearch>\r\n                                                </Col>\r\n                                            </Row>\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {this.props.Login.masterData.selectedTemplate ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedTemplate.sregtemplatename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <MediaLabel className={`btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\"\r\n                                                            : \"outline-secondary\"} btn-sm mr-3`}>\r\n                                                            {this.props.Login.masterData.selectedTemplate.stransdisplaystatus}\r\n                                                        </MediaLabel>\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEW\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.getPreviewTemplate(this.props.Login.masterData,\r\n                                                                this.props.Login.userInfo, this.state.previewId\r\n                                                            )}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"delete\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"approve\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.approveID) === -1}\r\n                                                            onClick={() => this.deleteApproveTemplate('approve', this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"copy\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.openModal(this.state.copyID)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            {\r\n                                                Layout ?\r\n                                                    Layout.map((item) =>\r\n                                                        <Row>\r\n                                                            {item.children.length > 0 ?\r\n                                                                item.children.map((column) =>\r\n                                                                    <Col md={12 / item.children.length}>\r\n                                                                        {\r\n                                                                            column.children.map((component) => {\r\n                                                                                return (\r\n                                                                                    component.hasOwnProperty(\"children\") ?\r\n                                                                                        <Row>\r\n                                                                                            {component.children.map(componentrow =>\r\n                                                                                                <Col md={12 / componentrow.length}>\r\n                                                                                                    <FormGroup>\r\n                                                                                                        <FormLabel>{componentrow.displayname ? componentrow.displayname[this.props.Login.userInfo.slanguagetypecode] || componentrow.label : componentrow.label}</FormLabel>\r\n                                                                                                        <ReadOnlyText>{\"-\"}</ReadOnlyText>\r\n                                                                                                    </FormGroup>\r\n                                                                                                </Col>\r\n                                                                                            )\r\n                                                                                            }\r\n                                                                                        </Row>\r\n                                                                                        :\r\n                                                                                        <FormGroup>\r\n                                                                                            <FormLabel>{component.displayname ? component.displayname[this.props.Login.userInfo.slanguagetypecode] || component.label : component.label}</FormLabel>\r\n                                                                                            <ReadOnlyText> {\"-\"}</ReadOnlyText>\r\n                                                                                        </FormGroup>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                : \"\"}\r\n                                                        </Row>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegDesignPopUp\r\n                            closeModal={this.closeModal}\r\n                            nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\r\n                            searchRef={this.searchRef}\r\n                        />\r\n                    </PortalModal> : \"\"}\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        size={this.props.Login.operation === 'copy' ? 'lg' : \"xl\"}\r\n                        onSaveClick={this.props.Login.operation === 'copy' ? this.onSaveClick : \r\n                                    this.props.Login.operation === \"preview\" ? \r\n                                    this.onExecuteClick : this.closeModal}\r\n                        hideSave={this.props.Login.operation === 'copy' ? false : true}\r\n                        loginoperation={this.props.Login.operation === 'copy' ? false : true}\r\n                        operation={this.props.Login.operation}\r\n                        showValidate={this.props.Login.operation === \"preview\" ? true:false}\r\n                        screenName={this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\"}\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'copy' ? [{ \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"sregtemplatename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={(event) => this.onInputOnChange(event)}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === 'copy' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormInput\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            name={\"sregtemplatename\"}\r\n                                            type=\"text\"\r\n                                            onChange={(event) => this.setState({ selectedRecord: { ...this.state.selectedRecord, sregtemplatename: event.target.value } })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            value={this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            maxLength={\"30\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                : this.props.Login.loadCustomSearchFilter ?\r\n                                    this.props.Login.seletedFilterComponent &&\r\n                                        this.props.Login.seletedFilterComponent.inputtype === 'frontendsearchfilter' ?\r\n                                        <KendoDatatoolFilter\r\n                                            filter={this.props.Login.kendoFilter}\r\n                                            handleFilterChange={this.handleFilterChange}\r\n                                            filterData={this.props.Login.lstPatient || []}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            fields={this.props.Login.fields || []}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n\r\n                                        /> : <FilterQueryBuilder\r\n                                            fields={this.props.Login.fields || {}}\r\n                                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                                            tree={this.props.Login.awesomeTree}\r\n                                            config={this.props.Login.awesomeConfig}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            filterData={this.props.Login.lstPatient}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            handleExecuteClick={this.handleExecuteClick}\r\n                                        // controlMap={this.state.controlMap}\r\n                                        // dataState={this.state.dataState}\r\n                                        // dataStateChange={this.dataStateChange}\r\n                                        />\r\n                                    :\r\n                                    <DynamicSlideout\r\n                                        selectedRecord={this.props.Login.selectedRecord}\r\n                                        templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                            this.props.Login.masterData.selectedTemplate.jsondata}\r\n                                        handleChange={this.handleChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputChange={this.onNumericInputChange}\r\n                                        comboData={this.props.Login.comboData}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onDropFile={this.onDropFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                        defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        Login={this.props.Login}\r\n                                        custombuttonclick={this.custombuttonclick}\r\n                                    />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    onExecuteClick = ()=>{\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { userRoleControlRights, controlMap, addTemplateId,\r\n            sampleTypeOptions, breadCrumbData, selectedSampleType,\r\n            editId, deleteId, approveID, copyID, selectedRecord, comboComponents,\r\n             previewId, withoutCombocomponent,kendoSkip,kendoTake,\r\n             awesomeConfig,awesomeTree,kendoFilter\r\n        } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            updateState = true;\r\n            addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\r\n            editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\r\n            deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\r\n            approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\r\n            copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\r\n            previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\r\n        }\r\n        if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsorter', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            breadCrumbData = sampleTypeOptions.length > 0 ? [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": sampleTypeOptions[0].label,\r\n                    \"item\": sampleTypeOptions[0]\r\n                }\r\n            ] : [];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\r\n            updateState = true;\r\n            breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\r\n            updateState = true;\r\n            comboComponents = this.props.Login.comboComponents\r\n        }\r\n        if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\r\n            updateState = true;\r\n            withoutCombocomponent = this.props.Login.withoutCombocomponent\r\n        }\r\n   \r\n        // if (this.props.Login.kendoTake !== previousProps.Login.kendoTake) {\r\n        //     updateState = true;\r\n        //     kendoTake = this.props.Login.kendoTake\r\n        // }\r\n  \r\n\r\n        if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, addTemplateId, sampleTypeOptions,\r\n                breadCrumbData, selectedSampleType,\r\n                editId, deleteId, approveID, copyID, selectedRecord, \r\n                comboComponents, previewId, withoutCombocomponent\r\n               \r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    filterComboChange = (comboData) => {\r\n        this.setState({ selectedSampleType: comboData })\r\n    }\r\n\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.reloadData()\r\n    }\r\n\r\n    closeModal = () => {\r\n        let updateInfo = {}\r\n        if (!this.props.Login.loadCustomSearchFilter) {\r\n            let loadEsign = this.props.Login.loadEsign;\r\n            let openModal = this.props.Login.openModal;\r\n            let openPortal = this.props.Login.openPortal;\r\n            let selectedRecord = this.props.Login.selectedRecord;\r\n            if (this.props.Login.loadEsign) {\r\n                if (this.props.Login.operation === \"delete\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                    openPortal = false;\r\n                    selectedRecord = {};\r\n\r\n                }\r\n                else {\r\n                    loadEsign = false;\r\n                }\r\n            }\r\n            else {\r\n                openModal = false;\r\n                openPortal = false;\r\n                selectedRecord = {};\r\n            }\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, openPortal, loadEsign, selectedRecord, selectedId: null, design: [], selectedFieldRecord: {}, showConfirmAlert: false }\r\n                // data: {openModal, loadEsign, selectedRecord}\r\n            }\r\n        } else {\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { loadCustomSearchFilter: false,kendoSkip: 0,\r\n                    kendoTake: 5,\r\n                    kendoFilter: {\r\n                        logic: \"and\",\r\n                        filters: []\r\n                    },\r\n                    awesomeTree: undefined,\r\n                    awesomeConfig: undefined }\r\n                // data: {openModal, loadEsign, selectedRecord}\r\n            }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    openModal = (ncontrolCode) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: \"copy\", ncontrolCode, selectedId: null,\r\n                openModal: true, screenName: this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let dataState = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let selectedId = null;\r\n        inputData['registrationtemplate'] =\r\n        {\r\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            sregtemplatename: this.state.selectedRecord['sregtemplatename']\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            searchRef: this.searchRef,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, operation: this.props.Login.operation,\r\n            saveType, formRef, selectedId, dataState\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApproveTemplate(\"delete\", deleteId));\r\n    }\r\n\r\n    deleteApproveTemplate = (operation, ncontrolCode) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const postParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            inputData: {\r\n                registrationtemplate: {\r\n                    nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            operation\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    operation: \"delete\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedSampleType) {\r\n            this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVALIABLE\" }));\r\n        }\r\n    }\r\n\r\n    getPreviewTemplate = (masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.selectedTemplate.jsondata\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        let childColumnList = {};\r\n        data.map(columnList => {\r\n            const val = this.comboChild(data, columnList, childColumnList, true);\r\n            data = val.data;\r\n            childColumnList = val.childColumnList\r\n        })\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord,\r\n            childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true)\r\n\r\n    }\r\n\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\")\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData.value,\r\n                item: comboData.item\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList])\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'toggle') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedRecord[event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        // this.saveComponentProperties()\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDrop = (value, type, oldVlaue) => {\r\n        const design = this.state.design;\r\n        let columns = design[0].children;\r\n        let designData = this.props.Login.ReactInputFields;\r\n        value = JSON.parse(value.fields);\r\n        value = { ...value, type: \"component\" }\r\n        let designDataIndex = designData.findIndex(item => item.label === value.label);\r\n        let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\r\n        let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\r\n\r\n        if (designDataIndex >= 0)\r\n            designData.splice(designDataIndex, 1);\r\n        if (firstIndex >= 0) {\r\n            if (type !== 1) {\r\n                columns[0].children.splice(firstIndex, 1);\r\n                // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[0].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n\r\n        } else if (type === 1) {\r\n            if (columns[0]) {\r\n                columns[0].children.push(value);\r\n            } else {\r\n                columns[0] = {\r\n                    id: \"1\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n\r\n                columns[0].children.push(value);\r\n            }\r\n        }\r\n        if (secondIndex >= 0) {\r\n            if (type !== 2) {\r\n                columns[1].splice(secondIndex, 1);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[1].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n        } else if (type === 2) {\r\n            if (columns[1]) {\r\n                columns[1].children.push(value);\r\n            } else {\r\n                columns[1] = {\r\n                    id: \"2\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n                columns[1].children.push(value);\r\n            }\r\n        }\r\n\r\n        // design.push(columns)\r\n        this.setState({ designData, design })\r\n    }\r\n\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, crudMaster,\r\n    getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate,\r\n    getPreviewTemplate, getChildValues, getDynamicFilter, getDynamicFilterExecuteData\r\n})(injectIntl(DynamicPreRegDesign))"]},"metadata":{},"sourceType":"module"}