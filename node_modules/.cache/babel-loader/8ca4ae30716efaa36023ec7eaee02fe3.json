{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\batchruncreation\\\\AddSample.js\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MediaHeader } from '../product/product.styled';\n\nconst AddSample = props => {\n  const extractedColumnList = []; //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\n\n  let count = (props.addedSamplesListSortedList || []).length;\n\n  if (props.nneedsubsample) {\n    extractedColumnList.push({\n      \"idsName\": \"IDS_ARNUMBER\",\n      \"dataField\": \"sarno\"\n    }, {\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\"\n    });\n  } else {\n    extractedColumnList.push({\n      \"idsName\": \"IDS_ARNUMBER\",\n      \"dataField\": \"sarno\"\n    });\n  }\n\n  extractedColumnList.push({\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"stestname\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_SAMPLENAME\",\n    \"dataField\": \"ssamplename\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_REGDATE\",\n    \"dataField\": \"dregdate\",\n    \"width\": \"200px\"\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-end p-2\",\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-user btn-primary-blue\",\n    onClick: () => props.addSaveDataGrid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n    data: props.samples || [],\n    gridHeight: '580px',\n    scrollable: 'scrollable',\n    dataState: props.dataState,\n    dataResult: props.dataResult,\n    selectAll: props.addSelectAll,\n    userInfo: props.userInfo,\n    title: props.intl.formatMessage({\n      id: \"IDS_SELECTTOADD\"\n    }),\n    headerSelectionChange: props.headerSelectionChange,\n    selectionChange: props.selectionChange,\n    dataStateChange: props.dataStateChangeBatchSample,\n    extractedColumnList: extractedColumnList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: '12',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 49\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_SELECTEDSAMPLES\"\n  }) + \" : \"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 49\n    }\n  }, count))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DataGridWithSelection //primaryKeyField={\"nbatchsamplecode\"}\n  , {\n    userInfo: props.userInfo,\n    data: props.addedSamplesListSortedList || [],\n    title: props.intl.formatMessage({\n      id: \"IDS_SELECTTODELETE\"\n    }),\n    extractedColumnList: extractedColumnList,\n    selected: false,\n    hideColumnFilter: true,\n    isHidemulipleselect: true,\n    isActionRequired: true,\n    handleClickDelete: props.handleClickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default injectIntl(AddSample);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/batchruncreation/AddSample.js"],"names":["React","FormattedMessage","injectIntl","Button","Row","Col","DataGridWithSelection","faSave","FontAwesomeIcon","MediaHeader","AddSample","props","extractedColumnList","count","addedSamplesListSortedList","length","nneedsubsample","push","addSaveDataGrid","marginTop","samples","dataState","dataResult","addSelectAll","userInfo","intl","formatMessage","id","headerSelectionChange","selectionChange","dataStateChangeBatchSample","fontWeight","color","handleClickDelete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {Button,Row, Col} from 'react-bootstrap';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\nimport {faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { MediaHeader } from '../product/product.styled';\r\n\r\nconst AddSample = (props) =>{  \r\n        const extractedColumnList = [];\r\n\t\t    //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n        let count = (props.addedSamplesListSortedList || []).length;\r\n        if (props.nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\"},\r\n                        {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\" } \r\n                );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\"});\r\n            }\r\n            extractedColumnList .push(      \r\n                {\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\": \"155px\"},\r\n                {\"idsName\":\"IDS_SAMPLENAME\",\"dataField\":\"ssamplename\", \"width\": \"155px\"},\r\n                {\"idsName\":\"IDS_REGDATE\",\"dataField\":\"dregdate\",\"width\": \"200px\" },\r\n\r\n             );\r\n       return (\r\n       <>\r\n\r\n <Row>\r\n{ /*ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid*/}\r\n<Col className=\"d-flex justify-content-end p-2\" md={12}>\r\n                                <Button className=\"btn-user btn-primary-blue\"\r\n                                onClick={() => props.addSaveDataGrid()}\r\n                                >\r\n                                        <FontAwesomeIcon icon={faSave} /> { }\r\n                                        <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                                </Button>\r\n                        </Col>\r\n        <Row style={{marginTop:'10px'}}>\r\n                <Col>                     \r\n                        <DataGridWithSelection                               \r\n                                data={props.samples ||[]} \r\n                                gridHeight = {'580px'}\r\n                                scrollable={'scrollable'}\r\n                                dataState={props.dataState}\r\n                                dataResult={props.dataResult}\r\n                                selectAll={props.addSelectAll}\r\n                                userInfo={props.userInfo}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTOADD\"})}\r\n                                headerSelectionChange={props.headerSelectionChange}\r\n                                selectionChange={props.selectionChange}\r\n                                dataStateChange={props.dataStateChangeBatchSample}\r\n                                extractedColumnList={extractedColumnList}                            \r\n                        /> \r\n                </Col>\r\n                \r\n        </Row>\r\n        </Row>\r\n        { /*ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid*/}\r\n\r\n        <br>\r\n                        </br>\r\n                        <Row style={{ marginTop: '10px' }}>\r\n        {/*ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid*/}\r\n                                <Col md={'12'}>\r\n                                        <MediaHeader className='mb-3'>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                                                        {props.intl.formatMessage({ id: \"IDS_SELECTEDSAMPLES\" }) + \" : \"}\r\n                                                </span>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"blue\" }}>\r\n                                                        {count}\r\n                                                </span>\r\n                                        </MediaHeader>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                        <DataGridWithSelection\r\n                                                //primaryKeyField={\"nbatchsamplecode\"}\r\n                                                userInfo={props.userInfo}\r\n                                                data={props.addedSamplesListSortedList || []}\r\n                                                title={props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                extractedColumnList={extractedColumnList}                                                \r\n                                                selected={false}\r\n                                                hideColumnFilter={true}\r\n                                                isHidemulipleselect={true}\r\n                                                isActionRequired={true}\r\n                                                handleClickDelete={props.handleClickDelete}\r\n                                        />\r\n                                </Col>\r\n                        </Row>\r\n             \r\n        <Row style={{marginTop:'10px'}}>\r\n                {/* <Col md={6}>\r\n                        <span className=\"add-txt-btn\">\r\n                                <FormattedMessage id=\"IDS_ADDEDCOMPONENTS\" defaultMessage=\"Added Components\"/>\r\n                                 : {props.addedComponentList && props.addedComponentList.length}\r\n                        </span>\r\n                </Col> */}\r\n\r\n                {/* <Col md={12} className=\"d-flex justify-content-end\">\r\n                     \r\n                        <Button variant=\"outline-danger\" onClick={() => props.onDeleteSelectedComponent()} >\r\n                                <FormattedMessage id='IDS_REMOVECOMPONENTS' defaultMessage='Remove Components' />\r\n                        </Button> */}\r\n                        {/* <Nav.Link name=\"addrole\" className=\"add-txt-btn\" onClick={() => props.onDeleteSelectedComponent()}>\r\n                                <FormattedMessage id='IDS_DELETECOMPONENTS' defaultMessage='Delete Components' />\r\n                        </Nav.Link> */}\r\n                {/* </Col> */}\r\n        </Row>\r\n        {/* <Row style={{marginTop:'10px'}}> \r\n                 <Col>      \r\n                        <DataGridWithSelection\r\n                                primaryKeyField={\"npreregno\"}                               \r\n                                data={props.samples }\r\n                                // componentPopupSkip={props.componentPopupSkip}\r\n                                // componentPopupTake={props.componentPopupTake}\r\n                                // componentPageSizes={props.componentPageSizes}\r\n                                selectAll={props.deleteSelectAll}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTODELETE\"})}\r\n                                headerSelectionChange={props.addedHeaderSelectionChange}\r\n                                selectionChange={props.addedSelectionChange}\r\n                                extractedColumnList={[  {idsName:\"IDS_ARNO\", dataField:\"sarno\"},\r\n                                                        {idsName:\"IDS_COMPONENTNAME\", dataField:\"scomponentname\"},\r\n                                                        {idsName:\"IDS_BATCHLOTNO\", dataField:\"smanuflotno\"},\r\n                                                        {idsName:\"IDS_SPECNAME\", dataField:\"sspecname\"}]}\r\n                              \r\n                        /> \r\n                </Col>\r\n        </Row> */}\r\n        </>\r\n       )\r\n   }\r\n   export default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}