{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{process}from'@progress/kendo-data-query';import ResultGrid from'../resultgrid/ResultGrid';var SchedulerParameterTab=/*#__PURE__*/function(_React$Component){_inherits(SchedulerParameterTab,_React$Component);var _super=_createSuper(SchedulerParameterTab);function SchedulerParameterTab(){_classCallCheck(this,SchedulerParameterTab);return _super.apply(this,arguments);}_createClass(SchedulerParameterTab,[{key:\"render\",value:function render(){var extractedColumnList=[];extractedColumnList.push({\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametersynonym\",\"width\":\"175px\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"175px\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"sparametertypename\",\"width\":\"175px\"});// if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\n//     extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" });\n// }\n// extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"width\": \"155px\" });\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:\"true\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ResultGrid,{primaryKeyField:\"nschedulertestparametercode\",data:this.props.masterData.SchedulerConfigurationParameter,dataResult:process(this.props.masterData.SchedulerConfigurationParameter||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,expandField:\"\",extractedColumnList:extractedColumnList,userInfo:this.props.userInfo,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,pageable:true,isComponent:true,isActionRequired:false,isToolBarRequired:false,scrollable:\"scrollable\",methodUrl:\"Status\",selectedId:null}))));}}]);return SchedulerParameterTab;}(React.Component);export default injectIntl(SchedulerParameterTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/Scheduler/SchedulerParameterTab.jsx"],"names":["React","Row","Col","injectIntl","process","ResultGrid","SchedulerParameterTab","extractedColumnList","push","props","masterData","SchedulerConfigurationParameter","dataState","dataStateChange","userInfo","controlMap","userRoleControlRights","inputParam","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,GAEMC,CAAAA,qB,oTAEF,iBAAS,CAEL,GAAMC,CAAAA,mBAAmB,CAAG,EAA5B,CAEAA,mBAAmB,CAACC,IAApB,CACI,CAAE,UAAW,mBAAb,CAAkC,YAAa,mBAA/C,CAAoE,QAAS,OAA7E,CADJ,CAEI,CAAE,UAAW,cAAb,CAA6B,YAAa,cAA1C,CAA0D,QAAS,OAAnE,CAFJ,CAGI,CAAE,UAAW,mBAAb,CAAkC,YAAa,oBAA/C,CAAqE,QAAS,OAA9E,CAHJ,EAMA;AACA;AACA;AACA;AAIA,mBACI,qDACI,oBAAC,GAAD,EAAK,SAAS,CAAE,MAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,UAAD,EACI,eAAe,CAAE,6BADrB,CAEI,IAAI,CAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,+BAFhC,CAGI,UAAU,CAAEP,OAAO,CAAC,KAAKK,KAAL,CAAWC,UAAX,CAAsBC,+BAAtB,EAAyD,EAA1D,CAA8D,KAAKF,KAAL,CAAWG,SAAzE,CAHvB,CAII,SAAS,CAAE,KAAKH,KAAL,CAAWG,SAJ1B,CAKI,eAAe,CAAE,KAAKH,KAAL,CAAWI,eALhC,CAMK,WAAW,CAAC,EANjB,CAOI,mBAAmB,CAAEN,mBAPzB,CAQI,QAAQ,CAAE,KAAKE,KAAL,CAAWK,QARzB,CASI,UAAU,CAAE,KAAKL,KAAL,CAAWM,UAT3B,CAUI,qBAAqB,CAAE,KAAKN,KAAL,CAAWO,qBAVtC,CAWI,UAAU,CAAE,KAAKP,KAAL,CAAWQ,UAX3B,CAYI,QAAQ,CAAE,IAZd,CAaI,WAAW,CAAE,IAbjB,CAcI,gBAAgB,CAAE,KAdtB,CAeI,iBAAiB,CAAE,KAfvB,CAgBI,UAAU,CAAE,YAhBhB,CAiBI,SAAS,CAAE,QAjBf,CAmBI,UAAU,CAAE,IAnBhB,EADJ,CADJ,CADJ,CADJ,CA8BH,C,mCAjD+BjB,KAAK,CAACkB,S,EAmD1C,cAAef,CAAAA,UAAU,CAACG,qBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ResultGrid from '../resultgrid/ResultGrid';\r\n\r\nclass SchedulerParameterTab extends React.Component {\r\n\r\n    render() {\r\n       \r\n        const extractedColumnList = [];        \r\n\r\n        extractedColumnList.push(\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"175px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"175px\" },\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"sparametertypename\", \"width\": \"175px\" });\r\n   \r\n\r\n        // if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\r\n        //     extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" });\r\n        // }\r\n        // extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"width\": \"155px\" });\r\n      \r\n       \r\n        \r\n        return (\r\n            <>\r\n                <Row noGutters={\"true\"}>\r\n                    <Col md={12}>\r\n                        <ResultGrid\r\n                            primaryKeyField={\"nschedulertestparametercode\"}\r\n                            data={this.props.masterData.SchedulerConfigurationParameter}\r\n                            dataResult={process(this.props.masterData.SchedulerConfigurationParameter || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                             expandField=\"\"\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            isComponent={true}\r\n                            isActionRequired={false}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            methodUrl={\"Status\"}\r\n                           \r\n                            selectedId={null}\r\n                        \r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(SchedulerParameterTab);"]},"metadata":{},"sourceType":"module"}