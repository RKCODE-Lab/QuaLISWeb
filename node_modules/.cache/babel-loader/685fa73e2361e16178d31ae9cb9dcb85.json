{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\MoveSampleOrContainers.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst AddTreeview = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.isSendToStore === true ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    name: \"sampleToStore\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sampleToStore\"] : \"\",\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nsampleqty\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLEQTY\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nsampleqty\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLEQTY\"\n    }),\n    strict: true,\n    min: 0 //max={99999999.99}\n    ,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nsampleqty\"),\n    noStyle: true,\n    precision: 2 //isMandatory={true}\n    ,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nunitcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_UNIT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.unitMaster,\n    value: props.selectedRecord[\"nunitcode\"],\n    isMandatory: false,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: true,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nunitcode', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nstoragecategorycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STORAGECATEGORY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.storageCategory,\n    value: props.selectedRecord[\"nstoragecategorycode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nstoragecategorycode', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsamplestoragelocationcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STORAGELOCATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.approvedLocation,\n    value: props.selectedRecord[\"nsamplestoragelocationcode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nsamplestoragelocationcode', 5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TreeViewEditable, {\n    id: \"samplestoragelocation\",\n    name: \"samplestoragelocation\",\n    placeholder: \"Enter samplestoragelocation\",\n    data: props.treeData,\n    expandIcons: true,\n    selectField: 'active-node',\n    item: props.itemRender,\n    onExpandChange: props.onExpandChange,\n    onItemClick: props.onItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default injectIntl(AddTreeview);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/MoveSampleOrContainers.jsx"],"names":["React","injectIntl","Row","Col","Form","TreeViewEditable","FormSelectSearch","FormNumericInput","FormInput","AddTreeview","props","isSendToStore","intl","formatMessage","id","event","onInputOnChange","selectedRecord","value","onNumericInputChange","unitMaster","onComboChange","storageCategory","approvedLocation","treeData","itemRender","onExpandChange","onItemClick"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst AddTreeview = (props) => {\r\n  return (\r\n    <>\r\n      {props.isSendToStore === true ?\r\n        <Row>\r\n          <Col md={12}>\r\n            <FormInput\r\n              label={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n              name={\"sampleToStore\"}\r\n              type=\"text\"\r\n              onChange={(event) => props.onInputOnChange(event)}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n              value={props.selectedRecord ? props.selectedRecord[\"sampleToStore\"] : \"\"}\r\n              isMandatory={false}\r\n              isDisabled={true}\r\n              required={true}\r\n              maxLength={\"100\"}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormNumericInput\r\n              name={\"nsampleqty\"}\r\n              label={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n              type=\"number\"\r\n              value={props.selectedRecord[\"nsampleqty\"]}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n              strict={true}\r\n              min={0}\r\n              //max={99999999.99}\r\n              maxLength={11}\r\n              onChange={(value) => props.onNumericInputChange(value, \"nsampleqty\")}\r\n              noStyle={true}\r\n              precision={2}\r\n              //isMandatory={true}\r\n              className=\"form-control\"\r\n              errors=\"Please provide a valid number.\"\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormSelectSearch\r\n              name={\"nunitcode\"}\r\n              formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n              options={props.unitMaster}\r\n              value={props.selectedRecord[\"nunitcode\"]}\r\n              isMandatory={false}\r\n              isClearable={false}\r\n              isMulti={false}\r\n              isSearchable={true}\r\n              isDisabled={true}\r\n              closeMenuOnSelect={true}\r\n              onChange={(event) => props.onComboChange(event, 'nunitcode', 4)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        :\r\n        <></>\r\n      }\r\n      <Row>\r\n\r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nstoragecategorycode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.storageCategory}\r\n            value={props.selectedRecord[\"nstoragecategorycode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nstoragecategorycode', 4)}\r\n          />\r\n        </Col>\r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nsamplestoragelocationcode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_STORAGELOCATION\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.approvedLocation}\r\n            value={props.selectedRecord[\"nsamplestoragelocationcode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nsamplestoragelocationcode', 5)}\r\n          />\r\n        </Col>\r\n        <Col md={12}>\r\n          <TreeViewEditable\r\n            id=\"samplestoragelocation\"\r\n            name=\"samplestoragelocation\"\r\n            placeholder=\"Enter samplestoragelocation\"\r\n            data={props.treeData}\r\n            expandIcons={true}\r\n            selectField={'active-node'}\r\n            item={props.itemRender}\r\n            onExpandChange={props.onExpandChange}\r\n            onItemClick={props.onItemClick}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>)\r\n}\r\nexport default injectIntl(AddTreeview);\r\n"]},"metadata":{},"sourceType":"module"}