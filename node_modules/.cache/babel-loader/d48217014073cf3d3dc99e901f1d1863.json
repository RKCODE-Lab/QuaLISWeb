{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN,UPDATE_LANGUAGE,REQUEST_INIT}from'./LoginTypes';import rsapi from\"../rsapi\";import{intl,createIntlReinitilize}from'../components/App';import Axios from'axios';import{toast}from'react-toastify';import{constructjsonOptionList,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{getHomeDashBoard}from'./DashBoardTypeAction';import{getListStaticDashBoard}from'./StaticDashBoardAction';import{getListAlert}from'./AlertViewAction';import{getRandomColor}from'../components/header/headerutils';import{loadMessages}from'@progress/kendo-react-intl';import messages_ru from'../assets/translations/ru.json';import messages_tg from'../assets/translations/tg.json';import messages_en from'../assets/translations/en.json';import messages_de from'../assets/translations/de.json';import{transactionStatus}from'../components/Enumeration';var messages={'en-US':messages_en,'ko-KR':messages_de,'ru-RU':messages_ru,'tg-TG':messages_tg};export var initRequest=function initRequest(loading){return{type:REQUEST_INIT,payload:loading};};export var navPage=function navPage(data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{navigation:data}});};};export var changeLanguage=function changeLanguage(language,selectedRecord,loginType){return function(dispatch){var loginTypeMap=constructjsonOptionList(loginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,language);createIntlReinitilize(language);//ALPD-715 Fix\ndispatch({type:UPDATE_LANGUAGE,payload:_defineProperty({language:language,selectedRecord:selectedRecord,loginTypeList:loginTypeMap.get(\"OptionList\")},\"selectedRecord\",_objectSpread(_objectSpread({},selectedRecord),{},{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\"}))});};};export var clickOnLoginButton=function clickOnLoginButton(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputData.url,inputData).then(function(response){var returnStr=response.data[\"rtn\"];if(returnStr.toUpperCase()===\"SUCCESS\"){var responseData=response.data;var PassFlag=responseData.PassFlag;languageList&&languageList.map(function(x){loadMessages(messages[inputData.slanguagetypecode],inputData.slanguagetypecode);});dispatch({type:DEFAULT_RETURN,payload:{openCPModal:response.data.PassFlag===transactionStatus.UNLOCK||PassFlag===transactionStatus.EXPIRED?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:PassFlag===transactionStatus.UNLOCK?\"IDS_CREATEPASSWORD\":PassFlag===transactionStatus.EXPIRED?\"IDS_CHANGEPASSWORD\":\"\",PassFlag:PassFlag,userInfo:response.data.UserInfo// userInfo: {\n//     nlogintypecode: inputData.nlogintypecode\n// }\n}});if(responseData.PassFlag!==transactionStatus.UNLOCK&&responseData.PassFlag!==transactionStatus.EXPIRED){var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,navigation:inputData.navigation,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,settings:responseData.Settings,sdmselnsettings:responseData.SDMSELNSettings,hideQualisForms:responseData.HideQualisForms,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,isDeputyLogin:false,loading:false,userImagePath:responseData.UserImagePath,//profileColor: \"#002699\",\nprofileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(responseData.UserInfo,1));// dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\ndispatch(getListAlert(responseData.UserInfo,true));if(responseData.PasswordAlertDay){toast.info(intl.formatMessage({id:\"IDS_PASSWORDEXPIRY\"})+\" \"+responseData.PasswordAlertDay+\" \"+intl.formatMessage({id:\"IDS_DAY\"}));}}}else{toast.warn(intl.formatMessage({id:returnStr}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitChangeRole=function submitChangeRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getuserscreenrightsmenu\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{userInfo:response.data.UserInfo,menuDesign:response.data.MenuDesign,userRoleControlRights:response.data.UserRoleControlRights,userMultiRole:response.data.UserMultiRole,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,loading:false,masterData:[],displayName:\"\",navigation:\"home\",inputParam:{},openRoleBox:false}});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var updateStore=function updateStore(updateInfo){return function(dispatch){if(updateInfo.data.loadEsign===true){var currentTimeUrl=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});var reasonUrl=rsapi.post(\"/reason/getReason\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});dispatch(initRequest(true));Axios.all([currentTimeUrl,reasonUrl]).then(function(response){var reasonMap=constructOptionList(response[1].data||[],\"nreasoncode\",\"sreason\",undefined,undefined,false);var reasonList=reasonMap.get(\"OptionList\");dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({serverTime:rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo,response[0].data),esignReasonList:reasonList},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined})});}};};export var getChangeUserRole=function getChangeUserRole(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getchangerole\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getLoginDetails=function getLoginDetails(){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginInfo\",{}).then(function(response){// let loginType = [];\n// response.data.LoginType.map(type => {\n//     loginType\n// })\nvar languageMap=constructOptionList(response.data.Language||[],\"slanguagetypecode\",\"slanguagename\",false,false,true);var defaultLanguage=languageMap.get(\"DefaultValue\")?languageMap.get(\"DefaultValue\"):undefined;var languageCode=defaultLanguage?defaultLanguage.value:\"en-US\";var loginTypeMap=constructjsonOptionList(response.data.LoginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,languageCode);dispatch({type:DEFAULT_RETURN,payload:{loginTypes:response.data.LoginType,loginTypeList:loginTypeMap.get(\"OptionList\"),languageList:languageMap.get(\"OptionList\"),selectedRecord:{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\",nlanguagecode:defaultLanguage||\"\"},language:defaultLanguage.value,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getUserSiteAndRole=function getUserSiteAndRole(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginvalidation\",_objectSpread({},inputParam)).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");var loggeInLoginTypeCode=response.data.Users.nlogintypecode;var logintypecode=inputParam.logintype.filter(function(x){return x.value===loggeInLoginTypeCode;});if(inputParam.logintype.length>0&&logintypecode.length===0){logintypecode=inputParam.logintype;loggeInLoginTypeCode=logintypecode[0].value;}dispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\"}),openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{},userInfo:{nlogintypecode:loggeInLoginTypeCode}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var createPassword=function createPassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/createnewpassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{}}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCREATEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changepassword=function changepassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changepassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{},navigation:\"login\"}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCHANGEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getPassWordPolicy=function getPassWordPolicy(nuserrolecode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getPassWordPolicy\",{nuserrolecode:nuserrolecode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,createPwdRecord:{},screenName:\"IDS_CHANGEPASSWORD\",passwordPolicy:response.data.PasswordPolicy}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changeOwner=function changeOwner(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changeOwner\",_objectSpread({},inputData)).then(function(response){var responseData=response.data;var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,isDeputyLogin:true,// settings: responseData.Settings,\n// deputyUser: response.data.DeputyUser,\n// deputyUserRole: response.data.DeputyUserRole,\nloading:false,masterData:[],navigation:\"home\",inputParam:{},openRoleBox:false,userImagePath:responseData.UserImagePath,profileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var logOutAuditAction=function logOutAuditAction(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/insertAuditAction',_objectSpread(_objectSpread({},inputData),{},{nFlag:2})).then(function(response){languageList&&languageList.map(function(x){loadMessages({},x.slanguagetypecode);});dispatch(navPage(\"login\"));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var elnLoginAction=function elnLoginAction(inputParam,serverUrl,uiUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.objResponse!==null){if(response.data.objResponse.status){if(uiUrl){var user=response;var elnURL=uiUrl+\"#\"+user.data.username+\"$\"+user.data.password;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}}else{toast.info(response.data.objResponse.information);}// if(!$(\"#appsdetails\").is(\":hidden\")){\n//     $('#appsdetails').addClass(\"dp-none\");\n// }\n};}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var sdmsLoginAction=function sdmsLoginAction(inputParam,serverUrl,sdmsUIUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.status){if(response.data.status){var sdmsURL=sdmsUIUrl+\"?un=\"+response.data.username+\"&pd=\"+response.data.password+\"&sc=\"+inputParam.sSiteCode;window.open(sdmsURL,'_blank');}else{toast.info(response.Message);}}else{toast.info(intl.FormattedMessage({id:\"IDS_CHECKSYNCSERVICE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var getUsersiteRole=function getUsersiteRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/changeSite',{\"usersSite\":inputParam.selectedRecord.nusersitecode.item}).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:roleMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var checkPassword=function checkPassword(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getlogintypevalidation\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusercode:response.data.Users.nusercode}),userInfo:{nlogintypecode:inputParam.nlogintypecode},openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LoginAction.js"],"names":["DEFAULT_RETURN","UPDATE_LANGUAGE","REQUEST_INIT","rsapi","intl","createIntlReinitilize","Axios","toast","constructjsonOptionList","constructOptionList","rearrangeDateFormat","getHomeDashBoard","getListStaticDashBoard","getListAlert","getRandomColor","loadMessages","messages_ru","messages_tg","messages_en","messages_de","transactionStatus","messages","initRequest","loading","type","payload","navPage","data","dispatch","navigation","changeLanguage","language","selectedRecord","loginType","loginTypeMap","undefined","loginTypeList","get","nlogintypecode","clickOnLoginButton","inputData","languageList","post","url","then","response","returnStr","toUpperCase","responseData","PassFlag","map","x","slanguagetypecode","openCPModal","UNLOCK","EXPIRED","passwordPolicy","PasswordPolicy","screenName","userInfo","UserInfo","inputParam","menuDesign","MenuDesign","userRoleControlRights","UserRoleControlRights","userFormControlProperties","UserFormControlproperties","transactionValidation","TransactionValidation","displayName","userMultiRole","UserMultiRole","settings","Settings","sdmselnsettings","SDMSELNSettings","hideQualisForms","HideQualisForms","deputyUser","DeputyUser","deputyUserRole","DeputyUserRole","isDeputyLogin","userImagePath","UserImagePath","profileColor","idleneed","PasswordAlertDay","info","formatMessage","id","warn","catch","error","status","message","submitChangeRole","masterData","openRoleBox","updateStore","updateInfo","loadEsign","currentTimeUrl","screenData","userinfo","reasonUrl","all","reasonMap","reasonList","typeName","serverTime","esignReasonList","masterStatus","errorCode","getChangeUserRole","getLoginDetails","languageMap","Language","defaultLanguage","languageCode","value","LoginType","loginTypes","nlanguagecode","getUserSiteAndRole","roleMap","siteMap","Site","loggeInLoginTypeCode","Users","logintypecode","logintype","filter","length","loginUserRole","loginUserSite","nusermultirolecode","nusersitecode","nusercode","createPwdRecord","createPassword","success","changepassword","getPassWordPolicy","nuserrolecode","changeOwner","logOutAuditAction","nFlag","elnLoginAction","serverUrl","uiUrl","objResponse","user","elnURL","username","password","window","open","FormattedMessage","information","sdmsLoginAction","sdmsUIUrl","sdmsURL","sSiteCode","Message","getUsersiteRole","item","checkPassword"],"mappings":"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","sourcesContent":["import {DEFAULT_RETURN, UPDATE_LANGUAGE,REQUEST_INIT} from './LoginTypes';\r\nimport rsapi from \"../rsapi\";\r\nimport {intl, createIntlReinitilize} from '../components/App';\r\nimport Axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {constructjsonOptionList, constructOptionList, rearrangeDateFormat} from '../components/CommonScript';\r\nimport {getHomeDashBoard} from './DashBoardTypeAction';\r\nimport {getListStaticDashBoard} from './StaticDashBoardAction';\r\nimport {getListAlert} from './AlertViewAction'\r\nimport {getRandomColor} from '../components/header/headerutils';\r\n\r\nimport { loadMessages } from '@progress/kendo-react-intl';\r\n\r\nimport messages_ru from '../assets/translations/ru.json';\r\nimport messages_tg from '../assets/translations/tg.json';\r\nimport messages_en from '../assets/translations/en.json';\r\nimport messages_de from '../assets/translations/de.json';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg\r\n}\r\n\r\n\r\nexport const initRequest = (loading) => {\r\n    return {\r\n        type: REQUEST_INIT,\r\n        payload: loading\r\n    }\r\n}\r\n\r\nexport const navPage = (data) => dispatch => {\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: {\r\n            navigation: data\r\n        }\r\n    });\r\n}\r\n\r\nexport const changeLanguage = (language, selectedRecord, loginType) => (dispatch) => {\r\n    const loginTypeMap = constructjsonOptionList(loginType || [], \"nlogintypecode\",\r\n        \"sdisplayname\", false, false, true, undefined, 'jsondata', true, language);\r\n        createIntlReinitilize(language);  //ALPD-715 Fix\r\n    dispatch({\r\n        type: UPDATE_LANGUAGE,\r\n        payload: {\r\n            language,\r\n            selectedRecord,\r\n            loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n            selectedRecord: {\r\n                ...selectedRecord,\r\n                nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const clickOnLoginButton = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputData.url, inputData)\r\n            .then(response => {\r\n                const returnStr = response.data[\"rtn\"];\r\n                if (returnStr.toUpperCase() === \"SUCCESS\") {\r\n                    const responseData = response.data;\r\n                    const PassFlag = responseData.PassFlag;\r\n\r\n                    languageList &&\r\n                        languageList.map(x => {\r\n                            loadMessages(messages[inputData.slanguagetypecode], inputData.slanguagetypecode);\r\n                        })\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openCPModal: response.data.PassFlag === transactionStatus.UNLOCK || PassFlag === transactionStatus.EXPIRED ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: PassFlag === transactionStatus.UNLOCK ? \"IDS_CREATEPASSWORD\" : PassFlag === transactionStatus.EXPIRED ? \"IDS_CHANGEPASSWORD\" : \"\",\r\n                            PassFlag,\r\n                            userInfo: response.data.UserInfo,\r\n                            // userInfo: {\r\n                            //     nlogintypecode: inputData.nlogintypecode\r\n                            // }\r\n                        }\r\n                    });\r\n                    if (responseData.PassFlag !== transactionStatus.UNLOCK && responseData.PassFlag !== transactionStatus.EXPIRED) {\r\n                        const inputParam = {\r\n                            userInfo: responseData.UserInfo,\r\n                            menuDesign: responseData.MenuDesign,\r\n                            navigation: inputData.navigation,\r\n                            userRoleControlRights: responseData.UserRoleControlRights,\r\n                            userFormControlProperties: responseData.UserFormControlproperties,\r\n                            transactionValidation: responseData.TransactionValidation,\r\n                            displayName: \"\",\r\n                            userMultiRole: responseData.UserMultiRole,\r\n                            settings: responseData.Settings,\r\n                            sdmselnsettings: responseData.SDMSELNSettings,\r\n                            hideQualisForms:responseData.HideQualisForms,\r\n                            deputyUser: response.data.DeputyUser,\r\n                            deputyUserRole: response.data.DeputyUserRole,\r\n                            isDeputyLogin: false,\r\n                            loading: false,\r\n                            userImagePath: responseData.UserImagePath,\r\n                            //profileColor: \"#002699\",\r\n                            profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                            idleneed: true\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: inputParam\r\n                        });\r\n\r\n                        dispatch(getListStaticDashBoard(responseData.UserInfo, 1));\r\n                        // dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\r\n                        dispatch(getListAlert(responseData.UserInfo, true));\r\n                        if (responseData.PasswordAlertDay) {\r\n                            toast.info(intl.formatMessage({\r\n                                id: \"IDS_PASSWORDEXPIRY\"\r\n                            }) + \" \" + responseData.PasswordAlertDay + \" \" + intl.formatMessage({\r\n                                id: \"IDS_DAY\"\r\n                            }))\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: returnStr\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitChangeRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getuserscreenrightsmenu\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userInfo: response.data.UserInfo,\r\n                        menuDesign: response.data.MenuDesign,\r\n                        userRoleControlRights: response.data.UserRoleControlRights,\r\n                        userMultiRole: response.data.UserMultiRole,\r\n                        deputyUser: response.data.DeputyUser,\r\n                        deputyUserRole: response.data.DeputyUserRole,\r\n                        loading: false,\r\n                        masterData: [],\r\n                        displayName: \"\",\r\n                        navigation: \"home\",\r\n                        inputParam: {},\r\n                        openRoleBox: false\r\n                    }\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStore = (updateInfo) => dispatch => {\r\n    if (updateInfo.data.loadEsign === true) {\r\n      \r\n        const currentTimeUrl = rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n                                \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo});\r\n        const reasonUrl = rsapi.post(\"/reason/getReason\", {\r\n                                    \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo});\r\n        dispatch(initRequest(true));\r\n        Axios.all([currentTimeUrl, reasonUrl])\r\n            .then(response => {\r\n\r\n                const reasonMap = constructOptionList(response[1].data || [], \"nreasoncode\",\r\n                                        \"sreason\", undefined, undefined, false);\r\n                const reasonList = reasonMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: updateInfo.typeName,\r\n                    payload: {\r\n                        serverTime: rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo, response[0].data),\r\n                        esignReasonList:reasonList,\r\n                        ...updateInfo.data,\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: updateInfo.typeName,\r\n            payload: {\r\n                ...updateInfo.data,\r\n                masterStatus: \"\",\r\n                errorCode: undefined\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getChangeUserRole = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getchangerole\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getLoginDetails = () => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginInfo\", {})\r\n            .then(response => {\r\n                // let loginType = [];\r\n                // response.data.LoginType.map(type => {\r\n                //     loginType\r\n                // })\r\n                const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n                let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n                let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n                const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginTypes: response.data.LoginType,\r\n                        loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n                        languageList: languageMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n                            nlanguagecode: defaultLanguage || \"\"\r\n                        },\r\n                        language: defaultLanguage.value,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserSiteAndRole = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginvalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                const siteMap = constructOptionList(response.data.Site || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                    logintypecode = inputParam.logintype;\r\n                    loggeInLoginTypeCode = logintypecode[0].value;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        loginUserSite: siteMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                            nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                            nusercode: response.data.Users.nusercode,\r\n                            nlogintypecode: logintypecode ? logintypecode[0] : \"\"\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {},\r\n                        userInfo: {\r\n                            nlogintypecode: loggeInLoginTypeCode\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createPassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/createnewpassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCREATEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changepassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changepassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        navigation: \"login\"\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCHANGEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getPassWordPolicy = (nuserrolecode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getPassWordPolicy\", {\r\n            nuserrolecode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        screenName: \"IDS_CHANGEPASSWORD\",\r\n                        passwordPolicy: response.data.PasswordPolicy\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeOwner = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changeOwner\", {\r\n            ...inputData\r\n        })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const inputParam = {\r\n                    userInfo: responseData.UserInfo,\r\n                    menuDesign: responseData.MenuDesign,\r\n                    userRoleControlRights: responseData.UserRoleControlRights,\r\n                    userFormControlProperties: responseData.UserFormControlproperties,\r\n                    transactionValidation: responseData.TransactionValidation,\r\n                    displayName: \"\",\r\n                    userMultiRole: responseData.UserMultiRole,\r\n                    isDeputyLogin: true,\r\n                    // settings: responseData.Settings,\r\n                    // deputyUser: response.data.DeputyUser,\r\n                    // deputyUserRole: response.data.DeputyUserRole,\r\n                    loading: false,\r\n                    masterData: [],\r\n                    navigation: \"home\",\r\n                    inputParam: {},\r\n                    openRoleBox: false,\r\n                    userImagePath: responseData.UserImagePath,\r\n                    profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                    idleneed: true\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: inputParam\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOutAuditAction = (inputData,languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/insertAuditAction', {\r\n            ...inputData,\r\n            nFlag: 2\r\n        })\r\n            .then(response => {\r\n                languageList &&\r\n                languageList.map(x => {\r\n                    loadMessages({}, x.slanguagetypecode);\r\n                })\r\n                dispatch(navPage(\"login\"))\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const elnLoginAction = (inputParam, serverUrl, uiUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.objResponse !== null) {\r\n                    if (response.data.objResponse.status) {\r\n                        if (uiUrl) {\r\n                            let user = response;\r\n                            let elnURL = uiUrl + \"#\" + user.data.username + \"$\" + user.data.password;\r\n                            window.open(elnURL, '_blank');\r\n                        } else {\r\n                            toast.info(intl.FormattedMessage({\r\n                                id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                            }))\r\n                        }\r\n                    } else {\r\n                        toast.info(response.data.objResponse.information);\r\n                    }\r\n                    // if(!$(\"#appsdetails\").is(\":hidden\")){\r\n                    //     $('#appsdetails').addClass(\"dp-none\");\r\n                    // }\r\n                };\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const sdmsLoginAction = (inputParam, serverUrl, sdmsUIUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.status) {\r\n                    if (response.data.status) {\r\n                        const sdmsURL = sdmsUIUrl + \"?un=\" + response.data.username + \"&pd=\" + response.data.password + \"&sc=\" + inputParam.sSiteCode;\r\n                        window.open(sdmsURL, '_blank');\r\n                    } else {\r\n                        toast.info(response.Message);\r\n                    }\r\n                } else {\r\n                    toast.info(intl.FormattedMessage({\r\n                        id: \"IDS_CHECKSYNCSERVICE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersiteRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/changeSite', {\r\n            \"usersSite\": inputParam.selectedRecord.nusersitecode.item\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\"\r\n\r\n\r\n                        },\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkPassword = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getlogintypevalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusercode: response.data.Users.nusercode\r\n                        },\r\n                        userInfo: {\r\n                            nlogintypecode: inputParam.nlogintypecode\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}