{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData, constructOptionList, parentChildComboLoad, rearrangeDateFormat } from '../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { attachmentType, transactionStatus } from '../components/Enumeration';\nexport function initialcombochangeget(nmaterialtypecode, data, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/material/getMaterialcombo\", {\n      nmaterialtypecode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      const masterData = { ...data,\n        ...response.data,\n        searchedData: undefined\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function getAddMaterialPopup(operation, userInfo, selectedcombo, ncontrolCode, masterData, selectedRecord) {\n  return function (dispatch) {\n    if (masterData.SelectedMaterialCategory.length !== 0) {\n      if (operation === \"create\") {\n        let urlArray = [];\n        let templateData = [];\n        let data = [];\n        let toggleComponents = [];\n        let filterQueryComponents = [];\n        let dataparent = [];\n        const withoutCombocomponent = [];\n        const Layout = masterData.selectedTemplate[0].sjsonobjstr;\n        Layout.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              if (component.hasOwnProperty(\"parent\")) {\n                dataparent.push(component);\n              }\n\n              if (component.inputtype === 'toggle') {\n                toggleComponents.push(component);\n              }\n\n              if (component.hasOwnProperty(\"nsqlquerycode\")) {\n                filterQueryComponents.push(component);\n              }\n\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === 'toggle') {\n                  toggleComponents.push(componentrow);\n                }\n\n                if (componentrow.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\")) {\n                  if (componentrow.hasOwnProperty(\"parent\")) {\n                    dataparent.push(componentrow);\n                  } else {\n                    data.push(componentrow);\n                  }\n                }\n\n                if (componentrow.hasOwnProperty(\"nsqlquerycode\")) {\n                  filterQueryComponents.push(componentrow);\n                }\n              }) : component.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\") ? data.push(component) : withoutCombocomponent.push(component);\n            });\n          });\n        });\n        const comboComponents = data;\n        dataparent[0] = {\n          displaymember: dataparent[0].displaymember,\n          inputtype: dataparent[0].inputtype,\n          label: dataparent[0].label,\n          source: dataparent[0].source,\n          type: dataparent[0].type,\n          valuemember: dataparent[0].valuemember\n        };\n        let filterQueryComponents1 = [];\n        filterQueryComponents.map(temp => {\n          filterQueryComponents1.push({\n            'nsqlquerycode': temp.nsqlquerycode\n          });\n        });\n        const materialReq1 = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n          \"nmaterialtypecode\": selectedcombo[\"nmaterialtypecode\"].value,\n          \"userinfo\": userInfo,\n          \"parentcolumnlist\": comboComponents,\n          \"filterQueryComponents\": filterQueryComponents1\n        });\n        const materialReq2 = rsapi.post('dynamicpreregdesign/getChildValues', {\n          child: Layout[0].children[0].children[0].childValue,\n          parentdata: {\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value\n          },\n          parentsource: 'materialcategory',\n          'nmaterialtypecode': selectedcombo.nmaterialtypecode.value,\n          valuemember: 'nmaterialtypecode',\n          userInfo,\n          parentcolumnlist: dataparent\n        });\n        urlArray = [materialReq1, materialReq2];\n        dispatch(initRequest(true));\n        Axios.all(urlArray).then(response => {\n          templateData = response[0].data;\n          data.splice(1, 0, dataparent[0]);\n          const temp2 = { ...response[0].data,\n            ...response[1].data\n          };\n          templateData = parentChildComboLoad(data, temp2, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode);\n          toggleComponents.map(temp => {\n            if (temp.hasOwnProperty('defaultchecked') && temp.defaultchecked === transactionStatus.YES) {\n              templateData['selectedRecord'] = { ...templateData['selectedRecord'],\n                [temp.label]: temp.defaultchecked\n              };\n            }\n          });\n          selectedRecord = templateData['selectedRecord'];\n          selectedRecord['IDS_EXPIRY'] = transactionStatus.NO;\n          selectedRecord['IDS_NEEDEXPIRY'] = transactionStatus.NO;\n          selectedRecord['IDS_OPENEXIPIRYNEED'] = transactionStatus.NO; // if(selectedRecord['IDS_EXPIRY'])\n          // {\n          //     if(selectedRecord['IDS_EXPIRY']===transactionStatus.NO)\n          //     {\n          //         selectedRecord['IDS_NEEDEXPIRY']=transactionStatus.NO\n          //     } \n          // }\n\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              operation,\n              screenname: 'IDS_MATERIAL',\n              selectedRecord,\n              showMaterialSection: false,\n              templateData,\n              openModal: true,\n              selectedcombo,\n              ncontrolCode,\n              loading: false\n            }\n          });\n        }).catch(error => {\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n\n          if (error.response.status === 500) {\n            toast.error(intl.formatMessage({\n              id: error.message\n            }));\n          } else {\n            toast.warn(intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      } else {\n        let urlArray = [];\n        let templateData = [];\n        let data = [];\n        let dataparent = [];\n        const withoutCombocomponent = [];\n        const Layout = masterData.selectedTemplate[0].sjsonobjstr;\n        Layout.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              if (component.hasOwnProperty(\"parent\")) {\n                dataparent.push(component);\n              }\n\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\")) {\n                  if (componentrow.hasOwnProperty(\"parent\")) {\n                    dataparent.push(componentrow);\n                  } else {\n                    data.push(componentrow);\n                  }\n                }\n              }) : component.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\") ? data.push(component) : withoutCombocomponent.push(component);\n            });\n          });\n        });\n        const comboComponents = data;\n        const Material = rsapi.post(\"/material/getMaterialEdit\", {\n          'nmaterialcode': masterData.SelectedMaterial.jsondata.nmaterialcode,\n          \"userinfo\": userInfo\n        });\n        dataparent[0] = {\n          displaymember: dataparent[0].displaymember,\n          inputtype: dataparent[0].inputtype,\n          label: dataparent[0].label,\n          source: dataparent[0].source,\n          type: dataparent[0].type,\n          valuemember: dataparent[0].valuemember\n        };\n        const materialReq1 = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n          \"nmaterialtypecode\": selectedcombo[\"nmaterialtypecode\"].value,\n          \"userinfo\": userInfo,\n          \"parentcolumnlist\": comboComponents\n        });\n        const materialReq2 = rsapi.post('dynamicpreregdesign/getChildValues', {\n          child: Layout[0].children[0].children[0].childValue,\n          parentdata: {\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value\n          },\n          parentsource: 'materialcategory',\n          'nmaterialtypecode': selectedcombo.nmaterialtypecode.value,\n          valuemember: 'nmaterialtypecode',\n          userInfo,\n          parentcolumnlist: dataparent\n        });\n        urlArray = [materialReq1, materialReq2, Material];\n        dispatch(initRequest(true));\n        Axios.all(urlArray).then(response => {\n          templateData = response[0].data;\n          data = [...data, ...dataparent];\n          templateData = parentChildComboLoad(data, { ...response[0].data,\n            ...response[1].data\n          }, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode);\n          selectedRecord = response[2].data.EditedMaterial[0].jsondata;\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              operation,\n              screenname: 'IDS_MATERIAL',\n              isSelectedRecordChange: false,\n              showMaterialSection: false,\n              templateData,\n              openModal: true,\n              selectedcombo,\n              selectedRecord,\n              ncontrolCode,\n              loading: false\n            }\n          });\n        }).catch(error => {\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n\n          if (error.response.status === 500) {\n            toast.error(intl.formatMessage({\n              id: error.message\n            }));\n          } else {\n            toast.warn(intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      }\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_CONFIGMATERIAL\"\n      }));\n    }\n  };\n}\nexport function getMaterialDetails(inputData, masterData, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"material/getMaterialDetails\", {\n      \"nmaterialcode\": inputData.nmaterialcode,\n      \"nmaterialcatcode\": inputData.nmaterialcatcode,\n      \"nmaterialtypecode\": inputData.nmaterialtypecode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getMaterialEdit(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    let urlArray = [];\n\n    if (operation === \"create\") {\n      const EDQMManufacturer = rsapi.post(\"/edqmmanufacturer/getEDQMManufacturer\", {\n        \"userinfo\": userInfo\n      });\n      urlArray = [EDQMManufacturer];\n    } else {\n      const Material = rsapi.post(\"/material/getMaterialEdit\", {\n        [primaryKeyName]: masterData.SelectedMaterial.jsondata.nmaterialcode,\n        \"userinfo\": userInfo\n      });\n      urlArray = [Material];\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let selectedRecord = {};\n\n      if (operation === \"update\") {\n        selectedRecord = response[2].data.EditedMaterial[0].jsondata;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          isOpen: true,\n          selectedRecord: operation === \"update\" ? selectedRecord : {\n            \"ntransactionstatus\": 1\n          },\n          operation: operation,\n          screenName: screenName,\n          openModal: true,\n          ncontrolCode: ncontrolCode,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getMaterialByTypeCode(selectedcombo, selectedMaterialCat, Data, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/material/getMaterialByTypeCode\", selectedMaterialCat !== undefined ? {\n      nmaterialtypecode: selectedcombo['nmaterialtypecode'].value,\n      nmaterialcatcode: selectedMaterialCat['nmaterialcatcode'].value,\n      \"userinfo\": userInfo\n    } : {\n      nmaterialtypecode: selectedcombo['nmaterialtypecode'].value,\n      \"userinfo\": userInfo\n    }).then(response => {\n      let masterData = {};\n      let tabScreen;\n\n      if (response[\"data\"].ismaterialSectionneed === 3) {\n        tabScreen = 'IDS_MATERIALSECTION';\n      }\n\n      masterData = { ...Data,\n        ...response.data,\n        tabScreen,\n        searchedData: undefined\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function getMaterialReload(selectedcombo, selectedMaterialCat, Data, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/material/getMaterialByTypeCode\", selectedMaterialCat !== undefined ? {\n      nmaterialtypecode: selectedcombo[0]['nmaterialtypecode'],\n      nmaterialcatcode: selectedMaterialCat['nmaterialcatcode'],\n      \"userinfo\": userInfo\n    } : {\n      nmaterialtypecode: selectedcombo['nmaterialtypecode'].value,\n      \"userinfo\": userInfo\n    }).then(response => {\n      let masterData = {};\n      masterData = { ...Data,\n        ...response.data,\n        searchedData: undefined\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function getAddMaterialSectionPopup(Data, userInfo, updateInfo, ncontrolCode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/material/getMaterialSection\", {\n      \"userinfo\": userInfo,\n      'nmaterialcode': Data[\"SelectedMaterial\"][\"nmaterialcode\"],\n      'needSectionwise': Data[\"SelectedMaterialCategory\"].needSectionwise\n    }).then(response => {\n      let masterData = {};\n\n      if (Array.isArray(response.data)) {\n        let MaterialSectionOptions = [];\n        MaterialSectionOptions = response.data;\n        const productCatMap = constructOptionList(response.data || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n        const productCategoryList = {\n          productCategoryList: productCatMap.get(\"OptionList\")\n        };\n        masterData = { ...Data,\n          ...productCategoryList,\n          searchedData: undefined\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            operation: \"create\",\n            masterData,\n            updateInfo,\n            ncontrolCode,\n            openModal: true,\n            ismaterialsectionEdit: false,\n            isneedcombomulti: false,\n            screenname: \"IDS_MATERIALSECTION\",\n            showMaterialSection: true,\n            loading: false,\n            skip: 0,\n            take: 20\n          }\n        });\n      } else {\n        toast.warn(response.data);\n        masterData = { ...Data,\n          searchedData: undefined\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            operation: \"create\",\n            masterData,\n            updateInfo,\n            openModal: false,\n            ismaterialsectionEdit: false,\n            isneedcombomulti: false,\n            screenname: \"IDS_MATERIALSECTION\",\n            showMaterialSection: true,\n            loading: false,\n            skip: 0,\n            take: 20\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error);\n    });\n  };\n}\nexport function getMaterialSectionEdit(inputparam) {\n  return function (dispatch) {\n    let urlArray = [];\n    let selectedRecord = { ...inputparam.selectedRecord\n    };\n    dispatch(initRequest(true));\n    const url1 = rsapi.post(\"/material/getActiveMaterialSectionById\", {\n      editRow: inputparam[\"editRow\"],\n      ncontrolCode: inputparam.ncontrolCode,\n      operation: inputparam.operation,\n      primaryKeyField: \"nmaterialsectioncode\",\n      primaryKeyValue: inputparam.primaryKeyValue,\n      \"userinfo\": inputparam.userInfo\n    });\n    const url2 = rsapi.post(\"/material/getMaterialSection\", {\n      \"userinfo\": inputparam.userInfo,\n      nmaterialcode: inputparam[\"editRow\"].nmaterialcode,\n      primaryKeyValue: inputparam.primaryKeyValue,\n      needSectionwise: inputparam.masterData[\"SelectedMaterialCategory\"].needSectionwise,\n      nmaterialsectioncode: inputparam['editRow'].nmaterialsectioncode //,nflag:1\n\n    });\n    urlArray = [url1, url2];\n    Axios.all(urlArray).then(response => {\n      const productCatMap = constructOptionList(response[0].data.MaterialSectionEditData || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      selectedRecord[\"nmaterialsectioncode\"] = productCatMap.get(\"OptionList\");\n      selectedRecord[\"nreorderlevel\"] = inputparam[\"editRow\"].nreorderlevel;\n      selectedRecord[\"nmaterialsectioncodeprimaryKeyValue\"] = inputparam.primaryKeyValue;\n\n      if (!Array.isArray(response[1].data)) {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            isOpen: true,\n            selectedRecord,\n            operation: \"update\",\n            isneedcombomulti: true,\n            openModal: true,\n            showMaterialSection: true,\n            ismaterialsectionEdit: true,\n            screenname: \"IDS_MATERIALSECTION\",\n            ncontrolCode: inputparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }\n\n      const productCatMap1 = constructOptionList(response[1].data || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const productCategoryList2 = {\n        productCategoryList: productCatMap1.get(\"OptionList\")\n      }; //productCategoryList2['productCategoryList']={...selectedRecord[\"nmaterialsectioncode\"]}\n\n      let masterData = {};\n      masterData = { ...inputparam.masterData,\n        ...productCategoryList2,\n        searchedData: undefined\n      };\n\n      if (Array.isArray(response[1].data)) {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            isOpen: true,\n            selectedRecord,\n            masterData,\n            operation: \"update\",\n            isneedcombomulti: true,\n            openModal: true,\n            showMaterialSection: true,\n            ismaterialsectionEdit: true,\n            screenname: \"IDS_MATERIALSECTION\",\n            ncontrolCode: inputparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function addSafetyInstructions(Data, userInfo, ncontrolcode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/material/getMaterialSafetyInstructions\", {\n      'nmaterialcode': Data[\"SelectedMaterial\"][\"jsondata\"].nmaterialcode,\n      \"userinfo\": userInfo,\n      nflag: 1\n    }).then(response => {\n      if (Array.isArray(response.data[\"selectedTemplateSafetyInstructions\"])) {\n        let selectedRecord = response.data[\"MaterialSafetyInstructions\"].length > 0 ? response.data[\"MaterialSafetyInstructions\"][0].jsondata : [];\n        let masterData = {};\n        const MaterialSafetyInstructions = {\n          MaterialSafetyInstructions: response.data[\"MaterialSafetyInstructions\"]\n        };\n        masterData = { ...Data,\n          ...MaterialSafetyInstructions,\n          searchedData: undefined\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false,\n            loadEsign: false,\n            selectedRecord,\n            ncontrolCode: ncontrolcode,\n            openModal: true,\n            screenname: \"IDS_MATERIALSAFETYINSTRUCTIONS\"\n          }\n        });\n      } else {\n        toast.warn(response.data);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function addMaterialProperty(Data, userInfo, ncontrolcode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let urlArray = [];\n    let date;\n    const timezone = rsapi.post(\"timezone/getTimeZone\");\n    const getMaterialSafety = rsapi.post(\"/material/getMaterialSafetyInstructions\", {\n      'nmaterialcode': Data[\"SelectedMaterial\"][\"jsondata\"].nmaterialcode,\n      \"userinfo\": userInfo,\n      nflag: 2\n    });\n    urlArray = [getMaterialSafety, timezone];\n    Axios.all(urlArray).then(response => {\n      if (Array.isArray(response[0].data[\"selectedTemplateProperties\"])) {\n        let selectedRecord = response[0].data[\"MaterialProperties\"].length > 0 ? response[0].data[\"MaterialProperties\"][0].jsondata : [];\n        let masterData = {};\n        const MaterialProperties = {\n          MaterialProperties: response[0].data[\"MaterialProperties\"]\n        };\n\n        if (response[0].data[\"MaterialProperties\"].length > 0) {\n          if (response[0].data[\"MaterialPropertiesDateFeild\"]) {\n            response[0].data[\"MaterialPropertiesDateFeild\"].map(temp => {\n              response[0].data[\"MaterialProperties\"][0].jsondata[temp] = rearrangeDateFormat(userInfo, response[0].data[\"MaterialProperties\"][0].jsondata[temp]);\n            });\n          }\n        }\n\n        masterData = { ...Data,\n          ...MaterialProperties,\n          searchedData: undefined\n        };\n        const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\n        const timeZoneList = timeZoneListMap.get(\"OptionList\");\n        response[0].data[\"DateFeildsProperties\"].map(temp => {\n          if (!selectedRecord.hasOwnProperty(temp)) {\n            selectedRecord[`tz${temp}`] = timeZoneList[0];\n          }\n        });\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false,\n            loadEsign: false,\n            selectedRecord,\n            isSelectedRecordChange: false,\n            timeZoneList,\n            ncontrolCode: ncontrolcode,\n            openModal: true,\n            screenname: \"IDS_MATERIALPROPERTY\"\n          }\n        });\n      } else {\n        toast.warn(response.data);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function addMaterialFile(inputParam, param) {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/material/getMaterialLinkMaster\", {\n      nmaterialcode: param.nmaterialcode && param.nmaterialcode,\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/material/editMaterialMsdsAttachment\", {\n        userinfo: inputParam.userInfo,\n        nmaterialcode: param.nmaterialcode && param.nmaterialcode,\n        nmaterialfilecode: inputParam.selectedRecord.nmaterialfilecode\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject[\"jsondata\"].nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject[\"jsondata\"].slinkname,\n            \"value\": editObject[\"jsondata\"].nlinkcode\n          };\n          link = {\n            slinkfilename: editObject[\"jsondata\"].sfilename,\n            slinkdescription: editObject[\"jsondata\"].sdescription,\n            nlinkdefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\";\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject[\"jsondata\"].sfilesize,\n            nfilesize: editObject[\"jsondata\"].nfilesize,\n            ndefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\n            ssystemfilename: editObject[\"jsondata\"].ssystemfilename,\n            sfilename: editObject[\"jsondata\"].sfilename\n          };\n        }\n\n        selectedRecord = { ...link,\n          sdescription: editObject[\"jsondata\"].sdescription,\n          nmaterialfilecode: editObject[\"jsondata\"].nmaterialfilecode,\n          nattachmenttypecode: editObject[\"jsondata\"].nattachmenttypecode,\n          nlinkcode\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          dcreateddate: inputParam.selectedRecord && rearrangeDateFormat(inputParam.userInfo, inputParam.selectedRecord.dcreateddate),\n          operation: inputParam.operation,\n          screenname: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/MaterialAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","constructOptionList","parentChildComboLoad","rearrangeDateFormat","toast","Axios","initRequest","intl","attachmentType","transactionStatus","initialcombochangeget","nmaterialtypecode","data","userInfo","dispatch","post","then","response","masterData","searchedData","undefined","type","payload","loading","catch","error","formatMessage","id","message","getAddMaterialPopup","operation","selectedcombo","ncontrolCode","selectedRecord","SelectedMaterialCategory","length","urlArray","templateData","toggleComponents","filterQueryComponents","dataparent","withoutCombocomponent","Layout","selectedTemplate","sjsonobjstr","map","row","children","column","component","hasOwnProperty","push","inputtype","componentrow","comboComponents","displaymember","label","source","valuemember","filterQueryComponents1","temp","nsqlquerycode","materialReq1","value","materialReq2","child","childValue","parentdata","parentsource","parentcolumnlist","all","splice","temp2","slanguagetypecode","defaultchecked","YES","NO","screenname","showMaterialSection","openModal","status","warn","Material","SelectedMaterial","jsondata","nmaterialcode","EditedMaterial","isSelectedRecordChange","getMaterialDetails","inputData","nmaterialcatcode","getMaterialEdit","screenName","primaryKeyName","EDQMManufacturer","isOpen","getMaterialByTypeCode","selectedMaterialCat","Data","tabScreen","ismaterialSectionneed","skip","take","getMaterialReload","getAddMaterialSectionPopup","updateInfo","needSectionwise","Array","isArray","MaterialSectionOptions","productCatMap","productCategoryList","get","ismaterialsectionEdit","isneedcombomulti","getMaterialSectionEdit","inputparam","url1","editRow","primaryKeyField","primaryKeyValue","url2","nmaterialsectioncode","MaterialSectionEditData","nreorderlevel","productCatMap1","productCategoryList2","addSafetyInstructions","ncontrolcode","nflag","MaterialSafetyInstructions","loadEsign","addMaterialProperty","date","timezone","getMaterialSafety","MaterialProperties","timeZoneListMap","timeZoneList","addMaterialFile","inputParam","param","userinfo","nmaterialfilecode","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","ssystemfilename","AttachmentType","FTP","dcreateddate","linkMaster","showSaveContinue","editFiles"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, constructOptionList, parentChildComboLoad, rearrangeDateFormat } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { attachmentType, transactionStatus } from '../components/Enumeration';\r\n\r\nexport function initialcombochangeget(nmaterialtypecode, data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/material/getMaterialcombo\", { nmaterialtypecode, \"userinfo\": userInfo })\r\n            .then(response => {\r\n                const masterData = { ...data, ...response.data, searchedData: undefined }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function getAddMaterialPopup(operation, userInfo, selectedcombo, ncontrolCode, masterData, selectedRecord) {\r\n    return function (dispatch) {\r\n        if(masterData.SelectedMaterialCategory.length!==0)\r\n       {\r\n        if (operation === \"create\") {\r\n            let urlArray = [];\r\n            let templateData = [];\r\n            let data = [];\r\n            let toggleComponents = [];\r\n            let filterQueryComponents=[];\r\n            let dataparent = [];\r\n            const withoutCombocomponent = []\r\n            const Layout = masterData.selectedTemplate[0].sjsonobjstr\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"parent\")) {\r\n                            dataparent.push(component)\r\n                        }\r\n                        if (component.inputtype==='toggle') {\r\n                            toggleComponents.push(component)\r\n                        }\r\n                        if (component.hasOwnProperty(\"nsqlquerycode\")) {\r\n                            filterQueryComponents.push(component)\r\n                        }\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.inputtype==='toggle') {\r\n                                toggleComponents.push(componentrow)\r\n                            }\r\n                            if (componentrow.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\"))) {\r\n                                if (componentrow.hasOwnProperty(\"parent\")) {\r\n                                    dataparent.push(componentrow)\r\n                                }\r\n                                else {\r\n                                    data.push(componentrow)\r\n                                }\r\n                              \r\n                            }\r\n                            if (componentrow.hasOwnProperty(\"nsqlquerycode\")) {\r\n                                filterQueryComponents.push(componentrow)\r\n                            }\r\n                        })\r\n                            : component.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\")) ? data.push(component) : withoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data\r\n\r\n            dataparent[0] = {\r\n                displaymember: dataparent[0].displaymember,\r\n                inputtype: dataparent[0].inputtype,\r\n                label: dataparent[0].label,\r\n                source: dataparent[0].source,\r\n                type: dataparent[0].type,\r\n                valuemember: dataparent[0].valuemember\r\n            }\r\n            let filterQueryComponents1=[]\r\n            filterQueryComponents.map(temp=>{\r\n                filterQueryComponents1.push({'nsqlquerycode':temp.nsqlquerycode})\r\n            })\r\n            const materialReq1 = rsapi.post(\"dynamicpreregdesign/getComboValues\",\r\n                {\r\n                    \"nmaterialtypecode\": selectedcombo[\"nmaterialtypecode\"].value\r\n                    , \"userinfo\": userInfo, \"parentcolumnlist\": comboComponents,\r\n                    \"filterQueryComponents\":filterQueryComponents1\r\n                });\r\n            const materialReq2 = rsapi.post('dynamicpreregdesign/getChildValues', {\r\n                child: Layout[0].children[0].children[0].childValue,\r\n                parentdata: { nmaterialtypecode: selectedcombo['nmaterialtypecode'].value },\r\n                parentsource: 'materialcategory',\r\n                'nmaterialtypecode': selectedcombo.nmaterialtypecode.value,\r\n                valuemember: 'nmaterialtypecode',\r\n                userInfo,\r\n                parentcolumnlist: dataparent\r\n            });\r\n\r\n            urlArray = [materialReq1, materialReq2];\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    templateData = response[0].data;\r\n                    data.splice(1, 0, dataparent[0])\r\n                    const temp2 = { ...response[0].data, ...response[1].data }\r\n                    templateData = parentChildComboLoad(data, temp2, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode)\r\n                    toggleComponents.map((temp) => {\r\n                        if (temp.hasOwnProperty('defaultchecked') && temp.defaultchecked===transactionStatus.YES ) {\r\n                            templateData['selectedRecord'] = {\r\n                                ...templateData['selectedRecord'],\r\n                                [temp.label]: temp.defaultchecked\r\n                            }\r\n                        }\r\n                    })\r\n                    selectedRecord=templateData['selectedRecord']\r\n                    selectedRecord['IDS_EXPIRY']=transactionStatus.NO\r\n                    selectedRecord['IDS_NEEDEXPIRY']=transactionStatus.NO\r\n                    selectedRecord['IDS_OPENEXIPIRYNEED']=transactionStatus.NO\r\n                    // if(selectedRecord['IDS_EXPIRY'])\r\n                    // {\r\n                    //     if(selectedRecord['IDS_EXPIRY']===transactionStatus.NO)\r\n                    //     {\r\n                    //         selectedRecord['IDS_NEEDEXPIRY']=transactionStatus.NO\r\n                    //     } \r\n                    // }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation, screenname: 'IDS_MATERIAL', selectedRecord, showMaterialSection: false, templateData, openModal: true, selectedcombo,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            let urlArray = [];\r\n            let templateData = [];\r\n            let data = [];\r\n            let dataparent = [];\r\n            const withoutCombocomponent = []\r\n            const Layout = masterData.selectedTemplate[0].sjsonobjstr\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"parent\")) {\r\n                            dataparent.push(component)\r\n                        }\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\"))) {\r\n                                if (componentrow.hasOwnProperty(\"parent\")) {\r\n                                    dataparent.push(componentrow)\r\n                                }\r\n                                else {\r\n                                    data.push(componentrow)\r\n                                }\r\n                            }\r\n                        })\r\n                            : component.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\")) ? data.push(component) : withoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data\r\n            const Material = rsapi.post(\"/material/getMaterialEdit\", { 'nmaterialcode': masterData.SelectedMaterial.jsondata.nmaterialcode, \"userinfo\": userInfo });\r\n            dataparent[0] = {\r\n                displaymember: dataparent[0].displaymember,\r\n                inputtype: dataparent[0].inputtype,\r\n                label: dataparent[0].label,\r\n                source: dataparent[0].source,\r\n                type: dataparent[0].type,\r\n                valuemember: dataparent[0].valuemember\r\n            }\r\n            const materialReq1 = rsapi.post(\"dynamicpreregdesign/getComboValues\",\r\n                {\r\n                    \"nmaterialtypecode\": selectedcombo[\"nmaterialtypecode\"].value\r\n                    , \"userinfo\": userInfo, \"parentcolumnlist\": comboComponents\r\n                });\r\n            const materialReq2 = rsapi.post('dynamicpreregdesign/getChildValues', {\r\n                child: Layout[0].children[0].children[0].childValue,\r\n                parentdata: { nmaterialtypecode: selectedcombo['nmaterialtypecode'].value },\r\n                parentsource: 'materialcategory',\r\n                'nmaterialtypecode': selectedcombo.nmaterialtypecode.value,\r\n                valuemember: 'nmaterialtypecode',\r\n                userInfo,\r\n                parentcolumnlist: dataparent\r\n            });\r\n            urlArray = [materialReq1, materialReq2, Material];\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    templateData = response[0].data;\r\n                    data = [...data, ...dataparent]\r\n                    templateData = parentChildComboLoad(data, { ...response[0].data, ...response[1].data }, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode)\r\n                    selectedRecord = response[2].data.EditedMaterial[0].jsondata\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation, screenname: 'IDS_MATERIAL', isSelectedRecordChange: false, showMaterialSection: false, templateData, openModal: true, selectedcombo, selectedRecord,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    else\r\n    {\r\n        toast.warn(intl.formatMessage({ id: \"IDS_CONFIGMATERIAL\" }));\r\n    }\r\n    }\r\n}\r\n\r\nexport function getMaterialDetails(inputData, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"material/getMaterialDetails\", {\r\n            \"nmaterialcode\": inputData.nmaterialcode,\r\n            \"nmaterialcatcode\": inputData.nmaterialcatcode,\r\n            \"nmaterialtypecode\": inputData.nmaterialtypecode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getMaterialEdit(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        if (operation === \"create\") {\r\n            const EDQMManufacturer = rsapi.post(\"/edqmmanufacturer/getEDQMManufacturer\", { \"userinfo\": userInfo });\r\n            urlArray = [EDQMManufacturer];\r\n        }\r\n        else {\r\n            const Material = rsapi.post(\"/material/getMaterialEdit\", { [primaryKeyName]: masterData.SelectedMaterial.jsondata.nmaterialcode, \"userinfo\": userInfo });\r\n            urlArray = [Material];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n                if (operation === \"update\") {\r\n                    selectedRecord = response[2].data.EditedMaterial[0].jsondata;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        isOpen: true,\r\n                        selectedRecord: operation === \"update\" ? selectedRecord : { \"ntransactionstatus\": 1 },\r\n                        operation: operation,\r\n                        screenName: screenName,\r\n                        openModal: true, ncontrolCode: ncontrolCode, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getMaterialByTypeCode(selectedcombo, selectedMaterialCat, Data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/material/getMaterialByTypeCode\", selectedMaterialCat !== undefined ? {\r\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value,\r\n            nmaterialcatcode: selectedMaterialCat['nmaterialcatcode'].value\r\n            , \"userinfo\": userInfo\r\n        } : {\r\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value\r\n\r\n            , \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                let masterData = {}\r\n                let tabScreen;\r\n                if (response[\"data\"].ismaterialSectionneed === 3) {\r\n                    tabScreen = 'IDS_MATERIALSECTION'\r\n                }\r\n                masterData = { ...Data, ...response.data, tabScreen, searchedData: undefined }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, skip: 0, take: 20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getMaterialReload(selectedcombo, selectedMaterialCat, Data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/material/getMaterialByTypeCode\", selectedMaterialCat !== undefined ? {\r\n            nmaterialtypecode: selectedcombo[0]['nmaterialtypecode'],\r\n            nmaterialcatcode: selectedMaterialCat['nmaterialcatcode']\r\n            , \"userinfo\": userInfo\r\n        } : {\r\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value\r\n\r\n            , \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                let masterData = {}\r\n\r\n                masterData = { ...Data, ...response.data, searchedData: undefined }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, skip: 0, take: 20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getAddMaterialSectionPopup(Data, userInfo, updateInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/material/getMaterialSection\", {\r\n            \"userinfo\": userInfo,\r\n            'nmaterialcode': Data[\"SelectedMaterial\"][\"nmaterialcode\"]\r\n            , 'needSectionwise': Data[\"SelectedMaterialCategory\"].needSectionwise\r\n        })\r\n            .then(response => {\r\n                let masterData = {}\r\n                if (Array.isArray(response.data)) {\r\n                    let MaterialSectionOptions = [];\r\n                    MaterialSectionOptions = response.data\r\n                    const productCatMap = constructOptionList(response.data || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, true);\r\n                    const productCategoryList = { productCategoryList: productCatMap.get(\"OptionList\") };\r\n                    masterData = { ...Data, ...productCategoryList, searchedData: undefined }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation: \"create\",\r\n                            masterData, updateInfo, ncontrolCode, openModal: true, ismaterialsectionEdit: false, isneedcombomulti: false, screenname: \"IDS_MATERIALSECTION\", showMaterialSection: true, loading: false, skip: 0, take: 20\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(response.data);\r\n                    masterData = { ...Data, searchedData: undefined }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation: \"create\",\r\n                            masterData, updateInfo, openModal: false, ismaterialsectionEdit: false, isneedcombomulti: false, screenname: \"IDS_MATERIALSECTION\", showMaterialSection: true, loading: false, skip: 0, take: 20\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getMaterialSectionEdit(inputparam) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        let selectedRecord = { ...inputparam.selectedRecord };\r\n        dispatch(initRequest(true));\r\n        const url1 = rsapi.post(\"/material/getActiveMaterialSectionById\", {\r\n            editRow: inputparam[\"editRow\"],\r\n            ncontrolCode: inputparam.ncontrolCode,\r\n            operation: inputparam.operation,\r\n            primaryKeyField: \"nmaterialsectioncode\",\r\n            primaryKeyValue: inputparam.primaryKeyValue,\r\n            \"userinfo\": inputparam.userInfo\r\n        })\r\n        const url2 = rsapi.post(\"/material/getMaterialSection\", {\r\n            \"userinfo\": inputparam.userInfo,\r\n            nmaterialcode: inputparam[\"editRow\"].nmaterialcode, primaryKeyValue: inputparam.primaryKeyValue,\r\n            needSectionwise: inputparam.masterData[\"SelectedMaterialCategory\"].needSectionwise,\r\n            nmaterialsectioncode:inputparam['editRow'].nmaterialsectioncode\r\n            //,nflag:1\r\n        })\r\n        urlArray = [url1, url2]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const productCatMap = constructOptionList(response[0].data.MaterialSectionEditData || [], \"nsectioncode\",\r\n                    \"ssectionname\", undefined, undefined, true);\r\n                selectedRecord[\"nmaterialsectioncode\"] = productCatMap.get(\"OptionList\");\r\n                selectedRecord[\"nreorderlevel\"] = inputparam[\"editRow\"].nreorderlevel;\r\n                selectedRecord[\"nmaterialsectioncodeprimaryKeyValue\"] = inputparam.primaryKeyValue;\r\n                if (!Array.isArray(response[1].data)) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            isOpen: true,\r\n                            selectedRecord,\r\n                            operation: \"update\",\r\n                            isneedcombomulti: true,\r\n                            openModal: true, showMaterialSection: true, ismaterialsectionEdit: true, screenname: \"IDS_MATERIALSECTION\", ncontrolCode: inputparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                }\r\n                const productCatMap1 = constructOptionList(response[1].data || [], \"nsectioncode\",\r\n                    \"ssectionname\", undefined, undefined, true);\r\n                const productCategoryList2 = { productCategoryList: productCatMap1.get(\"OptionList\") };\r\n               //productCategoryList2['productCategoryList']={...selectedRecord[\"nmaterialsectioncode\"]}\r\n                let masterData = {}\r\n                masterData = { ...inputparam.masterData, ...productCategoryList2, searchedData: undefined }\r\n\r\n                if (Array.isArray(response[1].data)) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            isOpen: true,\r\n                            selectedRecord,\r\n                            masterData,\r\n                            operation: \"update\",\r\n                            isneedcombomulti: true,\r\n                            openModal: true, showMaterialSection: true, ismaterialsectionEdit: true, screenname: \"IDS_MATERIALSECTION\", ncontrolCode: inputparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function addSafetyInstructions(Data, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/material/getMaterialSafetyInstructions\", {\r\n            'nmaterialcode': Data[\"SelectedMaterial\"][\"jsondata\"].nmaterialcode,\r\n            \"userinfo\": userInfo, nflag: 1\r\n        })\r\n            .then(response => {\r\n                if (Array.isArray(response.data[\"selectedTemplateSafetyInstructions\"])) {\r\n                    let selectedRecord = response.data[\"MaterialSafetyInstructions\"].length > 0 ?\r\n                        response.data[\"MaterialSafetyInstructions\"][0].jsondata : []\r\n                    let masterData = {}\r\n                    const MaterialSafetyInstructions = { MaterialSafetyInstructions: response.data[\"MaterialSafetyInstructions\"] }\r\n                    masterData = { ...Data, ...MaterialSafetyInstructions, searchedData: undefined }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData, loading: false,\r\n                            loadEsign: false,\r\n                            selectedRecord,\r\n                            ncontrolCode: ncontrolcode\r\n                            , openModal: true, screenname: \"IDS_MATERIALSAFETYINSTRUCTIONS\"\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(response.data);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function addMaterialProperty(Data, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        let date;\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n        const getMaterialSafety = rsapi.post(\"/material/getMaterialSafetyInstructions\", {\r\n            'nmaterialcode': Data[\"SelectedMaterial\"][\"jsondata\"].nmaterialcode,\r\n            \"userinfo\": userInfo, nflag: 2\r\n        })\r\n        urlArray = [getMaterialSafety, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (Array.isArray(response[0].data[\"selectedTemplateProperties\"])) {\r\n                    let selectedRecord = response[0].data[\"MaterialProperties\"].length > 0 ?\r\n                        response[0].data[\"MaterialProperties\"][0].jsondata : []\r\n                    let masterData = {}\r\n                    const MaterialProperties = { MaterialProperties: response[0].data[\"MaterialProperties\"] }\r\n                    if (response[0].data[\"MaterialProperties\"].length > 0) {\r\n                        if (response[0].data[\"MaterialPropertiesDateFeild\"]) {\r\n                            response[0].data[\"MaterialPropertiesDateFeild\"].map((temp) => {\r\n                                response[0].data[\"MaterialProperties\"][0].jsondata[temp] =\r\n                                    rearrangeDateFormat(userInfo, response[0].data[\"MaterialProperties\"][0].jsondata[temp])\r\n                            })\r\n                        }\r\n                    }\r\n                    masterData = { ...Data, ...MaterialProperties, searchedData: undefined }\r\n                    const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                        \"stimezoneid\", undefined, undefined, true);\r\n                    const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                    response[0].data[\"DateFeildsProperties\"].map((temp) => {\r\n                        if (!selectedRecord.hasOwnProperty(temp)) {\r\n                            selectedRecord[`tz${temp}`] = timeZoneList[0]\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData, loading: false,\r\n                            loadEsign: false,\r\n                            selectedRecord,\r\n                            isSelectedRecordChange: false,\r\n                            timeZoneList,\r\n                            ncontrolCode: ncontrolcode\r\n                            , openModal: true, screenname: \"IDS_MATERIALPROPERTY\"\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(response.data);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function addMaterialFile(inputParam, param) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/material/getMaterialLinkMaster\", {\r\n            nmaterialcode: param.nmaterialcode && param.nmaterialcode,\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/material/editMaterialMsdsAttachment\", {\r\n                userinfo: inputParam.userInfo,\r\n                nmaterialcode: param.nmaterialcode && param.nmaterialcode,\r\n                nmaterialfilecode: inputParam.selectedRecord.nmaterialfilecode\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject[\"jsondata\"].nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject[\"jsondata\"].slinkname,\r\n                            \"value\": editObject[\"jsondata\"].nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject[\"jsondata\"].sfilename,\r\n                            slinkdescription: editObject[\"jsondata\"].sdescription,\r\n                            nlinkdefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject[\"jsondata\"].sfilesize,\r\n                            nfilesize: editObject[\"jsondata\"].nfilesize,\r\n                            ndefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\r\n                            ssystemfilename: editObject[\"jsondata\"].ssystemfilename,\r\n                            sfilename: editObject[\"jsondata\"].sfilename,\r\n                        }\r\n                    }\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        sdescription: editObject[\"jsondata\"].sdescription,\r\n                        nmaterialfilecode: editObject[\"jsondata\"].nmaterialfilecode,\r\n                        nattachmenttypecode: editObject[\"jsondata\"].nattachmenttypecode,\r\n                        nlinkcode,\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openModal: true,\r\n                        dcreateddate:inputParam.selectedRecord&& rearrangeDateFormat( inputParam.userInfo, inputParam.selectedRecord.dcreateddate),\r\n                        operation: inputParam.operation,\r\n                        screenname: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}