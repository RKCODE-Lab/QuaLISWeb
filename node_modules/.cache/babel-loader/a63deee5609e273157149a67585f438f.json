{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{faCheck,faCloudDownloadAlt,faCopy,faEye,faFileCsv,faFileExcel,faFileImport,faFilePdf,faLanguage,faPencilAlt,faPlus,faRedo,faSync,faThumbsUp,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ExcelExport,ExcelExportColumn}from'@progress/kendo-react-excel-export';import{Grid,GridColumn,GridColumnMenuFilter,GridNoRecords,GridToolbar}from'@progress/kendo-react-grid';import{GridPDFExport}from'@progress/kendo-react-pdf';import React from'react';import{Button,Card,Col,FormGroup,FormLabel,Image,Nav,Row}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport{process}from'@progress/kendo-data-query';import{LocalizationProvider}from'@progress/kendo-react-intl';import parse from'html-react-parser';import{CSVLink}from\"react-csv\";import{connect}from'react-redux';import{toast}from'react-toastify';import ReactTooltip from'react-tooltip';import reject from\"../../assets/image/reject.svg\";import{ttfFont}from'../../assets/styles/ttfFont';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{dynamicFileDownload}from'../../actions/ServiceAction';import{rearrangeDateFormatDateOnly}from\"../../components/CommonScript\";import{getActionIcon}from'../../components/HoverIcons';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{AtTableWrap,FontIconWrap,FormControlStatic}from'../../components/data-grid/data-grid.styles';import FormCheckbox from'../../components/form-checkbox/form-checkbox.component';import ColumnMenu from'../../components/data-grid/ColumnMenu';import SimpleGrid from'../../components/data-grid/SimpleGrid';var DataGridForStorage=/*#__PURE__*/function(_React$Component){_inherits(DataGridForStorage,_React$Component);var _super=_createSuper(DataGridForStorage);function DataGridForStorage(_props){var _this;_classCallCheck(this,DataGridForStorage);_this=_super.call(this,_props);_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasDynamicColSize?/*#__PURE__*/React.createElement(\"div\",null,_this.props.detailedFieldList.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,{style:{marginLeft:-18}},_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:item.columnSize},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField],item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},props.dataItem),_this.props.inputParam),item),{},{userInfo:_this.props.Login.userInfo},_this.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\")));})))))):_this.props.hasChild?/*#__PURE__*/React.createElement(SimpleGrid,{childList:_this.props.childList.get(parseInt(props.dataItem[_this.props.childMappingField]))||[],extractedColumnList:_this.props.childColumnList}):/*#__PURE__*/React.createElement(\"div\",null,_this.props.detailedFieldList.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"row\",null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField],item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},props.dataItem),_this.props.inputParam),item),{},{userInfo:_this.props.Login.userInfo},_this.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\")));}))))))),\" \");};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;if(_this.props.hasChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.props.handleExpandChange(event,_this.props.dataState);}else{event.dataItem.expanded=!isExpanded;_this.setState({isExpanded:isExpanded});}};_this.exportExcel=function(){if(_this.props.dataResult.data.length>0){_this._excelExport.save();}else toast.info(_this.props.intl.formatMessage({id:\"IDS_NODATATOEXPORT\"}));};_this.exportExcelHeader=function(){//  if (this.props.dataResult.data.length > 0) {\n_this._excelExportHeader.save();// }\n// else\n//     toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\n};_this.exportPDF=function(){if(_this.props.dataResult.data.length>0)_this._pdfExport.save();else toast.info(_this.props.intl.formatMessage({id:\"IDS_NODATATOEXPORT\"}));};_this.handleClickDelete=function(deleteParam,row){//this.props.deleteRecord(deleteParam);\n_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.props.deleteRecord(deleteParam,row);});};_this.getNumberOfItems=function(data){var count=0;data.forEach(function(item){if(item.items){count=count+_this.getNumberOfItems(item.items);}else{count++;}});return count;};_this.getNumberOfSelectedItems=function(data){var count=0;data.forEach(function(item){if(item.items){count=count+_this.getNumberOfSelectedItems(item.items);}else{count=count+(item.selected==true?1:0);}});return count;};_this.checkHeaderSelectionValue=function(){var selectedItems=_this.getNumberOfSelectedItems(_this.props.dataResult.data);return _this.props.dataResult.data.length>0&&selectedItems==_this.getNumberOfItems(_this.props.dataResult.data);};_this.headerSelectionChange=function(event){var checkboxElement=event.target;var checked=event.syntheticEvent.target.checked;var dataResult=_this.props.dataResult;dataResult.data.map(function(item){return item.items.map(function(item){if(item.selected===undefined){item.selected=false;}item.selected=checked;return item;});});_this.setState({dataResult:dataResult});};_this.selectionChange=function(event){var dataResult=_this.props.dataResult;dataResult.data.map(function(x){return x.items.map(function(item){if(item[_this.props.primaryKeyField]===event.dataItem[_this.props.primaryKeyField]){item.selected=!event.dataItem.selected;}return item;});});_this.setState({dataResult:dataResult});};_this.confirmMessage=new ConfirmMessage();_this.state={dataResult:_this.props.dataResult};return _this;}_createClass(DataGridForStorage,[{key:\"columnProps\",value:function columnProps(field){if(!this.props.hideColumnFilter){var returntype={field:field,columnMenu:ColumnMenu,headerClassName:this.isColumnActive(field,this.props.dataState)?'active':''};return returntype;}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}},{key:\"render\",value:function render(){var _this2=this;//console.log(\"controlMap:\", this.props);\n//  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\nvar methodUrl=this.props.methodUrl?this.props.methodUrl:this.props.inputParam&&this.props.inputParam.methodUrl;var addId=this.props.controlMap&&this.props.controlMap.has(\"Add\".concat(methodUrl))&&this.props.controlMap.get(\"Add\".concat(methodUrl)).ncontrolcode;var editId=this.props.controlMap&&this.props.controlMap.has(\"Edit\".concat(methodUrl))&&this.props.controlMap.get(\"Edit\".concat(methodUrl)).ncontrolcode;{/* Add by Neeraj kumar for Language screen -RMTP-101*/}var languagesId=this.props.controlMap&&this.props.controlMap.has(\"Update\".concat(methodUrl))&&this.props.controlMap.get(\"Update\".concat(methodUrl)).ncontrolcode;// const viewId = this.props.controlMap.has(\"View\".concat(methodUrl))\n//     && this.props.controlMap.get(\"View\".concat(methodUrl)).ncontrolcode;\nvar deleteId=this.props.controlMap&&this.props.controlMap.has(\"Delete\".concat(methodUrl))&&this.props.controlMap.get(\"Delete\".concat(methodUrl)).ncontrolcode;// const defaultId = this.props.controlMap && this.props.controlMap.has(\"Default\".concat(methodUrl))\n//     && this.props.controlMap.get(\"Default\".concat(methodUrl)).ncontrolcode;\nvar approveId=this.props.controlMap&&this.props.controlMap.has(\"Approve\".concat(methodUrl))&&this.props.controlMap.get(\"Approve\".concat(methodUrl)).ncontrolcode;var copyId=this.props.controlMap&&this.props.inputParam&&this.props.controlMap.has(\"Copy\".concat(methodUrl))&&this.props.controlMap.get(\"Copy\".concat(methodUrl)).ncontrolcode;var completeId=this.props.controlMap&&this.props.controlMap.has(\"Complete\".concat(methodUrl))&&this.props.controlMap.get(\"Complete\".concat(methodUrl)).ncontrolcode;var switchId=this.props.controlMap&&this.props.switchParam&&this.props.controlMap.has(this.props.switchParam.operation.concat(methodUrl))&&this.props.controlMap.get(this.props.switchParam.operation.concat(methodUrl)).ncontrolcode;var cancelId=this.props.controlMap&&this.props.controlMap.has(\"Cancel\".concat(methodUrl))&&this.props.controlMap.get(\"Cancel\".concat(methodUrl)).ncontrolcode;// const receiveGoodsId = this.props.controlMap.has(\"Receive\".concat(methodUrl))\n//     && this.props.controlMap.get(\"Receive\".concat(methodUrl)).ncontrolcode;\nvar downloadId=this.props.controlMap&&this.props.controlMap.has(\"Download\".concat(methodUrl))&&this.props.controlMap.get(\"Download\".concat(methodUrl)).ncontrolcode;var resentId=this.props.controlMap&&this.props.controlMap.has(\"Resent\")&&this.props.controlMap.get(\"Resent\").ncontrolcode;var selectedId=this.props.selectedId;// const confirmMessage = new ConfirmMessage();\n//console.log(\"props:\",this.props);\nvar pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.userInfo.slanguagetypecode},this.props.iscsv?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(CSVLink,{data:this.props.ELNTest?this.props.ELNTest:this.props.data,filename:this.props.selectedfilename+\".csv\",headers:this.props.batchCSViewList},this.props.ELNTest?this.props.intl.formatMessage({id:\"IDS_EXPORTTOELN\"}):this.props.intl.formatMessage({id:\"IDS_EXPORTCSV\"})))),/*#__PURE__*/React.createElement(\"style\",null,ttfFont)):\"\",/*#__PURE__*/React.createElement(ExcelExport,{data:process(this.props.data||[],{sort:this.props.dataState.sort,filter:this.props.dataState.filter,group:this.props.dataState.group}).data,filterable:true// fileName={this.props.inputParam && this.props.intl.formatMessage({ id: this.props.inputParam.displayName })}\n,group:this.props.dataState.group,ref:function ref(exporter){// console.log(exporter);\n_this2._excelExport=exporter;}},/*#__PURE__*/React.createElement(Grid,Object.assign({className:this.props.dataResult&&this.props.dataResult.length>0||this.props.extractedColumnList&&this.props.extractedColumnList.length>0?\"active-paging\":\"no-paging\",style:{height:this.props.gridHeight,width:this.props.gridWidth},sortable:true,resizable:true,reorderable:false,scrollable:this.props.scrollable,pageable:this.props.pageable&&this.props.data&&this.props.data.length>0?{buttonCount:5,pageSizes:pageSizes,previousNext:false}:false// pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\n,groupable:this.props.groupfooter?{enabled:false,footer:\"visible\"}:this.props.groupable?true:false,detail:this.props.hideDetailBand?false:this.detailBand,expandField:(this.props.detailedFieldList&&this.props.detailedFieldList.length>0||this.props.childColumnList&&this.props.childColumnList.length>0)&&this.props.expandField?this.props.expandField:false,onExpandChange:this.expandChange,data:this.props.dataResult,total:this.props.total},this.props.dataState,{selectedField:\"selected\",onRowClick:this.props.handleRowClick,onDataStateChange:this.props.dataStateChange,onSelectionChange:this.props.selectionChange,onHeaderSelectionChange:this.props.headerSelectionChange}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),/*#__PURE__*/React.createElement(GridColumn,{field:\"selected\",width:\"50px\",title:this.props.title,groupable:false,headerSelectionValue:this.props.dataResult&&this.props.dataResult.data&&this.checkHeaderSelectionValue()}),this.props.isToolBarRequired?/*#__PURE__*/React.createElement(GridToolbar,null,this.props.isAddRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})// data-for=\"tooltip-grid-wrap\"\n,hidden:this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.props.addRecord(addId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),this.props.isCustomButton?this.props.customButtonlist.map(function(button){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":_this2.props.intl.formatMessage({id:button.label})// data-for=\"tooltip-grid-wrap\"\n,hidden:button.hidden,onClick:button.onClick},getActionIcon(button.controlname)));}):/*#__PURE__*/React.createElement(React.Fragment,null),this.props.isRefreshRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.reloadData();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync})),this.props.isImportRequired===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EXPORTTEMPLATE\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportExcelHeader},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileExcel})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTDATA\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.import();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))):\"\",this.props.isDownloadPDFRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADPDF\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportPDF},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFilePdf})),this.props.isDownloadExcelRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADEXCEL\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportExcel},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileExcel})),this.props.isExportExcelRequired===true?/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADCSV\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.exportExcelNew();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileCsv})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null),this.props.extractedColumnList.map(function(item,index){return item.idsName&&/*#__PURE__*/React.createElement(GridColumn,Object.assign({key:index// data-tip={this.props.intl.formatMessage({ id: item.idsName })}\n,title:_this2.props.intl.formatMessage({id:item.idsName})},_this2.columnProps(item.dataField),{width:item.width,filter:item.filterType,cell:function cell(row){return row.rowType===\"groupFooter\"?item.dataField===_this2.props.aggregatedColumn?/*#__PURE__*/React.createElement(\"td\",{\"aria-colindex\":row.columnIndex,role:\"gridcell\"},_this2.props.intl.formatMessage({id:_this2.props.aggregateLabel}),\" :\",row.dataItem.aggregates[_this2.props.aggregatedColumn].sum):null:row.rowType===\"groupHeader\"?null:item.componentName===\"combobox\"?/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(FormSelectSearch,{name:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,as:\"select\",onChange:function onChange(event){return _this2.onSwitchChange(_objectSpread(_objectSpread({},_this2.props.switchParam),{},{selectedRecord:row[\"dataItem\"],ncontrolCode:switchId}),event);},formLabel:_this2.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),isMandatory:true,value:{},options:[],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:true,isClearable:false})):item.componentName===\"switch\"?/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,disabled:item.needRights?_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(_this2.props.controlMap.has(item.controlName)&&_this2.props.controlMap.get(item.controlName).ncontrolcode)===-1:false,onChange:function onChange(event){return _this2.props.onSwitchChange(_objectSpread(_objectSpread({},_this2.props.switchParam),{},{selectedRecord:row[\"dataItem\"],ncontrolCode:switchId}),event);},checked:row[\"dataItem\"][item.switchFieldName]===item.switchStatus?true:false,name:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex})):item.componentName===\"checkbox\"?/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(FormCheckbox,{name:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,type:\"checkbox\",value:row[\"dataItem\"][item.checkBoxField]!==0?true:false,isMandatory:false,required:false//checked={row[\"dataItem\"][item.checkBoxField] === item.switchStatus ? true : false}\n,checked:row[\"dataItem\"][item.checkBoxField]!==0?true:false,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}})):item.fieldType===\"gradeColumn\"?row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]// data-for=\"tooltip_grid_wrap\"\n,className:\"\".concat(selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''),style:{color:[row[\"dataItem\"]['scolorhexcode']]}},row[\"dataItem\"][item.dataField]):/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]//data-for=\"tooltip-grid-wrap\"\n,className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):item.fieldType===\"dateOnlyFormat\"?rearrangeDateFormatDateOnly(_this2.props.Login.userInfo,row[\"dataItem\"][item.dataField]):row[\"dataItem\"][item.dataField]// : row[\"dataItem\"][item.dataField] ? row[\"dataItem\"][item.dataField] :\n//     this.props.jsonField ? row[\"dataItem\"][this.props.jsonField] &&\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]&&\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]['label'] ||\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]\n,\"       \",item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this2.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread({},item),row.dataItem),{},{userInfo:_this2.props.Login.userInfo},_this2.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\");}}));}),this.props.isActionRequired?/*#__PURE__*/React.createElement(GridColumn,{locked:true,headerClassName:\"text-center\",title:this.props.intl.formatMessage({id:'IDS_ACTION'}),sort:false,cell:function cell(row){return row.rowType===\"groupFooter\"?null:row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{className:\"k-grid-content-sticky k-command-cell selectedId === row[\\\"dataItem\\\"][this.props.primaryKeyField] ? 'active' : ''\",style:{left:'0',right:'0',borderRightWidth:'1px',textAlign:'center'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,null,/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_EDIT\"})// data-for=\"tooltip-grid-wrap\"\n,\"data-place\":\"left\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.props.fetchRecord(_objectSpread(_objectSpread({},_this2.props.editParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.editParam.primaryKeyField],editRow:row[\"dataItem\"],ncontrolCode:editId}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_ADDSYNONYMN\"})//  data-for=\"tooltip-grid-wrap\"\n,\"data-place\":\"left\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(languagesId)===-1,onClick:function onClick(){return _this2.props.languagesRecord(_objectSpread(_objectSpread({},_this2.props.languagesParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.languagesParam.primaryKeyField],languagesRow:row[\"dataItem\"],ncontrolCode:languagesId}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLanguage})),\"        \",/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-place\":\"top\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.handleClickDelete(_objectSpread(_objectSpread({},_this2.props.deleteParam),{},{selectedRecord:row[\"dataItem\"],ncontrolCode:deleteId}),row);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(downloadId)===-1,onClick:function onClick(){return _this2.props.viewDownloadFile(_objectSpread(_objectSpread(_objectSpread({},_this2.props.masterdata),_this2.props.downloadParam),{},{inputData:_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{userinfo:_this2.props.Login.userInfo}),userinfo:_this2.props.Login.userInfo,ncontrolCode:downloadId}),row);},\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DOWNLOADFILE\"}),\"data-place\":\"left\"//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt//title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\n})),_this2.props.isreportview?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\"//hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewreport) === -1}\n,onClick:function onClick(){return _this2.props.viewReportFile(_objectSpread(_objectSpread(_objectSpread({},_this2.props.masterdata),_this2.props.downloadParam),{},{inputData:_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{userinfo:_this2.props.Login.userInfo}),userinfo:_this2.props.Login.userInfo,ncontrolCode:downloadId}),row);},\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_VIEWREPORT\"}),\"data-place\":\"left\"//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye//title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} \n})):\"\",/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_APPROVE\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(approveId)===-1,onClick:function onClick(){return _this2.props.approveRecord(row,\"Approve\",approveId);},\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_COPY\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(copyId)===-1,onClick:function onClick(){return _this2.props.copyRecord(row,\"Copy\",copyId);},\"data-place\":\"left\"// data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(completeId)===-1,onClick:function onClick(){return _this2.props.completeRecord(row[\"dataItem\"],\"Complete\",completeId);},\"data-place\":\"left\"// data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheck})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_RESENT\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(resentId)===-1,onClick:function onClick(){return _this2.props.reSent(row[\"dataItem\"],\"Resent\",resentId);},\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faRedo})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n,hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(cancelId)===-1},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this2.props.cancelRecord(row[\"dataItem\"],\"Cancel\",cancelId);},\"data-place\":\"left\"})),_this2.props.actionIcons?_this2.props.actionIcons.length>0?_this2.props.actionIcons.map(function(action){return/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":action.title,hidden:action.hidden===undefined?true:action.hidden,onClick:function onClick(){return action.onClick(row[\"dataItem\"],action,row);}},getActionIcon(action.controlname));}):\"\":\"\",_this2.props.hasControlWithOutRights?/*#__PURE__*/React.createElement(React.Fragment,null,_this2.props.showeditRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_EDIT\"})//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \n,\"data-place\":\"left\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\n,name:\"deleteworights\",onClick:function onClick(){return _this2.props.editRecordWORights(row[\"dataItem\"]);}})):\"\",_this2.props.showeditRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_LANGUAGESCONVERTER\"})//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \n,\"data-place\":\"left\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLanguage//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\n,name:\"deleteworights\",onClick:function onClick(){return _this2.props.editRecordWORights(row[\"dataItem\"]);}})):\"\",_this2.props.showdeleteRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DELETE\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.deleteRecordWORights(row[\"dataItem\"]);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt//title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\n,name:\"deleteworights\"})):\"\"):\"\")));}}):\"\"),_toConsumableArray(this.props.extractedColumnList).map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.idsName})+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.idsName})+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});})),/*#__PURE__*/React.createElement(ExcelExport,{data:[]//group={group}\n,collapsible:true,fileName:this.props.screenName&&this.props.screenName,ref:function ref(exporter){// console.log(exporter);\n_this2._excelExportHeader=exporter;}},this.props.isImportRequired===true?this.props.exportFieldList.length>0?this.props.exportFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}):this.props.extractedColumnList&&this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}):this.props.extractedColumnList&&this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}))),this.props.isToolBarRequired?/*#__PURE__*/React.createElement(\"ttfStyle\",null,/*#__PURE__*/React.createElement(GridPDFExport,{ref:function ref(element){_this2._pdfExport=element;},margin:\"1cm\"// paperSize= \"A4\"\n,scale:0.75,fileName:\"Export.pdf\"},/*#__PURE__*/React.createElement(Grid,{data:process(this.props.data||[],{sort:this.props.dataState.sort,filter:this.props.dataState.filter,group:this.props.dataState.group}),group:this.props.dataState.group,groupable:true},this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(GridColumn,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName}),field:item.dataField,width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(GridColumn,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName}),field:item.dataField,width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});}))),/*#__PURE__*/React.createElement(\"style\",null,ttfFont)):\"\"));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){ReactTooltip.rebuild();var dataResult=this.state.dataResult;if(this.props.dataResult!==previousProps.dataResult){dataResult=this.props.dataResult;this.setState({dataResult:dataResult});}}}]);return DataGridForStorage;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{dynamicFileDownload:dynamicFileDownload,undefined:undefined})(injectIntl(DataGridForStorage));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/storagemanagement/DataGridForStorage.jsx"],"names":["faCheck","faCloudDownloadAlt","faCopy","faEye","faFileCsv","faFileExcel","faFileImport","faFilePdf","faLanguage","faPencilAlt","faPlus","faRedo","faSync","faThumbsUp","faTrashAlt","FormSelectSearch","FontAwesomeIcon","ExcelExport","ExcelExportColumn","Grid","GridColumn","GridColumnMenuFilter","GridNoRecords","GridToolbar","GridPDFExport","React","Button","Card","Col","FormGroup","FormLabel","Image","Nav","Row","FormattedMessage","injectIntl","process","LocalizationProvider","parse","CSVLink","connect","toast","ReactTooltip","ttfFont","ConfirmMessage","dynamicFileDownload","rearrangeDateFormatDateOnly","getActionIcon","CustomSwitch","AtTableWrap","FontIconWrap","FormControlStatic","FormCheckbox","ColumnMenu","SimpleGrid","DataGridForStorage","props","detailBand","hasDynamicColSize","detailedFieldList","length","marginLeft","map","item","columnSize","idsName","dataItem","dataField","undefined","isIdsField","isHTML","dataType","intl","formatMessage","id","inputParam","userInfo","Login","viewFileURL","hasChild","childList","get","parseInt","childMappingField","childColumnList","expandChange","event","isExpanded","expanded","aggregates","value","handleExpandChange","dataState","setState","exportExcel","dataResult","data","_excelExport","save","info","exportExcelHeader","_excelExportHeader","exportPDF","_pdfExport","handleClickDelete","deleteParam","row","confirmMessage","confirm","deleteRecord","getNumberOfItems","count","forEach","items","getNumberOfSelectedItems","selected","checkHeaderSelectionValue","selectedItems","headerSelectionChange","checkboxElement","target","checked","syntheticEvent","selectionChange","x","primaryKeyField","state","field","hideColumnFilter","returntype","columnMenu","headerClassName","isColumnActive","active","filter","methodUrl","addId","controlMap","has","concat","ncontrolcode","editId","languagesId","deleteId","approveId","copyId","completeId","switchId","switchParam","operation","cancelId","downloadId","resentId","selectedId","pageSizes","settings","split","setting","actionColWidth","slanguagetypecode","iscsv","ELNTest","selectedfilename","batchCSViewList","sort","group","exporter","extractedColumnList","height","gridHeight","width","gridWidth","scrollable","pageable","buttonCount","previousNext","groupfooter","enabled","footer","groupable","hideDetailBand","expandField","total","handleRowClick","dataStateChange","title","isToolBarRequired","isAddRequired","userRoleControlRights","indexOf","addRecord","isCustomButton","customButtonlist","button","label","hidden","onClick","controlname","isRefreshRequired","reloadData","isImportRequired","import","isDownloadPDFRequired","isDownloadExcelRequired","isExportExcelRequired","exportExcelNew","index","columnProps","filterType","rowType","aggregatedColumn","columnIndex","aggregateLabel","sum","componentName","textAlign","dataIndex","onSwitchChange","selectedRecord","ncontrolCode","needRights","controlName","switchFieldName","switchStatus","checkBoxField","onInputOnChange","fieldType","color","isActionRequired","left","right","borderRightWidth","fetchRecord","editParam","primaryKeyValue","editRow","languagesRecord","languagesParam","languagesRow","viewDownloadFile","masterdata","downloadParam","inputData","userinfo","isreportview","viewReportFile","approveRecord","copyRecord","completeRecord","reSent","reject","cancelRecord","actionIcons","action","hasControlWithOutRights","showeditRecordWORights","editRecordWORights","showdeleteRecordWORights","deleteRecordWORights","dateField","screenName","exportFieldList","element","previousProps","rebuild","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import {\r\n    faCheck,\r\n    faCloudDownloadAlt,\r\n    faCopy,\r\n    faEye,\r\n    faFileCsv,\r\n    faFileExcel,\r\n    faFileImport,\r\n    faFilePdf,\r\n    faLanguage,\r\n    faPencilAlt,\r\n    faPlus,\r\n    faRedo,\r\n    faSync,\r\n    faThumbsUp,\r\n    faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ExcelExport, ExcelExportColumn } from '@progress/kendo-react-excel-export';\r\nimport { Grid, GridColumn, GridColumnMenuFilter, GridNoRecords, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { GridPDFExport } from '@progress/kendo-react-pdf';\r\nimport React from 'react';\r\nimport { Button, Card, Col, FormGroup, FormLabel, Image, Nav, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport parse from 'html-react-parser';\r\nimport { CSVLink } from \"react-csv\";\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport reject from '../../assets/image/reject.svg';\r\nimport { ttfFont } from '../../assets/styles/ttfFont';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { dynamicFileDownload } from '../../actions/ServiceAction';\r\nimport { rearrangeDateFormatDateOnly } from \"../../components/CommonScript\";\r\nimport { getActionIcon } from '../../components/HoverIcons';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { AtTableWrap, FontIconWrap, FormControlStatic } from '../../components/data-grid/data-grid.styles';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport SimpleGrid from '../../components/data-grid/SimpleGrid';\r\n\r\n\r\nclass DataGridForStorage extends React.Component {\r\n\r\n    _pdfExport;\r\n    _excelExport;\r\n    constructor(props) {\r\n        super(props);\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state={\r\n            dataResult: this.props.dataResult\r\n        }\r\n\r\n    }\r\n\r\n\r\n    detailBand = (props) => {\r\n\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    {this.props.hasDynamicColSize ?\r\n                        <div>\r\n                            {this.props.detailedFieldList.length > 0 &&\r\n                                <div>\r\n                                    <Card>\r\n                                        <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            <Row style={{ marginLeft: -18 }}>\r\n                                                {this.props.detailedFieldList.map((item) => {\r\n                                                    return (\r\n\r\n                                                        <Col md={item.columnSize}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                                <FormControlStatic>\r\n                                                                    {\r\n                                                                        props.dataItem[item.dataField] === undefined ||\r\n                                                                            props.dataItem[item.dataField] === null ||\r\n                                                                            props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                            item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> :\r\n                                                                                item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                                    {item.dataType && item.dataType[0] === 'files' ?\r\n                                                                        <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                            data-place=\"left\"\r\n                                                                            onClick={() => this.props.dynamicFileDownload({ ...props.dataItem, ...this.props.inputParam, ...item, userInfo: this.props.Login.userInfo, ...this.props.viewFileURL })}>\r\n                                                                            <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                        </FontIconWrap> : \"\"\r\n                                                                    }\r\n                                                                </FormControlStatic>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    )\r\n                                                })}\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        : this.props.hasChild ?\r\n                            <SimpleGrid childList={this.props.childList.get(parseInt(props.dataItem[this.props.childMappingField])) || []}\r\n                                extractedColumnList={this.props.childColumnList} />\r\n                            :\r\n                            <div>\r\n\r\n                                {this.props.detailedFieldList.length > 0 &&\r\n                                    <div>\r\n                                        <row>\r\n                                            <Card>\r\n                                                <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                                <Card.Body className=\"form-static-wrap\">\r\n                                                    {\r\n                                                        this.props.detailedFieldList.map((item) => {\r\n                                                            return (\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                                        <FormControlStatic>\r\n                                                                            {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n\r\n                                                                            {item.dataType && item.dataType[0] === 'files' ?\r\n                                                                                <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                                    data-place=\"left\"\r\n                                                                                    onClick={() => this.props.dynamicFileDownload({ ...props.dataItem, ...this.props.inputParam, ...item, userInfo: this.props.Login.userInfo, ...this.props.viewFileURL })}>\r\n                                                                                    <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                                </FontIconWrap> : \"\"\r\n                                                                            }\r\n                                                                        </FormControlStatic>\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Col>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </row>\r\n                                    </div>\r\n                                }\r\n\r\n                            </div>}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({ isExpanded });\r\n        }\r\n    }\r\n\r\n\r\n    exportExcel = () => {\r\n        if (this.props.dataResult.data.length > 0) {\r\n            this._excelExport.save();\r\n        }\r\n        else\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    exportExcelHeader = () => {\r\n        //  if (this.props.dataResult.data.length > 0) {\r\n        this._excelExportHeader.save();\r\n        // }\r\n        // else\r\n        //     toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    exportPDF = () => {\r\n        if (this.props.dataResult.data.length > 0)\r\n            this._pdfExport.save();\r\n        else\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    columnProps(field) {\r\n        if (!this.props.hideColumnFilter) {\r\n\r\n            const returntype = {\r\n                field: field,\r\n                columnMenu: ColumnMenu,\r\n                headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n            }\r\n            return returntype;\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n    handleClickDelete = (deleteParam, row) => {\r\n        //this.props.deleteRecord(deleteParam);\r\n\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.props.deleteRecord(deleteParam, row));\r\n    }\r\n    getNumberOfItems = (data) => {\r\n        let count = 0;\r\n        data.forEach((item) => {\r\n            if (item.items) {\r\n                count = count + this.getNumberOfItems(item.items);\r\n            } else {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n    getNumberOfSelectedItems = (data) => {\r\n        let count = 0;\r\n        data.forEach((item) => {\r\n            if (item.items) {\r\n                count = count + this.getNumberOfSelectedItems(item.items);\r\n            } else {\r\n                count = count + (item.selected == true ? 1 : 0);\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n    checkHeaderSelectionValue = () => {\r\n        let selectedItems = this.getNumberOfSelectedItems(this.props.dataResult.data);\r\n        return this.props.dataResult.data.length > 0 && selectedItems == this.getNumberOfItems(this.props.dataResult.data);\r\n    };\r\n    headerSelectionChange = (event) => {\r\n        const checkboxElement = event.target;\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let dataResult=this.props.dataResult;\r\n        dataResult.data.map(item => {\r\n            return item.items.map(item => {\r\n                if (item.selected === undefined) {\r\n                    item.selected = false;\r\n                }\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n        });\r\n        this.setState({ dataResult })\r\n    }\r\n\r\n    selectionChange = (event) => {\r\n        let dataResult=this.props.dataResult;\r\n        dataResult.data.map(x => {\r\n            return x.items.map(item => {\r\n                if (item[this.props.primaryKeyField] === event.dataItem[this.props.primaryKeyField]) {\r\n                    item.selected = !event.dataItem.selected;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n        this.setState({ dataResult })\r\n    }\r\n    render() {\r\n\r\n        //console.log(\"controlMap:\", this.props);\r\n        //  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\r\n        const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\r\n\r\n        const addId = this.props.controlMap && this.props.controlMap.has(\"Add\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Add\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const editId = this.props.controlMap && this.props.controlMap.has(\"Edit\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Edit\".concat(methodUrl)).ncontrolcode;\r\n\r\n        {/* Add by Neeraj kumar for Language screen -RMTP-101*/ }\r\n        const languagesId = this.props.controlMap && this.props.controlMap.has(\"Update\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Update\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const viewId = this.props.controlMap.has(\"View\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"View\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const deleteId = this.props.controlMap && this.props.controlMap.has(\"Delete\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Delete\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const defaultId = this.props.controlMap && this.props.controlMap.has(\"Default\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"Default\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const approveId = this.props.controlMap && this.props.controlMap.has(\"Approve\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Approve\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const copyId = this.props.controlMap && this.props.inputParam && this.props.controlMap.has(\"Copy\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Copy\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const completeId = this.props.controlMap && this.props.controlMap.has(\"Complete\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Complete\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const switchId = this.props.controlMap && this.props.switchParam && this.props.controlMap.has(this.props.switchParam.operation.concat(methodUrl))\r\n            && this.props.controlMap.get(this.props.switchParam.operation.concat(methodUrl)).ncontrolcode;\r\n\r\n        const cancelId = this.props.controlMap && this.props.controlMap.has(\"Cancel\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Cancel\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const receiveGoodsId = this.props.controlMap.has(\"Receive\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"Receive\".concat(methodUrl)).ncontrolcode;\r\n        const downloadId = this.props.controlMap && this.props.controlMap.has(\"Download\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Download\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const resentId = this.props.controlMap && this.props.controlMap.has(\"Resent\")\r\n            && this.props.controlMap.get(\"Resent\").ncontrolcode;\r\n\r\n        const selectedId = this.props.selectedId;\r\n        // const confirmMessage = new ConfirmMessage();\r\n        //console.log(\"props:\",this.props);\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n                <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                    {/* <Tooltip openDelay={100} position=\"bottom\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                    <LocalizationProvider language={this.props.Login.userInfo.slanguagetypecode}>\r\n                        {this.props.iscsv ?\r\n                            <>\r\n                                {\r\n                                    <>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <CSVLink data={this.props.ELNTest ? this.props.ELNTest : this.props.data} filename={this.props.selectedfilename + \".csv\"}\r\n                                                headers={this.props.batchCSViewList}\r\n                                            >{this.props.ELNTest ? this.props.intl.formatMessage({ id: \"IDS_EXPORTTOELN\" }) : this.props.intl.formatMessage({ id: \"IDS_EXPORTCSV\" })}</CSVLink>\r\n                                        </div>\r\n\r\n                                    </>\r\n                                }\r\n                                <style>{ttfFont}</style>\r\n\r\n                            </> : \"\"}\r\n                        <ExcelExport\r\n                            data={process(this.props.data || [], { sort: this.props.dataState.sort, filter: this.props.dataState.filter, group: this.props.dataState.group }).data}\r\n                            filterable={true}\r\n                            // fileName={this.props.inputParam && this.props.intl.formatMessage({ id: this.props.inputParam.displayName })}\r\n                            group={this.props.dataState.group}\r\n                            ref={(exporter) => {\r\n                                // console.log(exporter);\r\n                                this._excelExport = exporter;\r\n                            }}>\r\n                            <Grid\r\n                                className={((this.props.dataResult && this.props.dataResult.length > 0) || (this.props.extractedColumnList && this.props.extractedColumnList.length > 0)) ? \"active-paging\" : \"no-paging\"}\r\n                                style={{ height: this.props.gridHeight, width: this.props.gridWidth }}\r\n                                sortable\r\n                                resizable\r\n                                reorderable={false}\r\n                                scrollable={this.props.scrollable}\r\n                                pageable={this.props.pageable && this.props.data && this.props.data.length > 0 ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : false}\r\n                                // pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\r\n                                groupable={this.props.groupfooter ?\r\n                                    {\r\n                                        enabled: false,\r\n                                        footer: \"visible\",\r\n                                    } :\r\n                                    this.props.groupable ? true : false}\r\n                                detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                                expandField={(this.props.detailedFieldList && this.props.detailedFieldList.length > 0 || this.props.childColumnList && this.props.childColumnList.length > 0) && this.props.expandField ? this.props.expandField : false}\r\n                                onExpandChange={this.expandChange}\r\n                                data={this.props.dataResult}\r\n                                total={this.props.total}\r\n                                {...this.props.dataState}\r\n                                selectedField=\"selected\"\r\n                                onRowClick={this.props.handleRowClick}\r\n                                onDataStateChange={this.props.dataStateChange}\r\n                                onSelectionChange={this.props.selectionChange}\r\n                                onHeaderSelectionChange={this.props.headerSelectionChange}>\r\n                                <GridNoRecords>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                </GridNoRecords>\r\n                                <GridColumn\r\n                                    field=\"selected\"\r\n                                    width=\"50px\" \r\n                                    title={this.props.title}\r\n                                    groupable={false}\r\n                                    headerSelectionValue={this.props.dataResult&&this.props.dataResult.data&&this.checkHeaderSelectionValue()}\r\n                                /> \r\n                                {this.props.isToolBarRequired ?\r\n                                    <GridToolbar>\r\n                                        {this.props.isAddRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.props.addRecord(addId)}>\r\n                                                <FontAwesomeIcon icon={faPlus} />\r\n                                            </Button>\r\n                                        }\r\n                                        {this.props.isCustomButton ?\r\n                                            this.props.customButtonlist.map(button => {\r\n                                                return <>\r\n                                                    <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: button.label })}\r\n                                                        // data-for=\"tooltip-grid-wrap\"\r\n                                                        hidden={button.hidden}\r\n                                                        onClick={button.onClick}>\r\n                                                        {getActionIcon(button.controlname)}\r\n                                                    </Button>\r\n                                                </>\r\n                                            }) : <></>\r\n                                        }\r\n                                        {this.props.isRefreshRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.props.reloadData()}>\r\n                                                <FontAwesomeIcon icon={faSync} />\r\n                                            </Button>\r\n                                        }\r\n                                        {this.props.isImportRequired === true ?\r\n                                            <>\r\n                                                <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EXPORTTEMPLATE\" })}\r\n                                                    //data-for=\"tooltip-grid-wrap\"\r\n                                                    onClick={this.exportExcelHeader}>\r\n                                                    <FontAwesomeIcon icon={faFileExcel} />\r\n                                                </Button>\r\n                                                <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTDATA\" })}\r\n                                                    // data-for=\"tooltip-grid-wrap\"\r\n                                                    onClick={() => this.props.import()}>\r\n                                                    <FontAwesomeIcon icon={faFileImport} />\r\n                                                </Button>\r\n                                            </> : \"\"\r\n                                        }\r\n\r\n                                        {this.props.isDownloadPDFRequired === false ? <></> :\r\n\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADPDF\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={this.exportPDF}>\r\n                                                <FontAwesomeIcon icon={faFilePdf} />\r\n                                            </Button>\r\n                                        }\r\n                                        {/* : \"\"\r\n                                        } */}\r\n                                        {this.props.isDownloadExcelRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADEXCEL\" })}\r\n                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={this.exportExcel}>\r\n                                                <FontAwesomeIcon icon={faFileExcel} />\r\n                                            </Button>\r\n                                        }\r\n\r\n\r\n\r\n                                        {this.props.isExportExcelRequired === true ?\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADCSV\" })}\r\n                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.props.exportExcelNew()}>\r\n                                                <FontAwesomeIcon icon={faFileCsv} />\r\n                                            </Button>\r\n                                            : <></>\r\n                                        }\r\n                                        {/* <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                            title=\"Download Excel\"\r\n                                            onClick={this.exportExcel}>\r\n                                            <FontAwesomeIcon icon={faFileExcel} />\r\n                                        </Button> */}\r\n\r\n                                    </GridToolbar>\r\n                                    : <></>}\r\n                                {\r\n                                    this.props.extractedColumnList.map((item, index) =>\r\n                                        item.idsName &&\r\n                                        <GridColumn key={index}\r\n                                            // data-tip={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            {...this.columnProps(item.dataField)}\r\n                                            width={item.width}\r\n                                            filter={item.filterType}\r\n                                            cell={(row) => (\r\n                                                row.rowType === \"groupFooter\" ?\r\n                                                    item.dataField\r\n                                                        === this.props.aggregatedColumn ?\r\n                                                        <td aria-colindex={row.columnIndex} role={\"gridcell\"}>\r\n                                                            {this.props.intl.formatMessage({ id: this.props.aggregateLabel })} :\r\n                                                            {row.dataItem.aggregates[this.props.aggregatedColumn].sum}\r\n                                                        </td> : null :\r\n                                                    row.rowType === \"groupHeader\" ? null :\r\n                                                        item.componentName === \"combobox\" ?\r\n                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                <FormSelectSearch\r\n                                                                    name={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => this.onSwitchChange({ ...this.props.switchParam, selectedRecord: row[\"dataItem\"], ncontrolCode: switchId }, event)}\r\n                                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURENAME\" })}\r\n                                                                    isMandatory={true}\r\n                                                                    value={{}}\r\n                                                                    options={[]}\r\n                                                                    optionId={\"value\"}\r\n                                                                    optionValue={\"label\"}\r\n                                                                    isMulti={false}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    isClearable={false}\r\n                                                                />\r\n                                                            </td> :\r\n                                                            item.componentName === \"switch\" ?\r\n                                                                <td style={{ textAlign: \"center\" }}>\r\n                                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                        disabled={item.needRights ? this.props.userRoleControlRights\r\n                                                                            && this.props.userRoleControlRights.indexOf(\r\n                                                                                this.props.controlMap.has(item.controlName) && this.props.controlMap.get(item.controlName).ncontrolcode\r\n                                                                            ) === -1 : false}\r\n                                                                        onChange={(event) => this.props.onSwitchChange({ ...this.props.switchParam, selectedRecord: row[\"dataItem\"], ncontrolCode: switchId }, event)}\r\n                                                                        checked={row[\"dataItem\"][item.switchFieldName] === item.switchStatus ? true : false}\r\n                                                                        name={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                                </td> :\r\n                                                                item.componentName === \"checkbox\" ?\r\n                                                                    <td>\r\n                                                                        <FormCheckbox\r\n                                                                            name={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                            type=\"checkbox\"\r\n                                                                            value={row[\"dataItem\"][item.checkBoxField] !== 0 ? true : false}\r\n                                                                            isMandatory={false}\r\n                                                                            required={false}\r\n                                                                            //checked={row[\"dataItem\"][item.checkBoxField] === item.switchStatus ? true : false}\r\n                                                                            checked={row[\"dataItem\"][item.checkBoxField] !== 0 ? true : false}\r\n                                                                            onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                                        />\r\n                                                                    </td> :\r\n                                                                    item.fieldType === \"gradeColumn\" ?\r\n                                                                        row.rowType === \"groupHeader\" ? null :\r\n                                                                            <td\r\n                                                                                data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                                                // data-for=\"tooltip_grid_wrap\"\r\n                                                                                className={`${selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}`}\r\n                                                                                style={{ color: [row[\"dataItem\"]['scolorhexcode']] }}\r\n                                                                            >\r\n                                                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_grid_wrap\" /> */}\r\n                                                                                {row[\"dataItem\"][item.dataField]}\r\n                                                                            </td> :\r\n                                                                        <td data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                                            //data-for=\"tooltip-grid-wrap\"\r\n                                                                            className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>\r\n\r\n                                                                            {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]}\r\n                                                                                defaultMessage={row[\"dataItem\"][item.dataField]} /> : item.fieldType === \"dateOnlyFormat\" ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, row[\"dataItem\"][item.dataField])\r\n                                                                                : row[\"dataItem\"][item.dataField]\r\n\r\n                                                                                // : row[\"dataItem\"][item.dataField] ? row[\"dataItem\"][item.dataField] :\r\n                                                                                //     this.props.jsonField ? row[\"dataItem\"][this.props.jsonField] &&\r\n                                                                                //         row[\"dataItem\"][this.props.jsonField][item.dataField]&&\r\n                                                                                //         row[\"dataItem\"][this.props.jsonField][item.dataField]['label'] ||\r\n                                                                                //         row[\"dataItem\"][this.props.jsonField][item.dataField]\r\n\r\n                                                                            }       {\r\n                                                                                item.dataType && item.dataType[0] === 'files' ?\r\n                                                                                    <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                                        data-place=\"left\"\r\n                                                                                        onClick={() => this.props.dynamicFileDownload({ ...item, ...row.dataItem, userInfo: this.props.Login.userInfo, ...this.props.viewFileURL })}>\r\n                                                                                        <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                                    </FontIconWrap> : \"\"\r\n                                                                            }\r\n                                                                        </td>\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n\r\n                                {this.props.isActionRequired ?\r\n\r\n                                    <GridColumn\r\n                                        locked\r\n                                        headerClassName=\"text-center\"\r\n                                        title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                        sort={false}\r\n                                        cell={(row) => (\r\n                                            row.rowType === \"groupFooter\" ? null :\r\n                                                row.rowType === \"groupHeader\" ? null :\r\n                                                    <td className={`k-grid-content-sticky k-command-cell selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n                                                        <>\r\n                                                            <Nav.Link>\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                    // data-for=\"tooltip-grid-wrap\"\r\n                                                                    data-place=\"left\"\r\n                                                                    hidden={this.props.\r\n                                                                        userRoleControlRights && this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                    onClick={() => this.props.fetchRecord({ ...this.props.editParam, primaryKeyValue: row[\"dataItem\"][this.props.editParam.primaryKeyField], editRow: row[\"dataItem\"], ncontrolCode: editId })}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                </FontIconWrap>\r\n                                                                {/* Add by Neeraj kumar for Language screen -RMTP-101*/}\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSYNONYMN\" })}\r\n                                                                    //  data-for=\"tooltip-grid-wrap\"\r\n                                                                    data-place=\"left\"\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(languagesId) === -1}\r\n                                                                    onClick={() => this.props.languagesRecord({ ...this.props.languagesParam, primaryKeyValue: row[\"dataItem\"][this.props.languagesParam.primaryKeyField], languagesRow: row[\"dataItem\"], ncontrolCode: languagesId })}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faLanguage} />\r\n                                                                </FontIconWrap>\r\n\r\n                                                                {/* <FontAwesomeIcon icon={faEye}\r\n                                                    title={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                    onClick={() => this.props.viewRecord({...this.props.viewParam, primaryKeyValue:row[\"dataItem\"][this.props.viewParam.primaryKeyField], viewRow:row[\"dataItem\"]})}/>\r\n                                                 */}        <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })} data-place=\"top\"\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    onClick={() => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    {/* <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    cardTitle={this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" })}\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DELETECONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    handleClickDelete={() => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)}\r\n                                                                /> */}\r\n                                                                </FontIconWrap>\r\n\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                                    onClick={() => this.props.viewDownloadFile({ ...this.props.masterdata, ...this.props.downloadParam, inputData: { ...row[\"dataItem\"], userinfo: this.props.Login.userInfo }, userinfo: this.props.Login.userInfo, ncontrolCode: downloadId }, row)}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faCloudDownloadAlt} //title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\r\n                                                                    />\r\n                                                                </FontIconWrap>\r\n                                                                {this.props.isreportview ?\r\n                                                                    <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                        //hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewreport) === -1}\r\n                                                                        onClick={() => this.props.viewReportFile({ ...this.props.masterdata, ...this.props.downloadParam, inputData: { ...row[\"dataItem\"], userinfo: this.props.Login.userInfo }, userinfo: this.props.Login.userInfo, ncontrolCode: downloadId }, row)}\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })} data-place=\"left\"\r\n                                                                    //  data-for=\"tooltip-grid-wrap\"\r\n                                                                    >\r\n\r\n                                                                        <FontAwesomeIcon icon={faEye} //title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} \r\n                                                                        />\r\n                                                                    </FontIconWrap>\r\n                                                                    : \"\"}\r\n                                                                {/* <FontAwesomeIcon icon={faTrashAlt}\r\n                                                    title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                    onClick = {() => confirmMessage.confirm(\r\n                                                        \"deleteMessage\",\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                        () => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)\r\n                                                    )}\r\n                                                /> */}\r\n\r\n                                                                {/* <FontAwesomeIcon icon={faThumbtack}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_SETDEFAULT\" })}\r\n                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(defaultId) === -1}\r\n                                                            onClick={() => this.props.defaultRecord({ ...this.props.defaultParam, selectedRecord: row[\"dataItem\"], ncontrolCode: defaultId }, row)} /> */}\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                    onClick={() => this.props.approveRecord(row, \"Approve\", approveId)} data-place=\"left\"\r\n                                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                </FontIconWrap>\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                    onClick={() => this.props.copyRecord(row, \"Copy\", copyId)} data-place=\"left\"\r\n                                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faCopy} />\r\n                                                                </FontIconWrap>\r\n\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                    onClick={() => this.props.completeRecord(row[\"dataItem\"], \"Complete\", completeId)} data-place=\"left\"\r\n                                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faCheck} />\r\n                                                                </FontIconWrap>\r\n\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_RESENT\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(resentId) === -1}\r\n                                                                    onClick={() => this.props.reSent(row[\"dataItem\"], \"Resent\", resentId)}\r\n                                                                    data-place=\"left\" //data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faRedo} />\r\n                                                                </FontIconWrap>\r\n\r\n\r\n                                                                <Nav.Link className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })} data-place=\"left\" //data-for=\"tooltip-grid-wrap\"\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(cancelId) === -1} >\r\n                                                                    <Image src={reject} alt=\"filer-icon action-icons-wrap\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                        onClick={() => this.props.cancelRecord(row[\"dataItem\"], \"Cancel\", cancelId)} data-place=\"left\"\r\n                                                                    />\r\n                                                                </Nav.Link>\r\n                                                                {/* <Button variant=\"link\" title={this.props.intl.formatMessage({ id: \"IDS_RECEIVE\" })}\r\n                                                    className=\"mr-2 action-icons-wrap\"\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(receiveGoodsId) === -1}\r\n                                                    onClick={() => this.props.receiveRecord({ ...this.props.receiveParam, selectedRecord: row[\"dataItem\"], ncontrolCode: receiveGoodsId })}>\r\n                                                    <Image src={checkedIcon} alt=\"filer-icon\" width=\"20\" height=\"20\" />\r\n                                                </Button> */}\r\n                                                                {this.props.actionIcons ? this.props.actionIcons.length > 0 ? this.props.actionIcons.map(action =>\r\n                                                                    <FontIconWrap\r\n                                                                        className=\"d-font-icon action-icons-wrap\"\r\n                                                                        data-tip={action.title}\r\n                                                                        hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                                        onClick={() => action.onClick(row[\"dataItem\"], action, row)}>\r\n                                                                        {getActionIcon(action.controlname)}\r\n                                                                    </FontIconWrap>\r\n                                                                ) : \"\" : \"\"}\r\n                                                                {this.props.hasControlWithOutRights ?\r\n                                                                    <>\r\n                                                                        {this.props.showeditRecordWORights ?\r\n                                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \r\n                                                                                data-place=\"left\">\r\n                                                                                <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                                    //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                    name={\"deleteworights\"}\r\n                                                                                    onClick={() => this.props.editRecordWORights(row[\"dataItem\"])}\r\n                                                                                />\r\n                                                                            </FontIconWrap> : \"\"\r\n                                                                        }\r\n                                                                        {/* Add by Neeraj kumar for Language screen -RMTP-101*/}\r\n                                                                        {this.props.showeditRecordWORights ?\r\n                                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_LANGUAGESCONVERTER\" })}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \r\n                                                                                data-place=\"left\">\r\n                                                                                <FontAwesomeIcon icon={faLanguage}\r\n                                                                                    //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                    name={\"deleteworights\"}\r\n                                                                                    onClick={() => this.props.editRecordWORights(row[\"dataItem\"])}\r\n                                                                                />\r\n                                                                            </FontIconWrap> : \"\"\r\n                                                                        }\r\n                                                                        {\r\n                                                                            this.props.showdeleteRecordWORights ?\r\n                                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    // data-for=\"tooltip-grid-wrap\"\r\n                                                                                    onClick={() => this.props.deleteRecordWORights(row[\"dataItem\"])}>\r\n                                                                                    <FontAwesomeIcon icon={faTrashAlt}\r\n                                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                        name={\"deleteworights\"}\r\n\r\n                                                                                    />\r\n                                                                                </FontIconWrap> : \"\"\r\n                                                                        }\r\n\r\n                                                                    </> : \"\"\r\n                                                                }\r\n                                                            </Nav.Link>\r\n                                                        </>\r\n\r\n                                                    </td>\r\n                                        )}\r\n                                    /> : \"\"}\r\n                            </Grid>\r\n                            {[...this.props.extractedColumnList].map((item, index) =>\r\n                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName }) + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                            )}\r\n                            {this.props.detailedFieldList &&\r\n                                this.props.detailedFieldList.map((item, index) =>\r\n                                    <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName }) + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                )}\r\n                        </ExcelExport>\r\n                        <ExcelExport\r\n                            data={[]}\r\n                            //group={group}\r\n                            collapsible={true}\r\n                            fileName={this.props.screenName && this.props.screenName}\r\n                            ref={(exporter) => {\r\n                                // console.log(exporter);\r\n                                this._excelExportHeader = exporter;\r\n                            }}>\r\n                            {//console.log(this.props.extractedColumnList)\r\n                            }\r\n\r\n                            {\r\n                                this.props.isImportRequired === true ?\r\n                                    this.props.exportFieldList.length > 0 ?\r\n                                        this.props.exportFieldList.map((item, index) =>\r\n                                            <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                        ) : this.props.extractedColumnList && this.props.extractedColumnList.map((item, index) =>\r\n                                            <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                        )\r\n                                    :\r\n                                    this.props.extractedColumnList && this.props.extractedColumnList.map((item, index) =>\r\n                                        <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                    )\r\n                            }\r\n\r\n                            {/* {[...this.props.extractedColumnList].map((item, index) =>\r\n                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                            )} */}\r\n\r\n                            {this.props.detailedFieldList &&\r\n                                this.props.detailedFieldList.map((item, index) =>\r\n                                    <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                )}\r\n                        </ExcelExport>\r\n                    </LocalizationProvider >\r\n                    {/* </Tooltip> */}\r\n                    {\r\n                        this.props.isToolBarRequired ?\r\n                            <ttfStyle>\r\n                                <GridPDFExport\r\n                                    ref={(element) => { this._pdfExport = element; }}\r\n                                    margin=\"1cm\"\r\n                                    // paperSize= \"A4\"\r\n                                    scale={0.75}\r\n                                    fileName=\"Export.pdf\"\r\n\r\n                                >\r\n\r\n                                    {\r\n                                        <Grid data={process(this.props.data || [], { sort: this.props.dataState.sort, filter: this.props.dataState.filter, group: this.props.dataState.group })} group={this.props.dataState.group} groupable={true}>\r\n                                            {this.props.extractedColumnList.map((item, index) =>\r\n                                                <GridColumn key={index} title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                                    field={item.dataField}\r\n                                                    width={item.width}\r\n\r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                                : row[\"dataItem\"][item.dataField]}\r\n                                                        </td>)}\r\n                                                />\r\n                                            )}\r\n                                            {this.props.detailedFieldList &&\r\n                                                this.props.detailedFieldList.map((item, index) =>\r\n                                                    <GridColumn key={index} title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                                        field={item.dataField}\r\n                                                        width={item.width}\r\n\r\n                                                        cell={(row) => (\r\n                                                            <td>\r\n                                                                {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                                    : row[\"dataItem\"][item.dataField]}\r\n                                                            </td>)}\r\n                                                    />\r\n                                                )}\r\n\r\n\r\n                                        </Grid>}\r\n                                </GridPDFExport>\r\n\r\n                                <style>{ttfFont}</style>\r\n                            </ttfStyle>\r\n                            : \"\"\r\n                    }\r\n\r\n\r\n                </AtTableWrap >\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        let { dataResult }=this.state\r\n        if(this.props.dataResult!==previousProps.dataResult){\r\n            dataResult=this.props.dataResult;\r\n            this.setState({dataResult})\r\n        } \r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { dynamicFileDownload, undefined })(injectIntl(DataGridForStorage));"]},"metadata":{},"sourceType":"module"}