{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { chainCommands, exitCode, splitListItem, undo, redo, undoInputRule, goToNextCell, toggleInlineFormat } from '@progress/kendo-editor-common';\nimport { EditorToolsSettings } from './toolsSettings';\nvar bold = EditorToolsSettings.bold,\n    underline = EditorToolsSettings.underline,\n    italic = EditorToolsSettings.italic;\nvar mac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n/**\n * @hidden\n */\n\nexport var getShortcuts = function (settings) {\n  var insertBr = chainCommands(exitCode, function (state, dispatch) {\n    var hardBreak = settings && settings.types && settings.types.hardBreak || 'hard_break';\n    var br = state.schema.nodes[hardBreak];\n\n    if (dispatch) {\n      dispatch(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\n    }\n\n    return true;\n  });\n  var listItem = settings && settings.types && settings.types.listItem || 'list_item';\n  var toolsSettings = settings && settings.toolsSettings || {};\n\n  var shortcutsSettings = __assign({\n    'Mod-b': function (state, dispatch) {\n      return toggleInlineFormat(toolsSettings.bold || bold)(state, dispatch);\n    },\n    'Mod-i': function (state, dispatch) {\n      return toggleInlineFormat(toolsSettings.italic || italic)(state, dispatch);\n    },\n    'Mod-u': function (state, dispatch) {\n      return toggleInlineFormat(toolsSettings.underline || underline)(state, dispatch);\n    },\n    'Mod-z': undo,\n    'Shift-Mod-z': redo\n  }, __assign({}, !mac ? {\n    'Mod-y': redo\n  } : {}), {\n    'Backspace': undoInputRule,\n    'Mod-Enter': insertBr,\n    'Shift-Enter': insertBr\n  }, __assign({}, mac ? {\n    'Ctrl-Enter': insertBr\n  } : {}), {\n    'Enter': function (state, dispatch) {\n      return splitListItem(state.schema.nodes[listItem])(state, dispatch);\n    },\n    'Tab': goToNextCell(1),\n    'Shift-Tab': goToNextCell(-1)\n  });\n\n  return shortcutsSettings;\n};","map":{"version":3,"sources":["../../../src/config/shortcuts.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SACI,aADJ,EACmB,QADnB,EAEI,aAFJ,EAGI,IAHJ,EAGU,IAHV,EAMI,aANJ,EAOI,YAPJ,EAQI,kBARJ,QASO,+BATP;AAWA,SAAS,mBAAT,QAAoC,iBAApC;AAEQ,IAAA,IAAA,GAAA,mBAAA,CAAA,IAAA;AAAA,IAAM,SAAA,GAAA,mBAAA,CAAA,SAAN;AAAA,IAAiB,MAAA,GAAA,mBAAA,CAAA,MAAjB;AACR,IAAM,GAAG,GAAG,OAAO,SAAP,KAAqB,WAArB,GAAmC,MAAM,IAAN,CAAW,SAAS,CAAC,QAArB,CAAnC,GAAoE,KAAhF;AASA;;AAEG;;AACH,OAAO,IAAM,YAAY,GAAG,UACxB,QADwB,EAQvB;AACD,MAAM,QAAQ,GAAG,aAAa,CAAC,QAAD,EAAW,UAAC,KAAD,EAAQ,QAAR,EAAgB;AACrD,QAAM,SAAS,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAArB,IAA8B,QAAQ,CAAC,KAAT,CAAe,SAA7C,IAA0D,YAA5E;AACA,QAAM,EAAE,GAAG,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,SAAnB,CAAX;;AACA,QAAI,QAAJ,EAAc;AACV,MAAA,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,oBAAT,CAA8B,EAAE,CAAC,MAAH,EAA9B,EAA2C,cAA3C,EAAD,CAAR;AACH;;AACD,WAAO,IAAP;AACH,GAP6B,CAA9B;AAQA,MAAM,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAArB,IAA8B,QAAQ,CAAC,KAAT,CAAe,QAA7C,IAAyD,WAA1E;AACA,MAAM,aAAa,GAAG,QAAQ,IAAI,QAAQ,CAAC,aAArB,IAAsC,EAA5D;;AAEA,MAAM,iBAAiB,GAAA,QAAA,CAAA;AACnB,aAAS,UAAC,KAAD,EAAQ,QAAR,EAAgB;AAAK,aAAA,kBAAkB,CAAC,aAAa,CAAC,IAAd,IAAsB,IAAvB,CAAlB,CAA+C,KAA/C,EAAA,QAAA,CAAA;AAA+D,KAD1E;AAEnB,aAAS,UAAC,KAAD,EAAQ,QAAR,EAAgB;AAAK,aAAA,kBAAkB,CAAC,aAAa,CAAC,MAAd,IAAwB,MAAzB,CAAlB,CAAmD,KAAnD,EAAA,QAAA,CAAA;AAAmE,KAF9E;AAGnB,aAAS,UAAC,KAAD,EAAQ,QAAR,EAAgB;AAAK,aAAA,kBAAkB,CAAC,aAAa,CAAC,SAAd,IAA2B,SAA5B,CAAlB,CAAyD,KAAzD,EAAA,QAAA,CAAA;AAAyE,KAHpF;AAInB,aAAS,IAJU;AAKnB,mBAAe;AALI,GAAA,EAKA,QAAA,CAAA,EAAA,EACX,CAAC,GAAD,GAAO;AAAC,aAAS;AAAV,GAAP,GAAyB,EADd,CALA,EAMgB;AACnC,iBAAa,aADsB;AAEnC,iBAAa,QAFsB;AAGnC,mBAAe;AAHoB,GANhB,EASI,QAAA,CAAA,EAAA,EACf,GAAG,GAAG;AAAC,kBAAc;AAAf,GAAH,GAA8B,EADlB,CATJ,EAUwB;AAC3C,aAAS,UAAC,KAAD,EAAQ,QAAR,EAAgB;AACrB,aAAA,aAAa,CAAC,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,QAAnB,CAAD,CAAb,CAA4C,KAA5C,EAAmD,QAAnD,CAAA;AAA4D,KAFrB;AAG3C,WAAO,YAAY,CAAC,CAAD,CAHwB;AAI3C,iBAAa,YAAY,CAAC,CAAC,CAAF;AAJkB,GAVxB,CAAvB;;AAiBA,SAAO,iBAAP;AACH,CAtCM","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { chainCommands, exitCode, splitListItem, undo, redo, undoInputRule, goToNextCell, toggleInlineFormat } from '@progress/kendo-editor-common';\nimport { EditorToolsSettings } from './toolsSettings';\nvar bold = EditorToolsSettings.bold, underline = EditorToolsSettings.underline, italic = EditorToolsSettings.italic;\nvar mac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n/**\n * @hidden\n */\nexport var getShortcuts = function (settings) {\n    var insertBr = chainCommands(exitCode, function (state, dispatch) {\n        var hardBreak = settings && settings.types && settings.types.hardBreak || 'hard_break';\n        var br = state.schema.nodes[hardBreak];\n        if (dispatch) {\n            dispatch(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\n        }\n        return true;\n    });\n    var listItem = settings && settings.types && settings.types.listItem || 'list_item';\n    var toolsSettings = settings && settings.toolsSettings || {};\n    var shortcutsSettings = __assign({ 'Mod-b': function (state, dispatch) { return toggleInlineFormat(toolsSettings.bold || bold)(state, dispatch); }, 'Mod-i': function (state, dispatch) { return toggleInlineFormat(toolsSettings.italic || italic)(state, dispatch); }, 'Mod-u': function (state, dispatch) { return toggleInlineFormat(toolsSettings.underline || underline)(state, dispatch); }, 'Mod-z': undo, 'Shift-Mod-z': redo }, __assign({}, !mac ? { 'Mod-y': redo } : {}), { 'Backspace': undoInputRule, 'Mod-Enter': insertBr, 'Shift-Enter': insertBr }, __assign({}, mac ? { 'Ctrl-Enter': insertBr } : {}), { 'Enter': function (state, dispatch) {\n            return splitListItem(state.schema.nodes[listItem])(state, dispatch);\n        }, 'Tab': goToNextCell(1), 'Shift-Tab': goToNextCell(-1) });\n    return shortcutsSettings;\n};\n//# sourceMappingURL=shortcuts.js.map"]},"metadata":{},"sourceType":"module"}