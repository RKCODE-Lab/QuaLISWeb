{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\TransactionListMasterJson.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { InputGroup, FormControl, Media, ListGroup, Form, Nav //, Col \n} from 'react-bootstrap';\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../components/App.styles';\nimport { ListMasterWrapper } from '../components/list-master/list-master.styles';\nimport { getActionIcon } from '../components/HoverIcons';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport AdvFilter from './AdvFilter';\nimport { toast } from 'react-toastify';\nimport { getStatusIcon } from './StatusIcon';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { designProperties, transactionStatus } from './Enumeration';\nimport QuickSearch from './QuickSearch';\nimport FilterAccordion from './custom-accordion/filter-accordion.component';\nimport '../pages/registration/registration.css';\nimport { connect } from 'react-redux';\nimport { ListView } from '@progress/kendo-react-listview';\nimport { filterRecordBasedOnPrimaryKeyName, filterRecordBasedOnTwoArrays, filterStatusBasedOnTwoArrays, getSameRecordFromTwoArrays } from './CommonScript';\nimport CustomPager from './CustomPager';\nimport ReactTooltip from 'react-tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { //faBell, \nfaChevronDown, faChevronUp, faExclamationCircle, //faExclamationTriangle, \nfaSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport CustomSwitch from './custom-switch/custom-switch.component'; //import Iframe from 'react-iframe';\n//import { ReactComponent as SolidFilterIcon } from '../assets/image/filter-solid.svg';\n//import useLongPress from \"../actions/longPress\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass TransationListMasterJson extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n      this.props.scrollChange();\n    };\n\n    this.filterColumn = event => {\n      let filterValue = event.target.value;\n\n      if (event.keyCode === 13) {\n        this.props.filterColumnData(filterValue, this.props.filterParam, this.props.searchListName);\n      }\n    };\n\n    this.selectMultiple = (selectionKey, inputData) => {\n      let selectedArray = this.props.selectedMaster;\n      let dataList = [];\n      let removeElementFromArray = []; // let MultipleSelectCount = this.props.Login.settings[3];\n\n      let masterList = this.props.masterList && this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take);\n\n      if (selectionKey === transactionStatus.ALL) {\n        //Select All\n        let filteredList = filterRecordBasedOnPrimaryKeyName(masterList, this.props.primaryKeyField); //let filteredList = filterRecordBasedOnTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\n        // selectedArray=[];\n        // selectedArray = filteredList;\n\n        filteredList.map((item, index) => {\n          // if (index < this.state.take) {\n          //selectedArray.push(item)\n          dataList.push(item[this.props.primaryKeyField]); // }\n\n          return null;\n        });\n        inputData[`${this.props.selectedListName}`] = filteredList;\n        inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n        inputData[`${this.props.objectName}`] = filteredList;\n        inputData[\"checkBoxOperation\"] = 7;\n        inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        inputData[\"QuickSelectStatus\"] = true;\n\n        if (dataList.length > 0) {\n          this.props.getMasterDetail(inputData, true);\n        } // inputData[`${this.props.selectedListName}`] = selectedArray\n        // inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\n        // inputData[`${this.props.objectName}`] = selectedArray;\n        // inputData[\"checkBoxOperation\"] = 1;\n        // inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        // inputData[\"QuickSelectStatus\"] = true;\n        // if (dataList.length > 0) {\n        //     this.props.getMasterDetail(inputData, true);\n        // }\n        // else {\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\n        // }\n\n      } else if (selectionKey === transactionStatus.NA) {\n        let filteredList = getSameRecordFromTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\n\n        if (filteredList.length > 0) {\n          if (selectedArray.length === filteredList.length) {\n            selectedArray = [filteredList[0]];\n            dataList = [selectedArray[0][this.props.primaryKeyField]];\n          } else {\n            selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\n            dataList = [selectedArray[0][this.props.primaryKeyField]];\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray;\n          inputData[\"checkBoxOperation\"] = 6;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = filteredList;\n          inputData[\"statusNone\"] = true;\n\n          if (dataList.length > 0) {\n            this.props.getMasterDetail(inputData, false);\n          }\n        }\n      } else {\n        //Select Status Wise\n        selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\n        removeElementFromArray = getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField);\n        masterList.map(item => {\n          // if (index < this.state.take) {\n          if (item[this.props.selectionField] === selectionKey) {\n            selectedArray.push(item);\n            dataList.push(item[this.props.primaryKeyField]);\n          }\n\n          return null;\n        }); // this.props.masterList && this.props.masterList.map((item) => {\n        //     if (item[this.props.selectionField] === selectionKey) {\n        //         selectedArray.push(item)\n        //         dataList.push(item[this.props.primaryKeyField]);\n        //     }\n        //     return null;\n        // })\n\n        inputData[`${this.props.selectedListName}`] = selectedArray;\n        inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n        inputData[`${this.props.objectName}`] = selectedArray;\n        inputData[\"checkBoxOperation\"] = 5;\n        inputData[\"childTabsKey\"] = this.props.childTabsKey;\n        inputData[\"removeElementFromArray\"] = removeElementFromArray;\n\n        if (selectedArray.length > 0) {\n          this.props.getMasterDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_NOITEMSFOUND\"\n          }));\n        }\n      }\n    };\n\n    this.getselectedDetailAvoidDuplicateProps = (master, inputData, needMultiSelect) => {\n      if (this.props.selectedMaster.length === 1 && this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1 || needMultiSelect === false) {\n        // const showMore = {};\n        this.getSelectedDetail(master, inputData, needMultiSelect);\n      }\n\n      this.setState({\n        showList: null,\n        index: null,\n        activeIconIndex: null\n      });\n    };\n\n    this.getSelectedDetail = (master, inputData, needMultiSelect) => {\n      let bool;\n      let selectedMaster;\n\n      if (needMultiSelect === false) {\n        if (this.state.multipleselectionFlag) {\n          selectedMaster = getSameRecordFromTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField);\n        } else {\n          selectedMaster = master;\n        }\n\n        if (selectedMaster.length > 2) {\n          bool = true;\n        }\n\n        if (selectedMaster.length === 1 && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1) {\n          bool = false;\n        } else {\n          bool = true;\n        }\n      } else {\n        bool = true;\n      }\n\n      if (bool) {\n        let selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ? filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField) : [] : [];\n        let dataList = [];\n        let removeElementFromArray = [];\n        const indexValue = selectedArray ? selectedArray.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\n\n        if (indexValue === -1) {\n          //add new item\n          // let MultipleSelectCount = this.props.Login.settings[3];\n          // if (selectedArray.length < MultipleSelectCount) {\n          removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField);\n\n          if (this.props.needMultiSelect) {\n            //uselect an Item\n            selectedArray.push(master);\n            dataList.push(master[this.props.primaryKeyField]);\n          } else {\n            //Click new Item\n            selectedArray = [master];\n            dataList = [master[this.props.primaryKeyField]];\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray;\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = needMultiSelect ? [] : removeElementFromArray;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, true);\n          } // } else {\n          //     toast.warn(`${this.props.intl.formatMessage({ id: \"IDS_SELECTIONLIMITEXCEED\" })} ${MultipleSelectCount} ${this.props.intl.formatMessage({ id: \"IDS_RECORDS\" })}`);\n          // }\n\n        } else if (needMultiSelect) {\n          // let removeElementFromArray = [];\n          if (needMultiSelect) {\n            //uselect an Item\n            removeElementFromArray.push(this.props.selectedMaster[indexValue]);\n            selectedArray.splice(indexValue, 1);\n            dataList.splice(indexValue, 1);\n          } else {\n            //Click new Item\n            removeElementFromArray.push(master);\n            selectedArray.push(master);\n            dataList.push(master[this.props.primaryKeyField]);\n          }\n\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = selectedArray.map(x => x[this.props.primaryKeyField]).join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray;\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? 2 : 4;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n          inputData[\"removeElementFromArray\"] = removeElementFromArray;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, false);\n          }\n        } else {\n          selectedArray.push(master);\n          dataList.push(master[this.props.primaryKeyField]);\n          inputData[`${this.props.selectedListName}`] = selectedArray;\n          inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\");\n          inputData[`${this.props.objectName}`] = selectedArray;\n          inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\n          inputData[\"childTabsKey\"] = this.props.childTabsKey;\n\n          if (selectedArray.length > 0) {\n            this.props.getMasterDetail(inputData, true);\n          }\n        }\n      }\n    };\n\n    this.onCheckBoxselect = (event, master, inputData) => {\n      if (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1) {\n        this.getSelectedDetail(master, inputData, true);\n      } else if (this.props.selectedMaster.length > 1) {\n        this.getSelectedDetail(master, inputData, true);\n      }\n\n      this.setState({\n        showList: null\n      });\n      event.preventDefault();\n      event.stopPropagation(); // else{\n      //     event.preventDefault();\n      //     event.stopPropagation();\n      //     this.getSelectedDetail(master, inputData, true);\n      // }\n    };\n\n    this.updateScrollHeight = () => {\n      setTimeout(() => {\n        const pagerheight = document.querySelector('.pager_wrap');\n        const navHeight = document.querySelector('.navbar.navbar-expand');\n        const filterAccHeight = document.querySelector('.filter-accordian');\n        const filterHeight = document.querySelector('.filter-wrap-group');\n        const breadCrumbsHeight = document.querySelector('.breadcrumbs-scroll-container');\n        let val = navHeight ? navHeight.clientHeight : 53;\n\n        if (this.props.needAccordianFilter) {\n          val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45);\n        }\n\n        if (this.props.needFilter) {\n          val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36);\n        }\n\n        if (!this.props.notSearchable || !this.state.showSearch) {\n          val = val + (filterHeight ? filterHeight.clientHeight : 55);\n        }\n\n        if (!this.props.hidePaging) {\n          val = val + (pagerheight ? pagerheight.clientHeight : 32);\n        }\n\n        if (this.props.cardHead) {\n          val = val + this.props.cardHead;\n        }\n\n        val = val + 3;\n        this.setState({\n          scrollHeight: 'calc(100vh - ' + val + 'px)'\n        });\n      }, 1000);\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.onClickActions1 = (event, dataItem) => {\n      event.stopPropagation();\n      this.props.ListmasterSwitch({\n        event,\n        nusersrolehidescreencode: dataItem.nusersrolehidescreencode\n      });\n    };\n\n    this.onClickActions = (event, master, action) => {\n      event.stopPropagation();\n      let selectedArray = this.props.selectedMaster ? this.props.selectedMaster : [];\n      let dataList = selectedArray.map(item => item[this.props.primaryKeyField]);\n      const indexValue = this.props.selectedMaster ? this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\n\n      if (indexValue === -1) {\n        if (this.props.needMultiSelect) {\n          selectedArray.push(master);\n          dataList.push(master[this.props.primaryKeyField]);\n        } else {\n          selectedArray = [master];\n          dataList = [master[this.props.primaryKeyField]];\n        }\n      }\n\n      action.onClick({ ...action.inputData,\n        [action.objectName]: master,\n        [this.props.selectedListName]: selectedArray,\n        [this.props.primaryKeyField]: dataList.join(\",\")\n      });\n    };\n\n    this.showHideDetails = (event, index) => {\n      event.stopPropagation();\n      let showMore = { ...this.state.showMore,\n        [index]: !this.state.showMore[index]\n      }; //   const check=showMore.map(item=>{return})\n\n      const expandAll = [...Object.values(showMore)];\n      let allFieldExpanded = this.state.allFieldExpanded;\n\n      if (expandAll.includes(false)) {\n        allFieldExpanded = false;\n      } else {\n        let len = this.props.masterList.length;\n\n        if (len === expandAll.length) {\n          allFieldExpanded = true;\n        }\n      }\n\n      this.setState({\n        showMore,\n        allFieldExpanded,\n        expandCheck: expandAll,\n        disableClick: true\n      });\n    };\n\n    this.ExpandAll = masterData => {\n      const allFieldExpanded = this.state.allFieldExpanded;\n      let showMore = {};\n\n      if (!allFieldExpanded) {\n        showMore = masterData.map((master, index) => {\n          return showMore = { ...showMore,\n            [index]: true\n          };\n        });\n      }\n\n      this.setState({\n        showMore,\n        allFieldExpanded: !allFieldExpanded\n      });\n    };\n\n    this.transactionListDesign = (props, skip, index) => {\n      let item = props.dataItem;\n      const customswitchposition = {\n        // 'padding-left': '290px',\n        'padding-top': '-20px'\n      }; // let index;\n      // const onLongPress = (e) => {\n      //     e.preventDefault();\n      //     e.stopPropagation();\n      //     this.setState({\n      //         index: props.index === this.state.index ? null : props.index\n      //     })\n      // };\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: `${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor  ${this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        onClick: () => this.getselectedDetailAvoidDuplicateProps(item, { ...this.props.inputParam\n        }, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }\n      }, this.props.needMultiSelect ? /*#__PURE__*/React.createElement(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"customControl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n        type: \"checkbox\",\n        id: `tm_customCheck_${this.props.listName}_${props.index}`,\n        checked: this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? true : false,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check.Label, {\n        className: `mr-3 ${this.props.showStatusBlink && item[\"bflag\"] ? \"blinkCheckbox\" : \"\"}`,\n        onClick: event => this.onCheckBoxselect(event, item, { ...this.props.inputParam\n        }, true),\n        htmlFor: `tm_customCheck_${this.props.listName}_${props.index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 33\n        }\n      })) : \"\", /*#__PURE__*/React.createElement(Media.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ContentPanel, {\n        className: \"product-category title-grid-wrap-width-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(ContentPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(MediaHeader, {\n        \"data-tip\": item[this.props.mainField] //data-for=\"tooltip-common-wrap\"\n        ,\n        style: {\n          maxWidth: this.props.objectName === \"test\" ? \"30rem\" : \"15rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 37\n        }\n      }, this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \"), item[this.props.mainField], this.props.showStatusLink && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text ml-1 pl-2\",\n        style: {\n          padding: \"0\",\n          display: 'inline',\n          color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 41\n        }\n      }, this.props.showStatusIcon && getStatusIcon(item[this.props.statusField]), this.props.showStatusName && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-1 text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 46\n        }\n      }, item[this.props.statusFieldName])), this.props.showStatusBlink && item[\"bflag\"] ?\n      /*#__PURE__*/\n      // <div class=\"blink\">🔴</div> \n      React.createElement(FontAwesomeIcon, {\n        class: \"blink\",\n        style: {\n          width: \"0.8rem\"\n        },\n        icon: faExclamationCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 37\n        }\n      }) : \"\"))), /*#__PURE__*/React.createElement(MediaSubHeaderText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 29\n        }\n      }, this.props.subFields && this.props.subFields.map((field, index) => this.props.subFieldsLabel ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 45\n        }\n      }, `${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \"}`), /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 45\n        }\n      }, item[field[designProperties.VALUE]] === undefined ? '-' : item[field[designProperties.VALUE]]), index !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 91\n        }\n      }, \"|\") : \"\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 45\n        }\n      }, `${item[field[designProperties.VALUE]] === undefined ? '-' : item[field[designProperties.VALUE]]}`), index !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 90\n        }\n      }, \"|\") : \"\")), this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: `show-wrap_${props.index}`,\n        className: `show-more-action showmore`,\n        onClick: event => this.showHideDetails(event, props.index, \"inner\"),\n        style: {\n          display: \"inline\"\n        },\n        title: this.props.intl.formatMessage({\n          id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: `show-more-link mr-1 showmore`,\n        htmlFor: `show-wrap_${props.index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 49\n        }\n      }, ` ${this.props.intl.formatMessage({\n        id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\"\n      })}`), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        size: \"sm\",\n        htmlFor: `show-wrap_${props.index}`,\n        icon: this.state.allFieldExpanded ? faChevronUp : this.state.showMore[props.index] ? faChevronUp : faChevronDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(Media.Body, {\n        className: `show-more-wrap ${this.state.allFieldExpanded ? \"showmore\" : this.state.showMore[props.index] ? \"showmore\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MediaSubHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 45\n        }\n      }, this.props.moreField.map((field, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 57\n        }\n      }, `${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \"}  ${item[field[designProperties.VALUE]] === undefined ? '-' : item[field[designProperties.VALUE]]}`), index % 2 === 0 && index !== this.props.moreField.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 121\n        }\n      }, \"|\") : \"\", (index + 1) % 2 === 0 ? /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 82\n        }\n      }) : \"\"))))) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: `icon-list-sm-wrap ${props.index === this.state.index ? 'active' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 25\n        }\n      }, this.props.actionIcons && this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 && this.props.actionIcons.length > 0 ? // <div onClick={onLongPress} className=\"icon-list-sm\" >\n      //  <div className=\"icon-list-sm\" >\n      //      <FontAwesomeIcon size=\"sm\" icon={faChevronDown} />\n      //  </div>\n      \"\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: `icon-group-wrap ${this.props.listMasterShowIcon ? \"enable-view\" : \"\"} ${this.props.clickIconGroup ? \"click-view\" : \"hover-view\"} ${this.state.activeIconIndex == props.index ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 25\n        }\n      }, this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action, index) => /*#__PURE__*/React.createElement(\"span\", {\n        className: `${this.props.listMasterShowIcon && index + 1 > this.props.listMasterShowIcon ? 'disable-view' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 33\n        }\n      }, action.needConditionalIcon ? action.conditionalIconFunction(item) && /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" //data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        \"data-tip\": action.title,\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 37\n        }\n      }, getActionIcon(action.controlname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\" //data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": action.title,\n        \"data-place\": action.dataplace && action.dataplace ? action.dataplace : \"\",\n        hidden: action.hidden === undefined ? true : action.hidden,\n        onClick: event => this.onClickActions(event, item, action),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 37\n        }\n      }, getActionIcon(action.controlname)))))), this.props.clickIconGroup ? this.props.listMasterShowIcon && this.props.actionIcons && this.props.actionIcons.length <= this.props.listMasterShowIcon ? \"\" : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"vertical-dots end-icon\",\n        onClick: () => this.iconGroupView(props.index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 33\n        }\n      }) : \"\", this.props.ListmasterSwitch && this.props.ListScreenHidebtn && /*#__PURE__*/React.createElement(\"span\", {\n        //data-for=\"screenrights_wrap\" \n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ENABLEDISABLESCREEN\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: customswitchposition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CustomSwitch, {\n        type: \"switch\",\n        id: props.dataItem.nusersrolehidescreencode //  id={\"ListmasterSwitch\"}\n        ,\n        onChange: event => this.props.ListmasterSwitch(event, props.dataItem.nusersrolehidescreencode),\n        checked: props.dataItem.needrights === transactionStatus.YES ? true : false,\n        name: props.dataItem.nusersrolehidescreencode,\n        className: \"custom-switch-md customeswitchmanual\" //data-tip={\"Enable to group by screen name\"}\n        // data-for=\"screenrights_wrap\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 34\n        }\n      })))));\n    };\n\n    this.state = {\n      showMore: {},\n      allFieldExpanded: false,\n      buttonCount: 4,\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\n      info: true,\n      expandCheck: [],\n      scrollHeight: '100vh',\n      multipleselectionFlag: this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false,\n      showList: null,\n      disableClick: false,\n      showSearch: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateScrollHeight();\n  }\n\n  render() {\n    //console.log(this.props);\n    // const { skip, take } = this.state;\n    let checkStatus = '';\n    let masterList = this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [];\n    let selectedMaster = this.props.selectedMaster && this.props.masterList ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : [];\n\n    if (masterList && masterList.length > 0 && selectedMaster && selectedMaster.length > 0) {\n      if (masterList.length === selectedMaster.length) {\n        checkStatus = 'all';\n      } else if (masterList.length !== selectedMaster.length) {\n        checkStatus = 'partial';\n      } else if (this.props.selectedMaster.length === 0) {\n        checkStatus = '';\n      }\n    } // className=\"client-list-scroll\"\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListMasterWrapper, {\n      className: `${this.state.showModalBg ? 'show_modal_bg' : ''} ${this.props.splitModeClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }, !this.props.notSearchable ? /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"search-with-ico-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 33\n      }\n    }, this.props.needMultiSelect ? /*#__PURE__*/React.createElement(QuickSearch, {\n      checkStatus: checkStatus //selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [], this.props.selectionField, this.props.selectionColorField)}\n      ,\n      selectionList: this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectionField, this.props.selectionColorField),\n      selectionField: this.props.selectionField,\n      selectionFieldName: this.props.selectionFieldName,\n      selectionColorField: this.props.selectionColorField,\n      selectMultiple: this.selectMultiple,\n      inputParam: this.props.inputParam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 41\n      }\n    }) : \"\"), this.props.hideSearch ? \"\" : !this.props.disableToolBarItems ?\n    /*#__PURE__*/\n    // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\n    React.createElement(\"div\", {\n      className: `list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon\",\n      onClick: this.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      ref: this.props.searchRef,\n      autoComplete: \"off\",\n      placeholder: `${this.props.intl.formatMessage({\n        id: \"IDS_FILTER\"\n      })}`,\n      name: \"search\",\n      onKeyUp: e => this.filterColumn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 41\n      }\n    }), this.state.showSearch ? /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"close-right-icon\",\n      onClick: this.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 49\n      }\n    })) : \"\") : \"\", !this.state.showSearch ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"filter-top-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 37\n      }\n    }, !this.props.disableToolBarItems && this.props.needFilter ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(AdvFilter, {\n      filterComponent: this.props.filterComponent,\n      dataFor: \"tooltip-common-wrap\",\n      onFilterSubmit: this.props.onFilterSubmit,\n      showFilter: this.props.showFilter,\n      openFilter: this.props.openFilter,\n      closeFilter: this.props.closeFilter,\n      showModalBg: e => this.setState({\n        showModalBg: e\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 49\n      }\n    })) : \"\", this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"p-0\",\n      name: \"gridexpand\",\n      onClick: () => this.ExpandAll(masterList),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 53\n      }\n    }, this.props.intl.formatMessage({\n      id: this.props.masterList.length ? this.state.expandCheck ? this.props.masterList.length === this.state.expandCheck.length ? this.state.expandCheck.includes(false) ? \"IDS_EXPANDALL\" : \"IDS_EXPANDLESS\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\" : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\n    })))) : \"\") : \"\") : '', /*#__PURE__*/React.createElement(React.Fragment, null, !this.state.showSearch ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 33\n      }\n    }, this.props.titleHead ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 61\n      }\n    }, this.props.titleHead) : '', this.props.commonActions) : \"\")), this.props.needAccordianFilter ? /*#__PURE__*/React.createElement(FilterAccordion, {\n      key: \"filter\",\n      className: \"filter-accordian\",\n      filterComponent: this.props.accordianfilterComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 29\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ClientList, {\n      className: \"product-list port-height-inner\",\n      style: {\n        height: this.props.paneHeight ? this.props.paneHeight : this.state.scrollHeight\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListView //  data={this.props.hidePaging ? this.props.masterList : this.props.masterList ? this.props.masterList.slice(this.state.skip, this.props.skip + this.props.take) : []}\n    //                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? \n    //                    this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + \n    //                (this.props.take ? this.props.take : this.state.take)))}\n    //   //  item={(props, index) => this.transactionListDesign(props, this.props.skip, index)}\n    //        //       data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\n    //        item={(props) => this.transactionListDesign(props)}\n    , {\n      data: this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take),\n      item: (props, section, index) => this.transactionListDesign(props, this.props.skip, index) //  item={(props, index) => this.transactionListDesign(props, 0, 0)}\n      // style={{ width: \"100%\" }}\n      // header={myHeader}\n      // footer={this.myFooter}\n      //item={React.ComponentType<ListViewItemProps>} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 29\n      }\n    }))), this.props.hidePaging ? \"\" : this.props.masterList && this.props.masterList.length > 0 ? /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.props.skip,\n      width: this.props.splitChangeWidthPercentage,\n      take: this.props.take,\n      handlePageChange: this.props.handlePageChange,\n      total: this.props.masterList.length,\n      buttonCount: this.props.splitChangeWidthPercentage >= 30 ? this.state.buttonCount : this.props.buttonCount ? this.props.buttonCount : 2,\n      userInfo: this.props.Login.userInfo,\n      info: this.state.info,\n      pagershowwidth: 30 // pageSize={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\n      ,\n      pageSize: this.props.pageSize || this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)) //  pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 33\n      }\n    }) //     <CustomPager\n    //     skip={this.props.skip ? this.props.skip : this.state.skip}\n    //     take={this.props.take ? this.props.take : this.state.take}\n    //     width={20}\n    //     pagershowwidth={18}\n    //     handlePageChange={this.props.handlePageChange}\n    //     total={this.props.masterList ? this.props.masterList.length : 0}\n    //     buttonCount={this.state.buttonCount}\n    //     info={this.state.info}\n    //     userInfo={this.props.Login.userInfo}\n    //     pageSize={this.props.pageSize? this.props.pageSize :this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\n    // >\n    //s </CustomPager>\n    : ''));\n  } // myFooter = () => {\n  //     return (\n  //     )\n  // }\n\n\n  iconGroupView(index) {\n    this.setState({\n      activeIconIndex: this.state.activeIconIndex == index ? null : index\n    });\n  }\n\n  componentDidUpdate(previousProps) {\n    ReactTooltip.rebuild();\n\n    if (this.props.showMoreResetList) {\n      if (this.props.inputParam.masterData && !Array.isArray(this.props.inputParam.masterData) && this.props.inputParam.masterData[this.props.showMoreResetListName] !== previousProps.inputParam.masterData[this.props.showMoreResetListName]) {\n        this.setState({\n          allFieldExpanded: false,\n          showList: null,\n          showMore: {}\n        });\n      }\n    }\n\n    if (this.props.masterList !== previousProps.masterList) {\n      this.updateScrollHeight();\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, undefined)(injectIntl(TransationListMasterJson));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/TransactionListMasterJson.jsx"],"names":["React","injectIntl","InputGroup","FormControl","Media","ListGroup","Form","Nav","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","MediaSubHeaderText","SearchIcon","ContentPanel","ListMasterWrapper","getActionIcon","AdvFilter","toast","getStatusIcon","PerfectScrollbar","designProperties","transactionStatus","QuickSearch","FilterAccordion","connect","ListView","filterRecordBasedOnPrimaryKeyName","filterRecordBasedOnTwoArrays","filterStatusBasedOnTwoArrays","getSameRecordFromTwoArrays","CustomPager","ReactTooltip","FontAwesomeIcon","faChevronDown","faChevronUp","faExclamationCircle","faSearch","faTimes","CustomSwitch","mapStateToProps","state","Login","TransationListMasterJson","Component","constructor","props","handlePageChange","e","setState","skip","take","scrollChange","filterColumn","event","filterValue","target","value","keyCode","filterColumnData","filterParam","searchListName","selectMultiple","selectionKey","inputData","selectedArray","selectedMaster","dataList","removeElementFromArray","masterList","slice","ALL","filteredList","primaryKeyField","map","item","index","push","selectedListName","join","objectName","childTabsKey","length","getMasterDetail","NA","selectionField","warn","intl","formatMessage","id","getselectedDetailAvoidDuplicateProps","master","needMultiSelect","findIndex","x","getSelectedDetail","showList","activeIconIndex","bool","multipleselectionFlag","m1","indexValue","splice","onCheckBoxselect","preventDefault","stopPropagation","updateScrollHeight","setTimeout","pagerheight","document","querySelector","navHeight","filterAccHeight","filterHeight","breadCrumbsHeight","val","clientHeight","needAccordianFilter","needFilter","notSearchable","showSearch","hidePaging","cardHead","scrollHeight","toggleSearch","onClickActions1","dataItem","ListmasterSwitch","nusersrolehidescreencode","onClickActions","action","onClick","showHideDetails","showMore","expandAll","Object","values","allFieldExpanded","includes","len","expandCheck","disableClick","ExpandAll","masterData","transactionListDesign","customswitchposition","inputParam","listName","showStatusBlink","mainField","maxWidth","mainFieldLabel","concat","showStatusLink","padding","display","color","statusColor","scolorhexcode","showStatusIcon","statusField","showStatusName","statusFieldName","width","subFields","field","subFieldsLabel","LABEL","userInfo","slanguagetypecode","COLOUR","VALUE","undefined","moreField","actionIcons","listMasterShowIcon","clickIconGroup","needConditionalIcon","conditionalIconFunction","dataplace","title","hidden","controlname","iconGroupView","ListScreenHidebtn","needrights","YES","buttonCount","settings","parseInt","info","componentDidMount","render","checkStatus","showModalBg","splitModeClass","titleClasses","hideQuickSearch","selectionList","selectionColorField","selectionFieldName","hideSearch","disableToolBarItems","searchRef","filterComponent","onFilterSubmit","showFilter","openFilter","closeFilter","titleHead","commonActions","accordianfilterComponent","height","paneHeight","section","splitChangeWidthPercentage","pageSize","split","setting","componentDidUpdate","previousProps","rebuild","showMoreResetList","Array","isArray","showMoreResetListName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { InputGroup, FormControl, Media, ListGroup, Form, Nav//, Col \r\n} from 'react-bootstrap';\r\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../components/App.styles';\r\nimport { ListMasterWrapper } from '../components/list-master/list-master.styles';\r\nimport { getActionIcon } from '../components/HoverIcons';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport AdvFilter from './AdvFilter';\r\nimport { toast } from 'react-toastify';\r\nimport { getStatusIcon } from './StatusIcon'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { designProperties, transactionStatus } from './Enumeration';\r\nimport QuickSearch from './QuickSearch';\r\nimport FilterAccordion from './custom-accordion/filter-accordion.component';\r\nimport '../pages/registration/registration.css'\r\nimport { connect } from 'react-redux';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { filterRecordBasedOnPrimaryKeyName, filterRecordBasedOnTwoArrays, filterStatusBasedOnTwoArrays, getSameRecordFromTwoArrays } from './CommonScript';\r\nimport CustomPager from './CustomPager';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { //faBell, \r\n    faChevronDown, faChevronUp, faExclamationCircle, //faExclamationTriangle, \r\n    faSearch,faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport CustomSwitch from './custom-switch/custom-switch.component';\r\n//import Iframe from 'react-iframe';\r\n//import { ReactComponent as SolidFilterIcon } from '../assets/image/filter-solid.svg';\r\n//import useLongPress from \"../actions/longPress\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nclass TransationListMasterJson extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            allFieldExpanded: false,\r\n            buttonCount: 4,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\r\n            info: true,\r\n            expandCheck: [],\r\n            scrollHeight: '100vh',\r\n            multipleselectionFlag: this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false,\r\n            showList: null,\r\n            disableClick: false,\r\n            showSearch: false\r\n        }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        this.props.scrollChange()\r\n    };\r\n\r\n    filterColumn = (event) => {\r\n        let filterValue = event.target.value;\r\n        if (event.keyCode === 13) {\r\n            this.props.filterColumnData(filterValue, this.props.filterParam, this.props.searchListName);\r\n        }\r\n    }\r\n    selectMultiple = (selectionKey, inputData) => {\r\n        let selectedArray = this.props.selectedMaster;\r\n\r\n        let dataList = [];\r\n        let removeElementFromArray = [];\r\n        // let MultipleSelectCount = this.props.Login.settings[3];\r\n        let masterList = this.props.masterList && this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take);\r\n\r\n        if (selectionKey === transactionStatus.ALL) {//Select All\r\n            let filteredList = filterRecordBasedOnPrimaryKeyName(masterList ,this.props.primaryKeyField);\r\n            //let filteredList = filterRecordBasedOnTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\r\n            // selectedArray=[];\r\n            // selectedArray = filteredList;\r\n            filteredList.map((item, index) => {\r\n                // if (index < this.state.take) {\r\n                //selectedArray.push(item)\r\n                dataList.push(item[this.props.primaryKeyField]);\r\n                // }\r\n                return null;\r\n            });\r\n         \r\n            inputData[`${this.props.selectedListName}`] = filteredList\r\n            inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            inputData[`${this.props.objectName}`] = filteredList;\r\n            inputData[\"checkBoxOperation\"] = 7;\r\n            inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            inputData[\"QuickSelectStatus\"] = true;\r\n            if (dataList.length > 0) {\r\n                this.props.getMasterDetail(inputData, true);\r\n            }\r\n\r\n            // inputData[`${this.props.selectedListName}`] = selectedArray\r\n            // inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            // inputData[`${this.props.objectName}`] = selectedArray;\r\n            // inputData[\"checkBoxOperation\"] = 1;\r\n            // inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            // inputData[\"QuickSelectStatus\"] = true;\r\n            // if (dataList.length > 0) {\r\n            //     this.props.getMasterDetail(inputData, true);\r\n            // }\r\n            // else {\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\r\n            // }\r\n\r\n        } else if (selectionKey === transactionStatus.NA) {\r\n            let filteredList = getSameRecordFromTwoArrays(masterList, selectedArray, this.props.primaryKeyField);\r\n            if (filteredList.length > 0) {\r\n                if (selectedArray.length === filteredList.length) {\r\n                    selectedArray = [filteredList[0]];\r\n                    dataList = [selectedArray[0][this.props.primaryKeyField]];\r\n                } else {\r\n                    selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\r\n                    dataList = [selectedArray[0][this.props.primaryKeyField]];\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray;\r\n                inputData[\"checkBoxOperation\"] = 6;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = filteredList;\r\n                inputData[\"statusNone\"] = true;\r\n                if (dataList.length > 0) {\r\n                    this.props.getMasterDetail(inputData, false);\r\n                }\r\n            }\r\n\r\n        } else {//Select Status Wise\r\n            selectedArray = filterRecordBasedOnTwoArrays(selectedArray, masterList, this.props.primaryKeyField);\r\n\r\n            removeElementFromArray = getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField)\r\n            masterList.map((item) => {\r\n                // if (index < this.state.take) {\r\n                if (item[this.props.selectionField] === selectionKey) {\r\n                    selectedArray.push(item)\r\n                    dataList.push(item[this.props.primaryKeyField]);\r\n                }\r\n                return null;\r\n            });\r\n\r\n            // this.props.masterList && this.props.masterList.map((item) => {\r\n            //     if (item[this.props.selectionField] === selectionKey) {\r\n            //         selectedArray.push(item)\r\n            //         dataList.push(item[this.props.primaryKeyField]);\r\n            //     }\r\n            //     return null;\r\n            // })\r\n            inputData[`${this.props.selectedListName}`] = selectedArray\r\n            inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n            inputData[`${this.props.objectName}`] = selectedArray\r\n            inputData[\"checkBoxOperation\"] = 5;\r\n            inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n            inputData[\"removeElementFromArray\"] = removeElementFromArray;\r\n            if (selectedArray.length > 0) {\r\n                this.props.getMasterDetail(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOITEMSFOUND\" }))\r\n            }\r\n        }\r\n    }\r\n    getselectedDetailAvoidDuplicateProps = (master, inputData, needMultiSelect) => {\r\n        if ((this.props.selectedMaster.length === 1 &&\r\n            this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1)\r\n            || (needMultiSelect === false)) {\r\n            // const showMore = {};\r\n            this.getSelectedDetail(master, inputData, needMultiSelect);\r\n        }\r\n        this.setState({\r\n            showList: null,\r\n            index: null,\r\n            activeIconIndex :null\r\n        })\r\n    }\r\n    getSelectedDetail = (master, inputData, needMultiSelect) => {\r\n        let bool;\r\n        let selectedMaster;\r\n        if (needMultiSelect === false) {\r\n            if (this.state.multipleselectionFlag) {\r\n                selectedMaster = getSameRecordFromTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField)\r\n            } else {\r\n                selectedMaster = master;\r\n            }\r\n\r\n            if (selectedMaster.length > 2) {\r\n                bool = true;\r\n            }\r\n            if (selectedMaster.length === 1 && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) !== -1) {\r\n                bool = false\r\n            } else {\r\n                bool = true\r\n            }\r\n        } else {\r\n            bool = true;\r\n        }\r\n        if (bool) {\r\n            let selectedArray = this.props.selectedMaster ? needMultiSelect ? this.props.selectedMaster : this.state.multipleselectionFlag ?\r\n                filterRecordBasedOnTwoArrays(this.props.selectedMaster, this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.primaryKeyField) : [] : [];\r\n            let dataList = [];\r\n            let removeElementFromArray = [];\r\n            const indexValue = selectedArray ?\r\n                selectedArray.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\r\n            if (indexValue === -1) {//add new item\r\n                // let MultipleSelectCount = this.props.Login.settings[3];\r\n                // if (selectedArray.length < MultipleSelectCount) {\r\n                removeElementFromArray = this.state.multipleselectionFlag ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) :\r\n                    getSameRecordFromTwoArrays(this.props.masterList, this.props.selectedMaster, this.props.primaryKeyField);\r\n\r\n\r\n                if (this.props.needMultiSelect) {//uselect an Item\r\n                    selectedArray.push(master);\r\n                    dataList.push(master[this.props.primaryKeyField]);\r\n                } else {//Click new Item\r\n                    selectedArray = [master];\r\n                    dataList = [master[this.props.primaryKeyField]];\r\n\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = needMultiSelect ? [] : removeElementFromArray;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, true);\r\n\r\n                }\r\n                // } else {\r\n                //     toast.warn(`${this.props.intl.formatMessage({ id: \"IDS_SELECTIONLIMITEXCEED\" })} ${MultipleSelectCount} ${this.props.intl.formatMessage({ id: \"IDS_RECORDS\" })}`);\r\n                // }\r\n            } else if (needMultiSelect) {\r\n                // let removeElementFromArray = [];\r\n                if (needMultiSelect) {//uselect an Item\r\n                    removeElementFromArray.push(this.props.selectedMaster[indexValue]);\r\n                    selectedArray.splice(indexValue, 1)\r\n                    dataList.splice(indexValue, 1);\r\n\r\n                } else {//Click new Item\r\n                    removeElementFromArray.push(master);\r\n                    selectedArray.push(master);\r\n                    dataList.push(master[this.props.primaryKeyField])\r\n\r\n                }\r\n                inputData[`${this.props.selectedListName}`] = selectedArray;\r\n                inputData[`${this.props.primaryKeyField}`] = selectedArray.map(x => x[this.props.primaryKeyField]).join(\",\");\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? 2 : 4;\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                inputData[\"removeElementFromArray\"] = removeElementFromArray;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, false);\r\n                }\r\n            } else {\r\n                selectedArray.push(master);\r\n                dataList.push(master[this.props.primaryKeyField])\r\n                inputData[`${this.props.selectedListName}`] = selectedArray\r\n                inputData[`${this.props.primaryKeyField}`] = dataList.join(\",\")\r\n                inputData[`${this.props.objectName}`] = selectedArray\r\n                inputData[\"checkBoxOperation\"] = needMultiSelect ? 1 : this.state.multipleselectionFlag ? 5 : 3;\r\n\r\n\r\n                inputData[\"childTabsKey\"] = this.props.childTabsKey;\r\n                if (selectedArray.length > 0) {\r\n                    this.props.getMasterDetail(inputData, true);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    onCheckBoxselect = (event, master, inputData) => {\r\n        if (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === master[this.props.primaryKeyField]) === -1) {\r\n            this.getSelectedDetail(master, inputData, true);\r\n        } else if (this.props.selectedMaster.length > 1) {\r\n            this.getSelectedDetail(master, inputData, true);\r\n        }\r\n        this.setState({\r\n            showList: null\r\n        })\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        // else{\r\n        //     event.preventDefault();\r\n        //     event.stopPropagation();\r\n        //     this.getSelectedDetail(master, inputData, true);\r\n        // }\r\n    }\r\n    updateScrollHeight=()=>{\r\n        setTimeout(() => {\r\n            const pagerheight = document.querySelector('.pager_wrap');\r\n            const navHeight = document.querySelector('.navbar.navbar-expand');\r\n            const filterAccHeight = document.querySelector('.filter-accordian');\r\n            const filterHeight = document.querySelector('.filter-wrap-group');\r\n            const breadCrumbsHeight = document.querySelector('.breadcrumbs-scroll-container');\r\n            let val = navHeight ? navHeight.clientHeight : 53;\r\n            if (this.props.needAccordianFilter) {\r\n                val = val + (filterAccHeight ? filterAccHeight.clientHeight : 45);\r\n            }\r\n            if (this.props.needFilter) {\r\n                val = val + (breadCrumbsHeight ? breadCrumbsHeight.clientHeight : 36);\r\n            }\r\n            if (!this.props.notSearchable || !this.state.showSearch) {\r\n                val = val + (filterHeight ? filterHeight.clientHeight : 55);\r\n            }\r\n            if (!this.props.hidePaging) {\r\n                val = val + (pagerheight ? pagerheight.clientHeight : 32);\r\n            }\r\n            if(this.props.cardHead){\r\n                val = val + this.props.cardHead;\r\n            }\r\n            val = val + 3;\r\n            this.setState({\r\n                scrollHeight: 'calc(100vh - ' + val + 'px)'\r\n\r\n            })\r\n        }, 1000)\r\n    }\r\n    componentDidMount() {\r\n       this.updateScrollHeight()\r\n    }\r\n\r\n    toggleSearch = () => {\r\n            this.setState({\r\n                showSearch:   !this.state.showSearch\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        //console.log(this.props);\r\n        // const { skip, take } = this.state;\r\n        let checkStatus = ''\r\n        let masterList = this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [];\r\n        let selectedMaster = this.props.selectedMaster && this.props.masterList ? getSameRecordFromTwoArrays(this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectedMaster, this.props.primaryKeyField) : [];\r\n        if (masterList && masterList.length > 0 && selectedMaster && selectedMaster.length > 0) {\r\n\r\n            if (masterList.length === selectedMaster.length) {\r\n                checkStatus = 'all'\r\n            } else if (masterList.length !== selectedMaster.length) {\r\n                checkStatus = 'partial'\r\n            } else if (this.props.selectedMaster.length === 0) {\r\n                checkStatus = ''\r\n            }\r\n        }\r\n\r\n        // className=\"client-list-scroll\"\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-common-wrap\" globalEventOff='click' /> */}\r\n                <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} ${this.props.splitModeClass}`}>\r\n                    <SearchAdd className={`d-flex filter-wrap-group justify-content-between pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                        {!this.props.notSearchable ?\r\n                            <InputGroup className=\"search-with-ico-list\">\r\n                                <InputGroup.Append>\r\n                                    {this.props.needMultiSelect ?\r\n                                        <QuickSearch\r\n                                            checkStatus={checkStatus}\r\n                                            //selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList ? this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take) : [], this.props.selectionField, this.props.selectionColorField)}\r\n                                            selectionList={this.props.hideQuickSearch ? \"\" : filterStatusBasedOnTwoArrays(this.props.selectionList || [], this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take), this.props.selectionField, this.props.selectionColorField)}\r\n                                            selectionField={this.props.selectionField}\r\n                                            selectionFieldName={this.props.selectionFieldName}\r\n                                            selectionColorField={this.props.selectionColorField}\r\n                                            selectMultiple={this.selectMultiple}\r\n                                            inputParam={this.props.inputParam}\r\n                                        />\r\n                                        : \"\"}\r\n                                </InputGroup.Append>\r\n                                {this.props.hideSearch ? \"\" :\r\n                                    !this.props.disableToolBarItems ? \r\n                                    // <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} ${this.props.intl.formatMessage({ id: this.props.listName })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\r\n                                    <div className={`list-group-search tool-search ${this.state.showSearch ? 'activesearch' : \"\"}`}>\r\n                                        <SearchIcon className=\"search-icon\" onClick={this.toggleSearch}>\r\n                                            <FontAwesomeIcon icon={faSearch} />\r\n                                            {/* <SolidFilterIcon className=\"custom_icons\" width=\"18\" height=\"16\" fill='#BEBEBE' stroke='#404040' stroke-width=\"15\"/> */}\r\n                                        </SearchIcon>\r\n                                        <FormControl ref={this.props.searchRef} autoComplete=\"off\" placeholder={`${this.props.intl.formatMessage({ id: \"IDS_FILTER\" })}`} name={\"search\"} onKeyUp={(e) => this.filterColumn(e)} />\r\n                                        {this.state.showSearch ?\r\n                                            <SearchIcon className=\"close-right-icon\" onClick={this.toggleSearch}>\r\n                                                <FontAwesomeIcon icon={faTimes} />\r\n                                            </SearchIcon>\r\n                                            : \"\"}\r\n                                    </div> :\"\"\r\n\r\n                                }\r\n                                {  !this.state.showSearch ?\r\n                                    <span className='filter-top-wrap'>\r\n                                        {!this.props.disableToolBarItems &&  this.props.needFilter ?\r\n                                            <InputGroup.Append>\r\n                                                <AdvFilter\r\n                                                    filterComponent={this.props.filterComponent}\r\n                                                    dataFor=\"tooltip-common-wrap\"\r\n                                                    onFilterSubmit={this.props.onFilterSubmit}\r\n                                                    showFilter={this.props.showFilter}\r\n                                                    openFilter={this.props.openFilter}\r\n                                                    closeFilter={this.props.closeFilter}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                                />\r\n                                            </InputGroup.Append>\r\n                                            : \"\"}\r\n\r\n\r\n\r\n                                        {this.props.moreField && this.props.moreField.length > 0 ?\r\n                                            <InputGroup.Append>\r\n                                                <InputGroup.Text>\r\n                                                    {/* <ProductList className=\"d-flex justify-content-end icon-group-wrap\"> */}\r\n                                                    <Nav.Link className=\"p-0\" name=\"gridexpand\" onClick={() => this.ExpandAll(masterList)}>\r\n                                                        {/* <FontAwesomeIcon icon={faArrowsAltV} /> */}\r\n                                                        {this.props.intl.formatMessage({\r\n                                                            id: this.props.masterList.length ? this.state.expandCheck ?\r\n                                                                this.props.masterList.length === this.state.expandCheck.length ?\r\n                                                                    this.state.expandCheck.includes(false) ? \"IDS_EXPANDALL\" : \"IDS_EXPANDLESS\"\r\n                                                                    : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                                : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                                : this.state.allFieldExpanded ? \"IDS_EXPANDLESS\" : \"IDS_EXPANDALL\"\r\n                                                        })}\r\n                                                    </Nav.Link>\r\n                                                    {/* </ProductList> */}\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Append>\r\n                                            : \"\"}\r\n                                    </span> : \"\"}\r\n                            </InputGroup> : ''}\r\n                        <>\r\n                            {  !this.state.showSearch ?\r\n                                <span>\r\n                                    {this.props.titleHead ? <h4>{this.props.titleHead}</h4> : ''}\r\n                                    {this.props.commonActions}\r\n                                </span> : \"\"}\r\n                        </>\r\n                    </SearchAdd>\r\n                    {\r\n                        this.props.needAccordianFilter ?\r\n                            <FilterAccordion key=\"filter\" className=\"filter-accordian\"\r\n                                filterComponent={this.props.accordianfilterComponent}\r\n                            />\r\n                            : \"\"\r\n                    }\r\n                    {/* className={` ${this.props.masterList && this.props.masterList.length > 0 ? 'parent-port-height' : 0}`} className=\"box-shadow-box-btm\" */}\r\n                    <PerfectScrollbar >\r\n                        {/*<ClientList className=\"product-list\" style={{ height: this.props.paneHeight ? this.props.paneHeight : this.props.masterList && this.props.masterList.length > 0 ? 'calc(100vh - 230px)' : 'calc(100vh - 180px)' }}>\r\n                   */}\r\n                        <ClientList className=\"product-list port-height-inner\" style={{ height: this.props.paneHeight ? this.props.paneHeight : this.state.scrollHeight }}>\r\n                            <ListView\r\n                                //  data={this.props.hidePaging ? this.props.masterList : this.props.masterList ? this.props.masterList.slice(this.state.skip, this.props.skip + this.props.take) : []}\r\n                                //                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? \r\n                                //                    this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + \r\n                                //                (this.props.take ? this.props.take : this.state.take)))}\r\n                                //   //  item={(props, index) => this.transactionListDesign(props, this.props.skip, index)}\r\n                                //        //       data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\r\n                                //        item={(props) => this.transactionListDesign(props)}\r\n                                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip, this.props.skip + this.props.take)}\r\n                                item={(props,section, index) => this.transactionListDesign(props, this.props.skip, index)}\r\n\r\n\r\n                            //  item={(props, index) => this.transactionListDesign(props, 0, 0)}\r\n\r\n                            // style={{ width: \"100%\" }}\r\n                            // header={myHeader}\r\n                            // footer={this.myFooter}\r\n                            //item={React.ComponentType<ListViewItemProps>} \r\n\r\n                            />\r\n                        </ClientList>\r\n                    </PerfectScrollbar >\r\n                    {\r\n                        this.props.hidePaging ? \"\" :\r\n                            this.props.masterList && this.props.masterList.length > 0 ?\r\n                                <CustomPager\r\n                                    skip={this.props.skip}\r\n                                    width={this.props.splitChangeWidthPercentage}\r\n                                    take={this.props.take}\r\n                                    handlePageChange={this.props.handlePageChange}\r\n                                    total={this.props.masterList.length}\r\n                                    buttonCount={this.props.splitChangeWidthPercentage >= 30 ? this.state.buttonCount : this.props.buttonCount ? this.props.buttonCount : 2}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    info={this.state.info}\r\n                                    pagershowwidth={30}\r\n                                    // pageSize={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                                    pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\r\n                                //  pageSize={this.props.pageSize || (this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)))}\r\n                                >\r\n                                </CustomPager>\r\n                                //     <CustomPager\r\n                                //     skip={this.props.skip ? this.props.skip : this.state.skip}\r\n                                //     take={this.props.take ? this.props.take : this.state.take}\r\n                                //     width={20}\r\n                                //     pagershowwidth={18}\r\n                                //     handlePageChange={this.props.handlePageChange}\r\n                                //     total={this.props.masterList ? this.props.masterList.length : 0}\r\n                                //     buttonCount={this.state.buttonCount}\r\n                                //     info={this.state.info}\r\n                                //     userInfo={this.props.Login.userInfo}\r\n                                //     pageSize={this.props.pageSize? this.props.pageSize :this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                                // >\r\n                                //s </CustomPager>\r\n                                : ''\r\n                    }\r\n                </ListMasterWrapper >\r\n            </>\r\n        )\r\n    }\r\n    // myFooter = () => {\r\n    //     return (\r\n\r\n    //     )\r\n    // }\r\n    onClickActions1 = (event, dataItem) => {\r\n\r\n        event.stopPropagation();\r\n        this.props.ListmasterSwitch({ event, nusersrolehidescreencode: dataItem.nusersrolehidescreencode })\r\n    }\r\n\r\n    onClickActions = (event, master, action) => {\r\n\r\n        event.stopPropagation();\r\n        let selectedArray = this.props.selectedMaster ? this.props.selectedMaster : [];\r\n        let dataList = selectedArray.map(item => item[this.props.primaryKeyField]);\r\n        const indexValue = this.props.selectedMaster ? this.props.selectedMaster.findIndex(x => x[this.props.primaryKeyField] === master[this.props.primaryKeyField]) : -2;\r\n        if (indexValue === -1) {\r\n            if (this.props.needMultiSelect) {\r\n                selectedArray.push(master);\r\n                dataList.push(master[this.props.primaryKeyField]);\r\n            } else {\r\n                selectedArray = [master];\r\n                dataList = [master[this.props.primaryKeyField]];\r\n            }\r\n        }\r\n        action.onClick({ ...action.inputData, [action.objectName]: master, [this.props.selectedListName]: selectedArray, [this.props.primaryKeyField]: dataList.join(\",\") })\r\n    }\r\n\r\n    showHideDetails = (event, index) => {\r\n        event.stopPropagation();\r\n        let showMore = { ...this.state.showMore, [index]: !this.state.showMore[index] }\r\n        //   const check=showMore.map(item=>{return})\r\n        const expandAll = [...Object.values(showMore)]\r\n        let allFieldExpanded = this.state.allFieldExpanded;\r\n        if (expandAll.includes(false)) {\r\n            allFieldExpanded = false\r\n        } else {\r\n            let len = this.props.masterList.length\r\n            if (len === expandAll.length) {\r\n                allFieldExpanded = true\r\n            }\r\n        }\r\n        this.setState({ showMore, allFieldExpanded, expandCheck: expandAll, disableClick: true })\r\n\r\n    }\r\n    ExpandAll = (masterData) => {\r\n        const allFieldExpanded = this.state.allFieldExpanded;\r\n        let showMore = {};\r\n        if (!allFieldExpanded) {\r\n            showMore = masterData.map((master, index) => {\r\n                return showMore = { ...showMore, [index]: true };\r\n            });\r\n        }\r\n        this.setState({ showMore, allFieldExpanded: !allFieldExpanded });\r\n    }\r\n    iconGroupView(index){\r\n        this.setState({activeIconIndex : this.state.activeIconIndex == index ? null : index})\r\n    }\r\n    transactionListDesign = (props , skip , index) => {\r\n        let item = props.dataItem;\r\n        const customswitchposition = {\r\n            // 'padding-left': '290px',\r\n            'padding-top': '-20px'\r\n        }\r\n        // let index;\r\n        // const onLongPress = (e) => {\r\n        //     e.preventDefault();\r\n        //     e.stopPropagation();\r\n        //     this.setState({\r\n        //         index: props.index === this.state.index ? null : props.index\r\n        //     })\r\n        // };\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-common-wrap\" globalEventOff='click' /> */}\r\n                <ListGroup.Item as=\"li\"\r\n                    className={`${this.state.showList === props.index ? \"hover\" : \"\"}  list-custom-ico-on-hover list-bgcolor  ${this.props.selectedMaster && this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? \"active\" : \"\"}`}>\r\n                    <Media onClick={() => this.getselectedDetailAvoidDuplicateProps(item, { ...this.props.inputParam }, false)}>\r\n                        {this.props.needMultiSelect ?\r\n                            <Form.Check custom type=\"checkbox\" id=\"customControl\">\r\n                                <Form.Check.Input type=\"checkbox\" id={`tm_customCheck_${this.props.listName}_${props.index}`}\r\n                                    checked={this.props.selectedMaster &&\r\n                                        this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1 ? true : false}\r\n                                    readOnly\r\n                                />\r\n                                <Form.Check.Label className={`mr-3 ${this.props.showStatusBlink && item[\"bflag\"] ? \"blinkCheckbox\":\"\"}`}\r\n                                    onClick={(event) => this.onCheckBoxselect(event, item, { ...this.props.inputParam }, true)}\r\n                                    htmlFor={`tm_customCheck_${this.props.listName}_${props.index}`}></Form.Check.Label>\r\n                            </Form.Check>\r\n                            : \"\"}\r\n                        <Media.Body>\r\n\r\n                            {/* <MediaHeader>\r\n                        {this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \")}\r\n                        {item[this.props.mainField]}\r\n                        {this.props.showStatusLink &&\r\n                            <Nav.Link className='add-txt-btn blue-text ml-1' style={{ display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n                                {this.props.showStatusName && <span className='ml-1 text-nowrap'>{item[this.props.statusFieldName]}</span>}\r\n                            </Nav.Link>\r\n                        }\r\n                    </MediaHeader> */}\r\n\r\n                            <ContentPanel className=\"product-category title-grid-wrap-width-md\">\r\n                                <ContentPanel>\r\n                                    <MediaHeader data-tip={ item[this.props.mainField] } \r\n                                    //data-for=\"tooltip-common-wrap\"\r\n                                        style={{ maxWidth: this.props.objectName === \"test\" ? \"30rem\" : \"15rem\" }}>\r\n                                        {this.props.mainFieldLabel && this.props.mainFieldLabel.concat(\" : \")}\r\n                                        { item[this.props.mainField]}\r\n                                        {/* || item['jsondata'][this.props.mainField] */}\r\n                                        {/* {console.log(item[this.props.mainField] ? item[this.props.mainField] : item['jsondata'][this.props.mainField])} */}\r\n                                        {this.props.showStatusLink &&\r\n                                        <Nav.Link className='add-txt-btn blue-text ml-1 pl-2'\r\n                                            style={{ padding: \"0\", display: 'inline', color: this.props.statusColor ? item[this.props.statusColor] : item.scolorhexcode }}>\r\n                                            {this.props.showStatusIcon && getStatusIcon(item[this.props.statusField])}\r\n                                            {this.props.showStatusName &&\r\n                                             <span className='ml-1 text-nowrap'>\r\n                                             { item[this.props.statusFieldName] }</span>}\r\n                                        </Nav.Link>\r\n                                    }\r\n                                     {this.props.showStatusBlink && item[\"bflag\"] ?\r\n                                    // <div class=\"blink\">🔴</div> \r\n                                    <FontAwesomeIcon class=\"blink\" style={{width: \"0.8rem\"}} icon={faExclamationCircle}/>\r\n                                    : \"\"}\r\n\r\n                                    </MediaHeader>\r\n                                 \r\n\r\n                                </ContentPanel>\r\n\r\n                            </ContentPanel>\r\n\r\n                            <MediaSubHeaderText>\r\n\r\n                                {this.props.subFields && this.props.subFields.map((field, index) =>\r\n                                    this.props.subFieldsLabel ?\r\n                                        <>\r\n                                            <MediaLabel>{`${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \"}`}</MediaLabel>\r\n                                            <MediaLabel style={{ color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\" }}>\r\n                                                { item[field[designProperties.VALUE]] === undefined ? '-' :item[field[designProperties.VALUE]] }</MediaLabel>\r\n                                            { index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                            {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                            {/* index % 2 === 0 && */}\r\n                                        </> :\r\n                                        <>\r\n                                            <MediaLabel style={{ color: field[designProperties.COLOUR] ? item.scolorhexcode || item[field[designProperties.COLOUR]] : \"\" }}>\r\n                                                {`${item[field[designProperties.VALUE]] ===undefined ? '-' :item[field[designProperties.VALUE]] }`}</MediaLabel>\r\n                                            {index !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                            {/* {(index + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n                                            {/* index % 2 === 0 &&  */}\r\n                                        </>\r\n                                )}\r\n                                {this.props.moreField && this.props.moreField.length > 0 ?\r\n                                    <>\r\n                                        {/* <MediaLabel>\r\n                                    <Nav.Link name={`show-wrap_${props.index}`} className={`show-more-action showmore`} onClick={(event) => this.showHideDetails(event, props.index)} style={{ display: \"inline\" }}>\r\n                                        <Form.Label className={`show-more-link showmore`} htmlFor={`show-wrap_${props.index}`}>{` ...${this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}</Form.Label>\r\n                                    </Nav.Link>\r\n                                </MediaLabel> */}\r\n\r\n                                        <MediaLabel>\r\n\r\n                                            <Nav.Link name={`show-wrap_${props.index}`} className={`show-more-action showmore`} onClick={(event) => this.showHideDetails(event, props.index, \"inner\")} style={{ display: \"inline\" }} title={this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}>\r\n                                                <Form.Label className={`show-more-link mr-1 showmore`} htmlFor={`show-wrap_${props.index}`}>{` ${this.props.intl.formatMessage({ id: this.state.allFieldExpanded ? \"IDS_SHOWLESS\" : this.state.showMore[props.index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}</Form.Label>\r\n                                                <FontAwesomeIcon size=\"sm\" htmlFor={`show-wrap_${props.index}`} icon={this.state.allFieldExpanded ? faChevronUp : this.state.showMore[props.index] ? faChevronUp : faChevronDown} />\r\n                                            </Nav.Link>\r\n                                        </MediaLabel>\r\n\r\n                                        <Media.Body className={`show-more-wrap ${this.state.allFieldExpanded ? \"showmore\" : this.state.showMore[props.index] ? \"showmore\" : \"\"}`}>\r\n                                            <MediaSubHeader>\r\n                                                {this.props.moreField.map((field, index) =>\r\n                                                    <>\r\n                                                        <MediaLabel>{`${field[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] + \" : \"}  ${item[field[designProperties.VALUE]] ===undefined ? '-' :item[field[designProperties.VALUE]]}`}</MediaLabel>\r\n                                                        {index % 2 === 0 && index !== this.props.moreField.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                        {(index + 1) % 2 === 0 ? <br></br> : \"\"}\r\n                                                    </>\r\n                                                )}\r\n                                            </MediaSubHeader>\r\n                                        </Media.Body>\r\n                                    </> : \"\"}\r\n                            </MediaSubHeaderText>\r\n                        </Media.Body>\r\n                        <div className={`icon-list-sm-wrap ${props.index === this.state.index ? 'active' : \"\"}`}>\r\n                            {this.props.actionIcons && this.props.selectedMaster &&\r\n                                (this.props.selectedMaster.findIndex(m1 => m1[this.props.primaryKeyField] === item[this.props.primaryKeyField]) !== -1)\r\n                                && this.props.actionIcons.length > 0 ?\r\n                                // <div onClick={onLongPress} className=\"icon-list-sm\" >\r\n                                //  <div className=\"icon-list-sm\" >\r\n                                //      <FontAwesomeIcon size=\"sm\" icon={faChevronDown} />\r\n                                //  </div>\r\n                                \"\" : \"\"}\r\n                        </div>\r\n                        <div className={`icon-group-wrap ${this.props.listMasterShowIcon ? \"enable-view\" :\"\"} ${this.props.clickIconGroup ? \"click-view\" :\"hover-view\"} ${this.state.activeIconIndex == props.index ? \"active\" :\"\"}`}>\r\n                            {this.props.actionIcons && this.props.actionIcons.length > 0 && this.props.actionIcons.map((action , index) =>\r\n                                <span className={`${this.props.listMasterShowIcon && index+1 > this.props.listMasterShowIcon ? 'disable-view' :\"\"}`}>\r\n                               { action.needConditionalIcon ?\r\n                                    action.conditionalIconFunction(item) &&\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        //data-for=\"tooltip-common-wrap\"\r\n                                        data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                        data-tip={action.title}\r\n                                        hidden={action.hidden === undefined ? true : action.hidden}\r\n                                        onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                        {getActionIcon(action.controlname)}\r\n                                    </Nav.Link>\r\n                                    :\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        //data-for=\"tooltip-common-wrap\"\r\n                                        data-tip={action.title}\r\n                                        data-place={action.dataplace && action.dataplace ? action.dataplace : \"\"}\r\n                                        hidden={action.hidden === undefined ? true : action.hidden}\r\n                                        onClick={(event) => this.onClickActions(event, item, action)}>\r\n                                        {getActionIcon(action.controlname)}\r\n                                    </Nav.Link>}\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                            {/* {this.props.ListmasterSwitch && this.props.ListScreenHidebtn &&\r\n                                    <span data-for=\"screenrights_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLESCREEN\" })}>\r\n                                           <Nav.Link  onChange={(event) => this.onClickActions1(event, props.dataItem)}>\r\n                                         <div style={customswitchposition} > \r\n                                            { \r\n                                                <CustomSwitch type=\"switch\" id={props.dataItem.nusersrolehidescreencode}\r\n                                                //  id={\"ListmasterSwitch\"}\r\n                                                //onChange={(event) => this.onClickActions1(event, props.dataItem)}\r\n                                                checked={props.dataItem.needrights === transactionStatus.YES ? true : false}\r\n                                                name={props.dataItem.nusersrolehidescreencode}\r\n                                                className=\"custom-switch-md customeswitchmanual\"\r\n                                                //data-tip={\"Enable to group by screen name\"}\r\n                                                // data-for=\"screenrights_wrap\"\r\n                                                />\r\n                                            }\r\n                                          </div> \r\n                                        </Nav.Link>\r\n                                    </span>\r\n                            } */}\r\n\r\n                        </div>\r\n\r\n                    </Media >\r\n                        {  this.props.clickIconGroup ? \r\n                            (this.props.listMasterShowIcon && this.props.actionIcons  && this.props.actionIcons.length <= this.props.listMasterShowIcon) ? \"\" :\r\n                                <span className='vertical-dots end-icon' onClick={() => this.iconGroupView(props.index) }></span> : \"\"}\r\n\r\n                    {this.props.ListmasterSwitch && this.props.ListScreenHidebtn &&\r\n                        <span \r\n                        //data-for=\"screenrights_wrap\" \r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLESCREEN\" })}>\r\n                            <div style={customswitchposition} >\r\n                                {<CustomSwitch type=\"switch\" id={props.dataItem.nusersrolehidescreencode}\r\n                                    //  id={\"ListmasterSwitch\"}\r\n                                    onChange={(event) => this.props.ListmasterSwitch(event, props.dataItem.nusersrolehidescreencode)}\r\n                                    checked={props.dataItem.needrights === transactionStatus.YES ? true : false}\r\n                                    name={props.dataItem.nusersrolehidescreencode}\r\n                                    className=\"custom-switch-md customeswitchmanual\"\r\n                                //data-tip={\"Enable to group by screen name\"}\r\n                                // data-for=\"screenrights_wrap\"\r\n                                />}\r\n                            </div>\r\n                        </span>\r\n                    }\r\n                </ListGroup.Item >\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if (this.props.showMoreResetList) {\r\n            if (this.props.inputParam.masterData&&!Array. isArray(this.props.inputParam.masterData)  && this.props.inputParam.masterData[this.props.showMoreResetListName]\r\n                !== previousProps.inputParam.masterData[this.props.showMoreResetListName]) {\r\n                this.setState({ allFieldExpanded: false, showList: null, showMore: {} });\r\n            }\r\n        }\r\n        \r\n         if(this.props.masterList !== previousProps.masterList){\r\n             this.updateScrollHeight();\r\n         }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, undefined)(injectIntl(TransationListMasterJson));\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}