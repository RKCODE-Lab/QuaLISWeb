{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\home\\\\FormIconForDropDown.js\";\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nconst {\n  faAd,\n  faMagic,\n  faUniversity,\n  faAddressBook\n} = require(\"@fortawesome/free-solid-svg-icons\");\n\nconst {\n  FontAwesomeIcon\n} = require(\"@fortawesome/react-fontawesome\");\n\nconst FormsIconForDropDown = props => {\n  switch (props.nformcode) {\n    case 33:\n      return /*#__PURE__*/React.createElement(Form.Check.Label, {\n        className: `mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`,\n        htmlFor: `tm_customCheck_${props.index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }\n      }, props.option['sdisplayname'].substring(0, 1).toUpperCase()); // <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\n      //  //   onClick={() => this.props.reloadData()}\n      //     // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\n      //     // data-for=\"tooltip_list_wrap\"\n      //   //  data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\n      //   >\n      //     <FontAwesomeIcon icon={faAddressBook} style={{ \"width\": \"0.6!important\" }} />\n      // </Button>\n      //  <FontAwesomeIcon icon={faAddressBook} size={props.size}/>\n\n      break;\n\n    default:\n      return /*#__PURE__*/React.createElement(Form.Check.Label, {\n        className: `mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`,\n        htmlFor: `tm_customCheck_${props.index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      }, props.option['sdisplayname'].substring(0, 1).toUpperCase());\n      break;\n  }\n};\n\nexport default FormsIconForDropDown;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/home/FormIconForDropDown.js"],"names":["React","Button","Form","faAd","faMagic","faUniversity","faAddressBook","require","FontAwesomeIcon","FormsIconForDropDown","props","nformcode","index","option","substring","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA;AAA/B,IAAiDC,OAAO,CAAC,mCAAD,CAA9D;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,gCAAD,CAAnC;;AAGA,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAQA,KAAK,CAACC,SAAd;AAEI,SAAK,EAAL;AACI,0BAAO,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,SAAS,EAAG,qBAAoB,CAAC,cAAD,EAAiB,aAAjB,EAAgC,cAAhC,EAAgD,cAAhD,EAAgED,KAAK,CAACE,KAAN,GAAc,CAA9E,CAAiF,EAAnI;AAAsI,QAAA,OAAO,EAAG,kBAAiBF,KAAK,CAACE,KAAM,EAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiLF,KAAK,CAACG,MAAN,CAAa,cAAb,EAA6BC,SAA7B,CAAuC,CAAvC,EAA0C,CAA1C,EAA6CC,WAA7C,EAAjL,CAAP,CADJ,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEJ;AACI,0BAAO,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,SAAS,EAAG,qBAAoB,CAAC,cAAD,EAAiB,aAAjB,EAAgC,cAAhC,EAAgD,cAAhD,EAAgEL,KAAK,CAACE,KAAN,GAAc,CAA9E,CAAiF,EAAnI;AAAsI,QAAA,OAAO,EAAG,kBAAiBF,KAAK,CAACE,KAAM,EAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiLF,KAAK,CAACG,MAAN,CAAa,cAAb,EAA6BC,SAA7B,CAAuC,CAAvC,EAA0C,CAA1C,EAA6CC,WAA7C,EAAjL,CAAP;AACA;AAlBR;AAqBH,CAtBD;;AAwBA,eAAeN,oBAAf","sourcesContent":["import React from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nconst { faAd, faMagic, faUniversity, faAddressBook } = require(\"@fortawesome/free-solid-svg-icons\")\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\")\r\n\r\n\r\nconst FormsIconForDropDown = (props) => {\r\n    switch (props.nformcode) {\r\n\r\n        case 33:\r\n            return <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            \r\n            // <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n            //  //   onClick={() => this.props.reloadData()}\r\n            //     // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\r\n            //     // data-for=\"tooltip_list_wrap\"\r\n            //   //  data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n            //   >\r\n            //     <FontAwesomeIcon icon={faAddressBook} style={{ \"width\": \"0.6!important\" }} />\r\n            // </Button>\r\n            //  <FontAwesomeIcon icon={faAddressBook} size={props.size}/>\r\n            break;\r\n\r\n        default:\r\n            return <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default FormsIconForDropDown;"]},"metadata":{},"sourceType":"module"}