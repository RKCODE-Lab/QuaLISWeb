{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\MatrixComponent.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from './form-input/form-input.component';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport CustomComponent from './CustomComponent';\nimport { MediaHeader } from '../components/App.styles'; // import { Spreadsheet } from 'react-spreadsheet';\n//import { Spreadsheet } from \"@progress/kendo-react-spreadsheet\"; \n// import { DataSheetGrid, checkboxColumn, textColumn } from 'react-datasheet-grid';\n//simport { Spreadsheet } from 'react-spreadsheet';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport rsapi from '../rsapi';\nimport { intl } from './App';\n\nclass AvailableSpaceComponent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"pl-0 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Available Space :  \", this.props.navailablespace)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass AdditionalFieldsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.autoCRUD = (event, inputParam) => {\n      event.stopPropagation();\n\n      if (this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] !== \"\") {\n        this.setState({\n          loading: true\n        });\n        let urlArray = [];\n        let originalParam = {\n          nsamplestoragemappingcode: this.state.nsamplestoragemappingcode,\n          nsamplestoragelocationcode: this.state.nsamplestoragelocationcode,\n          sboxid: this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode],\n          userinfo: this.props.userInfo\n        };\n        const url1 = rsapi.post(\"samplestoragetransaction/updateSampleStorageMapping\", originalParam);\n        urlArray = [url1];\n        Axios.all(urlArray).then(response => {\n          let responseData = response[0].data;\n          let AdditionalFieldsComponentData = this.state.AdditionalFieldsComponentData;\n          AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] = responseData.sboxid;\n          responseData.hasOwnProperty('existCheck') && responseData.existCheck && toast.warn(intl.formatMessage({\n            id: \"IDS_RECORDALREADYEXISTS\"\n          })); // this.props.enableDisableSheet(true)\n          //    let selectedRecord=this.state.selectedRecord;\n          //    selectedRecord['sboxid']=this.state.selectedRecord['sboxid']\n          // this.setState({\n          //     // selectedRecord,\n          //     loading: false\n          // });\n\n          this.setState({\n            // AdditionalFieldsComponentData: {\n            AdditionalFieldsComponentData // }\n            ,\n            loading: false\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          } // this.setState({\n          //     AdditionalFieldsComponentData: {\n          //         ...this.state.AdditionalFieldsComponentData,\n          //         [this.state.nsamplestoragemappingcode]: \"\"\n          //     }\n          //     ,\n          //     loading: false\n          // });\n\n        });\n      } else {//   this.props.enableDisableSheet(false)\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const AdditionalFieldsComponentData = this.state.AdditionalFieldsComponentData || {};\n      AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] = event.target.value;\n      this.setState({\n        AdditionalFieldsComponentData\n      });\n    };\n\n    this.state = {\n      AdditionalFieldsComponentData: { ...this.props.AdditionalFieldsComponentData\n      },\n      nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\n      nsamplestoragelocationcode: this.props.nsamplestoragelocationcode\n    };\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.AdditionalFieldsComponentData !== previousProps.AdditionalFieldsComponentData) {\n      let AdditionalFieldsComponentData = this.props.AdditionalFieldsComponentData;\n      this.setState({\n        AdditionalFieldsComponentData\n      });\n    }\n\n    if (this.props.nsamplestoragemappingcode !== previousProps.nsamplestoragemappingcode) {\n      let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n      this.setState({\n        nsamplestoragemappingcode\n      });\n    }\n\n    if (this.props.nsamplestoragelocationcode !== previousProps.nsamplestoragelocationcode) {\n      let nsamplestoragelocationcode = this.props.nsamplestoragelocationcode;\n      this.setState({\n        nsamplestoragelocationcode\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n      name: 'sboxid',\n      onBlur: event => this.autoCRUD(event, this.state.AdditionalFieldsComponentData),\n      label: intl.formatMessage({\n        id: \"IDS_CONTAINERID\"\n      }),\n      placeholder: intl.formatMessage({\n        id: \"IDS_CONTAINERID\"\n      }),\n      value: this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] ? this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] : \"\",\n      maxLength: 100,\n      isDisabled: this.props.isMoveScreen ? true : false,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass MatrixComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.Rows = Array(this.props.Rows).fill(0, 0, Array(this.props.Rows).length);\n    this.columns = Array(this.props.columns).fill(0, 0, Array(this.props.columns).length);\n    this.alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n    this.onChange = sheetdata => {\n      console.log(sheetdata); //  this.props.childDataChange(selectedRecord);\n\n      this.setState({\n        data: sheetdata\n      });\n    };\n\n    this.comparator = (a, b) => {\n      return a.toString().localeCompare(b.toString(), 'en', {\n        numeric: true\n      });\n    };\n\n    this.handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\n      let orderArray = [];\n      let activeElement = document.activeElement; // for (var i = 0; i < document.forms.length; i++) {\n      //     let form = document.forms[i].elements;\n      //     for (var j = 0; j < form.length; j++) {\n      //         let element = form[j];\n      //         if (activeElement === element) {\n      //             form.elements[i].focus();\n      //         };\n      //     }\n      // }\n\n      if (ndirectionmastercode === 1) {\n        Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n          Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n            // ndirectionmastercode===1?\n            // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\n            // :\n            orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1));\n          });\n        });\n      } else {\n        Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n          Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n            // ndirectionmastercode===1?\n            // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\n            // :\n            orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1)); ///  orderArray.push({id:this.alphabet[columnIndex] ,value: (rowIndex + 1)})\n          });\n        });\n      }\n\n      if (e.keyCode === 13 // && e.target.nodeName == 'SELECT'\n      ) {\n        var form = e.target.closest('form'); //var index = Array.prototype.indexOf.call(form, e.target);\n        // form.elements[index + 3].focus();\n        // return false;\n\n        let index = orderArray.sort(this.comparator).findIndex(item => item === activeElement.placeholder);\n\n        for (var i = 0; i < form.elements.length; i++) {\n          let element = form.elements[i];\n\n          if (element.placeholder === orderArray[index + 1]) {\n            // if (element.disabled) {\n            if (element.value !== \"\") {\n              index++;\n              i = 0;\n            } else {\n              form.elements[i].focus();\n              break;\n            }\n          }\n\n          ;\n        } // for (var i = 0; i < document.forms.length; i++) {\n        //     let form = document.forms[i].elements;\n        //     for (var j = 0; j < form.length; j++) {\n        //         let element = form[j];\n        //         if (element.placeholder === orderArray[index + 1]) {\n        //             if (element.disabled) {\n        //                 index++;\n        //             } else {\n        //                 element.focus();\n        //                 form.elements[j].focus();\n        //             }\n        //         };\n        //     }\n        // }\n\n      }\n    };\n\n    this.availablepsacechange = data => {\n      this.setState({\n        navailablespace: data.navailablespace\n      });\n    };\n\n    this.state = {\n      data: [],\n      sheetData: this.props.sheetData\n    };\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.sheetData !== previousProps.sheetData) {\n      let sheetData = this.props.sheetData;\n      this.setState({\n        sheetData\n      });\n    }\n  }\n\n  genId(Row //i\n  , Column //j\n  ) {\n    let object = {};\n    object = {\n      label: this.alphabet[Column] + (Row + 1)\n    };\n    return object;\n  }\n\n  createDimensions(Rows, columns) {\n    //3X3\n    Rows = Rows - 1;\n    columns = columns - 1;\n    let spreadsheetdata = [];\n    let rowArray = [];\n\n    for (var i = 0; i <= Rows; i++) {\n      spreadsheetdata = [];\n\n      for (var j = 0; j <= columns; j++) {\n        let object = this.genId(i, j);\n        spreadsheetdata.push(object);\n      }\n\n      rowArray.push(spreadsheetdata);\n    }\n\n    return rowArray;\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //     if (this.state.navailablespace !== nextState.navailablespace) {\n  //         return false;\n  //     } else {\n  //         return true;\n  //     }\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-1 test-box-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #aaa`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`,\n        'cursor': `not-allowed`\n      },\n      isDisabled: true,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FILLEDNOTEDITABLE\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #7ca84c`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`\n      },\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_AVAILABLE\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #fbb0a5`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`\n      },\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CURRENTLYFILLED\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #6347FF`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`\n      },\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CURRENTLYFOCUSED\"\n    }))))), this.props.isMultiSampleAdd ? this.props.multipleSheetData.map((groupedItem, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        className: \"pl-0 mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"product-title-main mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 41\n        }\n      }, groupedItem.value ? groupedItem.value : \"\")))), groupedItem.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          className: \"pl-0 mt-3 mb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MediaHeader, {\n          className: `labelfont`,\n          style: {\n            color: \"#007bff\",\n            fontSize: \"18px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 45\n          }\n        }, item.scontainerpath ? item.scontainerpath : \"\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 6,\n          className: \"pl-0 mt-3 mb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(AdditionalFieldsComponent, {\n          userInfo: this.props.userInfo,\n          nsamplestoragelocationcode: item.nsamplestoragelocationcode,\n          enableDisableSheet: this.enableDisableSheet,\n          nsamplestoragemappingcode: item.nsamplestoragemappingcode,\n          isMoveScreen: this.props.isMoveScreen,\n          AdditionalFieldsComponentData: this.props.AdditionalFieldsComponentData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: `test-box-wrap overflow-auto ${item.nrow === 1 ? 'test-box-single-row' : ''}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 43\n          }\n        }, Array(item.nrow).fill(0, 0, Array(item.nrow).length).map((component, rowIndex) => {\n          return /*#__PURE__*/React.createElement(Row, {\n            className: \"flex-nowrap m-0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 48\n            }\n          }, Array(item.ncolumn).fill(0, 0, Array(item.ncolumn).length).map((component, columnIndex) => {\n            return (\n              /*#__PURE__*/\n              // (this.state.sheetData[item.nsamplestoragemappingcode] &&\n              //     (this.state.sheetData[item.nsamplestoragemappingcode]\n              //     [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\n              //     || (this.state.sheetData[item.nsamplestoragemappingcode]\n              //     [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) &&\n              React.createElement(CustomComponent, {\n                availablepsacechange: this.availablepsacechange,\n                userInfo: this.props.userInfo,\n                columnIndex: columnIndex,\n                ndirectionmastercode: item.ndirectionmastercode,\n                handleKeyDown: e => this.handleKeyDown(e, item.nrow, item.ncolumn, item.ndirectionmastercode),\n                Rows: item.nrow,\n                columns: item.ncolumn,\n                rowIndex: rowIndex,\n                nsamplestoragelocationcode: item.nsamplestoragelocationcode,\n                nsamplestoragemappingcode: item.nsamplestoragemappingcode,\n                nprojecttypecode: item.nprojecttypecode,\n                nquantity: item.nquantity,\n                sunitname: item.sunitname,\n                nbarcodedescription: this.props.nbarcodedescription,\n                nbarcodeLength: this.props.nbarcodeLength,\n                sheetData: this.props.sheetData,\n                childSheetDataChange: this.props.childSheetDataChange,\n                isMultiSampleAdd: this.props.isMultiSampleAdd,\n                isDisabled: this.props.isMoveScreen ? true : item.ndirectionmastercode === 1 ? this.state.sheetData[item.nsamplestoragemappingcode] ? this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[rowIndex] + (columnIndex + 1)] === undefined || this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[rowIndex] + (columnIndex + 1)] === \"\" ? false : true : false : this.state.sheetData[item.nsamplestoragemappingcode] ? this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[columnIndex] + (rowIndex + 1)] === undefined || this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[columnIndex] + (rowIndex + 1)] === \"\" ? false : true : false,\n                boxWidth: this.props.sbarcodeboxWidth //boxWidth =\"100px\"\n                ,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 53\n                }\n              })\n            );\n          }));\n        }))));\n      }));\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, \"     \", /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"pl-0 mt-3 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(AdditionalFieldsComponent, {\n      userInfo: this.props.userInfo,\n      nsamplestoragelocationcode: this.props.editedsheetData.nsamplestoragelocationcode,\n      enableDisableSheet: this.enableDisableSheet,\n      isMoveScreen: this.props.isMoveScreen,\n      nsamplestoragemappingcode: this.props.editedsheetData.nsamplestoragemappingcode,\n      AdditionalFieldsComponentData: this.props.AdditionalFieldsComponentData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-box-wrap overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 29\n      }\n    }, this.Rows.map((component, rowIndex) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"flex-nowrap m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 44\n        }\n      }, this.columns.map((component, columnIndex) => {\n        return /*#__PURE__*/React.createElement(CustomComponent, {\n          inputs: this.columns,\n          availablepsacechange: this.availablepsacechange,\n          userInfo: this.props.userInfo,\n          handleKeyDown: e => this.handleKeyDown(e, this.props.Rows, this.props.columns, this.props.editedsheetData.ndirectionmastercode),\n          Rows: this.props.Rows,\n          columns: this.props.columns,\n          ndirectionmastercode: this.props.editedsheetData.ndirectionmastercode,\n          columnIndex: columnIndex,\n          rowIndex: rowIndex,\n          nsamplestoragemappingcode: this.props.editedsheetData.nsamplestoragemappingcode,\n          nsamplestoragelocationcode: this.props.editedsheetData.nsamplestoragelocationcode,\n          nprojecttypecode: this.props.editedsheetData.nprojecttypecode,\n          nquantity: this.props.editedsheetData.nquantity,\n          nbarcodedescription: this.props.nbarcodedescription,\n          sunitname: this.props.editedsheetData.sunitname,\n          nbarcodeLength: this.props.nbarcodeLength,\n          sheetData: this.props.sheetData,\n          childSheetDataChange: this.props.childSheetDataChange,\n          isDisabled: this.props.isMoveScreen ? true : this.props.editedsheetData.ndirectionmastercode === 1 ? this.state.sheetData ? this.state.sheetData[this.alphabet[rowIndex] + (columnIndex + 1)] === undefined || this.state.sheetData[this.alphabet[rowIndex] + (columnIndex + 1)] === \"\" ? false : true : false : this.state.sheetData ? this.state.sheetData[this.alphabet[columnIndex] + (rowIndex + 1)] === undefined || this.state.sheetData[this.alphabet[columnIndex] + (rowIndex + 1)] === \"\" ? false : true : false,\n          boxWidth: this.props.sbarcodeboxWidth //boxWidth =\"100px\"\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 49\n          }\n        });\n      }));\n    }))))));\n  }\n\n}\n\nexport default MatrixComponent;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/MatrixComponent.jsx"],"names":["React","Component","FormInput","Col","Row","Card","CustomComponent","MediaHeader","PerfectScrollbar","toast","Axios","rsapi","intl","AvailableSpaceComponent","constructor","props","render","navailablespace","AdditionalFieldsComponent","autoCRUD","event","inputParam","stopPropagation","state","AdditionalFieldsComponentData","nsamplestoragemappingcode","setState","loading","urlArray","originalParam","nsamplestoragelocationcode","sboxid","userinfo","userInfo","url1","post","all","then","response","responseData","data","hasOwnProperty","existCheck","warn","formatMessage","id","catch","error","status","message","onInputOnChange","target","value","componentDidUpdate","previousProps","previousState","isMoveScreen","MatrixComponent","Rows","Array","fill","length","columns","alphabet","onChange","sheetdata","console","log","comparator","a","b","toString","localeCompare","numeric","handleKeyDown","e","nrow","ncolumn","ndirectionmastercode","orderArray","activeElement","document","map","component","columnIndex","rowIndex","push","keyCode","form","closest","index","sort","findIndex","item","placeholder","i","elements","element","focus","availablepsacechange","sheetData","genId","Column","object","label","createDimensions","spreadsheetdata","rowArray","j","color","isMultiSampleAdd","multipleSheetData","groupedItem","items","fontSize","scontainerpath","enableDisableSheet","nprojecttypecode","nquantity","sunitname","nbarcodedescription","nbarcodeLength","childSheetDataChange","undefined","sbarcodeboxWidth","editedsheetData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport FormInput from './form-input/form-input.component';\r\nimport { Col, Row, Card } from 'react-bootstrap';\r\nimport CustomComponent from './CustomComponent';\r\nimport { MediaHeader } from '../components/App.styles';\r\n// import { Spreadsheet } from 'react-spreadsheet';\r\n//import { Spreadsheet } from \"@progress/kendo-react-spreadsheet\"; \r\n\r\n// import { DataSheetGrid, checkboxColumn, textColumn } from 'react-datasheet-grid';\r\n//simport { Spreadsheet } from 'react-spreadsheet';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport rsapi from '../rsapi';\r\nimport { intl } from './App';\r\n\r\n\r\nclass AvailableSpaceComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<Col md={12} className=\"pl-0 mt-2\">\r\n            <Card.Header>\r\n                <Card.Title className=\"product-title-main\">\r\n                    Available Space :  {this.props.navailablespace\r\n                    }\r\n                </Card.Title>\r\n            </Card.Header>\r\n            <br />\r\n        </Col>);\r\n\r\n    }\r\n}\r\nclass AdditionalFieldsComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AdditionalFieldsComponentData: { ...this.props.AdditionalFieldsComponentData },\r\n            nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\r\n            nsamplestoragelocationcode: this.props.nsamplestoragelocationcode\r\n        }\r\n    }\r\n    autoCRUD = (event, inputParam) => {\r\n        event.stopPropagation();\r\n        if (this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] !== \"\") {\r\n            this.setState({ loading: true })\r\n            let urlArray = [];\r\n            let originalParam = {\r\n                nsamplestoragemappingcode: this.state.nsamplestoragemappingcode,\r\n                nsamplestoragelocationcode: this.state.nsamplestoragelocationcode,\r\n                sboxid: this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode],\r\n                userinfo: this.props.userInfo\r\n            }\r\n            const url1 = rsapi.post(\"samplestoragetransaction/updateSampleStorageMapping\", originalParam);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let responseData = response[0].data;\r\n                    let AdditionalFieldsComponentData = this.state.AdditionalFieldsComponentData;\r\n                    AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] = responseData.sboxid;\r\n                    responseData.hasOwnProperty('existCheck') && responseData.existCheck && toast.warn(intl.formatMessage({ id: \"IDS_RECORDALREADYEXISTS\" }));\r\n                    // this.props.enableDisableSheet(true)\r\n                    //    let selectedRecord=this.state.selectedRecord;\r\n                    //    selectedRecord['sboxid']=this.state.selectedRecord['sboxid']\r\n                    // this.setState({\r\n                    //     // selectedRecord,\r\n                    //     loading: false\r\n                    // });\r\n                    this.setState({\r\n                        // AdditionalFieldsComponentData: {\r\n                            AdditionalFieldsComponentData\r\n                        // }\r\n                        ,\r\n                        loading: false\r\n                    });\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                    // this.setState({\r\n                    //     AdditionalFieldsComponentData: {\r\n                    //         ...this.state.AdditionalFieldsComponentData,\r\n                    //         [this.state.nsamplestoragemappingcode]: \"\"\r\n                    //     }\r\n                    //     ,\r\n                    //     loading: false\r\n                    // });\r\n                });\r\n        } else {\r\n            //   this.props.enableDisableSheet(false)\r\n        }\r\n\r\n    }\r\n    onInputOnChange = (event) => {\r\n        const AdditionalFieldsComponentData = this.state.AdditionalFieldsComponentData || {};\r\n        AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] = event.target.value;\r\n        this.setState({ AdditionalFieldsComponentData });\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        if (this.props.AdditionalFieldsComponentData !== previousProps.AdditionalFieldsComponentData) {\r\n            let AdditionalFieldsComponentData = this.props.AdditionalFieldsComponentData\r\n            this.setState({ AdditionalFieldsComponentData })\r\n        }\r\n        if (this.props.nsamplestoragemappingcode !== previousProps.nsamplestoragemappingcode) {\r\n            let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode\r\n            this.setState({ nsamplestoragemappingcode })\r\n        }\r\n        if (this.props.nsamplestoragelocationcode !== previousProps.nsamplestoragelocationcode) {\r\n            let nsamplestoragelocationcode = this.props.nsamplestoragelocationcode\r\n            this.setState({ nsamplestoragelocationcode })\r\n        }\r\n    }\r\n    render() {\r\n        return (<>\r\n            <FormInput\r\n                name={'sboxid'}\r\n                onBlur={(event) => this.autoCRUD(event, this.state.AdditionalFieldsComponentData)}\r\n                label={intl.formatMessage({ id: \"IDS_CONTAINERID\" })}\r\n                placeholder={intl.formatMessage({ id: \"IDS_CONTAINERID\" })}\r\n                value={this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] ? this.state.AdditionalFieldsComponentData[this.state.nsamplestoragemappingcode] : \"\"}\r\n                maxLength={100}\r\n                isDisabled={this.props.isMoveScreen?true:false}\r\n                onChange={(event) =>\r\n                    this.onInputOnChange(event)}\r\n            />\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\nclass MatrixComponent extends Component {\r\n    Rows = Array(this.props.Rows).fill(0, 0, Array(this.props.Rows).length)\r\n    columns = Array(this.props.columns).fill(0, 0, Array(this.props.columns).length)\r\n    alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\",\r\n        \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            sheetData: this.props.sheetData\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        if (this.props.sheetData !== previousProps.sheetData) {\r\n            let sheetData = this.props.sheetData\r\n            this.setState({ sheetData })\r\n        }\r\n    }\r\n    genId(Row//i\r\n        , Column//j\r\n    ) {\r\n        let object = {}\r\n        object = { label: this.alphabet[Column] + (Row + 1) }\r\n        return object\r\n    }\r\n    createDimensions(Rows, columns) {\r\n        //3X3\r\n        Rows = Rows - 1\r\n        columns = columns - 1\r\n        let spreadsheetdata = [];\r\n        let rowArray = [];\r\n        for (var i = 0; i <= Rows; i++) {\r\n            spreadsheetdata = []\r\n            for (var j = 0; j <= columns; j++) {\r\n                let object = this.genId(i, j)\r\n                spreadsheetdata.push(object);\r\n            }\r\n            rowArray.push(spreadsheetdata);\r\n        }\r\n        return rowArray;\r\n    }\r\n    onChange = (sheetdata) => {\r\n        console.log(sheetdata)\r\n        //  this.props.childDataChange(selectedRecord);\r\n        this.setState({ data: sheetdata })\r\n    }\r\n\r\n    comparator = (a, b) => {\r\n        return a.toString().localeCompare(b.toString(), 'en', { numeric: true })\r\n    };\r\n\r\n    handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\r\n        let orderArray = [];\r\n        let activeElement = document.activeElement;\r\n\r\n        // for (var i = 0; i < document.forms.length; i++) {\r\n        //     let form = document.forms[i].elements;\r\n        //     for (var j = 0; j < form.length; j++) {\r\n        //         let element = form[j];\r\n        //         if (activeElement === element) {\r\n        //             form.elements[i].focus();\r\n        //         };\r\n        //     }\r\n        // }\r\n        if (ndirectionmastercode === 1) {\r\n            Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                    // ndirectionmastercode===1?\r\n                    // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                    // :\r\n                    orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                })\r\n            })\r\n        } else {\r\n            Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                    // ndirectionmastercode===1?\r\n                    // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                    // :\r\n                    orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1))\r\n                    ///  orderArray.push({id:this.alphabet[columnIndex] ,value: (rowIndex + 1)})\r\n\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (e.keyCode === 13// && e.target.nodeName == 'SELECT'\r\n        ) {\r\n            var form = e.target.closest('form');\r\n            //var index = Array.prototype.indexOf.call(form, e.target);\r\n            // form.elements[index + 3].focus();\r\n            // return false;\r\n\r\n\r\n            let index = orderArray.sort(this.comparator).findIndex(item => item === activeElement.placeholder);\r\n\r\n            for (var i = 0; i < form.elements.length; i++) {\r\n                let element = form.elements[i];\r\n                if (element.placeholder === orderArray[index + 1]) {\r\n                    // if (element.disabled) {\r\n                    if (element.value !== \"\") {\r\n                        index++;\r\n                        i = 0;\r\n                    } else {\r\n                        form.elements[i].focus();\r\n                        break;\r\n                    }\r\n                };\r\n            }\r\n            // for (var i = 0; i < document.forms.length; i++) {\r\n            //     let form = document.forms[i].elements;\r\n            //     for (var j = 0; j < form.length; j++) {\r\n            //         let element = form[j];\r\n            //         if (element.placeholder === orderArray[index + 1]) {\r\n            //             if (element.disabled) {\r\n            //                 index++;\r\n            //             } else {\r\n            //                 element.focus();\r\n            //                 form.elements[j].focus();\r\n            //             }\r\n            //         };\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    availablepsacechange = (data) => {\r\n        this.setState({ navailablespace: data.navailablespace })\r\n    }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (this.state.navailablespace !== nextState.navailablespace) {\r\n    //         return false;\r\n    //     } else {\r\n    //         return true;\r\n    //     }\r\n    // }\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <AvailableSpaceComponent navailablespace={this.state.navailablespace || 0} /> */}\r\n                <Row>\r\n                    <Row className='mb-1 test-box-status'>\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #aaa`, 'width': `45px`, 'user-select': `none`, 'height': `32px`, 'cursor': `not-allowed` }}\r\n                                isDisabled={true}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_FILLEDNOTEDITABLE\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                        {/* <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #f96049`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDEDITABLE\" })}\r\n                            </MediaHeader>\r\n                        </Col> */}\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #7ca84c`, 'width': `45px`, 'user-select': `none`, 'height': `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_AVAILABLE\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #fbb0a5`, 'width': `45px`, 'user-select': `none`, 'height': `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_CURRENTLYFILLED\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #6347FF`, 'width': `45px`, 'user-select': `none`, 'height': `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_CURRENTLYFOCUSED\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n                {this.props.isMultiSampleAdd ?\r\n                    this.props.multipleSheetData.map((groupedItem, index) => {\r\n                        return <>\r\n                            <Row>\r\n                                {/* {index === 0 ?\r\n                                    <Row className='mb-1 test-box-status'>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #aaa`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px`, 'cursor' : `not-allowed` }}\r\n                                                isDisabled={true}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDNOTEDITABLE\" })} \r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #f96049`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDEDITABLE\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #7ca84c`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_AVAILABLE\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #fbb0a5`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_CURRENTLYFILLED\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                    </Row> : \"\"} */}\r\n                                <Col md={12} className=\"pl-0 mt-0\">\r\n                                    <Card.Header>\r\n                                        <Card.Title className=\"product-title-main mb-0\">\r\n                                            {groupedItem.value ?\r\n                                                groupedItem.value\r\n                                                : \"\"}\r\n                                        </Card.Title>\r\n                                    </Card.Header>\r\n                                </Col>\r\n                            </Row>\r\n                            {groupedItem.items.map((item, index) => {\r\n                                return <>\r\n                                    <Row>\r\n                                        <Col md={12} className=\"pl-0 mt-3 mb-2\">\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#007bff\", fontSize: \"18px\" }}>\r\n                                                {item.scontainerpath ?\r\n                                                    item.scontainerpath\r\n                                                    : \"\"}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6} className=\"pl-0 mt-3 mb-2\">\r\n                                            <AdditionalFieldsComponent\r\n                                                userInfo={this.props.userInfo}\r\n                                                nsamplestoragelocationcode={item.nsamplestoragelocationcode}\r\n                                                enableDisableSheet={this.enableDisableSheet}\r\n                                                nsamplestoragemappingcode={item.nsamplestoragemappingcode}\r\n                                                isMoveScreen={this.props.isMoveScreen}\r\n                                                AdditionalFieldsComponentData={this.props.AdditionalFieldsComponentData}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <form><div className={`test-box-wrap overflow-auto ${item.nrow === 1 ? 'test-box-single-row' : ''}`}>{Array(item.nrow).fill(0, 0, Array(item.nrow).length).map((component, rowIndex) => {\r\n                                        return <Row className='flex-nowrap m-0'>\r\n                                            {Array(item.ncolumn).fill(0, 0, Array(item.ncolumn).length).map((component, columnIndex) => {\r\n                                                return (\r\n\r\n                                                    // (this.state.sheetData[item.nsamplestoragemappingcode] &&\r\n                                                    //     (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                    //     [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                    //     || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                    //     [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) &&\r\n                                                    <CustomComponent\r\n                                                        availablepsacechange={this.availablepsacechange}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        columnIndex={columnIndex}\r\n                                                        ndirectionmastercode={item.ndirectionmastercode}\r\n                                                        handleKeyDown={(e) => this.handleKeyDown(e, item.nrow, item.ncolumn,\r\n                                                            item.ndirectionmastercode)}\r\n                                                        Rows={item.nrow}\r\n                                                        columns={item.ncolumn}\r\n                                                        rowIndex={rowIndex}\r\n                                                        nsamplestoragelocationcode={item.nsamplestoragelocationcode}\r\n                                                        nsamplestoragemappingcode={item.nsamplestoragemappingcode}\r\n                                                        nprojecttypecode={item.nprojecttypecode}\r\n                                                        nquantity={item.nquantity}\r\n                                                        sunitname={item.sunitname}\r\n                                                        nbarcodedescription={this.props.nbarcodedescription}\r\n                                                        nbarcodeLength={this.props.nbarcodeLength}\r\n                                                        sheetData={this.props.sheetData}\r\n                                                        childSheetDataChange={this.props.childSheetDataChange}\r\n                                                        isMultiSampleAdd={this.props.isMultiSampleAdd}\r\n                                                        isDisabled={this.props.isMoveScreen? true:\r\n                                                            item.ndirectionmastercode === 1 ?\r\n                                                                this.state.sheetData[item.nsamplestoragemappingcode] ?\r\n                                                                    ((this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                    [this.alphabet[rowIndex] + (columnIndex + 1)] === undefined)\r\n                                                                        || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                        [this.alphabet[rowIndex] + (columnIndex + 1)] === \"\") ?\r\n                                                                        false : true) : false :\r\n                                                                this.state.sheetData[item.nsamplestoragemappingcode] ?\r\n                                                                    (((this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                    [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                                        || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                        [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) ? false :\r\n                                                                        true) : false\r\n                                                        }\r\n                                                        boxWidth={this.props.sbarcodeboxWidth}\r\n                                                    //boxWidth =\"100px\"\r\n\r\n                                                    />\r\n                                                )\r\n\r\n                                            })}\r\n                                        </Row>\r\n                                    })}\r\n                                    </div></form></>\r\n                            })}\r\n\r\n                        </>\r\n                    }) :\r\n                    <>     <Col md={12} className=\"pl-0 mt-3 mb-2\">\r\n                        <AdditionalFieldsComponent\r\n                            userInfo={this.props.userInfo}\r\n                            nsamplestoragelocationcode={this.props.editedsheetData.nsamplestoragelocationcode}\r\n                            enableDisableSheet={this.enableDisableSheet}\r\n                            isMoveScreen={this.props.isMoveScreen}\r\n                            nsamplestoragemappingcode={this.props.editedsheetData.nsamplestoragemappingcode}\r\n                            AdditionalFieldsComponentData={this.props.AdditionalFieldsComponentData}\r\n                        />\r\n                        <form>\r\n                            <div className='test-box-wrap overflow-auto'>\r\n                                {this.Rows.map((component, rowIndex) => {\r\n                                    return <Row className='flex-nowrap m-0'>\r\n                                        {this.columns.map((component, columnIndex) => {\r\n                                            return (\r\n                                                <CustomComponent\r\n                                                    inputs={this.columns}\r\n                                                    availablepsacechange={this.availablepsacechange}\r\n                                                    userInfo={this.props.userInfo}\r\n                                                    handleKeyDown={(e) => this.handleKeyDown(e, this.props.Rows, this.props.columns,\r\n                                                        this.props.editedsheetData.ndirectionmastercode)}\r\n                                                    Rows={this.props.Rows}\r\n                                                    columns={this.props.columns}\r\n                                                    ndirectionmastercode={this.props.editedsheetData.ndirectionmastercode}\r\n                                                    columnIndex={columnIndex}\r\n                                                    rowIndex={rowIndex}\r\n                                                    nsamplestoragemappingcode={this.props.editedsheetData.nsamplestoragemappingcode}\r\n                                                    nsamplestoragelocationcode={this.props.editedsheetData.nsamplestoragelocationcode}\r\n                                                    nprojecttypecode={this.props.editedsheetData.nprojecttypecode}\r\n                                                    nquantity={this.props.editedsheetData.nquantity}\r\n                                                    nbarcodedescription={this.props.nbarcodedescription}\r\n                                                    sunitname={this.props.editedsheetData.sunitname}\r\n                                                    nbarcodeLength={this.props.nbarcodeLength}\r\n                                                    sheetData={this.props.sheetData}\r\n                                                    childSheetDataChange={this.props.childSheetDataChange}\r\n                                                    isDisabled={this.props.isMoveScreen? true:\r\n                                                        this.props.editedsheetData.ndirectionmastercode === 1 ?\r\n                                                            this.state.sheetData ?\r\n                                                                ((this.state.sheetData\r\n                                                                [this.alphabet[rowIndex] + (columnIndex + 1)] === undefined)\r\n                                                                    || (this.state.sheetData\r\n                                                                    [this.alphabet[rowIndex] + (columnIndex + 1)] === \"\") ?\r\n                                                                    false : true) : false :\r\n                                                            this.state.sheetData ?\r\n                                                                (((this.state.sheetData\r\n                                                                [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                                    || (this.state.sheetData\r\n                                                                    [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) ? false :\r\n                                                                    true) : false\r\n                                                    }\r\n                                                    boxWidth={this.props.sbarcodeboxWidth}\r\n                                                //boxWidth =\"100px\"\r\n                                                />\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                })}</div></form>\r\n                    </Col></>\r\n\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default MatrixComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}