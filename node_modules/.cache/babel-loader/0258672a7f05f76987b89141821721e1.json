{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\EditItem.jsx\";\nimport { SchedulerEditItem, SchedulerEditSlot, SchedulerItem, SchedulerSlot, SchedulerTask, SchedulerViewSlot } from \"@progress/kendo-react-scheduler\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { getInstrumentForSchedule } from '../../actions';\nimport { FormWithCustomEditor } from './custom-form';\nimport { toast } from \"react-toastify\";\nimport { parseAdjust, parseAdjustDate } from \"./NewJobAlloct\";\nimport { useInternationalization } from \"@progress/kendo-react-intl\";\nimport { intl } from \"../../components/App\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nconst CustomEditItem = props => {\n  const ref = React.useRef(null); //  const [show, setShow] = React.useState(false);\n\n  const [formItem, setFormItem] = React.useState(null); // const intl = useInternationalization();\n  //const { onFocus, onBlur } = props;\n  // const handleFocus = React.useCallback(\n  //     (event) => {\n  //         setShow(true);\n  //         if (props.onFocus) {\n  //             props.onFocus(event);\n  //         }\n  //     },\n  //     [props]\n  // );\n  // const handleBlur = React.useCallback(\n  //     (event) => {\n  //       setShow(false);\n  //       // Call the default `onBlur` handler\n  //       if (onBlur) {\n  //         onBlur(event);\n  //       }\n  //     },\n  //     [onBlur]\n  //   );\n  // const handleCloseClick = React.useCallback(() => {\n  //     setShow(false);\n  // }, []);\n  // const handleEditClick = React.useCallback(() => {\n  //     console.log(\"hello1\", props.dataItem);\n  //     if (props.dataItem &&\n  //         props.dataItem.InstrumentCategory) {\n  //         if (props.dataItem.ntransactionstatus) {\n  //             if (props.dataItem.ntransactionstatus !== 20) {\n  //                 props.getInstrumentForSchedule(props.dataItem.InstrumentCategory, props.Login.userInfo);\n  //                 setFormItem(props.dataItem);\n  //                 setShow(false);\n  //             } else {\n  //                 toast.info(\"Already allocted\")\n  //             }\n  //         } else {\n  //             props.getInstrumentForSchedule(props.dataItem.InstrumentCategory, props.Login.userInfo);\n  //             setFormItem(props.dataItem);\n  //             setShow(false);\n  //         }\n  //     }\n  // }, [props.dataItem]);\n\n  const handleFormItemChange = React.useCallback(event => {\n    // console.log(\"hello\")\n    // console.log(\"handleFormItemChange\", event.value)\n    // console.log(\"handleFormItemChange1\", formItem)\n    if (event.value) {\n      if (event.value.ntransactionstatus) {\n        if (event.value.ntransactionstatus !== 20) {\n          setFormItem(event.value);\n        } // else{\n        //     toast.info(\"Already Allocted\")\n        // }\n\n      } else {\n        setFormItem(event.value);\n      }\n    } else {\n      setFormItem(event.value);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SchedulerEditItem, Object.assign({\n    ref: ref\n  }, props, {\n    style: { ...props.style // backgroundColor:  \"yellow\",\n      // color:\"black\"\n      //  height: '100px'\n      //background: `url(${props.dataItem.image})`,\n\n    } // onFocus={handleFocus}\n    ,\n    formItem: formItem,\n    onFormItemChange: handleFormItemChange,\n    form: FormWithCustomEditor // onBlur={handleBlur}\n    //    title={generateTitle(props.dataItem)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default connect(mapStateToProps, {\n  getInstrumentForSchedule\n})(CustomEditItem);\nexport const CustomTask = props => {\n  return /*#__PURE__*/React.createElement(SchedulerTask, Object.assign({}, props, {\n    style: { ...props.style,\n      backgroundColor: props.isAllDay ? \"#ccccff\" : \"#ffcccc\",\n      borderRadius: \"8px\",\n      height: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }));\n}; // export const CustomEditSlot = (props) => {\n//     const [formItem, setFormItem] = React.useState(null);\n//     const handleFormItemChange = React.useCallback(\n//         (event) => {\n//             if (props.isWorkDay && props.isWorkHour) {\n//                 setFormItem(event.value);\n//             }\n//         },\n//         [props.isWorkDay, props.isWorkHour]\n//     );\n//     return (\n//         <SchedulerEditSlot\n//             {...props}\n//             formItem={formItem}\n//             onFormItemChange={handleFormItemChange}\n//         />\n//     );\n// };\n\nexport const CustomViewSlot = props => {\n  return props.isAllDay ? null : /*#__PURE__*/React.createElement(SchedulerViewSlot, Object.assign({}, props, {\n    style: { ...props.style //  cursor: !props.isWorkDay || !props.isWorkHour ? \"no-drop\" : undefined,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }));\n};\nexport const CustomEditSlotForMonth = props => {\n  const [formItem, setFormItem] = React.useState(null);\n  const handleFormItemChange = React.useCallback(event => {\n    if (event.value) {\n      if (event.value.ntransactionstatus) {\n        if (event.value.ntransactionstatus !== 20) {\n          setFormItem(event.value);\n        } else {\n          toast.info(intl.formatMessage({\n            id: \"IDS_ALREADYALLOTED\"\n          }));\n        }\n      } else {\n        setFormItem(event.value);\n      }\n    } else {\n      setFormItem(event.value);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SchedulerEditSlot, Object.assign({}, props, {\n    //  onDoubleClick={ondoubleClick}\n    formItem: formItem,\n    onFormItemChange: handleFormItemChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }), \" \", props.children);\n};\nexport const CustomSlot = props => {\n  return /*#__PURE__*/React.createElement(SchedulerSlot, Object.assign({}, props, {\n    style: { ...props.style,\n      backgroundColor: parseAdjustDate(props.start) === parseAdjustDate(new Date()) ? \"#c7cdd5\" : \"\" //content:\"Today\"\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), props.children, parseAdjustDate(props.start) === parseAdjustDate(new Date()) ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"position\": \"relative\",\n      \"bottom\": \"12px\",\n      \"left\": \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 77\n    }\n  }, \"Today\") : \"\");\n};\nexport const CustomSlotForDayAndWeek = props => {\n  return /*#__PURE__*/React.createElement(SchedulerSlot, Object.assign({}, props, {\n    style: { ...props.style,\n      backgroundColor: parseAdjustDate(props.start) === parseAdjustDate(new Date()) ? \"#c7cdd5\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), props.children);\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/EditItem.jsx"],"names":["SchedulerEditItem","SchedulerEditSlot","SchedulerItem","SchedulerSlot","SchedulerTask","SchedulerViewSlot","React","connect","getInstrumentForSchedule","FormWithCustomEditor","toast","parseAdjust","parseAdjustDate","useInternationalization","intl","mapStateToProps","state","Login","CustomEditItem","props","ref","useRef","formItem","setFormItem","useState","handleFormItemChange","useCallback","event","value","ntransactionstatus","style","CustomTask","backgroundColor","isAllDay","borderRadius","height","CustomViewSlot","CustomEditSlotForMonth","info","formatMessage","id","children","CustomSlot","start","Date","CustomSlotForDayAndWeek"],"mappings":"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","sourcesContent":["import { SchedulerEditItem, SchedulerEditSlot, SchedulerItem, SchedulerSlot, SchedulerTask, SchedulerViewSlot } from \"@progress/kendo-react-scheduler\";\r\nimport React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getInstrumentForSchedule } from '../../actions'\r\nimport { FormWithCustomEditor } from './custom-form';\r\nimport { toast } from \"react-toastify\";\r\nimport { parseAdjust, parseAdjustDate } from \"./NewJobAlloct\";\r\nimport { useInternationalization } from \"@progress/kendo-react-intl\";\r\nimport {intl} from \"../../components/App\"\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nconst CustomEditItem = (props) => {\r\n    const ref = React.useRef(null);\r\n    //  const [show, setShow] = React.useState(false);\r\n    const [formItem, setFormItem] = React.useState(null);\r\n   // const intl = useInternationalization();\r\n    //const { onFocus, onBlur } = props;\r\n\r\n\r\n    // const handleFocus = React.useCallback(\r\n    //     (event) => {\r\n    //         setShow(true);\r\n    //         if (props.onFocus) {\r\n    //             props.onFocus(event);\r\n    //         }\r\n    //     },\r\n    //     [props]\r\n    // );\r\n\r\n    // const handleBlur = React.useCallback(\r\n    //     (event) => {\r\n    //       setShow(false);\r\n\r\n    //       // Call the default `onBlur` handler\r\n    //       if (onBlur) {\r\n    //         onBlur(event);\r\n    //       }\r\n    //     },\r\n    //     [onBlur]\r\n    //   );\r\n\r\n    // const handleCloseClick = React.useCallback(() => {\r\n    //     setShow(false);\r\n    // }, []);\r\n    // const handleEditClick = React.useCallback(() => {\r\n    //     console.log(\"hello1\", props.dataItem);\r\n    //     if (props.dataItem &&\r\n    //         props.dataItem.InstrumentCategory) {\r\n    //         if (props.dataItem.ntransactionstatus) {\r\n    //             if (props.dataItem.ntransactionstatus !== 20) {\r\n    //                 props.getInstrumentForSchedule(props.dataItem.InstrumentCategory, props.Login.userInfo);\r\n    //                 setFormItem(props.dataItem);\r\n    //                 setShow(false);\r\n    //             } else {\r\n    //                 toast.info(\"Already allocted\")\r\n    //             }\r\n\r\n    //         } else {\r\n    //             props.getInstrumentForSchedule(props.dataItem.InstrumentCategory, props.Login.userInfo);\r\n    //             setFormItem(props.dataItem);\r\n    //             setShow(false);\r\n    //         }\r\n\r\n    //     }\r\n\r\n    // }, [props.dataItem]);\r\n    const handleFormItemChange = React.useCallback((event) => {\r\n        // console.log(\"hello\")\r\n        // console.log(\"handleFormItemChange\", event.value)\r\n        // console.log(\"handleFormItemChange1\", formItem)\r\n\r\n        if (event.value) {\r\n            if (event.value.ntransactionstatus) {\r\n                if (event.value.ntransactionstatus !== 20) {\r\n                    setFormItem(event.value);\r\n                }\r\n                // else{\r\n                //     toast.info(\"Already Allocted\")\r\n                // }\r\n\r\n            } else {\r\n                setFormItem(event.value);\r\n            }\r\n\r\n        } else {\r\n            setFormItem(event.value);\r\n        }\r\n\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <SchedulerEditItem\r\n                ref={ref}\r\n                {...props}\r\n                style={{\r\n                    ...props.style,\r\n                   // backgroundColor:  \"yellow\",\r\n                   // color:\"black\"\r\n                    //  height: '100px'\r\n                    //background: `url(${props.dataItem.image})`,\r\n                }}\r\n                // onFocus={handleFocus}\r\n                formItem={formItem}\r\n                onFormItemChange={handleFormItemChange}\r\n                form={FormWithCustomEditor}\r\n            // onBlur={handleBlur}\r\n            //    title={generateTitle(props.dataItem)}\r\n            />\r\n            {/* <Popup  show={show}\r\n          anchorAlign={{\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          }}\r\n          popupAlign={{\r\n            horizontal: \"center\",\r\n            vertical: \"bottom\",\r\n          }}\r\n          anchor={ref.current && ref.current.element} >\r\n                <div className=\"p-1\">\r\n                    <h5>{\"ArNo : \"}{props.dataItem.sarno && props.dataItem.sarno}</h5>\r\n                    <h5>{\"Test Name : \"}{props.dataItem.stestsynonym && props.dataItem.stestsynonym }</h5>\r\n                    <h5 style={{\"color\":\"red\"}}>{\"Status : \"}{props.dataItem.stransdisplaystatus && props.dataItem.stransdisplaystatus}</h5>\r\n                    <h5 style={{\"color\":\"red\"}}>{\"Start Date : \"}{ parseAdjust(props.dataItem.start).toLocaleDateString()}</h5>\r\n                    <h5 style={{\"color\":\"red\"}}>{\"End Date : \"}{ parseAdjust(props.dataItem.end).toLocaleDateString()}</h5>\r\n                   \r\n                </div>\r\n            </Popup> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default connect(mapStateToProps, { getInstrumentForSchedule })(CustomEditItem);\r\n\r\nexport const CustomTask = (props) => {\r\n    return (\r\n        <SchedulerTask\r\n\r\n            {...props}\r\n            style={{\r\n                ...props.style,\r\n                backgroundColor: props.isAllDay ? \"#ccccff\" : \"#ffcccc\",\r\n                borderRadius: \"8px\",\r\n                height: 32,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n// export const CustomEditSlot = (props) => {\r\n//     const [formItem, setFormItem] = React.useState(null);\r\n//     const handleFormItemChange = React.useCallback(\r\n//         (event) => {\r\n//             if (props.isWorkDay && props.isWorkHour) {\r\n//                 setFormItem(event.value);\r\n//             }\r\n//         },\r\n//         [props.isWorkDay, props.isWorkHour]\r\n//     );\r\n//     return (\r\n//         <SchedulerEditSlot\r\n//             {...props}\r\n//             formItem={formItem}\r\n//             onFormItemChange={handleFormItemChange}\r\n//         />\r\n//     );\r\n// };\r\n\r\n\r\nexport const CustomViewSlot = (props) => {\r\n    return (\r\n        props.isAllDay ? null : <SchedulerViewSlot\r\n            {...props}\r\n            style={{\r\n                ...props.style,\r\n                //  cursor: !props.isWorkDay || !props.isWorkHour ? \"no-drop\" : undefined,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport const CustomEditSlotForMonth = (props) => {\r\n    const [formItem, setFormItem] = React.useState(null);\r\n    const handleFormItemChange = React.useCallback(\r\n        (event) => {\r\n            if (event.value) {\r\n                if (event.value.ntransactionstatus) {\r\n                    if (event.value.ntransactionstatus !== 20) {\r\n                        setFormItem(event.value);\r\n                    } else {\r\n                        toast.info(intl.formatMessage({ id: \"IDS_ALREADYALLOTED\" }))\r\n                    }\r\n\r\n                } else {\r\n                    setFormItem(event.value);\r\n                }\r\n\r\n            } else {\r\n                setFormItem(event.value);\r\n            }\r\n        },\r\n        []\r\n    );\r\n    return (\r\n        <SchedulerEditSlot\r\n            {...props}\r\n            //  onDoubleClick={ondoubleClick}\r\n            formItem={formItem}\r\n            onFormItemChange={handleFormItemChange}\r\n        > {props.children}\r\n        </SchedulerEditSlot>\r\n    );\r\n};\r\n\r\nexport const CustomSlot = (props) => {\r\n    return (\r\n        <SchedulerSlot\r\n            {...props}\r\n            style={{\r\n                ...props.style,\r\n                backgroundColor: parseAdjustDate(props.start) === parseAdjustDate(new Date())\r\n                    ? \"#c7cdd5\"\r\n                    : \"\",\r\n                //content:\"Today\"\r\n            }}\r\n        >\r\n            {props.children}\r\n            {parseAdjustDate(props.start) === parseAdjustDate(new Date()) ? <div style={{\r\n                \"position\": \"relative\",\r\n                \"bottom\": \"12px\",\r\n                \"left\": \"50px\"\r\n            }}  >{\"Today\"}</div> : \"\"}\r\n\r\n        </SchedulerSlot>\r\n    );\r\n};\r\n\r\n\r\nexport const CustomSlotForDayAndWeek = (props) => {\r\n    return (\r\n        <SchedulerSlot\r\n            {...props}\r\n            style={{\r\n                ...props.style,\r\n                backgroundColor: parseAdjustDate(props.start) === parseAdjustDate(new Date())\r\n                    ? \"#c7cdd5\"\r\n                    : \"\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SchedulerSlot>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}