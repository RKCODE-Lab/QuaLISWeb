{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import DataGrid from'../../components/data-grid/data-grid.component';var BatchResultTab=function BatchResultTab(props){var batchViewList=[];var batchCSViewList=[];batchViewList.push({\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"155px\"});if(props.nneedsubsample){batchViewList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}batchViewList.push(//{\"idsName\":\"IDS_LIIMSPRIMARYCODE\",\"dataField\":\"limsprimarycode\",\"width\":\"155px\"}, \n// {\"idsName\":\"IDS_BATCHNO\",\"dataField\":\"sbatcharno\",\"width\":\"155px\"},\n// {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"},\n{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestsynonym\",\"width\":\"250px\"},{\"idsName\":\"IDS_REPEATRETEST\",\"dataField\":\"repretest\",\"width\":\"250px\"},{\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULT\",\"dataField\":\"sresult\",\"width\":\"250px\"},{\"idsName\":\"IDS_RESULTFLAG\",\"dataField\":\"sgradename\",\"width\":\"250px\"}//{\"idsName\":\"IDS_RETEST\",\"dataField\":\"ntestretestno\",\"width\":\"250px\"},\n// {\"idsName\":\"IDS_TRANSDATE\",\"dataField\":\"stransactiondate\",\"width\":\"250px\"},\n// {\"idsName\":\"IDS_REMARKS\",\"dataField\":\"scomments\",\"width\":\"250px\"},\n);batchCSViewList.push({label:props.intl.formatMessage({id:\"IDS_LIIMSPRIMARYCODE\"}),key:\"limsprimarycode\",\"width\":\"250px\"},{label:props.intl.formatMessage({id:\"IDS_BATCHNOGROUPID\"}),key:\"sbatcharno\",\"width\":\"250px\"},{label:props.intl.formatMessage({id:\"IDS_ARNO\"}),key:\"sarno\",\"width\":\"250px\"});if(props.nneedsubsample){batchCSViewList.push({label:props.intl.formatMessage({id:\"IDS_SAMPLEARNO\"}),key:\"ssamplearno\",\"width\":\"250px\"});}batchCSViewList.push(//  { label:props.intl.formatMessage({ id: \"IDS_LIIMSPRIMARYCODE\"}), key: \"limsprimarycode\",\"width\":\"250px\"},\n//{ label:props.intl.formatMessage({ id: \"IDS_SAMPLEARNO\" }), key: \"ssamplearno\",\"width\":\"250px\"},\n{label:props.intl.formatMessage({id:\"IDS_TEST\"}),key:\"stestsynonym\",\"width\":\"250px\"},{label:props.intl.formatMessage({id:\"IDS_REPEATRETEST\"}),key:\"repretest\",\"width\":\"250px\"},{label:props.intl.formatMessage({id:\"IDS_PARAMETERNAME\"}),key:\"sparametersynonym\",\"width\":\"200px\"},{label:props.intl.formatMessage({id:\"IDS_RESULT\"}),key:\"sresult\",\"width\":\"250px\"},{label:props.intl.formatMessage({id:\"IDS_RESULTFLAG\"}),key:\"sgradename\",\"width\":\"250px\"}//{ label:props.intl.formatMessage({ id: \"IDS_RETEST\" }),key:\"ntestretestno\",\"width\":\"250px\"},\n);var csvReport={data:props.resultview&&props.resultview.length>0?props.resultview:[],headers:batchCSViewList,filename:'Clue_Mediator_Report.csv'};return/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{key:\"ntransactionresultcode\",primaryKeyField:\"ntransactionresultcode\",data:props.resultview&&props.resultview.length>0?props.resultview:[]// dataResult = {process(props.printHistory || [], { skip: 0, take: 10 })}\n,dataResult:props.dataResult,dataState:props.dataState,batchCSViewList:batchCSViewList,dataStateChange:props.dataStateChange,extractedColumnList:batchViewList,userInfo:props.userInfo,pageable:true,scrollable:'scrollable',gridHeight:'375px',iscsv:\"true\"//csvReport={csvReport}\n,isActionRequired:false,methodUrl:props.methodUrl,selectedId:0,isToolBarRequired:true,isAddRequired:false,isRefreshRequired:false,isDownloadPDFRequired:false,isImportRequired:false,isExportExcelRequired:false,isDownloadExcelRequired:false,selectedfilename:props.selectedfilename})));};export default BatchResultTab;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/BatchResultTab.jsx"],"names":["React","Row","Col","DataGrid","BatchResultTab","props","batchViewList","batchCSViewList","push","nneedsubsample","label","intl","formatMessage","id","key","csvReport","data","resultview","length","headers","filename","dataResult","dataState","dataStateChange","userInfo","methodUrl","selectedfilename"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\n\r\nconst BatchResultTab = (props) =>{\r\n    const batchViewList = [];\r\n    const batchCSViewList = [];\r\n    \r\n\r\n    batchViewList .push(        \r\n      {\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"155px\"},\r\n    );\r\n    if (props.nneedsubsample){\r\n        batchViewList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    }\r\n      batchViewList .push(  \r\n        //{\"idsName\":\"IDS_LIIMSPRIMARYCODE\",\"dataField\":\"limsprimarycode\",\"width\":\"155px\"}, \r\n       // {\"idsName\":\"IDS_BATCHNO\",\"dataField\":\"sbatcharno\",\"width\":\"155px\"},\r\n        // {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"},\r\n        {\"idsName\":\"IDS_TEST\",\"dataField\":\"stestsynonym\",\"width\":\"250px\"},\r\n        {\"idsName\":\"IDS_REPEATRETEST\",\"dataField\":\"repretest\",\"width\":\"250px\"},\r\n        {\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_RESULT\",\"dataField\":\"sresult\",\"width\":\"250px\"},\r\n        {\"idsName\":\"IDS_RESULTFLAG\",\"dataField\":\"sgradename\",\"width\":\"250px\"},\r\n       //{\"idsName\":\"IDS_RETEST\",\"dataField\":\"ntestretestno\",\"width\":\"250px\"},\r\n        // {\"idsName\":\"IDS_TRANSDATE\",\"dataField\":\"stransactiondate\",\"width\":\"250px\"},\r\n        // {\"idsName\":\"IDS_REMARKS\",\"dataField\":\"scomments\",\"width\":\"250px\"},\r\n        \r\n     );\r\n\r\n\r\n     batchCSViewList.push(\r\n      { label:props.intl.formatMessage({ id: \"IDS_LIIMSPRIMARYCODE\"}), key: \"limsprimarycode\",\"width\":\"250px\"},\r\n      { label:props.intl.formatMessage({ id: \"IDS_BATCHNOGROUPID\"}), key: \"sbatcharno\",\"width\":\"250px\"},\r\n      { label:props.intl.formatMessage({ id: \"IDS_ARNO\" }), key: \"sarno\",\"width\":\"250px\"},\r\n      );\r\n     if (props.nneedsubsample){\r\n       batchCSViewList.push({label:props.intl.formatMessage({ id: \"IDS_SAMPLEARNO\" }), key: \"ssamplearno\",\"width\":\"250px\"});\r\n      }\r\n      \r\n      batchCSViewList.push(\r\n      //  { label:props.intl.formatMessage({ id: \"IDS_LIIMSPRIMARYCODE\"}), key: \"limsprimarycode\",\"width\":\"250px\"},\r\n        //{ label:props.intl.formatMessage({ id: \"IDS_SAMPLEARNO\" }), key: \"ssamplearno\",\"width\":\"250px\"},\r\n        { label:props.intl.formatMessage({ id: \"IDS_TEST\" }),key:\"stestsynonym\",\"width\":\"250px\"},\r\n        { label:props.intl.formatMessage({ id: \"IDS_REPEATRETEST\" }),key:\"repretest\",\"width\":\"250px\"},\r\n        { label:props.intl.formatMessage({ id: \"IDS_PARAMETERNAME\"}),key:\"sparametersynonym\",\"width\":\"200px\"},\r\n        { label:props.intl.formatMessage({ id: \"IDS_RESULT\" }),key:\"sresult\",\"width\":\"250px\"},\r\n        { label:props.intl.formatMessage({ id: \"IDS_RESULTFLAG\" }),key:\"sgradename\",\"width\":\"250px\"},\r\n        //{ label:props.intl.formatMessage({ id: \"IDS_RETEST\" }),key:\"ntestretestno\",\"width\":\"250px\"},\r\n     );\r\n\r\n     const csvReport = {\r\n        data: props.resultview && props.resultview.length > 0 ? props.resultview :[],\r\n        headers: batchCSViewList,\r\n        filename: 'Clue_Mediator_Report.csv'\r\n      };\r\n    \r\n    return (\r\n    \r\n        <Row noGutters>\r\n            <Col md={12}>\r\n                <DataGrid\r\n                    key=\"ntransactionresultcode\"\r\n                    primaryKeyField = \"ntransactionresultcode\"\r\n                    data = {props.resultview && props.resultview.length > 0 ? props.resultview :[]}\r\n                   // dataResult = {process(props.printHistory || [], { skip: 0, take: 10 })}\r\n                    dataResult = {props.dataResult}\r\n                    dataState = {props.dataState}\r\n                    batchCSViewList={batchCSViewList}\r\n                    dataStateChange = {props.dataStateChange}\r\n                    extractedColumnList = {batchViewList}\r\n                    userInfo={props.userInfo}\r\n                    pageable={true}\r\n                    scrollable={'scrollable'}\r\n                    gridHeight = {'375px'}\r\n                    iscsv={\"true\"}\r\n                    //csvReport={csvReport}\r\n                    isActionRequired={false}\r\n                    methodUrl={props.methodUrl}\r\n                    selectedId={0}\r\n                    isToolBarRequired={true}\r\n                    isAddRequired={false}\r\n                    isRefreshRequired={false}\r\n                    isDownloadPDFRequired={false}\r\n                    isImportRequired={false}\r\n                    isExportExcelRequired={false}\r\n                    isDownloadExcelRequired={false}\r\n                    selectedfilename={props.selectedfilename}\r\n                >\r\n                </DataGrid>\r\n            </Col>\r\n        </Row>\r\n    \r\n    );\r\n};\r\nexport default BatchResultTab;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}