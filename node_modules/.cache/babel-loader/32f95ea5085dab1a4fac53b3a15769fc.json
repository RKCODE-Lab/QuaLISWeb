{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\components\\\\ViewInfoDetails.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport { ReadOnlyText } from \"../components/App.styles\";\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SlideOutModal from \"../components/slide-out-modal/SlideOutModal\";\nimport { faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass ViewInfoDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleIsActive = () => {\n      this.setState({\n        isActive: !this.state.isActive\n      });\n    };\n\n    this.state = {\n      isActive: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"edittestname\",\n      hidden: this.props.screenHiddenDetails,\n      \"data-tip\": this.props.dataTip,\n      onClick: this.toggleIsActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    })), this.state.isActive ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: true,\n      size: \"lg\",\n      closeModal: this.toggleIsActive,\n      hideSave: true // operation = \"view\"\n      ,\n      screenName: \"View\",\n      inputParam: {\n        \"operation\": \"view\"\n      },\n      mandatoryFields: this.mandatoryFields,\n      addComponent: /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }\n      }, this.props.rowList && /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        className: \"p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, this.props.rowList.map(componentrow => /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, componentrow.map(componentColumn => /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, componentColumn.hidden === false ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey mr-2 mt-3\",\n        hidden: componentColumn.hidden,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOAD\"\n        }),\n        onClick: () => componentColumn.onClick(this.props.selectedObject, this.props.userInfo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCloudDownloadAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }\n      }))) : componentColumn.idsName && ( /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: componentColumn.idsName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }\n      }, this.props.selectedObject[componentColumn.dataField])) || \"\"))))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nexport default injectIntl(ViewInfoDetails);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/components/ViewInfoDetails.js"],"names":["React","Component","Row","Col","Nav","ReadOnlyText","FormGroup","FormLabel","injectIntl","FormattedMessage","faEye","FontAwesomeIcon","SlideOutModal","faCloudDownloadAlt","ViewInfoDetails","constructor","props","toggleIsActive","setState","isActive","state","render","screenHiddenDetails","dataTip","mandatoryFields","rowList","map","componentrow","componentColumn","hidden","intl","formatMessage","id","onClick","selectedObject","userInfo","idsName","dataField"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Row, Col,Nav } from 'react-bootstrap';\r\nimport { ReadOnlyText } from \"../components/App.styles\";\r\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SlideOutModal from \"../components/slide-out-modal/SlideOutModal\";\r\nimport { faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ViewInfoDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isActive: false,\r\n    };\r\n  }\r\n  toggleIsActive = () => {\r\n    this.setState({isActive: !this.state.isActive});\r\n  };  \r\n  render(){\r\n    return(\r\n      <>\r\n        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n            hidden={this.props.screenHiddenDetails}\r\n            data-tip={this.props.dataTip}                              \r\n            onClick={this.toggleIsActive}>\r\n            <FontAwesomeIcon icon={faEye} />\r\n        </Nav.Link>    \r\n        {this.state.isActive?\r\n          <SlideOutModal\r\n            show={true}\r\n            size={\"lg\" }\r\n            closeModal={this.toggleIsActive}\r\n            hideSave={ true }\r\n            // operation = \"view\"\r\n            screenName=\"View\"\r\n            inputParam = {{\"operation\":\"view\"}}   \r\n            mandatoryFields={ this.mandatoryFields} \r\n            addComponent={<Row>\r\n            {this.props.rowList &&\r\n              <Col md={12} className='p-0'>\r\n                {this.props.rowList.map(componentrow =>\r\n                  <Row>\r\n                    {componentrow.map(componentColumn =>\r\n                      <Col>\r\n                     { componentColumn.hidden === false ?\r\n                        <>\r\n                         <Nav.Link  className=\"btn btn-circle outline-grey mr-2 mt-3\"\r\n                                    hidden={componentColumn.hidden}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                    onClick={() =>componentColumn.onClick(this.props.selectedObject, this.props.userInfo)}>\r\n                              <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                        </Nav.Link>\r\n                        </> \r\n                        : componentColumn.idsName && (\r\n                        <FormGroup>                                            \r\n                          <FormLabel><FormattedMessage id={componentColumn.idsName}/></FormLabel>                                \r\n                          <ReadOnlyText className='text-break'>{this.props.selectedObject[componentColumn.dataField]}</ReadOnlyText>\r\n                        </FormGroup>\r\n                        \r\n                      ||\"\")\r\n                    }\r\n                        \r\n                      </Col>\r\n                    )}\r\n                  </Row>                 \r\n                )}\r\n              </Col>\r\n\r\n             \r\n            }</Row>\r\n          \r\n          }                    \r\n          />: ''\r\n        }\r\n          \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(ViewInfoDetails);"]},"metadata":{},"sourceType":"module"}