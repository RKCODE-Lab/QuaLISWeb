{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\Scheduler\\\\Scheduler.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserTimes, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getSchedulerDetail, getSchedulerComboService, changeScheduleTypeFilter, getUserMultiRoleComboDataService, getUserMultiDeputyComboDataService, getUserSiteDetail, getUserSiteComboService, filterColumnData, getPreviewTemplate } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { showEsign, getControlMap, constructOptionList, validatePhoneNumber, formatInputDate, create_UUID, validateEmail, validateLoginId, formatDate, onDropAttachFileList, deleteAttachmentDropZone, comboChild } from '../../components/CommonScript'; //import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport { transactionStatus } from '../../components/Enumeration';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport { process } from \"@progress/kendo-data-query\";\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component'; // import 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport AddScheduler from './AddScheduler';\nimport Esign from '../audittrail/Esign'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import ReactTooltip from 'react-tooltip';\n\nimport ScheduleTypeFilter from './ScheduleTypeFilter';\nimport PortalModal from '../../PortalModal';\nimport PreRegisterSlideOutModal from '../registration/PreRegisterSlideOutModal';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRegistrationComboService = preregId => {\n      if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.APPROVED) {\n        const ndesigntemplatemappingcodefilter = this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode;\n\n        if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\n          let data = [];\n          const withoutCombocomponent = [];\n          const Layout = this.props.Login.masterData.schedulerTemplate && this.props.Login.masterData.schedulerTemplate.jsondata;\n\n          if (Layout !== undefined) {\n            Layout.map(row => {\n              return row.children.map(column => {\n                return column.children.map(component => {\n                  return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                    if (componentrow.inputtype === \"combo\") {\n                      data.push(componentrow);\n                    } else {\n                      withoutCombocomponent.push(componentrow);\n                    }\n\n                    return null;\n                  }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n                });\n              });\n            });\n            const comboComponents = data;\n            let childColumnList = {};\n            data.map(columnList => {\n              const val = comboChild(data, columnList, childColumnList, true);\n              data = val.data;\n              childColumnList = val.childColumnList;\n              return null;\n            });\n            const mapOfFilterRegData = {\n              nsampletypecode: 1,\n              //parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)\n              nneedsubsample: transactionStatus.NO\n            };\n            this.props.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, preregId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, true, false, mapOfFilterRegData, false, \"create\", 'scheduler');\n          } else {\n            toast.info(\"Configure the schedule template for this scheduler\");\n          }\n        } else {\n          toast.info(\"select the approved design template\");\n        }\n      } else {\n        toast.info(\"select the approved schedule\");\n      }\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.testRETabDetail = () => {\n      const testTabMap = new Map(); //let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n      testTabMap.set(\"IDS_SCHEDULERTRANSACTION\", /*#__PURE__*/React.createElement(DataGrid, {\n        userRoleControlRights: this.state.userRoleControlRights,\n        controlMap: this.state.controlMap,\n        primaryKeyField: \"nschedulartransactioncode\",\n        data: this.props.Login.masterData && this.props.Login.masterData.SchedulerTransaction,\n        dataResult: process(this.props.Login.masterData && (this.props.Login.masterData.SchedulerTransaction || []), this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        extractedColumnList: this.columnList,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        pageable: true,\n        scrollable: \"scrollable\",\n        isActionRequired: false,\n        isToolBarRequired: false,\n        selectedId: null,\n        hideColumnFilter: false //expandField={\"expanded\"}\n        ,\n        handleExpandChange: this.handleExpandChange //  hasChild={true}\n        //   childColumnList={this.childColumnList}\n        //   childMappingField={\"nschedulartransactioncode\"}\n        //   childList={this.props.Login.testMap || new Map()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }\n      }));\n      return testTabMap;\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.state.nfilterScheduleType !== undefined && this.state.nfilterScheduleType.value) {\n        let inputParam = {\n          inputData: {\n            nscheduletypecode: this.state.nfilterScheduleType.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterScheduleType: this.state.nfilterScheduleType\n          },\n          classUrl: \"scheduler\",\n          methodUrl: \"SchedulerByScheduleType\"\n        };\n        this.props.changeScheduleTypeFilter(inputParam, this.props.Login.masterData.filterScheduleType);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_TESTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteScheduler(\"Scheduler\", this.props.Login.masterData.SelectedScheduler, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openPortal = this.props.Login.openPortal;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openPortal = false;\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          openPortal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeevent = (comboData, fieldName) => {\n      let nfilterScheduleType = this.state.nfilterScheduleType || {};\n      nfilterScheduleType = comboData;\n      this.searchRef.current.value = \"\";\n      this.setState({\n        nfilterScheduleType\n      }); // const selectedRecord = this.state.selectedRecord || {};\n      // selectedRecord[fieldName] = comboData;\n      // this.setState({ selectedRecord });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else if (event.target.name === \"nlockmode\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.ALL;\n      } else {\n        if (event.target.name === \"noccurencenooftimes\" || event.target.name === \"noccurencedaywiseinterval\" || event.target.name === \"nexactday\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else if (event.target.name === \"sloginid\") {\n          if (event.target.value !== \"\") {\n            if (validateLoginId(event.target.value)) {\n              selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n            }\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue, sdatename) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      selectedRecord[sdatename] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let scheduleData = {};\n      scheduleData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.state.selectedRecord[\"nschedulertypecode\"] === undefined || this.state.selectedRecord[\"nschedulertypecode\"] === null) {\n        toast.info(\"Please select SchedulerType\");\n        return;\n      }\n\n      if (this.state.selectedRecord[\"nschedulertypecode\"].value !== 1) {\n        if (this.state.selectedRecord[\"denddate\"] === undefined || this.state.selectedRecord[\"denddate\"] === null) {\n          toast.info(\"Please select END Date\");\n          return;\n        }\n\n        if (this.state.selectedRecord[\"dendtime\"] === undefined || this.state.selectedRecord[\"dendtime\"] === null) {\n          toast.info(\"Please select END Time\");\n          return;\n        }\n\n        if (this.state.selectedRecord[\"denddate\"] !== undefined && this.state.selectedRecord[\"dstartdate\"] !== undefined) {\n          if (this.state.selectedRecord[\"denddate\"] < this.state.selectedRecord[\"dstartdate\"]) {\n            toast.info(\"Please select END Date Greater than Start Date\");\n            return;\n          }\n        }\n\n        if (this.state.selectedRecord[\"ntyperecurringcode\"].value === 1) {// if(this.state.selectedRecord[\"noccurencenooftimes\"]===undefined ||\n          // this.state.selectedRecord[\"noccurencenooftimes\"]===null)\n          // {\n          //     toast.info(\"Please enter Occurrence value\");\n          //     return;\n          // }\n          // if(this.state.selectedRecord[\"soccurencehourwiseinterval\"]===undefined ||\n          // this.state.selectedRecord[\"soccurencehourwiseinterval\"]===null)\n          // {\n          //     toast.info(\"Please select Occurrence Hour wise\");\n          //     return;\n          // }\n          // if(this.state.selectedRecord[\"noccurencedaywiseinterval\"]===undefined ||\n          // this.state.selectedRecord[\"noccurencedaywiseinterval\"]===null)\n          // {\n          //     toast.info(\"Please enter Occurrence Day wise\");\n          //     return;\n          // }\n        }\n\n        if (this.state.selectedRecord[\"ntyperecurringcode\"].value === 3) {\n          if (this.state.selectedRecord[\"nrecurringperiodcode\"] === undefined) {\n            toast.info(\"Please select Monthly Occurrence type\");\n            return;\n          }\n\n          if (this.state.selectedRecord[\"nrecurringperiodcode\"] !== undefined && this.state.selectedRecord[\"nrecurringperiodcode\"].value === 1 && this.state.selectedRecord[\"nexactday\"] === undefined) {\n            toast.info(\"Please enter Exact Day\");\n            return;\n          }\n        }\n      }\n\n      let postParam = undefined; //add               \n\n      scheduleData[\"schedulemaster\"] = {\n        \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n      };\n      this.schedulerFieldList.map(item => {\n        return scheduleData[\"schedulemaster\"][item] = this.state.selectedRecord[item];\n      });\n\n      if (this.props.Login.operation === \"update\") {\n        scheduleData[\"schedulemaster\"][\"nschedulecode\"] = this.props.Login.masterData.SelectedScheduler[\"nschedulecode\"];\n      }\n\n      if (this.props.Login.operation === \"create\" && this.state.selectedRecord[\"ntyperecurringcode\"].value === 2) {\n        if (this.state.selectedRecord[\"nsunday\"] === undefined) {\n          this.state.selectedRecord[\"nsunday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nmonday\"] === undefined) {\n          this.state.selectedRecord[\"nmonday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"ntuesday\"] === undefined) {\n          this.state.selectedRecord[\"ntuesday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nwednesday\"] === undefined) {\n          this.state.selectedRecord[\"nwednesday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nthursday\"] === undefined) {\n          this.state.selectedRecord[\"nthursday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nfriday\"] === undefined) {\n          this.state.selectedRecord[\"nfriday\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nsaturday\"] === undefined) {\n          this.state.selectedRecord[\"nsaturday\"] = 1;\n        }\n      }\n\n      if (this.props.Login.operation === \"create\" && this.state.selectedRecord[\"ntyperecurringcode\"].value === 3) {\n        if (this.state.selectedRecord[\"njan\"] === undefined) {\n          this.state.selectedRecord[\"njan\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nfeb\"] === undefined) {\n          this.state.selectedRecord[\"nfeb\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nmar\"] === undefined) {\n          this.state.selectedRecord[\"nmar\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"napr\"] === undefined) {\n          this.state.selectedRecord[\"napr\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nmay\"] === undefined) {\n          this.state.selectedRecord[\"nmay\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"njun\"] === undefined) {\n          this.state.selectedRecord[\"njun\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"njul\"] === undefined) {\n          this.state.selectedRecord[\"njul\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"naug\"] === undefined) {\n          this.state.selectedRecord[\"naug\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nsep\"] === undefined) {\n          this.state.selectedRecord[\"nsep\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"noct\"] === undefined) {\n          this.state.selectedRecord[\"noct\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"nnov\"] === undefined) {\n          this.state.selectedRecord[\"nnov\"] = 1;\n        }\n\n        if (this.state.selectedRecord[\"ndec\"] === undefined) {\n          this.state.selectedRecord[\"ndec\"] = 1;\n        }\n      }\n\n      scheduleData[\"schedulemasterweekly\"] = {\n        \"nsunday\": this.state.selectedRecord[\"nsunday\"] ? this.state.selectedRecord[\"nsunday\"] : 0,\n        //\"ndefaultrole\": transactionStatus.YES, \"ntransactionstatus\": transactionStatus.ACTIVE\n        \"nmonday\": this.state.selectedRecord[\"nmonday\"] ? this.state.selectedRecord[\"nmonday\"] : 0,\n        \"ntuesday\": this.state.selectedRecord[\"ntuesday\"] ? this.state.selectedRecord[\"ntuesday\"] : 0,\n        \"nwednesday\": this.state.selectedRecord[\"nwednesday\"] ? this.state.selectedRecord[\"nwednesday\"] : 0,\n        \"nthursday\": this.state.selectedRecord[\"nthursday\"] ? this.state.selectedRecord[\"nthursday\"] : 0,\n        \"nfriday\": this.state.selectedRecord[\"nfriday\"] ? this.state.selectedRecord[\"nfriday\"] : 0,\n        \"nsaturday\": this.state.selectedRecord[\"nsaturday\"] ? this.state.selectedRecord[\"nsaturday\"] : 0\n      };\n      scheduleData[\"schedulemastermonthly\"] = {\n        \"nexactday\": this.state.selectedRecord[\"nexactday\"] ? this.state.selectedRecord[\"nexactday\"] : 0,\n        \"nmonthlyoccurrencetype\": this.state.selectedRecord[\"nrecurringperiodcode\"] ? this.state.selectedRecord[\"nrecurringperiodcode\"].value : 0,\n        \"njan\": this.state.selectedRecord[\"njan\"] ? this.state.selectedRecord[\"njan\"] : 0,\n        \"nfeb\": this.state.selectedRecord[\"nfeb\"] ? this.state.selectedRecord[\"nfeb\"] : 0,\n        \"nmar\": this.state.selectedRecord[\"nmar\"] ? this.state.selectedRecord[\"nmar\"] : 0,\n        \"napr\": this.state.selectedRecord[\"napr\"] ? this.state.selectedRecord[\"napr\"] : 0,\n        \"nmay\": this.state.selectedRecord[\"nmay\"] ? this.state.selectedRecord[\"nmay\"] : 0,\n        \"njun\": this.state.selectedRecord[\"njun\"] ? this.state.selectedRecord[\"njun\"] : 0,\n        \"njul\": this.state.selectedRecord[\"njul\"] ? this.state.selectedRecord[\"njul\"] : 0,\n        \"naug\": this.state.selectedRecord[\"naug\"] ? this.state.selectedRecord[\"naug\"] : 0,\n        \"nsep\": this.state.selectedRecord[\"nsep\"] ? this.state.selectedRecord[\"nsep\"] : 0,\n        \"noct\": this.state.selectedRecord[\"noct\"] ? this.state.selectedRecord[\"noct\"] : 0,\n        \"nnov\": this.state.selectedRecord[\"nnov\"] ? this.state.selectedRecord[\"nnov\"] : 0,\n        \"ndec\": this.state.selectedRecord[\"ndec\"] ? this.state.selectedRecord[\"ndec\"] : 0\n      };\n      let date;\n      let time;\n      scheduleData[\"schedulemaster\"][\"sscheduletype\"] = this.state.selectedRecord[\"nschedulertypecode\"] ? this.state.selectedRecord[\"nschedulertypecode\"].value === 1 ? 'O' : this.state.selectedRecord[\"ntyperecurringcode\"].value === 1 ? 'D' : this.state.selectedRecord[\"ntyperecurringcode\"].value === 2 ? 'W' : 'M' : 'O';\n\n      if (scheduleData[\"schedulemaster\"][\"dstartdate\"] !== undefined && scheduleData[\"schedulemaster\"][\"dstartdate\"] !== null && scheduleData[\"schedulemaster\"][\"dstartdate\"] !== \"\") {\n        //scheduleData[\"schedulemaster\"][\"dstartdate\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dstartdate\"]);\n        scheduleData[\"schedulemaster\"][\"dstartdate\"] = formatInputDate(this.state.selectedRecord[\"sstartdate\"]);\n      }\n\n      if (scheduleData[\"schedulemaster\"][\"denddate\"] !== undefined && scheduleData[\"schedulemaster\"][\"denddate\"] !== null && scheduleData[\"schedulemaster\"][\"denddate\"] !== \"\") {\n        //scheduleData[\"schedulemaster\"][\"denddate\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"denddate\"]);\n        scheduleData[\"schedulemaster\"][\"denddate\"] = formatInputDate(this.state.selectedRecord[\"senddate\"]);\n      } else {\n        scheduleData[\"schedulemaster\"][\"denddate\"] = scheduleData[\"schedulemaster\"][\"dstartdate\"];\n      }\n\n      if (scheduleData[\"schedulemaster\"][\"dstarttime\"] !== undefined && scheduleData[\"schedulemaster\"][\"dstarttime\"] !== null && scheduleData[\"schedulemaster\"][\"dstarttime\"] !== \"\") {\n        //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dstarttime\"]);\n        date = formatInputDate(this.state.selectedRecord[\"sstartdate\"]);\n        date = date.substring(0, 10);\n        time = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\n        time = time.substring(19, 11);\n        date = date + \"T\" + time + \"Z\"; //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\n\n        scheduleData[\"schedulemaster\"][\"dstarttime\"] = date; //formatInputDate(date);\n      }\n\n      if (scheduleData[\"schedulemaster\"][\"dendtime\"] !== undefined && scheduleData[\"schedulemaster\"][\"dendtime\"] !== null && scheduleData[\"schedulemaster\"][\"dendtime\"] !== \"\") {\n        //scheduleData[\"schedulemaster\"][\"dendtime\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dendtime\"]);\n        //scheduleData[\"schedulemaster\"][\"dendtime\"] = formatInputDate(this.state.selectedRecord[\"sendtime\"]);\n        date = formatInputDate(this.state.selectedRecord[\"senddate\"]);\n        date = date.substring(0, 10);\n        time = formatInputDate(this.state.selectedRecord[\"sendtime\"]);\n        time = time.substring(19, 11);\n        date = date + \"T\" + time + \"Z\"; //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\n\n        scheduleData[\"schedulemaster\"][\"dendtime\"] = date;\n      } else {\n        scheduleData[\"schedulemaster\"][\"dendtime\"] = scheduleData[\"schedulemaster\"][\"dstarttime\"];\n      }\n\n      if (scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== undefined && scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== null && scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== \"\" && scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== \"null \") {\n        let shour;\n\n        if (scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== \"00:00\") {\n          shour = formatInputDate(scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"]); //scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] =shour.substring(shour.indexOf('T'),5);\n\n          scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] = shour.substring(16, 11);\n        }\n      }\n\n      scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] = \"00:00\";\n      scheduleData[\"schedulemaster\"][\"ntzstartdatetimezone\"] = this.state.selectedRecord[\"ntzstartdatetimezone\"] ? this.state.selectedRecord[\"ntzstartdatetimezone\"].value || this.props.Login.userInfo.ntimezonecode : this.props.Login.userInfo.ntimezonecode;\n      scheduleData[\"schedulemaster\"][\"ntzenddatetimezone\"] = this.state.selectedRecord[\"ntzenddatetimezone\"] ? this.state.selectedRecord[\"ntzenddatetimezone\"].value || this.props.Login.userInfo.ntimezonecode : this.props.Login.userInfo.ntimezonecode;\n      scheduleData[\"schedulemaster\"][\"ntzstarttimetimezone\"] = this.state.selectedRecord[\"ntzstarttimetimezone\"] ? this.state.selectedRecord[\"ntzstarttimetimezone\"].value || this.props.Login.userInfo.ntimezonecode : this.props.Login.userInfo.ntimezonecode;\n      scheduleData[\"schedulemaster\"][\"ntzendtimetimezone\"] = this.state.selectedRecord[\"ntzendtimetimezone\"] ? this.state.selectedRecord[\"ntzendtimetimezone\"].value || this.props.Login.userInfo.ntimezonecode : this.props.Login.userInfo.ntimezonecode; //         scheduleData[\"schedulemaster\"][\"stzstartdatetimezone\"] = this.state.selectedRecord[\n      //     \"stzstartdatetimezone\"\n      //   ]\n      //     ? this.state.selectedRecord[\"stzstartdatetimezone\"].value ||\n      //     this.props.Login.userInfo.ntimezonecode\n      //     : this.props.Login.userInfo.ntimezonecode;\n      //     scheduleData[\"schedulemaster\"][\"stzenddatetimezone\"] = this.state.selectedRecord[\n      //         \"stzenddatetimezone\"\n      //       ]\n      //         ? this.state.selectedRecord[\"stzenddatetimezone\"].value ||\n      //         this.props.Login.userInfo.ntimezonecode\n      //         : this.props.Login.userInfo.ntimezonecode;\n      //         scheduleData[\"schedulemaster\"][\"stzstarttimetimezone\"] = this.state.selectedRecord[\n      //             \"stzstarttimetimezone\"\n      //           ]\n      //             ? this.state.selectedRecord[\"stzstarttimetimezone\"].value ||\n      //             this.props.Login.userInfo.ntimezonecode\n      //             : this.props.Login.userInfo.ntimezonecode;\n      //             scheduleData[\"schedulemaster\"][\"stzendtimetimezone\"] = this.state.selectedRecord[\n      //                 \"stzendtimetimezone\"\n      //               ]\n      //                 ? this.state.selectedRecord[\"stzendtimetimezone\"].value ||\n      //                 this.props.Login.userInfo.ntimezonecode\n      //                 : this.props.Login.userInfo.ntimezonecode;\n      // const controlMaster = [{ncontrolcode:517, scontrolname:'UserImage', ssubfolder:\"users\"},\n      //                         {ncontrolcode:518, scontrolname:'SignImage', ssubfolder:\"\"}]\n\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Scheduler\",\n        inputData: {\n          scheduleData,\n          userinfo: this.props.Login.userInfo\n        },\n        //formData: formData,\n        //isFileupload: true,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.deleteUserFile = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.deleteScheduler = (methodUrl, selectedScheduler, operation, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.DRAFT) {\n        {\n          const postParam = {\n            inputListName: \"Scheduler\",\n            selectedObject: \"SelectedScheduler\",\n            primaryKeyField: \"nschedulecde\",\n            primaryKeyValue: selectedScheduler.nschedulecode,\n            fetchUrl: \"scheduler/getScheduler\",\n            fecthInputObject: {\n              userinfo: this.props.Login.userInfo\n            }\n          };\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl,\n            postParam,\n            inputData: {\n              \"userinfo\": this.props.Login.userInfo,\n              \"scheduler\": selectedScheduler\n            },\n            operation,\n            isClearSearch: this.props.Login.isClearSearch\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openModal: true,\n                screenName: \"IDS_SCHEDULER\",\n                operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          }\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      }\n    };\n\n    this.onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.DRAFT) {\n        const approveId = this.state.controlMap.has(\"ApproveScheduler\") && this.state.controlMap.get(\"ApproveScheduler\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"scheduler\"] = {\n          \"nschedulecode\": this.props.Login.masterData.SelectedScheduler.nschedulecode ? this.props.Login.masterData.SelectedScheduler.nschedulecode : \"\"\n        };\n        inputData[\"scheduler\"] = this.props.Login.masterData.SelectedScheduler;\n        postParam = {\n          inputListName: \"Scheduler\",\n          selectedObject: \"SelectedScheduler\",\n          primaryKeyField: \"nschedulecode\"\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Scheduler\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        //inputData: { \"userinfo\": this.props.Login.userInfo, sscheduletype: this.state.nfilterScheduleType ? this.state.nfilterScheduleType.label : null },\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo,\n          sscheduletype: this.props.Login.masterData.nfilterScheduleType ? this.props.Login.masterData.nfilterScheduleType.label : null\n        },\n        classUrl: \"scheduler\",\n        methodUrl: \"Scheduler\",\n        displayName: \"IDS_SCHEDULER\",\n        userInfo: this.props.Login.userInfo,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedScheduler: undefined,\n      screenName: undefined,\n      userLogged: true,\n      dataState: {\n        skip: 0,\n        take: 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      isClearSearch: false,\n      comboComponents: [],\n      withoutCombocomponent: [],\n      childColumnList: [],\n      columnList: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.schedulerFieldList = ['sschedulename', 'sscheduletype', 'stempscheduleType', 'stransstatus', 'sremarks', 'dstartdate', 'dstarttime', 'noccurencenooftimes', 'soccurencehourwiseinterval', 'noccurencedaywiseinterval', 'sstartdate', 'denddate', 'dendtime', 'nmonthyweek', 'nexactday', 'nmonthlyoccurrencetype', 'njan', 'nfeb', 'nmar', 'napr', 'nmay', 'njun', 'njul', 'naug', 'nsep', 'noct', 'nnov', 'ndec', 'nsunday', 'nmonday', 'ntuesday', 'nwednesday', 'nthursday', 'nfriday', 'nsaturday', 'sstarttime', 'senddate', 'sendtime'];\n    this.searchFieldList = ['sschedulename', 'sscheduletype', 'stempscheduleType', 'stransstatus', 'sremarks', 'dstartdate', 'dstarttime', 'nsitecode', 'nstatus', 'noccurencenooftimes', 'soccurencehourwiseinterval', 'noccurencedaywiseinterval', 'sstartdate', 'denddate', 'dendtime', 'nmonthyweek', 'nexactday', 'nmonthlyoccurrencetype', 'njan', 'nfeb', 'nmar', 'napr', 'nmay', 'njun', 'njul', 'naug', 'nsep', 'noct', 'nnov', 'ndec', 'nsunday', 'nmonday', 'ntuesday', 'nwednesday', 'nthursday', 'nfriday', 'nsaturday', 'sstarttime', 'senddate', 'sendtime'];\n    this.columnList = [{\n      idsName: \"IDS_SCHEDULEPRODUCT\",\n      dataField: \"sproduct\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_SAMPLINGPOINT\",\n      dataField: \"ssamplingpoint\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_SCHEDULEROCCURENCEDATE\",\n      dataField: \"sscheduleoccurencedate\",\n      width: \"150px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    //let userStatusCSS = \"outline-success\"//\"outline-secondary\";\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.APPROVED) {\n      userStatusCSS = \"outline-success\";\n    }\n\n    let activeIconCSS = \"fa fa-check\";\n    let sweek = \"\";\n    let smonth = \"\";\n    const addId = this.state.controlMap.has(\"AddScheduler\") && this.state.controlMap.get(\"AddScheduler\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditScheduler\") && this.state.controlMap.get(\"EditScheduler\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteScheduler\") && this.state.controlMap.get(\"DeleteScheduler\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveScheduler\") && this.state.controlMap.get(\"ApproveScheduler\").ncontrolcode;\n    const preregId = this.state.controlMap.has(\"PreregScheduler\") && this.state.controlMap.get(\"PreregScheduler\").ncontrolcode;\n    const testTabMap = new Map();\n    const filterParam = {\n      inputListName: \"Scheduler\",\n      selectedObject: \"SelectedScheduler\",\n      primaryKeyField: \"nschedulecode\",\n      fetchUrl: \"scheduler/getScheduler\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      sscheduletype: this.state.nfilterScheduleType ? this.state.nfilterScheduleType.label : null\n    };\n    const addParam = {\n      screenName: \"IDS_SCHEDULER\",\n      operation: \"create\",\n      primaryKeyName: \"nschedulecode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: addId,\n      nfilterScheduleType: this.state.nfilterScheduleType\n    };\n    const editParam = {\n      screenName: \"IDS_SCHEDULER\",\n      operation: \"update\",\n      primaryKeyName: \"nschedulecode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"Scheduler\",\n      selectedObject: \"SelectedScheduler\"\n    };\n    const approveParam = {\n      screenName: \"IDS_SCHEDULER\",\n      operation: \"update\",\n      primaryKeyName: \"nschedulecode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: approveId,\n      inputListName: \"Scheduler\",\n      selectedObject: \"SelectedScheduler\"\n    };\n    const userImgPath = this.props.Login.settings && this.props.Login.settings[6] + this.props.Login.masterData.UserImagePath;\n    const signImgPath = this.props.Login.settings && this.props.Login.settings[6] + this.props.Login.masterData.SignImagePath;\n    const mandatoryFields = [{\n      \"idsName\": \"IDS_SCHEDULERNAME\",\n      \"dataField\": \"sschedulename\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, //{ \"idsName\": \"IDS_SCHEDULERTYPE\", \"dataField\": \"sscheduletype\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n    //{ \"idsName\": \"IDS_OCCURRENCE\", \"dataField\": \"noccurencenooftimes\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n    //{ \"idsName\": \"IDS_OCCURRENCEDAYWISE\", \"dataField\": \"noccurencedaywiseinterval\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n    //{ \"idsName\": \"IDS_OCCURRENCEHOURWISE\", \"dataField\": \"soccurencehourwiseinterval\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n    //{ \"idsName\": \"IDS_MONTHLYOCCURRENCETYPE\", \"dataField\": \"nmonthlyoccurrencetype\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    {\n      \"idsName\": \"IDS_STARTDATE\",\n      \"dataField\": \"dstartdate\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STARTTIME\",\n      \"dataField\": \"dstarttime\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.breadCrumbData = [{\n      \"label\": \"IDS_SCHEDULERTYPE\",\n      \"value\": this.props.Login.masterData.nfilterScheduleType ? this.props.Login.masterData.nfilterScheduleType.label : \"One Time\"\n    }]; //const breadCrumbData = this.state.filterData || [];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    //breadCrumbData.length > 0 ?\n    React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    })) // : \"\"\n    , /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_SCHDULER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Scheduler,\n      getMasterDetail: scheduler => this.props.getSchedulerDetail(scheduler, this.props.Login.userInfo, this.props.Login.masterData, this.state.nfilterScheduleType.label),\n      selectedMaster: this.props.Login.masterData.SelectedScheduler,\n      primaryKeyField: \"nschedulecode\",\n      mainField: \"sschedulename\",\n      firstField: \"stempscheduleType\" //secondField=\"nstatus\"\n      ,\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getSchedulerComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_TESTFILTER\": /*#__PURE__*/React.createElement(ScheduleTypeFilter, {\n          filterScheduleType: this.state.filterScheduleType || [],\n          nfilterScheduleType: this.state.nfilterScheduleType || {},\n          onComboChange: this.onComboChangeevent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 41\n          }\n        })\n      }] // actionIcons={\n      //     [\n      //         {\n      //             title: this.props.intl.formatMessage({ id: \"IDS_PREREG\" }),\n      //             controlname: \"faPencilAlt\",\n      //             objectName: \"mastertocreate\",\n      //             //hidden: this.state.userRoleControlRights.indexOf(this.state.editSampleId) === -1,\n      //             onClick: this.getRegistrationComboService,\n      //             inputData: {\n      //                 primaryKeyName: \"nschedulecode\",\n      //                 operation: \"create\",\n      //                 masterData: this.props.Login.masterData,\n      //                 userInfo: this.props.Login.userInfo,\n      //                 createRegParam: {\n      //                     ncontrolCode: preregId\n      //                 }\n      //             },\n      //         }\n      //     ]\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.Scheduler && this.props.Login.masterData.Scheduler.length > 0 && this.props.Login.masterData.SelectedScheduler ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedScheduler.sschedulename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.SelectedScheduler.stransstatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editScheduler\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.getSchedulerComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteScheduler\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"ApproveScheduler\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.onApproveClick(\"Scheduler\", \"approve\", \"nschedulecode\", this.props.Login.masterData.SelectedScheduler.nschedulecode, approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SCHEDULERTYPE\",\n      message: \"Scheduler Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.SelectedScheduler.sscheduletype === \"O\" ? \"One Time\" : this.props.Login.masterData.SelectedScheduler.sscheduletype === \"D\" ? \"Daily\" : this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ? \"Weekly\" : \"Monthly\"))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_STARTDATEANDTIME\",\n      message: \"Start Date & Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.sstartdate !== undefined ? this.props.Login.masterData.SelectedScheduler.sstartdate.substring(0, 10) : \"\", \"  \", this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.sstarttime !== undefined ? this.props.Login.masterData.SelectedScheduler.sstarttime.substring(16, 11) : \"\"))), this.props.Login.masterData.SelectedScheduler.sscheduletype !== \"O\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ENDDATEANDTIME\",\n      message: \"End Date & Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.senddate !== undefined ? this.props.Login.masterData.SelectedScheduler.senddate.substring(0, 10) : \"\", \" \", this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.sendtime !== undefined ? this.props.Login.masterData.SelectedScheduler.sendtime.substring(16, 11) : \"\"))) : \"\", this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_WEEKLYSCHEDULE\",\n      message: \"Weekly Schedule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedScheduler.nsunday !== 0 ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_SUNDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nmonday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_MONDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_MONDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.ntuesday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_TUESDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_TUESDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nwednesday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_WEDNESDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_WEDNESDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nthursday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_THURSDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_THURSDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nfriday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_FRIDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_FRIDAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nsaturday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({\n      id: \"IDS_SATURDAY\"\n    }) : sweek = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_SATURDAY\"\n    }) : \"\"))) : \"\", this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MONTHLYOCCURRENCETYPE\",\n      message: \"Monthly Occurrence Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ? this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 1 ? \"Exact Day\" : this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 2 ? \"1st Week\" : this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 3 ? \"2nd Week\" : this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 4 ? \"3rd Week\" : \"4th week\" : \"-\"))) : \"\", this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" && this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 1 ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXACTDAY\",\n      message: \"Exactday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedScheduler.nexactday !== 0 ? this.props.Login.masterData.SelectedScheduler.nexactday : \"-\"))) : \"\", this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MONTHLYSCHEDULE\",\n      message: \"Monthly Schedule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedScheduler.njan !== 0 ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_JANUARY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nfeb !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_FEBRUARY\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_FEBRUARY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nmar !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_MARCH\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_MARCH\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.napr !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_APRIL\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_APRIL\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nmay !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_MAY\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_MAY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.njun !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_JUNE\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_JUNE\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.njul !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_JULY\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_JULY\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.naug !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_AUGUST\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_AUGUST\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nsep !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_SEPTEMBER\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_SEPTEMBER\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.noct !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_OCTOBER\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_OCTOBER\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.nnov !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_NOVEMBER\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_NOVEMBER\"\n    }) : \"\", this.props.Login.masterData.SelectedScheduler.ndec !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({\n      id: \"IDS_DECEMBER\"\n    }) : smonth = \", \" + this.props.intl.formatMessage({\n      id: \"IDS_DECEMBER\"\n    }) : \"\"))) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.sremarks !== undefined ? this.props.Login.masterData.SelectedScheduler.sremarks : \"-\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 53\n      }\n    }))))) : \"\"))))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PreRegisterSlideOutModal, {\n      postParamList: this.postParamList,\n      PrevoiusLoginData: this.PrevoiusLoginData,\n      closeModal: this.closeModal,\n      operation: \"create\",\n      screenName: \"IDS_REGISTRATION\",\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      updateStore: this.props.updateStore,\n      comboComponents: this.state.comboComponents,\n      withoutCombocomponent: this.state.withoutCombocomponent,\n      userRoleControlRights: this.state.userRoleControlRights //fromDate={this.fromDate}\n      // toDate={this.toDate}\n      //  specBasedComponent={this.state.specBasedComponent}\n      ,\n      mandatoryFields: [{\n        \"idsName\": \"IDS_PRODUCTCATEGORY\",\n        \"dataField\": \"nproductcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PRODUCTNAME\",\n        \"dataField\": \"sproductname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(AddScheduler, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        handleDateChange: this.handleDateChange,\n        schedulerTypeList: this.props.Login.schedulerTypeList || [],\n        recurringList: this.props.Login.recurringList || [],\n        monthlyTypeList: this.props.Login.monthlyTypeList || [],\n        selectedScheduler: this.props.Login.masterData.SelectedScheduler || {},\n        operation: this.props.Login.operation,\n        userLogged: this.props.Login.userLogged,\n        inputParam: this.props.Login.inputParam,\n        actionType: this.state.actionType,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let isComponentUpdated = false;\n\n    if (this.props.Login.columnList !== previousProps.Login.columnList) {\n      isComponentUpdated = true; // this.setState({\n      //     columnList: this.props.Login.columnList,\n      //     childColumnList: this.props.Login.childColumnList,\n      //     withoutCombocomponent: this.props.Login.withoutCombocomponent,\n      //     comboComponents: this.props.Login.comboComponents\n      // });\n    } // if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\n    //     this.setState({\n    //         regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\n    //         regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\n    //         regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\n    //     });\n    // }\n\n\n    if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\n      isComponentUpdated = true; //this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\n    }\n\n    if (this.props.Login !== previousProps.Login) {\n      this.PrevoiusLoginData = previousProps;\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      isComponentUpdated = true; //this.setState({ selectedRecord: this.props.Login.selectedRecord });\n    }\n\n    let userRoleControlRights;\n    let controlMap;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode); //isComponentUpdated = true;\n\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n\n    let nfilterScheduleType = this.state.nfilterScheduleType || {};\n    let filterScheduleType = this.state.filterScheduleType || {};\n\n    if (this.props.Login.masterData.filterScheduleType !== previousProps.Login.masterData.filterScheduleType) {\n      const scheduleTypeMap = constructOptionList(this.props.Login.masterData.filterScheduleType || [], \"nschedulertypecode\", \"sschedulertypename\", 'nschedulertypecode', 'ascending', false);\n      filterScheduleType = scheduleTypeMap.get(\"OptionList\");\n\n      if (this.state.nfilterScheduleType === null || this.state.nfilterScheduleType === undefined) {\n        if (scheduleTypeMap.get(\"DefaultValue\")) {\n          nfilterScheduleType = scheduleTypeMap.get(\"DefaultValue\");\n        } else if (filterScheduleType && filterScheduleType.length > 0) {\n          nfilterScheduleType = filterScheduleType[0];\n        }\n      }\n\n      isComponentUpdated = true;\n    } else if (this.props.Login.masterData.nfilterScheduleType !== previousProps.Login.masterData.nfilterScheduleType) {\n      nfilterScheduleType = this.props.Login.masterData.nfilterScheduleType;\n      isComponentUpdated = true;\n    }\n\n    let filterData;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      filterData = this.generateBreadCrumData();\n\n      if (this.props.Login.masterData.SelectedScheduler !== undefined && this.props.Login.masterData.SelectedScheduler !== null) {\n        if (this.props.Login.masterData.SelectedScheduler.sscheduletype === \"O\") {\n          nfilterScheduleType = filterScheduleType[0];\n        } else {\n          if (filterScheduleType.length > 1) {\n            nfilterScheduleType = filterScheduleType[1];\n          } else {\n            nfilterScheduleType = filterScheduleType[0];\n          }\n        } //isComponentUpdated = true;\n\n\n        this.setState({\n          filterData,\n          nfilterScheduleType\n        });\n      } else {\n        this.setState({\n          filterData\n        }); //isComponentUpdated = true;\n      }\n    }\n\n    if (isComponentUpdated) {\n      this.setState({\n        nfilterScheduleType,\n        filterScheduleType,\n        selectedRecord: this.props.Login.selectedRecord,\n        showSaveContinue: this.props.Login.showSaveContinue,\n        columnList: this.props.Login.columnList,\n        childColumnList: this.props.Login.childColumnList,\n        withoutCombocomponent: this.props.Login.withoutCombocomponent,\n        comboComponents: this.props.Login.comboComponents\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData) {\n      breadCrumbData.push({\n        \"label\": \"IDS_SCHEDULERTYPE\",\n        \"value\": this.props.Login.masterData.SelectedScheduler ? this.props.Login.masterData.SelectedScheduler.stempscheduleType !== \"One Time\" ? \"Recurring\" : \"One Time\" : \"\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getSchedulerDetail,\n  getSchedulerComboService,\n  changeScheduleTypeFilter,\n  getUserMultiRoleComboDataService,\n  getUserMultiDeputyComboDataService,\n  getUserSiteDetail,\n  getUserSiteComboService,\n  filterColumnData,\n  getPreviewTemplate\n})(injectIntl(Scheduler));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/Scheduler/Scheduler.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Image","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faUserTimes","faUserPlus","callService","crudMaster","validateEsignCredential","updateStore","getSchedulerDetail","getSchedulerComboService","changeScheduleTypeFilter","getUserMultiRoleComboDataService","getUserMultiDeputyComboDataService","getUserSiteDetail","getUserSiteComboService","filterColumnData","getPreviewTemplate","DEFAULT_RETURN","showEsign","getControlMap","constructOptionList","validatePhoneNumber","formatInputDate","create_UUID","validateEmail","validateLoginId","formatDate","onDropAttachFileList","deleteAttachmentDropZone","comboChild","transactionStatus","ListMaster","SlideOutModal","BreadcrumbComponent","Affix","process","DataGrid","CustomTabs","ReadOnlyText","ContentPanel","AddScheduler","Esign","ConfirmMessage","ScheduleTypeFilter","PortalModal","PreRegisterSlideOutModal","mapStateToProps","state","Login","Scheduler","Component","constructor","props","getRegistrationComboService","preregId","masterData","SelectedScheduler","ntransactionstatus","APPROVED","ndesigntemplatemappingcodefilter","ndesigntemplatemappingcode","data","withoutCombocomponent","Layout","schedulerTemplate","jsondata","undefined","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","comboComponents","childColumnList","columnList","val","mapOfFilterRegData","nsampletypecode","nneedsubsample","NO","userInfo","selectedRecord","info","dataStateChange","event","setState","dataState","testRETabDetail","testTabMap","Map","set","userRoleControlRights","controlMap","SchedulerTransaction","inputParam","methodUrl","handleExpandChange","onFilterSubmit","nfilterScheduleType","value","inputData","nscheduletypecode","userinfo","classUrl","filterScheduleType","warn","intl","formatMessage","id","ConfirmDelete","deleteId","confirmMessage","confirm","deleteScheduler","closeModal","loadEsign","openModal","openPortal","operation","updateInfo","typeName","selectedId","onComboChange","comboData","fieldName","onComboChangeevent","searchRef","current","onNumericInputOnChange","name","onInputOnChange","target","type","checked","ACTIVE","DEACTIVE","UNLOCK","LOCK","ALL","handleDateChange","dateName","dateValue","sdatename","onSaveClick","saveType","formRef","scheduleData","postParam","nmastersitecode","schedulerFieldList","item","date","time","substring","shour","ntimezonecode","isClearSearch","nformcode","ncontrolCode","screenData","deleteUserFile","file","actionType","selectedScheduler","DRAFT","inputListName","selectedObject","primaryKeyField","primaryKeyValue","nschedulecode","fetchUrl","fecthInputObject","screenName","onApproveClick","primaryKeyName","approveId","has","get","ncontrolcode","esignNeeded","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","sscheduletype","displayName","masterStatus","error","userLogged","skip","take","createRef","searchFieldList","idsName","dataField","width","getDerivedStateFromProps","render","userStatusCSS","activeIconCSS","sweek","smonth","addId","editId","filterParam","addParam","editParam","approveParam","userImgPath","settings","UserImagePath","signImgPath","SignImagePath","mandatoryFields","breadCrumbData","searchedData","scheduler","openFilter","closeFilter","showFilter","length","sschedulename","stransstatus","indexOf","sstartdate","sstarttime","senddate","sendtime","nsunday","nmonday","trim","ntuesday","nwednesday","nthursday","nfriday","nsaturday","nmonthlyoccurrencetype","nexactday","njan","nfeb","nmar","napr","nmay","njun","njul","naug","nsep","noct","nnov","ndec","sremarks","postParamList","PrevoiusLoginData","schedulerTypeList","recurringList","monthlyTypeList","componentDidUpdate","previousProps","isComponentUpdated","showSaveContinue","Object","values","scheduleTypeMap","filterData","generateBreadCrumData","stempscheduleType","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Image } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserTimes, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSchedulerDetail,\r\n    getSchedulerComboService, changeScheduleTypeFilter, getUserMultiRoleComboDataService, getUserMultiDeputyComboDataService,\r\n    getUserSiteDetail, getUserSiteComboService, filterColumnData, getPreviewTemplate\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, constructOptionList, validatePhoneNumber, formatInputDate, create_UUID, validateEmail, validateLoginId, formatDate, onDropAttachFileList, deleteAttachmentDropZone, comboChild } from '../../components/CommonScript';\r\n//import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n// import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\n\r\nimport AddScheduler from './AddScheduler';\r\n\r\nimport Esign from '../audittrail/Esign';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ScheduleTypeFilter from './ScheduleTypeFilter';\r\nimport PortalModal from '../../PortalModal';\r\nimport PreRegisterSlideOutModal from '../registration/PreRegisterSlideOutModal';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Scheduler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            selectedScheduler: undefined,\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            dataState: { skip: 0, take: 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            isClearSearch: false,\r\n            comboComponents: [],\r\n            withoutCombocomponent: [],\r\n            childColumnList: [],\r\n            columnList: [],\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.schedulerFieldList = ['sschedulename', 'sscheduletype', 'stempscheduleType', 'stransstatus', 'sremarks', 'dstartdate',\r\n            'dstarttime', 'noccurencenooftimes', 'soccurencehourwiseinterval', 'noccurencedaywiseinterval', 'sstartdate',\r\n            'denddate', 'dendtime', 'nmonthyweek', 'nexactday', 'nmonthlyoccurrencetype', 'njan', 'nfeb', 'nmar', 'napr', 'nmay', 'njun', 'njul',\r\n            'naug', 'nsep', 'noct', 'nnov', 'ndec', 'nsunday', 'nmonday', 'ntuesday', 'nwednesday', 'nthursday', 'nfriday', 'nsaturday', 'sstarttime', 'senddate', 'sendtime'];\r\n\r\n        this.searchFieldList = ['sschedulename', 'sscheduletype', 'stempscheduleType', 'stransstatus', 'sremarks', 'dstartdate',\r\n            'dstarttime', 'nsitecode', 'nstatus', 'noccurencenooftimes', 'soccurencehourwiseinterval', 'noccurencedaywiseinterval', 'sstartdate',\r\n            'denddate', 'dendtime', 'nmonthyweek', 'nexactday', 'nmonthlyoccurrencetype', 'njan', 'nfeb', 'nmar', 'napr', 'nmay', 'njun', 'njul',\r\n            'naug', 'nsep', 'noct', 'nnov', 'ndec', 'nsunday', 'nmonday', 'ntuesday', 'nwednesday', 'nthursday', 'nfriday', 'nsaturday', 'sstarttime', 'senddate', 'sendtime'];\r\n\r\n        this.columnList = [\r\n            { idsName: \"IDS_SCHEDULEPRODUCT\", dataField: \"sproduct\", width: \"250px\" },\r\n            { idsName: \"IDS_SAMPLINGPOINT\", dataField: \"ssamplingpoint\", width: \"150px\" },\r\n            { idsName: \"IDS_SCHEDULEROCCURENCEDATE\", dataField: \"sscheduleoccurencedate\", width: \"150px\" }\r\n\r\n\r\n        ];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getRegistrationComboService = (preregId) => {\r\n        if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.APPROVED) {\r\n\r\n\r\n            const ndesigntemplatemappingcodefilter = this.props.Login.masterData.ndesigntemplatemappingcode &&\r\n                this.props.Login.masterData.ndesigntemplatemappingcode\r\n            if (ndesigntemplatemappingcodefilter === this.props.Login.masterData.ndesigntemplatemappingcode) {\r\n                let data = [];\r\n                const withoutCombocomponent = []\r\n                const Layout = this.props.Login.masterData.schedulerTemplate\r\n                    && this.props.Login.masterData.schedulerTemplate.jsondata\r\n                if (Layout !== undefined) {\r\n                    Layout.map(row => {\r\n                        return row.children.map(column => {\r\n                            return column.children.map(component => {\r\n                                return component.hasOwnProperty(\"children\") ?\r\n                                    component.children.map(componentrow => {\r\n                                        if (componentrow.inputtype === \"combo\") {\r\n                                            data.push(componentrow)\r\n                                        } else {\r\n                                            withoutCombocomponent.push(componentrow)\r\n                                        }\r\n                                        return null;\r\n                                    })\r\n                                    : component.inputtype === \"combo\" ?\r\n                                        data.push(component) : withoutCombocomponent.push(component)\r\n                            })\r\n                        })\r\n\r\n                    })\r\n                    const comboComponents = data\r\n                    let childColumnList = {};\r\n                    data.map(columnList => {\r\n                        const val = comboChild(data, columnList, childColumnList, true);\r\n                        data = val.data;\r\n                        childColumnList = val.childColumnList\r\n                        return null;\r\n                    })\r\n                    const mapOfFilterRegData = {\r\n                        nsampletypecode: 1, //parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)\r\n                        nneedsubsample: transactionStatus.NO\r\n                    }\r\n                    this.props.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, preregId,\r\n                        data, this.state.selectedRecord, childColumnList,\r\n                        comboComponents, withoutCombocomponent, true, false,\r\n                        mapOfFilterRegData, false, \"create\", 'scheduler')\r\n                } else {\r\n                    toast.info(\"Configure the schedule template for this scheduler\")\r\n                }\r\n            } else {\r\n                toast.info(\"select the approved design template\")\r\n            }\r\n        } else {\r\n            toast.info(\"select the approved schedule\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //let userStatusCSS = \"outline-success\"//\"outline-secondary\";\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.SelectedScheduler && this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.APPROVED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        let activeIconCSS = \"fa fa-check\"\r\n        let sweek = \"\";\r\n        let smonth = \"\";\r\n\r\n        const addId = this.state.controlMap.has(\"AddScheduler\") && this.state.controlMap.get(\"AddScheduler\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditScheduler\") && this.state.controlMap.get(\"EditScheduler\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteScheduler\") && this.state.controlMap.get(\"DeleteScheduler\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveScheduler\") && this.state.controlMap.get(\"ApproveScheduler\").ncontrolcode;\r\n        const preregId = this.state.controlMap.has(\"PreregScheduler\") && this.state.controlMap.get(\"PreregScheduler\").ncontrolcode;\r\n\r\n        const testTabMap = new Map();\r\n        const filterParam = {\r\n            inputListName: \"Scheduler\", selectedObject: \"SelectedScheduler\", primaryKeyField: \"nschedulecode\",\r\n            fetchUrl: \"scheduler/getScheduler\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList,\r\n            sscheduletype: this.state.nfilterScheduleType ? this.state.nfilterScheduleType.label : null\r\n        };\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_SCHEDULER\", operation: \"create\", primaryKeyName: \"nschedulecode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: addId,\r\n            nfilterScheduleType: this.state.nfilterScheduleType\r\n        }\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_SCHEDULER\", operation: \"update\", primaryKeyName: \"nschedulecode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, inputListName: \"Scheduler\", selectedObject: \"SelectedScheduler\"\r\n        };\r\n\r\n        const approveParam = {\r\n            screenName: \"IDS_SCHEDULER\", operation: \"update\", primaryKeyName: \"nschedulecode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: approveId, inputListName: \"Scheduler\", selectedObject: \"SelectedScheduler\"\r\n        };\r\n\r\n\r\n        const userImgPath = this.props.Login.settings && this.props.Login.settings[6] + this.props.Login.masterData.UserImagePath;\r\n        const signImgPath = this.props.Login.settings && this.props.Login.settings[6] + this.props.Login.masterData.SignImagePath;\r\n\r\n        const mandatoryFields = [{ \"idsName\": \"IDS_SCHEDULERNAME\", \"dataField\": \"sschedulename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        //{ \"idsName\": \"IDS_SCHEDULERTYPE\", \"dataField\": \"sscheduletype\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_OCCURRENCE\", \"dataField\": \"noccurencenooftimes\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        //{ \"idsName\": \"IDS_OCCURRENCEDAYWISE\", \"dataField\": \"noccurencedaywiseinterval\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        //{ \"idsName\": \"IDS_OCCURRENCEHOURWISE\", \"dataField\": \"soccurencehourwiseinterval\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        //{ \"idsName\": \"IDS_MONTHLYOCCURRENCETYPE\", \"dataField\": \"nmonthlyoccurrencetype\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_STARTDATE\", \"dataField\": \"dstartdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STARTTIME\", \"dataField\": \"dstarttime\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n        this.breadCrumbData = [\r\n            \r\n            {\r\n                \"label\": \"IDS_SCHEDULERTYPE\",\r\n                \"value\": this.props.Login.masterData.nfilterScheduleType ? this.props.Login.masterData.nfilterScheduleType.label : \"One Time\"\r\n            }\r\n        ];\r\n        //const breadCrumbData = this.state.filterData || [];\r\n        return (<>\r\n            {/* Start of get display*/}\r\n\r\n            <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\">\r\n                {//breadCrumbData.length > 0 ?\r\n                    <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={this.breadCrumbData } />\r\n                    </Affix>// : \"\"\r\n                }\r\n                <Row noGutters>\r\n                    <Col md={4}>\r\n                        {/* <Row noGutters>\r\n                            <Col md={12}> */}\r\n                        {/* <div className=\"list-fixed-wrap\"> */}\r\n                        <ListMaster\r\n                            screenName={this.props.intl.formatMessage({ id: \"IDS_SCHDULER\" })}\r\n                            masterData={this.props.Login.masterData}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Scheduler}\r\n                            getMasterDetail={(scheduler) => this.props.getSchedulerDetail(scheduler, this.props.Login.userInfo, this.props.Login.masterData, this.state.nfilterScheduleType.label)}\r\n                            selectedMaster={this.props.Login.masterData.SelectedScheduler}\r\n                            primaryKeyField=\"nschedulecode\"\r\n                            mainField=\"sschedulename\"\r\n                            firstField=\"stempscheduleType\"\r\n                            //secondField=\"nstatus\"\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            filterParam={filterParam}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            addId={addId}\r\n                            searchRef={this.searchRef}\r\n                            reloadData={this.reloadData}\r\n                            openModal={() => this.props.getSchedulerComboService(addParam)}\r\n                            isMultiSelecct={false}\r\n                            hidePaging={false}\r\n                            isClearSearch={this.props.Login.isClearSearch}\r\n                            openFilter={this.openFilter}\r\n                            closeFilter={this.closeFilter}\r\n                            onFilterSubmit={this.onFilterSubmit}\r\n                            showFilterIcon={true}\r\n                            showFilter={this.props.Login.showFilter}\r\n                            filterComponent={[\r\n                                {\r\n                                    \"IDS_TESTFILTER\":\r\n                                        <ScheduleTypeFilter\r\n                                            filterScheduleType={this.state.filterScheduleType || []}\r\n                                            nfilterScheduleType={this.state.nfilterScheduleType || {}}\r\n                                            onComboChange={this.onComboChangeevent}\r\n                                        />\r\n                                }\r\n                            ]}\r\n                        // actionIcons={\r\n                        //     [\r\n                        //         {\r\n                        //             title: this.props.intl.formatMessage({ id: \"IDS_PREREG\" }),\r\n                        //             controlname: \"faPencilAlt\",\r\n                        //             objectName: \"mastertocreate\",\r\n                        //             //hidden: this.state.userRoleControlRights.indexOf(this.state.editSampleId) === -1,\r\n                        //             onClick: this.getRegistrationComboService,\r\n                        //             inputData: {\r\n                        //                 primaryKeyName: \"nschedulecode\",\r\n                        //                 operation: \"create\",\r\n                        //                 masterData: this.props.Login.masterData,\r\n                        //                 userInfo: this.props.Login.userInfo,\r\n                        //                 createRegParam: {\r\n                        //                     ncontrolCode: preregId\r\n                        //                 }\r\n                        //             },\r\n                        //         }\r\n\r\n                        //     ]\r\n                        // }\r\n                        />\r\n                        {/* </div>\r\n                        </Col></Row> */}\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        {/* <Row>\r\n                            <Col md={12}> */}\r\n                        <ContentPanel className=\"panel-main-content\">\r\n                            <Card className=\"border-0\">\r\n                                {this.props.Login.masterData.Scheduler && this.props.Login.masterData.Scheduler.length > 0 && this.props.Login.masterData.SelectedScheduler ?\r\n                                    <>\r\n                                        <Card.Header>\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.SelectedScheduler.sschedulename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            {/* {activeIconCSS !== \"\" ? <i class=\"fas fa-check \"></i> : \"\"} */}\r\n                                                            {/* {this.props.Login.masterData.SelectedScheduler.nstatus === 1 ? \"DRAFT\": \"Approved\"} */}\r\n                                                            {this.props.Login.masterData.SelectedScheduler.stransstatus}\r\n                                                            {/*{activeIconCSS}  <FormattedMessage id= {this.props.Login.masterData.SelectedUser.sactivestatus}/> */}\r\n\r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <div className=\"d-inline\">\r\n                                                        {/* <Nav.Link name=\"preregScheduler\"\r\n                                                           hidden={this.state.userRoleControlRights.indexOf(preregId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_SCHEDULERPREREGISTER\" })}\r\n                                                           data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.getRegistrationComboService(preregId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faUserPlus} />\r\n                                                        </Nav.Link> */}\r\n                                                        <Nav.Link name=\"editScheduler\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.props.getSchedulerComboService(editParam)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Nav.Link name=\"deleteScheduler\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"ApproveScheduler\" hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                         //   data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.onApproveClick(\"Scheduler\", \"approve\", \"nschedulecode\", this.props.Login.masterData.SelectedScheduler.nschedulecode, approveId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n\r\n\r\n                                                    </div>\r\n                                                    {/* </Tooltip> */}\r\n                                                </div>\r\n\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Card.Text> */}\r\n\r\n                                            <Row>\r\n                                                <Col md={4}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_SCHEDULERTYPE\" message=\"Scheduler Type\" /></FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedScheduler.sscheduletype === \"O\" ? \"One Time\" :\r\n                                                            this.props.Login.masterData.SelectedScheduler.sscheduletype === \"D\" ? \"Daily\" :\r\n                                                                this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ? \"Weekly\" : \"Monthly\"}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                                <Col md={4}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_STARTDATEANDTIME\" message=\"Start Date & Time\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedScheduler &&\r\n                                                                this.props.Login.masterData.SelectedScheduler.sstartdate !== undefined ?\r\n                                                                this.props.Login.masterData.SelectedScheduler.sstartdate.substring(0, 10) : \"\"}\r\n                                                            {\"  \"}\r\n                                                            {this.props.Login.masterData.SelectedScheduler &&\r\n                                                                this.props.Login.masterData.SelectedScheduler.sstarttime !== undefined ?\r\n                                                                this.props.Login.masterData.SelectedScheduler.sstarttime.substring(16, 11) : \"\"}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n                                                {/* <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_STARTTIME\" message=\"Start Time\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedScheduler && \r\n                                                                this.props.Login.masterData.SelectedScheduler.sstarttime !== null ?\r\n                                                                this.props.Login.masterData.SelectedScheduler.sstarttime.substring(19,11):\"\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> */}\r\n                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype !== \"O\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_ENDDATEANDTIME\" message=\"End Date & Time\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler &&\r\n                                                                    this.props.Login.masterData.SelectedScheduler.senddate !== undefined ?\r\n                                                                    this.props.Login.masterData.SelectedScheduler.senddate.substring(0, 10) : \"\"}\r\n                                                                {\" \"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler &&\r\n                                                                    this.props.Login.masterData.SelectedScheduler.sendtime !== undefined ?\r\n                                                                    this.props.Login.masterData.SelectedScheduler.sendtime.substring(16, 11) : \"\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> : \"\"}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype !== \"O\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_ENDTIME\" message=\"End Time\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedScheduler && \r\n                                                                this.props.Login.masterData.SelectedScheduler.sendtime !== null ?\r\n                                                                this.props.Login.masterData.SelectedScheduler.sendtime.substring(19,11):\"\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> :\"\"} */}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"D\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_OCCURRENCE\" message=\"Occurrence\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.noccurencenooftimes!==0?\r\n                                                                this.props.Login.masterData.SelectedScheduler.noccurencenooftimes:\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"} */}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"D\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_OCCURRENCEDAYWISE\" message=\"Occurrence Day Wise\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.noccurencedaywiseinterval!==0?\r\n                                                                this.props.Login.masterData.SelectedScheduler.noccurencedaywiseinterval:\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"} */}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"D\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_OCCURRENCEHOURWISE\" message=\"Occurrence Hour Wise\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.soccurencehourwiseinterval!==\"null \"?\r\n                                                                this.props.Login.masterData.SelectedScheduler.soccurencehourwiseinterval:\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"} */}\r\n                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_WEEKLYSCHEDULE\" message=\"Weekly Schedule\" /></FormLabel>\r\n\r\n                                                            <ReadOnlyText>\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nsunday !== 0 ? sweek = this.props.intl.formatMessage({ id: \"IDS_SUNDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmonday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_MONDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_MONDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.ntuesday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_TUESDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_TUESDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nwednesday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_WEDNESDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_WEDNESDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nthursday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_THURSDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_THURSDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nfriday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_FRIDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_FRIDAY\" }) : \"\"}\r\n\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nsaturday !== 0 ? sweek.trim() == \"\" ? sweek = this.props.intl.formatMessage({ id: \"IDS_SATURDAY\" }) : sweek = \", \" + this.props.intl.formatMessage({ id: \"IDS_SATURDAY\" }) : \"\"}\r\n                                                                {/* {sweek} */}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> : \"\"}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MONDAY\" message=\"Monday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmonday !==0 ? \"Active\" : \"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TUESDAY\" message=\"Tuesday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.ntuesday !== 0? \"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_WEDNESDAY\" message=\"Wednesday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nwednesday !==0 ? \"Active\" :\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_THURSDAY\" message=\"Thursday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nthursday !==0 ? \"Active\": \"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_FRIDAY\" message=\"Friday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nfriday !==0 ? \"Active\" :\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"W\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_SATURDAY\" message=\"Saturday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nsaturday !==0 ? \"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"} */}\r\n                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MONTHLYOCCURRENCETYPE\" message=\"Monthly Occurrence Type\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                                    this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 1 ? \"Exact Day\" :\r\n                                                                        this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 2 ? \"1st Week\" :\r\n                                                                            this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 3 ? \"2nd Week\" :\r\n                                                                                this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 4 ? \"3rd Week\" : \"4th week\" : \"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> : \"\"}\r\n                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" &&\r\n                                                    this.props.Login.masterData.SelectedScheduler.nmonthlyoccurrencetype === 1 ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_EXACTDAY\" message=\"Exactday\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nexactday !== 0 ? this.props.Login.masterData.SelectedScheduler.nexactday : \"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> : \"\"}\r\n                                                {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MONTHLYSCHEDULE\" message=\"Monthly Schedule\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.njan !== 0 ? smonth = this.props.intl.formatMessage({ id: \"IDS_JANUARY\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nfeb !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_FEBRUARY\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_FEBRUARY\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmar !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_MARCH\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_MARCH\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.napr !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_APRIL\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_APRIL\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmay !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_MAY\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_MAY\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.njun !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_JUNE\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_JUNE\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.njul !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_JULY\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_JULY\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.naug !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_AUGUST\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_AUGUST\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nsep !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_SEPTEMBER\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_SEPTEMBER\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.noct !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_OCTOBER\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_OCTOBER\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nnov !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_NOVEMBER\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_NOVEMBER\" }) : \"\"}\r\n                                                                {this.props.Login.masterData.SelectedScheduler.ndec !== 0 ? smonth.trim() === \"\" ? smonth = this.props.intl.formatMessage({ id: \"IDS_DECEMBER\" }) : smonth = \", \" + this.props.intl.formatMessage({ id: \"IDS_DECEMBER\" }) : \"\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> : \"\"}\r\n                                                {/* {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_FEBRUARY\" message=\"February\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nfeb!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MARCH\" message=\"March\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmar!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_APRIL\" message=\"April\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.napr!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MAY\" message=\"May\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nmay!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_JUNE\" message=\"June\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.njun!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_JULY\" message=\"July\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.njul!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_AUGUST\" message=\"August\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.naug!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_SEPTEMBER\" message=\"September\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nsep!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_OCTOBER\" message=\"October\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.noct!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_NOVEMBER\" message=\"November\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.nnov!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"}\r\n                                                    {this.props.Login.masterData.SelectedScheduler.sscheduletype === \"M\" ?\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_DECEMBER\" message=\"December\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedScheduler.ndec!==0?\"Active\":\"-\"}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>:\"\"} */}\r\n                                                <Col md={4}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_REMARKS\" message=\"Remarks\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {/* {this.props.Login.masterData.SelectedUser.sdateofjoin === null || this.props.Login.masterData.SelectedUser.sdateofjoin.length === 0 ? '-' :\r\n                                                                    this.props.Login.masterData.SelectedUser.sdateofjoin} */}\r\n                                                            {this.props.Login.masterData.SelectedScheduler &&\r\n                                                                this.props.Login.masterData.SelectedScheduler.sremarks !== undefined ?\r\n                                                                this.props.Login.masterData.SelectedScheduler.sremarks : \"-\"}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                {/* <Col md={12}>\r\n                                                    <CustomTabs activeKey={\"IDS_SCHEDULERTRANSACTION\"}\r\n                                                        tabDetail={this.testRETabDetail()} />\r\n\r\n\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <div className=\"horizontal-line\"></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                        </Card.Body>\r\n                                    </>\r\n                                    : \"\"\r\n                                }\r\n                            </Card>\r\n                        </ContentPanel>\r\n                    </Col></Row>\r\n                {/* </Col>\r\n                </Row> */}\r\n            </div>\r\n\r\n            {/* End of get display*/}\r\n\r\n            {/* Start of Modal Sideout for Scheduler Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {\r\n                this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegisterSlideOutModal\r\n                            postParamList={this.postParamList}\r\n                            PrevoiusLoginData={this.PrevoiusLoginData}\r\n                            closeModal={this.closeModal}\r\n                            operation={\"create\"}\r\n                            screenName={\"IDS_REGISTRATION\"}\r\n                            onSaveClick={this.onSaveClick}\r\n                            validateEsign={this.validateEsign}\r\n                            updateStore={this.props.updateStore}\r\n                            comboComponents={this.state.comboComponents}\r\n                            withoutCombocomponent={this.state.withoutCombocomponent}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            //fromDate={this.fromDate}\r\n                            // toDate={this.toDate}\r\n                            //  specBasedComponent={this.state.specBasedComponent}\r\n                            mandatoryFields={[\r\n                                { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                { \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n                        />\r\n                    </PortalModal>\r\n                    : \"\"\r\n            }\r\n            {this.props.Login.openModal ?\r\n                <SlideOutModal show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={mandatoryFields}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        :\r\n                        <AddScheduler\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            onNumericInputOnChange={this.onNumericInputOnChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            schedulerTypeList={this.props.Login.schedulerTypeList || []}\r\n                            recurringList={this.props.Login.recurringList || []}\r\n                            monthlyTypeList={this.props.Login.monthlyTypeList || []}\r\n                            selectedScheduler={this.props.Login.masterData.SelectedScheduler || {}}\r\n                            operation={this.props.Login.operation}\r\n                            userLogged={this.props.Login.userLogged}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            actionType={this.state.actionType}\r\n                            userInfo={this.props.Login.userInfo}\r\n\r\n                        />}\r\n                /> : \"\"}\r\n            {/* End of Modal Sideout for Scheduler Creation */}\r\n        </>\r\n        );\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState })\r\n    }\r\n    testRETabDetail = () => {\r\n        const testTabMap = new Map();\r\n        //let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n\r\n        testTabMap.set(\"IDS_SCHEDULERTRANSACTION\",\r\n            <DataGrid\r\n                userRoleControlRights={\r\n                    this.state.userRoleControlRights\r\n                }\r\n                controlMap={this.state.controlMap}\r\n                primaryKeyField={\"nschedulartransactioncode\"}\r\n                data={\r\n                    this.props.Login.masterData &&\r\n                    this.props.Login.masterData.SchedulerTransaction\r\n                }\r\n                dataResult={process(\r\n                    this.props.Login.masterData &&\r\n                    (this.props.Login.masterData.SchedulerTransaction ||\r\n                        []),\r\n                    this.state.dataState\r\n                )}\r\n                dataState={this.state.dataState}\r\n                dataStateChange={this.dataStateChange}\r\n                extractedColumnList={this.columnList}\r\n                inputParam={this.props.Login.inputParam}\r\n                userInfo={this.props.Login.userInfo}\r\n                methodUrl={this.props.Login.inputParam.methodUrl}\r\n                pageable={true}\r\n                scrollable={\"scrollable\"}\r\n                isActionRequired={false}\r\n                isToolBarRequired={false}\r\n                selectedId={null}\r\n                hideColumnFilter={false}\r\n                //expandField={\"expanded\"}\r\n                handleExpandChange={this.handleExpandChange}\r\n            //  hasChild={true}\r\n            //   childColumnList={this.childColumnList}\r\n            //   childMappingField={\"nschedulartransactioncode\"}\r\n            //   childList={this.props.Login.testMap || new Map()}\r\n            />\r\n        )\r\n        return testTabMap;\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let isComponentUpdated = false;\r\n\r\n        if (this.props.Login.columnList !== previousProps.Login.columnList) {\r\n            isComponentUpdated = true;\r\n            // this.setState({\r\n            //     columnList: this.props.Login.columnList,\r\n            //     childColumnList: this.props.Login.childColumnList,\r\n            //     withoutCombocomponent: this.props.Login.withoutCombocomponent,\r\n            //     comboComponents: this.props.Login.comboComponents\r\n            // });\r\n\r\n        }\r\n\r\n        // if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\r\n        //     this.setState({\r\n        //         regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\r\n        //         regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\r\n        //         regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\r\n        //     });\r\n\r\n        // }\r\n\r\n\r\n        if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\r\n            isComponentUpdated = true;\r\n            //this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            isComponentUpdated = true;\r\n            //this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        let userRoleControlRights;\r\n        let controlMap;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            //isComponentUpdated = true;\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        let nfilterScheduleType = this.state.nfilterScheduleType || {};\r\n        let filterScheduleType = this.state.filterScheduleType || {};\r\n\r\n        if (this.props.Login.masterData.filterScheduleType !== previousProps.Login.masterData.filterScheduleType) {\r\n            const scheduleTypeMap = constructOptionList(this.props.Login.masterData.filterScheduleType || [], \"nschedulertypecode\",\r\n                \"sschedulertypename\", 'nschedulertypecode', 'ascending', false);\r\n            filterScheduleType = scheduleTypeMap.get(\"OptionList\");\r\n            if (this.state.nfilterScheduleType === null || this.state.nfilterScheduleType === undefined) {\r\n                if (scheduleTypeMap.get(\"DefaultValue\")) {\r\n                    nfilterScheduleType = scheduleTypeMap.get(\"DefaultValue\");\r\n                } else if (filterScheduleType && filterScheduleType.length > 0) {\r\n                    nfilterScheduleType = filterScheduleType[0];\r\n                }\r\n            }\r\n            isComponentUpdated = true;\r\n        } else if (this.props.Login.masterData.nfilterScheduleType !== previousProps.Login.masterData.nfilterScheduleType) {\r\n            nfilterScheduleType = this.props.Login.masterData.nfilterScheduleType;\r\n            isComponentUpdated = true;\r\n        }\r\n        let filterData;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            filterData = this.generateBreadCrumData();\r\n            if (this.props.Login.masterData.SelectedScheduler !== undefined &&\r\n                this.props.Login.masterData.SelectedScheduler !== null\r\n            ) {\r\n                if (this.props.Login.masterData.SelectedScheduler.sscheduletype === \"O\") {\r\n                    nfilterScheduleType = filterScheduleType[0];\r\n                    \r\n                }\r\n                else {\r\n                    if(filterScheduleType.length>1)\r\n                    {\r\n                    nfilterScheduleType = filterScheduleType[1];\r\n                    }\r\n                    else\r\n                    {\r\n                        nfilterScheduleType = filterScheduleType[0];\r\n                    }\r\n                }\r\n                //isComponentUpdated = true;\r\n                this.setState({ filterData, nfilterScheduleType });\r\n            }\r\n            else {\r\n                this.setState({ filterData });\r\n                //isComponentUpdated = true;\r\n            }\r\n        }\r\n        if (isComponentUpdated) {\r\n            this.setState({ nfilterScheduleType, filterScheduleType,selectedRecord: this.props.Login.selectedRecord,showSaveContinue: this.props.Login.showSaveContinue,\r\n                columnList: this.props.Login.columnList,\r\n                childColumnList: this.props.Login.childColumnList,\r\n                withoutCombocomponent: this.props.Login.withoutCombocomponent,\r\n                comboComponents: this.props.Login.comboComponents  });\r\n        }\r\n    }\r\n    onFilterSubmit = () => {\r\n        if (this.state.nfilterScheduleType !== undefined && this.state.nfilterScheduleType.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nscheduletypecode: this.state.nfilterScheduleType.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterScheduleType: this.state.nfilterScheduleType\r\n                },\r\n                classUrl: \"scheduler\",\r\n                methodUrl: \"SchedulerByScheduleType\"\r\n            }\r\n            this.props.changeScheduleTypeFilter(inputParam, this.props.Login.masterData.filterScheduleType);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_TESTCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_SCHEDULERTYPE\",\r\n                    \"value\": this.props.Login.masterData.SelectedScheduler ? this.props.Login.masterData.SelectedScheduler.stempscheduleType !== \"One Time\" ? \"Recurring\" : \"One Time\" : \"\"\r\n\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteScheduler(\"Scheduler\", this.props.Login.masterData.SelectedScheduler, \"delete\", deleteId));\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openPortal = this.props.Login.openPortal;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n                \r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openPortal = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, openPortal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChangeevent = (comboData, fieldName) => {\r\n        let nfilterScheduleType = this.state.nfilterScheduleType || {}\r\n        nfilterScheduleType = comboData;\r\n        this.searchRef.current.value = \"\";\r\n        this.setState({ nfilterScheduleType })\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        // selectedRecord[fieldName] = comboData;\r\n        // this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else if (event.target.name === \"nlockmode\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.ALL;\r\n\r\n        }\r\n        else {\r\n            if (event.target.name === \"noccurencenooftimes\" || event.target.name === \"noccurencedaywiseinterval\" || event.target.name === \"nexactday\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                }\r\n                else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else if (event.target.name === \"sloginid\") {\r\n                if (event.target.value !== \"\") {\r\n                    if (validateLoginId(event.target.value)) {\r\n                        selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                    }\r\n                }\r\n                else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n\r\n    handleDateChange = (dateName, dateValue, sdatename) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        selectedRecord[sdatename] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let scheduleData = {};\r\n        scheduleData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        if (this.state.selectedRecord[\"nschedulertypecode\"] === undefined ||\r\n            this.state.selectedRecord[\"nschedulertypecode\"] === null) {\r\n            toast.info(\"Please select SchedulerType\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.selectedRecord[\"nschedulertypecode\"].value !== 1) {\r\n\r\n            if (this.state.selectedRecord[\"denddate\"] === undefined ||\r\n                this.state.selectedRecord[\"denddate\"] === null) {\r\n                toast.info(\"Please select END Date\");\r\n                return;\r\n            }\r\n            if (this.state.selectedRecord[\"dendtime\"] === undefined ||\r\n                this.state.selectedRecord[\"dendtime\"] === null) {\r\n                toast.info(\"Please select END Time\");\r\n                return;\r\n            }\r\n            if (this.state.selectedRecord[\"denddate\"] !== undefined && this.state.selectedRecord[\"dstartdate\"] !== undefined) {\r\n                if (this.state.selectedRecord[\"denddate\"] < this.state.selectedRecord[\"dstartdate\"]) {\r\n                    toast.info(\"Please select END Date Greater than Start Date\");\r\n                    return;\r\n                }\r\n            }\r\n            if (this.state.selectedRecord[\"ntyperecurringcode\"].value === 1) {\r\n                // if(this.state.selectedRecord[\"noccurencenooftimes\"]===undefined ||\r\n                // this.state.selectedRecord[\"noccurencenooftimes\"]===null)\r\n                // {\r\n                //     toast.info(\"Please enter Occurrence value\");\r\n                //     return;\r\n                // }\r\n                // if(this.state.selectedRecord[\"soccurencehourwiseinterval\"]===undefined ||\r\n                // this.state.selectedRecord[\"soccurencehourwiseinterval\"]===null)\r\n                // {\r\n                //     toast.info(\"Please select Occurrence Hour wise\");\r\n                //     return;\r\n                // }\r\n                // if(this.state.selectedRecord[\"noccurencedaywiseinterval\"]===undefined ||\r\n                // this.state.selectedRecord[\"noccurencedaywiseinterval\"]===null)\r\n                // {\r\n                //     toast.info(\"Please enter Occurrence Day wise\");\r\n                //     return;\r\n                // }\r\n\r\n            }\r\n            if (this.state.selectedRecord[\"ntyperecurringcode\"].value === 3) {\r\n                if (this.state.selectedRecord[\"nrecurringperiodcode\"] === undefined) {\r\n                    toast.info(\"Please select Monthly Occurrence type\");\r\n                    return;\r\n                }\r\n\r\n                if (this.state.selectedRecord[\"nrecurringperiodcode\"] !== undefined &&\r\n                    this.state.selectedRecord[\"nrecurringperiodcode\"].value === 1 &&\r\n                    this.state.selectedRecord[\"nexactday\"] === undefined) {\r\n                    toast.info(\"Please enter Exact Day\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let postParam = undefined;\r\n\r\n\r\n        //add               \r\n        scheduleData[\"schedulemaster\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n        this.schedulerFieldList.map(item => {\r\n            return scheduleData[\"schedulemaster\"][item] = this.state.selectedRecord[item]\r\n        });\r\n        if (this.props.Login.operation === \"update\") {\r\n            scheduleData[\"schedulemaster\"][\"nschedulecode\"] = this.props.Login.masterData.SelectedScheduler[\"nschedulecode\"];\r\n        }\r\n        if (this.props.Login.operation === \"create\" &&\r\n            this.state.selectedRecord[\"ntyperecurringcode\"].value === 2) {\r\n            if (this.state.selectedRecord[\"nsunday\"] === undefined) {\r\n                this.state.selectedRecord[\"nsunday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nmonday\"] === undefined) {\r\n                this.state.selectedRecord[\"nmonday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"ntuesday\"] === undefined) {\r\n                this.state.selectedRecord[\"ntuesday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nwednesday\"] === undefined) {\r\n                this.state.selectedRecord[\"nwednesday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nthursday\"] === undefined) {\r\n                this.state.selectedRecord[\"nthursday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nfriday\"] === undefined) {\r\n                this.state.selectedRecord[\"nfriday\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nsaturday\"] === undefined) {\r\n                this.state.selectedRecord[\"nsaturday\"] = 1;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.operation === \"create\" &&\r\n            this.state.selectedRecord[\"ntyperecurringcode\"].value === 3) {\r\n            if (this.state.selectedRecord[\"njan\"] === undefined) {\r\n                this.state.selectedRecord[\"njan\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nfeb\"] === undefined) {\r\n                this.state.selectedRecord[\"nfeb\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nmar\"] === undefined) {\r\n                this.state.selectedRecord[\"nmar\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"napr\"] === undefined) {\r\n                this.state.selectedRecord[\"napr\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nmay\"] === undefined) {\r\n                this.state.selectedRecord[\"nmay\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"njun\"] === undefined) {\r\n                this.state.selectedRecord[\"njun\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"njul\"] === undefined) {\r\n                this.state.selectedRecord[\"njul\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"naug\"] === undefined) {\r\n                this.state.selectedRecord[\"naug\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nsep\"] === undefined) {\r\n                this.state.selectedRecord[\"nsep\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"noct\"] === undefined) {\r\n                this.state.selectedRecord[\"noct\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"nnov\"] === undefined) {\r\n                this.state.selectedRecord[\"nnov\"] = 1;\r\n            }\r\n            if (this.state.selectedRecord[\"ndec\"] === undefined) {\r\n                this.state.selectedRecord[\"ndec\"] = 1;\r\n            }\r\n        }\r\n\r\n        scheduleData[\"schedulemasterweekly\"] = {\r\n            \"nsunday\": this.state.selectedRecord[\"nsunday\"] ? this.state.selectedRecord[\"nsunday\"] : 0,\r\n            //\"ndefaultrole\": transactionStatus.YES, \"ntransactionstatus\": transactionStatus.ACTIVE\r\n            \"nmonday\": this.state.selectedRecord[\"nmonday\"] ? this.state.selectedRecord[\"nmonday\"] : 0,\r\n            \"ntuesday\": this.state.selectedRecord[\"ntuesday\"] ? this.state.selectedRecord[\"ntuesday\"] : 0,\r\n            \"nwednesday\": this.state.selectedRecord[\"nwednesday\"] ? this.state.selectedRecord[\"nwednesday\"] : 0,\r\n            \"nthursday\": this.state.selectedRecord[\"nthursday\"] ? this.state.selectedRecord[\"nthursday\"] : 0,\r\n            \"nfriday\": this.state.selectedRecord[\"nfriday\"] ? this.state.selectedRecord[\"nfriday\"] : 0,\r\n            \"nsaturday\": this.state.selectedRecord[\"nsaturday\"] ? this.state.selectedRecord[\"nsaturday\"] : 0,\r\n        }\r\n\r\n        scheduleData[\"schedulemastermonthly\"] = {\r\n            \"nexactday\": this.state.selectedRecord[\"nexactday\"] ? this.state.selectedRecord[\"nexactday\"] : 0,\r\n            \"nmonthlyoccurrencetype\": this.state.selectedRecord[\"nrecurringperiodcode\"] ? this.state.selectedRecord[\"nrecurringperiodcode\"].value : 0,\r\n            \"njan\": this.state.selectedRecord[\"njan\"] ? this.state.selectedRecord[\"njan\"] : 0,\r\n            \"nfeb\": this.state.selectedRecord[\"nfeb\"] ? this.state.selectedRecord[\"nfeb\"] : 0,\r\n            \"nmar\": this.state.selectedRecord[\"nmar\"] ? this.state.selectedRecord[\"nmar\"] : 0,\r\n            \"napr\": this.state.selectedRecord[\"napr\"] ? this.state.selectedRecord[\"napr\"] : 0,\r\n            \"nmay\": this.state.selectedRecord[\"nmay\"] ? this.state.selectedRecord[\"nmay\"] : 0,\r\n            \"njun\": this.state.selectedRecord[\"njun\"] ? this.state.selectedRecord[\"njun\"] : 0,\r\n            \"njul\": this.state.selectedRecord[\"njul\"] ? this.state.selectedRecord[\"njul\"] : 0,\r\n            \"naug\": this.state.selectedRecord[\"naug\"] ? this.state.selectedRecord[\"naug\"] : 0,\r\n            \"nsep\": this.state.selectedRecord[\"nsep\"] ? this.state.selectedRecord[\"nsep\"] : 0,\r\n            \"noct\": this.state.selectedRecord[\"noct\"] ? this.state.selectedRecord[\"noct\"] : 0,\r\n            \"nnov\": this.state.selectedRecord[\"nnov\"] ? this.state.selectedRecord[\"nnov\"] : 0,\r\n            \"ndec\": this.state.selectedRecord[\"ndec\"] ? this.state.selectedRecord[\"ndec\"] : 0,\r\n        }\r\n\r\n\r\n\r\n\r\n        let date;\r\n        let time;\r\n        scheduleData[\"schedulemaster\"][\"sscheduletype\"] = this.state.selectedRecord[\"nschedulertypecode\"] ? this.state.selectedRecord[\"nschedulertypecode\"].value === 1 ? 'O' : this.state.selectedRecord[\"ntyperecurringcode\"].value === 1 ? 'D' : this.state.selectedRecord[\"ntyperecurringcode\"].value === 2 ? 'W' : 'M' : 'O';\r\n        if (scheduleData[\"schedulemaster\"][\"dstartdate\"] !== undefined\r\n            && scheduleData[\"schedulemaster\"][\"dstartdate\"] !== null && scheduleData[\"schedulemaster\"][\"dstartdate\"] !== \"\") {\r\n            //scheduleData[\"schedulemaster\"][\"dstartdate\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dstartdate\"]);\r\n            scheduleData[\"schedulemaster\"][\"dstartdate\"] = formatInputDate(this.state.selectedRecord[\"sstartdate\"]);\r\n        }\r\n        if (scheduleData[\"schedulemaster\"][\"denddate\"] !== undefined\r\n            && scheduleData[\"schedulemaster\"][\"denddate\"] !== null && scheduleData[\"schedulemaster\"][\"denddate\"] !== \"\") {\r\n            //scheduleData[\"schedulemaster\"][\"denddate\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"denddate\"]);\r\n            scheduleData[\"schedulemaster\"][\"denddate\"] = formatInputDate(this.state.selectedRecord[\"senddate\"]);\r\n        }\r\n        else {\r\n            scheduleData[\"schedulemaster\"][\"denddate\"] = scheduleData[\"schedulemaster\"][\"dstartdate\"];\r\n        }\r\n        if (scheduleData[\"schedulemaster\"][\"dstarttime\"] !== undefined\r\n            && scheduleData[\"schedulemaster\"][\"dstarttime\"] !== null && scheduleData[\"schedulemaster\"][\"dstarttime\"] !== \"\") {\r\n            //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dstarttime\"]);\r\n            date = formatInputDate(this.state.selectedRecord[\"sstartdate\"]);\r\n            date = date.substring(0, 10);\r\n            time = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\r\n            time = time.substring(19, 11);\r\n            date = date + \"T\" + time + \"Z\";\r\n            //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\r\n            scheduleData[\"schedulemaster\"][\"dstarttime\"] = date;//formatInputDate(date);\r\n        }\r\n        if (scheduleData[\"schedulemaster\"][\"dendtime\"] !== undefined\r\n            && scheduleData[\"schedulemaster\"][\"dendtime\"] !== null && scheduleData[\"schedulemaster\"][\"dendtime\"] !== \"\") {\r\n            //scheduleData[\"schedulemaster\"][\"dendtime\"] = formatInputDate(scheduleData[\"schedulemaster\"][\"dendtime\"]);\r\n            //scheduleData[\"schedulemaster\"][\"dendtime\"] = formatInputDate(this.state.selectedRecord[\"sendtime\"]);\r\n            date = formatInputDate(this.state.selectedRecord[\"senddate\"]);\r\n            date = date.substring(0, 10);\r\n            time = formatInputDate(this.state.selectedRecord[\"sendtime\"]);\r\n            time = time.substring(19, 11);\r\n            date = date + \"T\" + time + \"Z\";\r\n            //scheduleData[\"schedulemaster\"][\"dstarttime\"] = formatInputDate(this.state.selectedRecord[\"sstarttime\"]);\r\n            scheduleData[\"schedulemaster\"][\"dendtime\"] = date;\r\n        }\r\n        else {\r\n            scheduleData[\"schedulemaster\"][\"dendtime\"] = scheduleData[\"schedulemaster\"][\"dstarttime\"];\r\n        }\r\n        if (scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== undefined\r\n            && scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== null && scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== \"\" &&\r\n            scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] !== \"null \") {\r\n            let shour;\r\n            if(scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"]!==\"00:00\")\r\n            {\r\n            shour = formatInputDate(scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"]);\r\n            //scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] =shour.substring(shour.indexOf('T'),5);\r\n            scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] = shour.substring(16, 11);\r\n            }\r\n        }\r\n        scheduleData[\"schedulemaster\"][\"soccurencehourwiseinterval\"] = \"00:00\";\r\n\r\n        scheduleData[\"schedulemaster\"][\"ntzstartdatetimezone\"] = this.state.selectedRecord[\r\n            \"ntzstartdatetimezone\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzstartdatetimezone\"].value ||\r\n            this.props.Login.userInfo.ntimezonecode\r\n            : this.props.Login.userInfo.ntimezonecode;\r\n        scheduleData[\"schedulemaster\"][\"ntzenddatetimezone\"] = this.state.selectedRecord[\r\n                \"ntzenddatetimezone\"\r\n              ]\r\n                ? this.state.selectedRecord[\"ntzenddatetimezone\"].value ||\r\n                this.props.Login.userInfo.ntimezonecode\r\n                : this.props.Login.userInfo.ntimezonecode;\r\n\r\n                scheduleData[\"schedulemaster\"][\"ntzstarttimetimezone\"] = this.state.selectedRecord[\r\n                    \"ntzstarttimetimezone\"\r\n                  ]\r\n                    ? this.state.selectedRecord[\"ntzstarttimetimezone\"].value ||\r\n                    this.props.Login.userInfo.ntimezonecode\r\n                    : this.props.Login.userInfo.ntimezonecode;\r\n                    scheduleData[\"schedulemaster\"][\"ntzendtimetimezone\"] = this.state.selectedRecord[\r\n                        \"ntzendtimetimezone\"\r\n                      ]\r\n                        ? this.state.selectedRecord[\"ntzendtimetimezone\"].value ||\r\n                        this.props.Login.userInfo.ntimezonecode\r\n                        : this.props.Login.userInfo.ntimezonecode;\r\n\r\n\r\n                //         scheduleData[\"schedulemaster\"][\"stzstartdatetimezone\"] = this.state.selectedRecord[\r\n                //     \"stzstartdatetimezone\"\r\n                //   ]\r\n                //     ? this.state.selectedRecord[\"stzstartdatetimezone\"].value ||\r\n                //     this.props.Login.userInfo.ntimezonecode\r\n                //     : this.props.Login.userInfo.ntimezonecode;\r\n                //     scheduleData[\"schedulemaster\"][\"stzenddatetimezone\"] = this.state.selectedRecord[\r\n                //         \"stzenddatetimezone\"\r\n                //       ]\r\n                //         ? this.state.selectedRecord[\"stzenddatetimezone\"].value ||\r\n                //         this.props.Login.userInfo.ntimezonecode\r\n                //         : this.props.Login.userInfo.ntimezonecode;\r\n\r\n                //         scheduleData[\"schedulemaster\"][\"stzstarttimetimezone\"] = this.state.selectedRecord[\r\n                //             \"stzstarttimetimezone\"\r\n                //           ]\r\n                //             ? this.state.selectedRecord[\"stzstarttimetimezone\"].value ||\r\n                //             this.props.Login.userInfo.ntimezonecode\r\n                //             : this.props.Login.userInfo.ntimezonecode;\r\n                //             scheduleData[\"schedulemaster\"][\"stzendtimetimezone\"] = this.state.selectedRecord[\r\n                //                 \"stzendtimetimezone\"\r\n                //               ]\r\n                //                 ? this.state.selectedRecord[\"stzendtimetimezone\"].value ||\r\n                //                 this.props.Login.userInfo.ntimezonecode\r\n                //                 : this.props.Login.userInfo.ntimezonecode;\r\n\r\n        // const controlMaster = [{ncontrolcode:517, scontrolname:'UserImage', ssubfolder:\"users\"},\r\n        //                         {ncontrolcode:518, scontrolname:'SignImage', ssubfolder:\"\"}]\r\n\r\n\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Scheduler\",\r\n            inputData: { scheduleData, userinfo: this.props.Login.userInfo },\r\n            //formData: formData,\r\n            //isFileupload: true,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            isClearSearch: this.props.Login.isClearSearch\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    deleteUserFile = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n\r\n\r\n    deleteScheduler = (methodUrl, selectedScheduler, operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.DRAFT) {\r\n            {\r\n\r\n                const postParam = {\r\n                    inputListName: \"Scheduler\", selectedObject: \"SelectedScheduler\",\r\n                    primaryKeyField: \"nschedulecde\",\r\n                    primaryKeyValue: selectedScheduler.nschedulecode,\r\n                    fetchUrl: \"scheduler/getScheduler\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl, postParam,\r\n                    inputData: {\r\n                        \"userinfo\": this.props.Login.userInfo,\r\n                        \"scheduler\": selectedScheduler\r\n                    },\r\n                    operation,\r\n                    isClearSearch: this.props.Login.isClearSearch\r\n                }\r\n\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName: \"IDS_SCHEDULER\", operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }\r\n    }\r\n\r\n    onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedScheduler.ntransactionstatus === transactionStatus.DRAFT) {\r\n            const approveId = this.state.controlMap.has(\"ApproveScheduler\") && this.state.controlMap.get(\"ApproveScheduler\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"scheduler\"] = { \"nschedulecode\": this.props.Login.masterData.SelectedScheduler.nschedulecode ? this.props.Login.masterData.SelectedScheduler.nschedulecode : \"\" };\r\n            inputData[\"scheduler\"] = this.props.Login.masterData.SelectedScheduler;\r\n            postParam = { inputListName: \"Scheduler\", selectedObject: \"SelectedScheduler\", primaryKeyField: \"nschedulecode\" };\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Scheduler\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            //inputData: { \"userinfo\": this.props.Login.userInfo, sscheduletype: this.state.nfilterScheduleType ? this.state.nfilterScheduleType.label : null },\r\n            inputData: { \"userinfo\": this.props.Login.userInfo, sscheduletype: this.props.Login.masterData.nfilterScheduleType ? this.props.Login.masterData.nfilterScheduleType.label : null },\r\n            classUrl: \"scheduler\",\r\n            methodUrl: \"Scheduler\",\r\n            displayName: \"IDS_SCHEDULER\",\r\n            userInfo: this.props.Login.userInfo,\r\n            isClearSearch: this.props.Login.isClearSearch,\r\n\r\n\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getSchedulerDetail, getSchedulerComboService, changeScheduleTypeFilter, getUserMultiRoleComboDataService,\r\n    getUserMultiDeputyComboDataService, getUserSiteDetail, getUserSiteComboService, filterColumnData, getPreviewTemplate\r\n})(injectIntl(Scheduler));\r\n\r\n"]},"metadata":{},"sourceType":"module"}