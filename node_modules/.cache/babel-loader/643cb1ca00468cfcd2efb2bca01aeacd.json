{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest,updateStore}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export function openModal(operation,napprovalconfigcode,napprovalsubtypecode,userInfo,ncontrolcode,ntreeversiontempcode){return function(dispatch){if(userInfo){var inputData={napprovalconfigcode:napprovalconfigcode,napprovalsubtypecode:napprovalsubtypecode,ntreeversiontempcode:ntreeversiontempcode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData).then(function(response){var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");var userRoleTree=response.data.userroletree?response.data.userroletree.reverse():[];// const userRoleTree = response.data.userroletree;\nvar validStatusList=response.data.availableValidStatus||[];var topLevelValidStatus=validStatusList.filter(function(item){return item.ntranscode!==transactionStatus.COMPLETED;});var topLevelValidStatusMap=constructOptionList(topLevelValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var topLevelValidStatusOptions=topLevelValidStatusMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,userRoleTree:userRoleTree,//:response.data.userroletree,\nfilterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,topLevelValidStatusOptions:topLevelValidStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],checklistValues:[],checklistVersionValues:[],actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],versionConfig:response.data.versionConfig?response.data.versionConfig:[],ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){return function(dispatch){var inputData={\"napprovalconfigversioncode\":version.napproveconfversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedVersion:response.data.selectedVersion,showAccordion:true,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRoleDetails(inputData){return function(dispatch){var role=inputData.role,masterData=inputData.masterData,napprovalsubtypecode=inputData.napprovalsubtypecode,userinfo=inputData.userinfo;//console.log(\"role:\", role);\nvar inputParamData={napprovalconfigrolecode:role.napprovalconfigrolecode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userinfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedRole:role,showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED||masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}else{if(userInfo){var inputData={napprovalconfigversioncode:napprovalconfigversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData).then(function(response){var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");var userRoleTree=response.data.userroletree?response.data.userroletree.reverse():[];var selectedRecord={};userRoleTree.map(function(role){var _selectedRecord$role$;var filterStatus=[];var validationStatus=[];var decisionStatus=[];var actionArray=[];var filterStatusValues=[];response.data[\"filterstatus_\".concat(role.nuserrolecode)].map(function(data){filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});filterStatus.push(data.ntranscode);return null;});var validationStatusValues=[];response.data[\"validationstatus_\".concat(role.nuserrolecode)].map(function(data){validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});validationStatus.push(data.ntranscode);return null;});var decisionStatusValues=[];response.data[\"decisionstatus_\".concat(role.nuserrolecode)]&&response.data[\"decisionstatus_\".concat(role.nuserrolecode)].map(function(data){decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});decisionStatus.push(data.ntranscode);return null;});var checklistValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data});});var checklistVersionValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data});});var nrecomretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed;var nrecomrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed;var nretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed;var nrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed;var ncorrectionneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed;nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push();nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push();nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push();nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push();ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push();selectedRecord[role.nuserrolecode]=(_selectedRecord$role$={},_defineProperty(_selectedRecord$role$,\"Partial Approval_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].npartialapprovalneed),_defineProperty(_selectedRecord$role$,'IDS_SECTIONWISEAPPROVE',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nsectionwiseapprovalneed),_defineProperty(_selectedRecord$role$,\"Recommend Retest_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed),_defineProperty(_selectedRecord$role$,\"Recommend Recalc_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed),_defineProperty(_selectedRecord$role$,\"Retest_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed),_defineProperty(_selectedRecord$role$,\"Recalc_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed),_defineProperty(_selectedRecord$role$,'IDS_AUTOAPPROVAL',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nautoapproval),_defineProperty(_selectedRecord$role$,'IDS_CORRECTION',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed),_defineProperty(_selectedRecord$role$,\"e-Sign_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nesignneed),_defineProperty(_selectedRecord$role$,'filterstatus',filterStatus),_defineProperty(_selectedRecord$role$,'decisionstatus',decisionStatus),_defineProperty(_selectedRecord$role$,'validationstatus',validationStatus),_defineProperty(_selectedRecord$role$,'approvalstatus',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode),_defineProperty(_selectedRecord$role$,'checklist',response.data[\"checklist_\".concat(role.nuserrolecode)][0].nchecklistversioncode),_selectedRecord$role$);selectedRecord['sversionname']=response.data.versiondetails.sversionname;response.data.versionConfig.map(function(action){if(action.ntranscode===81){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval;}else if(action.ntranscode===85){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete;}});selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation;selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot;selectedRecord[\"approvalstatus_\".concat(role.nuserrolecode)]=[{value:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode,label:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].sapprovalstatus}];selectedRecord[\"filterstatus_\".concat(role.nuserrolecode)]=filterStatusValues;selectedRecord[\"validationstatus_\".concat(role.nuserrolecode)]=validationStatusValues;selectedRecord[\"decisionstatus_\".concat(role.nuserrolecode)]=decisionStatusValues;selectedRecord[\"checklist_\".concat(role.nuserrolecode)]=checklistValues;selectedRecord[\"checklistVersion_\".concat(role.nuserrolecode)]=checklistVersionValues;selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]=actionArray;//selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\nreturn null;});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",userRoleTree:userRoleTree,//userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),\nfilterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}};}export function getFilterChange(inputParamData,oldState){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData).then(function(response){var RegistrationTypeListMap=constructOptionList(response.data.registrationtype||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.registrationsubtype||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var RegistrationTypeList=RegistrationTypeListMap.get(\"OptionList\");var RegistrationSubTypeList=RegistrationSubTypeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{approvalsubtype:oldState.approvalsubtype,approvalSubTypeValue:oldState.approvalSubTypeValue,RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,registrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,registrationSubTypeValue:response.data.registrationsubtype?response.data.registrationsubtype.length>0?{value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,approvalConfigCode:response.data.approvalConfigCode,treeVersionTemplate:response.data.treeVersionTemplate,userroleTemplateValue:response.data.userroleTemplateValue// versionData:sortData(response.data.versionData),\n// selectedVersion:response.data.selectedVersion,\n// approvalconfigRoleNames:response.data.approvalconfigRoleNames,\n// showAccordion:true,\n// roleFilters:response.data.roleFilters,\n// roleValidations:response.data.roleValidations,\n// roleDecisions:response.data.roleDecisions,\n// roleActions:response.data.roleActions,\n// roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\n// versionConfig:response.data.versionConfig,\n// searchedData:undefined\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigurationVersion(inputParamData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData).then(function(response){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],organisation:undefined}};dispatch(updateStore(updateInfo));if(inputParamData.searchRef!==undefined&&inputParamData.searchRef.current.value!==\"\"){inputParamData.searchRef.current.value=\"\";inputParamData.masterData[\"searchedData\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{versionData:sortData(response.data.versionData),selectedVersion:response.data.selectedVersion,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,searchedData:undefined}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegType',{napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo}).then(function(response){var selectedRecord={};var RegistrationTypeListMap=constructOptionList(response.data.CopyRegType||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegType=RegistrationTypeListMap.get(\"OptionList\");var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[];selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,optCopyRegSubType:optCopyRegSubType,optCopyRegType:optCopyRegType,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo}).then(function(response){var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,loading:false,optCopyRegType:optCopyRegType,optCopyRegSubType:optCopyRegSubType,selectedRecord:selectedRecord,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function setDefault(inputObj,event){var flag=inputObj.flag,napprovalconfigrolecode=inputObj.napprovalconfigrolecode,napprovalsubtypecode=inputObj.napprovalsubtypecode,userInfo=inputObj.userInfo,masterData=inputObj.masterData;var rowData=inputObj.selectedRecord;return function(dispatch){if(event.target.checked){var inputData={};var url='';if(flag===1){inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovalfiltercode:rowData.napprovalfiltercode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultFilterStatus';}else{inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovaldecisioncode:rowData.napprovaldecisioncode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultDecisionStatus';}dispatch(initRequest(true));rsapi.post(url,inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function approveVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getDesignTemplateMapping\",_objectSpread({},inputParam.inputData)).then(function(response){var designTemplateMapping=constructOptionList(response.data.DesignTemplateMapping,\"ndesigntemplatemappingcode\",\"sregtemplatename\");var data=designTemplateMapping.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,designTemplateMapping:data,selectedTemplate:data.length>0&&data[0].item.jsondata,openModal:true,operation:inputParam.operation,ncontrolcode:inputParam.ncontrolcode,selectedRecord:{'ndesigntemplatemappingcode':_objectSpread({},data[0])}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ApprovalConfigAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","initRequest","updateStore","transactionStatus","intl","openModal","operation","napprovalconfigcode","napprovalsubtypecode","userInfo","ncontrolcode","ntreeversiontempcode","dispatch","inputData","userinfo","post","then","response","filterStatusOptionsMap","data","availableFilterStatus","undefined","validationStatusOptionsMap","availableValidStatus","approvalStatusOptionsMap","approvalStatus","decisionStatusOptionsMap","availableDecisionStatus","checklistOptionsMap","checklist","filterStatusOptions","get","validationStatusOptions","approvalStatusOptions","decisionStatusOptions","checklistOptions","userRoleTree","userroletree","reverse","validStatusList","topLevelValidStatus","filter","item","ntranscode","COMPLETED","topLevelValidStatusMap","topLevelValidStatusOptions","type","payload","approvalStatusValue","AvailableDecisionStatus","checklistValues","checklistVersionValues","actionStatus","roleConfig","versionConfig","loading","catch","error","status","message","warn","getApprovalConfigVersion","version","masterData","napproveconfversioncode","selectedVersion","showAccordion","approvalconfigRoleNames","selectedRole","length","roleFilters","roleValidations","roleDecisions","roleActions","getRoleDetails","role","inputParamData","napprovalconfigrolecode","getApprovalConfigEditData","napprovalconfigversioncode","APPROVED","RETIRED","formatMessage","id","selectedRecord","map","filterStatus","validationStatus","decisionStatus","actionArray","filterStatusValues","nuserrolecode","push","value","label","stransstatus","validationStatusValues","decisionStatusValues","nchecklistcode","schecklistname","nchecklistversioncode","schecklistversionname","nrecomretestneed","nrecomrecalcneed","nretestneed","nrecalcneed","ncorrectionneed","YES","RECOMMENDRETEST","RECOMMENDRECALC","RETEST","RECALC","CORRECTION","npartialapprovalneed","nsectionwiseapprovalneed","nautoapproval","nesignneed","napprovalstatuscode","versiondetails","sversionname","action","stransdisplaystatus","nneedautoapproval","nneedautocomplete","nneedjoballocation","nautoallot","sapprovalstatus","getFilterChange","oldState","RegistrationTypeListMap","registrationtype","RegistrationSubTypeListMap","registrationsubtype","RegistrationTypeList","RegistrationSubTypeList","approvalsubtype","approvalSubTypeValue","registrationType","registrationTypeValue","nregtypecode","sregtypename","registrationSubType","registrationSubTypeValue","nregsubtypecode","sregsubtypename","approvalConfigCode","treeVersionTemplate","userroleTemplateValue","getApprovalConfigurationVersion","updateInfo","typeName","organisation","searchRef","current","versionData","searchedData","copyVersion","CopyRegType","CopyRegSubType","optCopyRegType","optCopyRegSubType","getCopySubType","comboData","setDefault","inputObj","event","flag","rowData","target","checked","url","napprovalfiltercode","ntransactionstatus","napprovaldecisioncode","approveVersion","inputParam","designTemplateMapping","DesignTemplateMapping","selectedTemplate","jsondata"],"mappings":"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","sourcesContent":["\r\nimport rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList, sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest,updateStore } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\n\r\n\r\nexport function openModal(operation,napprovalconfigcode,napprovalsubtypecode, userInfo, ncontrolcode,ntreeversiontempcode){\r\n    return function (dispatch) {  \r\n        \r\n        if(userInfo){\r\n\r\n            const inputData={\r\n                napprovalconfigcode:napprovalconfigcode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                ntreeversiontempcode,\r\n                userinfo:userInfo\r\n            };\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData)\r\n            .then(response=> { \r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n\r\n                const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\r\n                // const userRoleTree = response.data.userroletree;\r\n                const validStatusList = response.data.availableValidStatus || [];\r\n                const topLevelValidStatus = validStatusList.filter(item=>\r\n                              item.ntranscode !== transactionStatus.COMPLETED)\r\n                const topLevelValidStatusMap = constructOptionList(topLevelValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const topLevelValidStatusOptions = topLevelValidStatusMap.get(\"OptionList\");\r\n\r\n\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation,\r\n                     userRoleTree,//:response.data.userroletree,\r\n                                filterStatusOptions,\r\n                                validationStatusOptions,\r\n                                topLevelValidStatusOptions,\r\n                                approvalStatusOptions,\r\n                                decisionStatusOptions,\r\n                                checklistOptions,\r\n                                approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],\r\n                                checklistValues:[],\r\n                                checklistVersionValues:[],\r\n                                actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                                roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],\r\n                                versionConfig:response.data.versionConfig?response.data.versionConfig:[],                                \r\n                                ncontrolcode,loading:false\r\n                                }});\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n            \r\n        }\r\n    }\r\n    \r\n}\r\nexport function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){\r\n    return function (dispatch) {  \r\n        const  inputData = {\"napprovalconfigversioncode\":version.napproveconfversioncode,\r\n                            napprovalsubtypecode:napprovalsubtypecode,\r\n                            userinfo:userInfo\r\n                        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                ...masterData,\r\n                selectedVersion:response.data.selectedVersion,\r\n                showAccordion:true,\r\n                approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })     \r\n    }\r\n\r\n}\r\nexport function getRoleDetails(inputData){\r\n    return function (dispatch) {  \r\n        let {role,masterData,napprovalsubtypecode,userinfo}=inputData\r\n        //console.log(\"role:\", role);\r\n        let inputParamData={\r\n            napprovalconfigrolecode:role.napprovalconfigrolecode,\r\n            napprovalsubtypecode,\r\n            userinfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                    ...masterData,\r\n                selectedRole:role,\r\n                showAccordion:true,\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n\r\n                                    \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n    \r\n    \r\n}\r\nexport function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData, ncontrolcode){\r\n    return function (dispatch) { \r\n        if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED || \r\n                 masterData.selectedVersion[\"ntransactionstatus\"] === transactionStatus.RETIRED){\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n         }else{ \r\n           if(userInfo){\r\n            const inputData={\r\n                napprovalconfigversioncode:napprovalconfigversioncode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                userinfo:userInfo\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData)\r\n            .then(response=> { \r\n               \r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n\r\n                const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\r\n\r\n                let selectedRecord={}\r\n                userRoleTree.map( role=>{\r\n                    let filterStatus=[];\r\n                    let validationStatus=[];\r\n                    let decisionStatus=[];\r\n                    let actionArray=[];\r\n                    let filterStatusValues=[];\r\n                    \r\n                    response.data[`filterstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        filterStatus.push(data.ntranscode)\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let validationStatusValues=[];\r\n                    response.data[`validationstatus_${role.nuserrolecode}`].map(data=>{\r\n                        validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        validationStatus.push(data.ntranscode)\r\n                        return null;\r\n                    }\r\n                        \r\n                    )\r\n                    let decisionStatusValues=[];\r\n                    response.data[`decisionstatus_${role.nuserrolecode}`]&&response.data[`decisionstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});\r\n                        decisionStatus.push(data.ntranscode);\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let checklistValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data})\r\n                        \r\n                    )\r\n                    let checklistVersionValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data})\r\n                        \r\n                    )\r\n                    let nrecomretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed\r\n                    let nrecomrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed\r\n                    let nretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed\r\n                    let nrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed\r\n                    let ncorrectionneed=response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed\r\n\r\n                    nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push()\r\n                    nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push()\r\n                    nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push()\r\n                    nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push()\r\n                    ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push()\r\n\r\n                    selectedRecord[role.nuserrolecode]={\r\n                        // 'IDS_PARTIALAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].npartialapprovalneed,\r\n                        // 'IDS_SECTIONWISEAPPROVE':response.data[`roledetails_${role.nuserrolecode}`][0].nsectionwiseapprovalneed,\r\n                        // 'IDS_RECOMMENDRETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed,\r\n                        // 'IDS_RECOMMENDRECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed,\r\n                        // 'IDS_RETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed,\r\n                        // 'IDS_RECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed,\r\n                        // 'IDS_AUTOAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].nautoapproval,\r\n                        // 'IDS_CORRECTION':response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed,\r\n                        // 'IDS_ESIGN':response.data[`roledetails_${role.nuserrolecode}`][0].nesignneed,\r\n                        // 'filterstatus':filterStatus,\r\n                        // 'decisionstatus':decisionStatus,\r\n                        // 'validationstatus':validationStatus,\r\n                        // 'approvalstatus':response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,\r\n                        // 'checklist':response.data[`checklist_${role.nuserrolecode}`][0].nchecklistversioncode\r\n                        [`Partial Approval_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].npartialapprovalneed,\r\n                        'IDS_SECTIONWISEAPPROVE':response.data[`roledetails_${role.nuserrolecode}`][0].nsectionwiseapprovalneed,\r\n                        [`Recommend Retest_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed,\r\n                        [`Recommend Recalc_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed,\r\n                        [`Retest_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed,\r\n                        [`Recalc_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed,\r\n                        'IDS_AUTOAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].nautoapproval,\r\n                        'IDS_CORRECTION':response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed,\r\n                        [`e-Sign_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nesignneed,\r\n                        'filterstatus':filterStatus,\r\n                        'decisionstatus':decisionStatus,\r\n                        'validationstatus':validationStatus,\r\n                        'approvalstatus':response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,\r\n                        'checklist':response.data[`checklist_${role.nuserrolecode}`][0].nchecklistversioncode\r\n                    }\r\n                    selectedRecord['sversionname']=response.data.versiondetails.sversionname\r\n                    response.data.versionConfig.map(action =>{\r\nif(action.ntranscode===81)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval\r\n}\r\nelse if(action.ntranscode===85)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete\r\n}\r\n\r\n                    })\r\n                   \r\n                  \r\n                    selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation\r\n                    selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot\r\n                    selectedRecord[`approvalstatus_${role.nuserrolecode}`]=[{value:response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,label:response.data[`roledetails_${role.nuserrolecode}`][0].sapprovalstatus}]\r\n                    selectedRecord[`filterstatus_${role.nuserrolecode}`]=filterStatusValues\r\n                    selectedRecord[`validationstatus_${role.nuserrolecode}`]=validationStatusValues\r\n                    selectedRecord[`decisionstatus_${role.nuserrolecode}`]=decisionStatusValues\r\n                    selectedRecord[`checklist_${role.nuserrolecode}`]=checklistValues\r\n                    selectedRecord[`checklistVersion_${role.nuserrolecode}`]=checklistVersionValues\r\n                    selectedRecord[`actionStatus_${role.nuserrolecode}`]=actionArray\r\n                    //selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\r\n\r\n                    return null;\r\n                });\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation:\"update\",\r\n                    userRoleTree,\r\n                    //userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),\r\n                    filterStatusOptions,\r\n                    validationStatusOptions,\r\n                    approvalStatusOptions,\r\n                    decisionStatusOptions,\r\n                    checklistOptions,\r\n                    actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                    roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                    versionConfig:response.data.versionConfig,\r\n                    selectedRecord,masterData,ncontrolcode,loading:false  \r\n\r\n                }})\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n        } \r\n      }\r\n    }\r\n}\r\nexport function getFilterChange(inputParamData,oldState){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData)\r\n            .then(response =>{\r\n                \r\n                const RegistrationTypeListMap = constructOptionList( response.data.registrationtype || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                const RegistrationSubTypeListMap = constructOptionList( response.data.registrationsubtype || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                let RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n                let RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        approvalsubtype:oldState.approvalsubtype,\r\n                        approvalSubTypeValue:oldState.approvalSubTypeValue,\r\n                        RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,\r\n                        RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,\r\n                        registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,\r\n                        registrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,\r\n                        registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,\r\n                        registrationSubTypeValue:response.data.registrationsubtype?response.data.registrationsubtype.length>0?{value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,\r\n                        approvalConfigCode:response.data.approvalConfigCode,\r\n                        treeVersionTemplate:response.data.treeVersionTemplate,\r\n                        userroleTemplateValue: response.data.userroleTemplateValue,\r\n\r\n                        // versionData:sortData(response.data.versionData),\r\n                        // selectedVersion:response.data.selectedVersion,\r\n                        // approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        // showAccordion:true,\r\n                        // roleFilters:response.data.roleFilters,\r\n                        // roleValidations:response.data.roleValidations,\r\n                        // roleDecisions:response.data.roleDecisions,\r\n                        // roleActions:response.data.roleActions,\r\n                        // roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        // versionConfig:response.data.versionConfig,\r\n                        // searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalConfigurationVersion(inputParamData){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData)\r\n            .then(response =>{\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: [], organisation: undefined, }\r\n                  }\r\n                dispatch(updateStore(updateInfo))\r\n\r\n                if(inputParamData.searchRef!==undefined && inputParamData.searchRef.current.value!==\"\"){\r\n                    inputParamData.searchRef.current.value=\"\"\r\n                    inputParamData.masterData[\"searchedData\"]=undefined\r\n                }\r\n\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        versionData:sortData(response.data.versionData),\r\n                        selectedVersion:response.data.selectedVersion,\r\n                        approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig,\r\n                        searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('approvalconfig/getCopyRegType',{napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo})\r\n                .then(response =>{\r\n                    let selectedRecord={};\r\n                    const RegistrationTypeListMap = constructOptionList(response.data.CopyRegType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                    const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                    let optCopyRegType = RegistrationTypeListMap.get(\"OptionList\");\r\n                    let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                    selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[]\r\n                    selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[]\r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                        operation:\"copy\",openModal:true,\r\n                        optCopyRegSubType,\r\n                        optCopyRegType,\r\n                        selectedRecord,\r\n                        masterData,ncontrolcode,loading:false  \r\n                    }})\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n    }\r\n\r\n}\r\nexport function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo})\r\n        .then(response =>{\r\n            const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n            let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                operation:\"copy\",openModal:true,loading:false  ,\r\n                optCopyRegType,\r\n                optCopyRegSubType,\r\n                selectedRecord,\r\n                masterData\r\n            }})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\nexport function setDefault(inputObj,event){\r\n    let {flag,napprovalconfigrolecode,napprovalsubtypecode,userInfo,masterData}=inputObj;\r\n    let rowData=inputObj.selectedRecord\r\n    return function(dispatch){\r\n        if(event.target.checked){\r\n            let inputData={}\r\n            let url='';\r\n            if(flag===1){\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovalfiltercode:rowData.napprovalfiltercode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultFilterStatus'\r\n            }else{\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovaldecisioncode:rowData.napprovaldecisioncode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultDecisionStatus'\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(url,inputData)\r\n            .then(response =>{\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                \r\n                    masterData:{\r\n                        ...masterData,\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig\r\n                    },loading:false  \r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function approveVersion(inputParam){\r\n    return function(dispatch){\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getDesignTemplateMapping\",{...inputParam.inputData})\r\n            .then(response =>{\r\n                const designTemplateMapping=constructOptionList(response.data.DesignTemplateMapping,\r\n                    \"ndesigntemplatemappingcode\",\"sregtemplatename\");\r\n                    const data=designTemplateMapping.get(\"OptionList\");\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                loading:false ,designTemplateMapping: data,\r\n                selectedTemplate:data.length>0&&data[0].item.jsondata,openModal:true,\r\n                operation:inputParam.operation,ncontrolcode:inputParam.ncontrolcode,selectedRecord:{'ndesigntemplatemappingcode':{...data[0]}}\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}