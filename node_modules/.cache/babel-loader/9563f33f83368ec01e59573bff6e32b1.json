{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from'react';import{injectIntl}from'react-intl';import{Accordion,Card,useAccordionToggle}from\"react-bootstrap\";import AccordionContext from\"react-bootstrap/AccordionContext\";import{AtAccordion}from'../custom-accordion/custom-accordion.styles';// import classNames from 'classnames';\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faChevronUp}from'@fortawesome/free-solid-svg-icons';import{faChevronDown}from'@fortawesome/free-solid-svg-icons';var CustomToggle=function CustomToggle(_ref){var children=_ref.children,eventKey=_ref.eventKey;var currentEventKey=React.useContext(AccordionContext);var isCurrentEventKey=currentEventKey===eventKey;var decoratedOnClick=useAccordionToggle(eventKey,function(){return isCurrentEventKey?\"\":children.props.onExpandCall();});return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"// style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\n// className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\n,onClick:decoratedOnClick},children,isCurrentEventKey?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronUp}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronDown//onClick={children.props.onExpandCall}\n}));};var CustomAccordion=function CustomAccordion(props){var keys=_toConsumableArray(props.accordionComponent.keys());return/*#__PURE__*/React.createElement(AtAccordion,null,/*#__PURE__*/React.createElement(Accordion,{activeKey:String(props.selectedKey)},/*#__PURE__*/React.createElement(Card,null,keys.map(function(item,index){var accordionObject=props.accordionComponent.get(item)[\"props\"][props.accordionObjectName];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(CustomToggle,{eventKey:String(accordionObject[props.accordionPrimaryKey])},/*#__PURE__*/React.createElement(Card.Title,{onExpandCall:function onExpandCall(){return props.accordionClick(_objectSpread(_objectSpread({},props.inputParam),{},_defineProperty({},props.accordionObjectName,accordionObject)));}},props.titlePrefix||\"\",props.isJSONdata?accordionObject[props.jsonFieldName][props.accordionTitle]:accordionObject[props.accordionTitle]))),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:String(accordionObject[props.accordionPrimaryKey])},/*#__PURE__*/React.createElement(Card.Body,null,props.accordionComponent.get(item))));}))));};export default injectIntl(CustomAccordion);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/custom-accordion/custom-accordion.component.jsx"],"names":["React","injectIntl","Accordion","Card","useAccordionToggle","AccordionContext","AtAccordion","FontAwesomeIcon","faChevronUp","faChevronDown","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","props","onExpandCall","CustomAccordion","keys","accordionComponent","String","selectedKey","map","item","index","accordionObject","get","accordionObjectName","accordionPrimaryKey","accordionClick","inputParam","titlePrefix","isJSONdata","jsonFieldName","accordionTitle"],"mappings":"+eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAAQC,SAAR,CAAmBC,IAAnB,CAAyBC,kBAAzB,KAAkD,iBAAlD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,OAAQC,WAAR,KAA0B,6CAA1B,CACA;AACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,KAA4B,mCAA5B,CACA,OAASC,aAAT,KAA8B,mCAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAdC,QAAc,MAAdA,QAAc,CAC9C,GAAMC,CAAAA,eAAe,CAAGb,KAAK,CAACc,UAAN,CAAiBT,gBAAjB,CAAxB,CACA,GAAMU,CAAAA,iBAAiB,CAAGF,eAAe,GAAKD,QAA9C,CACA,GAAMI,CAAAA,gBAAgB,CAAGZ,kBAAkB,CAAEQ,QAAF,CACvC,iBAAMG,CAAAA,iBAAiB,CAAG,EAAH,CAAQJ,QAAQ,CAACM,KAAT,CAAeC,YAAf,EAA/B,EADuC,CAA3C,CAKA,mBACI,2BACE,SAAS,CAAC,gCACV;AACA;AAHF,CAIE,OAAO,CAAEF,gBAJX,EAKGL,QALH,CAMGI,iBAAiB,cACd,oBAAC,eAAD,EAAiB,IAAI,CAAEP,WAAvB,EADc,cAEd,oBAAC,eAAD,EAAiB,IAAI,CAAEC,aAAe;AAAtC,EARN,CADJ,CAaD,CArBD,CAuBA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACF,KAAD,CAAW,CACjC,GAAMG,CAAAA,IAAI,oBAAOH,KAAK,CAACI,kBAAN,CAAyBD,IAAzB,EAAP,CAAV,CAEE,mBACE,oBAAC,WAAD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAEE,MAAM,CAACL,KAAK,CAACM,WAAP,CAA5B,eACE,oBAAC,IAAD,MACIH,IAAI,CAACI,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,CAAgB,CACzB,GAAMC,CAAAA,eAAe,CAAGV,KAAK,CAACI,kBAAN,CAAyBO,GAAzB,CAA6BH,IAA7B,EAAmC,OAAnC,EAA4CR,KAAK,CAACY,mBAAlD,CAAxB,CACE,mBAAO,qDACL,oBAAC,IAAD,CAAM,MAAN,mBACE,oBAAC,YAAD,EAAc,QAAQ,CAAEP,MAAM,CAACK,eAAe,CAACV,KAAK,CAACa,mBAAP,CAAhB,CAA9B,eACE,oBAAC,IAAD,CAAM,KAAN,EAAa,YAAY,CAAE,8BAAKb,CAAAA,KAAK,CAACc,cAAN,gCAAyBd,KAAK,CAACe,UAA/B,wBAA4Cf,KAAK,CAACY,mBAAlD,CAAuEF,eAAvE,GAAL,EAA3B,EACIV,KAAK,CAACgB,WAAN,EAAqB,EADzB,CAC+BhB,KAAK,CAACiB,UAAN,CAAmBP,eAAe,CAACV,KAAK,CAACkB,aAAP,CAAf,CAAqClB,KAAK,CAACmB,cAA3C,CAAnB,CAAgFT,eAAe,CAACV,KAAK,CAACmB,cAAP,CAD9H,CADF,CADF,CADK,cAQL,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAEd,MAAM,CAACK,eAAe,CAACV,KAAK,CAACa,mBAAP,CAAhB,CAApC,eACE,oBAAC,IAAD,CAAM,IAAN,MACCb,KAAK,CAACI,kBAAN,CAAyBO,GAAzB,CAA6BH,IAA7B,CADD,CADF,CARK,CAAP,CAaI,CAfN,CADJ,CADF,CADF,CADF,CAwBE,CA3BN,CA6BA,cAAexB,CAAAA,UAAU,CAACkB,eAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Accordion, Card, useAccordionToggle} from \"react-bootstrap\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport {AtAccordion} from '../custom-accordion/custom-accordion.styles';\r\n// import classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToggle = ({ children, eventKey}) => {\r\n  const currentEventKey = React.useContext(AccordionContext);\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n  const decoratedOnClick = useAccordionToggle( eventKey,\r\n      () => isCurrentEventKey ? \"\" : children.props.onExpandCall()\r\n    );\r\n\r\n \r\n  return (\r\n      <div\r\n        className=\"d-flex justify-content-between\"\r\n        // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\r\n        // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\r\n        onClick={decoratedOnClick}>\r\n        {children}\r\n        {isCurrentEventKey ? \r\n            <FontAwesomeIcon icon={faChevronUp}/>\r\n          : <FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n                                              />}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst CustomAccordion = (props) => { \r\n  const keys = [...props.accordionComponent.keys()];\r\n\r\n    return (\r\n      <AtAccordion>\r\n        <Accordion activeKey={String(props.selectedKey)}>\r\n          <Card>\r\n            { keys.map((item, index) =>{\r\n              const accordionObject = props.accordionComponent.get(item)[\"props\"][props.accordionObjectName];\r\n                return(<> \r\n                  <Card.Header>\r\n                    <CustomToggle eventKey={String(accordionObject[props.accordionPrimaryKey])}>\r\n                      <Card.Title  onExpandCall={()=> props.accordionClick({...props.inputParam, [props.accordionObjectName]:accordionObject})}> \r\n                        { props.titlePrefix || \"\" }{ props.isJSONdata ? accordionObject[props.jsonFieldName][props.accordionTitle] : accordionObject[props.accordionTitle]}\r\n                      </Card.Title>\r\n                    </CustomToggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey={String(accordionObject[props.accordionPrimaryKey])}>\r\n                    <Card.Body>\r\n                    {props.accordionComponent.get(item)} \r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n               </>)})}  \r\n          </Card>\r\n          \r\n      </Accordion>\r\n    </AtAccordion>\r\n    )}\r\n\r\nexport default injectIntl(CustomAccordion);"]},"metadata":{},"sourceType":"module"}