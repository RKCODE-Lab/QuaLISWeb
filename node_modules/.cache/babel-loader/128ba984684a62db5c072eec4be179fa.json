{"ast":null,"code":"export var stringOperatorData=[{label:\"equals(=)\",value:1,items:{label:\"==\",value:1,symbol:\"$eq\",isInputVisible:false,symbolType:1,needmasterdata:false}},{label:\"!=\",value:2,items:{label:\"!=\",value:2,symbol:\"$ne\",isInputVisible:false,symbolType:1,needmasterdata:false}}// { label: \"Is empty\", value: 3, items: { label: \"Is empty\", value: 3, symbol: \"$eq\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\n// { label: \"Is not empty\", value: 4, items: { label: \"Is not empty\", value: 4, symbol: \"$ne\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\n// { label: \"Is null\", value: 5, items: { label: \"Is null\", value: 5, symbol: \"$nnull\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\n// { label: \"Is not null\", value: 6, items: { label: \"Is not null\", value: 6, symbol: \"$null\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\n// { label: \"Like\", value: 7, items: { label: \"Like\", value: 7, symbol: \"$like\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\n// { label: \"Not like\", value: 8, items: { label: \"Not like\", value: 8, symbol: \"$nlike\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\n// { label: \"Starts with\", value: 9, items: { label: \"Starts with\", value: 9, symbol: \"$like\", replacewith: \"'_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\n// { label: \"Ends with\", value: 10, items: { label: \"Ends with\", value: 10, symbol: \"$like\", replacewith: \"'%_'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\n// { label: \"Any in\", value: 11, items: { label: \"Any in\", value: 3, symbol: \"$in\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } },\n// { label: \"Not in\", value: 12, items: { label: \"Not in\", value: 4, symbol: \"$nin\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } }\n];export var numericOperatorData=[{label:\"equals(=)\",value:1,items:{label:\"==\",value:1,symbol:\"$eq\",isInputVisible:true,symbolType:1}},{label:\"!=\",value:2,items:{label:\"!=\",value:2,symbol:\"$ne\",isInputVisible:true,symbolType:1}},{label:\"<\",value:3,items:{label:\"<\",value:3,symbol:\"$lt\",isInputVisible:true,symbolType:1}},{label:\"<=\",value:4,items:{label:\"<=\",value:4,symbol:\"$lte\",isInputVisible:true,symbolType:1}},{label:\">\",value:5,items:{label:\">\",value:5,symbol:\"$gt\",isInputVisible:true,symbolType:1}},{label:\">=\",value:6,items:{label:\">=\",value:6,symbol:\"$gte\",isInputVisible:true,symbolType:1}},// { label: \"Between\", value: 7, items: { label: \"Between\", value: 7, symbol: \"\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\n// { label: \"Not between\", value: 8, items: { label: \"Not between\", value: 8, symbol: \"$not\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\n{label:\"Is null\",value:9,items:{label:\"Is null\",value:9,symbol:\"$nnull\",isInputVisible:false,symbolType:3}},{label:\"Is not null\",value:10,items:{label:\"Is not null\",value:10,symbol:\"$null\",isInputVisible:false,symbolType:3}}];export var conditionalOperatorData=[{label:\"equals (=)\",value:1,items:{label:\"equals (=)\",value:1,symbol:\"$eq\",isInputVisible:true,ismulti:false,symbolType:1}},{label:\"not equals (!=)\",value:2,items:{label:\"not equals (!=)\",value:2,symbol:\"$ne\",isInputVisible:true,ismulti:false,symbolType:1}},{label:\"Any in\",value:3,items:{label:\"Any in\",value:3,symbol:\"$in\",isInputVisible:true,ismulti:true,symbolType:6}},{label:\"Not in\",value:4,items:{label:\"Not in\",value:4,symbol:\"$nin\",isInputVisible:true,ismulti:true,symbolType:6}},{label:\"Is null\",value:5,items:{label:\"Is null\",value:5,symbol:\"$nnull\",isInputVisible:false,ismulti:false,symbolType:3}},{label:\"Is not null\",value:6,items:{label:\"Is not null\",value:6,symbol:\"$null\",isInputVisible:false,ismulti:false,symbolType:3}}];export var joinConditionData=[{label:\"Inner join\",value:1,items:{label:\"Inner join\",value:1,symbol:\"inner\"}},{label:\"Left join\",value:2,items:{label:\"Left join\",value:2,symbol:\"left\"}},{label:\"Right join\",value:3,items:{label:\"Right join\",value:3,symbol:\"right\"}}];export var aggregateFunction=[{label:\"Min\",value:1,items:{label:\"Min\",value:1}},{label:\"Max\",value:2,items:{label:\"Max\",value:2}},{label:\"Sum\",value:3,items:{label:\"Sum\",value:3}},{label:\"Count\",value:4,items:{label:\"Count\",value:4}},{label:\"Avg\",value:5,items:{label:\"Avg\",value:5}}];export var orderByList=[{label:\"asc\",value:1,items:{label:\"asc\",value:1}},{label:\"desc\",value:2,items:{label:\"desc\",value:2}}];","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/configurationmaster/RuleEngineQueryBuilderData.js"],"names":["stringOperatorData","label","value","items","symbol","isInputVisible","symbolType","needmasterdata","numericOperatorData","conditionalOperatorData","ismulti","joinConditionData","aggregateFunction","orderByList"],"mappings":"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","sourcesContent":["export const stringOperatorData = [\r\n    { label: \"equals(=)\", value: 1, items: { label: \"==\", value: 1, symbol: \"$eq\", isInputVisible: false, symbolType: 1, needmasterdata: false } },\r\n    { label: \"!=\", value: 2, items: { label: \"!=\", value: 2, symbol: \"$ne\", isInputVisible: false, symbolType: 1, needmasterdata: false } },\r\n    // { label: \"Is empty\", value: 3, items: { label: \"Is empty\", value: 3, symbol: \"$eq\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\r\n    // { label: \"Is not empty\", value: 4, items: { label: \"Is not empty\", value: 4, symbol: \"$ne\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\r\n    // { label: \"Is null\", value: 5, items: { label: \"Is null\", value: 5, symbol: \"$nnull\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\r\n    // { label: \"Is not null\", value: 6, items: { label: \"Is not null\", value: 6, symbol: \"$null\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\r\n    // { label: \"Like\", value: 7, items: { label: \"Like\", value: 7, symbol: \"$like\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    // { label: \"Not like\", value: 8, items: { label: \"Not like\", value: 8, symbol: \"$nlike\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    // { label: \"Starts with\", value: 9, items: { label: \"Starts with\", value: 9, symbol: \"$like\", replacewith: \"'_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    // { label: \"Ends with\", value: 10, items: { label: \"Ends with\", value: 10, symbol: \"$like\", replacewith: \"'%_'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    // { label: \"Any in\", value: 11, items: { label: \"Any in\", value: 3, symbol: \"$in\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } },\r\n    // { label: \"Not in\", value: 12, items: { label: \"Not in\", value: 4, symbol: \"$nin\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } }\r\n];\r\n\r\nexport const numericOperatorData = [\r\n    { label: \"equals(=)\", value: 1, items: { label: \"==\", value: 1, symbol: \"$eq\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"!=\", value: 2, items: { label: \"!=\", value: 2, symbol: \"$ne\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"<\", value: 3, items: { label: \"<\", value: 3, symbol: \"$lt\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"<=\", value: 4, items: { label: \"<=\", value: 4, symbol: \"$lte\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \">\", value: 5, items: { label: \">\", value: 5, symbol: \"$gt\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \">=\", value: 6 , items: { label: \">=\", value: 6, symbol: \"$gte\", isInputVisible: true, symbolType: 1 }},\r\n    // { label: \"Between\", value: 7, items: { label: \"Between\", value: 7, symbol: \"\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\r\n    // { label: \"Not between\", value: 8, items: { label: \"Not between\", value: 8, symbol: \"$not\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\r\n    { label: \"Is null\", value: 9, items: { label: \"Is null\", value: 9, symbol: \"$nnull\", isInputVisible: false, symbolType: 3 } },\r\n    { label: \"Is not null\", value: 10, items: { label: \"Is not null\", value: 10, symbol: \"$null\", isInputVisible: false, symbolType: 3 } }\r\n];\r\n\r\nexport const conditionalOperatorData = [\r\n    { label: \"equals (=)\", value: 1, items: { label: \"equals (=)\", value: 1, symbol: \"$eq\", isInputVisible: true, ismulti: false, symbolType: 1 } },\r\n    { label: \"not equals (!=)\", value: 2, items: { label: \"not equals (!=)\", value: 2, symbol: \"$ne\", isInputVisible: true, ismulti: false, symbolType: 1 } },\r\n    { label: \"Any in\", value: 3, items: { label: \"Any in\", value: 3, symbol: \"$in\", isInputVisible: true, ismulti: true, symbolType: 6 } },\r\n    { label: \"Not in\", value: 4, items: { label: \"Not in\", value: 4, symbol: \"$nin\", isInputVisible: true, ismulti: true, symbolType: 6 } },\r\n    { label: \"Is null\", value: 5, items: { label: \"Is null\", value: 5, symbol: \"$nnull\", isInputVisible: false, ismulti: false, symbolType: 3 } },\r\n    { label: \"Is not null\", value: 6, items: { label: \"Is not null\", value: 6, symbol: \"$null\", isInputVisible: false, ismulti: false, symbolType: 3 } }\r\n];\r\n\r\nexport const joinConditionData = [\r\n    { label: \"Inner join\", value: 1, items: { label: \"Inner join\", value: 1, symbol: \"inner\" } },\r\n    { label: \"Left join\", value: 2, items: { label: \"Left join\", value: 2, symbol: \"left\" } },\r\n    { label: \"Right join\", value: 3, items: { label: \"Right join\", value: 3, symbol: \"right\" } }\r\n];\r\n\r\nexport const aggregateFunction = [\r\n    { label: \"Min\", value: 1, items: { label: \"Min\", value: 1 } },\r\n    { label: \"Max\", value: 2, items: { label: \"Max\", value: 2 } },\r\n    { label: \"Sum\", value: 3, items: {  label: \"Sum\", value: 3 } },\r\n    { label: \"Count\", value: 4, items: { label: \"Count\", value: 4 } },\r\n    { label: \"Avg\", value: 5, items: {  label: \"Avg\", value: 5 } }\r\n];\r\n\r\nexport const orderByList = [\r\n    { label: \"asc\", value: 1, items: { label: \"asc\", value: 1 } },\r\n    { label: \"desc\", value: 2, items: { label: \"desc\", value: 2 } }\r\n];"]},"metadata":{},"sourceType":"module"}