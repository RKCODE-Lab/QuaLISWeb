{"ast":null,"code":"import React from'react';import{Button,Row,Col}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{faSave}from'@fortawesome/free-regular-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../../src/components/data-grid/data-grid.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{process}from'@progress/kendo-data-query';//import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n//import FormInput from '../../components/form-input/form-input.component';\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nvar AddPlantGroup=function AddPlantGroup(props){return/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FUSIONSITE\"}),isSearchable:true,name:\"ssitecode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.fusionplantSite||[],value:props.selectedRecord[\"ssitecode\"]||\"\",defaultValue:props.selectedRecord[\"ssitecode\"],onChange:function onChange(event){return props.onComboChange(event,\"ssitecode\",1);}//onChange={(event) => props.onComboChange(event, \"ncontrolBasedparameter\", 1)}\n,closeMenuOnSelect:true,isMulti:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FUSIONPRANENTPLANT\"}),isSearchable:true,name:\"splantparentcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.selectedRecord[\"ssitecode\"]?props.fusionparentplants||[]:[],value:props.selectedRecord[\"splantparentcode\"]||\"\",defaultValue:props.selectedRecord[\"splantparentcode\"]//onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n,onChange:function onChange(event){return props.onComboChange(event,\"splantparentcode\",2);},closeMenuOnSelect:true,isMulti:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FUSIONCHILDPLANTS\"}),isSearchable:true,name:\"splantchildcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.selectedRecord[\"splantparentcode\"]!==undefined?props.fusionchildplants||[]:[],value:props.selectedRecord[\"splantchildcode\"]||\"\",defaultValue:props.selectedRecord[\"splantchildcode\"]//onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n,onChange:function onChange(event){return props.onComboChange(event,\"splantchildcode\",3);},closeMenuOnSelect:true,isMulti:props.operation===\"create\"?true:false})));};export default injectIntl(AddPlantGroup);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/AddPlantGroup.js"],"names":["React","Button","Row","Col","FormattedMessage","injectIntl","faSave","FontAwesomeIcon","DataGrid","FormSelectSearch","process","AddPlantGroup","props","intl","formatMessage","id","fusionplantSite","selectedRecord","event","onComboChange","fusionparentplants","undefined","fusionchildplants","operation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../../src/components/data-grid/data-grid.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n//import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n//import FormInput from '../../components/form-input/form-input.component';\r\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddPlantGroup = (props) => {\r\n        return (\r\n                <Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONSITE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"ssitecode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.fusionplantSite || []}\r\n                                        value={props.selectedRecord[\"ssitecode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"ssitecode\"]}\r\n                                        onChange={(event) => props.onComboChange(event, \"ssitecode\", 1)}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ncontrolBasedparameter\", 1)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONPRANENTPLANT\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"splantparentcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.selectedRecord[\"ssitecode\"]?props.fusionparentplants || []:[]}\r\n                                        value={props.selectedRecord[\"splantparentcode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"splantparentcode\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"splantparentcode\", 2)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONCHILDPLANTS\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"splantchildcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={ props.selectedRecord[\"splantparentcode\"]!==undefined? props.fusionchildplants || []:[]}\r\n                                        value={props.selectedRecord[\"splantchildcode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"splantchildcode\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"splantchildcode\", 3)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={props.operation === \"create\" ? true : false}\r\n                                />\r\n                        </Col>  \r\n                </Col>\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddPlantGroup);"]},"metadata":{},"sourceType":"module"}