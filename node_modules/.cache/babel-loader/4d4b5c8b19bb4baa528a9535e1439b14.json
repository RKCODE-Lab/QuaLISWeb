{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddTreeview.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormInput from '../../components/form-input/form-input.component';\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\n\nconst AddTreeview = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLESTORAGELOCATIONNAME\"\n    }),\n    name: \"ssamplestoragelocationname\",\n    type: \"text\",\n    onChange: event => props.onInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLESTORAGELOCATIONNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TreeViewEditable, {\n    id: \"samplestoragelocation\",\n    name: \"samplestoragelocation\" // label=\"Sample Storage Location\"\n    ,\n    placeholder: \"Enter samplestoragelocation\",\n    data: props.treeData,\n    expandIcons: true,\n    item: props.itemRender,\n    onExpandChange: props.onExpandChange,\n    onItemClick: props.onItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default injectIntl(AddTreeview);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/AddTreeview.jsx"],"names":["React","injectIntl","Row","Col","Form","FormInput","TreeViewEditable","AddTreeview","props","intl","formatMessage","id","event","onInputChange","selectedRecord","treeData","itemRender","onExpandChange","onItemClick"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAO,iCAAP;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADT;AAEE,IAAA,IAAI,EAAE,4BAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAGC,KAAD,IAAWJ,KAAK,CAACK,aAAN,CAAoBD,KAApB,CAJvB;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALf;AAME,IAAA,KAAK,EAAEH,KAAK,CAACM,cAAN,GAAuBN,KAAK,CAACM,cAAN,CAAqB,4BAArB,CAAvB,GAA4E,EANrF;AAOE,IAAA,WAAW,EAAE,IAPf;AAQE,IAAA,QAAQ,EAAE,IARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,eAyBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,EAAE,EAAC,uBADL;AAEE,IAAA,IAAI,EAAC,uBAFP,CAGE;AAHF;AAIE,IAAA,WAAW,EAAC,6BAJd;AAKE,IAAA,IAAI,EAAEN,KAAK,CAACO,QALd;AAME,IAAA,WAAW,EAAE,IANf;AAOE,IAAA,IAAI,EAAEP,KAAK,CAACQ,UAPd;AAQE,IAAA,cAAc,EAAER,KAAK,CAACS,cARxB;AASE,IAAA,WAAW,EAAET,KAAK,CAACU,WATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CADF;AAwCD,CAzCD;;AA0CA,eAAejB,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\n\r\nconst AddTreeview = (props) => {\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        {/* <Form.Control\r\n          id='ssamplestoragelocationname'\r\n          name={\"ssamplestoragelocationname\"}\r\n          type='text'\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          onChange={props.onInputChange}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n\r\n        /> */}\r\n        <FormInput\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          name={\"ssamplestoragelocationname\"}\r\n          type=\"text\"\r\n          onChange={(event) => props.onInputChange(event)}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n          isMandatory={true}\r\n          required={true}         \r\n        />\r\n      </Col>\r\n      <Col md={12}>\r\n        <TreeViewEditable\r\n          id=\"samplestoragelocation\"\r\n          name=\"samplestoragelocation\"\r\n          // label=\"Sample Storage Location\"\r\n          placeholder=\"Enter samplestoragelocation\"\r\n          data={props.treeData}\r\n          expandIcons={true}\r\n          item={props.itemRender}\r\n          onExpandChange={props.onExpandChange}\r\n          onItemClick={props.onItemClick}\r\n        />\r\n      </Col>\r\n    </Row>)\r\n}\r\nexport default injectIntl(AddTreeview);\r\n"]},"metadata":{},"sourceType":"module"}