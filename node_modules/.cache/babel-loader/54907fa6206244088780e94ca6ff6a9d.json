{"ast":null,"code":"import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';export function SyncRecords(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/synchronization/syncRecords\",{'userinfo':userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SyncConfigurationAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","toast","SyncRecords","userInfo","dispatch","post","then","response","type","payload","loading","catch","error","status","message","warn","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAGA,MAAO,SAASC,CAAAA,WAAT,CAAsBC,QAAtB,CAAgC,CACnC,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,KAAK,CAACO,IAAN,CAAW,8BAAX,CACI,CAAE,WAAYF,QAAd,CADJ,EAEKG,IAFL,CAEU,SAAAC,QAAQ,CAAI,CAEdH,QAAQ,CAAC,CACLI,IAAI,CAAET,cADD,CAELU,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAOH,CAXL,EAYKC,KAZL,CAYW,SAAAC,KAAK,CAAI,CACZR,QAAQ,CAAC,CACLI,IAAI,CAAET,cADD,CAELU,OAAO,CAAE,CACLC,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACL,QAAN,CAAeM,MAAf,GAA0B,GAA9B,CAAmC,CAC/BZ,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAEO,CACHb,KAAK,CAACc,IAAN,CAAWH,KAAK,CAACL,QAAN,CAAeS,IAA1B,EACH,CACJ,CAxBL,EAyBH,CA3BD,CA4BH","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport function SyncRecords (userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/synchronization/syncRecords\",\r\n            { 'userinfo': userInfo})\r\n            .then(response => {             \r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {                       \r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}