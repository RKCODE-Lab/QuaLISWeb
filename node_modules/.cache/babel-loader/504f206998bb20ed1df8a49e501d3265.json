{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import{Grid,GridColumn}from'@progress/kendo-react-grid';import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import CustomSwitch from'../../components/custom-switch/custom-switch.component';// import ColumnMenu from '../../components/data-grid/ColumnMenu';\nimport{transactionStatus}from'../../components/Enumeration';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{LocalizationProvider}from'@progress/kendo-react-intl';var EditApprovalParameter=/*#__PURE__*/function(_React$Component){_inherits(EditApprovalParameter,_React$Component);var _super=_createSuper(EditApprovalParameter);function EditApprovalParameter(props){var _this;_classCallCheck(this,EditApprovalParameter);_this=_super.call(this,props);//let group=this.props.nsubsampleneed===transactionStatus.NO?[{ field: 'sarno' },{ field: 'stestsynonym' }]: [{ field: 'ssamplearno' },{ field: 'stestsynonym' }]\n_this.dataStateChange=function(event){_this.setState({data:process(_this.props.ApprovalParamEdit,event.dataState),dataState:event.dataState});};_this.expandChange1=function(event){var expandField=event.target.props.expandField||\"\";event.dataItem[expandField]=event.value;_this.setState({data:process(_this.props.ApprovalParamEdit,_this.state.dataState),dataState:_this.state.dataState});};_this.expandChange=function(event){// const data = process(this.props.ApprovalParamEdit,this.state.dataState);\n// console.log(\"data:\", data, event);\nvar isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;// event.dataItem.aggregates && event.dataItem.aggregates.length > 0 ? event.dataItem.aggregates \n// :true\n// : event.dataItem.expanded;\nif(_this.props.hasChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.props.handleExpandChange(event,_this.props.dataState);}else{event.dataItem.expanded=event.value;// this.setState({\n//     isExpanded,\n//     data: process(this.props.ApprovalParamEdit, this.state.dataState),\n//     dataState: this.state.dataState\n// });\n_this.setState({isExpanded:isExpanded});}};var group=_this.props.nsubsampleneed===transactionStatus.NO?[{field:'sarno'}]:[{field:'ssamplearno'}];_this.state={dataState:{skip:0,take:10,group:group},isExpanded:false,data:process(_this.props.ApprovalParamEdit,{skip:0,take:10,group:group})};return _this;}_createClass(EditApprovalParameter,[{key:\"render\",value:// columnProps(field) {\n//     return {\n//         field: field,\n//         columnMenu: ColumnMenu,\n//         headerClassName: this.isColumnActive(field, this.state.dataState) ? 'active' : ''\n//     };\n// }\n// isColumnActive(field, dataState) {\n//     return GridColumnMenuFilter.active(field, dataState.filter)\n// }\nfunction render(){var _this2=this;return/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Grid,Object.assign({sortable:true,resizable:true,scrollable:\"scrollable\"//groupable={false}\n,onExpandChange:this.expandChange,expandField:\"expanded\",detail:false,pageable:{buttonCount:4,pageSizes:true,previousNext:false},data:this.state.data},this.state.dataState,{onDataStateChange:this.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{title:this.props.intl.formatMessage({id:\"IDS_PARAMETER\"})// {...this.columnProps(\"sparametersynonym\")}\n,field:\"sparametersynonym\"}),/*#__PURE__*/React.createElement(GridColumn,{title:this.props.intl.formatMessage({id:\"IDS_TESTSYNONYM\"}),field:\"stestsynonym\"}),/*#__PURE__*/React.createElement(GridColumn,{field:\"nreportmandatory\",title:this.props.intl.formatMessage({id:\"IDS_REPORTMANDATORY\"}),cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"ntransactionresultcode\"],role:\"button\",onChange:function onChange(event){return _this2.props.changeMandatory(event,row[\"dataItem\"]);},checked:_this2.props.selectedRecord[row[\"dataItem\"][\"ntransactionresultcode\"]]?_this2.props.selectedRecord[row[\"dataItem\"][\"ntransactionresultcode\"]]===transactionStatus.YES?true:false:row[\"dataItem\"][\"nreportmandatory\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nreportmandatory\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props!==previousProps){// let group = this.props.nsubsampleneed === transactionStatus.NO ? [{ field: 'sarno' }] : [{ field: 'ssamplearno' }]\n//let group=this.props.nsubsampleneed===transactionStatus.NO?[{ field: 'sarno' },{ field: 'stestsynonym' }]: [{ field: 'ssamplearno' },{ field: 'stestsynonym' }]\nthis.setState({data:process(this.props.ApprovalParamEdit,this.state.dataState),//dataState: {skip:0,take:10,group}\ndataState:this.state.dataState});}}}]);return EditApprovalParameter;}(React.Component);export default injectIntl(EditApprovalParameter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/EditApprovalParameter.jsx"],"names":["process","Grid","GridColumn","React","Col","Row","injectIntl","CustomSwitch","transactionStatus","AtTableWrap","LocalizationProvider","EditApprovalParameter","props","dataStateChange","event","setState","data","ApprovalParamEdit","dataState","expandChange1","expandField","target","dataItem","value","state","expandChange","isExpanded","expanded","undefined","aggregates","hasChild","handleExpandChange","group","nsubsampleneed","NO","field","skip","take","actionColWidth","buttonCount","pageSizes","previousNext","intl","formatMessage","id","row","rowType","changeMandatory","selectedRecord","YES","dataIndex","columnIndex","previousProps","Component"],"mappings":"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","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n// import ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport {  LocalizationProvider } from '@progress/kendo-react-intl';\r\n\r\nclass EditApprovalParameter extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //let group=this.props.nsubsampleneed===transactionStatus.NO?[{ field: 'sarno' },{ field: 'stestsynonym' }]: [{ field: 'ssamplearno' },{ field: 'stestsynonym' }]\r\n        const group = this.props.nsubsampleneed === transactionStatus.NO ? [{ field: 'sarno' }] : [{ field: 'ssamplearno' }]\r\n        this.state = {\r\n            dataState: { skip: 0, take: 10, group },\r\n            isExpanded: false,\r\n            data: process(this.props.ApprovalParamEdit, { skip: 0, take: 10, group })\r\n        }\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            data: process(this.props.ApprovalParamEdit, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    expandChange1 = (event) => {\r\n        const expandField = event.target.props.expandField || \"\";\r\n        event.dataItem[expandField] = event.value;\r\n        this.setState({\r\n            data: process(this.props.ApprovalParamEdit, this.state.dataState),\r\n            dataState: this.state.dataState\r\n        });\r\n    };\r\n\r\n\r\n    expandChange = (event) => {\r\n        // const data = process(this.props.ApprovalParamEdit,this.state.dataState);\r\n        // console.log(\"data:\", data, event);\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ? event.dataItem.aggregates : event.dataItem.expanded;\r\n        // event.dataItem.aggregates && event.dataItem.aggregates.length > 0 ? event.dataItem.aggregates \r\n        // :true\r\n        // : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = event.value;\r\n\r\n            // this.setState({\r\n            //     isExpanded,\r\n            //     data: process(this.props.ApprovalParamEdit, this.state.dataState),\r\n            //     dataState: this.state.dataState\r\n            // });\r\n            this.setState({\r\n                isExpanded\r\n            });\r\n\r\n        }\r\n    }\r\n    // columnProps(field) {\r\n\r\n    //     return {\r\n    //         field: field,\r\n    //         columnMenu: ColumnMenu,\r\n    //         headerClassName: this.isColumnActive(field, this.state.dataState) ? 'active' : ''\r\n    //     };\r\n\r\n    // }\r\n\r\n    // isColumnActive(field, dataState) {\r\n    //     return GridColumnMenuFilter.active(field, dataState.filter)\r\n    // }\r\n    render() {\r\n        return (\r\n            <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                 <LocalizationProvider language=\"lang\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Grid\r\n                            sortable\r\n                            resizable\r\n                            scrollable={\"scrollable\"}\r\n                            //groupable={false}\r\n                            onExpandChange={this.expandChange}\r\n                            expandField=\"expanded\"\r\n                            detail={false}\r\n                            pageable={{ buttonCount: 4, pageSizes: true, previousNext: false }}\r\n                            data={this.state.data}\r\n                            {...this.state.dataState}\r\n                            onDataStateChange={this.dataStateChange}\r\n                        >\r\n                            <GridColumn\r\n                                title={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                // {...this.columnProps(\"sparametersynonym\")}\r\n                                field={\"sparametersynonym\"}\r\n                            />\r\n                            <GridColumn\r\n                                title={this.props.intl.formatMessage({ id: \"IDS_TESTSYNONYM\" })}\r\n                                field={\"stestsynonym\"}\r\n                            />\r\n                            <GridColumn\r\n                                field={\"nreportmandatory\"}\r\n                                title={this.props.intl.formatMessage({ id: \"IDS_REPORTMANDATORY\" })}\r\n                                cell={(row) => (\r\n                                    row.rowType === \"groupHeader\" ? null :\r\n                                        <td>\r\n                                            <CustomSwitch\r\n                                                type=\"switch\"\r\n                                                id={row[\"dataItem\"][\"ntransactionresultcode\"]}\r\n                                                role=\"button\"\r\n                                                onChange={(event) => this.props.changeMandatory(event, row[\"dataItem\"])}\r\n                                                checked={this.props.selectedRecord[row[\"dataItem\"][\"ntransactionresultcode\"]] ? this.props.selectedRecord[row[\"dataItem\"][\"ntransactionresultcode\"]] === transactionStatus.YES ? true : false :\r\n                                                    row[\"dataItem\"][\"nreportmandatory\"] === transactionStatus.YES ? true : false}\r\n                                                name={row[\"dataItem\"][\"nreportmandatory\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                        </td>)}\r\n                            />\r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n                </LocalizationProvider>\r\n            </AtTableWrap>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props !== previousProps) {\r\n            // let group = this.props.nsubsampleneed === transactionStatus.NO ? [{ field: 'sarno' }] : [{ field: 'ssamplearno' }]\r\n\r\n            //let group=this.props.nsubsampleneed===transactionStatus.NO?[{ field: 'sarno' },{ field: 'stestsynonym' }]: [{ field: 'ssamplearno' },{ field: 'stestsynonym' }]\r\n            this.setState({\r\n                data: process(this.props.ApprovalParamEdit, this.state.dataState),\r\n                //dataState: {skip:0,take:10,group}\r\n                dataState: this.state.dataState\r\n            });\r\n        }\r\n    }\r\n}\r\nexport default injectIntl(EditApprovalParameter)"]},"metadata":{},"sourceType":"module"}