{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\protocol\\\\Protocol.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport SplitterLayout from \"react-splitter-layout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faPalette } from '@fortawesome/free-solid-svg-icons';\nimport { process } from '@progress/kendo-data-query';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ContentPanel } from '../../components/App.styles';\nimport { SampleType, transactionStatus, attachmentType } from '../../components/Enumeration';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport CustomPopOver from '../../components/customPopover';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { constructOptionList, getControlMap, comboChild, deleteAttachmentDropZone, showEsign, convertDateTimetoStringDBFormat, onDropAttachFileList, create_UUID, Lims_JSON_stringify, getSameRecordFromTwoArrays, sortData } from '../../components/CommonScript';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport Esign from '../audittrail/Esign';\nimport { updateStore, callService, crudMaster, getProtocolTemplateByConfigVersion, ProtocolFilterSubmit, getPreviewTemplate, getProtocolDetail, addProtocolFile, viewAttachment, getChildValues, validateEsignforProtocol, completeProtocolAction, dynamicAction, getEditComboService, updateProtocolAction, rejectProtocolAction, copyProtocolAction, insertProtocolAction, filterTransactionList, getProduct } from '../../actions';\nimport ProtocolFilter from './ProtocolFilter';\nimport ProtocolFileTab from './ProtocolFileTab';\nimport AddProtocolFile from './AddProtocolFile';\nimport CopyProtocol from './CopyProtocol';\nimport ProtocolHistoryTab from './ProtocolHistoryTab';\nimport ProtocolView from './ProtocolView';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Protocol extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let inputParamData = {};\n\n        if (fieldName === 'napprovalconfigversioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\n            inputParamData = {\n              napprovalconfigversioncode: comboData.value,\n              nFilterFlag: true,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultApprovalVersionValue: comboData.item\n            };\n            this.props.getProtocolTemplateByConfigVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\n            const masterData = { ...this.props.Login.masterData,\n              defaultDesignTemplateMappingValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntransactionstatus') {\n          if (comboData.value !== this.props.Login.masterData.defaultStatusValue.ntransactionstatus) {\n            const masterData = { ...this.props.Login.masterData,\n              defaultStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      const realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\n      const realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\n      const realStatusValue = this.props.Login.masterData.defaultStatusValue;\n      const masterData = { ...this.props.Login.masterData,\n        realApprovalVersionValue,\n        realDesignTemplateMappingValue,\n        realStatusValue\n      };\n      const inputData = {\n        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1,\n        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode && parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\n        ntranscode: this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntransactionstatus || -1,\n        userinfo: this.props.Login.userInfo\n      };\n\n      if (inputData.napprovalconfigversioncode !== -1 && inputData.ndesigntemplatemappingcode !== -1 && inputData.ntransactionstatus !== -1) {\n        const inputParam = {\n          masterData,\n          inputData,\n          protocolSkip: this.state.protocolSkip,\n          protocolTake: this.state.protocolTake,\n          searchRef: this.searchRef\n        };\n        this.props.ProtocolFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\n      const realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\n      const realStatusValue = this.props.Login.masterData.defaultStatusValue;\n      const masterData = { ...this.props.Login.masterData,\n        realApprovalVersionValue,\n        realDesignTemplateMappingValue,\n        realStatusValue\n      };\n      const inputData = {\n        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1,\n        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode && parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\n        ntranscode: this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntransactionstatus || -1,\n        userinfo: this.props.Login.userInfo\n      };\n      const inputParam = {\n        masterData,\n        inputData,\n        protocolSkip: this.state.protocolSkip,\n        protocolTake: this.state.protocolTake,\n        searchRef: this.searchRef\n      };\n      this.props.ProtocolFilterSubmit(inputParam);\n    };\n\n    this.getProtocolComboService = protocolAddParam => {\n      const screenName = protocolAddParam.screenName;\n      const operation = protocolAddParam.operation;\n      const masterData = protocolAddParam.masterData;\n      const selectedRecord = protocolAddParam.selectedRecord;\n      const userInfo = protocolAddParam.userInfo;\n      const controlCode = protocolAddParam.ncontrolCode;\n      let importData;\n      let data = [];\n      const withoutCombocomponent = [];\n      const mandatoryProtocolFields = [];\n      const Layout = this.props.Login.masterData.dynamicDesignMapping && this.props.Login.masterData.dynamicDesignMapping[0].jsondata;\n      const templateStatus = this.props.Login.masterData.dynamicDesignMapping && this.props.Login.masterData.dynamicDesignMapping[0].ntransactionstatus;\n\n      if (Layout !== undefined && Layout !== null) {\n        if (templateStatus == transactionStatus.RETIRED) {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\"\n          }));\n        } else {\n          Layout.map(row => {\n            row.children.map(column => {\n              column.children.map(component => {\n                if (component.hasOwnProperty(\"children\")) {\n                  component.children.map(componentrow => {\n                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                      data.push(componentrow);\n                    } else {\n                      withoutCombocomponent.push(componentrow);\n                    }\n\n                    if (componentrow.mandatory === true) {\n                      mandatoryProtocolFields.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                        \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                      });\n                    }\n                  });\n                } else {\n                  component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n\n                  if (component.mandatory === true) {\n                    mandatoryProtocolFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": component.label,\n                      \"dataField\": component.label,\n                      \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                      \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                    });\n                  }\n                }\n              });\n              this.setState({\n                mandatoryProtocolFields: mandatoryProtocolFields\n              });\n            });\n          });\n          const comboComponents = data;\n          let childColumnList = {};\n          data.map(columnList => {\n            const val = comboChild(data, columnList, childColumnList, true);\n            data = val.data;\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          const mapOfFilterRegData = {\n            nsampletypecode: parseInt(SampleType.PROTOCOL)\n          };\n          this.props.getPreviewTemplate(masterData, userInfo, controlCode, data, selectedRecord, childColumnList, comboComponents, withoutCombocomponent, false, true, mapOfFilterRegData, false, operation, screenName, importData);\n        }\n      } else {\n        // ALPD-5466 - Gowtham R - 20/02/2025 - Protocol-->While Add the Protocol IDS Alert Popup Shown\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CONFIGUREPROTOCOLTEMPLATE\"\n        }));\n      }\n    };\n\n    this.getEditProtocolComboService = protocolEditParam => {\n      protocolEditParam[\"toedit\"] = this.props.Login.masterData.selectedProtocol[0];\n      let data = [];\n      let editablecombo = [];\n      const withoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.dynamicDesignMapping && this.props.Login.masterData.dynamicDesignMapping[0].jsondata;\n\n      if (Layout !== undefined) {\n        Layout.map(row => {\n          return row.children.map(column => {\n            return column.children.map(component => {\n              if (component.hasOwnProperty(\"children\")) {\n                component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\") {\n                    data.push(componentrow);\n                  } else {\n                    withoutCombocomponent.push(componentrow);\n                  }\n\n                  if (componentrow.inputtype === \"combo\" && componentrow.iseditablereadonly && componentrow.iseditablereadonly === true) {\n                    editablecombo.push(componentrow);\n                  }\n\n                  return null;\n                });\n              } else {\n                if (component.inputtype === \"combo\" && component.iseditablereadonly && component.iseditablereadonly === true) {\n                  editablecombo.push(component);\n                } else if (component.inputtype === \"combo\") {\n                  data.push(component);\n                } else {\n                  withoutCombocomponent.push(component);\n                }\n              }\n            });\n          });\n        });\n        const comboComponents = data;\n        let childColumnList = {};\n        data.map(columnList => {\n          const val = comboChild(data, columnList, childColumnList, true);\n          data = val.data;\n          childColumnList = val.childColumnList;\n          return null;\n        });\n        this.props.getEditComboService(protocolEditParam, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, editablecombo);\n      } else {\n        // ALPD-5466 - Gowtham R - 20/02/2025 - Protocol-->While Add the Protocol IDS Alert Popup Shown\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CONFIGUREPROTOCOLTEMPLATE\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let screenName = this.props.Login.screenName;\n      let operation = this.props.Login.operation;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"complete\" || this.props.Login.operation === \"dynamicAction\" || this.props.Login.operation === \"reject\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        screenName = \"\";\n        operation = \"\";\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          screenName,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforProtocol(inputParam, \"openModal\");\n    };\n\n    this.dynamicHandleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDynamicComboChange = (comboData, control, customName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let comboName = customName || control.label;\n\n      if (comboData) {\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          \"pkey\": control.valuemember,\n          \"nquerybuildertablecode\": control.nquerybuildertablecode,\n          source: control.source\n        };\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      const inputParam = {\n        child: control.child,\n        source: control.source,\n        primarykeyField: control.valuemember,\n        value: comboData ? comboData.value : -1,\n        item: comboData ? comboData.item : \"\",\n        label: comboData ? comboName : \"\",\n        nameofdefaultcomp: control.name,\n        screenName: \"IDS_PROTOCOL\"\n      };\n\n      if (comboData) {\n        let parentList = [];\n        let childComboList = [];\n        let childColumnList = {};\n        let product = false;\n        let productCategory = false;\n        let nproductcatcode = -1;\n        let nproductcode = -1;\n\n        if (control.name === 'Product Category') {\n          const Product = this.props.Login.comboComponents.filter(x => x.name === \"Product\");\n          nproductcatcode = selectedRecord[control.label] && selectedRecord[control.label]['value'];\n        }\n\n        if (control.child && control.child.length > 0) {\n          childComboList = getSameRecordFromTwoArrays(this.props.Login.comboComponents, control.child, \"label\");\n          childColumnList = {};\n          childComboList.map(columnList => {\n            const val = comboChild(this.props.Login.comboComponents, columnList, childColumnList, false);\n            childColumnList = val.childColumnList;\n            return null;\n          });\n          parentList = getSameRecordFromTwoArrays(this.props.Login.withoutCombocomponent, control.child, \"label\");\n          const mapOfFilter = {\n            nproductcode,\n            nproductcatcode,\n            nsampletypecode: -1,\n            nprojectmastercode: -1,\n            nprojectSpecReqd: -1,\n            nneedsubsample: transactionStatus.NO,\n            nportalrequired: -1,\n            ntestgroupspecrequired: transactionStatus.NO\n          };\n          this.props.getChildValues(inputParam, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.props.withoutCombocomponent, [...childComboList, ...parentList], productCategory, product, mapOfFilter, false, false, false, false, false, undefined, false, this.props.Login.comboComponents);\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord,\n              loadCustomSearchFilter: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericBlur = control => {\n      const selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord[control.label]) {\n        if (control.max) {\n          if (!(selectedRecord[control.label] < parseFloat(control.max))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedRecord[control.label] > parseFloat(control.min))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"agree\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        if (event.target.value !== \"\") {\n          selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === \"nproductcatcode\") {\n        selectedRecord[\"nproductcatcode\"] = comboData;\n        this.props.getProduct(this.state.selectedRecord.nproductcatcode.value, this.props.Login.userInfo, selectedRecord);\n      } else {\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onDropFile = (attachedFiles, fieldName, maxSize) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onDropProtocolFile = (attachedFiles, fieldName, maxSize) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.openFilter = () => {\n      const showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const inputValues = {\n        statusValue: this.props.Login.masterData.realStatusValue || {},\n        defaultStatusValue: this.props.Login.masterData.realStatusValue || {},\n        configVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        defaultApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        dynamicDesignMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        defaultDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {}\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"create\") {\n        this.insertProtocol(saveType, formRef);\n      }\n\n      if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"update\") {\n        this.updateProtocol(saveType, formRef);\n      }\n\n      if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"copy\") {\n        this.copySaveProtocol(saveType, formRef);\n      }\n\n      if (this.props.Login.screenName === \"IDS_PROTOCOLFILE\") {\n        this.insertProtocolFile(saveType, formRef);\n      }\n    };\n\n    this.insertProtocol = (saveType, formRef) => {\n      let Map = {};\n      let isFileupload = false;\n      Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      Map[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\n      const param = this.setProtocol(this.props.Login.masterData, this.state.selectedRecord, this.props.Login.masterData.dynamicDesignMapping[0].jsondata, this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'create', this.props.Login.comboComponents);\n      Map[\"protocol\"] = param.protocol;\n      Map[\"protocolVersion\"] = param.protocolVersion;\n      Map[\"dateList\"] = param.dateList;\n      Map[\"userinfo\"] = this.props.Login.userInfo;\n      Map[\"combinationUnique\"] = this.state.dynamicCombinationUnique;\n      let tempData = {};\n      const formData = new FormData();\n      let count = 0;\n      this.props.Login.withoutCombocomponent.map(item => {\n        if (item.inputtype === \"files\") {\n          this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\n            const fileName = create_UUID();\n            const splittedFileName = item1.name.split('.');\n            const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n            const uniquefilename = fileName + '.' + fileExtension;\n            tempData[item && item.label + '_susername_Protocol'] = this.props.Login.userInfo.susername;\n            tempData[item && item.label + '_suserrolename_Protocol'] = this.props.Login.userInfo.suserrolename;\n            tempData[item && item.label + '_nfilesize_Protocol'] = item1.size;\n            tempData[item && item.label + '_ssystemfilename_Protocol'] = uniquefilename;\n            tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false);\n            formData.append(\"uploadedFile\" + count, item1);\n            formData.append(\"uniquefilename\" + count, uniquefilename);\n            count++;\n            formData.append(\"isFileEdited\", transactionStatus.YES);\n            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n            Map['isFileupload'] = true;\n            Map[\"protocolVersion\"]['jsondata'] = { ...Map[\"protocolVersion\"]['jsondata'],\n              ...tempData\n            };\n            Map[\"protocolVersion\"]['jsonuidata'] = { ...Map[\"protocolVersion\"]['jsonuidata'],\n              ...tempData\n            };\n            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n            isFileupload = true;\n          });\n        }\n      });\n      formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(Map)));\n      formData.append(\"filecount\", count);\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Protocol\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: Map,\n        selectedId: this.state.selectedRecord[\"nprotocolcode\"],\n        operation: 'create',\n        searchRef: this.searchRef,\n        formData: formData,\n        isFileupload,\n        postParamList: this.postParamList\n      }; // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: {\n      //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n      //             openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_PROTOCOL\" }),\n      //             operation: 'create', saveType, formRef,\n      //         }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // } else {\n\n      this.props.insertProtocolAction(inputParam, this.props.Login.masterData, \"openModal\"); //}\n    };\n\n    this.updateProtocol = (saveType, formRef) => {\n      let isFileupload = false;\n      let Map = {};\n      let dynamicValue = JSON.parse(this.props.Login.masterData.dynamicDesign.jsondata.value);\n      Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      Map[\"ntranscode\"] = this.props.Login.masterData && this.props.Login.masterData.realStatusValue.ntransactionstatus;\n      const param = this.setProtocol(this.props.Login.masterData, this.state.selectedRecord, this.props.Login.masterData.dynamicDesignMapping[0].jsondata, this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'update', this.props.Login.comboComponents);\n      Map[\"protocol\"] = param.protocol;\n      Map[\"protocolVersion\"] = param.protocolVersion;\n      Map[\"protocolVersion\"][\"jsonuidata\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\n      Map[\"protocolVersion\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\n      Map[\"protocol\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\n      Map[\"nprotocolcode\"] = this.state.selectedRecord.nprotocolcode;\n      Map[\"dateList\"] = param.dateList;\n      Map['dateConstraints'] = dynamicValue.dateconstraints;\n      Map[\"combinationUnique\"] = this.state.dynamicCombinationUnique;\n      Map[\"selectedProtocol\"] = this.props.Login.masterData.selectedProtocol;\n      Map[\"userinfo\"] = this.props.Login.userInfo;\n      let tempData = {};\n      const formData = new FormData();\n      this.props.Login.withoutCombocomponent.map(item => {\n        if (item.inputtype === \"files\") {\n          if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\n            this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\n              const fileName = create_UUID();\n              const splittedFileName = item1.name.split('.');\n              const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n              const uniquefilename = fileName + '.' + fileExtension;\n              tempData[item && item.label + '_susername_Sample'] = this.props.Login.userInfo.susername;\n              tempData[item && item.label + '_suserrolename_Sample'] = this.props.Login.userInfo.suserrolename;\n              tempData[item && item.label + '_nfilesize_Sample'] = item1.size;\n              tempData[item && item.label + '_ssystemfilename_Sample'] = uniquefilename;\n              tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false);\n              formData.append(\"uploadedFile\" + index, item1);\n              formData.append(\"uniquefilename\" + index, uniquefilename);\n              formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\n              formData.append(\"isFileEdited\", transactionStatus.YES);\n              formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n              Map['isFileupload'] = true;\n              Map[\"protocolVersion\"]['jsondata'] = { ...Map[\"protocolVersion\"]['jsondata'],\n                ...tempData\n              };\n              Map[\"protocolVersion\"]['jsonuidata'] = { ...Map[\"protocolVersion\"]['jsonuidata'],\n                ...tempData\n              };\n              formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n              formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(Map)));\n              isFileupload = true;\n            });\n          }\n        }\n      });\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Protocol\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: Map,\n        action: \"editprotocol\",\n        operation: \"update\",\n        saveType,\n        formRef,\n        selectedRecord: { ...this.state.selectedRecord,\n          sloginid: this.props.Login.userInfo.sloginid\n        },\n        isFileupload,\n        formData: formData\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PROTOCOL\",\n            operation: 'update'\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.updateProtocolAction(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.setProtocol = (masterData, selectedRecord, templateList, userInfo, defaulttimeZone, operation, comboComponents) => {\n      let protocol = {};\n      let protocolVersion = {};\n      let dateList = [];\n      protocolVersion[\"ndesigntemplatemappingcode\"] = masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      protocolVersion[\"napproveconfversioncode\"] = masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      protocol[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n      protocol[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n      protocolVersion[\"sprotocolname\"] = selectedRecord[\"Protocol Name\"];\n      protocol[\"sprotocolid\"] = \"-\";\n      protocolVersion[\"sversion\"] = \"-\";\n      protocolVersion[\"jsondata\"] = {};\n      protocolVersion[\"jsonuidata\"] = {};\n      templateList && templateList.map(row => {\n        return row.children.map(column => {\n          return column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              return component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n                  if (componentrow.inputtype === \"predefineddropdown\") {\n                    protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                      value: selectedRecord[componentrow.label].value,\n                      label: selectedRecord[componentrow.label].label\n                    } : -1;\n                    protocolVersion[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n                  } else {\n                    protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                      value: selectedRecord[componentrow.label].value,\n                      label: selectedRecord[componentrow.label].label,\n                      pkey: componentrow.valuemember,\n                      nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                      source: componentrow.source,\n                      [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].vale\n                    } : -1;\n                    protocolVersion[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n                  }\n                } else if (componentrow.inputtype === \"date\") {\n                  if (componentrow.mandatory) {\n                    protocolVersion[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                    protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label];\n                  } else {\n                    protocolVersion[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                    protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label];\n                  }\n\n                  if (componentrow.timezone) {\n                    protocolVersion[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                      value: selectedRecord[`tz${componentrow.label}`].value,\n                      label: selectedRecord[`tz${componentrow.label}`].label\n                    } : defaulttimeZone ? defaulttimeZone : -1;\n                    protocolVersion[\"jsonuidata\"][`tz${componentrow.label}`] = protocolVersion[\"jsondata\"][`tz${componentrow.label}`];\n                  }\n\n                  dateList.push(componentrow.label);\n                } else {\n                  protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                  protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label];\n                }\n              });\n              return protocolVersion;\n            } else {\n              if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n                if (component.inputtype === \"predefineddropdown\") {\n                  protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                    value: selectedRecord[component.label].value,\n                    label: selectedRecord[component.label].label\n                  } : -1;\n                  protocolVersion[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n                } else {\n                  protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                    value: selectedRecord[component.label].value,\n                    label: selectedRecord[component.label].label,\n                    pkey: component.valuemember,\n                    nquerybuildertablecode: component.nquerybuildertablecode,\n                    source: component.source,\n                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n                  } : -1;\n                  protocolVersion[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n                }\n              } else if (component.inputtype === \"date\") {\n                if (component.mandatory) {\n                  console.log(typeof selectedRecord[component.label] === \"object\");\n                  protocolVersion[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                  protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label];\n                } else {\n                  protocolVersion[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n                  protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label];\n                }\n\n                if (component.timezone) {\n                  protocolVersion[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                    value: selectedRecord[`tz${component.label}`].value,\n                    label: selectedRecord[`tz${component.label}`].label\n                  } : defaulttimeZone ? defaulttimeZone : -1;\n                  protocolVersion[\"jsonuidata\"][`tz${component.label}`] = protocolVersion[\"jsondata\"][`tz${component.label}`];\n                }\n\n                dateList.push(component.label);\n              } else {\n                protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label];\n              }\n\n              return protocolVersion;\n            }\n          });\n        });\n      });\n      const param = {\n        protocol,\n        protocolVersion,\n        dateList\n      };\n      return param;\n    };\n\n    this.confirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteProtocol(\"delete\", deleteId));\n    };\n\n    this.deleteProtocol = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      inputData[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      inputData[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\n      inputData[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"protocol\",\n        selectedObject: \"selectedProtocol\",\n        primaryKeyField: \"nprotocolcode\",\n        primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\n        fetchUrl: \"protocol/getActiveProtocolById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Protocol\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        action: \"deleteprotocol\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PROTOCOL\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.completeProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\n      let protocolList = [];\n\n      if (this.props.Login.masterData.searchedProtocol !== undefined) {\n        protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\n      } else {\n        protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\n      }\n\n      let completeList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\n\n      if (completeList && completeList.length === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTPROTOCOL\"\n        })); // }else if(completeList && completeList.length>1){\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\n      } else if (completeList && completeList.length === 1) {\n        let Map = {};\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n        Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n        Map[\"userinfo\"] = this.props.Login.userInfo;\n        Map[\"masterData\"] = this.props.Login.masterData;\n        const postParam = {\n          inputListName: \"protocol\",\n          selectedObject: \"selectedProtocol\",\n          primaryKeyField: \"nprotocolcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\n          fetchUrl: \"protocol/getActiveProtocolById\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Protocol\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          postParamList: this.postParamList,\n          inputData: Map,\n          operation: \"complete\",\n          action: \"complete\",\n          postParam\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROTOCOL\",\n              operation: \"complete\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.completeProtocolAction(inputParam, masterData, \"\");\n        }\n      }\n    };\n\n    this.approveProtocol = (status, needEsign, protocolSkip, protocolTake) => {\n      let protocolList = [];\n\n      if (this.props.Login.masterData.searchedProtocol !== undefined) {\n        protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\n      } else {\n        protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\n      }\n\n      let approveList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\n\n      if (approveList && approveList.length === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTPROTOCOL\"\n        })); // }else if(completeList && completeList.length>1){\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\n      } else if (approveList && approveList.length === 1) {\n        let Map = {};\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n        Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n        Map[\"userinfo\"] = this.props.Login.userInfo;\n        Map[\"masterData\"] = this.props.Login.masterData;\n        Map[\"napprovalstatus\"] = status.ntransactionstatus;\n        const masterData = this.props.Login.masterData;\n        const inputParam = {\n          inputData: Map,\n          classUrl: this.props.Login.inputParam.classUrl,\n          operation: \"dynamicAction\",\n          methodUrl: \"Protocol\",\n          screenName: \"IDS_PROTOCOL\",\n          action: \"dynamicAction\"\n        };\n\n        if (needEsign === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROTOCOL\",\n              operation: \"dynamicAction\",\n              selectedRecord: {}\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.dynamicAction(inputParam, masterData, \"openModal\", {});\n        }\n      }\n    };\n\n    this.rejectProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\n      let protocolList = [];\n\n      if (this.props.Login.masterData.searchedProtocol !== undefined) {\n        protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\n      } else {\n        protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\n      }\n\n      let rejectList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\n\n      if (rejectList && rejectList.length === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTPROTOCOL\"\n        })); // }else if(completeList && completeList.length>1){\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\n      } else if (rejectList && rejectList.length === 1) {\n        let Map = {};\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n        Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n        Map[\"userinfo\"] = this.props.Login.userInfo;\n        Map[\"masterData\"] = this.props.Login.masterData;\n        const postParam = {\n          inputListName: \"protocol\",\n          selectedObject: \"selectedProtocol\",\n          primaryKeyField: \"nprotocolcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\n          fetchUrl: \"protocol/getActiveProtocolById\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Protocol\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: Map,\n          operation: \"reject\",\n          postParam,\n          action: \"reject\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROTOCOL\",\n              operation: \"reject\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.rejectProtocolAction(inputParam, masterData, \"\");\n        }\n      }\n    };\n\n    this.copyProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\n      let protocolList = [];\n\n      if (this.props.Login.masterData.searchedProtocol !== undefined) {\n        protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\n      } else {\n        protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\n      }\n\n      let copyList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\n\n      if (copyList && copyList.length === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTPROTOCOL\"\n        })); // }else if(copyList && copyList.length>1){\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\n      } else if (copyList && copyList.length === 1) {\n        let Map = {};\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n        Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n        Map[\"userinfo\"] = this.props.Login.userInfo;\n        Map[\"masterData\"] = this.props.Login.masterData;\n        Map[\"operation\"] = \"copy\";\n        Map[\"screenName\"] = \"IDS_PROTOCOL\";\n        Map[\"ncontrolCode\"] = ncontrolCode;\n        const inputParam = {\n          inputData: Map\n        };\n        this.props.copyProtocolAction(inputParam);\n      }\n    };\n\n    this.copySaveProtocol = (saveType, formRef) => {\n      let Map = {};\n      Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      Map[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\n      Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n      Map[\"sprotocolname\"] = this.state.selectedRecord.sprotocolname;\n      Map[\"sprotocolid\"] = \"-\";\n      Map[\"Sample Category\"] = {\n        \"pkey\": \"nproductcatcode\",\n        \"label\": this.state.selectedRecord.nproductcatcode.label,\n        \"value\": this.state.selectedRecord.nproductcatcode.value,\n        \"source\": \"productcategory\",\n        \"nproductcatcode\": this.state.selectedRecord.nproductcatcode.value,\n        \"nquerybuildertablecode\": \"107\"\n      };\n      Map[\"Sample Type\"] = {\n        \"pkey\": \"nproductcode\",\n        \"label\": this.state.selectedRecord.nproductcode.label,\n        \"value\": this.state.selectedRecord.nproductcode.value,\n        \"source\": \"product\",\n        \"nproductcatcode\": this.state.selectedRecord.nproductcode.value,\n        \"nquerybuildertablecode\": \"105\"\n      };\n      Map[\"userinfo\"] = this.props.Login.userInfo;\n      Map[\"masterData\"] = this.props.Login.masterData;\n      const inputParam = {\n        methodUrl: \"Protocol\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: Map,\n        operation: \"copy\",\n        action: \"copy\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PROTOCOL\",\n            operation: \"copy\",\n            saveType,\n            formRef\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      tabMap.set(\"IDS_PROTOCOLINFORMATION\", /*#__PURE__*/React.createElement(ProtocolView, {\n        data: this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol.length > 0 ? this.props.Login.masterData.selectedProtocol[0] : {},\n        singleItem: this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol ? this.state.singleItem : [],\n        screenName: \"IDS_PROTOCOLINFO\",\n        userInfo: this.props.Login.userInfo,\n        viewFile: this.viewFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1653,\n          columnNumber: 13\n        }\n      }));\n      tabMap.set(\"IDS_PROTOCOLHISTORY\", /*#__PURE__*/React.createElement(ProtocolHistoryTab, {\n        protocolHistory: this.props.Login.masterData.protocolHistory || [],\n        dataResult: process(this.props.Login.masterData.protocolHistory || [], this.state.historyState),\n        dataState: this.state.historyState,\n        dataStateChange: this.dataStateProtocolHistoryChange,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: \"ProtocolHistory\",\n        screenName: \"IDS_PROTOCOLHISTORY\",\n        selectedId: this.props.Login.selectedId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1666,\n          columnNumber: 13\n        }\n      }));\n      tabMap.set(\"IDS_PROTOCOLFILE\", /*#__PURE__*/React.createElement(ProtocolFileTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.deleteFileRecord,\n        protocolFile: this.props.Login.masterData.protocolFile || [],\n        getAvailableData: this.props.getAvailableData,\n        addProtocolFile: this.props.addProtocolFile,\n        viewProtocolFile: this.viewProtocolFile,\n        defaultRecord: this.defaultRecord,\n        screenName: \"IDS_PROTOCOLFILE\",\n        settings: this.props.Login.settings,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 13\n        }\n      }));\n      return tabMap;\n    };\n\n    this.insertProtocolFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let napprovalconfigversioncode = this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1;\n      let ndesigntemplatemappingcode = this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode && parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1;\n      let ntranscode = this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntranscode || -1;\n      let nprotocolcode = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\n      let protocolFileArray = [];\n      let protocolFile = {\n        nprotocolcode: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\n        nprotocolversioncode: this.props.Login.masterData.selectedProtocol[0].nprotocolversioncode,\n        nprotocolfilecode: selectedRecord.nprotocolfilecode ? selectedRecord.nprotocolfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, protocolFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? selectedRecord.ssystemfilename.split('.') : create_UUID();\n            const filesystemfileext = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? file.name.split('.')[ssystemfilename.length - 1] : fileExtension;\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nprotocolfilecode && selectedRecord.nprotocolfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name.trim(), false);\n            tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            protocolFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          protocolFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          protocolFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n          protocolFile[\"nlinkcode\"] = transactionStatus.NA;\n          protocolFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          protocolFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          protocolFileArray.push(protocolFile);\n        }\n      } else {\n        protocolFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\n        protocolFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\n        protocolFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        protocolFile[\"ssystemfilename\"] = \"\";\n        protocolFile[\"nfilesize\"] = 0;\n        protocolFileArray.push(protocolFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"protocolFile\", JSON.stringify(protocolFileArray));\n      formData.append(\"napprovalconfigversioncode\", JSON.stringify(napprovalconfigversioncode));\n      formData.append(\"ndesigntemplatemappingcode\", JSON.stringify(ndesigntemplatemappingcode));\n      formData.append(\"ntranscode\", JSON.stringify(ntranscode));\n      formData.append(\"nprotocolcode\", JSON.stringify(nprotocolcode));\n      let selectedId = null;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"protocol\",\n          selectedObject: \"selectedProtocol\",\n          primaryKeyField: \"nprotocolcode\"\n        };\n        selectedId = selectedRecord[\"nprotocolfilecode\"];\n      }\n\n      ;\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        displayName: this.props.Login.inputParam.displayName,\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"protocol\",\n        action: \"editprotocolfile\",\n        saveType,\n        formRef,\n        methodUrl: \"ProtocolFile\",\n        postParam\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n      }\n    };\n\n    this.deleteFileRecord = protocolDeleteParam => {\n      let inputParam = {};\n      inputParam = {\n        classUrl: \"protocol\",\n        methodUrl: protocolDeleteParam.methodUrl,\n        inputData: {\n          [protocolDeleteParam.methodUrl.toLowerCase()]: protocolDeleteParam.selectedRecord,\n          \"nprotocolcode\": this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\n          \"nprotocolfilecode\": protocolDeleteParam.selectedRecord.nprotocolfilecode,\n          \"userinfo\": { ...this.props.Login.userInfo,\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        operation: protocolDeleteParam.operation,\n        dataState: this.state.dataState,\n        postParam: {\n          inputListName: \"protocol\",\n          selectedObject: \"selectedProtocol\",\n          primaryKeyField: \"nprotocolcode\",\n          fetchUrl: \"protocol/getActiveProtocolById\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        },\n        action: \"deleteprotocolfile\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, protocolDeleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openChildModal: true,\n            screenName: protocolDeleteParam.screenName,\n            operation: protocolDeleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n      }\n    };\n\n    this.viewProtocolFile = props => {\n      const viewParam = {\n        operation: \"view\",\n        methodUrl: \"ProtocolFile\",\n        classUrl: \"protocol\",\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          nprotocolcode: props.nprotocolcode,\n          nprotocolfilecode: props.nprotocolfilecode\n        }\n      };\n      this.props.viewAttachment(viewParam);\n    };\n\n    this.dataStateProtocolHistoryChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.ProtocolHistory, event.dataState),\n        historyState: event.dataState\n      });\n    };\n\n    this.handleProtocolPageChange = e => {\n      this.setState({\n        protocolSkip: e.skip,\n        protocolTake: e.take\n      });\n    };\n\n    this.searchRef = React.createRef();\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      protocolSkip: 0,\n      protocolTake: this.props.Login.settings && this.props.Login.settings[3],\n      historyState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {},\n      masterStatus: \"\",\n      error: \"\",\n      enablePropertyPopup: false,\n      splitChangeWidthPercentage: 28.6,\n      firstPane: 0,\n      configVersionList: [],\n      dynamicDesignMappingList: [],\n      statusList: [],\n      mandatoryProtocolFields: [],\n      singleItem: [],\n      dynamicGridItem: [],\n      dynamicGridMoreField: [],\n      dynamicExportItem: [],\n      dynamicDateField: [],\n      dynamicTemplateField: [],\n      dynamicDateConstraints: [],\n      dynamicCombinationUnique: [],\n      dynamicExportfields: [],\n      dynamiccolumns: [],\n      editable: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  render() {\n    const actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'ascending', 'ntransactionstatus') : [];\n    const protocolList = this.props.Login.masterData.protocol ? sortData(this.props.Login.masterData.protocol, 'descending', 'nprotocolcode') : [];\n    const addId = this.state.controlMap.has(\"AddProtocol\") ? this.state.controlMap.get(\"AddProtocol\").ncontrolcode : -1;\n    const editId = this.state.controlMap.has(\"EditProtocol\") ? this.state.controlMap.get(\"EditProtocol\").ncontrolcode : -1;\n    const deleteId = this.state.controlMap.has(\"DeleteProtocol\") ? this.state.controlMap.get(\"DeleteProtocol\").ncontrolcode : -1;\n    const completeId = this.state.controlMap.has(\"CompleteProtocol\") ? this.state.controlMap.get(\"CompleteProtocol\").ncontrolcode : -1;\n    const approvalActionId = this.state.controlMap.has(\"ApprovalActionProtocol\") ? this.state.controlMap.get(\"ApprovalActionProtocol\").ncontrolcode : -1;\n    const copyId = this.state.controlMap.has(\"CopyProtocol\") ? this.state.controlMap.get(\"CopyProtocol\").ncontrolcode : -1;\n    const rejectId = this.state.controlMap.has(\"RejectProtocol\") ? this.state.controlMap.get(\"RejectProtocol\").ncontrolcode : -1;\n    const protocolAddParam = {\n      screenName: \"IDS_PROTOCOL\",\n      operation: \"create\",\n      masterData: this.props.Login.masterData,\n      selectedRecord: this.state.selectedRecord,\n      primaryKeyField: \"nprotocolcode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId\n    };\n    const protocolEditParam = {\n      screenName: \"IDS_PROTOCOL\",\n      operation: \"update\",\n      primaryKeyField: \"nprotocolcode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId,\n      masterData: this.props.Login.masterData\n    };\n    const protocolDeleteParam = {\n      screenName: \"IDS_PROTOCOL\",\n      methodUrl: \"Protocol\",\n      operation: \"delete\",\n      ncontrolCode: deleteId\n    };\n    const filterParam = {\n      inputListName: \"protocol\",\n      selectedObject: \"selectedProtocol\",\n      primaryKeyField: \"nprotocolcode\",\n      fetchUrl: \"protocol/getActiveProtocolById\",\n      fecthInputObject: {\n        napprovalconfigversioncode: parseInt(this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1,\n        ndesigntemplatemappingcode: parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\n        ntranscode: this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntransactionstatus || 0,\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.searchFields,\n      childRefs: []\n    };\n    this.postParamList = [{\n      filteredListName: \"searchedProtocol\",\n      clearFilter: \"no\",\n      searchRef: this.searchRef,\n      primaryKeyField: \"nprotocolcode\",\n      fetchUrl: \"protocol/getActiveProtocolById\",\n      fecthInputObject: {},\n      childRefs: [],\n      selectedObject: \"SelectedProtocol\",\n      inputListName: \"protocol\",\n      updatedListname: \"SelectedProtocol\",\n      unchangeList: [\"realApprovalVersionValue\", \"approvalConfigVersionValue\", \"approvalConfigVersion\", \"realDesignTemplateMappingValue\", \"dynamicDesignMappingValue\", \"dynamicDesignMapping\", \"realFilterStatusValue\", \"statusValue\", \"status\"]\n    }];\n    const breadCrumbData = [{\n      \"label\": \"IDS_CONFIGVERSION\",\n      \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" : this.props.Login.masterData.configVersionValue ? this.props.Login.masterData.configVersionValue.sversionname || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_DESIGNTEMPLATE\",\n      \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : this.props.Login.masterData.dynamicDesignMappingValue ? this.props.Login.masterData.dynamicDesignMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_STATUS\",\n      \"value\": this.props.Login.masterData.realStatusValue ? this.props.Login.masterData.realStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.statusValue ? this.props.Login.masterData.statusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"copy\") {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_PROTOCOLNAME\",\n        \"dataField\": \"sprotocolname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_PROTOCOLFILE\") {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      } else {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedProtocol || protocolList,\n      selectedMaster: this.props.Login.masterData.selectedProtocol,\n      primaryKeyField: \"nprotocolcode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (protocol, status) => {\n        this.props.getProtocolDetail({ ...protocol,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }, status);\n      },\n      selectionList: this.props.Login.masterData.realStatusValue && this.props.Login.masterData.realStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.status : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sprotocolid\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedProtocol\",\n      searchListName: \"searchedProtocol\",\n      searchRef: this.searchRef,\n      objectName: \"protocol\",\n      listName: \"IDS_PROTOCOL\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      needFilter: true,\n      needMultiSelect: false,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      handlePageChange: this.handleProtocolPageChange,\n      skip: this.state.protocolSkip,\n      take: this.state.protocolTake,\n      subFields: this.state.dynamiccolumns,\n      childTabsKey: [\"protocolHistory\", \"protocolFile\"],\n      filterParam: filterParam,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(addId) === -1,\n        onClick: () => this.getProtocolComboService(protocolAddParam),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 58\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        \"data-for\": \"tooltip-common-wrap\",\n        onClick: () => this.reloadData(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 60\n        }\n      }))),\n      filterComponent: [{\n        \"IDS_PROTOCOLFILTER\": /*#__PURE__*/React.createElement(ProtocolFilter, {\n          configVersion: this.state.configVersionList,\n          configVersionValue: this.props.Login.masterData && this.props.Login.masterData.defaultApprovalVersionValue || {},\n          dynamicDesignMapping: this.state.dynamicDesignMappingList,\n          dynamicDesignMappingValue: this.props.Login.masterData && this.props.Login.masterData.defaultDesignTemplateMappingValue || {},\n          status: this.state.statusList,\n          statusValue: this.props.Login.masterData && this.props.Login.masterData.defaultStatusValue || {},\n          onFilterComboChange: this.onFilterComboChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 61\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.length > 0 && this.props.Login.masterData.selectedProtocol[0] ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      onClick: () => this.getEditProtocolComboService(protocolEditParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      onClick: () => this.confirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(completeId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COMPLETE\"\n      }),\n      onClick: () => this.completeProtocol(completeId, this.state.protocolSkip, this.state.protocolTake),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 85\n      }\n    })), this.props.Login.masterData && this.props.Login.masterData.actionStatus && this.props.Login.masterData.actionStatus.length > 0 && actionStatus.length > 0 &&\n    /*#__PURE__*/\n    //this.props.userRoleControlRights.indexOf(approvalActionId) !== -1 &&\n    React.createElement(CustomPopOver, {\n      icon: faPalette,\n      nav: true,\n      data: actionStatus,\n      Button: false,\n      btnClasses: \"btn-circle btn_grey ml-2 spacesremovefromaction\",\n      dynamicButton: value => this.approveProtocol(value, -1, this.state.protocolSkip, this.state.protocolTake),\n      textKey: \"stransdisplaystatus\",\n      iconKey: \"ntransactionstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(copyId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      onClick: () => this.copyProtocol(copyId, this.state.protocolSkip, this.state.protocolTake),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(rejectId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REJECT\"\n      }),\n      onClick: () => this.rejectProtocol(rejectId, this.state.protocolSkip, this.state.protocolTake),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Reject, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 85\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 81\n      }\n    })))))) : \"\")))))))))), this.props.Login.openModal || this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.screenName === \"IDS_PROTOCOL\" ? this.props.Login.openModal : this.props.Login.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      noSave: this.props.Login.operation === \"view\" ? true : false,\n      mandatoryFields: this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"create\" ? this.state.mandatoryProtocolFields : mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PROTOCOL\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.dynamicDesignMapping && this.props.Login.masterData.dynamicDesignMapping[0].jsondata,\n        handleDateChange: this.dynamicHandleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputOnChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onDynamicComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        onNumericBlur: this.onNumericBlur,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        Login: this.props.Login,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        editfield: this.props.Login.operation === \"update\" ? this.state.editable : [],\n        selectedSample: this.props.Login.operation === \"update\" && this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol[0] || {},\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"copy\" ? /*#__PURE__*/React.createElement(CopyProtocol, {\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        productCategory: this.props.Login.productCategory,\n        product: this.props.Login.product,\n        productCategoryName: this.props.Login.productCategoryName,\n        productName: this.props.Login.productName,\n        protocolName: this.props.Login.protocolName,\n        selectedRecord: this.state.selectedRecord || {},\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PROTOCOLFILE\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(AddProtocolFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropProtocolFile,\n        onDropAccepted: this.onDropAccepted,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        editFiles: this.props.editFiles,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_PROTOCOLFILE\"\n        }),\n        name: \"protocolfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      selectedRecord,\n      masterData,\n      dynamicGridItem,\n      dynamicGridMoreField,\n      dynamicExportItem,\n      dynamicDateField,\n      dynamicTemplateField,\n      dynamicDateConstraints,\n      dynamicCombinationUnique,\n      dynamicExportfields,\n      configVersionList,\n      dynamicDesignMappingList,\n      statusList,\n      activeTabIndex,\n      activeTabId,\n      singleItem,\n      dynamiccolumns,\n      editable,\n      searchFields\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.masterData.configVersion !== previousProps.Login.masterData.configVersion) {\n        const configVersionListMap = constructOptionList(this.props.Login.masterData.configVersion || [], \"napprovalconfigversioncode\", \"sversionname\", \"nsorter\", \"ascending\", false);\n        configVersionList = configVersionListMap.get(\"OptionList\");\n        bool = true;\n      }\n\n      if (this.props.Login.masterData.dynamicDesignMapping !== previousProps.Login.masterData.dynamicDesignMapping) {\n        const dynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.dynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", \"ascending\", false);\n        dynamicDesignMappingList = dynamicDesignMappingListMap.get(\"OptionList\");\n        bool = true;\n      }\n\n      if (this.props.Login.masterData.status !== previousProps.Login.masterData.status) {\n        const statusListMap = constructOptionList(this.props.Login.masterData.status || [], \"ntransactionstatus\", \"sfilterstatus\", \"\", \"ascending\", false);\n        statusList = statusListMap.get(\"OptionList\");\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.masterData.dynamicDesign && this.props.Login.masterData.dynamicDesign !== previousProps.Login.masterData.dynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.dynamicDesign.jsondata && this.props.Login.masterData.dynamicDesign.jsondata.value);\n\n      if (dynamicColumn !== null) {\n        dynamicGridItem = dynamicColumn.griditem ? dynamicColumn.griditem : [];\n        dynamicGridMoreField = dynamicColumn.gridmoreitem ? dynamicColumn.gridmoreitem : [];\n        dynamicExportItem = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];\n        dynamicDateField = dynamicColumn.datefields ? dynamicColumn.datefields : [];\n        dynamicTemplateField = dynamicColumn.templatefields ? dynamicColumn.templatefields : [];\n        dynamicDateConstraints = dynamicColumn.dateconstraints ? dynamicColumn.dateconstraints : [];\n        dynamicCombinationUnique = dynamicColumn.combinationunique ? dynamicColumn.combinationunique : [];\n        dynamicExportfields = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];\n        singleItem = dynamicColumn.displayFields ? dynamicColumn.displayFields : [];\n        dynamiccolumns = dynamicColumn.listItem ? dynamicColumn.listItem : [];\n        editable = dynamicColumn.editable ? dynamicColumn.editable : [];\n        searchFields = dynamicColumn.searchfields ? dynamicColumn.searchfields : [];\n      }\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        masterData,\n        dynamicGridItem,\n        dynamicGridMoreField,\n        dynamicExportItem,\n        dynamicDateField,\n        dynamicTemplateField,\n        dynamicDateConstraints,\n        dynamicCombinationUnique,\n        dynamicExportfields,\n        configVersionList,\n        dynamicDesignMappingList,\n        statusList,\n        activeTabIndex,\n        activeTabId,\n        singleItem,\n        dynamiccolumns,\n        editable,\n        searchFields\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  callService,\n  crudMaster,\n  getProtocolTemplateByConfigVersion,\n  ProtocolFilterSubmit,\n  getPreviewTemplate,\n  getProtocolDetail,\n  addProtocolFile,\n  viewAttachment,\n  getChildValues,\n  validateEsignforProtocol,\n  completeProtocolAction,\n  dynamicAction,\n  getEditComboService,\n  updateProtocolAction,\n  rejectProtocolAction,\n  copyProtocolAction,\n  insertProtocolAction,\n  filterTransactionList,\n  getProduct\n})(injectIntl(Protocol));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/protocol/Protocol.jsx"],"names":["React","connect","injectIntl","Button","Col","Row","Card","Nav","toast","SplitterLayout","FontAwesomeIcon","faPlus","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faPalette","process","BreadcrumbComponent","ListWrapper","ContentPanel","SampleType","transactionStatus","attachmentType","ConfirmMessage","SlideOutModal","CustomPopOver","CustomTabs","TransactionListMasterJsonView","constructOptionList","getControlMap","comboChild","deleteAttachmentDropZone","showEsign","convertDateTimetoStringDBFormat","onDropAttachFileList","create_UUID","Lims_JSON_stringify","getSameRecordFromTwoArrays","sortData","DEFAULT_RETURN","ProductList","DynamicSlideout","Esign","updateStore","callService","crudMaster","getProtocolTemplateByConfigVersion","ProtocolFilterSubmit","getPreviewTemplate","getProtocolDetail","addProtocolFile","viewAttachment","getChildValues","validateEsignforProtocol","completeProtocolAction","dynamicAction","getEditComboService","updateProtocolAction","rejectProtocolAction","copyProtocolAction","insertProtocolAction","filterTransactionList","getProduct","ProtocolFilter","ProtocolFileTab","AddProtocolFile","CopyProtocol","ProtocolHistoryTab","ProtocolView","mapStateToProps","state","Login","Protocol","Component","constructor","props","onFilterComboChange","comboData","fieldName","inputParamData","value","masterData","defaultApprovalVersionValue","napprovalconfigversioncode","nFilterFlag","userinfo","userInfo","item","defaultDesignTemplateMappingValue","ndesigntemplatemappingcode","updateInfo","typeName","data","defaultStatusValue","ntransactionstatus","onFilterSubmit","realApprovalVersionValue","realDesignTemplateMappingValue","realStatusValue","inputData","parseInt","ntranscode","inputParam","protocolSkip","protocolTake","searchRef","warn","intl","formatMessage","id","reloadData","current","getProtocolComboService","protocolAddParam","screenName","operation","selectedRecord","controlCode","ncontrolCode","importData","withoutCombocomponent","mandatoryProtocolFields","Layout","dynamicDesignMapping","jsondata","templateStatus","undefined","RETIRED","info","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","mandatory","label","setState","comboComponents","childColumnList","columnList","val","mapOfFilterRegData","nsampletypecode","PROTOCOL","getEditProtocolComboService","protocolEditParam","selectedProtocol","editablecombo","iseditablereadonly","closeModal","loadEsign","openModal","openChildModal","selectedId","validateEsign","sreason","nreasoncode","spredefinedreason","password","screenData","dynamicHandleDateChange","dateValue","dateName","onDynamicComboChange","control","customName","comboName","valuemember","nquerybuildertablecode","source","child","primarykeyField","nameofdefaultcomp","name","parentList","childComboList","product","productCategory","nproductcatcode","nproductcode","Product","filter","x","length","mapOfFilter","nprojectmastercode","nprojectSpecReqd","nneedsubsample","NO","nportalrequired","ntestgroupspecrequired","loadCustomSearchFilter","onNumericInputOnChange","onNumericBlur","max","parseFloat","precision","min","onInputOnChange","event","optional","target","type","checked","YES","ACTIVE","DEACTIVE","onComboChange","deleteAttachment","file","actionType","onDropFile","attachedFiles","maxSize","onDropProtocolFile","openFilter","showFilter","closeFilter","inputValues","statusValue","configVersionValue","dynamicDesignMappingValue","onSaveClick","saveType","formRef","insertProtocol","updateProtocol","copySaveProtocol","insertProtocolFile","Map","isFileupload","param","setProtocol","defaultTimeZone","protocol","protocolVersion","dateList","dynamicCombinationUnique","tempData","formData","FormData","count","forEach","item1","index","fileName","splittedFileName","split","fileExtension","uniquefilename","susername","suserrolename","size","trim","append","JSON","stringify","classUrl","methodUrl","displayName","postParamList","dynamicValue","parse","dynamicDesign","String","nprotocolcode","dateconstraints","action","sloginid","userRoleControlRights","nformcode","templateList","defaulttimeZone","findIndex","pkey","table","vale","Date","loadcurrentdate","timezone","console","log","confirmDelete","deleteId","confirmMessage","confirm","deleteProtocol","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","fetchUrl","fecthInputObject","completeProtocol","protocolList","searchedProtocol","slice","completeList","approveProtocol","status","needEsign","approveList","rejectProtocol","rejectList","copyProtocol","copyList","sprotocolname","onTabChange","tabProps","tabDetail","tabMap","set","singleItem","viewFile","protocolHistory","historyState","dataStateProtocolHistoryChange","controlMap","genericLabel","deleteFileRecord","protocolFile","getAvailableData","viewProtocolFile","defaultRecord","settings","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","protocolFileArray","nprotocolversioncode","nprotocolfilecode","nstatus","FTP","Array","isArray","Object","assign","ssystemfilename","filesystemfileext","sdescription","NA","nfilesize","slinkfilename","slinkdescription","nlinkcode","sformname","smodulename","slanguagename","protocolDeleteParam","toLowerCase","dataState","viewParam","dataResult","ProtocolHistory","handleProtocolPageChange","e","skip","take","createRef","masterStatus","error","enablePropertyPopup","splitChangeWidthPercentage","firstPane","configVersionList","dynamicDesignMappingList","statusList","dynamicGridItem","dynamicGridMoreField","dynamicExportItem","dynamicDateField","dynamicTemplateField","dynamicDateConstraints","dynamicExportfields","dynamiccolumns","editable","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","render","actionStatus","addId","has","get","ncontrolcode","editId","completeId","approvalActionId","copyId","rejectId","filterParam","searchFieldList","searchFields","childRefs","filteredListName","clearFilter","updatedListname","unchangeList","breadCrumbData","sversionname","sregtemplatename","sfilterstatus","mandatoryFields","LINK","activeTabIndex","ALL","indexOf","timeZoneList","addMasterRecord","editMasterRecord","productCategoryName","productName","protocolName","onDropAccepted","linkMaster","editFiles","componentDidUpdate","previousProps","activeTabId","bool","values","configVersion","configVersionListMap","dynamicDesignMappingListMap","statusListMap","dynamicColumn","griditem","gridmoreitem","exportFields","datefields","templatefields","combinationunique","displayFields","listItem","searchfields"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Button,Col, Row, Card, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus,faPencilAlt, faTrashAlt, faCheckCircle,faCopy,faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { SampleType, transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { constructOptionList, getControlMap, comboChild, deleteAttachmentDropZone, showEsign, \r\n         convertDateTimetoStringDBFormat, onDropAttachFileList, create_UUID, Lims_JSON_stringify,\r\n         getSameRecordFromTwoArrays, sortData } from '../../components/CommonScript';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport Esign from '../audittrail/Esign';\r\nimport {\r\n    updateStore, callService, crudMaster, getProtocolTemplateByConfigVersion, ProtocolFilterSubmit,\r\n    getPreviewTemplate, getProtocolDetail, addProtocolFile, viewAttachment, getChildValues,validateEsignforProtocol,\r\n    completeProtocolAction,dynamicAction,getEditComboService,updateProtocolAction,rejectProtocolAction,copyProtocolAction,\r\n    insertProtocolAction,filterTransactionList,getProduct\r\n} from '../../actions';\r\nimport ProtocolFilter from './ProtocolFilter';\r\nimport ProtocolFileTab from './ProtocolFileTab';\r\nimport AddProtocolFile from './AddProtocolFile';\r\nimport CopyProtocol from './CopyProtocol';\r\nimport ProtocolHistoryTab from './ProtocolHistoryTab';\r\nimport ProtocolView from './ProtocolView';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Protocol extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            protocolSkip: 0,\r\n            protocolTake: this.props.Login.settings && this.props.Login.settings[3],\r\n            historyState : {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5\r\n            },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {},\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            enablePropertyPopup: false,\r\n            splitChangeWidthPercentage: 28.6,\r\n            firstPane: 0,\r\n            configVersionList: [],\r\n            dynamicDesignMappingList: [],\r\n            statusList: [],\r\n            mandatoryProtocolFields: [],            \r\n            singleItem: [],\r\n            dynamicGridItem: [],\r\n            dynamicGridMoreField: [],\r\n            dynamicExportItem: [],\r\n            dynamicDateField: [],\r\n            dynamicTemplateField: [],\r\n            dynamicDateConstraints: [],\r\n            dynamicCombinationUnique: [],\r\n            dynamicExportfields: [],\r\n            dynamiccolumns:[],\r\n            editable:[],\r\n\r\n           \r\n\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {       \r\n\r\n        const actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        const protocolList = this.props.Login.masterData.protocol ? sortData(this.props.Login.masterData.protocol, 'descending', 'nprotocolcode') : [];\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddProtocol\") ? this.state.controlMap.get(\"AddProtocol\").ncontrolcode : -1;\r\n        const editId = this.state.controlMap.has(\"EditProtocol\") ? this.state.controlMap.get(\"EditProtocol\").ncontrolcode : -1;\r\n        const deleteId = this.state.controlMap.has(\"DeleteProtocol\") ? this.state.controlMap.get(\"DeleteProtocol\").ncontrolcode : -1;\r\n        const completeId = this.state.controlMap.has(\"CompleteProtocol\") ? this.state.controlMap.get(\"CompleteProtocol\").ncontrolcode : -1;\r\n        const approvalActionId = this.state.controlMap.has(\"ApprovalActionProtocol\") ? this.state.controlMap.get(\"ApprovalActionProtocol\").ncontrolcode : -1;\r\n        const copyId = this.state.controlMap.has(\"CopyProtocol\") ? this.state.controlMap.get(\"CopyProtocol\").ncontrolcode : -1;\r\n        const rejectId = this.state.controlMap.has(\"RejectProtocol\") ? this.state.controlMap.get(\"RejectProtocol\").ncontrolcode : -1;\r\n\r\n        const protocolAddParam = {\r\n            screenName: \"IDS_PROTOCOL\", operation: \"create\",\r\n            masterData: this.props.Login.masterData,\r\n            selectedRecord: this.state.selectedRecord,\r\n            primaryKeyField: \"nprotocolcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        const protocolEditParam = {\r\n            screenName: \"IDS_PROTOCOL\", operation: \"update\", primaryKeyField: \"nprotocolcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editId,masterData:this.props.Login.masterData\r\n        }\r\n\r\n        const protocolDeleteParam = {\r\n            screenName: \"IDS_PROTOCOL\", methodUrl: \"Protocol\", operation: \"delete\", ncontrolCode: deleteId\r\n        }\r\n\r\n        \r\n        const filterParam = {\r\n            inputListName: \"protocol\", selectedObject: \"selectedProtocol\", primaryKeyField: \"nprotocolcode\",\r\n            fetchUrl: \"protocol/getActiveProtocolById\", fecthInputObject: { \r\n                napprovalconfigversioncode: parseInt(this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1,\r\n                ndesigntemplatemappingcode: parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                ntranscode: this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntransactionstatus || 0,\r\n                userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.searchFields,\r\n            childRefs: []\r\n\r\n        };\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedProtocol\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchRef,\r\n                primaryKeyField: \"nprotocolcode\",\r\n                fetchUrl: \"protocol/getActiveProtocolById\",\r\n                fecthInputObject: {},\r\n                childRefs: [],\r\n                selectedObject: \"SelectedProtocol\",\r\n                inputListName: \"protocol\",\r\n                updatedListname: \"SelectedProtocol\",\r\n                unchangeList: [\"realApprovalVersionValue\", \"approvalConfigVersionValue\", \"approvalConfigVersion\",\r\n                                \"realDesignTemplateMappingValue\", \"dynamicDesignMappingValue\", \"dynamicDesignMapping\", \r\n                                \"realFilterStatusValue\", \"statusValue\", \"status\"]\r\n            }\r\n        ]    \r\n        \r\n\r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_CONFIGVERSION\",\r\n                \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                    this.props.Login.masterData.configVersionValue ? this.props.Login.masterData.configVersionValue.sversionname || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_DESIGNTEMPLATE\",\r\n                \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n                    this.props.Login.masterData.dynamicDesignMappingValue ? this.props.Login.masterData.dynamicDesignMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_STATUS\",\r\n                \"value\": this.props.Login.masterData.realStatusValue ? this.props.Login.masterData.realStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.statusValue ? this.props.Login.masterData.statusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n\r\n\r\n        ];\r\n        const mandatoryFields = [];\r\n        if(this.props.Login.screenName===\"IDS_PROTOCOL\" && this.props.Login.operation===\"copy\"){\r\n            mandatoryFields.push({ \"idsName\": \"IDS_PROTOCOLNAME\", \"dataField\": \"sprotocolname\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"});\r\n\r\n        }else if (this.props.Login.screenName===\"IDS_PROTOCOLFILE\"){\r\n            if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" },\r\n                                     { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n            } else {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" });\r\n            }\r\n\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\"\r\n                                        primaryIndex={1} percentage={true}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        primaryMinSize={30}\r\n                                        secondaryMinSize={20}\r\n                                    >\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                listMasterShowIcon={1}\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedProtocol ||protocolList}\r\n                                                selectedMaster={this.props.Login.masterData.selectedProtocol}\r\n                                                primaryKeyField=\"nprotocolcode\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                getMasterDetail = {(protocol, status) => { this.props.getProtocolDetail(\r\n                                                    {\r\n                                                        ...protocol,\r\n                                                        userinfo: this.props.Login.userInfo,\r\n                                                        masterData: this.props.Login.masterData                                                  \r\n                                                       \r\n                                                    }\r\n                                                    , status);}}\r\n                                                selectionList={this.props.Login.masterData.realStatusValue\r\n                                                    && this.props.Login.masterData.realStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.status : []}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                mainField={\"sprotocolid\"}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                selectedListName=\"selectedProtocol\"\r\n                                                searchListName=\"searchedProtocol\"\r\n                                                searchRef={this.searchRef}\r\n                                                objectName=\"protocol\"\r\n                                                listName=\"IDS_PROTOCOL\"\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"stransdisplaystatus\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                needFilter={true}\r\n                                                needMultiSelect={false}\r\n                                                showStatusBlink={true}\r\n                                                callCloseFunction={true}\r\n                                                handlePageChange={this.handleProtocolPageChange}\r\n                                                skip={this.state.protocolSkip}\r\n                                                take={this.state.protocolTake}\r\n                                                subFields={this.state.dynamiccolumns}\r\n\r\n                                                childTabsKey={[\"protocolHistory\", \"protocolFile\"]}\r\n                                                filterParam = {filterParam}\r\n                                                commonActions={\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                         <Button className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                            onClick={() => this.getProtocolComboService(protocolAddParam)} >\r\n                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                        </Button>\r\n                                                        \r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                            data-for=\"tooltip-common-wrap\"\r\n                                                            onClick={() => this.reloadData()} >\r\n                                                           <RefreshIcon className='custom_icons'/>\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"IDS_PROTOCOLFILTER\":\r\n                                                            <ProtocolFilter\r\n                                                                configVersion={this.state.configVersionList}\r\n                                                                configVersionValue={this.props.Login.masterData && this.props.Login.masterData.defaultApprovalVersionValue || {}}\r\n                                                                dynamicDesignMapping={this.state.dynamicDesignMappingList}\r\n                                                                dynamicDesignMappingValue={this.props.Login.masterData && this.props.Login.masterData.defaultDesignTemplateMappingValue || {}}\r\n                                                                status={this.state.statusList}\r\n                                                                statusValue={this.props.Login.masterData && this.props.Login.masterData.defaultStatusValue || {}}\r\n                                                                onFilterComboChange={this.onFilterComboChange}\r\n                                                                userInfo={this.props.Login.userInfo}\r\n                \r\n                                                            />\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        </div>\r\n                                        <div>                                           \r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <ContentPanel className=\"panel-main-content\">\r\n                                                    {this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.protocol \r\n                                                        && this.props.Login.masterData.protocol.length > 0 && \r\n                                                        this.props.Login.masterData.selectedProtocol[0] ?\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Header>\r\n                                                                {/* <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedProtocol[0].sprotocolid}\r\n                                                                    <Card.Subtitle> */}\r\n                                                                        {/* <div className=\"d-flex product-category\"> */}\r\n                                                                                {/* <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                                    <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                                        <i className={activeIconCSS}></i>\r\n                                                                                            {this.props.Login.masterData.selectedProtocol[0].stransdisplaystatus}\r\n                                                                                    </span>\r\n                                                                                </h2> */}\r\n                                                                            <div className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                                    hidden={this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                    onClick={() => this.getEditProtocolComboService(protocolEditParam)}>\r\n                                                                                    <FontAwesomeIcon icon={faPencilAlt} />                                                            \r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                                    hidden={this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    onClick={() => this.confirmDelete(deleteId)}>\r\n                                                                                    <FontAwesomeIcon icon={faTrashAlt} />                                                            \r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                                    hidden={this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                                    onClick={() => this.completeProtocol(completeId,this.state.protocolSkip,this.state.protocolTake)}>\r\n                                                                                    <FontAwesomeIcon icon={faCheckCircle} />                                                            \r\n                                                                                </Nav.Link>\r\n                                                                                {this.props.Login.masterData && this.props.Login.masterData.actionStatus \r\n                                                                                    && this.props.Login.masterData.actionStatus.length > 0  \r\n                                                                                    && actionStatus.length > 0 && \r\n                                                                                    //this.props.userRoleControlRights.indexOf(approvalActionId) !== -1 &&\r\n                                                                                    <CustomPopOver\r\n                                                                                        icon={faPalette}\r\n                                                                                        nav={true}\r\n                                                                                        data={actionStatus}\r\n                                                                                        Button={false}\r\n                                                                                        btnClasses=\"btn-circle btn_grey ml-2 spacesremovefromaction\"\r\n                                                                                        dynamicButton={(value) => this.approveProtocol(value, -1,this.state.protocolSkip,this.state.protocolTake)}\r\n                                                                                        textKey=\"stransdisplaystatus\"\r\n                                                                                        iconKey=\"ntransactionstatus\"\r\n\r\n                                                                                    />                                                                                  \r\n                                                                                }\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                                                    hidden={this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                                    onClick={() => this.copyProtocol(copyId,this.state.protocolSkip,this.state.protocolTake)}>\r\n                                                                                    <FontAwesomeIcon icon={faCopy} />                                                            \r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                                                    hidden={this.state.userRoleControlRights && this.state.userRoleControlRights.indexOf(rejectId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REJECT\" })}\r\n                                                                                    onClick={() => this.rejectProtocol(rejectId,this.state.protocolSkip,this.state.protocolTake)}>\r\n                                                                                    <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                                                </Nav.Link>\r\n                                                                            </div>    \r\n                                                                        {/* </div>     */}\r\n                                                                    {/* </Card.Subtitle>  \r\n                                                                </Card.Title>     */}\r\n                                                            </Card.Header>\r\n                                                                <Card.Body className=\"form-static-wrap\">                                     \r\n                                                                    <Row className=\"no-gutters\">\r\n                                                                        <Col md={12}>\r\n                                                                            <Card className=\"at-tabs\">\r\n                                                                                <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                                                                            </Card>\r\n                                                                        </Col>\r\n                                                                    </Row>          \r\n                                                                </Card.Body>       \r\n                                                        </Card>\r\n                                                    :\"\"}    \r\n                                                    </ContentPanel>                                                \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>                      \r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openModal|| this.props.Login.openChildModal ?\r\n                    <SlideOutModal \r\n                        show={this.props.Login.screenName ===\"IDS_PROTOCOL\"?this.props.Login.openModal:this.props.Login.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                        mandatoryFields={this.props.Login.screenName ===\"IDS_PROTOCOL\" && this.props.Login.operation ===\"create\" ? this.state.mandatoryProtocolFields :  mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ? (\r\n                            <Esign \r\n                                operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                        ) : this.props.Login.screenName ===  \"IDS_PROTOCOL\"  && (this.props.Login.operation ===  \"create\" || this.props.Login.operation === \"update\") ? (\r\n                            <DynamicSlideout\r\n                                selectedRecord={this.props.Login.selectedRecord}\r\n                                templateData={this.props.Login.masterData.dynamicDesignMapping && this.props.Login.masterData.dynamicDesignMapping [0].jsondata}\r\n                                handleDateChange={this. dynamicHandleDateChange}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onNumericInputChange={this.onNumericInputOnChange}\r\n                                comboData={this.props.Login.comboData}\r\n                                onComboChange={this.onDynamicComboChange}\r\n                                onDropFile={this.onDropFile}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                onNumericBlur={this.onNumericBlur}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                timeZoneList={this.props.Login.timeZoneList}\r\n                                defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                Login={this.props.Login}\r\n                                addMasterRecord={this.addMasterRecord}\r\n                                editMasterRecord={this.editMasterRecord}\r\n                                editfield={ this.props.Login.operation === \"update\" ? this.state.editable: []}\r\n                                selectedSample={this.props.Login.operation === \"update\" && this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol[0] || {}}\r\n                                userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                            /> \r\n                        ) : this.props.Login.screenName ===  \"IDS_PROTOCOL\"  && this.props.Login.operation ===  \"copy\" ? (\r\n                            <CopyProtocol\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                productCategory ={this.props.Login.productCategory}\r\n                                product={this.props.Login.product}\r\n                                productCategoryName={this.props.Login.productCategoryName}\r\n                                productName={this.props.Login.productName}\r\n                                protocolName={this.props.Login.protocolName} \r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                userInfo={this.props.Login.userInfo}\r\n                            />\r\n\r\n                        ) : this.props.Login.screenName ===  \"IDS_PROTOCOLFILE\"  && (this.props.Login.operation ===  \"create\" || this.props.Login.operation === \"update\") ? (\r\n                            <AddProtocolFile\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onDrop={this.onDropProtocolFile}\r\n                                onDropAccepted={this.onDropAccepted}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                actionType={this.state.actionType}\r\n                                onComboChange={this.onComboChange}\r\n                                linkMaster={this.props.Login.linkMaster}\r\n                                editFiles={this.props.editFiles}\r\n                                maxSize={20}\r\n                                maxFiles={1}\r\n                                multiple={false}                             \r\n                                label={this.props.intl.formatMessage({ id: \"IDS_PROTOCOLFILE\" })}\r\n                                name=\"protocolfilename\"\r\n                            />\r\n                        ) : (\"\")\r\n                    }\r\n                    /> :\"\"}      \r\n                \r\n            </> \r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        if (comboData) {\r\n            let inputParamData = {};\r\n            if (fieldName === 'napprovalconfigversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\r\n                    inputParamData = {\r\n                        napprovalconfigversioncode: comboData.value,\r\n                        nFilterFlag: true,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultApprovalVersionValue: comboData.item\r\n\r\n                    };\r\n                    this.props.getProtocolTemplateByConfigVersion(inputParamData);\r\n\r\n                }\r\n            } else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\r\n                    const masterData = { ...this.props.Login.masterData, defaultDesignTemplateMappingValue: comboData.item };\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    };\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else if (fieldName === 'ntransactionstatus') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultStatusValue.ntransactionstatus) {\r\n                    const masterData = { ...this.props.Login.masterData, defaultStatusValue: comboData.item };\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    };\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        const realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\r\n        const realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\r\n        const realStatusValue = this.props.Login.masterData.defaultStatusValue;\r\n        const masterData = { ...this.props.Login.masterData, realApprovalVersionValue, realDesignTemplateMappingValue, realStatusValue };\r\n        const inputData = {\r\n            napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue  \r\n                                        && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode\r\n                                        && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) \r\n                                        || -1,   \r\n            ndesigntemplatemappingcode:this.props.Login.masterData.defaultDesignTemplateMappingValue\r\n                                       && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode \r\n                                       && parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode)\r\n                                        || -1,\r\n            ntranscode: this.props.Login.masterData.defaultStatusValue \r\n                        && this.props.Login.masterData.defaultStatusValue.ntransactionstatus \r\n                        || -1,\r\n            userinfo: this.props.Login.userInfo\r\n        };\r\n        if (inputData.napprovalconfigversioncode !== -1 && inputData.ndesigntemplatemappingcode !== -1 && inputData.ntransactionstatus !== -1) {\r\n            const inputParam = {\r\n                masterData,\r\n                inputData,\r\n                protocolSkip: this.state.protocolSkip,\r\n                protocolTake: this.state.protocolTake,\r\n                searchRef :this.searchRef\r\n            };\r\n            this.props.ProtocolFilterSubmit(inputParam);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\r\n        const realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\r\n        const realStatusValue = this.props.Login.masterData.defaultStatusValue;\r\n        const masterData = { ...this.props.Login.masterData, realApprovalVersionValue, realDesignTemplateMappingValue, realStatusValue };\r\n        const inputData = {\r\n            napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue  \r\n                                        && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode\r\n                                        && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) \r\n                                        || -1,   \r\n            ndesigntemplatemappingcode:this.props.Login.masterData.defaultDesignTemplateMappingValue\r\n                                       && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode \r\n                                       && parseInt(this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode)\r\n                                        || -1,\r\n            ntranscode: this.props.Login.masterData.defaultStatusValue \r\n                        && this.props.Login.masterData.defaultStatusValue.ntransactionstatus \r\n                        || -1,\r\n            userinfo: this.props.Login.userInfo\r\n        };\r\n        const inputParam = {\r\n            masterData,\r\n            inputData,\r\n            protocolSkip: this.state.protocolSkip,\r\n            protocolTake: this.state.protocolTake,\r\n            searchRef :this.searchRef\r\n        };\r\n        this.props.ProtocolFilterSubmit(inputParam);\r\n    }\r\n\r\n    getProtocolComboService = (protocolAddParam) => {\r\n\r\n        const screenName = protocolAddParam.screenName;\r\n        const operation = protocolAddParam.operation;\r\n        const masterData = protocolAddParam.masterData;\r\n        const selectedRecord = protocolAddParam.selectedRecord;\r\n        const userInfo = protocolAddParam.userInfo;\r\n        const controlCode = protocolAddParam.ncontrolCode;\r\n        let importData;\r\n\r\n        let data = [];\r\n        const withoutCombocomponent = [];\r\n        const mandatoryProtocolFields = [];\r\n        const Layout = this.props.Login.masterData.dynamicDesignMapping\r\n                       && this.props.Login.masterData.dynamicDesignMapping[0].jsondata;\r\n        const templateStatus = this.props.Login.masterData.dynamicDesignMapping\r\n                                && this.props.Login.masterData.dynamicDesignMapping[0].ntransactionstatus;               \r\n        if (Layout !== undefined && Layout !== null) {\r\n            if(templateStatus ==transactionStatus.RETIRED){\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVEDDESIGNTEMPLATE\" }));\r\n            }else{\r\n                Layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                        || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                        data.push(componentrow)\r\n                                    } else {\r\n                                        withoutCombocomponent.push(componentrow)\r\n                                    }\r\n                                    if (componentrow.mandatory === true) {\r\n                                        mandatoryProtocolFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": componentrow.label,\r\n                                            \"dataField\": componentrow.label,\r\n                                            \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                            \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                            \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                    || component.inputtype === \"frontendsearchfilter\" ?\r\n                                    data.push(component) : withoutCombocomponent.push(component)\r\n                                if (component.mandatory === true) {\r\n                                    mandatoryProtocolFields.push({\r\n                                        \"mandatory\": true,\r\n                                        \"idsName\": component.label,\r\n                                        \"dataField\": component.label,\r\n                                        \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                        \"controlType\": component.inputtype === \"combo\" ?\r\n                                        \"selectbox\" : \"textbox\"\r\n                                    })\r\n                                }\r\n    \r\n                            }\r\n                        })\r\n                        this.setState({ mandatoryProtocolFields: mandatoryProtocolFields });\r\n                    })\r\n    \r\n                })\r\n                const comboComponents = data;\r\n                let childColumnList = {};\r\n                data.map(columnList => {\r\n                    const val = comboChild(data, columnList, childColumnList, true);\r\n                    data = val.data;\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                });\r\n                const mapOfFilterRegData = {\r\n                    nsampletypecode: parseInt(SampleType.PROTOCOL)\r\n                };\r\n    \r\n                this.props.getPreviewTemplate(masterData, userInfo, controlCode,\r\n                    data, selectedRecord, childColumnList, comboComponents, withoutCombocomponent, false, true,\r\n                    mapOfFilterRegData, false, operation, screenName, importData);\r\n            }            \r\n        } else {\r\n            // ALPD-5466 - Gowtham R - 20/02/2025 - Protocol-->While Add the Protocol IDS Alert Popup Shown\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREPROTOCOLTEMPLATE\" }));\r\n        }\r\n\r\n    }\r\n    getEditProtocolComboService = (protocolEditParam) => {\r\n        protocolEditParam[\"toedit\"] = this.props.Login.masterData.selectedProtocol[0];\r\n        let data = [];\r\n        let editablecombo = [];\r\n        const withoutCombocomponent = [];\r\n        const Layout = this.props.Login.masterData.dynamicDesignMapping\r\n            && this.props.Login.masterData.dynamicDesignMapping[0].jsondata;\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    data.push(componentrow)\r\n                                } else {\r\n                                    withoutCombocomponent.push(componentrow)\r\n                                }\r\n                                if (componentrow.inputtype === \"combo\" && componentrow.iseditablereadonly && componentrow.iseditablereadonly === true) {\r\n                                    editablecombo.push(componentrow)\r\n                                }\r\n\r\n                                return null;\r\n                            })\r\n                        } else {\r\n                            if (component.inputtype === \"combo\" && component.iseditablereadonly && component.iseditablereadonly === true) {\r\n                                editablecombo.push(component);\r\n                            }\r\n                            else if (component.inputtype === \"combo\") {\r\n                                data.push(component);\r\n                            } else {\r\n                                withoutCombocomponent.push(component);\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data;\r\n            let childColumnList = {};\r\n            data.map(columnList => {\r\n                const val = comboChild(data, columnList, childColumnList, true);\r\n                data = val.data;\r\n                childColumnList = val.childColumnList;\r\n                return null;\r\n            });\r\n            this.props.getEditComboService(protocolEditParam,\r\n                data, this.state.selectedRecord, childColumnList,\r\n                comboComponents, withoutCombocomponent, editablecombo);\r\n        } else {\r\n            // ALPD-5466 - Gowtham R - 20/02/2025 - Protocol-->While Add the Protocol IDS Alert Popup Shown\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREPROTOCOLTEMPLATE\" }));\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\"\r\n                || this.props.Login.operation === \"complete\" \r\n                || this.props.Login.operation === \"dynamicAction\"\r\n                || this.props.Login.operation === \"reject\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            screenName = \"\";\r\n            operation = \"\";\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, selectedId: null, screenName, operation }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        };\r\n        this.props.validateEsignforProtocol(inputParam, \"openModal\");\r\n    }\r\n\r\n    dynamicHandleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDynamicComboChange = (comboData, control, customName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let comboName = customName || control.label;\r\n\r\n        if (comboData) {\r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], \"pkey\": control.valuemember,\r\n                \"nquerybuildertablecode\": control.nquerybuildertablecode, source: control.source\r\n            };\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = [];\r\n        }\r\n\r\n        const inputParam = {\r\n            child: control.child,\r\n            source: control.source,\r\n            primarykeyField: control.valuemember,\r\n            value: comboData ? comboData.value : -1,\r\n            item: comboData ? comboData.item : \"\",\r\n            label: comboData ? comboName : \"\",\r\n            nameofdefaultcomp: control.name,\r\n            screenName: \"IDS_PROTOCOL\"\r\n        };\r\n        if (comboData) {\r\n            let parentList = [];\r\n            let childComboList = [];\r\n            let childColumnList = {};\r\n            let product = false;\r\n            let productCategory = false;\r\n            let nproductcatcode = -1;\r\n            let nproductcode = -1;\r\n            if (control.name === 'Product Category') {\r\n                const Product = this.props.Login.comboComponents.filter(x => x.name === \"Product\");\r\n                nproductcatcode = selectedRecord[control.label] && selectedRecord[control.label]['value'];\r\n            }\r\n            if (control.child && control.child.length > 0) {\r\n                childComboList = getSameRecordFromTwoArrays(this.props.Login.comboComponents, control.child, \"label\");\r\n                childColumnList = {};\r\n                childComboList.map(columnList => {\r\n                    const val = comboChild(this.props.Login.comboComponents, columnList, childColumnList, false);\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                });\r\n\r\n                parentList = getSameRecordFromTwoArrays(this.props.Login.withoutCombocomponent, control.child, \"label\")\r\n                const mapOfFilter = {\r\n                    nproductcode, nproductcatcode,\r\n                    nsampletypecode: -1,\r\n                    nprojectmastercode: -1, nprojectSpecReqd: -1,\r\n                    nneedsubsample: transactionStatus.NO,\r\n                    nportalrequired: -1,\r\n                    ntestgroupspecrequired: transactionStatus.NO\r\n                }\r\n                this.props.getChildValues(inputParam, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                    childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                    [...childComboList, ...parentList], productCategory, product, mapOfFilter,\r\n                    false, false, false, false, false,\r\n                    undefined, false, this.props.Login.comboComponents)\r\n            } else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord, loadCustomSearchFilter: false, }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onNumericBlur = (control) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (selectedRecord[control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedRecord[control.label] < parseFloat(control.max))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedRecord[control.label] > parseFloat(control.min))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO ;\r\n            }else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            }\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = optional;\r\n        }\r\n        else {\r\n            if (event.target.value !== \"\") {\r\n                selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if(fieldName === \"nproductcatcode\"){\r\n            selectedRecord[\"nproductcatcode\"] = comboData;\r\n            this.props.getProduct(this.state.selectedRecord.nproductcatcode.value,                                  \r\n                                  this.props.Login.userInfo,\r\n                                  selectedRecord);\r\n        }else{\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }     \r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\r\n        this.setState({ selectedRecord, actionType: \"delete\" });\r\n    };\r\n\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    onDropProtocolFile = (attachedFiles, fieldName, maxSize) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    openFilter = () => {\r\n        const showFilter = !this.props.Login.showFilter;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n        const inputValues = {\r\n            statusValue:this.props.Login.masterData.realStatusValue || {} ,\r\n            defaultStatusValue: this.props.Login.masterData.realStatusValue || {},\r\n            configVersionValue:this.props.Login.masterData.realApprovalVersionValue || {} ,\r\n            defaultApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            dynamicDesignMappingValue:this.props.Login.masterData.realDesignTemplateMappingValue || {} ,\r\n            defaultDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {}, \r\n        };\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false,masterData: { ...this.props.Login.masterData, ...inputValues } }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"create\") {\r\n            this.insertProtocol(saveType, formRef);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"update\") {\r\n            this.updateProtocol(saveType, formRef);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_PROTOCOL\" && this.props.Login.operation === \"copy\") {\r\n            this.copySaveProtocol(saveType, formRef);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_PROTOCOLFILE\") {\r\n            this.insertProtocolFile(saveType, formRef);\r\n        }\r\n    };\r\n\r\n    insertProtocol = (saveType, formRef) => {\r\n        let Map = {};\r\n        let isFileupload = false;\r\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n        Map[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\r\n\r\n        const param = this.setProtocol(this.props.Login.masterData, this.state.selectedRecord,\r\n            this.props.Login.masterData.dynamicDesignMapping[0].jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'create', this.props.Login.comboComponents);\r\n        Map[\"protocol\"] = param.protocol;\r\n        Map[\"protocolVersion\"] = param.protocolVersion;\r\n        Map[\"dateList\"] = param.dateList;\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"combinationUnique\"] = this.state.dynamicCombinationUnique;\r\n\r\n        let tempData = {};\r\n        const formData = new FormData();\r\n        let count = 0;\r\n        this.props.Login.withoutCombocomponent.map(item => {\r\n            if (item.inputtype === \"files\") {\r\n                this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\r\n                    const fileName = create_UUID();\r\n                    const splittedFileName = item1.name.split('.');\r\n                    const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    tempData[item && item.label + '_susername_Protocol'] = this.props.Login.userInfo.susername;\r\n                    tempData[item && item.label + '_suserrolename_Protocol'] = this.props.Login.userInfo.suserrolename;\r\n                    tempData[item && item.label + '_nfilesize_Protocol'] = item1.size;\r\n                    tempData[item && item.label + '_ssystemfilename_Protocol'] = uniquefilename;\r\n                    tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n                    formData.append(\"uploadedFile\" + count, item1);\r\n                    formData.append(\"uniquefilename\" + count, uniquefilename);\r\n                    count++;\r\n                    formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                    formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                    Map['isFileupload'] = true;\r\n                    Map[\"protocolVersion\"]['jsondata'] = {\r\n                        ...Map[\"protocolVersion\"]['jsondata'],\r\n                        ...tempData\r\n                    };\r\n                    Map[\"protocolVersion\"]['jsonuidata'] = {\r\n                        ...Map[\"protocolVersion\"]['jsonuidata'],\r\n                        ...tempData\r\n                    };\r\n                    formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                    isFileupload = true;\r\n                })\r\n            }\r\n        })    \r\n        formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(Map)));\r\n        formData.append(\"filecount\", count);\r\n\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Protocol\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: Map,\r\n            selectedId: this.state.selectedRecord[\"nprotocolcode\"],\r\n            operation: 'create',\r\n            searchRef: this.searchRef,\r\n            formData: formData,\r\n            isFileupload,\r\n            postParamList: this.postParamList\r\n        };\r\n\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_PROTOCOL\" }),\r\n        //             operation: 'create', saveType, formRef,\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // } else {\r\n            this.props.insertProtocolAction(inputParam, this.props.Login.masterData, \"openModal\");\r\n        //}\r\n\r\n\r\n    }\r\n\r\n    updateProtocol = (saveType, formRef) => {\r\n        let isFileupload = false;\r\n        let Map = {};\r\n        let dynamicValue =JSON.parse(this.props.Login.masterData.dynamicDesign.jsondata.value);\r\n\r\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n        Map[\"ntranscode\"] = this.props.Login.masterData && this.props.Login.masterData.realStatusValue.ntransactionstatus;\r\n\r\n        const param = this.setProtocol(this.props.Login.masterData, this.state.selectedRecord,\r\n            this.props.Login.masterData.dynamicDesignMapping[0].jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'update', this.props.Login.comboComponents);\r\n\r\n        Map[\"protocol\"] = param.protocol;\r\n        Map[\"protocolVersion\"] = param.protocolVersion;\r\n        Map[\"protocolVersion\"][\"jsonuidata\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\r\n        Map[\"protocolVersion\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\r\n        Map[\"protocol\"][\"nprotocolcode\"] = String(this.state.selectedRecord.nprotocolcode);\r\n        Map[\"nprotocolcode\"] = this.state.selectedRecord.nprotocolcode;\r\n        Map[\"dateList\"] = param.dateList;\r\n        Map['dateConstraints'] = dynamicValue.dateconstraints;\r\n        Map[\"combinationUnique\"] = this.state.dynamicCombinationUnique;\r\n        Map[\"selectedProtocol\"] = this.props.Login.masterData.selectedProtocol;            \r\n        Map[\"userinfo\"] = this.props.Login.userInfo;   \r\n\r\n        let tempData = {};\r\n        const formData = new FormData();\r\n            this.props.Login.withoutCombocomponent.map(item => {\r\n                if (item.inputtype === \"files\") {\r\n                    if (typeof this.state.selectedRecord[item && item.label] === \"object\") {\r\n                        this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\r\n                            const fileName = create_UUID();\r\n                            const splittedFileName = item1.name.split('.');\r\n                            const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                            const uniquefilename = fileName + '.' + fileExtension;    \r\n                            tempData[item && item.label + '_susername_Sample'] = this.props.Login.userInfo.susername;\r\n                            tempData[item && item.label + '_suserrolename_Sample'] = this.props.Login.userInfo.suserrolename;\r\n                            tempData[item && item.label + '_nfilesize_Sample'] = item1.size;\r\n                            tempData[item && item.label + '_ssystemfilename_Sample'] = uniquefilename;\r\n                            tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n                            formData.append(\"uploadedFile\" + index, item1);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\r\n                            formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                            Map['isFileupload'] = true;\r\n                            Map[\"protocolVersion\"]['jsondata'] = {\r\n                                ...Map[\"protocolVersion\"]['jsondata'],\r\n                                ...tempData\r\n                            };\r\n                            Map[\"protocolVersion\"]['jsonuidata'] = {\r\n                                ...Map[\"protocolVersion\"]['jsonuidata'],\r\n                                ...tempData\r\n                            };\r\n                            formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                            formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(Map)));\r\n                            isFileupload = true;\r\n                        }\r\n                        )\r\n                    }\r\n                }\r\n            })\r\n            \r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Protocol\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: Map,\r\n                action:\"editprotocol\",\r\n                operation: \"update\", saveType, formRef,\r\n                selectedRecord: { ...this.state.selectedRecord, sloginid: this.props.Login.userInfo.sloginid },           \r\n                isFileupload, formData: formData\r\n            };\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        \r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: \"IDS_PROTOCOL\",\r\n                        operation: 'update'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.updateProtocolAction(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n    };\r\n\r\n    setProtocol = (masterData, selectedRecord, templateList, userInfo, defaulttimeZone, operation, comboComponents) => {\r\n        let protocol = {};\r\n        let protocolVersion = {};\r\n        let dateList = [];\r\n        protocolVersion[\"ndesigntemplatemappingcode\"] = masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        protocolVersion[\"napproveconfversioncode\"] = masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n        protocol[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        protocol[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        protocolVersion[\"sprotocolname\"] = selectedRecord[\"Protocol Name\"];\r\n        protocol[\"sprotocolid\"] = \"-\";\r\n        protocolVersion[\"sversion\"] = \"-\";\r\n        protocolVersion[\"jsondata\"] = {};\r\n        protocolVersion[\"jsonuidata\"] = {};\r\n\r\n\r\n        templateList && templateList.map(row => {\r\n            return row.children.map(column => {\r\n                return column.children.map(component => {\r\n                    if (component.hasOwnProperty(\"children\")) {\r\n                        return component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\r\n                                if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                    protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            value: selectedRecord[componentrow.label].value,\r\n                                            label: selectedRecord[componentrow.label].label\r\n\r\n\r\n                                        } : -1\r\n                                    protocolVersion[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                                } else {\r\n                                    protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            value: selectedRecord[componentrow.label].value,\r\n                                            label: selectedRecord[componentrow.label].label,\r\n                                            pkey: componentrow.valuemember,\r\n                                            nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                            source: componentrow.source,\r\n                                            [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                                selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                :\r\n                                                selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                        : selectedRecord[componentrow.label].vale\r\n\r\n                                        } : -1\r\n                                    protocolVersion[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                                }\r\n                            }\r\n                            else if (componentrow.inputtype === \"date\") {\r\n                                if (componentrow.mandatory) {\r\n                                    protocolVersion[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\";\r\n\r\n                                    protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label]\r\n                                } else {\r\n                                    protocolVersion[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                        typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                            typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                                convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                    new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                                : selectedRecord[componentrow.label] ?\r\n                                                    selectedRecord[componentrow.label] : \"\" :\r\n                                        selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                                convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                    new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                                : selectedRecord[componentrow.label] ?\r\n                                                    selectedRecord[componentrow.label]\r\n                                                    : \"\" : \"\";\r\n\r\n                                    protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label]\r\n                                }\r\n                                if (componentrow.timezone) {\r\n                                    protocolVersion[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                        { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                        defaulttimeZone ? defaulttimeZone : -1\r\n\r\n                                    protocolVersion[\"jsonuidata\"][`tz${componentrow.label}`] = protocolVersion[\"jsondata\"][`tz${componentrow.label}`]\r\n                                }\r\n                                dateList.push(componentrow.label)\r\n                            }\r\n\r\n                            else {\r\n                                protocolVersion[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    selectedRecord[componentrow.label] : \"\"\r\n\r\n                                protocolVersion[\"jsonuidata\"][componentrow.label] = protocolVersion[\"jsondata\"][componentrow.label]\r\n                            }\r\n                        })\r\n                        return protocolVersion;\r\n\r\n                    }\r\n                    else {\r\n                        if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\r\n                            if (component.inputtype === \"predefineddropdown\") {\r\n                                protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    {\r\n                                        value: selectedRecord[component.label].value,\r\n                                        label: selectedRecord[component.label].label,\r\n\r\n\r\n                                    } : -1\r\n                                protocolVersion[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                            } else {\r\n                                protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    {\r\n                                        value: selectedRecord[component.label].value,\r\n                                        label: selectedRecord[component.label].label,\r\n                                        pkey: component.valuemember,\r\n                                        nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                        source: component.source,\r\n                                        [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                            selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                            :\r\n                                            selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                    : selectedRecord[component.label].value\r\n\r\n                                    } : -1\r\n                                protocolVersion[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === \"date\") {\r\n                            if (component.mandatory) {\r\n                                console.log(typeof selectedRecord[component.label] === \"object\")\r\n                                protocolVersion[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                        selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\";\r\n\r\n                                protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label]\r\n                            } else {\r\n                                protocolVersion[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                    typeof selectedRecord[component.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[component.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                                new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[component.label] ?\r\n                                                selectedRecord[component.label] : \"\" :\r\n                                    selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                                protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label]\r\n                            }\r\n                            if (component.timezone) {\r\n                                protocolVersion[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                    { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                    defaulttimeZone ? defaulttimeZone : -1\r\n\r\n                                protocolVersion[\"jsonuidata\"][`tz${component.label}`] = protocolVersion[\"jsondata\"][`tz${component.label}`]\r\n                            }\r\n                            dateList.push(component.label)\r\n                        }\r\n                        else {\r\n                            protocolVersion[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                selectedRecord[component.label] : \"\"\r\n\r\n                            protocolVersion[\"jsonuidata\"][component.label] = protocolVersion[\"jsondata\"][component.label]\r\n                        }\r\n                        return protocolVersion;\r\n                    }\r\n                }\r\n                )\r\n            })\r\n        })\r\n        const param = { protocol, protocolVersion, dateList };\r\n        return param;\r\n\r\n    };\r\n\r\n    confirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteProtocol(\"delete\", deleteId));\r\n    }\r\n\r\n    deleteProtocol = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        inputData[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n        inputData[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\r\n        inputData[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"protocol\", selectedObject: \"selectedProtocol\",\r\n            primaryKeyField: \"nprotocolcode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\r\n            fetchUrl: \"protocol/getActiveProtocolById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Protocol\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            action:\"deleteprotocol\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_PROTOCOL\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    completeProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\r\n\r\n        let protocolList =[];\r\n        if (this.props.Login.masterData.searchedProtocol !== undefined) {\r\n            protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, \r\n                           this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\r\n        } else {\r\n            protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\r\n        }\r\n        let completeList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\r\n        if(completeList && completeList.length===0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROTOCOL\" }));\r\n        // }else if(completeList && completeList.length>1){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\r\n        }else if(completeList && completeList.length===1){                \r\n            let Map = {};\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n            Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"masterData\"] = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"protocol\", selectedObject: \"selectedProtocol\",\r\n                primaryKeyField: \"nprotocolcode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\r\n                fetchUrl: \"protocol/getActiveProtocolById\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            const inputParam = {\r\n                methodUrl: \"Protocol\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                postParamList: this.postParamList,\r\n                inputData: Map,\r\n                operation: \"complete\",\r\n                action:\"complete\",\r\n                postParam\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_PROTOCOL\", operation:\"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n                this.props.completeProtocolAction(inputParam, masterData, \"\");\r\n            }\r\n        }\r\n\r\n    }\r\n    approveProtocol = (status, needEsign,protocolSkip, protocolTake) => {\r\n\r\n        let protocolList =[];\r\n        if (this.props.Login.masterData.searchedProtocol !== undefined) {\r\n            protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, \r\n                           this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\r\n        } else {\r\n            protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\r\n        }\r\n        let approveList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\r\n        if(approveList && approveList.length===0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROTOCOL\" }));\r\n        // }else if(completeList && completeList.length>1){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\r\n        }else if(approveList && approveList.length===1){                \r\n            let Map = {};\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n            Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"masterData\"] = this.props.Login.masterData;           \r\n            Map[\"napprovalstatus\"] = status.ntransactionstatus;\r\n            const masterData = this.props.Login.masterData;\r\n            const inputParam = {\r\n                inputData: Map,\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                operation: \"dynamicAction\",\r\n                methodUrl: \"Protocol\",\r\n                screenName: \"IDS_PROTOCOL\",\r\n                action: \"dynamicAction\"\r\n            };\r\n            if (needEsign === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_PROTOCOL\", operation: \"dynamicAction\", selectedRecord: {}\r\n                    }\r\n                };\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.dynamicAction(inputParam, masterData, \"openModal\", {});\r\n            }\r\n        }    \r\n    }\r\n\r\n    rejectProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\r\n\r\n        let protocolList =[];\r\n        if (this.props.Login.masterData.searchedProtocol !== undefined) {\r\n            protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, \r\n                           this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\r\n        } else {\r\n            protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\r\n        }\r\n        let rejectList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\r\n        if(rejectList && rejectList.length===0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROTOCOL\" }));\r\n        // }else if(completeList && completeList.length>1){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\r\n        }else if(rejectList && rejectList.length===1){                \r\n            let Map = {};\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n            Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"masterData\"] = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"protocol\", selectedObject: \"selectedProtocol\",\r\n                primaryKeyField: \"nprotocolcode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\r\n                fetchUrl: \"protocol/getActiveProtocolById\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            };\r\n            const inputParam = {\r\n                methodUrl: \"Protocol\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: Map,\r\n                operation: \"reject\",\r\n                postParam,\r\n                action: \"reject\"\r\n            };\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_PROTOCOL\", operation:\"reject\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n                this.props.rejectProtocolAction(inputParam, masterData, \"\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    copyProtocol = (ncontrolCode, protocolSkip, protocolTake) => {\r\n        let protocolList =[];\r\n        if (this.props.Login.masterData.searchedProtocol !== undefined) {\r\n            protocolList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedProtocol, \r\n                           this.props.Login.masterData.searchedProtocol.slice(protocolSkip, protocolSkip + protocolTake), \"nprotocolcode\");\r\n        } else {\r\n            protocolList = this.props.Login.masterData.protocol && this.props.Login.masterData.protocol.slice(protocolSkip, protocolSkip + protocolTake);\r\n        }\r\n        let copyList = getSameRecordFromTwoArrays(protocolList || [], this.props.Login.masterData.selectedProtocol, \"nprotocolcode\");\r\n        if(copyList && copyList.length===0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROTOCOL\" }));\r\n        // }else if(copyList && copyList.length>1){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEPROTOCOL\" }));\r\n        }else if(copyList && copyList.length===1){                \r\n            let Map = {};\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n            Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n            Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"masterData\"] = this.props.Login.masterData;\r\n            Map[\"operation\"] = \"copy\";\r\n            Map[\"screenName\"]= \"IDS_PROTOCOL\";\r\n            Map[\"ncontrolCode\"]=ncontrolCode;\r\n            const inputParam = {               \r\n                inputData: Map,\r\n            };        \r\n            this.props.copyProtocolAction(inputParam);            \r\n        }\r\n    }\r\n    \r\n    copySaveProtocol = (saveType, formRef) => {\r\n\r\n        let Map = {};\r\n        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        Map[\"napprovalconfigversioncode\"] = this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n        Map[\"ntranscode\"] = this.props.Login.masterData.realStatusValue.ntransactionstatus;\r\n        Map[\"nprotocolcode\"] = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n        Map[\"sprotocolname\"] = this.state.selectedRecord.sprotocolname;\r\n        Map[\"sprotocolid\"] = \"-\";\r\n        Map[\"Sample Category\"]= {\r\n            \"pkey\": \"nproductcatcode\",\r\n            \"label\": this.state.selectedRecord.nproductcatcode.label,\r\n            \"value\": this.state.selectedRecord.nproductcatcode.value,\r\n            \"source\": \"productcategory\",\r\n            \"nproductcatcode\": this.state.selectedRecord.nproductcatcode.value,\r\n            \"nquerybuildertablecode\": \"107\"\r\n        }\r\n\r\n        Map[\"Sample Type\"]= {\r\n            \"pkey\": \"nproductcode\",\r\n            \"label\": this.state.selectedRecord.nproductcode.label,\r\n            \"value\": this.state.selectedRecord.nproductcode.value,\r\n            \"source\": \"product\",\r\n            \"nproductcatcode\": this.state.selectedRecord.nproductcode.value,\r\n            \"nquerybuildertablecode\": \"105\"\r\n        }\r\n     \r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"masterData\"] = this.props.Login.masterData;\r\n       \r\n        const inputParam = {   \r\n            methodUrl: \"Protocol\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: Map,\r\n            operation: \"copy\", \r\n            action:\"copy\"           \r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {                     \r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: \"IDS_PROTOCOL\", operation:\"copy\",saveType,formRef\r\n                }\r\n            };\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n       tabMap.set(\"IDS_PROTOCOLINFORMATION\",\r\n            <ProtocolView\r\n                 data={(this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol.length > 0) ?\r\n                        this.props.Login.masterData.selectedProtocol[0]: {}}\r\n                singleItem={this.props.Login.masterData.selectedProtocol && this.props.Login.masterData.selectedProtocol ?\r\n                        this.state.singleItem : []}\r\n                screenName=\"IDS_PROTOCOLINFO\"\r\n                userInfo={this.props.Login.userInfo}\r\n                viewFile={this.viewFile}\r\n\r\n            />\r\n       )\r\n\r\n        tabMap.set(\"IDS_PROTOCOLHISTORY\",\r\n            <ProtocolHistoryTab\r\n                protocolHistory={this.props.Login.masterData.protocolHistory || []}\r\n                dataResult={process(this.props.Login.masterData.protocolHistory || [], this.state.historyState)}\r\n                dataState={this.state.historyState}\r\n                dataStateChange={this.dataStateProtocolHistoryChange}\r\n                userInfo={this.props.Login.userInfo}\r\n                methodUrl={\"ProtocolHistory\"}\r\n                screenName=\"IDS_PROTOCOLHISTORY\"\r\n                selectedId = {this.props.Login.selectedId}\r\n\r\n            />\r\n        ) \r\n        \r\n        tabMap.set(\"IDS_PROTOCOLFILE\",\r\n            <ProtocolFileTab\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                genericLabel={this.props.Login.genericLabel}\r\n                inputParam={this.props.Login.inputParam}\r\n                deleteRecord={this.deleteFileRecord}\r\n                protocolFile={this.props.Login.masterData.protocolFile || []}\r\n                getAvailableData={this.props.getAvailableData}\r\n                addProtocolFile={this.props.addProtocolFile}\r\n                viewProtocolFile={this.viewProtocolFile}\r\n                defaultRecord={this.defaultRecord}\r\n                screenName={\"IDS_PROTOCOLFILE\"}\r\n                settings={this.props.Login.settings}\r\n                masterData={this.props.Login.masterData}\r\n            />);\r\n        return tabMap;\r\n    }\r\n\r\n    insertProtocolFile = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let napprovalconfigversioncode = this.props.Login.masterData.defaultApprovalVersionValue \r\n                                         && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode \r\n                                         && parseInt(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) || -1;\r\n        let ndesigntemplatemappingcode = this.props.Login.masterData.defaultDesignTemplateMappingValue \r\n                                         && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                                         && parseInt( this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1;\r\n        let ntranscode = this.props.Login.masterData.defaultStatusValue && this.props.Login.masterData.defaultStatusValue.ntranscode || -1;\r\n        let nprotocolcode = this.props.Login.masterData.selectedProtocol[0].nprotocolcode;\r\n        let protocolFileArray = [];\r\n        let protocolFile = {\r\n            nprotocolcode: this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\r\n            nprotocolversioncode: this.props.Login.masterData.selectedProtocol[0].nprotocolversioncode,\r\n            nprotocolfilecode: selectedRecord.nprotocolfilecode ? selectedRecord.nprotocolfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, protocolFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? selectedRecord.ssystemfilename.split('.') : create_UUID();\r\n                    const filesystemfileext = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? file.name.split('.')[ssystemfilename.length - 1] : fileExtension;\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nprotocolfilecode && selectedRecord.nprotocolfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = Lims_JSON_stringify(file.name.trim(), false);\r\n                    tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    protocolFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                protocolFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\r\n                protocolFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\r\n                protocolFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                protocolFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                protocolFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                protocolFileArray.push(protocolFile);\r\n            }\r\n        } else {\r\n            protocolFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\r\n            protocolFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\r\n            protocolFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            protocolFile[\"ssystemfilename\"] = \"\";\r\n            protocolFile[\"nfilesize\"] = 0;\r\n            protocolFileArray.push(protocolFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"protocolFile\", JSON.stringify(protocolFileArray));\r\n        formData.append(\"napprovalconfigversioncode\", JSON.stringify(napprovalconfigversioncode));\r\n        formData.append(\"ndesigntemplatemappingcode\", JSON.stringify(ndesigntemplatemappingcode));\r\n        formData.append(\"ntranscode\", JSON.stringify(ntranscode));\r\n        formData.append(\"nprotocolcode\", JSON.stringify(nprotocolcode));\r\n\r\n        let selectedId = null;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"protocol\", selectedObject: \"selectedProtocol\", primaryKeyField: \"nprotocolcode\" };\r\n            selectedId = selectedRecord[\"nprotocolfilecode\"];\r\n        };\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                }\r\n            },\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.props.Login.operation,\r\n            classUrl: \"protocol\",\r\n            action:\"editprotocolfile\",\r\n            saveType, formRef, methodUrl: \"ProtocolFile\", postParam\r\n        };\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData }, saveType\r\n                }\r\n            };\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    deleteFileRecord = (protocolDeleteParam) => {\r\n        let inputParam = {};\r\n        inputParam = {\r\n            classUrl: \"protocol\",\r\n            methodUrl: protocolDeleteParam.methodUrl,\r\n            inputData: {\r\n                [protocolDeleteParam.methodUrl.toLowerCase()]: protocolDeleteParam.selectedRecord,\r\n                \"nprotocolcode\": this.props.Login.masterData.selectedProtocol[0].nprotocolcode,\r\n                \"nprotocolfilecode\":protocolDeleteParam.selectedRecord.nprotocolfilecode,\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                }\r\n            },\r\n            operation: protocolDeleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            postParam: {\r\n                inputListName: \"protocol\", selectedObject: \"selectedProtocol\", primaryKeyField: \"nprotocolcode\",\r\n                fetchUrl: \"protocol/getActiveProtocolById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            },\r\n            action:\"deleteprotocolfile\",\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, protocolDeleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openChildModal: true,\r\n                    screenName: protocolDeleteParam.screenName, operation: protocolDeleteParam.operation\r\n                }\r\n            };\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n        }\r\n    }\r\n    \r\n    viewProtocolFile = (props) => {\r\n        const viewParam = {\r\n            operation: \"view\",\r\n            methodUrl: \"ProtocolFile\",\r\n            classUrl: \"protocol\",\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprotocolcode: props.nprotocolcode,\r\n                nprotocolfilecode: props.nprotocolfilecode,\r\n            }\r\n        };\r\n        this.props.viewAttachment(viewParam);\r\n    }\r\n\r\n    dataStateProtocolHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.ProtocolHistory, event.dataState),\r\n            historyState: event.dataState\r\n        });\r\n    }\r\n\r\n    handleProtocolPageChange = e => {\r\n        this.setState({\r\n            protocolSkip: e.skip,\r\n            protocolTake: e.take\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n\r\n        let { userRoleControlRights, controlMap, selectedRecord, masterData, dynamicGridItem, dynamicGridMoreField, \r\n              dynamicExportItem, dynamicDateField, dynamicTemplateField,dynamicDateConstraints, dynamicCombinationUnique, \r\n              dynamicExportfields, configVersionList,dynamicDesignMappingList, statusList,activeTabIndex,\r\n              activeTabId,singleItem,dynamiccolumns,editable,searchFields } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if(this.props.Login.masterData.configVersion !== previousProps.Login.masterData.configVersion){\r\n                const configVersionListMap = constructOptionList(this.props.Login.masterData.configVersion || [], \"napprovalconfigversioncode\", \"sversionname\", \"nsorter\", \"ascending\", false);\r\n                configVersionList = configVersionListMap.get(\"OptionList\");\r\n                bool = true;\r\n            }            \r\n\r\n            if(this.props.Login.masterData.dynamicDesignMapping !== previousProps.Login.masterData.dynamicDesignMapping){\r\n                const dynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.dynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\",\"nsorter\", \"ascending\", false);\r\n                dynamicDesignMappingList = dynamicDesignMappingListMap.get(\"OptionList\");\r\n                bool = true;\r\n            }\r\n            \r\n\r\n            if (this.props.Login.masterData.status !== previousProps.Login.masterData.status) {\r\n                const statusListMap = constructOptionList(this.props.Login.masterData.status || [], \"ntransactionstatus\", \"sfilterstatus\", \"\",\"ascending\", false);\r\n                statusList = statusListMap.get(\"OptionList\");\r\n                bool = true;\r\n            }    \r\n\r\n            \r\n        }\r\n        if (this.props.Login.masterData.dynamicDesign && this.props.Login.masterData.dynamicDesign !== previousProps.Login.masterData.dynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.dynamicDesign.jsondata && this.props.Login.masterData.dynamicDesign.jsondata.value)\r\n            if (dynamicColumn !== null) {\r\n                dynamicGridItem = dynamicColumn.griditem ? dynamicColumn.griditem : [];\r\n                dynamicGridMoreField = dynamicColumn.gridmoreitem ? dynamicColumn.gridmoreitem : [];\r\n                dynamicExportItem = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];\r\n                dynamicDateField = dynamicColumn.datefields ? dynamicColumn.datefields : [];\r\n                dynamicTemplateField = dynamicColumn.templatefields ? dynamicColumn.templatefields : [];\r\n                dynamicDateConstraints = dynamicColumn.dateconstraints ? dynamicColumn.dateconstraints : [];\r\n                dynamicCombinationUnique = dynamicColumn.combinationunique ? dynamicColumn.combinationunique : [];\r\n                dynamicExportfields = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];   \r\n                singleItem = dynamicColumn.displayFields ? dynamicColumn.displayFields : [];\r\n                dynamiccolumns = dynamicColumn.listItem ? dynamicColumn.listItem : [];\r\n                editable = dynamicColumn.editable ? dynamicColumn.editable:[];\r\n                searchFields = dynamicColumn.searchfields ?  dynamicColumn.searchfields:[];\r\n                \r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord, masterData, dynamicGridItem, dynamicGridMoreField, \r\n                dynamicExportItem, dynamicDateField, dynamicTemplateField,dynamicDateConstraints, dynamicCombinationUnique,\r\n                dynamicExportfields, configVersionList, dynamicDesignMappingList, statusList,activeTabIndex, activeTabId,singleItem,\r\n                dynamiccolumns,editable,searchFields\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateStore, callService, crudMaster, getProtocolTemplateByConfigVersion, ProtocolFilterSubmit,\r\n    getPreviewTemplate, getProtocolDetail, addProtocolFile, viewAttachment, getChildValues,validateEsignforProtocol,\r\n    completeProtocolAction,dynamicAction,getEditComboService,updateProtocolAction,rejectProtocolAction,copyProtocolAction,\r\n    insertProtocolAction,filterTransactionList,getProduct\r\n})(injectIntl(Protocol))"]},"metadata":{},"sourceType":"module"}